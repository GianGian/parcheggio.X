

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Apr 24 11:50:41 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2685
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    50                           	psect	param0,global,class=BANK0,space=1,delta=1
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52  0000                     
    53                           	psect	idataCOMRAM
    54  004EAA                     __pidataCOMRAM:
    55                           	opt stack 0
    56                           
    57                           ;initializer for _delay_quartz_frequency_value
    58  004EAA  10                 	db	16
    59                           
    60                           	psect	idataBANK0
    61  004EA8                     __pidataBANK0:
    62                           	opt stack 0
    63                           
    64                           ;initializer for _spazio_parcheggio
    65  004EA8  0064               	dw	100
    66                           
    67                           	psect	smallconst
    68  000D00                     __psmallconst:
    69                           	opt stack 0
    70  000D00  00                 	db	0
    71  000D01                     atan@coeff_a:
    72                           	opt stack 0
    73  000D01  3C06               	dw	15366
    74  000D03  4204               	dw	16900
    75  000D05  9F7D               	dw	40829
    76  000D07  426A               	dw	17002
    77  000D09  905C               	dw	36956
    78  000D0B  4201               	dw	16897
    79  000D0D  4D60               	dw	19808
    80  000D0F  40BB               	dw	16571
    81  000D11  EC51               	dw	60497
    82  000D13  3E47               	dw	15943
    83  000D15  8DDE               	dw	36318
    84  000D17  BB1F               	dw	47903
    85  000D19                     __end_ofatan@coeff_a:
    86                           	opt stack 0
    87  000D19                     atan@coeff_b:
    88                           	opt stack 0
    89  000D19  3C06               	dw	15366
    90  000D1B  4204               	dw	16900
    91  000D1D  59C0               	dw	22976
    92  000D1F  428B               	dw	17035
    93  000D21  0474               	dw	1140
    94  000D23  4244               	dw	16964
    95  000D25  9BF9               	dw	39929
    96  000D27  414F               	dw	16719
    97  000D29  0000               	dw	0
    98  000D2B  3F80               	dw	16256
    99  000D2D                     __end_ofatan@coeff_b:
   100                           	opt stack 0
   101  0000                     _RXB1CON	set	3920
   102  0000                     _RXB1CONbits	set	3920
   103  0000                     _RXB1D0	set	3926
   104  0000                     _RXB1D1	set	3927
   105  0000                     _RXB1D2	set	3928
   106  0000                     _RXB1D3	set	3929
   107  0000                     _RXB1D4	set	3930
   108  0000                     _RXB1D5	set	3931
   109  0000                     _RXB1D6	set	3932
   110  0000                     _RXB1D7	set	3933
   111  0000                     _RXB1DLC	set	3925
   112  0000                     _RXB1DLCbits	set	3925
   113  0000                     _RXB1EIDH	set	3923
   114  0000                     _RXB1EIDL	set	3924
   115  0000                     _RXB1SIDH	set	3921
   116  0000                     _RXB1SIDL	set	3922
   117  0000                     _RXB1SIDLbits	set	3922
   118  0000                     _RXF0EIDH	set	3842
   119  0000                     _RXF0EIDL	set	3843
   120  0000                     _RXF0SIDH	set	3840
   121  0000                     _RXF0SIDL	set	3841
   122  0000                     _RXF0SIDLbits	set	3841
   123  0000                     _RXF1EIDH	set	3846
   124  0000                     _RXF1EIDL	set	3847
   125  0000                     _RXF1SIDH	set	3844
   126  0000                     _RXF1SIDL	set	3845
   127  0000                     _RXF1SIDLbits	set	3845
   128  0000                     _RXF2EIDH	set	3850
   129  0000                     _RXF2EIDL	set	3851
   130  0000                     _RXF2SIDH	set	3848
   131  0000                     _RXF2SIDL	set	3849
   132  0000                     _RXF2SIDLbits	set	3849
   133  0000                     _RXF3EIDH	set	3854
   134  0000                     _RXF3EIDL	set	3855
   135  0000                     _RXF3SIDH	set	3852
   136  0000                     _RXF3SIDL	set	3853
   137  0000                     _RXF3SIDLbits	set	3853
   138  0000                     _RXF4EIDH	set	3858
   139  0000                     _RXF4EIDL	set	3859
   140  0000                     _RXF4SIDH	set	3856
   141  0000                     _RXF4SIDL	set	3857
   142  0000                     _RXF4SIDLbits	set	3857
   143  0000                     _RXF5EIDH	set	3862
   144  0000                     _RXF5EIDL	set	3863
   145  0000                     _RXF5SIDH	set	3860
   146  0000                     _RXF5SIDL	set	3861
   147  0000                     _RXF5SIDLbits	set	3861
   148  0000                     _RXM0EIDH	set	3866
   149  0000                     _RXM0EIDL	set	3867
   150  0000                     _RXM0SIDH	set	3864
   151  0000                     _RXM0SIDL	set	3865
   152  0000                     _RXM0SIDLbits	set	3865
   153  0000                     _RXM1EIDH	set	3870
   154  0000                     _RXM1EIDL	set	3871
   155  0000                     _RXM1SIDH	set	3868
   156  0000                     _RXM1SIDL	set	3869
   157  0000                     _RXM1SIDLbits	set	3869
   158  0000                     _TXB0CONbits	set	3904
   159  0000                     _TXB0D0	set	3910
   160  0000                     _TXB0D1	set	3911
   161  0000                     _TXB0D2	set	3912
   162  0000                     _TXB0D3	set	3913
   163  0000                     _TXB0D4	set	3914
   164  0000                     _TXB0D5	set	3915
   165  0000                     _TXB0D6	set	3916
   166  0000                     _TXB0D7	set	3917
   167  0000                     _TXB0DLC	set	3909
   168  0000                     _TXB0DLCbits	set	3909
   169  0000                     _TXB0EIDH	set	3907
   170  0000                     _TXB0EIDL	set	3908
   171  0000                     _TXB0SIDH	set	3905
   172  0000                     _TXB0SIDL	set	3906
   173  0000                     _TXB0SIDLbits	set	3906
   174  0000                     _TXB1CONbits	set	3888
   175  0000                     _TXB1D0	set	3894
   176  0000                     _TXB1D1	set	3895
   177  0000                     _TXB1D2	set	3896
   178  0000                     _TXB1D3	set	3897
   179  0000                     _TXB1D4	set	3898
   180  0000                     _TXB1D5	set	3899
   181  0000                     _TXB1D6	set	3900
   182  0000                     _TXB1D7	set	3901
   183  0000                     _TXB1DLC	set	3893
   184  0000                     _TXB1DLCbits	set	3893
   185  0000                     _TXB1EIDH	set	3891
   186  0000                     _TXB1EIDL	set	3892
   187  0000                     _TXB1SIDH	set	3889
   188  0000                     _TXB1SIDL	set	3890
   189  0000                     _TXB1SIDLbits	set	3890
   190  0000                     _TXB2CONbits	set	3872
   191  0000                     _TXB2D0	set	3878
   192  0000                     _TXB2D1	set	3879
   193  0000                     _TXB2D2	set	3880
   194  0000                     _TXB2D3	set	3881
   195  0000                     _TXB2D4	set	3882
   196  0000                     _TXB2D5	set	3883
   197  0000                     _TXB2D6	set	3884
   198  0000                     _TXB2D7	set	3885
   199  0000                     _TXB2DLC	set	3877
   200  0000                     _TXB2DLCbits	set	3877
   201  0000                     _TXB2EIDH	set	3875
   202  0000                     _TXB2EIDL	set	3876
   203  0000                     _TXB2SIDH	set	3873
   204  0000                     _TXB2SIDL	set	3874
   205  0000                     _TXB2SIDLbits	set	3874
   206  0000                     _ADCON1	set	4033
   207  0000                     _BRGCON1	set	3952
   208  0000                     _BRGCON2	set	3953
   209  0000                     _BRGCON2bits	set	3953
   210  0000                     _BRGCON3	set	3954
   211  0000                     _BRGCON3bits	set	3954
   212  0000                     _CANCON	set	3951
   213  0000                     _CANCONbits	set	3951
   214  0000                     _CANSTAT	set	3950
   215  0000                     _COMSTATbits	set	3956
   216  0000                     _INTCON2bits	set	4081
   217  0000                     _INTCONbits	set	4082
   218  0000                     _IPR3bits	set	4005
   219  0000                     _LATA	set	3977
   220  0000                     _LATB	set	3978
   221  0000                     _LATBbits	set	3978
   222  0000                     _LATC	set	3979
   223  0000                     _PIE3bits	set	4003
   224  0000                     _PIR3bits	set	4004
   225  0000                     _PORTA	set	3968
   226  0000                     _PORTBbits	set	3969
   227  0000                     _RCONbits	set	4048
   228  0000                     _RXB0CON	set	3936
   229  0000                     _RXB0CONbits	set	3936
   230  0000                     _RXB0D0	set	3942
   231  0000                     _RXB0D1	set	3943
   232  0000                     _RXB0D2	set	3944
   233  0000                     _RXB0D3	set	3945
   234  0000                     _RXB0D4	set	3946
   235  0000                     _RXB0D5	set	3947
   236  0000                     _RXB0D6	set	3948
   237  0000                     _RXB0D7	set	3949
   238  0000                     _RXB0DLC	set	3941
   239  0000                     _RXB0DLCbits	set	3941
   240  0000                     _RXB0EIDH	set	3939
   241  0000                     _RXB0EIDL	set	3940
   242  0000                     _RXB0SIDH	set	3937
   243  0000                     _RXB0SIDL	set	3938
   244  0000                     _RXB0SIDLbits	set	3938
   245  0000                     _RXERRCNT	set	3957
   246  0000                     _T0CON	set	4053
   247  0000                     _T3CON	set	4017
   248  0000                     _TMR0H	set	4055
   249  0000                     _TMR0L	set	4054
   250  0000                     _TMR3H	set	4019
   251  0000                     _TMR3L	set	4018
   252  0000                     _TRISA	set	3986
   253  0000                     _TRISB	set	3987
   254  0000                     _TRISBbits	set	3987
   255  0000                     _TRISC	set	3988
   256  0000                     _TXERRCNT	set	3958
   257                           
   258                           ; #config settings
   259  000D2D  00                 	db	0	; dummy byte at the end
   260  0000                     
   261                           	psect	cinit
   262  004CFE                     __pcinit:
   263                           	opt stack 0
   264  004CFE                     start_initialization:
   265                           	opt stack 0
   266  004CFE                     __initialization:
   267                           	opt stack 0
   268                           
   269                           ; Clear objects allocated to BANK1 (87 bytes)
   270  004CFE  EE01  F000         	lfsr	0,__pbssBANK1
   271  004D02  0E57               	movlw	87
   272  004D04                     clear_0:
   273  004D04  6AEE               	clrf	postinc0,c
   274  004D06  06E8               	decf	wreg,f,c
   275  004D08  E1FD               	bnz	clear_0
   276                           
   277                           ; Clear objects allocated to BANK0 (18 bytes)
   278  004D0A  EE00  F0D5         	lfsr	0,__pbssBANK0
   279  004D0E  0E12               	movlw	18
   280  004D10                     clear_1:
   281  004D10  6AEE               	clrf	postinc0,c
   282  004D12  06E8               	decf	wreg,f,c
   283  004D14  E1FD               	bnz	clear_1
   284                           
   285                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   286  004D16  6A46               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   287                           
   288                           ; Clear objects allocated to COMRAM (34 bytes)
   289  004D18  EE00  F024         	lfsr	0,__pbssCOMRAM
   290  004D1C  0E22               	movlw	34
   291  004D1E                     clear_2:
   292  004D1E  6AEE               	clrf	postinc0,c
   293  004D20  06E8               	decf	wreg,f,c
   294  004D22  E1FD               	bnz	clear_2
   295                           
   296                           ; Initialize objects allocated to BANK0 (2 bytes)
   297                           ; load TBLPTR registers with __pidataBANK0
   298  004D24  0EA8               	movlw	low __pidataBANK0
   299  004D26  6EF6               	movwf	tblptrl,c
   300  004D28  0E4E               	movlw	high __pidataBANK0
   301  004D2A  6EF7               	movwf	tblptrh,c
   302  004D2C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   303  004D2E  6EF8               	movwf	tblptru,c
   304  004D30  0009               	tblrd		*+	;fetch initializer
   305  004D32  CFF5 F0E7          	movff	tablat,__pdataBANK0
   306  004D36  0009               	tblrd		*+	;fetch initializer
   307  004D38  CFF5 F0E8          	movff	tablat,__pdataBANK0+1
   308                           
   309                           ; Initialize objects allocated to COMRAM (1 bytes)
   310                           ; load TBLPTR registers with __pidataCOMRAM
   311  004D3C  0EAA               	movlw	low __pidataCOMRAM
   312  004D3E  6EF6               	movwf	tblptrl,c
   313  004D40  0E4E               	movlw	high __pidataCOMRAM
   314  004D42  6EF7               	movwf	tblptrh,c
   315  004D44  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   316  004D46  6EF8               	movwf	tblptru,c
   317  004D48  0009               	tblrd		*+	;fetch initializer
   318  004D4A  CFF5 F047          	movff	tablat,__pdataCOMRAM
   319  004D4E                     end_of_initialization:
   320                           	opt stack 0
   321  004D4E                     __end_of__initialization:
   322                           	opt stack 0
   323  004D4E  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   324  004D50  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   325  004D52  0100               	movlb	0
   326  004D54  EF4D  F026         	goto	_main	;jump to C main() function
   327                           tblptru	equ	0xFF8
   328                           tblptrh	equ	0xFF7
   329                           tblptrl	equ	0xFF6
   330                           tablat	equ	0xFF5
   331                           postinc0	equ	0xFEE
   332                           wreg	equ	0xFE8
   333                           
   334                           	psect	bitbssCOMRAM
   335  000230                     __pbitbssCOMRAM:
   336                           	opt stack 0
   337  000230                     _activation:
   338                           	opt stack 0
   339  000230                     	ds	1
   340  000231                     _dir:
   341                           	opt stack 0
   342  000231                     	ds	1
   343  000232                     _distance_error:
   344                           	opt stack 0
   345  000232                     	ds	1
   346  000233                     _distance_received:
   347                           	opt stack 0
   348  000233                     	ds	1
   349  000234                     _distance_wait:
   350                           	opt stack 0
   351  000234                     	ds	1
   352  000235                     _request_sent:
   353                           	opt stack 0
   354  000235                     	ds	1
   355  000236                     _start_operation:
   356                           	opt stack 0
   357  000236                     	ds	1
   358  000237                     _steering_correction_dir:
   359                           	opt stack 0
   360  000237                     	ds	1
   361                           tblptru	equ	0xFF8
   362                           tblptrh	equ	0xFF7
   363                           tblptrl	equ	0xFF6
   364                           tablat	equ	0xFF5
   365                           postinc0	equ	0xFEE
   366                           wreg	equ	0xFE8
   367                           
   368                           	psect	bssCOMRAM
   369  000024                     __pbssCOMRAM:
   370                           	opt stack 0
   371  000024                     _sensor_distance:
   372                           	opt stack 0
   373  000024                     	ds	16
   374  000034                     _clock_counter_reference:
   375                           	opt stack 0
   376  000034                     	ds	2
   377  000036                     _distance_dx:
   378                           	opt stack 0
   379  000036                     	ds	2
   380  000038                     _distance_sx:
   381                           	opt stack 0
   382  000038                     	ds	2
   383  00003A                     _left_speed:
   384                           	opt stack 0
   385  00003A                     	ds	2
   386  00003C                     _pulse_time:
   387                           	opt stack 0
   388  00003C                     	ds	2
   389  00003E                     _right_speed:
   390                           	opt stack 0
   391  00003E                     	ds	2
   392  000040                     _timerValue2:
   393                           	opt stack 0
   394  000040                     	ds	2
   395  000042                     _MUX_index:
   396                           	opt stack 0
   397  000042                     	ds	1
   398  000043                     _asus:
   399                           	opt stack 0
   400  000043                     	ds	1
   401  000044                     _gianni:
   402                           	opt stack 0
   403  000044                     	ds	1
   404  000045                     _steering_correction:
   405                           	opt stack 0
   406  000045                     	ds	1
   407                           tblptru	equ	0xFF8
   408                           tblptrh	equ	0xFF7
   409                           tblptrl	equ	0xFF6
   410                           tablat	equ	0xFF5
   411                           postinc0	equ	0xFEE
   412                           wreg	equ	0xFE8
   413                           
   414                           	psect	dataCOMRAM
   415  000047                     __pdataCOMRAM:
   416                           	opt stack 0
   417  000047                     _delay_quartz_frequency_value:
   418                           	opt stack 0
   419  000047                     	ds	1
   420                           tblptru	equ	0xFF8
   421                           tblptrh	equ	0xFF7
   422                           tblptrl	equ	0xFF6
   423                           tablat	equ	0xFF5
   424                           postinc0	equ	0xFEE
   425                           wreg	equ	0xFE8
   426                           
   427                           	psect	bssBANK0
   428  0000D5                     __pbssBANK0:
   429                           	opt stack 0
   430  0000D5                     _alignment_gap:
   431                           	opt stack 0
   432  0000D5                     	ds	4
   433  0000D9                     _x:
   434                           	opt stack 0
   435  0000D9                     	ds	4
   436  0000DD                     _z:
   437                           	opt stack 0
   438  0000DD                     	ds	4
   439  0000E1                     _actual_speed:
   440                           	opt stack 0
   441  0000E1                     	ds	2
   442  0000E3                     _distance_average:
   443                           	opt stack 0
   444  0000E3                     	ds	2
   445  0000E5                     _set_speed:
   446                           	opt stack 0
   447  0000E5                     	ds	2
   448                           tblptru	equ	0xFF8
   449                           tblptrh	equ	0xFF7
   450                           tblptrl	equ	0xFF6
   451                           tablat	equ	0xFF5
   452                           postinc0	equ	0xFEE
   453                           wreg	equ	0xFE8
   454                           
   455                           	psect	dataBANK0
   456  0000E7                     __pdataBANK0:
   457                           	opt stack 0
   458  0000E7                     _spazio_parcheggio:
   459                           	opt stack 0
   460  0000E7                     	ds	2
   461                           tblptru	equ	0xFF8
   462                           tblptrh	equ	0xFF7
   463                           tblptrl	equ	0xFF6
   464                           tablat	equ	0xFF5
   465                           postinc0	equ	0xFEE
   466                           wreg	equ	0xFE8
   467                           
   468                           	psect	bssBANK1
   469  000100                     __pbssBANK1:
   470                           	opt stack 0
   471  000100                     _MUX_select:
   472                           	opt stack 0
   473  000100                     	ds	8
   474  000108                     _data_speed_rx:
   475                           	opt stack 0
   476  000108                     	ds	8
   477  000110                     _distance_set:
   478                           	opt stack 0
   479  000110                     	ds	8
   480  000118                     _old_alignment_gap:
   481                           	opt stack 0
   482  000118                     	ds	4
   483  00011C                     _distance:
   484                           	opt stack 0
   485  00011C                     	ds	2
   486  00011E                     _errno:
   487                           	opt stack 0
   488  00011E                     	ds	2
   489  000120                     _msg:
   490                           	opt stack 0
   491  000120                     	ds	15
   492  00012F                     _data:
   493                           	opt stack 0
   494  00012F                     	ds	8
   495  000137                     _data_brake:
   496                           	opt stack 0
   497  000137                     	ds	8
   498  00013F                     _data_correction:
   499                           	opt stack 0
   500  00013F                     	ds	8
   501  000147                     _data_speed:
   502                           	opt stack 0
   503  000147                     	ds	8
   504  00014F                     _data_steering:
   505                           	opt stack 0
   506  00014F                     	ds	8
   507                           tblptru	equ	0xFF8
   508                           tblptrh	equ	0xFF7
   509                           tblptrl	equ	0xFF6
   510                           tablat	equ	0xFF5
   511                           postinc0	equ	0xFEE
   512                           wreg	equ	0xFE8
   513                           
   514                           	psect	cstackBANK1
   515  000157                     __pcstackBANK1:
   516                           	opt stack 0
   517  000157                     ??___xxtofl:
   518  000157                     sqrt@sign:
   519                           	opt stack 0
   520  000157                     atan@y:
   521                           	opt stack 0
   522                           
   523                           ; 4 bytes @ 0x0
   524  000157                     	ds	1
   525  000158                     sqrt@i:
   526                           	opt stack 0
   527                           
   528                           ; 1 bytes @ 0x1
   529  000158                     	ds	1
   530  000159                     sqrt@tfrac:
   531                           	opt stack 0
   532                           
   533                           ; 4 bytes @ 0x2
   534  000159                     	ds	2
   535  00015B                     ___xxtofl@sign:
   536                           	opt stack 0
   537  00015B                     atan@x:
   538                           	opt stack 0
   539                           
   540                           ; 4 bytes @ 0x4
   541  00015B                     	ds	1
   542  00015C                     ___xxtofl@exp:
   543                           	opt stack 0
   544                           
   545                           ; 1 bytes @ 0x5
   546  00015C                     	ds	1
   547  00015D                     sqrt@p:
   548                           	opt stack 0
   549  00015D                     ___xxtofl@arg:
   550                           	opt stack 0
   551                           
   552                           ; 4 bytes @ 0x6
   553  00015D                     	ds	1
   554  00015E                     sqrt@grs:
   555                           	opt stack 0
   556                           
   557                           ; 4 bytes @ 0x7
   558  00015E                     	ds	1
   559  00015F                     atan@recip:
   560                           	opt stack 0
   561                           
   562                           ; 1 bytes @ 0x8
   563  00015F                     	ds	1
   564  000160                     atan@val_squared:
   565                           	opt stack 0
   566                           
   567                           ; 4 bytes @ 0x9
   568  000160                     	ds	2
   569  000162                     sqrt@exp:
   570                           	opt stack 0
   571                           
   572                           ; 2 bytes @ 0xB
   573  000162                     	ds	2
   574  000164                     atan@val:
   575                           	opt stack 0
   576  000164                     sqrt@root:
   577                           	opt stack 0
   578                           
   579                           ; 4 bytes @ 0xD
   580  000164                     	ds	4
   581  000168                     sqrt@frac:
   582                           	opt stack 0
   583                           
   584                           ; 4 bytes @ 0x11
   585  000168                     	ds	4
   586  00016C                     ?_asin:
   587                           	opt stack 0
   588  00016C                     asin@x:
   589                           	opt stack 0
   590                           
   591                           ; 4 bytes @ 0x15
   592  00016C                     	ds	4
   593  000170                     asin@sgn:
   594                           	opt stack 0
   595                           
   596                           ; 4 bytes @ 0x19
   597  000170                     	ds	4
   598  000174                     _asin$3621:
   599                           	opt stack 0
   600                           
   601                           ; 4 bytes @ 0x1D
   602  000174                     	ds	4
   603  000178                     _asin$3620:
   604                           	opt stack 0
   605                           
   606                           ; 4 bytes @ 0x21
   607  000178                     	ds	4
   608  00017C                     asin@y:
   609                           	opt stack 0
   610                           
   611                           ; 4 bytes @ 0x25
   612  00017C                     	ds	4
   613  000180                     _asin$3619:
   614                           	opt stack 0
   615                           
   616                           ; 4 bytes @ 0x29
   617  000180                     	ds	4
   618  000184                     ??_parallelo:
   619                           
   620                           ; 0 bytes @ 0x2D
   621  000184                     	ds	2
   622  000186                     ??_park_search:
   623                           
   624                           ; 0 bytes @ 0x2F
   625  000186                     	ds	2
   626                           tblptru	equ	0xFF8
   627                           tblptrh	equ	0xFF7
   628                           tblptrl	equ	0xFF6
   629                           tablat	equ	0xFF5
   630                           postinc0	equ	0xFEE
   631                           wreg	equ	0xFE8
   632                           
   633                           	psect	cstackBANK0
   634  000060                     __pcstackBANK0:
   635                           	opt stack 0
   636  000060                     ?___lwdiv:
   637                           	opt stack 0
   638  000060                     ___lwdiv@dividend:
   639                           	opt stack 0
   640                           
   641                           ; 2 bytes @ 0x0
   642  000060                     	ds	2
   643  000062                     ___lwdiv@divisor:
   644                           	opt stack 0
   645                           
   646                           ; 2 bytes @ 0x2
   647  000062                     	ds	2
   648  000064                     ___lwdiv@counter:
   649                           	opt stack 0
   650                           
   651                           ; 1 bytes @ 0x4
   652  000064                     	ds	1
   653  000065                     ___lwdiv@quotient:
   654                           	opt stack 0
   655                           
   656                           ; 2 bytes @ 0x5
   657  000065                     	ds	2
   658  000067                     ??_ISR_Alta:
   659                           
   660                           ; 0 bytes @ 0x7
   661  000067                     	ds	16
   662  000077                     ??_can_interpreter:
   663  000077                     ?___fldiv:
   664                           	opt stack 0
   665  000077                     CANOperationMode@mode:
   666                           	opt stack 0
   667  000077                     _CANisTxReady$2808:
   668                           	opt stack 0
   669  000077                     CANsendMessage@identifier:
   670                           	opt stack 0
   671  000077                     CANSetMask@mask:
   672                           	opt stack 0
   673  000077                     CANSetFilter@filter:
   674                           	opt stack 0
   675  000077                     ___fldiv@b:
   676                           	opt stack 0
   677                           
   678                           ; 4 bytes @ 0x17
   679  000077                     	ds	4
   680  00007B                     CANSetMask@type:
   681                           	opt stack 0
   682  00007B                     CANSetFilter@type:
   683                           	opt stack 0
   684  00007B                     CANsendMessage@data:
   685                           	opt stack 0
   686  00007B                     ___fldiv@a:
   687                           	opt stack 0
   688                           
   689                           ; 4 bytes @ 0x1B
   690  00007B                     	ds	1
   691  00007C                     ??_CANSetMask:
   692  00007C                     ??_CANSetFilter:
   693                           
   694                           ; 0 bytes @ 0x1C
   695  00007C                     	ds	1
   696  00007D                     CANsendMessage@dataLength:
   697                           	opt stack 0
   698                           
   699                           ; 1 bytes @ 0x1D
   700  00007D                     	ds	1
   701  00007E                     CANsendMessage@flags:
   702                           	opt stack 0
   703                           
   704                           ; 1 bytes @ 0x1E
   705  00007E                     	ds	1
   706  00007F                     ??___fldiv:
   707  00007F                     ??_CANsendMessage:
   708                           
   709                           ; 0 bytes @ 0x1F
   710  00007F                     	ds	1
   711  000080                     CANSetMask@numBuffer:
   712                           	opt stack 0
   713  000080                     CANSetFilter@numBuffer:
   714                           	opt stack 0
   715                           
   716                           ; 1 bytes @ 0x20
   717  000080                     	ds	1
   718  000081                     CANSetMask@tamp:
   719                           	opt stack 0
   720  000081                     CANSetFilter@tamp:
   721                           	opt stack 0
   722                           
   723                           ; 4 bytes @ 0x21
   724  000081                     	ds	2
   725  000083                     ___fldiv@sign:
   726                           	opt stack 0
   727  000083                     CANsendMessage@tamp:
   728                           	opt stack 0
   729                           
   730                           ; 4 bytes @ 0x23
   731  000083                     	ds	1
   732  000084                     ___fldiv@rem:
   733                           	opt stack 0
   734                           
   735                           ; 4 bytes @ 0x24
   736  000084                     	ds	1
   737  000085                     CANInitialize@phaseSeg1:
   738                           	opt stack 0
   739                           
   740                           ; 1 bytes @ 0x25
   741  000085                     	ds	1
   742  000086                     CANInitialize@phaseSeg2:
   743                           	opt stack 0
   744                           
   745                           ; 1 bytes @ 0x26
   746  000086                     	ds	1
   747  000087                     CANInitialize@SJW:
   748                           	opt stack 0
   749                           
   750                           ; 1 bytes @ 0x27
   751  000087                     	ds	1
   752  000088                     CANInitialize@BRP:
   753                           	opt stack 0
   754  000088                     ___fldiv@new_exp:
   755                           	opt stack 0
   756                           
   757                           ; 2 bytes @ 0x28
   758  000088                     	ds	1
   759  000089                     CANInitialize@flags:
   760                           	opt stack 0
   761                           
   762                           ; 1 bytes @ 0x29
   763  000089                     	ds	1
   764  00008A                     ??_CANInitialize:
   765  00008A                     ___fldiv@grs:
   766                           	opt stack 0
   767                           
   768                           ; 4 bytes @ 0x2A
   769  00008A                     	ds	4
   770  00008E                     CANInitialize@propSeg:
   771                           	opt stack 0
   772  00008E                     ___fldiv@bexp:
   773                           	opt stack 0
   774                           
   775                           ; 1 bytes @ 0x2E
   776  00008E                     	ds	1
   777  00008F                     CANInitialize@FilterConfig1:
   778                           	opt stack 0
   779  00008F                     ___fldiv@aexp:
   780                           	opt stack 0
   781                           
   782                           ; 1 bytes @ 0x2F
   783  00008F                     	ds	1
   784  000090                     ?___flmul:
   785                           	opt stack 0
   786  000090                     CANInitialize@FilterConfig2:
   787                           	opt stack 0
   788  000090                     ___flmul@b:
   789                           	opt stack 0
   790                           
   791                           ; 4 bytes @ 0x30
   792  000090                     	ds	1
   793  000091                     
   794                           ; 0 bytes @ 0x31
   795  000091                     	ds	3
   796  000094                     ___flmul@a:
   797                           	opt stack 0
   798                           
   799                           ; 4 bytes @ 0x34
   800  000094                     	ds	4
   801  000098                     ??___flmul:
   802                           
   803                           ; 0 bytes @ 0x38
   804  000098                     	ds	4
   805  00009C                     ___flmul@sign:
   806                           	opt stack 0
   807                           
   808                           ; 1 bytes @ 0x3C
   809  00009C                     	ds	1
   810  00009D                     ___flmul@aexp:
   811                           	opt stack 0
   812                           
   813                           ; 1 bytes @ 0x3D
   814  00009D                     	ds	1
   815  00009E                     ___flmul@grs:
   816                           	opt stack 0
   817                           
   818                           ; 4 bytes @ 0x3E
   819  00009E                     	ds	4
   820  0000A2                     ___flmul@bexp:
   821                           	opt stack 0
   822                           
   823                           ; 1 bytes @ 0x42
   824  0000A2                     	ds	1
   825  0000A3                     ___flmul@prod:
   826                           	opt stack 0
   827                           
   828                           ; 4 bytes @ 0x43
   829  0000A3                     	ds	4
   830  0000A7                     ___flmul@temp:
   831                           	opt stack 0
   832                           
   833                           ; 2 bytes @ 0x47
   834  0000A7                     	ds	2
   835  0000A9                     ?___flneg:
   836                           	opt stack 0
   837  0000A9                     ___flneg@f1:
   838                           	opt stack 0
   839                           
   840                           ; 4 bytes @ 0x49
   841  0000A9                     	ds	4
   842  0000AD                     ?___fladd:
   843                           	opt stack 0
   844  0000AD                     ?_fabs:
   845                           	opt stack 0
   846  0000AD                     fabs@d:
   847                           	opt stack 0
   848  0000AD                     ___fladd@b:
   849                           	opt stack 0
   850                           
   851                           ; 4 bytes @ 0x4D
   852  0000AD                     	ds	4
   853  0000B1                     ___flge@ff1:
   854                           	opt stack 0
   855  0000B1                     ___fladd@a:
   856                           	opt stack 0
   857                           
   858                           ; 4 bytes @ 0x51
   859  0000B1                     	ds	4
   860  0000B5                     ??___fladd:
   861  0000B5                     ___flge@ff2:
   862                           	opt stack 0
   863                           
   864                           ; 4 bytes @ 0x55
   865  0000B5                     	ds	4
   866  0000B9                     ??___flge:
   867                           
   868                           ; 0 bytes @ 0x59
   869  0000B9                     	ds	4
   870  0000BD                     ___fladd@signs:
   871                           	opt stack 0
   872                           
   873                           ; 1 bytes @ 0x5D
   874  0000BD                     	ds	1
   875  0000BE                     ___fladd@aexp:
   876                           	opt stack 0
   877                           
   878                           ; 1 bytes @ 0x5E
   879  0000BE                     	ds	1
   880  0000BF                     ___fladd@bexp:
   881                           	opt stack 0
   882                           
   883                           ; 1 bytes @ 0x5F
   884  0000BF                     	ds	1
   885  0000C0                     ___fladd@grs:
   886                           	opt stack 0
   887                           
   888                           ; 1 bytes @ 0x60
   889  0000C0                     	ds	1
   890  0000C1                     ?_sqrt:
   891                           	opt stack 0
   892  0000C1                     ?_eval_poly:
   893                           	opt stack 0
   894  0000C1                     ?___fltol:
   895                           	opt stack 0
   896  0000C1                     eval_poly@x:
   897                           	opt stack 0
   898  0000C1                     ___fltol@f1:
   899                           	opt stack 0
   900  0000C1                     sqrt@a:
   901                           	opt stack 0
   902                           
   903                           ; 4 bytes @ 0x61
   904  0000C1                     	ds	4
   905  0000C5                     ??_sqrt:
   906  0000C5                     ??___fltol:
   907  0000C5                     eval_poly@d:
   908                           	opt stack 0
   909                           
   910                           ; 2 bytes @ 0x65
   911  0000C5                     	ds	2
   912  0000C7                     eval_poly@n:
   913                           	opt stack 0
   914                           
   915                           ; 2 bytes @ 0x67
   916  0000C7                     	ds	2
   917  0000C9                     ??_eval_poly:
   918  0000C9                     ___fltol@sign1:
   919                           	opt stack 0
   920                           
   921                           ; 1 bytes @ 0x69
   922  0000C9                     	ds	1
   923  0000CA                     ___fltol@exp1:
   924                           	opt stack 0
   925                           
   926                           ; 1 bytes @ 0x6A
   927  0000CA                     	ds	1
   928  0000CB                     ?_abs:
   929                           	opt stack 0
   930  0000CB                     abs@a:
   931                           	opt stack 0
   932                           
   933                           ; 2 bytes @ 0x6B
   934  0000CB                     	ds	2
   935  0000CD                     ??_abs:
   936  0000CD                     eval_poly@res:
   937                           	opt stack 0
   938                           
   939                           ; 4 bytes @ 0x6D
   940  0000CD                     	ds	2
   941  0000CF                     ?___xxtofl:
   942                           	opt stack 0
   943  0000CF                     ___xxtofl@val:
   944                           	opt stack 0
   945                           
   946                           ; 4 bytes @ 0x6F
   947  0000CF                     	ds	2
   948  0000D1                     ?_atan:
   949                           	opt stack 0
   950  0000D1                     atan@f:
   951                           	opt stack 0
   952                           
   953                           ; 4 bytes @ 0x71
   954  0000D1                     	ds	4
   955  0000D5                     tblptru	equ	0xFF8
   956                           tblptrh	equ	0xFF7
   957                           tblptrl	equ	0xFF6
   958                           tablat	equ	0xFF5
   959                           postinc0	equ	0xFEE
   960                           wreg	equ	0xFE8
   961                           
   962                           ; 0 bytes @ 0x75
   963                           
   964                           	psect	cstackCOMRAM
   965  000001                     __pcstackCOMRAM:
   966                           	opt stack 0
   967  000001                     CANreceiveMessage@msg:
   968                           	opt stack 0
   969                           
   970                           ; 2 bytes @ 0x0
   971  000001                     	ds	2
   972  000003                     ??_CANreceiveMessage:
   973                           
   974                           ; 0 bytes @ 0x2
   975  000003                     	ds	8
   976  00000B                     CANreceiveMessage@error:
   977                           	opt stack 0
   978                           
   979                           ; 1 bytes @ 0xA
   980  00000B                     	ds	1
   981  00000C                     CANreceiveMessage@tamp:
   982                           	opt stack 0
   983                           
   984                           ; 1 bytes @ 0xB
   985  00000C                     	ds	1
   986  00000D                     ??_ISR_Bassa:
   987                           
   988                           ; 0 bytes @ 0xC
   989  00000D                     	ds	21
   990  000022                     ISR_Bassa@gigi:
   991                           	opt stack 0
   992                           
   993                           ; 1 bytes @ 0x21
   994  000022                     	ds	1
   995  000023                     ISR_Bassa@i:
   996                           	opt stack 0
   997                           
   998                           ; 1 bytes @ 0x22
   999  000023                     	ds	1
  1000                           tblptru	equ	0xFF8
  1001                           tblptrh	equ	0xFF7
  1002                           tblptrl	equ	0xFF6
  1003                           tablat	equ	0xFF5
  1004                           postinc0	equ	0xFEE
  1005                           wreg	equ	0xFE8
  1006                           
  1007 ;;
  1008 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1009 ;;
  1010 ;; *************** function _main *****************
  1011 ;; Defined at:
  1012 ;;		line 161 in file "parcheggio.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;		None
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;		None
  1017 ;; Return value:  Size  Location     Type
  1018 ;;		None               void
  1019 ;; Registers used:
  1020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1030 ;;Total ram usage:        0 bytes
  1031 ;; Hardware stack levels required when called:   10
  1032 ;; This function calls:
  1033 ;;		_can_interpreter
  1034 ;;		_configurazione
  1035 ;;		_park_routine
  1036 ;;		_park_search
  1037 ;; This function is called by:
  1038 ;;		Startup code after reset
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042                           	psect	text0
  1043  004C9A                     __ptext0:
  1044                           	opt stack 0
  1045  004C9A                     _main:
  1046                           	opt stack 21
  1047                           
  1048                           ;parcheggio.c: 162: configurazione();
  1049                           
  1050                           ; BSR set to: 15
  1051                           ;incstack = 0
  1052  004C9A  EC17  F026         	call	_configurazione	;wreg free
  1053                           
  1054                           ;parcheggio.c: 163: MUX_select[0] = 0b00000000;
  1055  004C9E  0E00               	movlw	0
  1056  004CA0  0101               	movlb	1	; () banked
  1057  004CA2  6F00               	movwf	_MUX_select& (0+255),b
  1058                           
  1059                           ; BSR set to: 1
  1060                           ;parcheggio.c: 164: MUX_select[1] = 0b00000001;
  1061  004CA4  0E01               	movlw	1
  1062  004CA6  0101               	movlb	1	; () banked
  1063  004CA8  6F01               	movwf	(_MUX_select+1)& (0+255),b
  1064                           
  1065                           ; BSR set to: 1
  1066                           ;parcheggio.c: 165: MUX_select[2] = 0b00000010;
  1067  004CAA  0E02               	movlw	2
  1068  004CAC  0101               	movlb	1	; () banked
  1069  004CAE  6F02               	movwf	(_MUX_select+2)& (0+255),b
  1070                           
  1071                           ; BSR set to: 1
  1072                           ;parcheggio.c: 166: MUX_select[3] = 0b00000011;
  1073  004CB0  0E03               	movlw	3
  1074  004CB2  0101               	movlb	1	; () banked
  1075  004CB4  6F03               	movwf	(_MUX_select+3)& (0+255),b
  1076                           
  1077                           ; BSR set to: 1
  1078                           ;parcheggio.c: 167: MUX_select[4] = 0b00000100;
  1079  004CB6  0E04               	movlw	4
  1080  004CB8  0101               	movlb	1	; () banked
  1081  004CBA  6F04               	movwf	(_MUX_select+4)& (0+255),b
  1082                           
  1083                           ; BSR set to: 1
  1084                           ;parcheggio.c: 168: MUX_select[5] = 0b00000101;
  1085  004CBC  0E05               	movlw	5
  1086  004CBE  0101               	movlb	1	; () banked
  1087  004CC0  6F05               	movwf	(_MUX_select+5)& (0+255),b
  1088                           
  1089                           ; BSR set to: 1
  1090                           ;parcheggio.c: 169: MUX_select[6] = 0b00000110;
  1091  004CC2  0E06               	movlw	6
  1092  004CC4  0101               	movlb	1	; () banked
  1093  004CC6  6F06               	movwf	(_MUX_select+6)& (0+255),b
  1094                           
  1095                           ; BSR set to: 1
  1096                           ;parcheggio.c: 170: MUX_select[7] = 0b00000111;
  1097  004CC8  0E07               	movlw	7
  1098  004CCA  0101               	movlb	1	; () banked
  1099  004CCC  6F07               	movwf	(_MUX_select+7)& (0+255),b
  1100                           
  1101                           ; BSR set to: 1
  1102                           ;parcheggio.c: 172: PORTBbits.RB4 = 0;
  1103  004CCE  9881               	bcf	3969,4,c	;volatile
  1104                           
  1105                           ; BSR set to: 1
  1106                           ;parcheggio.c: 173: PORTBbits.RB5 = 0;
  1107  004CD0  9A81               	bcf	3969,5,c	;volatile
  1108                           
  1109                           ; BSR set to: 1
  1110                           ;parcheggio.c: 174: PORTBbits.RB6 = 0;
  1111  004CD2  9C81               	bcf	3969,6,c	;volatile
  1112  004CD4                     l6271:
  1113                           
  1114                           ;parcheggio.c: 176: if (sensor_distance[1]>10){
  1115  004CD4  5027               	movf	_sensor_distance+3,w,c	;volatile
  1116  004CD6  E103               	bnz	u8130
  1117  004CD8  0E0B               	movlw	11
  1118  004CDA  5C26               	subwf	_sensor_distance+2,w,c	;volatile
  1119  004CDC  B0D8               	btfsc	status,0,c
  1120  004CDE                     u8130:
  1121                           
  1122                           ;parcheggio.c: 177: PORTBbits.RB4 = 1;
  1123  004CDE  8881               	bsf	3969,4,c	;volatile
  1124                           
  1125                           ;parcheggio.c: 178: }
  1126                           ;parcheggio.c: 179: if (sensor_distance[1]>30){
  1127  004CE0  5027               	movf	_sensor_distance+3,w,c	;volatile
  1128  004CE2  E104               	bnz	u8140
  1129  004CE4  0E1F               	movlw	31
  1130  004CE6  5C26               	subwf	_sensor_distance+2,w,c	;volatile
  1131  004CE8  A0D8               	btfss	status,0,c
  1132  004CEA  D7F4               	goto	l6271
  1133  004CEC                     u8140:
  1134                           
  1135                           ;parcheggio.c: 180: PORTBbits.RB5 = 1;
  1136  004CEC  8A81               	bsf	3969,5,c	;volatile
  1137  004CEE  D7F2               	goto	l6271
  1138  004CF0                     l6279:
  1139                           
  1140                           ;parcheggio.c: 185: park_search();
  1141  004CF0  EC29  F023         	call	_park_search	;wreg free
  1142                           
  1143                           ;parcheggio.c: 186: can_interpreter();
  1144  004CF4  ECAC  F026         	call	_can_interpreter	;wreg free
  1145                           
  1146                           ;parcheggio.c: 187: park_routine();
  1147  004CF8  EC39  F027         	call	_park_routine	;wreg free
  1148  004CFC  D7F9               	goto	l6279
  1149  004CFE                     __end_of_main:
  1150                           	opt stack 0
  1151                           tblptru	equ	0xFF8
  1152                           tblptrh	equ	0xFF7
  1153                           tblptrl	equ	0xFF6
  1154                           tablat	equ	0xFF5
  1155                           postinc0	equ	0xFEE
  1156                           wreg	equ	0xFE8
  1157                           status	equ	0xFD8
  1158                           
  1159 ;; *************** function _park_search *****************
  1160 ;; Defined at:
  1161 ;;		line 191 in file "parcheggio.c"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;		None
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;		None
  1166 ;; Return value:  Size  Location     Type
  1167 ;;		None               void
  1168 ;; Registers used:
  1169 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1170 ;; Tracked objects:
  1171 ;;		On entry : 0/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1177 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1178 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1179 ;;Total ram usage:        2 bytes
  1180 ;; Hardware stack levels used:    1
  1181 ;; Hardware stack levels required when called:    9
  1182 ;; This function calls:
  1183 ;;		_CANisTxReady
  1184 ;;		_CANsendMessage
  1185 ;;		___xxtofl
  1186 ;;		_abs
  1187 ;;		_parallelo
  1188 ;; This function is called by:
  1189 ;;		_main
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           	psect	text1
  1194  004652                     __ptext1:
  1195                           	opt stack 0
  1196  004652                     _park_search:
  1197                           	opt stack 21
  1198                           
  1199                           ;parcheggio.c: 192: while ((activation == 1) && (PORTBbits.RB5 == 0)) {
  1200                           
  1201                           ;incstack = 0
  1202  004652  D0AD               	goto	l686
  1203  004654                     l6163:
  1204                           
  1205                           ;parcheggio.c: 193: parallelo();
  1206  004654  EC2A  F01E         	call	_parallelo	;wreg free
  1207                           
  1208                           ;parcheggio.c: 194: if (sensor_distance[0] > 50) {
  1209  004658  5025               	movf	_sensor_distance+1,w,c	;volatile
  1210  00465A  E104               	bnz	u7990
  1211  00465C  0E33               	movlw	51
  1212  00465E  5C24               	subwf	_sensor_distance,w,c	;volatile
  1213  004660  A0D8               	btfss	status,0,c
  1214  004662  D02A               	goto	l6181
  1215  004664                     u7990:
  1216                           
  1217                           ;parcheggio.c: 195: if (request_sent == 0) {
  1218  004664  BA46               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1219  004666  D056               	goto	l6183
  1220  004668                     l6171:
  1221  004668  EC27  F027         	call	_CANisTxReady	;wreg free
  1222  00466C  0900               	iorlw	0
  1223  00466E  B4D8               	btfsc	status,2,c
  1224  004670  D7FB               	goto	l6171
  1225                           
  1226                           ;parcheggio.c: 197: CANsendMessage(0b00000001000, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1227  004672  0E08               	movlw	8
  1228  004674  0100               	movlb	0	; () banked
  1229  004676  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1230  004678  0E00               	movlw	0
  1231  00467A  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1232  00467C  0E00               	movlw	0
  1233  00467E  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1234  004680  0E00               	movlw	0
  1235  004682  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1236  004684  0E2F               	movlw	low _data
  1237  004686  0100               	movlb	0	; () banked
  1238  004688  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1239  00468A  0E01               	movlw	high _data
  1240  00468C  0100               	movlb	0	; () banked
  1241  00468E  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1242  004690  0E08               	movlw	8
  1243  004692  0100               	movlb	0	; () banked
  1244  004694  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1245  004696  0EFC               	movlw	252
  1246  004698  0100               	movlb	0	; () banked
  1247  00469A  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1248  00469C  EC1A  F00C         	call	_CANsendMessage	;wreg free
  1249                           
  1250                           ;parcheggio.c: 198: request_sent = 1;
  1251  0046A0  8A46               	bsf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1252                           
  1253                           ;parcheggio.c: 199: alignment_gap = 0;
  1254  0046A2  0E00               	movlw	0
  1255  0046A4  0100               	movlb	0	; () banked
  1256  0046A6  6FD5               	movwf	_alignment_gap& (0+255),b
  1257  0046A8  0E00               	movlw	0
  1258  0046AA  6FD6               	movwf	(_alignment_gap+1)& (0+255),b
  1259  0046AC  0E00               	movlw	0
  1260  0046AE  6FD7               	movwf	(_alignment_gap+2)& (0+255),b
  1261  0046B0  0E00               	movlw	0
  1262  0046B2  6FD8               	movwf	(_alignment_gap+3)& (0+255),b
  1263                           
  1264                           ; BSR set to: 0
  1265                           ;parcheggio.c: 200: LATBbits.LATB4 = 1;
  1266  0046B4  888A               	bsf	3978,4,c	;volatile
  1267                           
  1268                           ; BSR set to: 0
  1269                           ;parcheggio.c: 201: }
  1270                           ;parcheggio.c: 202: } else {
  1271  0046B6  D02E               	goto	l6183
  1272  0046B8                     l6181:
  1273                           
  1274                           ;parcheggio.c: 203: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  1275  0046B8  EE20  F026         	lfsr	2,_sensor_distance+2	;volatile
  1276  0046BC  CFDE F186          	movff	postinc2,??_park_search
  1277  0046C0  CFDD F187          	movff	postdec2,??_park_search+1
  1278  0046C4  0101               	movlb	1	; () banked
  1279  0046C6  1F86               	comf	??_park_search& (0+255),f,b
  1280  0046C8  1F87               	comf	(??_park_search+1)& (0+255),f,b
  1281  0046CA  4B86               	infsnz	??_park_search& (0+255),f,b
  1282  0046CC  2B87               	incf	(??_park_search+1)& (0+255),f,b
  1283  0046CE  5024               	movf	_sensor_distance,w,c	;volatile
  1284  0046D0  0101               	movlb	1	; () banked
  1285  0046D2  2586               	addwf	??_park_search& (0+255),w,b
  1286  0046D4  0100               	movlb	0	; () banked
  1287  0046D6  6FCB               	movwf	abs@a& (0+255),b
  1288  0046D8  5025               	movf	_sensor_distance+1,w,c	;volatile
  1289  0046DA  0101               	movlb	1	; () banked
  1290  0046DC  2187               	addwfc	(??_park_search+1)& (0+255),w,b
  1291  0046DE  0100               	movlb	0	; () banked
  1292  0046E0  6FCC               	movwf	(abs@a+1)& (0+255),b
  1293  0046E2  EC11  F027         	call	_abs	;wreg free
  1294  0046E6  0100               	movlb	0	; () banked
  1295  0046E8  C0CB  F0CF         	movff	?_abs,___xxtofl@val
  1296  0046EC  0100               	movlb	0	; () banked
  1297  0046EE  C0CC  F0D0         	movff	?_abs+1,___xxtofl@val+1
  1298  0046F2  0100               	movlb	0	; () banked
  1299  0046F4  0E00               	movlw	0
  1300  0046F6  BFD0               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1301  0046F8  0EFF               	movlw	-1
  1302  0046FA  6FD1               	movwf	(___xxtofl@val+2)& (0+255),b
  1303  0046FC  6FD2               	movwf	(___xxtofl@val+3)& (0+255),b
  1304  0046FE  0E01               	movlw	1
  1305  004700  EC97  F020         	call	___xxtofl
  1306  004704  C0CF  F0D5         	movff	?___xxtofl,_alignment_gap
  1307  004708  C0D0  F0D6         	movff	?___xxtofl+1,_alignment_gap+1
  1308  00470C  C0D1  F0D7         	movff	?___xxtofl+2,_alignment_gap+2
  1309  004710  C0D2  F0D8         	movff	?___xxtofl+3,_alignment_gap+3
  1310  004714                     l6183:
  1311                           
  1312                           ;parcheggio.c: 204: }
  1313                           ;parcheggio.c: 205: if ((sensor_distance[0] < 50) && (request_sent == 1)) {
  1314  004714  5025               	movf	_sensor_distance+1,w,c	;volatile
  1315  004716  E122               	bnz	l6193
  1316  004718  0E32               	movlw	50
  1317  00471A  5C24               	subwf	_sensor_distance,w,c	;volatile
  1318  00471C  A0D8               	btfss	status,0,c
  1319  00471E  AA46               	btfss	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1320  004720  D01D               	goto	l6193
  1321                           
  1322                           ;parcheggio.c: 206: request_sent = 0;
  1323  004722  9A46               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1324  004724                     l6189:
  1325  004724  EC27  F027         	call	_CANisTxReady	;wreg free
  1326  004728  0900               	iorlw	0
  1327  00472A  B4D8               	btfsc	status,2,c
  1328  00472C  D7FB               	goto	l6189
  1329                           
  1330                           ;parcheggio.c: 208: CANsendMessage(0b00000000111, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1331  00472E  0E07               	movlw	7
  1332  004730  0100               	movlb	0	; () banked
  1333  004732  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1334  004734  0E00               	movlw	0
  1335  004736  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1336  004738  0E00               	movlw	0
  1337  00473A  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1338  00473C  0E00               	movlw	0
  1339  00473E  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1340  004740  0E2F               	movlw	low _data
  1341  004742  0100               	movlb	0	; () banked
  1342  004744  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1343  004746  0E01               	movlw	high _data
  1344  004748  0100               	movlb	0	; () banked
  1345  00474A  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1346  00474C  0E08               	movlw	8
  1347  00474E  0100               	movlb	0	; () banked
  1348  004750  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1349  004752  0EFC               	movlw	252
  1350  004754  0100               	movlb	0	; () banked
  1351  004756  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1352  004758  EC1A  F00C         	call	_CANsendMessage	;wreg free
  1353  00475C                     l6193:
  1354                           
  1355                           ;parcheggio.c: 209: }
  1356                           ;parcheggio.c: 210: if (distance_received == 1) {
  1357  00475C  A646               	btfss	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1358  00475E  D027               	goto	l686
  1359                           
  1360                           ;parcheggio.c: 211: if (distance_average > 100) {
  1361  004760  0100               	movlb	0	; () banked
  1362  004762  51E4               	movf	(_distance_average+1)& (0+255),w,b	;volatile
  1363  004764  E105               	bnz	u8060
  1364  004766  0E65               	movlw	101
  1365  004768  0100               	movlb	0	; () banked
  1366  00476A  5DE3               	subwf	_distance_average& (0+255),w,b	;volatile
  1367  00476C  A0D8               	btfss	status,0,c
  1368  00476E  D01D               	goto	l699
  1369  004770                     u8060:
  1370                           
  1371                           ; BSR set to: 0
  1372                           ;parcheggio.c: 212: PORTBbits.RB5 = 1;
  1373  004770  8A81               	bsf	3969,5,c	;volatile
  1374                           
  1375                           ; BSR set to: 0
  1376                           ;parcheggio.c: 213: data[0] = 1;
  1377  004772  0E01               	movlw	1
  1378  004774  0101               	movlb	1	; () banked
  1379  004776  6F2F               	movwf	_data& (0+255),b
  1380                           
  1381                           ; BSR set to: 1
  1382                           ;parcheggio.c: 214: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  1383  004778  0E0B               	movlw	11
  1384  00477A  0100               	movlb	0	; () banked
  1385  00477C  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1386  00477E  0E00               	movlw	0
  1387  004780  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1388  004782  0E00               	movlw	0
  1389  004784  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1390  004786  0E00               	movlw	0
  1391  004788  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1392  00478A  0E2F               	movlw	low _data
  1393  00478C  0100               	movlb	0	; () banked
  1394  00478E  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1395  004790  0E01               	movlw	high _data
  1396  004792  0100               	movlb	0	; () banked
  1397  004794  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1398  004796  0E01               	movlw	1
  1399  004798  0100               	movlb	0	; () banked
  1400  00479A  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1401  00479C  0EBC               	movlw	188
  1402  00479E  0100               	movlb	0	; () banked
  1403  0047A0  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1404  0047A2  EC1A  F00C         	call	_CANsendMessage	;wreg free
  1405                           
  1406                           ;parcheggio.c: 215: distance_received = 0;
  1407  0047A6  9646               	bcf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1408                           
  1409                           ;parcheggio.c: 216: } else {
  1410  0047A8  D002               	goto	l686
  1411  0047AA                     l699:
  1412                           
  1413                           ; BSR set to: 0
  1414                           ;parcheggio.c: 217: distance_received = 0;
  1415  0047AA  9646               	bcf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1416                           
  1417                           ;parcheggio.c: 218: PORTBbits.RB5 = 0;
  1418  0047AC  9A81               	bcf	3969,5,c	;volatile
  1419  0047AE                     l686:
  1420  0047AE  A046               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1421  0047B0  0012               	return	
  1422  0047B2  BA81               	btfsc	3969,5,c	;volatile
  1423  0047B4  0012               	return	
  1424  0047B6  D74E               	goto	l6163
  1425  0047B8                     __end_of_park_search:
  1426                           	opt stack 0
  1427                           tblptru	equ	0xFF8
  1428                           tblptrh	equ	0xFF7
  1429                           tblptrl	equ	0xFF6
  1430                           tablat	equ	0xFF5
  1431                           postinc0	equ	0xFEE
  1432                           wreg	equ	0xFE8
  1433                           postinc2	equ	0xFDE
  1434                           postdec2	equ	0xFDD
  1435                           status	equ	0xFD8
  1436                           
  1437 ;; *************** function _parallelo *****************
  1438 ;; Defined at:
  1439 ;;		line 251 in file "parcheggio.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;		None
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;		None
  1444 ;; Return value:  Size  Location     Type
  1445 ;;		None               void
  1446 ;; Registers used:
  1447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1455 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1456 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1457 ;;Total ram usage:        2 bytes
  1458 ;; Hardware stack levels used:    1
  1459 ;; Hardware stack levels required when called:    8
  1460 ;; This function calls:
  1461 ;;		___fladd
  1462 ;;		___fldiv
  1463 ;;		___flge
  1464 ;;		___flmul
  1465 ;;		___flneg
  1466 ;;		___fltol
  1467 ;;		___xxtofl
  1468 ;;		_abs
  1469 ;;		_asin
  1470 ;;		_can_send
  1471 ;;		_sqrt
  1472 ;; This function is called by:
  1473 ;;		_park_search
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           	psect	text2
  1478  003C54                     __ptext2:
  1479                           	opt stack 0
  1480  003C54                     _parallelo:
  1481                           	opt stack 21
  1482                           
  1483                           ;parcheggio.c: 252: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  1484                           
  1485                           ;incstack = 0
  1486  003C54  EE20  F026         	lfsr	2,_sensor_distance+2	;volatile
  1487  003C58  CFDE F184          	movff	postinc2,??_parallelo
  1488  003C5C  CFDD F185          	movff	postdec2,??_parallelo+1
  1489  003C60  0101               	movlb	1	; () banked
  1490  003C62  1F84               	comf	??_parallelo& (0+255),f,b
  1491  003C64  1F85               	comf	(??_parallelo+1)& (0+255),f,b
  1492  003C66  4B84               	infsnz	??_parallelo& (0+255),f,b
  1493  003C68  2B85               	incf	(??_parallelo+1)& (0+255),f,b
  1494  003C6A  5024               	movf	_sensor_distance,w,c	;volatile
  1495  003C6C  0101               	movlb	1	; () banked
  1496  003C6E  2584               	addwf	??_parallelo& (0+255),w,b
  1497  003C70  0100               	movlb	0	; () banked
  1498  003C72  6FCB               	movwf	abs@a& (0+255),b
  1499  003C74  5025               	movf	_sensor_distance+1,w,c	;volatile
  1500  003C76  0101               	movlb	1	; () banked
  1501  003C78  2185               	addwfc	(??_parallelo+1)& (0+255),w,b
  1502  003C7A  0100               	movlb	0	; () banked
  1503  003C7C  6FCC               	movwf	(abs@a+1)& (0+255),b
  1504  003C7E  EC11  F027         	call	_abs	;wreg free
  1505  003C82  0100               	movlb	0	; () banked
  1506  003C84  C0CB  F0CF         	movff	?_abs,___xxtofl@val
  1507  003C88  0100               	movlb	0	; () banked
  1508  003C8A  C0CC  F0D0         	movff	?_abs+1,___xxtofl@val+1
  1509  003C8E  0100               	movlb	0	; () banked
  1510  003C90  0E00               	movlw	0
  1511  003C92  BFD0               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1512  003C94  0EFF               	movlw	-1
  1513  003C96  6FD1               	movwf	(___xxtofl@val+2)& (0+255),b
  1514  003C98  6FD2               	movwf	(___xxtofl@val+3)& (0+255),b
  1515  003C9A  0E01               	movlw	1
  1516  003C9C  EC97  F020         	call	___xxtofl
  1517  003CA0  C0CF  F0D5         	movff	?___xxtofl,_alignment_gap
  1518  003CA4  C0D0  F0D6         	movff	?___xxtofl+1,_alignment_gap+1
  1519  003CA8  C0D1  F0D7         	movff	?___xxtofl+2,_alignment_gap+2
  1520  003CAC  C0D2  F0D8         	movff	?___xxtofl+3,_alignment_gap+3
  1521                           
  1522                           ;parcheggio.c: 254: if (alignment_gap < 30) {
  1523  003CB0  C0D5  F0B1         	movff	_alignment_gap,___flge@ff1
  1524  003CB4  C0D6  F0B2         	movff	_alignment_gap+1,___flge@ff1+1
  1525  003CB8  C0D7  F0B3         	movff	_alignment_gap+2,___flge@ff1+2
  1526  003CBC  C0D8  F0B4         	movff	_alignment_gap+3,___flge@ff1+3
  1527  003CC0  0E00               	movlw	0
  1528  003CC2  0100               	movlb	0	; () banked
  1529  003CC4  6FB5               	movwf	___flge@ff2& (0+255),b
  1530  003CC6  0E00               	movlw	0
  1531  003CC8  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  1532  003CCA  0EF0               	movlw	240
  1533  003CCC  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  1534  003CCE  0E41               	movlw	65
  1535  003CD0  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  1536  003CD2  EC61  F022         	call	___flge	;wreg free
  1537  003CD6  0100               	movlb	0	; () banked
  1538  003CD8  B0D8               	btfsc	status,0,c
  1539  003CDA  0012               	return	
  1540                           
  1541                           ; BSR set to: 0
  1542                           ;parcheggio.c: 255: if ((sensor_distance[0] < 30) && (sensor_distance[1] < 30)) {
  1543  003CDC  5025               	movf	_sensor_distance+1,w,c	;volatile
  1544  003CDE  E103               	bnz	u7951
  1545  003CE0  0E1E               	movlw	30
  1546  003CE2  5C24               	subwf	_sensor_distance,w,c	;volatile
  1547  003CE4  B0D8               	btfsc	status,0,c
  1548  003CE6                     u7951:
  1549  003CE6  0012               	return	
  1550                           
  1551                           ; BSR set to: 0
  1552  003CE8  5027               	movf	_sensor_distance+3,w,c	;volatile
  1553  003CEA  E103               	bnz	u7961
  1554  003CEC  0E1E               	movlw	30
  1555  003CEE  5C26               	subwf	_sensor_distance+2,w,c	;volatile
  1556  003CF0  B0D8               	btfsc	status,0,c
  1557  003CF2                     u7961:
  1558  003CF2  0012               	return	
  1559                           
  1560                           ; BSR set to: 0
  1561                           ;parcheggio.c: 260: x = ((1024) + (alignment_gap * alignment_gap));
  1562  003CF4  C0D5  F094         	movff	_alignment_gap,___flmul@a
  1563  003CF8  C0D6  F095         	movff	_alignment_gap+1,___flmul@a+1
  1564  003CFC  C0D7  F096         	movff	_alignment_gap+2,___flmul@a+2
  1565  003D00  C0D8  F097         	movff	_alignment_gap+3,___flmul@a+3
  1566  003D04  C0D5  F090         	movff	_alignment_gap,___flmul@b
  1567  003D08  C0D6  F091         	movff	_alignment_gap+1,___flmul@b+1
  1568  003D0C  C0D7  F092         	movff	_alignment_gap+2,___flmul@b+2
  1569  003D10  C0D8  F093         	movff	_alignment_gap+3,___flmul@b+3
  1570  003D14  ECBA  F014         	call	___flmul	;wreg free
  1571  003D18  C090  F0AD         	movff	?___flmul,___fladd@b
  1572  003D1C  C091  F0AE         	movff	?___flmul+1,___fladd@b+1
  1573  003D20  C092  F0AF         	movff	?___flmul+2,___fladd@b+2
  1574  003D24  C093  F0B0         	movff	?___flmul+3,___fladd@b+3
  1575  003D28  0E00               	movlw	0
  1576  003D2A  0100               	movlb	0	; () banked
  1577  003D2C  6FB1               	movwf	___fladd@a& (0+255),b
  1578  003D2E  0E00               	movlw	0
  1579  003D30  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  1580  003D32  0E80               	movlw	128
  1581  003D34  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  1582  003D36  0E44               	movlw	68
  1583  003D38  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  1584  003D3A  EC66  F012         	call	___fladd	;wreg free
  1585  003D3E  C0AD  F0D9         	movff	?___fladd,_x
  1586  003D42  C0AE  F0DA         	movff	?___fladd+1,_x+1
  1587  003D46  C0AF  F0DB         	movff	?___fladd+2,_x+2
  1588  003D4A  C0B0  F0DC         	movff	?___fladd+3,_x+3
  1589                           
  1590                           ;parcheggio.c: 261: x = sqrt(x);
  1591  003D4E  C0D9  F0C1         	movff	_x,sqrt@a
  1592  003D52  C0DA  F0C2         	movff	_x+1,sqrt@a+1
  1593  003D56  C0DB  F0C3         	movff	_x+2,sqrt@a+2
  1594  003D5A  C0DC  F0C4         	movff	_x+3,sqrt@a+3
  1595  003D5E  EC0D  F017         	call	_sqrt	;wreg free
  1596  003D62  C0C1  F0D9         	movff	?_sqrt,_x
  1597  003D66  C0C2  F0DA         	movff	?_sqrt+1,_x+1
  1598  003D6A  C0C3  F0DB         	movff	?_sqrt+2,_x+2
  1599  003D6E  C0C4  F0DC         	movff	?_sqrt+3,_x+3
  1600                           
  1601                           ;parcheggio.c: 262: z = alignment_gap / x;
  1602  003D72  C0D5  F077         	movff	_alignment_gap,___fldiv@b
  1603  003D76  C0D6  F078         	movff	_alignment_gap+1,___fldiv@b+1
  1604  003D7A  C0D7  F079         	movff	_alignment_gap+2,___fldiv@b+2
  1605  003D7E  C0D8  F07A         	movff	_alignment_gap+3,___fldiv@b+3
  1606  003D82  C0D9  F07B         	movff	_x,___fldiv@a
  1607  003D86  C0DA  F07C         	movff	_x+1,___fldiv@a+1
  1608  003D8A  C0DB  F07D         	movff	_x+2,___fldiv@a+2
  1609  003D8E  C0DC  F07E         	movff	_x+3,___fldiv@a+3
  1610  003D92  ECF2  F018         	call	___fldiv	;wreg free
  1611  003D96  C077  F0DD         	movff	?___fldiv,_z
  1612  003D9A  C078  F0DE         	movff	?___fldiv+1,_z+1
  1613  003D9E  C079  F0DF         	movff	?___fldiv+2,_z+2
  1614  003DA2  C07A  F0E0         	movff	?___fldiv+3,_z+3
  1615                           
  1616                           ;parcheggio.c: 263: z = asin(z);
  1617  003DA6  C0DD  F16C         	movff	_z,asin@x
  1618  003DAA  C0DE  F16D         	movff	_z+1,asin@x+1
  1619  003DAE  C0DF  F16E         	movff	_z+2,asin@x+2
  1620  003DB2  C0E0  F16F         	movff	_z+3,asin@x+3
  1621  003DB6  ECA1  F01C         	call	_asin	;wreg free
  1622  003DBA  C16C  F0DD         	movff	?_asin,_z
  1623  003DBE  C16D  F0DE         	movff	?_asin+1,_z+1
  1624  003DC2  C16E  F0DF         	movff	?_asin+2,_z+2
  1625  003DC6  C16F  F0E0         	movff	?_asin+3,_z+3
  1626                           
  1627                           ;parcheggio.c: 264: z = z / 3.14159265358979323846 * 180;
  1628  003DCA  0EDB               	movlw	219
  1629  003DCC  0100               	movlb	0	; () banked
  1630  003DCE  6F7B               	movwf	___fldiv@a& (0+255),b
  1631  003DD0  0E0F               	movlw	15
  1632  003DD2  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  1633  003DD4  0E49               	movlw	73
  1634  003DD6  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  1635  003DD8  0E40               	movlw	64
  1636  003DDA  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  1637  003DDC  C0DD  F077         	movff	_z,___fldiv@b
  1638  003DE0  C0DE  F078         	movff	_z+1,___fldiv@b+1
  1639  003DE4  C0DF  F079         	movff	_z+2,___fldiv@b+2
  1640  003DE8  C0E0  F07A         	movff	_z+3,___fldiv@b+3
  1641  003DEC  ECF2  F018         	call	___fldiv	;wreg free
  1642  003DF0  C077  F090         	movff	?___fldiv,___flmul@b
  1643  003DF4  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  1644  003DF8  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  1645  003DFC  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  1646  003E00  0E00               	movlw	0
  1647  003E02  0100               	movlb	0	; () banked
  1648  003E04  6F94               	movwf	___flmul@a& (0+255),b
  1649  003E06  0E00               	movlw	0
  1650  003E08  6F95               	movwf	(___flmul@a+1)& (0+255),b
  1651  003E0A  0E34               	movlw	52
  1652  003E0C  6F96               	movwf	(___flmul@a+2)& (0+255),b
  1653  003E0E  0E43               	movlw	67
  1654  003E10  6F97               	movwf	(___flmul@a+3)& (0+255),b
  1655  003E12  ECBA  F014         	call	___flmul	;wreg free
  1656  003E16  C090  F0DD         	movff	?___flmul,_z
  1657  003E1A  C091  F0DE         	movff	?___flmul+1,_z+1
  1658  003E1E  C092  F0DF         	movff	?___flmul+2,_z+2
  1659  003E22  C093  F0E0         	movff	?___flmul+3,_z+3
  1660                           
  1661                           ;parcheggio.c: 265: data_correction[0] = z;
  1662  003E26  C0DD  F0C1         	movff	_z,___fltol@f1
  1663  003E2A  C0DE  F0C2         	movff	_z+1,___fltol@f1+1
  1664  003E2E  C0DF  F0C3         	movff	_z+2,___fltol@f1+2
  1665  003E32  C0E0  F0C4         	movff	_z+3,___fltol@f1+3
  1666  003E36  EC68  F024         	call	___fltol	;wreg free
  1667  003E3A  0100               	movlb	0	; () banked
  1668  003E3C  51C1               	movf	?___fltol& (0+255),w,b
  1669  003E3E  0101               	movlb	1	; () banked
  1670  003E40  6F3F               	movwf	_data_correction& (0+255),b
  1671                           
  1672                           ; BSR set to: 1
  1673                           ;parcheggio.c: 267: if (sensor_distance[0] > sensor_distance[1]) {
  1674  003E42  5024               	movf	_sensor_distance,w,c	;volatile
  1675  003E44  5C26               	subwf	_sensor_distance+2,w,c	;volatile
  1676  003E46  5025               	movf	_sensor_distance+1,w,c	;volatile
  1677  003E48  5827               	subwfb	_sensor_distance+3,w,c	;volatile
  1678  003E4A  B0D8               	btfsc	status,0,c
  1679  003E4C  D002               	goto	l6153
  1680                           
  1681                           ; BSR set to: 1
  1682                           ;parcheggio.c: 268: data_correction[1] = 0;
  1683  003E4E  0E00               	movlw	0
  1684  003E50  D001               	goto	L1
  1685  003E52                     l6153:
  1686                           
  1687                           ; BSR set to: 1
  1688                           ;parcheggio.c: 270: data_correction[1] = 1;
  1689  003E52  0E01               	movlw	1
  1690  003E54                     L1:
  1691  003E54  0101               	movlb	1	; () banked
  1692  003E56  6F40               	movwf	(_data_correction+1)& (0+255),b
  1693                           
  1694                           ; BSR set to: 1
  1695                           ;parcheggio.c: 271: }
  1696                           ;parcheggio.c: 272: if (abs(old_alignment_gap - alignment_gap) > 1) {
  1697                           
  1698                           ; BSR set to: 1
  1699  003E58  C118  F0B1         	movff	_old_alignment_gap,___fladd@a
  1700  003E5C  C119  F0B2         	movff	_old_alignment_gap+1,___fladd@a+1
  1701  003E60  C11A  F0B3         	movff	_old_alignment_gap+2,___fladd@a+2
  1702  003E64  C11B  F0B4         	movff	_old_alignment_gap+3,___fladd@a+3
  1703  003E68  C0D5  F0A9         	movff	_alignment_gap,___flneg@f1
  1704  003E6C  C0D6  F0AA         	movff	_alignment_gap+1,___flneg@f1+1
  1705  003E70  C0D7  F0AB         	movff	_alignment_gap+2,___flneg@f1+2
  1706  003E74  C0D8  F0AC         	movff	_alignment_gap+3,___flneg@f1+3
  1707  003E78  ECF5  F026         	call	___flneg	;wreg free
  1708  003E7C  C0A9  F0AD         	movff	?___flneg,___fladd@b
  1709  003E80  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  1710  003E84  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  1711  003E88  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  1712  003E8C  EC66  F012         	call	___fladd	;wreg free
  1713  003E90  C0AD  F0C1         	movff	?___fladd,___fltol@f1
  1714  003E94  C0AE  F0C2         	movff	?___fladd+1,___fltol@f1+1
  1715  003E98  C0AF  F0C3         	movff	?___fladd+2,___fltol@f1+2
  1716  003E9C  C0B0  F0C4         	movff	?___fladd+3,___fltol@f1+3
  1717  003EA0  EC68  F024         	call	___fltol	;wreg free
  1718  003EA4  C0C1  F0CB         	movff	?___fltol,abs@a
  1719  003EA8  C0C2  F0CC         	movff	?___fltol+1,abs@a+1
  1720  003EAC  EC11  F027         	call	_abs	;wreg free
  1721  003EB0  0100               	movlb	0	; () banked
  1722  003EB2  BFCC               	btfsc	(?_abs+1)& (0+255),7,b
  1723  003EB4  0012               	return	
  1724  003EB6  0100               	movlb	0	; () banked
  1725  003EB8  51CC               	movf	(?_abs+1)& (0+255),w,b
  1726  003EBA  E105               	bnz	u7980
  1727  003EBC  0E02               	movlw	2
  1728  003EBE  0100               	movlb	0	; () banked
  1729  003EC0  5DCB               	subwf	?_abs& (0+255),w,b
  1730  003EC2  A0D8               	btfss	status,0,c
  1731  003EC4  0012               	return	
  1732  003EC6                     u7980:
  1733                           
  1734                           ; BSR set to: 0
  1735                           ;parcheggio.c: 273: old_alignment_gap = alignment_gap;
  1736  003EC6  C0D5  F118         	movff	_alignment_gap,_old_alignment_gap
  1737  003ECA  C0D6  F119         	movff	_alignment_gap+1,_old_alignment_gap+1
  1738  003ECE  C0D7  F11A         	movff	_alignment_gap+2,_old_alignment_gap+2
  1739  003ED2  C0D8  F11B         	movff	_alignment_gap+3,_old_alignment_gap+3
  1740                           
  1741                           ; BSR set to: 0
  1742                           ;parcheggio.c: 274: can_send();
  1743  003ED6  ECEE  F024         	call	_can_send	;wreg free
  1744                           
  1745                           ;parcheggio.c: 275: }
  1746                           ;parcheggio.c: 276: }
  1747                           ;parcheggio.c: 277: } else {
  1748  003EDA  0012               	return	
  1749  003EDC                     __end_of_parallelo:
  1750                           	opt stack 0
  1751                           tblptru	equ	0xFF8
  1752                           tblptrh	equ	0xFF7
  1753                           tblptrl	equ	0xFF6
  1754                           tablat	equ	0xFF5
  1755                           postinc0	equ	0xFEE
  1756                           wreg	equ	0xFE8
  1757                           postinc2	equ	0xFDE
  1758                           postdec2	equ	0xFDD
  1759                           status	equ	0xFD8
  1760                           
  1761 ;; *************** function _asin *****************
  1762 ;; Defined at:
  1763 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\asin.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;  x               4   21[BANK1 ] PTR unsigned char 
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;  y               4   37[BANK1 ] PTR unsigned char 
  1768 ;;  sgn             4   25[BANK1 ] PTR unsigned char 
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  4   21[BANK1 ] PTR unsigned char 
  1771 ;; Registers used:
  1772 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1778 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1779 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  1780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1781 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0
  1782 ;;Total ram usage:       24 bytes
  1783 ;; Hardware stack levels used:    1
  1784 ;; Hardware stack levels required when called:    7
  1785 ;; This function calls:
  1786 ;;		___fladd
  1787 ;;		___fldiv
  1788 ;;		___flge
  1789 ;;		___flmul
  1790 ;;		___flneg
  1791 ;;		_atan
  1792 ;;		_fabs
  1793 ;;		_sqrt
  1794 ;; This function is called by:
  1795 ;;		_parallelo
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           	psect	text3
  1800  003942                     __ptext3:
  1801                           	opt stack 0
  1802  003942                     _asin:
  1803                           	opt stack 21
  1804                           
  1805                           ;incstack = 0
  1806  003942  0E00               	movlw	0
  1807  003944  0100               	movlb	0	; () banked
  1808  003946  6FB1               	movwf	___flge@ff1& (0+255),b
  1809  003948  0E00               	movlw	0
  1810  00394A  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  1811  00394C  0E80               	movlw	128
  1812  00394E  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  1813  003950  0E3F               	movlw	63
  1814  003952  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  1815  003954  C16C  F0AD         	movff	asin@x,fabs@d
  1816  003958  C16D  F0AE         	movff	asin@x+1,fabs@d+1
  1817  00395C  C16E  F0AF         	movff	asin@x+2,fabs@d+2
  1818  003960  C16F  F0B0         	movff	asin@x+3,fabs@d+3
  1819  003964  ECD6  F026         	call	_fabs	;wreg free
  1820  003968  C0AD  F0B5         	movff	?_fabs,___flge@ff2
  1821  00396C  C0AE  F0B6         	movff	?_fabs+1,___flge@ff2+1
  1822  003970  C0AF  F0B7         	movff	?_fabs+2,___flge@ff2+2
  1823  003974  C0B0  F0B8         	movff	?_fabs+3,___flge@ff2+3
  1824  003978  EC61  F022         	call	___flge	;wreg free
  1825  00397C  0100               	movlb	0	; () banked
  1826  00397E  B0D8               	btfsc	status,0,c
  1827  003980  D00F               	goto	l6055
  1828                           
  1829                           ; BSR set to: 0
  1830  003982  0E00               	movlw	0
  1831  003984  0101               	movlb	1	; () banked
  1832  003986  6F1F               	movwf	(_errno+1)& (0+255),b
  1833  003988  0E21               	movlw	33
  1834  00398A  6F1E               	movwf	_errno& (0+255),b
  1835  00398C  0E00               	movlw	0
  1836  00398E  0101               	movlb	1	; () banked
  1837  003990  6F6C               	movwf	?_asin& (0+255),b
  1838  003992  0E00               	movlw	0
  1839  003994  6F6D               	movwf	(?_asin+1)& (0+255),b
  1840  003996  0E00               	movlw	0
  1841  003998  6F6E               	movwf	(?_asin+2)& (0+255),b
  1842  00399A  0E00               	movlw	0
  1843  00399C  6F6F               	movwf	(?_asin+3)& (0+255),b
  1844                           
  1845                           ; BSR set to: 1
  1846  00399E  0012               	return	
  1847  0039A0                     l6055:
  1848  0039A0  0E00               	movlw	0
  1849  0039A2  0101               	movlb	1	; () banked
  1850  0039A4  6F70               	movwf	asin@sgn& (0+255),b
  1851  0039A6  0E00               	movlw	0
  1852  0039A8  6F71               	movwf	(asin@sgn+1)& (0+255),b
  1853  0039AA  0E80               	movlw	128
  1854  0039AC  6F72               	movwf	(asin@sgn+2)& (0+255),b
  1855  0039AE  0E3F               	movlw	63
  1856  0039B0  6F73               	movwf	(asin@sgn+3)& (0+255),b
  1857                           
  1858                           ; BSR set to: 1
  1859  0039B2  C16C  F094         	movff	asin@x,___flmul@a
  1860  0039B6  C16D  F095         	movff	asin@x+1,___flmul@a+1
  1861  0039BA  C16E  F096         	movff	asin@x+2,___flmul@a+2
  1862  0039BE  C16F  F097         	movff	asin@x+3,___flmul@a+3
  1863  0039C2  C16C  F090         	movff	asin@x,___flmul@b
  1864  0039C6  C16D  F091         	movff	asin@x+1,___flmul@b+1
  1865  0039CA  C16E  F092         	movff	asin@x+2,___flmul@b+2
  1866  0039CE  C16F  F093         	movff	asin@x+3,___flmul@b+3
  1867  0039D2  ECBA  F014         	call	___flmul	;wreg free
  1868  0039D6  C090  F0A9         	movff	?___flmul,___flneg@f1
  1869  0039DA  C091  F0AA         	movff	?___flmul+1,___flneg@f1+1
  1870  0039DE  C092  F0AB         	movff	?___flmul+2,___flneg@f1+2
  1871  0039E2  C093  F0AC         	movff	?___flmul+3,___flneg@f1+3
  1872  0039E6  ECF5  F026         	call	___flneg	;wreg free
  1873  0039EA  C0A9  F0AD         	movff	?___flneg,___fladd@b
  1874  0039EE  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  1875  0039F2  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  1876  0039F6  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  1877  0039FA  0E00               	movlw	0
  1878  0039FC  0100               	movlb	0	; () banked
  1879  0039FE  6FB1               	movwf	___fladd@a& (0+255),b
  1880  003A00  0E00               	movlw	0
  1881  003A02  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  1882  003A04  0E80               	movlw	128
  1883  003A06  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  1884  003A08  0E3F               	movlw	63
  1885  003A0A  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  1886  003A0C  EC66  F012         	call	___fladd	;wreg free
  1887  003A10  C0AD  F0C1         	movff	?___fladd,sqrt@a
  1888  003A14  C0AE  F0C2         	movff	?___fladd+1,sqrt@a+1
  1889  003A18  C0AF  F0C3         	movff	?___fladd+2,sqrt@a+2
  1890  003A1C  C0B0  F0C4         	movff	?___fladd+3,sqrt@a+3
  1891  003A20  EC0D  F017         	call	_sqrt	;wreg free
  1892  003A24  C0C1  F17C         	movff	?_sqrt,asin@y
  1893  003A28  C0C2  F17D         	movff	?_sqrt+1,asin@y+1
  1894  003A2C  C0C3  F17E         	movff	?_sqrt+2,asin@y+2
  1895  003A30  C0C4  F17F         	movff	?_sqrt+3,asin@y+3
  1896  003A34  C16C  F0AD         	movff	asin@x,fabs@d
  1897  003A38  C16D  F0AE         	movff	asin@x+1,fabs@d+1
  1898  003A3C  C16E  F0AF         	movff	asin@x+2,fabs@d+2
  1899  003A40  C16F  F0B0         	movff	asin@x+3,fabs@d+3
  1900  003A44  ECD6  F026         	call	_fabs	;wreg free
  1901  003A48  C0AD  F0B1         	movff	?_fabs,___flge@ff1
  1902  003A4C  C0AE  F0B2         	movff	?_fabs+1,___flge@ff1+1
  1903  003A50  C0AF  F0B3         	movff	?_fabs+2,___flge@ff1+2
  1904  003A54  C0B0  F0B4         	movff	?_fabs+3,___flge@ff1+3
  1905  003A58  0E8F               	movlw	143
  1906  003A5A  0100               	movlb	0	; () banked
  1907  003A5C  6FB5               	movwf	___flge@ff2& (0+255),b
  1908  003A5E  0EC2               	movlw	194
  1909  003A60  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  1910  003A62  0E35               	movlw	53
  1911  003A64  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  1912  003A66  0E3F               	movlw	63
  1913  003A68  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  1914  003A6A  EC61  F022         	call	___flge	;wreg free
  1915  003A6E  0100               	movlb	0	; () banked
  1916  003A70  B0D8               	btfsc	status,0,c
  1917  003A72  D02D               	goto	l6067
  1918                           
  1919                           ; BSR set to: 0
  1920  003A74  C16C  F077         	movff	asin@x,___fldiv@b
  1921  003A78  C16D  F078         	movff	asin@x+1,___fldiv@b+1
  1922  003A7C  C16E  F079         	movff	asin@x+2,___fldiv@b+2
  1923  003A80  C16F  F07A         	movff	asin@x+3,___fldiv@b+3
  1924  003A84  C17C  F07B         	movff	asin@y,___fldiv@a
  1925  003A88  C17D  F07C         	movff	asin@y+1,___fldiv@a+1
  1926  003A8C  C17E  F07D         	movff	asin@y+2,___fldiv@a+2
  1927  003A90  C17F  F07E         	movff	asin@y+3,___fldiv@a+3
  1928  003A94  ECF2  F018         	call	___fldiv	;wreg free
  1929  003A98  C077  F180         	movff	?___fldiv,_asin$3619
  1930  003A9C  C078  F181         	movff	?___fldiv+1,_asin$3619+1
  1931  003AA0  C079  F182         	movff	?___fldiv+2,_asin$3619+2
  1932  003AA4  C07A  F183         	movff	?___fldiv+3,_asin$3619+3
  1933  003AA8  C180  F0D1         	movff	_asin$3619,atan@f
  1934  003AAC  C181  F0D2         	movff	_asin$3619+1,atan@f+1
  1935  003AB0  C182  F0D3         	movff	_asin$3619+2,atan@f+2
  1936  003AB4  C183  F0D4         	movff	_asin$3619+3,atan@f+3
  1937  003AB8  EC6E  F01F         	call	_atan	;wreg free
  1938  003ABC  C0D1  F16C         	movff	?_atan,?_asin
  1939  003AC0  C0D2  F16D         	movff	?_atan+1,?_asin+1
  1940  003AC4  C0D3  F16E         	movff	?_atan+2,?_asin+2
  1941  003AC8  C0D4  F16F         	movff	?_atan+3,?_asin+3
  1942  003ACC  0012               	return	
  1943  003ACE                     l6067:
  1944  003ACE  0101               	movlb	1	; () banked
  1945  003AD0  AF6F               	btfss	(asin@x+3)& (0+255),7,b
  1946  003AD2  D06E               	goto	l6079
  1947                           
  1948                           ; BSR set to: 1
  1949  003AD4  C16C  F07B         	movff	asin@x,___fldiv@a
  1950  003AD8  C16D  F07C         	movff	asin@x+1,___fldiv@a+1
  1951  003ADC  C16E  F07D         	movff	asin@x+2,___fldiv@a+2
  1952  003AE0  C16F  F07E         	movff	asin@x+3,___fldiv@a+3
  1953  003AE4  C17C  F0A9         	movff	asin@y,___flneg@f1
  1954  003AE8  C17D  F0AA         	movff	asin@y+1,___flneg@f1+1
  1955  003AEC  C17E  F0AB         	movff	asin@y+2,___flneg@f1+2
  1956  003AF0  C17F  F0AC         	movff	asin@y+3,___flneg@f1+3
  1957  003AF4  ECF5  F026         	call	___flneg	;wreg free
  1958  003AF8  C0A9  F077         	movff	?___flneg,___fldiv@b
  1959  003AFC  C0AA  F078         	movff	?___flneg+1,___fldiv@b+1
  1960  003B00  C0AB  F079         	movff	?___flneg+2,___fldiv@b+2
  1961  003B04  C0AC  F07A         	movff	?___flneg+3,___fldiv@b+3
  1962  003B08  ECF2  F018         	call	___fldiv	;wreg free
  1963  003B0C  C077  F180         	movff	?___fldiv,_asin$3619
  1964  003B10  C078  F181         	movff	?___fldiv+1,_asin$3619+1
  1965  003B14  C079  F182         	movff	?___fldiv+2,_asin$3619+2
  1966  003B18  C07A  F183         	movff	?___fldiv+3,_asin$3619+3
  1967  003B1C  C180  F0D1         	movff	_asin$3619,atan@f
  1968  003B20  C181  F0D2         	movff	_asin$3619+1,atan@f+1
  1969  003B24  C182  F0D3         	movff	_asin$3619+2,atan@f+2
  1970  003B28  C183  F0D4         	movff	_asin$3619+3,atan@f+3
  1971  003B2C  EC6E  F01F         	call	_atan	;wreg free
  1972  003B30  C0D1  F178         	movff	?_atan,_asin$3620
  1973  003B34  C0D2  F179         	movff	?_atan+1,_asin$3620+1
  1974  003B38  C0D3  F17A         	movff	?_atan+2,_asin$3620+2
  1975  003B3C  C0D4  F17B         	movff	?_atan+3,_asin$3620+3
  1976  003B40  0EDB               	movlw	219
  1977  003B42  0100               	movlb	0	; () banked
  1978  003B44  6FB1               	movwf	___fladd@a& (0+255),b
  1979  003B46  0E0F               	movlw	15
  1980  003B48  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  1981  003B4A  0EC9               	movlw	201
  1982  003B4C  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  1983  003B4E  0E3F               	movlw	63
  1984  003B50  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  1985  003B52  C178  F0A9         	movff	_asin$3620,___flneg@f1
  1986  003B56  C179  F0AA         	movff	_asin$3620+1,___flneg@f1+1
  1987  003B5A  C17A  F0AB         	movff	_asin$3620+2,___flneg@f1+2
  1988  003B5E  C17B  F0AC         	movff	_asin$3620+3,___flneg@f1+3
  1989  003B62  ECF5  F026         	call	___flneg	;wreg free
  1990  003B66  C0A9  F0AD         	movff	?___flneg,___fladd@b
  1991  003B6A  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  1992  003B6E  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  1993  003B72  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  1994  003B76  EC66  F012         	call	___fladd	;wreg free
  1995  003B7A  C0AD  F174         	movff	?___fladd,_asin$3621
  1996  003B7E  C0AE  F175         	movff	?___fladd+1,_asin$3621+1
  1997  003B82  C0AF  F176         	movff	?___fladd+2,_asin$3621+2
  1998  003B86  C0B0  F177         	movff	?___fladd+3,_asin$3621+3
  1999  003B8A  C174  F0A9         	movff	_asin$3621,___flneg@f1
  2000  003B8E  C175  F0AA         	movff	_asin$3621+1,___flneg@f1+1
  2001  003B92  C176  F0AB         	movff	_asin$3621+2,___flneg@f1+2
  2002  003B96  C177  F0AC         	movff	_asin$3621+3,___flneg@f1+3
  2003  003B9A  ECF5  F026         	call	___flneg	;wreg free
  2004  003B9E  C0A9  F16C         	movff	?___flneg,?_asin
  2005  003BA2  C0AA  F16D         	movff	?___flneg+1,?_asin+1
  2006  003BA6  C0AB  F16E         	movff	?___flneg+2,?_asin+2
  2007  003BAA  C0AC  F16F         	movff	?___flneg+3,?_asin+3
  2008  003BAE  0012               	return	
  2009  003BB0                     l6079:
  2010  003BB0  C16C  F07B         	movff	asin@x,___fldiv@a
  2011  003BB4  C16D  F07C         	movff	asin@x+1,___fldiv@a+1
  2012  003BB8  C16E  F07D         	movff	asin@x+2,___fldiv@a+2
  2013  003BBC  C16F  F07E         	movff	asin@x+3,___fldiv@a+3
  2014  003BC0  C17C  F077         	movff	asin@y,___fldiv@b
  2015  003BC4  C17D  F078         	movff	asin@y+1,___fldiv@b+1
  2016  003BC8  C17E  F079         	movff	asin@y+2,___fldiv@b+2
  2017  003BCC  C17F  F07A         	movff	asin@y+3,___fldiv@b+3
  2018  003BD0  ECF2  F018         	call	___fldiv	;wreg free
  2019  003BD4  C077  F180         	movff	?___fldiv,_asin$3619
  2020  003BD8  C078  F181         	movff	?___fldiv+1,_asin$3619+1
  2021  003BDC  C079  F182         	movff	?___fldiv+2,_asin$3619+2
  2022  003BE0  C07A  F183         	movff	?___fldiv+3,_asin$3619+3
  2023  003BE4  C180  F0D1         	movff	_asin$3619,atan@f
  2024  003BE8  C181  F0D2         	movff	_asin$3619+1,atan@f+1
  2025  003BEC  C182  F0D3         	movff	_asin$3619+2,atan@f+2
  2026  003BF0  C183  F0D4         	movff	_asin$3619+3,atan@f+3
  2027  003BF4  EC6E  F01F         	call	_atan	;wreg free
  2028  003BF8  C0D1  F178         	movff	?_atan,_asin$3620
  2029  003BFC  C0D2  F179         	movff	?_atan+1,_asin$3620+1
  2030  003C00  C0D3  F17A         	movff	?_atan+2,_asin$3620+2
  2031  003C04  C0D4  F17B         	movff	?_atan+3,_asin$3620+3
  2032  003C08  C178  F0A9         	movff	_asin$3620,___flneg@f1
  2033  003C0C  C179  F0AA         	movff	_asin$3620+1,___flneg@f1+1
  2034  003C10  C17A  F0AB         	movff	_asin$3620+2,___flneg@f1+2
  2035  003C14  C17B  F0AC         	movff	_asin$3620+3,___flneg@f1+3
  2036  003C18  ECF5  F026         	call	___flneg	;wreg free
  2037  003C1C  C0A9  F0AD         	movff	?___flneg,___fladd@b
  2038  003C20  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  2039  003C24  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  2040  003C28  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  2041  003C2C  0EDB               	movlw	219
  2042  003C2E  0100               	movlb	0	; () banked
  2043  003C30  6FB1               	movwf	___fladd@a& (0+255),b
  2044  003C32  0E0F               	movlw	15
  2045  003C34  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  2046  003C36  0EC9               	movlw	201
  2047  003C38  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  2048  003C3A  0E3F               	movlw	63
  2049  003C3C  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  2050  003C3E  EC66  F012         	call	___fladd	;wreg free
  2051  003C42  C0AD  F16C         	movff	?___fladd,?_asin
  2052  003C46  C0AE  F16D         	movff	?___fladd+1,?_asin+1
  2053  003C4A  C0AF  F16E         	movff	?___fladd+2,?_asin+2
  2054  003C4E  C0B0  F16F         	movff	?___fladd+3,?_asin+3
  2055  003C52  0012               	return	
  2056  003C54                     __end_of_asin:
  2057                           	opt stack 0
  2058                           tblptru	equ	0xFF8
  2059                           tblptrh	equ	0xFF7
  2060                           tblptrl	equ	0xFF6
  2061                           tablat	equ	0xFF5
  2062                           postinc0	equ	0xFEE
  2063                           wreg	equ	0xFE8
  2064                           postinc2	equ	0xFDE
  2065                           postdec2	equ	0xFDD
  2066                           status	equ	0xFD8
  2067                           
  2068 ;; *************** function _sqrt *****************
  2069 ;; Defined at:
  2070 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcsqrt.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;  a               4   97[BANK0 ] PTR unsigned char 
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;  frac            4   17[BANK1 ] unsigned long 
  2075 ;;  root            4   13[BANK1 ] struct .
  2076 ;;  grs             4    7[BANK1 ] unsigned long 
  2077 ;;  tfrac           4    2[BANK1 ] unsigned long 
  2078 ;;  exp             2   11[BANK1 ] int 
  2079 ;;  p               1    6[BANK1 ] unsigned char 
  2080 ;;  i               1    1[BANK1 ] unsigned char 
  2081 ;;  sign            1    0[BANK1 ] unsigned char 
  2082 ;; Return value:  Size  Location     Type
  2083 ;;                  4   97[BANK0 ] unsigned char 
  2084 ;; Registers used:
  2085 ;;		wreg, status,2, status,0
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/0
  2088 ;;		On exit  : 0/0
  2089 ;;		Unchanged: 0/0
  2090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2091 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2092 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
  2093 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2094 ;;      Totals:         0       8      21       0       0       0       0       0       0       0       0       0       
      +0       0
  2095 ;;Total ram usage:       29 bytes
  2096 ;; Hardware stack levels used:    1
  2097 ;; Hardware stack levels required when called:    4
  2098 ;; This function calls:
  2099 ;;		Nothing
  2100 ;; This function is called by:
  2101 ;;		_parallelo
  2102 ;;		_asin
  2103 ;; This function uses a non-reentrant model
  2104 ;;
  2105                           
  2106                           	psect	text4
  2107  002E1A                     __ptext4:
  2108                           	opt stack 0
  2109  002E1A                     _sqrt:
  2110                           	opt stack 24
  2111                           
  2112                           ;incstack = 0
  2113  002E1A  0100               	movlb	0	; () banked
  2114  002E1C  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  2115  002E1E  0B80               	andlw	128
  2116  002E20  0101               	movlb	1	; () banked
  2117  002E22  6F57               	movwf	sqrt@sign& (0+255),b
  2118  002E24  0100               	movlb	0	; () banked
  2119  002E26  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  2120  002E28  25C4               	addwf	(sqrt@a+3)& (0+255),w,b
  2121  002E2A  0101               	movlb	1	; () banked
  2122  002E2C  6F5D               	movwf	sqrt@p& (0+255),b
  2123                           
  2124                           ; BSR set to: 1
  2125  002E2E  0100               	movlb	0	; () banked
  2126  002E30  AFC3               	btfss	(sqrt@a+2)& (0+255),7,b
  2127  002E32  D002               	goto	l5927
  2128                           
  2129                           ; BSR set to: 0
  2130  002E34  0101               	movlb	1	; () banked
  2131  002E36  815D               	bsf	sqrt@p& (0+255),0,b
  2132  002E38                     l5927:
  2133  002E38  C15D  F162         	movff	sqrt@p,sqrt@exp
  2134  002E3C  0101               	movlb	1	; () banked
  2135  002E3E  6B63               	clrf	(sqrt@exp+1)& (0+255),b
  2136                           
  2137                           ; BSR set to: 1
  2138  002E40  0EFF               	movlw	255
  2139  002E42  0100               	movlb	0	; () banked
  2140  002E44  15C1               	andwf	sqrt@a& (0+255),w,b
  2141  002E46  0101               	movlb	1	; () banked
  2142  002E48  6F68               	movwf	sqrt@frac& (0+255),b
  2143  002E4A  0EFF               	movlw	255
  2144  002E4C  0100               	movlb	0	; () banked
  2145  002E4E  15C2               	andwf	(sqrt@a+1)& (0+255),w,b
  2146  002E50  0101               	movlb	1	; () banked
  2147  002E52  6F69               	movwf	(sqrt@frac+1)& (0+255),b
  2148  002E54  0E7F               	movlw	127
  2149  002E56  0100               	movlb	0	; () banked
  2150  002E58  15C3               	andwf	(sqrt@a+2)& (0+255),w,b
  2151  002E5A  0101               	movlb	1	; () banked
  2152  002E5C  6F6A               	movwf	(sqrt@frac+2)& (0+255),b
  2153  002E5E  0E00               	movlw	0
  2154  002E60  0100               	movlb	0	; () banked
  2155  002E62  15C4               	andwf	(sqrt@a+3)& (0+255),w,b
  2156  002E64  0101               	movlb	1	; () banked
  2157  002E66  6F6B               	movwf	(sqrt@frac+3)& (0+255),b
  2158                           
  2159                           ; BSR set to: 1
  2160  002E68  0101               	movlb	1	; () banked
  2161  002E6A  5162               	movf	sqrt@exp& (0+255),w,b
  2162  002E6C  0101               	movlb	1	; () banked
  2163  002E6E  1163               	iorwf	(sqrt@exp+1)& (0+255),w,b
  2164  002E70  B4D8               	btfsc	status,2,c
  2165  002E72  D008               	goto	l5939
  2166                           
  2167                           ; BSR set to: 1
  2168  002E74  0101               	movlb	1	; () banked
  2169  002E76  8F6A               	bsf	(sqrt@frac+2)& (0+255),7,b
  2170                           
  2171                           ; BSR set to: 1
  2172  002E78  0101               	movlb	1	; () banked
  2173  002E7A  2962               	incf	sqrt@exp& (0+255),w,b
  2174  002E7C  0101               	movlb	1	; () banked
  2175  002E7E  1163               	iorwf	(sqrt@exp+1)& (0+255),w,b
  2176  002E80  A4D8               	btfss	status,2,c
  2177  002E82  D009               	goto	l5941
  2178  002E84                     l5939:
  2179                           
  2180                           ; BSR set to: 1
  2181  002E84  0E00               	movlw	0
  2182  002E86  0101               	movlb	1	; () banked
  2183  002E88  6F68               	movwf	sqrt@frac& (0+255),b
  2184  002E8A  0E00               	movlw	0
  2185  002E8C  6F69               	movwf	(sqrt@frac+1)& (0+255),b
  2186  002E8E  0E00               	movlw	0
  2187  002E90  6F6A               	movwf	(sqrt@frac+2)& (0+255),b
  2188  002E92  0E00               	movlw	0
  2189  002E94  6F6B               	movwf	(sqrt@frac+3)& (0+255),b
  2190  002E96                     l5941:
  2191                           
  2192                           ; BSR set to: 1
  2193  002E96  0101               	movlb	1	; () banked
  2194  002E98  5162               	movf	sqrt@exp& (0+255),w,b
  2195  002E9A  0101               	movlb	1	; () banked
  2196  002E9C  1163               	iorwf	(sqrt@exp+1)& (0+255),w,b
  2197  002E9E  A4D8               	btfss	status,2,c
  2198  002EA0  D00A               	goto	l5947
  2199                           
  2200                           ; BSR set to: 1
  2201  002EA2  0E00               	movlw	0
  2202  002EA4  0100               	movlb	0	; () banked
  2203  002EA6  6FC1               	movwf	?_sqrt& (0+255),b
  2204  002EA8  0E00               	movlw	0
  2205  002EAA  6FC2               	movwf	(?_sqrt+1)& (0+255),b
  2206  002EAC  0E00               	movlw	0
  2207  002EAE  6FC3               	movwf	(?_sqrt+2)& (0+255),b
  2208  002EB0  0E00               	movlw	0
  2209  002EB2  6FC4               	movwf	(?_sqrt+3)& (0+255),b
  2210                           
  2211                           ; BSR set to: 0
  2212  002EB4  0012               	return	
  2213  002EB6                     l5947:
  2214  002EB6  0101               	movlb	1	; () banked
  2215  002EB8  5157               	movf	sqrt@sign& (0+255),w,b
  2216  002EBA  0101               	movlb	1	; () banked
  2217  002EBC  B4D8               	btfsc	status,2,c
  2218  002EBE  D01C               	goto	l5959
  2219                           
  2220                           ; BSR set to: 1
  2221  002EC0  0E00               	movlw	0
  2222  002EC2  0101               	movlb	1	; () banked
  2223  002EC4  6F64               	movwf	sqrt@root& (0+255),b
  2224  002EC6  0E00               	movlw	0
  2225  002EC8  6F65               	movwf	(sqrt@root+1)& (0+255),b
  2226  002ECA  0E40               	movlw	64
  2227  002ECC  6F66               	movwf	(sqrt@root+2)& (0+255),b
  2228  002ECE  0E00               	movlw	0
  2229  002ED0  6F67               	movwf	(sqrt@root+3)& (0+255),b
  2230                           
  2231                           ; BSR set to: 1
  2232  002ED2  0101               	movlb	1	; () banked
  2233  002ED4  0E80               	movlw	128
  2234  002ED6  1366               	iorwf	(sqrt@root+2)& (0+255),f,b
  2235  002ED8  0EFF               	movlw	255
  2236  002EDA  1367               	iorwf	(sqrt@root+3)& (0+255),f,b
  2237                           
  2238                           ; BSR set to: 1
  2239  002EDC  0E00               	movlw	0
  2240  002EDE  0101               	movlb	1	; () banked
  2241  002EE0  6F1F               	movwf	(_errno+1)& (0+255),b
  2242  002EE2  0E21               	movlw	33
  2243  002EE4  6F1E               	movwf	_errno& (0+255),b
  2244                           
  2245                           ; BSR set to: 1
  2246  002EE6  C164  F0C1         	movff	sqrt@root,?_sqrt
  2247  002EEA  C165  F0C2         	movff	sqrt@root+1,?_sqrt+1
  2248  002EEE  C166  F0C3         	movff	sqrt@root+2,?_sqrt+2
  2249  002EF2  C167  F0C4         	movff	sqrt@root+3,?_sqrt+3
  2250                           
  2251                           ; BSR set to: 1
  2252  002EF6  0012               	return	
  2253  002EF8                     l5959:
  2254                           
  2255                           ; BSR set to: 1
  2256  002EF8  0101               	movlb	1	; () banked
  2257  002EFA  2962               	incf	sqrt@exp& (0+255),w,b
  2258  002EFC  0101               	movlb	1	; () banked
  2259  002EFE  1163               	iorwf	(sqrt@exp+1)& (0+255),w,b
  2260  002F00  A4D8               	btfss	status,2,c
  2261  002F02  D012               	goto	l5967
  2262                           
  2263                           ; BSR set to: 1
  2264  002F04  0E00               	movlw	0
  2265  002F06  0101               	movlb	1	; () banked
  2266  002F08  6F64               	movwf	sqrt@root& (0+255),b
  2267  002F0A  0E00               	movlw	0
  2268  002F0C  6F65               	movwf	(sqrt@root+1)& (0+255),b
  2269  002F0E  0E80               	movlw	128
  2270  002F10  6F66               	movwf	(sqrt@root+2)& (0+255),b
  2271  002F12  0E7F               	movlw	127
  2272  002F14  6F67               	movwf	(sqrt@root+3)& (0+255),b
  2273                           
  2274                           ; BSR set to: 1
  2275  002F16  C164  F0C1         	movff	sqrt@root,?_sqrt
  2276  002F1A  C165  F0C2         	movff	sqrt@root+1,?_sqrt+1
  2277  002F1E  C166  F0C3         	movff	sqrt@root+2,?_sqrt+2
  2278  002F22  C167  F0C4         	movff	sqrt@root+3,?_sqrt+3
  2279                           
  2280                           ; BSR set to: 1
  2281  002F26  0012               	return	
  2282  002F28                     l5967:
  2283                           
  2284                           ; BSR set to: 1
  2285  002F28  0101               	movlb	1	; () banked
  2286  002F2A  0E81               	movlw	129
  2287  002F2C  2762               	addwf	sqrt@exp& (0+255),f,b
  2288  002F2E  0EFF               	movlw	255
  2289  002F30  2363               	addwfc	(sqrt@exp+1)& (0+255),f,b
  2290  002F32  0101               	movlb	1	; () banked
  2291  002F34  5162               	movf	sqrt@exp& (0+255),w,b
  2292  002F36  0B01               	andlw	1
  2293  002F38  0101               	movlb	1	; () banked
  2294  002F3A  6F5D               	movwf	sqrt@p& (0+255),b
  2295  002F3C  0101               	movlb	1	; () banked
  2296  002F3E  3563               	rlcf	(sqrt@exp+1)& (0+255),w,b
  2297  002F40  3363               	rrcf	(sqrt@exp+1)& (0+255),f,b
  2298  002F42  3362               	rrcf	sqrt@exp& (0+255),f,b
  2299  002F44  0E7F               	movlw	127
  2300  002F46  0101               	movlb	1	; () banked
  2301  002F48  2762               	addwf	sqrt@exp& (0+255),f,b
  2302  002F4A  0E00               	movlw	0
  2303  002F4C  2363               	addwfc	(sqrt@exp+1)& (0+255),f,b
  2304  002F4E  90D8               	bcf	status,0,c
  2305  002F50  0101               	movlb	1	; () banked
  2306  002F52  3568               	rlcf	sqrt@frac& (0+255),w,b
  2307  002F54  0101               	movlb	1	; () banked
  2308  002F56  6F59               	movwf	sqrt@tfrac& (0+255),b
  2309  002F58  0101               	movlb	1	; () banked
  2310  002F5A  3569               	rlcf	(sqrt@frac+1)& (0+255),w,b
  2311  002F5C  0101               	movlb	1	; () banked
  2312  002F5E  6F5A               	movwf	(sqrt@tfrac+1)& (0+255),b
  2313  002F60  0101               	movlb	1	; () banked
  2314  002F62  356A               	rlcf	(sqrt@frac+2)& (0+255),w,b
  2315  002F64  0101               	movlb	1	; () banked
  2316  002F66  6F5B               	movwf	(sqrt@tfrac+2)& (0+255),b
  2317  002F68  0101               	movlb	1	; () banked
  2318  002F6A  356B               	rlcf	(sqrt@frac+3)& (0+255),w,b
  2319  002F6C  0101               	movlb	1	; () banked
  2320  002F6E  6F5C               	movwf	(sqrt@tfrac+3)& (0+255),b
  2321                           
  2322                           ; BSR set to: 1
  2323  002F70  0E00               	movlw	0
  2324  002F72  0101               	movlb	1	; () banked
  2325  002F74  6F68               	movwf	sqrt@frac& (0+255),b
  2326  002F76  0E00               	movlw	0
  2327  002F78  6F69               	movwf	(sqrt@frac+1)& (0+255),b
  2328  002F7A  0E00               	movlw	0
  2329  002F7C  6F6A               	movwf	(sqrt@frac+2)& (0+255),b
  2330  002F7E  0E00               	movlw	0
  2331  002F80  6F6B               	movwf	(sqrt@frac+3)& (0+255),b
  2332                           
  2333                           ; BSR set to: 1
  2334  002F82  0E00               	movlw	0
  2335  002F84  0101               	movlb	1	; () banked
  2336  002F86  6F5E               	movwf	sqrt@grs& (0+255),b
  2337  002F88  0E00               	movlw	0
  2338  002F8A  6F5F               	movwf	(sqrt@grs+1)& (0+255),b
  2339  002F8C  0E00               	movlw	0
  2340  002F8E  6F60               	movwf	(sqrt@grs+2)& (0+255),b
  2341  002F90  0E01               	movlw	1
  2342  002F92  6F61               	movwf	(sqrt@grs+3)& (0+255),b
  2343                           
  2344                           ; BSR set to: 1
  2345  002F94  0101               	movlb	1	; () banked
  2346  002F96  515D               	movf	sqrt@p& (0+255),w,b
  2347  002F98  0101               	movlb	1	; () banked
  2348  002F9A  B4D8               	btfsc	status,2,c
  2349  002F9C  D006               	goto	l5977
  2350                           
  2351                           ; BSR set to: 1
  2352  002F9E  0101               	movlb	1	; () banked
  2353  002FA0  90D8               	bcf	status,0,c
  2354  002FA2  3759               	rlcf	sqrt@tfrac& (0+255),f,b
  2355  002FA4  375A               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  2356  002FA6  375B               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  2357  002FA8  375C               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  2358  002FAA                     l5977:
  2359                           
  2360                           ; BSR set to: 1
  2361  002FAA  0E00               	movlw	0
  2362  002FAC  0101               	movlb	1	; () banked
  2363  002FAE  6F58               	movwf	sqrt@i& (0+255),b
  2364  002FB0  D07E               	goto	l5991
  2365  002FB2                     l5979:
  2366                           
  2367                           ; BSR set to: 1
  2368  002FB2  0101               	movlb	1	; () banked
  2369  002FB4  515E               	movf	sqrt@grs& (0+255),w,b
  2370  002FB6  0101               	movlb	1	; () banked
  2371  002FB8  1368               	iorwf	sqrt@frac& (0+255),f,b
  2372  002FBA  0101               	movlb	1	; () banked
  2373  002FBC  515F               	movf	(sqrt@grs+1)& (0+255),w,b
  2374  002FBE  0101               	movlb	1	; () banked
  2375  002FC0  1369               	iorwf	(sqrt@frac+1)& (0+255),f,b
  2376  002FC2  0101               	movlb	1	; () banked
  2377  002FC4  5160               	movf	(sqrt@grs+2)& (0+255),w,b
  2378  002FC6  0101               	movlb	1	; () banked
  2379  002FC8  136A               	iorwf	(sqrt@frac+2)& (0+255),f,b
  2380  002FCA  0101               	movlb	1	; () banked
  2381  002FCC  5161               	movf	(sqrt@grs+3)& (0+255),w,b
  2382  002FCE  0101               	movlb	1	; () banked
  2383  002FD0  136B               	iorwf	(sqrt@frac+3)& (0+255),f,b
  2384  002FD2  0101               	movlb	1	; () banked
  2385  002FD4  5168               	movf	sqrt@frac& (0+255),w,b
  2386  002FD6  0101               	movlb	1	; () banked
  2387  002FD8  5D59               	subwf	sqrt@tfrac& (0+255),w,b
  2388  002FDA  0101               	movlb	1	; () banked
  2389  002FDC  5169               	movf	(sqrt@frac+1)& (0+255),w,b
  2390  002FDE  0101               	movlb	1	; () banked
  2391  002FE0  595A               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
  2392  002FE2  0101               	movlb	1	; () banked
  2393  002FE4  516A               	movf	(sqrt@frac+2)& (0+255),w,b
  2394  002FE6  0101               	movlb	1	; () banked
  2395  002FE8  595B               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
  2396  002FEA  0101               	movlb	1	; () banked
  2397  002FEC  516B               	movf	(sqrt@frac+3)& (0+255),w,b
  2398  002FEE  0101               	movlb	1	; () banked
  2399  002FF0  595C               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
  2400  002FF2  A0D8               	btfss	status,0,c
  2401  002FF4  D021               	goto	l5983
  2402                           
  2403                           ; BSR set to: 1
  2404  002FF6  0101               	movlb	1	; () banked
  2405  002FF8  5168               	movf	sqrt@frac& (0+255),w,b
  2406  002FFA  0101               	movlb	1	; () banked
  2407  002FFC  5F59               	subwf	sqrt@tfrac& (0+255),f,b
  2408  002FFE  0101               	movlb	1	; () banked
  2409  003000  5169               	movf	(sqrt@frac+1)& (0+255),w,b
  2410  003002  0101               	movlb	1	; () banked
  2411  003004  5B5A               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
  2412  003006  0101               	movlb	1	; () banked
  2413  003008  516A               	movf	(sqrt@frac+2)& (0+255),w,b
  2414  00300A  0101               	movlb	1	; () banked
  2415  00300C  5B5B               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
  2416  00300E  0101               	movlb	1	; () banked
  2417  003010  516B               	movf	(sqrt@frac+3)& (0+255),w,b
  2418  003012  0101               	movlb	1	; () banked
  2419  003014  5B5C               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
  2420  003016  0101               	movlb	1	; () banked
  2421  003018  515E               	movf	sqrt@grs& (0+255),w,b
  2422  00301A  0101               	movlb	1	; () banked
  2423  00301C  2768               	addwf	sqrt@frac& (0+255),f,b
  2424  00301E  0101               	movlb	1	; () banked
  2425  003020  515F               	movf	(sqrt@grs+1)& (0+255),w,b
  2426  003022  0101               	movlb	1	; () banked
  2427  003024  2369               	addwfc	(sqrt@frac+1)& (0+255),f,b
  2428  003026  0101               	movlb	1	; () banked
  2429  003028  5160               	movf	(sqrt@grs+2)& (0+255),w,b
  2430  00302A  0101               	movlb	1	; () banked
  2431  00302C  236A               	addwfc	(sqrt@frac+2)& (0+255),f,b
  2432  00302E  0101               	movlb	1	; () banked
  2433  003030  5161               	movf	(sqrt@grs+3)& (0+255),w,b
  2434  003032  0101               	movlb	1	; () banked
  2435  003034  236B               	addwfc	(sqrt@frac+3)& (0+255),f,b
  2436  003036  D01D               	goto	l5985
  2437  003038                     l5983:
  2438                           
  2439                           ; BSR set to: 1
  2440  003038  C15E  F0C5         	movff	sqrt@grs,??_sqrt
  2441  00303C  C15F  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  2442  003040  C160  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  2443  003044  C161  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  2444  003048  0100               	movlb	0	; () banked
  2445  00304A  1FC5               	comf	??_sqrt& (0+255),f,b
  2446  00304C  1FC6               	comf	(??_sqrt+1)& (0+255),f,b
  2447  00304E  1FC7               	comf	(??_sqrt+2)& (0+255),f,b
  2448  003050  1FC8               	comf	(??_sqrt+3)& (0+255),f,b
  2449  003052  0100               	movlb	0	; () banked
  2450  003054  51C5               	movf	??_sqrt& (0+255),w,b
  2451  003056  0101               	movlb	1	; () banked
  2452  003058  1768               	andwf	sqrt@frac& (0+255),f,b
  2453  00305A  0100               	movlb	0	; () banked
  2454  00305C  51C6               	movf	(??_sqrt+1)& (0+255),w,b
  2455  00305E  0101               	movlb	1	; () banked
  2456  003060  1769               	andwf	(sqrt@frac+1)& (0+255),f,b
  2457  003062  0100               	movlb	0	; () banked
  2458  003064  51C7               	movf	(??_sqrt+2)& (0+255),w,b
  2459  003066  0101               	movlb	1	; () banked
  2460  003068  176A               	andwf	(sqrt@frac+2)& (0+255),f,b
  2461  00306A  0100               	movlb	0	; () banked
  2462  00306C  51C8               	movf	(??_sqrt+3)& (0+255),w,b
  2463  00306E  0101               	movlb	1	; () banked
  2464  003070  176B               	andwf	(sqrt@frac+3)& (0+255),f,b
  2465  003072                     l5985:
  2466                           
  2467                           ; BSR set to: 1
  2468  003072  C15E  F0C5         	movff	sqrt@grs,??_sqrt
  2469  003076  C15F  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  2470  00307A  C160  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  2471  00307E  C161  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  2472  003082  0100               	movlb	0	; () banked
  2473  003084  90D8               	bcf	status,0,c
  2474  003086  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  2475  003088  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  2476  00308A  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  2477  00308C  33C5               	rrcf	??_sqrt& (0+255),f,b
  2478  00308E  C0C5  F15E         	movff	??_sqrt,sqrt@grs
  2479  003092  C0C6  F15F         	movff	??_sqrt+1,sqrt@grs+1
  2480  003096  C0C7  F160         	movff	??_sqrt+2,sqrt@grs+2
  2481  00309A  C0C8  F161         	movff	??_sqrt+3,sqrt@grs+3
  2482                           
  2483                           ; BSR set to: 0
  2484  00309E  0101               	movlb	1	; () banked
  2485  0030A0  90D8               	bcf	status,0,c
  2486  0030A2  3759               	rlcf	sqrt@tfrac& (0+255),f,b
  2487  0030A4  375A               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  2488  0030A6  375B               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  2489  0030A8  375C               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  2490                           
  2491                           ; BSR set to: 1
  2492  0030AA  0101               	movlb	1	; () banked
  2493  0030AC  2B58               	incf	sqrt@i& (0+255),f,b
  2494  0030AE                     l5991:
  2495                           
  2496                           ; BSR set to: 1
  2497  0030AE  0E18               	movlw	24
  2498  0030B0  0101               	movlb	1	; () banked
  2499  0030B2  6558               	cpfsgt	sqrt@i& (0+255),b
  2500  0030B4  D77E               	goto	l5979
  2501                           
  2502                           ; BSR set to: 1
  2503                           
  2504                           ; BSR set to: 1
  2505  0030B6  C168  F0C5         	movff	sqrt@frac,??_sqrt
  2506  0030BA  C169  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  2507  0030BE  C16A  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  2508  0030C2  C16B  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  2509  0030C6  0100               	movlb	0	; () banked
  2510  0030C8  90D8               	bcf	status,0,c
  2511  0030CA  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  2512  0030CC  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  2513  0030CE  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  2514  0030D0  33C5               	rrcf	??_sqrt& (0+255),f,b
  2515  0030D2  C0C5  F168         	movff	??_sqrt,sqrt@frac
  2516  0030D6  C0C6  F169         	movff	??_sqrt+1,sqrt@frac+1
  2517  0030DA  C0C7  F16A         	movff	??_sqrt+2,sqrt@frac+2
  2518  0030DE  C0C8  F16B         	movff	??_sqrt+3,sqrt@frac+3
  2519                           
  2520                           ; BSR set to: 0
  2521  0030E2  0E01               	movlw	1
  2522  0030E4  0101               	movlb	1	; () banked
  2523  0030E6  1568               	andwf	sqrt@frac& (0+255),w,b
  2524  0030E8  0101               	movlb	1	; () banked
  2525  0030EA  6F5E               	movwf	sqrt@grs& (0+255),b
  2526  0030EC  0E00               	movlw	0
  2527  0030EE  0101               	movlb	1	; () banked
  2528  0030F0  1569               	andwf	(sqrt@frac+1)& (0+255),w,b
  2529  0030F2  0101               	movlb	1	; () banked
  2530  0030F4  6F5F               	movwf	(sqrt@grs+1)& (0+255),b
  2531  0030F6  0E00               	movlw	0
  2532  0030F8  0101               	movlb	1	; () banked
  2533  0030FA  156A               	andwf	(sqrt@frac+2)& (0+255),w,b
  2534  0030FC  0101               	movlb	1	; () banked
  2535  0030FE  6F60               	movwf	(sqrt@grs+2)& (0+255),b
  2536  003100  0E00               	movlw	0
  2537  003102  0101               	movlb	1	; () banked
  2538  003104  156B               	andwf	(sqrt@frac+3)& (0+255),w,b
  2539  003106  0101               	movlb	1	; () banked
  2540  003108  6F61               	movwf	(sqrt@grs+3)& (0+255),b
  2541                           
  2542                           ; BSR set to: 1
  2543  00310A  C168  F0C5         	movff	sqrt@frac,??_sqrt
  2544  00310E  C169  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  2545  003112  C16A  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  2546  003116  C16B  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  2547  00311A  0100               	movlb	0	; () banked
  2548  00311C  90D8               	bcf	status,0,c
  2549  00311E  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  2550  003120  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  2551  003122  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  2552  003124  33C5               	rrcf	??_sqrt& (0+255),f,b
  2553  003126  C0C5  F168         	movff	??_sqrt,sqrt@frac
  2554  00312A  C0C6  F169         	movff	??_sqrt+1,sqrt@frac+1
  2555  00312E  C0C7  F16A         	movff	??_sqrt+2,sqrt@frac+2
  2556  003132  C0C8  F16B         	movff	??_sqrt+3,sqrt@frac+3
  2557  003136  0101               	movlb	1	; () banked
  2558  003138  515E               	movf	sqrt@grs& (0+255),w,b
  2559  00313A  0101               	movlb	1	; () banked
  2560  00313C  2768               	addwf	sqrt@frac& (0+255),f,b
  2561  00313E  0101               	movlb	1	; () banked
  2562  003140  515F               	movf	(sqrt@grs+1)& (0+255),w,b
  2563  003142  0101               	movlb	1	; () banked
  2564  003144  2369               	addwfc	(sqrt@frac+1)& (0+255),f,b
  2565  003146  0101               	movlb	1	; () banked
  2566  003148  5160               	movf	(sqrt@grs+2)& (0+255),w,b
  2567  00314A  0101               	movlb	1	; () banked
  2568  00314C  236A               	addwfc	(sqrt@frac+2)& (0+255),f,b
  2569  00314E  0101               	movlb	1	; () banked
  2570  003150  5161               	movf	(sqrt@grs+3)& (0+255),w,b
  2571  003152  0101               	movlb	1	; () banked
  2572  003154  236B               	addwfc	(sqrt@frac+3)& (0+255),f,b
  2573                           
  2574                           ; BSR set to: 1
  2575  003156  0101               	movlb	1	; () banked
  2576  003158  A16B               	btfss	(sqrt@frac+3)& (0+255),0,b
  2577  00315A  D019               	goto	l6003
  2578                           
  2579                           ; BSR set to: 1
  2580  00315C  C168  F0C5         	movff	sqrt@frac,??_sqrt
  2581  003160  C169  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  2582  003164  C16A  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  2583  003168  C16B  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  2584  00316C  0100               	movlb	0	; () banked
  2585  00316E  90D8               	bcf	status,0,c
  2586  003170  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  2587  003172  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  2588  003174  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  2589  003176  33C5               	rrcf	??_sqrt& (0+255),f,b
  2590  003178  C0C5  F168         	movff	??_sqrt,sqrt@frac
  2591  00317C  C0C6  F169         	movff	??_sqrt+1,sqrt@frac+1
  2592  003180  C0C7  F16A         	movff	??_sqrt+2,sqrt@frac+2
  2593  003184  C0C8  F16B         	movff	??_sqrt+3,sqrt@frac+3
  2594  003188  0101               	movlb	1	; () banked
  2595  00318A  4B62               	infsnz	sqrt@exp& (0+255),f,b
  2596  00318C  2B63               	incf	(sqrt@exp+1)& (0+255),f,b
  2597  00318E                     l6003:
  2598                           
  2599                           ; BSR set to: 1
  2600  00318E  0EFF               	movlw	255
  2601  003190  0101               	movlb	1	; () banked
  2602  003192  1568               	andwf	sqrt@frac& (0+255),w,b
  2603  003194  0101               	movlb	1	; () banked
  2604  003196  6F64               	movwf	sqrt@root& (0+255),b
  2605  003198  0EFF               	movlw	255
  2606  00319A  0101               	movlb	1	; () banked
  2607  00319C  1569               	andwf	(sqrt@frac+1)& (0+255),w,b
  2608  00319E  0101               	movlb	1	; () banked
  2609  0031A0  6F65               	movwf	(sqrt@root+1)& (0+255),b
  2610  0031A2  0E7F               	movlw	127
  2611  0031A4  0101               	movlb	1	; () banked
  2612  0031A6  156A               	andwf	(sqrt@frac+2)& (0+255),w,b
  2613  0031A8  0101               	movlb	1	; () banked
  2614  0031AA  6F66               	movwf	(sqrt@root+2)& (0+255),b
  2615  0031AC  0E00               	movlw	0
  2616  0031AE  0101               	movlb	1	; () banked
  2617  0031B0  156B               	andwf	(sqrt@frac+3)& (0+255),w,b
  2618  0031B2  0101               	movlb	1	; () banked
  2619  0031B4  6F67               	movwf	(sqrt@root+3)& (0+255),b
  2620                           
  2621                           ; BSR set to: 1
  2622  0031B6  C162  F15D         	movff	sqrt@exp,sqrt@p
  2623                           
  2624                           ; BSR set to: 1
  2625  0031BA  0101               	movlb	1	; () banked
  2626  0031BC  A15D               	btfss	sqrt@p& (0+255),0,b
  2627  0031BE  D002               	goto	l6011
  2628                           
  2629                           ; BSR set to: 1
  2630  0031C0  0101               	movlb	1	; () banked
  2631  0031C2  8F66               	bsf	(sqrt@root+2)& (0+255),7,b
  2632  0031C4                     l6011:
  2633                           
  2634                           ; BSR set to: 1
  2635  0031C4  0101               	movlb	1	; () banked
  2636  0031C6  90D8               	bcf	status,0,c
  2637  0031C8  315D               	rrcf	sqrt@p& (0+255),w,b
  2638  0031CA  0101               	movlb	1	; () banked
  2639  0031CC  6F67               	movwf	(sqrt@root+3)& (0+255),b
  2640                           
  2641                           ; BSR set to: 1
  2642  0031CE  0101               	movlb	1	; () banked
  2643  0031D0  9F67               	bcf	(sqrt@root+3)& (0+255),7,b
  2644                           
  2645                           ; BSR set to: 1
  2646  0031D2  C164  F0C1         	movff	sqrt@root,?_sqrt
  2647  0031D6  C165  F0C2         	movff	sqrt@root+1,?_sqrt+1
  2648  0031DA  C166  F0C3         	movff	sqrt@root+2,?_sqrt+2
  2649  0031DE  C167  F0C4         	movff	sqrt@root+3,?_sqrt+3
  2650  0031E2  0012               	return	
  2651  0031E4                     __end_of_sqrt:
  2652                           	opt stack 0
  2653                           tblptru	equ	0xFF8
  2654                           tblptrh	equ	0xFF7
  2655                           tblptrl	equ	0xFF6
  2656                           tablat	equ	0xFF5
  2657                           postinc0	equ	0xFEE
  2658                           wreg	equ	0xFE8
  2659                           postinc2	equ	0xFDE
  2660                           postdec2	equ	0xFDD
  2661                           status	equ	0xFD8
  2662                           
  2663 ;; *************** function _atan *****************
  2664 ;; Defined at:
  2665 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atan.c"
  2666 ;; Parameters:    Size  Location     Type
  2667 ;;  f               4  113[BANK0 ] unsigned char 
  2668 ;; Auto vars:     Size  Location     Type
  2669 ;;  val             4   13[BANK1 ] unsigned char 
  2670 ;;  val_squared     4    9[BANK1 ] unsigned char 
  2671 ;;  x               4    4[BANK1 ] unsigned char 
  2672 ;;  y               4    0[BANK1 ] unsigned char 
  2673 ;;  recip           1    8[BANK1 ] unsigned char 
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  4  113[BANK0 ] unsigned char 
  2676 ;; Registers used:
  2677 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2683 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2684 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  2685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2686 ;;      Totals:         0       4      17       0       0       0       0       0       0       0       0       0       
      +0       0
  2687 ;;Total ram usage:       21 bytes
  2688 ;; Hardware stack levels used:    1
  2689 ;; Hardware stack levels required when called:    6
  2690 ;; This function calls:
  2691 ;;		___fladd
  2692 ;;		___fldiv
  2693 ;;		___flge
  2694 ;;		___flmul
  2695 ;;		___flneg
  2696 ;;		_eval_poly
  2697 ;;		_fabs
  2698 ;; This function is called by:
  2699 ;;		_asin
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           	psect	text5
  2704  003EDC                     __ptext5:
  2705                           	opt stack 0
  2706  003EDC                     _atan:
  2707                           	opt stack 21
  2708                           
  2709                           ;incstack = 0
  2710  003EDC  C0D1  F0AD         	movff	atan@f,fabs@d
  2711  003EE0  C0D2  F0AE         	movff	atan@f+1,fabs@d+1
  2712  003EE4  C0D3  F0AF         	movff	atan@f+2,fabs@d+2
  2713  003EE8  C0D4  F0B0         	movff	atan@f+3,fabs@d+3
  2714  003EEC  ECD6  F026         	call	_fabs	;wreg free
  2715  003EF0  C0AD  F164         	movff	?_fabs,atan@val
  2716  003EF4  C0AE  F165         	movff	?_fabs+1,atan@val+1
  2717  003EF8  C0AF  F166         	movff	?_fabs+2,atan@val+2
  2718  003EFC  C0B0  F167         	movff	?_fabs+3,atan@val+3
  2719  003F00  0101               	movlb	1	; () banked
  2720  003F02  5164               	movf	atan@val& (0+255),w,b
  2721  003F04  0101               	movlb	1	; () banked
  2722  003F06  1165               	iorwf	(atan@val+1)& (0+255),w,b
  2723  003F08  0101               	movlb	1	; () banked
  2724  003F0A  1166               	iorwf	(atan@val+2)& (0+255),w,b
  2725  003F0C  0101               	movlb	1	; () banked
  2726  003F0E  1167               	iorwf	(atan@val+3)& (0+255),w,b
  2727  003F10  A4D8               	btfss	status,2,c
  2728  003F12  D00A               	goto	l6025
  2729                           
  2730                           ; BSR set to: 1
  2731  003F14  0E00               	movlw	0
  2732  003F16  0100               	movlb	0	; () banked
  2733  003F18  6FD1               	movwf	?_atan& (0+255),b
  2734  003F1A  0E00               	movlw	0
  2735  003F1C  6FD2               	movwf	(?_atan+1)& (0+255),b
  2736  003F1E  0E00               	movlw	0
  2737  003F20  6FD3               	movwf	(?_atan+2)& (0+255),b
  2738  003F22  0E00               	movlw	0
  2739  003F24  6FD4               	movwf	(?_atan+3)& (0+255),b
  2740                           
  2741                           ; BSR set to: 0
  2742  003F26  0012               	return	
  2743  003F28                     l6025:
  2744  003F28  0E00               	movlw	0
  2745  003F2A  0100               	movlb	0	; () banked
  2746  003F2C  6FB1               	movwf	___flge@ff1& (0+255),b
  2747  003F2E  0E00               	movlw	0
  2748  003F30  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  2749  003F32  0E80               	movlw	128
  2750  003F34  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  2751  003F36  0E3F               	movlw	63
  2752  003F38  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  2753  003F3A  C164  F0B5         	movff	atan@val,___flge@ff2
  2754  003F3E  C165  F0B6         	movff	atan@val+1,___flge@ff2+1
  2755  003F42  C166  F0B7         	movff	atan@val+2,___flge@ff2+2
  2756  003F46  C167  F0B8         	movff	atan@val+3,___flge@ff2+3
  2757  003F4A  EC61  F022         	call	___flge	;wreg free
  2758  003F4E  0100               	movlb	0	; () banked
  2759  003F50  B0D8               	btfsc	status,0,c
  2760  003F52  D002               	goto	u7760
  2761  003F54  0E01               	movlw	1
  2762  003F56  D001               	goto	u7770
  2763  003F58                     u7760:
  2764  003F58  0E00               	movlw	0
  2765  003F5A                     u7770:
  2766  003F5A  0101               	movlb	1	; () banked
  2767  003F5C  6F5F               	movwf	atan@recip& (0+255),b
  2768  003F5E  0101               	movlb	1	; () banked
  2769  003F60  515F               	movf	atan@recip& (0+255),w,b
  2770  003F62  B4D8               	btfsc	status,2,c
  2771  003F64  D01B               	goto	l6029
  2772                           
  2773                           ; BSR set to: 1
  2774  003F66  0E00               	movlw	0
  2775  003F68  0100               	movlb	0	; () banked
  2776  003F6A  6F77               	movwf	___fldiv@b& (0+255),b
  2777  003F6C  0E00               	movlw	0
  2778  003F6E  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  2779  003F70  0E80               	movlw	128
  2780  003F72  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  2781  003F74  0E3F               	movlw	63
  2782  003F76  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  2783  003F78  C164  F07B         	movff	atan@val,___fldiv@a
  2784  003F7C  C165  F07C         	movff	atan@val+1,___fldiv@a+1
  2785  003F80  C166  F07D         	movff	atan@val+2,___fldiv@a+2
  2786  003F84  C167  F07E         	movff	atan@val+3,___fldiv@a+3
  2787  003F88  ECF2  F018         	call	___fldiv	;wreg free
  2788  003F8C  C077  F164         	movff	?___fldiv,atan@val
  2789  003F90  C078  F165         	movff	?___fldiv+1,atan@val+1
  2790  003F94  C079  F166         	movff	?___fldiv+2,atan@val+2
  2791  003F98  C07A  F167         	movff	?___fldiv+3,atan@val+3
  2792  003F9C                     l6029:
  2793  003F9C  C164  F090         	movff	atan@val,___flmul@b
  2794  003FA0  C165  F091         	movff	atan@val+1,___flmul@b+1
  2795  003FA4  C166  F092         	movff	atan@val+2,___flmul@b+2
  2796  003FA8  C167  F093         	movff	atan@val+3,___flmul@b+3
  2797  003FAC  C164  F094         	movff	atan@val,___flmul@a
  2798  003FB0  C165  F095         	movff	atan@val+1,___flmul@a+1
  2799  003FB4  C166  F096         	movff	atan@val+2,___flmul@a+2
  2800  003FB8  C167  F097         	movff	atan@val+3,___flmul@a+3
  2801  003FBC  ECBA  F014         	call	___flmul	;wreg free
  2802  003FC0  C090  F160         	movff	?___flmul,atan@val_squared
  2803  003FC4  C091  F161         	movff	?___flmul+1,atan@val_squared+1
  2804  003FC8  C092  F162         	movff	?___flmul+2,atan@val_squared+2
  2805  003FCC  C093  F163         	movff	?___flmul+3,atan@val_squared+3
  2806  003FD0  C160  F0C1         	movff	atan@val_squared,eval_poly@x
  2807  003FD4  C161  F0C2         	movff	atan@val_squared+1,eval_poly@x+1
  2808  003FD8  C162  F0C3         	movff	atan@val_squared+2,eval_poly@x+2
  2809  003FDC  C163  F0C4         	movff	atan@val_squared+3,eval_poly@x+3
  2810  003FE0  0E19               	movlw	low atan@coeff_b
  2811  003FE2  0100               	movlb	0	; () banked
  2812  003FE4  6FC5               	movwf	eval_poly@d& (0+255),b
  2813  003FE6  0E0D               	movlw	high atan@coeff_b
  2814  003FE8  0100               	movlb	0	; () banked
  2815  003FEA  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  2816  003FEC  0E00               	movlw	0
  2817  003FEE  0100               	movlb	0	; () banked
  2818  003FF0  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  2819  003FF2  0E04               	movlw	4
  2820  003FF4  6FC7               	movwf	eval_poly@n& (0+255),b
  2821  003FF6  ECDC  F023         	call	_eval_poly	;wreg free
  2822  003FFA  C0C1  F157         	movff	?_eval_poly,atan@y
  2823  003FFE  C0C2  F158         	movff	?_eval_poly+1,atan@y+1
  2824  004002  C0C3  F159         	movff	?_eval_poly+2,atan@y+2
  2825  004006  C0C4  F15A         	movff	?_eval_poly+3,atan@y+3
  2826  00400A  C160  F0C1         	movff	atan@val_squared,eval_poly@x
  2827  00400E  C161  F0C2         	movff	atan@val_squared+1,eval_poly@x+1
  2828  004012  C162  F0C3         	movff	atan@val_squared+2,eval_poly@x+2
  2829  004016  C163  F0C4         	movff	atan@val_squared+3,eval_poly@x+3
  2830  00401A  0E01               	movlw	low atan@coeff_a
  2831  00401C  0100               	movlb	0	; () banked
  2832  00401E  6FC5               	movwf	eval_poly@d& (0+255),b
  2833  004020  0E0D               	movlw	high atan@coeff_a
  2834  004022  0100               	movlb	0	; () banked
  2835  004024  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  2836  004026  0E00               	movlw	0
  2837  004028  0100               	movlb	0	; () banked
  2838  00402A  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  2839  00402C  0E05               	movlw	5
  2840  00402E  6FC7               	movwf	eval_poly@n& (0+255),b
  2841  004030  ECDC  F023         	call	_eval_poly	;wreg free
  2842  004034  C0C1  F15B         	movff	?_eval_poly,atan@x
  2843  004038  C0C2  F15C         	movff	?_eval_poly+1,atan@x+1
  2844  00403C  C0C3  F15D         	movff	?_eval_poly+2,atan@x+2
  2845  004040  C0C4  F15E         	movff	?_eval_poly+3,atan@x+3
  2846  004044  C164  F090         	movff	atan@val,___flmul@b
  2847  004048  C165  F091         	movff	atan@val+1,___flmul@b+1
  2848  00404C  C166  F092         	movff	atan@val+2,___flmul@b+2
  2849  004050  C167  F093         	movff	atan@val+3,___flmul@b+3
  2850  004054  C157  F07B         	movff	atan@y,___fldiv@a
  2851  004058  C158  F07C         	movff	atan@y+1,___fldiv@a+1
  2852  00405C  C159  F07D         	movff	atan@y+2,___fldiv@a+2
  2853  004060  C15A  F07E         	movff	atan@y+3,___fldiv@a+3
  2854  004064  C15B  F077         	movff	atan@x,___fldiv@b
  2855  004068  C15C  F078         	movff	atan@x+1,___fldiv@b+1
  2856  00406C  C15D  F079         	movff	atan@x+2,___fldiv@b+2
  2857  004070  C15E  F07A         	movff	atan@x+3,___fldiv@b+3
  2858  004074  ECF2  F018         	call	___fldiv	;wreg free
  2859  004078  C077  F094         	movff	?___fldiv,___flmul@a
  2860  00407C  C078  F095         	movff	?___fldiv+1,___flmul@a+1
  2861  004080  C079  F096         	movff	?___fldiv+2,___flmul@a+2
  2862  004084  C07A  F097         	movff	?___fldiv+3,___flmul@a+3
  2863  004088  ECBA  F014         	call	___flmul	;wreg free
  2864  00408C  C090  F164         	movff	?___flmul,atan@val
  2865  004090  C091  F165         	movff	?___flmul+1,atan@val+1
  2866  004094  C092  F166         	movff	?___flmul+2,atan@val+2
  2867  004098  C093  F167         	movff	?___flmul+3,atan@val+3
  2868  00409C  0101               	movlb	1	; () banked
  2869  00409E  515F               	movf	atan@recip& (0+255),w,b
  2870  0040A0  0101               	movlb	1	; () banked
  2871  0040A2  B4D8               	btfsc	status,2,c
  2872  0040A4  D025               	goto	l6041
  2873                           
  2874                           ; BSR set to: 1
  2875  0040A6  C164  F0A9         	movff	atan@val,___flneg@f1
  2876  0040AA  C165  F0AA         	movff	atan@val+1,___flneg@f1+1
  2877  0040AE  C166  F0AB         	movff	atan@val+2,___flneg@f1+2
  2878  0040B2  C167  F0AC         	movff	atan@val+3,___flneg@f1+3
  2879  0040B6  ECF5  F026         	call	___flneg	;wreg free
  2880  0040BA  C0A9  F0AD         	movff	?___flneg,___fladd@b
  2881  0040BE  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  2882  0040C2  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  2883  0040C6  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  2884  0040CA  0EDB               	movlw	219
  2885  0040CC  0100               	movlb	0	; () banked
  2886  0040CE  6FB1               	movwf	___fladd@a& (0+255),b
  2887  0040D0  0E0F               	movlw	15
  2888  0040D2  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  2889  0040D4  0EC9               	movlw	201
  2890  0040D6  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  2891  0040D8  0E3F               	movlw	63
  2892  0040DA  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  2893  0040DC  EC66  F012         	call	___fladd	;wreg free
  2894  0040E0  C0AD  F164         	movff	?___fladd,atan@val
  2895  0040E4  C0AE  F165         	movff	?___fladd+1,atan@val+1
  2896  0040E8  C0AF  F166         	movff	?___fladd+2,atan@val+2
  2897  0040EC  C0B0  F167         	movff	?___fladd+3,atan@val+3
  2898  0040F0                     l6041:
  2899  0040F0  0100               	movlb	0	; () banked
  2900  0040F2  BFD4               	btfsc	(atan@f+3)& (0+255),7,b
  2901  0040F4  D009               	goto	l6045
  2902                           
  2903                           ; BSR set to: 0
  2904  0040F6  C164  F0D1         	movff	atan@val,?_atan
  2905  0040FA  C165  F0D2         	movff	atan@val+1,?_atan+1
  2906  0040FE  C166  F0D3         	movff	atan@val+2,?_atan+2
  2907  004102  C167  F0D4         	movff	atan@val+3,?_atan+3
  2908  004106  0012               	return	
  2909  004108                     l6045:
  2910                           
  2911                           ; BSR set to: 0
  2912  004108  C164  F0A9         	movff	atan@val,___flneg@f1
  2913  00410C  C165  F0AA         	movff	atan@val+1,___flneg@f1+1
  2914  004110  C166  F0AB         	movff	atan@val+2,___flneg@f1+2
  2915  004114  C167  F0AC         	movff	atan@val+3,___flneg@f1+3
  2916  004118  ECF5  F026         	call	___flneg	;wreg free
  2917  00411C  C0A9  F0D1         	movff	?___flneg,?_atan
  2918  004120  C0AA  F0D2         	movff	?___flneg+1,?_atan+1
  2919  004124  C0AB  F0D3         	movff	?___flneg+2,?_atan+2
  2920  004128  C0AC  F0D4         	movff	?___flneg+3,?_atan+3
  2921  00412C  0012               	return	
  2922  00412E                     __end_of_atan:
  2923                           	opt stack 0
  2924                           tblptru	equ	0xFF8
  2925                           tblptrh	equ	0xFF7
  2926                           tblptrl	equ	0xFF6
  2927                           tablat	equ	0xFF5
  2928                           postinc0	equ	0xFEE
  2929                           wreg	equ	0xFE8
  2930                           postinc2	equ	0xFDE
  2931                           postdec2	equ	0xFDD
  2932                           status	equ	0xFD8
  2933                           
  2934 ;; *************** function _fabs *****************
  2935 ;; Defined at:
  2936 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fabs.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;  d               4   77[BANK0 ] unsigned char 
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;		None
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  4   77[BANK0 ] unsigned char 
  2943 ;; Registers used:
  2944 ;;		wreg, status,2, status,0, cstack
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/0
  2947 ;;		On exit  : 0/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2950 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2953 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2954 ;;Total ram usage:        4 bytes
  2955 ;; Hardware stack levels used:    1
  2956 ;; Hardware stack levels required when called:    5
  2957 ;; This function calls:
  2958 ;;		___flneg
  2959 ;; This function is called by:
  2960 ;;		_asin
  2961 ;;		_atan
  2962 ;; This function uses a non-reentrant model
  2963 ;;
  2964                           
  2965                           	psect	text6
  2966  004DAC                     __ptext6:
  2967                           	opt stack 0
  2968  004DAC                     _fabs:
  2969                           	opt stack 22
  2970                           
  2971                           ;incstack = 0
  2972  004DAC  0100               	movlb	0	; () banked
  2973  004DAE  AFB0               	btfss	(fabs@d+3)& (0+255),7,b
  2974  004DB0  D013               	goto	l985
  2975                           
  2976                           ; BSR set to: 0
  2977  004DB2  C0AD  F0A9         	movff	fabs@d,___flneg@f1
  2978  004DB6  C0AE  F0AA         	movff	fabs@d+1,___flneg@f1+1
  2979  004DBA  C0AF  F0AB         	movff	fabs@d+2,___flneg@f1+2
  2980  004DBE  C0B0  F0AC         	movff	fabs@d+3,___flneg@f1+3
  2981  004DC2  ECF5  F026         	call	___flneg	;wreg free
  2982  004DC6  C0A9  F0AD         	movff	?___flneg,?_fabs
  2983  004DCA  C0AA  F0AE         	movff	?___flneg+1,?_fabs+1
  2984  004DCE  C0AB  F0AF         	movff	?___flneg+2,?_fabs+2
  2985  004DD2  C0AC  F0B0         	movff	?___flneg+3,?_fabs+3
  2986  004DD6  0012               	return	
  2987  004DD8                     l985:
  2988                           
  2989                           ; BSR set to: 0
  2990  004DD8  C0AD  F0AD         	movff	fabs@d,?_fabs
  2991  004DDC  C0AE  F0AE         	movff	fabs@d+1,?_fabs+1
  2992  004DE0  C0AF  F0AF         	movff	fabs@d+2,?_fabs+2
  2993  004DE4  C0B0  F0B0         	movff	fabs@d+3,?_fabs+3
  2994  004DE8  0012               	return		;funcret
  2995  004DEA                     __end_of_fabs:
  2996                           	opt stack 0
  2997                           tblptru	equ	0xFF8
  2998                           tblptrh	equ	0xFF7
  2999                           tblptrl	equ	0xFF6
  3000                           tablat	equ	0xFF5
  3001                           postinc0	equ	0xFEE
  3002                           wreg	equ	0xFE8
  3003                           postinc2	equ	0xFDE
  3004                           postdec2	equ	0xFDD
  3005                           status	equ	0xFD8
  3006                           
  3007 ;; *************** function ___flneg *****************
  3008 ;; Defined at:
  3009 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;  f1              4   73[BANK0 ] unsigned char 
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;		None
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  4   73[BANK0 ] unsigned char 
  3016 ;; Registers used:
  3017 ;;		wreg, status,2, status,0
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3023 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3026 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3027 ;;Total ram usage:        4 bytes
  3028 ;; Hardware stack levels used:    1
  3029 ;; Hardware stack levels required when called:    4
  3030 ;; This function calls:
  3031 ;;		Nothing
  3032 ;; This function is called by:
  3033 ;;		_parallelo
  3034 ;;		_asin
  3035 ;;		_atan
  3036 ;;		_fabs
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           	psect	text7
  3041  004DEA                     __ptext7:
  3042                           	opt stack 0
  3043  004DEA                     ___flneg:
  3044                           	opt stack 22
  3045                           
  3046                           ;incstack = 0
  3047  004DEA  0100               	movlb	0	; () banked
  3048  004DEC  51A9               	movf	___flneg@f1& (0+255),w,b
  3049  004DEE  0100               	movlb	0	; () banked
  3050  004DF0  11AA               	iorwf	(___flneg@f1+1)& (0+255),w,b
  3051  004DF2  0100               	movlb	0	; () banked
  3052  004DF4  11AB               	iorwf	(___flneg@f1+2)& (0+255),w,b
  3053  004DF6  0100               	movlb	0	; () banked
  3054  004DF8  11AC               	iorwf	(___flneg@f1+3)& (0+255),w,b
  3055  004DFA  B4D8               	btfsc	status,2,c
  3056  004DFC  D009               	goto	l5747
  3057                           
  3058                           ; BSR set to: 0
  3059  004DFE  0E00               	movlw	0
  3060  004E00  0100               	movlb	0	; () banked
  3061  004E02  1BA9               	xorwf	___flneg@f1& (0+255),f,b
  3062  004E04  0E00               	movlw	0
  3063  004E06  1BAA               	xorwf	(___flneg@f1+1)& (0+255),f,b
  3064  004E08  0E00               	movlw	0
  3065  004E0A  1BAB               	xorwf	(___flneg@f1+2)& (0+255),f,b
  3066  004E0C  0E80               	movlw	128
  3067  004E0E  1BAC               	xorwf	(___flneg@f1+3)& (0+255),f,b
  3068  004E10                     l5747:
  3069                           
  3070                           ; BSR set to: 0
  3071  004E10  C0A9  F0A9         	movff	___flneg@f1,?___flneg
  3072  004E14  C0AA  F0AA         	movff	___flneg@f1+1,?___flneg+1
  3073  004E18  C0AB  F0AB         	movff	___flneg@f1+2,?___flneg+2
  3074  004E1C  C0AC  F0AC         	movff	___flneg@f1+3,?___flneg+3
  3075  004E20  0012               	return	
  3076  004E22                     __end_of___flneg:
  3077                           	opt stack 0
  3078                           tblptru	equ	0xFF8
  3079                           tblptrh	equ	0xFF7
  3080                           tblptrl	equ	0xFF6
  3081                           tablat	equ	0xFF5
  3082                           postinc0	equ	0xFEE
  3083                           wreg	equ	0xFE8
  3084                           postinc2	equ	0xFDE
  3085                           postdec2	equ	0xFDD
  3086                           status	equ	0xFD8
  3087                           
  3088 ;; *************** function _eval_poly *****************
  3089 ;; Defined at:
  3090 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\evalpoly.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;  x               4   97[BANK0 ] unsigned char 
  3093 ;;  d               2  101[BANK0 ] PTR const 
  3094 ;;		 -> atan@coeff_a(24), atan@coeff_b(20), 
  3095 ;;  n               2  103[BANK0 ] int 
  3096 ;; Auto vars:     Size  Location     Type
  3097 ;;  res             4  109[BANK0 ] int 
  3098 ;; Return value:  Size  Location     Type
  3099 ;;                  4   97[BANK0 ] int 
  3100 ;; Registers used:
  3101 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3102 ;; Tracked objects:
  3103 ;;		On entry : 0/0
  3104 ;;		On exit  : 0/0
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3107 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3108 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3109 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3110 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3111 ;;Total ram usage:       16 bytes
  3112 ;; Hardware stack levels used:    1
  3113 ;; Hardware stack levels required when called:    5
  3114 ;; This function calls:
  3115 ;;		___fladd
  3116 ;;		___flmul
  3117 ;; This function is called by:
  3118 ;;		_atan
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122                           	psect	text8
  3123  0047B8                     __ptext8:
  3124                           	opt stack 0
  3125  0047B8                     _eval_poly:
  3126                           	opt stack 21
  3127                           
  3128                           ; BSR set to: 0
  3129                           ;incstack = 0
  3130  0047B8  C0C7  F0C9         	movff	eval_poly@n,??_eval_poly
  3131  0047BC  C0C8  F0CA         	movff	eval_poly@n+1,??_eval_poly+1
  3132  0047C0  0100               	movlb	0	; () banked
  3133  0047C2  90D8               	bcf	status,0,c
  3134  0047C4  37C9               	rlcf	??_eval_poly& (0+255),f,b
  3135  0047C6  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3136  0047C8  0100               	movlb	0	; () banked
  3137  0047CA  90D8               	bcf	status,0,c
  3138  0047CC  37C9               	rlcf	??_eval_poly& (0+255),f,b
  3139  0047CE  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3140  0047D0  C0C5  F0CB         	movff	eval_poly@d,??_eval_poly+2
  3141  0047D4  C0C6  F0CC         	movff	eval_poly@d+1,??_eval_poly+3
  3142  0047D8  0100               	movlb	0	; () banked
  3143  0047DA  51C9               	movf	??_eval_poly& (0+255),w,b
  3144  0047DC  0100               	movlb	0	; () banked
  3145  0047DE  27CB               	addwf	(??_eval_poly+2)& (0+255),f,b
  3146  0047E0  0100               	movlb	0	; () banked
  3147  0047E2  51CA               	movf	(??_eval_poly+1)& (0+255),w,b
  3148  0047E4  0100               	movlb	0	; () banked
  3149  0047E6  23CC               	addwfc	(??_eval_poly+3)& (0+255),f,b
  3150  0047E8  C0CB  FFF6         	movff	??_eval_poly+2,tblptrl
  3151  0047EC  C0CC  FFF7         	movff	??_eval_poly+3,tblptrh
  3152  0047F0                     	if	0	;tblptru may be non-zero
  3153  0047F0                     	endif
  3154  0047F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3155  0047F0  0E00               	movlw	low (__mediumconst shr (0+16))
  3156  0047F2  6EF8               	movwf	tblptru,c
  3157  0047F4                     	endif
  3158  0047F4  0009               	tblrd		*+
  3159  0047F6  CFF5 F0CD          	movff	tablat,eval_poly@res
  3160  0047FA  0009               	tblrd		*+
  3161  0047FC  CFF5 F0CE          	movff	tablat,eval_poly@res+1
  3162  004800  0009               	tblrd		*+
  3163  004802  CFF5 F0CF          	movff	tablat,eval_poly@res+2
  3164  004806  000A               	tblrd		*-
  3165  004808  CFF5 F0D0          	movff	tablat,eval_poly@res+3
  3166  00480C  D052               	goto	l5897
  3167  00480E                     l5895:
  3168                           
  3169                           ; BSR set to: 0
  3170  00480E  C0CD  F094         	movff	eval_poly@res,___flmul@a
  3171  004812  C0CE  F095         	movff	eval_poly@res+1,___flmul@a+1
  3172  004816  C0CF  F096         	movff	eval_poly@res+2,___flmul@a+2
  3173  00481A  C0D0  F097         	movff	eval_poly@res+3,___flmul@a+3
  3174  00481E  C0C1  F090         	movff	eval_poly@x,___flmul@b
  3175  004822  C0C2  F091         	movff	eval_poly@x+1,___flmul@b+1
  3176  004826  C0C3  F092         	movff	eval_poly@x+2,___flmul@b+2
  3177  00482A  C0C4  F093         	movff	eval_poly@x+3,___flmul@b+3
  3178  00482E  ECBA  F014         	call	___flmul	;wreg free
  3179  004832  C090  F0AD         	movff	?___flmul,___fladd@b
  3180  004836  C091  F0AE         	movff	?___flmul+1,___fladd@b+1
  3181  00483A  C092  F0AF         	movff	?___flmul+2,___fladd@b+2
  3182  00483E  C093  F0B0         	movff	?___flmul+3,___fladd@b+3
  3183  004842  0100               	movlb	0	; () banked
  3184  004844  07C7               	decf	eval_poly@n& (0+255),f,b
  3185  004846  A0D8               	btfss	status,0,c
  3186  004848  07C8               	decf	(eval_poly@n+1)& (0+255),f,b
  3187  00484A  C0C7  F0C9         	movff	eval_poly@n,??_eval_poly
  3188  00484E  C0C8  F0CA         	movff	eval_poly@n+1,??_eval_poly+1
  3189  004852  0100               	movlb	0	; () banked
  3190  004854  90D8               	bcf	status,0,c
  3191  004856  37C9               	rlcf	??_eval_poly& (0+255),f,b
  3192  004858  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3193  00485A  0100               	movlb	0	; () banked
  3194  00485C  90D8               	bcf	status,0,c
  3195  00485E  37C9               	rlcf	??_eval_poly& (0+255),f,b
  3196  004860  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3197  004862  C0C5  F0CB         	movff	eval_poly@d,??_eval_poly+2
  3198  004866  C0C6  F0CC         	movff	eval_poly@d+1,??_eval_poly+3
  3199  00486A  0100               	movlb	0	; () banked
  3200  00486C  51C9               	movf	??_eval_poly& (0+255),w,b
  3201  00486E  0100               	movlb	0	; () banked
  3202  004870  27CB               	addwf	(??_eval_poly+2)& (0+255),f,b
  3203  004872  0100               	movlb	0	; () banked
  3204  004874  51CA               	movf	(??_eval_poly+1)& (0+255),w,b
  3205  004876  0100               	movlb	0	; () banked
  3206  004878  23CC               	addwfc	(??_eval_poly+3)& (0+255),f,b
  3207  00487A  C0CB  FFF6         	movff	??_eval_poly+2,tblptrl
  3208  00487E  C0CC  FFF7         	movff	??_eval_poly+3,tblptrh
  3209  004882                     	if	0	;tblptru may be non-zero
  3210  004882                     	endif
  3211  004882                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3212  004882  0E00               	movlw	low (__mediumconst shr (0+16))
  3213  004884  6EF8               	movwf	tblptru,c
  3214  004886                     	endif
  3215  004886  0009               	tblrd		*+
  3216  004888  CFF5 F0B1          	movff	tablat,___fladd@a
  3217  00488C  0009               	tblrd		*+
  3218  00488E  CFF5 F0B2          	movff	tablat,___fladd@a+1
  3219  004892  0009               	tblrd		*+
  3220  004894  CFF5 F0B3          	movff	tablat,___fladd@a+2
  3221  004898  000A               	tblrd		*-
  3222  00489A  CFF5 F0B4          	movff	tablat,___fladd@a+3
  3223  00489E  EC66  F012         	call	___fladd	;wreg free
  3224  0048A2  C0AD  F0CD         	movff	?___fladd,eval_poly@res
  3225  0048A6  C0AE  F0CE         	movff	?___fladd+1,eval_poly@res+1
  3226  0048AA  C0AF  F0CF         	movff	?___fladd+2,eval_poly@res+2
  3227  0048AE  C0B0  F0D0         	movff	?___fladd+3,eval_poly@res+3
  3228  0048B2                     l5897:
  3229  0048B2  0100               	movlb	0	; () banked
  3230  0048B4  51C7               	movf	eval_poly@n& (0+255),w,b
  3231  0048B6  0100               	movlb	0	; () banked
  3232  0048B8  11C8               	iorwf	(eval_poly@n+1)& (0+255),w,b
  3233  0048BA  A4D8               	btfss	status,2,c
  3234  0048BC  D7A8               	goto	l5895
  3235                           
  3236                           ; BSR set to: 0
  3237  0048BE  C0CD  F0C1         	movff	eval_poly@res,?_eval_poly
  3238  0048C2  C0CE  F0C2         	movff	eval_poly@res+1,?_eval_poly+1
  3239  0048C6  C0CF  F0C3         	movff	eval_poly@res+2,?_eval_poly+2
  3240  0048CA  C0D0  F0C4         	movff	eval_poly@res+3,?_eval_poly+3
  3241                           
  3242                           ; BSR set to: 0
  3243  0048CE  0012               	return		;funcret
  3244  0048D0                     __end_of_eval_poly:
  3245                           	opt stack 0
  3246                           tblptru	equ	0xFF8
  3247                           tblptrh	equ	0xFF7
  3248                           tblptrl	equ	0xFF6
  3249                           tablat	equ	0xFF5
  3250                           postinc0	equ	0xFEE
  3251                           wreg	equ	0xFE8
  3252                           postinc2	equ	0xFDE
  3253                           postdec2	equ	0xFDD
  3254                           status	equ	0xFD8
  3255                           
  3256 ;; *************** function ___flmul *****************
  3257 ;; Defined at:
  3258 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;  b               4   48[BANK0 ] int 
  3261 ;;  a               4   52[BANK0 ] int 
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;  prod            4   67[BANK0 ] struct .
  3264 ;;  grs             4   62[BANK0 ] unsigned long 
  3265 ;;  temp            2   71[BANK0 ] struct .
  3266 ;;  bexp            1   66[BANK0 ] unsigned char 
  3267 ;;  aexp            1   61[BANK0 ] unsigned char 
  3268 ;;  sign            1   60[BANK0 ] unsigned char 
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  4   48[BANK0 ] unsigned char 
  3271 ;; Registers used:
  3272 ;;		wreg, status,2, status,0, prodl, prodh
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3278 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3279 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3280 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3281 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3282 ;;Total ram usage:       25 bytes
  3283 ;; Hardware stack levels used:    1
  3284 ;; Hardware stack levels required when called:    4
  3285 ;; This function calls:
  3286 ;;		Nothing
  3287 ;; This function is called by:
  3288 ;;		_parallelo
  3289 ;;		_asin
  3290 ;;		_atan
  3291 ;;		_eval_poly
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295                           	psect	text9
  3296  002974                     __ptext9:
  3297                           	opt stack 0
  3298  002974                     ___flmul:
  3299                           	opt stack 21
  3300                           
  3301                           ; BSR set to: 0
  3302                           ;incstack = 0
  3303  002974  0100               	movlb	0	; () banked
  3304  002976  5193               	movf	(___flmul@b+3)& (0+255),w,b
  3305  002978  0B80               	andlw	128
  3306  00297A  0100               	movlb	0	; () banked
  3307  00297C  6F9C               	movwf	___flmul@sign& (0+255),b
  3308  00297E  0100               	movlb	0	; () banked
  3309  002980  5193               	movf	(___flmul@b+3)& (0+255),w,b
  3310  002982  2593               	addwf	(___flmul@b+3)& (0+255),w,b
  3311  002984  0100               	movlb	0	; () banked
  3312  002986  6FA2               	movwf	___flmul@bexp& (0+255),b
  3313                           
  3314                           ; BSR set to: 0
  3315  002988  0100               	movlb	0	; () banked
  3316  00298A  AF92               	btfss	(___flmul@b+2)& (0+255),7,b
  3317  00298C  D002               	goto	l5619
  3318                           
  3319                           ; BSR set to: 0
  3320  00298E  0100               	movlb	0	; () banked
  3321  002990  81A2               	bsf	___flmul@bexp& (0+255),0,b
  3322  002992                     l5619:
  3323                           
  3324                           ; BSR set to: 0
  3325  002992  0100               	movlb	0	; () banked
  3326  002994  51A2               	movf	___flmul@bexp& (0+255),w,b
  3327  002996  0100               	movlb	0	; () banked
  3328  002998  B4D8               	btfsc	status,2,c
  3329  00299A  D010               	goto	l5627
  3330                           
  3331                           ; BSR set to: 0
  3332  00299C  0100               	movlb	0	; () banked
  3333  00299E  29A2               	incf	___flmul@bexp& (0+255),w,b
  3334  0029A0  A4D8               	btfss	status,2,c
  3335  0029A2  D009               	goto	l5625
  3336                           
  3337                           ; BSR set to: 0
  3338  0029A4  0E00               	movlw	0
  3339  0029A6  0100               	movlb	0	; () banked
  3340  0029A8  6F90               	movwf	___flmul@b& (0+255),b
  3341  0029AA  0E00               	movlw	0
  3342  0029AC  6F91               	movwf	(___flmul@b+1)& (0+255),b
  3343  0029AE  0E00               	movlw	0
  3344  0029B0  6F92               	movwf	(___flmul@b+2)& (0+255),b
  3345  0029B2  0E00               	movlw	0
  3346  0029B4  6F93               	movwf	(___flmul@b+3)& (0+255),b
  3347  0029B6                     l5625:
  3348                           
  3349                           ; BSR set to: 0
  3350  0029B6  0100               	movlb	0	; () banked
  3351  0029B8  8F92               	bsf	(___flmul@b+2)& (0+255),7,b
  3352  0029BA  D009               	goto	l5629
  3353  0029BC                     l5627:
  3354                           
  3355                           ; BSR set to: 0
  3356  0029BC  0E00               	movlw	0
  3357  0029BE  0100               	movlb	0	; () banked
  3358  0029C0  6F90               	movwf	___flmul@b& (0+255),b
  3359  0029C2  0E00               	movlw	0
  3360  0029C4  6F91               	movwf	(___flmul@b+1)& (0+255),b
  3361  0029C6  0E00               	movlw	0
  3362  0029C8  6F92               	movwf	(___flmul@b+2)& (0+255),b
  3363  0029CA  0E00               	movlw	0
  3364  0029CC  6F93               	movwf	(___flmul@b+3)& (0+255),b
  3365  0029CE                     l5629:
  3366                           
  3367                           ; BSR set to: 0
  3368  0029CE  0100               	movlb	0	; () banked
  3369  0029D0  5197               	movf	(___flmul@a+3)& (0+255),w,b
  3370  0029D2  0B80               	andlw	128
  3371  0029D4  0100               	movlb	0	; () banked
  3372  0029D6  1B9C               	xorwf	___flmul@sign& (0+255),f,b
  3373                           
  3374                           ; BSR set to: 0
  3375  0029D8  0100               	movlb	0	; () banked
  3376  0029DA  5197               	movf	(___flmul@a+3)& (0+255),w,b
  3377  0029DC  2597               	addwf	(___flmul@a+3)& (0+255),w,b
  3378  0029DE  0100               	movlb	0	; () banked
  3379  0029E0  6F9D               	movwf	___flmul@aexp& (0+255),b
  3380                           
  3381                           ; BSR set to: 0
  3382  0029E2  0100               	movlb	0	; () banked
  3383  0029E4  AF96               	btfss	(___flmul@a+2)& (0+255),7,b
  3384  0029E6  D002               	goto	l5637
  3385                           
  3386                           ; BSR set to: 0
  3387  0029E8  0100               	movlb	0	; () banked
  3388  0029EA  819D               	bsf	___flmul@aexp& (0+255),0,b
  3389  0029EC                     l5637:
  3390                           
  3391                           ; BSR set to: 0
  3392  0029EC  0100               	movlb	0	; () banked
  3393  0029EE  519D               	movf	___flmul@aexp& (0+255),w,b
  3394  0029F0  0100               	movlb	0	; () banked
  3395  0029F2  B4D8               	btfsc	status,2,c
  3396  0029F4  D010               	goto	l5645
  3397                           
  3398                           ; BSR set to: 0
  3399  0029F6  0100               	movlb	0	; () banked
  3400  0029F8  299D               	incf	___flmul@aexp& (0+255),w,b
  3401  0029FA  A4D8               	btfss	status,2,c
  3402  0029FC  D009               	goto	l5643
  3403                           
  3404                           ; BSR set to: 0
  3405  0029FE  0E00               	movlw	0
  3406  002A00  0100               	movlb	0	; () banked
  3407  002A02  6F94               	movwf	___flmul@a& (0+255),b
  3408  002A04  0E00               	movlw	0
  3409  002A06  6F95               	movwf	(___flmul@a+1)& (0+255),b
  3410  002A08  0E00               	movlw	0
  3411  002A0A  6F96               	movwf	(___flmul@a+2)& (0+255),b
  3412  002A0C  0E00               	movlw	0
  3413  002A0E  6F97               	movwf	(___flmul@a+3)& (0+255),b
  3414  002A10                     l5643:
  3415                           
  3416                           ; BSR set to: 0
  3417  002A10  0100               	movlb	0	; () banked
  3418  002A12  8F96               	bsf	(___flmul@a+2)& (0+255),7,b
  3419  002A14  D009               	goto	l1315
  3420  002A16                     l5645:
  3421                           
  3422                           ; BSR set to: 0
  3423  002A16  0E00               	movlw	0
  3424  002A18  0100               	movlb	0	; () banked
  3425  002A1A  6F94               	movwf	___flmul@a& (0+255),b
  3426  002A1C  0E00               	movlw	0
  3427  002A1E  6F95               	movwf	(___flmul@a+1)& (0+255),b
  3428  002A20  0E00               	movlw	0
  3429  002A22  6F96               	movwf	(___flmul@a+2)& (0+255),b
  3430  002A24  0E00               	movlw	0
  3431  002A26  6F97               	movwf	(___flmul@a+3)& (0+255),b
  3432  002A28                     l1315:
  3433                           
  3434                           ; BSR set to: 0
  3435  002A28  0100               	movlb	0	; () banked
  3436  002A2A  519D               	movf	___flmul@aexp& (0+255),w,b
  3437  002A2C  0100               	movlb	0	; () banked
  3438  002A2E  B4D8               	btfsc	status,2,c
  3439  002A30  D005               	goto	l5649
  3440                           
  3441                           ; BSR set to: 0
  3442  002A32  0100               	movlb	0	; () banked
  3443  002A34  51A2               	movf	___flmul@bexp& (0+255),w,b
  3444  002A36  0100               	movlb	0	; () banked
  3445  002A38  A4D8               	btfss	status,2,c
  3446  002A3A  D00A               	goto	l5653
  3447  002A3C                     l5649:
  3448                           
  3449                           ; BSR set to: 0
  3450  002A3C  0E00               	movlw	0
  3451  002A3E  0100               	movlb	0	; () banked
  3452  002A40  6F90               	movwf	?___flmul& (0+255),b
  3453  002A42  0E00               	movlw	0
  3454  002A44  6F91               	movwf	(?___flmul+1)& (0+255),b
  3455  002A46  0E00               	movlw	0
  3456  002A48  6F92               	movwf	(?___flmul+2)& (0+255),b
  3457  002A4A  0E00               	movlw	0
  3458  002A4C  6F93               	movwf	(?___flmul+3)& (0+255),b
  3459                           
  3460                           ; BSR set to: 0
  3461  002A4E  0012               	return	
  3462  002A50                     l5653:
  3463                           
  3464                           ; BSR set to: 0
  3465  002A50  0100               	movlb	0	; () banked
  3466  002A52  5196               	movf	(___flmul@a+2)& (0+255),w,b
  3467  002A54  0100               	movlb	0	; () banked
  3468  002A56  0390               	mulwf	___flmul@b& (0+255),b
  3469  002A58  CFF3 F0A7          	movff	prodl,___flmul@temp
  3470  002A5C  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  3471                           
  3472                           ; BSR set to: 0
  3473  002A60  0100               	movlb	0	; () banked
  3474  002A62  51A7               	movf	___flmul@temp& (0+255),w,b
  3475  002A64  0100               	movlb	0	; () banked
  3476  002A66  6F9E               	movwf	___flmul@grs& (0+255),b
  3477  002A68  6B9F               	clrf	(___flmul@grs+1)& (0+255),b
  3478  002A6A  6BA0               	clrf	(___flmul@grs+2)& (0+255),b
  3479  002A6C  6BA1               	clrf	(___flmul@grs+3)& (0+255),b
  3480                           
  3481                           ; BSR set to: 0
  3482  002A6E  0100               	movlb	0	; () banked
  3483  002A70  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  3484  002A72  0100               	movlb	0	; () banked
  3485  002A74  6FA3               	movwf	___flmul@prod& (0+255),b
  3486  002A76  6BA4               	clrf	(___flmul@prod+1)& (0+255),b
  3487  002A78  6BA5               	clrf	(___flmul@prod+2)& (0+255),b
  3488  002A7A  6BA6               	clrf	(___flmul@prod+3)& (0+255),b
  3489  002A7C  0100               	movlb	0	; () banked
  3490  002A7E  5195               	movf	(___flmul@a+1)& (0+255),w,b
  3491  002A80  0100               	movlb	0	; () banked
  3492  002A82  0391               	mulwf	(___flmul@b+1)& (0+255),b
  3493  002A84  CFF3 F0A7          	movff	prodl,___flmul@temp
  3494  002A88  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  3495                           
  3496                           ; BSR set to: 0
  3497  002A8C  0100               	movlb	0	; () banked
  3498  002A8E  51A7               	movf	___flmul@temp& (0+255),w,b
  3499  002A90  0100               	movlb	0	; () banked
  3500  002A92  279E               	addwf	___flmul@grs& (0+255),f,b
  3501  002A94  0E00               	movlw	0
  3502  002A96  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  3503  002A98  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  3504  002A9A  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  3505                           
  3506                           ; BSR set to: 0
  3507  002A9C  0100               	movlb	0	; () banked
  3508  002A9E  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  3509  002AA0  0100               	movlb	0	; () banked
  3510  002AA2  27A3               	addwf	___flmul@prod& (0+255),f,b
  3511  002AA4  0E00               	movlw	0
  3512  002AA6  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3513  002AA8  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3514  002AAA  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3515  002AAC  0100               	movlb	0	; () banked
  3516  002AAE  5194               	movf	___flmul@a& (0+255),w,b
  3517  002AB0  0100               	movlb	0	; () banked
  3518  002AB2  0392               	mulwf	(___flmul@b+2)& (0+255),b
  3519  002AB4  CFF3 F0A7          	movff	prodl,___flmul@temp
  3520  002AB8  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  3521                           
  3522                           ; BSR set to: 0
  3523  002ABC  0100               	movlb	0	; () banked
  3524  002ABE  51A7               	movf	___flmul@temp& (0+255),w,b
  3525  002AC0  0100               	movlb	0	; () banked
  3526  002AC2  279E               	addwf	___flmul@grs& (0+255),f,b
  3527  002AC4  0E00               	movlw	0
  3528  002AC6  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  3529  002AC8  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  3530  002ACA  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  3531                           
  3532                           ; BSR set to: 0
  3533  002ACC  0100               	movlb	0	; () banked
  3534  002ACE  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  3535  002AD0  0100               	movlb	0	; () banked
  3536  002AD2  27A3               	addwf	___flmul@prod& (0+255),f,b
  3537  002AD4  0E00               	movlw	0
  3538  002AD6  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3539  002AD8  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3540  002ADA  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3541                           
  3542                           ; BSR set to: 0
  3543  002ADC  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  3544  002AE0  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  3545  002AE4  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  3546  002AE8  0100               	movlb	0	; () banked
  3547  002AEA  6B9E               	clrf	___flmul@grs& (0+255),b
  3548                           
  3549                           ; BSR set to: 0
  3550  002AEC  0100               	movlb	0	; () banked
  3551  002AEE  5194               	movf	___flmul@a& (0+255),w,b
  3552  002AF0  0100               	movlb	0	; () banked
  3553  002AF2  0391               	mulwf	(___flmul@b+1)& (0+255),b
  3554  002AF4  CFF3 F0A7          	movff	prodl,___flmul@temp
  3555  002AF8  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  3556                           
  3557                           ; BSR set to: 0
  3558  002AFC  0100               	movlb	0	; () banked
  3559  002AFE  51A7               	movf	___flmul@temp& (0+255),w,b
  3560  002B00  0100               	movlb	0	; () banked
  3561  002B02  279E               	addwf	___flmul@grs& (0+255),f,b
  3562  002B04  0100               	movlb	0	; () banked
  3563  002B06  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  3564  002B08  0100               	movlb	0	; () banked
  3565  002B0A  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  3566  002B0C  0E00               	movlw	0
  3567  002B0E  0100               	movlb	0	; () banked
  3568  002B10  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  3569  002B12  0E00               	movlw	0
  3570  002B14  0100               	movlb	0	; () banked
  3571  002B16  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  3572                           
  3573                           ; BSR set to: 0
  3574  002B18  0100               	movlb	0	; () banked
  3575  002B1A  5195               	movf	(___flmul@a+1)& (0+255),w,b
  3576  002B1C  0100               	movlb	0	; () banked
  3577  002B1E  0390               	mulwf	___flmul@b& (0+255),b
  3578  002B20  CFF3 F0A7          	movff	prodl,___flmul@temp
  3579  002B24  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  3580                           
  3581                           ; BSR set to: 0
  3582  002B28  0100               	movlb	0	; () banked
  3583  002B2A  51A7               	movf	___flmul@temp& (0+255),w,b
  3584  002B2C  0100               	movlb	0	; () banked
  3585  002B2E  279E               	addwf	___flmul@grs& (0+255),f,b
  3586  002B30  0100               	movlb	0	; () banked
  3587  002B32  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  3588  002B34  0100               	movlb	0	; () banked
  3589  002B36  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  3590  002B38  0E00               	movlw	0
  3591  002B3A  0100               	movlb	0	; () banked
  3592  002B3C  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  3593  002B3E  0E00               	movlw	0
  3594  002B40  0100               	movlb	0	; () banked
  3595  002B42  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  3596                           
  3597                           ; BSR set to: 0
  3598  002B44  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  3599  002B48  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  3600  002B4C  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  3601  002B50  0100               	movlb	0	; () banked
  3602  002B52  6B9E               	clrf	___flmul@grs& (0+255),b
  3603  002B54  0100               	movlb	0	; () banked
  3604  002B56  5194               	movf	___flmul@a& (0+255),w,b
  3605  002B58  0100               	movlb	0	; () banked
  3606  002B5A  0390               	mulwf	___flmul@b& (0+255),b
  3607  002B5C  CFF3 F0A7          	movff	prodl,___flmul@temp
  3608  002B60  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  3609                           
  3610                           ; BSR set to: 0
  3611  002B64  0100               	movlb	0	; () banked
  3612  002B66  51A7               	movf	___flmul@temp& (0+255),w,b
  3613  002B68  0100               	movlb	0	; () banked
  3614  002B6A  279E               	addwf	___flmul@grs& (0+255),f,b
  3615  002B6C  0100               	movlb	0	; () banked
  3616  002B6E  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  3617  002B70  0100               	movlb	0	; () banked
  3618  002B72  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  3619  002B74  0E00               	movlw	0
  3620  002B76  0100               	movlb	0	; () banked
  3621  002B78  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  3622  002B7A  0E00               	movlw	0
  3623  002B7C  0100               	movlb	0	; () banked
  3624  002B7E  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  3625                           
  3626                           ; BSR set to: 0
  3627  002B80  0100               	movlb	0	; () banked
  3628  002B82  5196               	movf	(___flmul@a+2)& (0+255),w,b
  3629  002B84  0100               	movlb	0	; () banked
  3630  002B86  0391               	mulwf	(___flmul@b+1)& (0+255),b
  3631  002B88  CFF3 F0A7          	movff	prodl,___flmul@temp
  3632  002B8C  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  3633  002B90  0100               	movlb	0	; () banked
  3634  002B92  51A7               	movf	___flmul@temp& (0+255),w,b
  3635  002B94  0100               	movlb	0	; () banked
  3636  002B96  27A3               	addwf	___flmul@prod& (0+255),f,b
  3637  002B98  0100               	movlb	0	; () banked
  3638  002B9A  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  3639  002B9C  0100               	movlb	0	; () banked
  3640  002B9E  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3641  002BA0  0E00               	movlw	0
  3642  002BA2  0100               	movlb	0	; () banked
  3643  002BA4  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3644  002BA6  0E00               	movlw	0
  3645  002BA8  0100               	movlb	0	; () banked
  3646  002BAA  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3647                           
  3648                           ; BSR set to: 0
  3649  002BAC  0100               	movlb	0	; () banked
  3650  002BAE  5195               	movf	(___flmul@a+1)& (0+255),w,b
  3651  002BB0  0100               	movlb	0	; () banked
  3652  002BB2  0392               	mulwf	(___flmul@b+2)& (0+255),b
  3653  002BB4  CFF3 F0A7          	movff	prodl,___flmul@temp
  3654  002BB8  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  3655                           
  3656                           ; BSR set to: 0
  3657  002BBC  0100               	movlb	0	; () banked
  3658  002BBE  51A7               	movf	___flmul@temp& (0+255),w,b
  3659  002BC0  0100               	movlb	0	; () banked
  3660  002BC2  27A3               	addwf	___flmul@prod& (0+255),f,b
  3661  002BC4  0100               	movlb	0	; () banked
  3662  002BC6  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  3663  002BC8  0100               	movlb	0	; () banked
  3664  002BCA  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3665  002BCC  0E00               	movlw	0
  3666  002BCE  0100               	movlb	0	; () banked
  3667  002BD0  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3668  002BD2  0E00               	movlw	0
  3669  002BD4  0100               	movlb	0	; () banked
  3670  002BD6  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3671  002BD8  0100               	movlb	0	; () banked
  3672  002BDA  5196               	movf	(___flmul@a+2)& (0+255),w,b
  3673  002BDC  0100               	movlb	0	; () banked
  3674  002BDE  0392               	mulwf	(___flmul@b+2)& (0+255),b
  3675  002BE0  CFF3 F0A7          	movff	prodl,___flmul@temp
  3676  002BE4  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  3677                           
  3678                           ; BSR set to: 0
  3679  002BE8  0100               	movlb	0	; () banked
  3680  002BEA  51A7               	movf	___flmul@temp& (0+255),w,b
  3681  002BEC  0100               	movlb	0	; () banked
  3682  002BEE  6F98               	movwf	??___flmul& (0+255),b
  3683  002BF0  0100               	movlb	0	; () banked
  3684  002BF2  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  3685  002BF4  0100               	movlb	0	; () banked
  3686  002BF6  6F99               	movwf	(??___flmul+1)& (0+255),b
  3687  002BF8  0100               	movlb	0	; () banked
  3688  002BFA  6B9A               	clrf	(??___flmul+2)& (0+255),b
  3689  002BFC  0100               	movlb	0	; () banked
  3690  002BFE  6B9B               	clrf	(??___flmul+3)& (0+255),b
  3691  002C00  C09A  F09B         	movff	??___flmul+2,??___flmul+3
  3692  002C04  C099  F09A         	movff	??___flmul+1,??___flmul+2
  3693  002C08  C098  F099         	movff	??___flmul,??___flmul+1
  3694  002C0C  0100               	movlb	0	; () banked
  3695  002C0E  6B98               	clrf	??___flmul& (0+255),b
  3696  002C10  0100               	movlb	0	; () banked
  3697  002C12  5198               	movf	??___flmul& (0+255),w,b
  3698  002C14  0100               	movlb	0	; () banked
  3699  002C16  27A3               	addwf	___flmul@prod& (0+255),f,b
  3700  002C18  0100               	movlb	0	; () banked
  3701  002C1A  5199               	movf	(??___flmul+1)& (0+255),w,b
  3702  002C1C  0100               	movlb	0	; () banked
  3703  002C1E  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3704  002C20  0100               	movlb	0	; () banked
  3705  002C22  519A               	movf	(??___flmul+2)& (0+255),w,b
  3706  002C24  0100               	movlb	0	; () banked
  3707  002C26  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3708  002C28  0100               	movlb	0	; () banked
  3709  002C2A  519B               	movf	(??___flmul+3)& (0+255),w,b
  3710  002C2C  0100               	movlb	0	; () banked
  3711  002C2E  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3712                           
  3713                           ; BSR set to: 0
  3714  002C30  C09E  F098         	movff	___flmul@grs,??___flmul
  3715  002C34  C09F  F099         	movff	___flmul@grs+1,??___flmul+1
  3716  002C38  C0A0  F09A         	movff	___flmul@grs+2,??___flmul+2
  3717  002C3C  C0A1  F09B         	movff	___flmul@grs+3,??___flmul+3
  3718  002C40  0E19               	movlw	25
  3719  002C42  D006               	goto	u7220
  3720  002C44                     u7225:
  3721  002C44  0100               	movlb	0	; () banked
  3722  002C46  90D8               	bcf	status,0,c
  3723  002C48  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  3724  002C4A  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  3725  002C4C  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  3726  002C4E  3398               	rrcf	??___flmul& (0+255),f,b
  3727  002C50                     u7220:
  3728  002C50  2EE8               	decfsz	wreg,f,c
  3729  002C52  D7F8               	goto	u7225
  3730  002C54  0100               	movlb	0	; () banked
  3731  002C56  5198               	movf	??___flmul& (0+255),w,b
  3732  002C58  0100               	movlb	0	; () banked
  3733  002C5A  27A3               	addwf	___flmul@prod& (0+255),f,b
  3734  002C5C  0100               	movlb	0	; () banked
  3735  002C5E  5199               	movf	(??___flmul+1)& (0+255),w,b
  3736  002C60  0100               	movlb	0	; () banked
  3737  002C62  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3738  002C64  0100               	movlb	0	; () banked
  3739  002C66  519A               	movf	(??___flmul+2)& (0+255),w,b
  3740  002C68  0100               	movlb	0	; () banked
  3741  002C6A  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3742  002C6C  0100               	movlb	0	; () banked
  3743  002C6E  519B               	movf	(??___flmul+3)& (0+255),w,b
  3744  002C70  0100               	movlb	0	; () banked
  3745  002C72  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3746                           
  3747                           ; BSR set to: 0
  3748  002C74  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  3749  002C78  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  3750  002C7C  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  3751  002C80  0100               	movlb	0	; () banked
  3752  002C82  6B9E               	clrf	___flmul@grs& (0+255),b
  3753                           
  3754                           ; BSR set to: 0
  3755  002C84  0100               	movlb	0	; () banked
  3756  002C86  519D               	movf	___flmul@aexp& (0+255),w,b
  3757  002C88  C0A2  F098         	movff	___flmul@bexp,??___flmul
  3758  002C8C  0100               	movlb	0	; () banked
  3759  002C8E  6B99               	clrf	(??___flmul+1)& (0+255),b
  3760  002C90  0100               	movlb	0	; () banked
  3761  002C92  2798               	addwf	??___flmul& (0+255),f,b
  3762  002C94  0E00               	movlw	0
  3763  002C96  2399               	addwfc	(??___flmul+1)& (0+255),f,b
  3764  002C98  0E82               	movlw	130
  3765  002C9A  0100               	movlb	0	; () banked
  3766  002C9C  2598               	addwf	??___flmul& (0+255),w,b
  3767  002C9E  0100               	movlb	0	; () banked
  3768  002CA0  6FA7               	movwf	___flmul@temp& (0+255),b
  3769  002CA2  0EFF               	movlw	255
  3770  002CA4  0100               	movlb	0	; () banked
  3771  002CA6  2199               	addwfc	(??___flmul+1)& (0+255),w,b
  3772  002CA8  0100               	movlb	0	; () banked
  3773  002CAA  6FA8               	movwf	(___flmul@temp+1)& (0+255),b
  3774  002CAC  D015               	goto	l5701
  3775  002CAE                     l5695:
  3776                           
  3777                           ; BSR set to: 0
  3778  002CAE  0100               	movlb	0	; () banked
  3779  002CB0  90D8               	bcf	status,0,c
  3780  002CB2  37A3               	rlcf	___flmul@prod& (0+255),f,b
  3781  002CB4  37A4               	rlcf	(___flmul@prod+1)& (0+255),f,b
  3782  002CB6  37A5               	rlcf	(___flmul@prod+2)& (0+255),f,b
  3783  002CB8  37A6               	rlcf	(___flmul@prod+3)& (0+255),f,b
  3784                           
  3785                           ; BSR set to: 0
  3786  002CBA  0100               	movlb	0	; () banked
  3787  002CBC  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  3788  002CBE  D002               	goto	l1322
  3789                           
  3790                           ; BSR set to: 0
  3791  002CC0  0100               	movlb	0	; () banked
  3792  002CC2  81A3               	bsf	___flmul@prod& (0+255),0,b
  3793  002CC4                     l1322:
  3794                           
  3795                           ; BSR set to: 0
  3796  002CC4  0100               	movlb	0	; () banked
  3797  002CC6  90D8               	bcf	status,0,c
  3798  002CC8  379E               	rlcf	___flmul@grs& (0+255),f,b
  3799  002CCA  379F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  3800  002CCC  37A0               	rlcf	(___flmul@grs+2)& (0+255),f,b
  3801  002CCE  37A1               	rlcf	(___flmul@grs+3)& (0+255),f,b
  3802  002CD0  0100               	movlb	0	; () banked
  3803  002CD2  07A7               	decf	___flmul@temp& (0+255),f,b
  3804  002CD4  A0D8               	btfss	status,0,c
  3805  002CD6  07A8               	decf	(___flmul@temp+1)& (0+255),f,b
  3806  002CD8                     l5701:
  3807                           
  3808                           ; BSR set to: 0
  3809  002CD8  0100               	movlb	0	; () banked
  3810  002CDA  AFA5               	btfss	(___flmul@prod+2)& (0+255),7,b
  3811  002CDC  D7E8               	goto	l5695
  3812                           
  3813                           ; BSR set to: 0
  3814                           
  3815                           ; BSR set to: 0
  3816  002CDE  0E00               	movlw	0
  3817  002CE0  0100               	movlb	0	; () banked
  3818  002CE2  6F9D               	movwf	___flmul@aexp& (0+255),b
  3819                           
  3820                           ; BSR set to: 0
  3821  002CE4  0100               	movlb	0	; () banked
  3822  002CE6  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  3823  002CE8  D024               	goto	l1324
  3824                           
  3825                           ; BSR set to: 0
  3826  002CEA  0EFF               	movlw	255
  3827  002CEC  0100               	movlb	0	; () banked
  3828  002CEE  159E               	andwf	___flmul@grs& (0+255),w,b
  3829  002CF0  0100               	movlb	0	; () banked
  3830  002CF2  6F98               	movwf	??___flmul& (0+255),b
  3831  002CF4  0EFF               	movlw	255
  3832  002CF6  0100               	movlb	0	; () banked
  3833  002CF8  159F               	andwf	(___flmul@grs+1)& (0+255),w,b
  3834  002CFA  0100               	movlb	0	; () banked
  3835  002CFC  6F99               	movwf	(??___flmul+1)& (0+255),b
  3836  002CFE  0EFF               	movlw	255
  3837  002D00  0100               	movlb	0	; () banked
  3838  002D02  15A0               	andwf	(___flmul@grs+2)& (0+255),w,b
  3839  002D04  0100               	movlb	0	; () banked
  3840  002D06  6F9A               	movwf	(??___flmul+2)& (0+255),b
  3841  002D08  0E7F               	movlw	127
  3842  002D0A  0100               	movlb	0	; () banked
  3843  002D0C  15A1               	andwf	(___flmul@grs+3)& (0+255),w,b
  3844  002D0E  0100               	movlb	0	; () banked
  3845  002D10  6F9B               	movwf	(??___flmul+3)& (0+255),b
  3846  002D12  0100               	movlb	0	; () banked
  3847  002D14  5198               	movf	??___flmul& (0+255),w,b
  3848  002D16  0100               	movlb	0	; () banked
  3849  002D18  1199               	iorwf	(??___flmul+1)& (0+255),w,b
  3850  002D1A  0100               	movlb	0	; () banked
  3851  002D1C  119A               	iorwf	(??___flmul+2)& (0+255),w,b
  3852  002D1E  0100               	movlb	0	; () banked
  3853  002D20  119B               	iorwf	(??___flmul+3)& (0+255),w,b
  3854  002D22  A4D8               	btfss	status,2,c
  3855  002D24  D003               	goto	l5711
  3856                           
  3857                           ; BSR set to: 0
  3858                           
  3859                           ; BSR set to: 0
  3860  002D26  0100               	movlb	0	; () banked
  3861  002D28  A1A3               	btfss	___flmul@prod& (0+255),0,b
  3862  002D2A  D003               	goto	l1324
  3863  002D2C                     l5711:
  3864                           
  3865                           ; BSR set to: 0
  3866  002D2C  0E01               	movlw	1
  3867  002D2E  0100               	movlb	0	; () banked
  3868  002D30  6F9D               	movwf	___flmul@aexp& (0+255),b
  3869  002D32                     l1324:
  3870                           
  3871                           ; BSR set to: 0
  3872  002D32  0100               	movlb	0	; () banked
  3873  002D34  519D               	movf	___flmul@aexp& (0+255),w,b
  3874  002D36  0100               	movlb	0	; () banked
  3875  002D38  B4D8               	btfsc	status,2,c
  3876  002D3A  D023               	goto	l5721
  3877                           
  3878                           ; BSR set to: 0
  3879  002D3C  0E01               	movlw	1
  3880  002D3E  0100               	movlb	0	; () banked
  3881  002D40  27A3               	addwf	___flmul@prod& (0+255),f,b
  3882  002D42  0E00               	movlw	0
  3883  002D44  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3884  002D46  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3885  002D48  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3886                           
  3887                           ; BSR set to: 0
  3888  002D4A  0100               	movlb	0	; () banked
  3889  002D4C  A1A6               	btfss	(___flmul@prod+3)& (0+255),0,b
  3890  002D4E  D019               	goto	l5721
  3891                           
  3892                           ; BSR set to: 0
  3893  002D50  C0A3  F098         	movff	___flmul@prod,??___flmul
  3894  002D54  C0A4  F099         	movff	___flmul@prod+1,??___flmul+1
  3895  002D58  C0A5  F09A         	movff	___flmul@prod+2,??___flmul+2
  3896  002D5C  C0A6  F09B         	movff	___flmul@prod+3,??___flmul+3
  3897  002D60  0100               	movlb	0	; () banked
  3898  002D62  359B               	rlcf	(??___flmul+3)& (0+255),w,b
  3899  002D64  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  3900  002D66  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  3901  002D68  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  3902  002D6A  3398               	rrcf	??___flmul& (0+255),f,b
  3903  002D6C  C098  F0A3         	movff	??___flmul,___flmul@prod
  3904  002D70  C099  F0A4         	movff	??___flmul+1,___flmul@prod+1
  3905  002D74  C09A  F0A5         	movff	??___flmul+2,___flmul@prod+2
  3906  002D78  C09B  F0A6         	movff	??___flmul+3,___flmul@prod+3
  3907                           
  3908                           ; BSR set to: 0
  3909  002D7C  0100               	movlb	0	; () banked
  3910  002D7E  4BA7               	infsnz	___flmul@temp& (0+255),f,b
  3911  002D80  2BA8               	incf	(___flmul@temp+1)& (0+255),f,b
  3912  002D82                     l5721:
  3913                           
  3914                           ; BSR set to: 0
  3915  002D82  0100               	movlb	0	; () banked
  3916  002D84  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  3917  002D86  D010               	goto	l5725
  3918  002D88  0100               	movlb	0	; () banked
  3919  002D8A  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  3920  002D8C  E104               	bnz	u7300
  3921  002D8E  0100               	movlb	0	; () banked
  3922  002D90  29A7               	incf	___flmul@temp& (0+255),w,b
  3923  002D92  A0D8               	btfss	status,0,c
  3924  002D94  D009               	goto	l5725
  3925  002D96                     u7300:
  3926                           
  3927                           ; BSR set to: 0
  3928  002D96  0E00               	movlw	0
  3929  002D98  0100               	movlb	0	; () banked
  3930  002D9A  6FA3               	movwf	___flmul@prod& (0+255),b
  3931  002D9C  0E00               	movlw	0
  3932  002D9E  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  3933  002DA0  0E80               	movlw	128
  3934  002DA2  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  3935  002DA4  0E7F               	movlw	127
  3936  002DA6  D02B               	goto	L2
  3937  002DA8                     l5725:
  3938                           
  3939                           ; BSR set to: 0
  3940  002DA8  0100               	movlb	0	; () banked
  3941  002DAA  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  3942  002DAC  D007               	goto	l5727
  3943  002DAE  0100               	movlb	0	; () banked
  3944  002DB0  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  3945  002DB2  E111               	bnz	l1332
  3946  002DB4  0100               	movlb	0	; () banked
  3947  002DB6  05A7               	decf	___flmul@temp& (0+255),w,b
  3948  002DB8  B0D8               	btfsc	status,0,c
  3949  002DBA  D00D               	goto	l1332
  3950  002DBC                     l5727:
  3951                           
  3952                           ; BSR set to: 0
  3953  002DBC  0E00               	movlw	0
  3954  002DBE  0100               	movlb	0	; () banked
  3955  002DC0  6FA3               	movwf	___flmul@prod& (0+255),b
  3956  002DC2  0E00               	movlw	0
  3957  002DC4  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  3958  002DC6  0E00               	movlw	0
  3959  002DC8  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  3960  002DCA  0E00               	movlw	0
  3961  002DCC  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  3962  002DCE  0E00               	movlw	0
  3963  002DD0  0100               	movlb	0	; () banked
  3964  002DD2  6F9C               	movwf	___flmul@sign& (0+255),b
  3965  002DD4  D015               	goto	l5737
  3966  002DD6                     l1332:
  3967                           
  3968                           ; BSR set to: 0
  3969  002DD6  C0A7  F0A2         	movff	___flmul@temp,___flmul@bexp
  3970                           
  3971                           ; BSR set to: 0
  3972  002DDA  0EFF               	movlw	255
  3973  002DDC  0100               	movlb	0	; () banked
  3974  002DDE  17A3               	andwf	___flmul@prod& (0+255),f,b
  3975  002DE0  0EFF               	movlw	255
  3976  002DE2  17A4               	andwf	(___flmul@prod+1)& (0+255),f,b
  3977  002DE4  0E7F               	movlw	127
  3978  002DE6  17A5               	andwf	(___flmul@prod+2)& (0+255),f,b
  3979  002DE8  0E00               	movlw	0
  3980  002DEA  17A6               	andwf	(___flmul@prod+3)& (0+255),f,b
  3981                           
  3982                           ; BSR set to: 0
  3983  002DEC  0100               	movlb	0	; () banked
  3984  002DEE  A1A2               	btfss	___flmul@bexp& (0+255),0,b
  3985  002DF0  D002               	goto	l5735
  3986                           
  3987                           ; BSR set to: 0
  3988  002DF2  0100               	movlb	0	; () banked
  3989  002DF4  8FA5               	bsf	(___flmul@prod+2)& (0+255),7,b
  3990  002DF6                     l5735:
  3991                           
  3992                           ; BSR set to: 0
  3993  002DF6  0100               	movlb	0	; () banked
  3994  002DF8  90D8               	bcf	status,0,c
  3995  002DFA  31A2               	rrcf	___flmul@bexp& (0+255),w,b
  3996  002DFC  0100               	movlb	0	; () banked
  3997  002DFE                     L2:
  3998  002DFE  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  3999  002E00                     l5737:
  4000                           
  4001                           ; BSR set to: 0
  4002  002E00  0100               	movlb	0	; () banked
  4003  002E02  519C               	movf	___flmul@sign& (0+255),w,b
  4004  002E04  0100               	movlb	0	; () banked
  4005  002E06  13A6               	iorwf	(___flmul@prod+3)& (0+255),f,b
  4006                           
  4007                           ; BSR set to: 0
  4008  002E08  C0A3  F090         	movff	___flmul@prod,?___flmul
  4009  002E0C  C0A4  F091         	movff	___flmul@prod+1,?___flmul+1
  4010  002E10  C0A5  F092         	movff	___flmul@prod+2,?___flmul+2
  4011  002E14  C0A6  F093         	movff	___flmul@prod+3,?___flmul+3
  4012  002E18  0012               	return	
  4013  002E1A                     __end_of___flmul:
  4014                           	opt stack 0
  4015                           tblptru	equ	0xFF8
  4016                           tblptrh	equ	0xFF7
  4017                           tblptrl	equ	0xFF6
  4018                           tablat	equ	0xFF5
  4019                           prodh	equ	0xFF4
  4020                           prodl	equ	0xFF3
  4021                           postinc0	equ	0xFEE
  4022                           wreg	equ	0xFE8
  4023                           postinc2	equ	0xFDE
  4024                           postdec2	equ	0xFDD
  4025                           status	equ	0xFD8
  4026                           
  4027 ;; *************** function ___fladd *****************
  4028 ;; Defined at:
  4029 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  4030 ;; Parameters:    Size  Location     Type
  4031 ;;  b               4   77[BANK0 ] unsigned char 
  4032 ;;  a               4   81[BANK0 ] unsigned char 
  4033 ;; Auto vars:     Size  Location     Type
  4034 ;;  grs             1   96[BANK0 ] unsigned char 
  4035 ;;  bexp            1   95[BANK0 ] unsigned char 
  4036 ;;  aexp            1   94[BANK0 ] unsigned char 
  4037 ;;  signs           1   93[BANK0 ] unsigned char 
  4038 ;; Return value:  Size  Location     Type
  4039 ;;                  4   77[BANK0 ] unsigned char 
  4040 ;; Registers used:
  4041 ;;		wreg, status,2, status,0
  4042 ;; Tracked objects:
  4043 ;;		On entry : 0/0
  4044 ;;		On exit  : 0/0
  4045 ;;		Unchanged: 0/0
  4046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4047 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4048 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4049 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4050 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4051 ;;Total ram usage:       20 bytes
  4052 ;; Hardware stack levels used:    1
  4053 ;; Hardware stack levels required when called:    4
  4054 ;; This function calls:
  4055 ;;		Nothing
  4056 ;; This function is called by:
  4057 ;;		_parallelo
  4058 ;;		_asin
  4059 ;;		_atan
  4060 ;;		_eval_poly
  4061 ;; This function uses a non-reentrant model
  4062 ;;
  4063                           
  4064                           	psect	text10
  4065  0024CC                     __ptext10:
  4066                           	opt stack 0
  4067  0024CC                     ___fladd:
  4068                           	opt stack 21
  4069                           
  4070                           ; BSR set to: 0
  4071                           ;incstack = 0
  4072  0024CC  0100               	movlb	0	; () banked
  4073  0024CE  51B0               	movf	(___fladd@b+3)& (0+255),w,b
  4074  0024D0  0B80               	andlw	128
  4075  0024D2  0100               	movlb	0	; () banked
  4076  0024D4  6FBD               	movwf	___fladd@signs& (0+255),b
  4077  0024D6  0100               	movlb	0	; () banked
  4078  0024D8  51B0               	movf	(___fladd@b+3)& (0+255),w,b
  4079  0024DA  25B0               	addwf	(___fladd@b+3)& (0+255),w,b
  4080  0024DC  0100               	movlb	0	; () banked
  4081  0024DE  6FBF               	movwf	___fladd@bexp& (0+255),b
  4082                           
  4083                           ; BSR set to: 0
  4084  0024E0  0100               	movlb	0	; () banked
  4085  0024E2  AFAF               	btfss	(___fladd@b+2)& (0+255),7,b
  4086  0024E4  D002               	goto	l5417
  4087                           
  4088                           ; BSR set to: 0
  4089  0024E6  0100               	movlb	0	; () banked
  4090  0024E8  81BF               	bsf	___fladd@bexp& (0+255),0,b
  4091  0024EA                     l5417:
  4092                           
  4093                           ; BSR set to: 0
  4094  0024EA  0100               	movlb	0	; () banked
  4095  0024EC  51BF               	movf	___fladd@bexp& (0+255),w,b
  4096  0024EE  0100               	movlb	0	; () banked
  4097  0024F0  B4D8               	btfsc	status,2,c
  4098  0024F2  D012               	goto	l5427
  4099                           
  4100                           ; BSR set to: 0
  4101  0024F4  0100               	movlb	0	; () banked
  4102  0024F6  29BF               	incf	___fladd@bexp& (0+255),w,b
  4103  0024F8  A4D8               	btfss	status,2,c
  4104  0024FA  D009               	goto	l5423
  4105                           
  4106                           ; BSR set to: 0
  4107  0024FC  0E00               	movlw	0
  4108  0024FE  0100               	movlb	0	; () banked
  4109  002500  6FAD               	movwf	___fladd@b& (0+255),b
  4110  002502  0E00               	movlw	0
  4111  002504  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  4112  002506  0E00               	movlw	0
  4113  002508  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  4114  00250A  0E00               	movlw	0
  4115  00250C  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  4116  00250E                     l5423:
  4117                           
  4118                           ; BSR set to: 0
  4119  00250E  0100               	movlb	0	; () banked
  4120  002510  8FAF               	bsf	(___fladd@b+2)& (0+255),7,b
  4121                           
  4122                           ; BSR set to: 0
  4123  002512  0E00               	movlw	0
  4124  002514  0100               	movlb	0	; () banked
  4125  002516  D008               	goto	L3
  4126  002518                     l5427:
  4127                           
  4128                           ; BSR set to: 0
  4129  002518  0E00               	movlw	0
  4130  00251A  0100               	movlb	0	; () banked
  4131  00251C  6FAD               	movwf	___fladd@b& (0+255),b
  4132  00251E  0E00               	movlw	0
  4133  002520  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  4134  002522  0E00               	movlw	0
  4135  002524  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  4136  002526  0E00               	movlw	0
  4137  002528                     L3:
  4138  002528  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  4139                           
  4140                           ; BSR set to: 0
  4141                           
  4142                           ; BSR set to: 0
  4143  00252A  0100               	movlb	0	; () banked
  4144  00252C  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  4145  00252E  0B80               	andlw	128
  4146  002530  0100               	movlb	0	; () banked
  4147  002532  6FBE               	movwf	___fladd@aexp& (0+255),b
  4148                           
  4149                           ; BSR set to: 0
  4150  002534  0100               	movlb	0	; () banked
  4151  002536  51BD               	movf	___fladd@signs& (0+255),w,b
  4152  002538  0100               	movlb	0	; () banked
  4153  00253A  19BE               	xorwf	___fladd@aexp& (0+255),w,b
  4154  00253C  B4D8               	btfsc	status,2,c
  4155  00253E  D002               	goto	l5435
  4156                           
  4157                           ; BSR set to: 0
  4158  002540  0100               	movlb	0	; () banked
  4159  002542  8DBD               	bsf	___fladd@signs& (0+255),6,b
  4160  002544                     l5435:
  4161                           
  4162                           ; BSR set to: 0
  4163  002544  0100               	movlb	0	; () banked
  4164  002546  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  4165  002548  25B4               	addwf	(___fladd@a+3)& (0+255),w,b
  4166  00254A  0100               	movlb	0	; () banked
  4167  00254C  6FBE               	movwf	___fladd@aexp& (0+255),b
  4168                           
  4169                           ; BSR set to: 0
  4170  00254E  0100               	movlb	0	; () banked
  4171  002550  AFB3               	btfss	(___fladd@a+2)& (0+255),7,b
  4172  002552  D002               	goto	l5441
  4173                           
  4174                           ; BSR set to: 0
  4175  002554  0100               	movlb	0	; () banked
  4176  002556  81BE               	bsf	___fladd@aexp& (0+255),0,b
  4177  002558                     l5441:
  4178                           
  4179                           ; BSR set to: 0
  4180  002558  0100               	movlb	0	; () banked
  4181  00255A  51BE               	movf	___fladd@aexp& (0+255),w,b
  4182  00255C  0100               	movlb	0	; () banked
  4183  00255E  B4D8               	btfsc	status,2,c
  4184  002560  D012               	goto	l5451
  4185                           
  4186                           ; BSR set to: 0
  4187  002562  0100               	movlb	0	; () banked
  4188  002564  29BE               	incf	___fladd@aexp& (0+255),w,b
  4189  002566  A4D8               	btfss	status,2,c
  4190  002568  D009               	goto	l5447
  4191                           
  4192                           ; BSR set to: 0
  4193  00256A  0E00               	movlw	0
  4194  00256C  0100               	movlb	0	; () banked
  4195  00256E  6FB1               	movwf	___fladd@a& (0+255),b
  4196  002570  0E00               	movlw	0
  4197  002572  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  4198  002574  0E00               	movlw	0
  4199  002576  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  4200  002578  0E00               	movlw	0
  4201  00257A  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  4202  00257C                     l5447:
  4203                           
  4204                           ; BSR set to: 0
  4205  00257C  0100               	movlb	0	; () banked
  4206  00257E  8FB3               	bsf	(___fladd@a+2)& (0+255),7,b
  4207                           
  4208                           ; BSR set to: 0
  4209  002580  0E00               	movlw	0
  4210  002582  0100               	movlb	0	; () banked
  4211  002584  D008               	goto	L4
  4212  002586                     l5451:
  4213                           
  4214                           ; BSR set to: 0
  4215  002586  0E00               	movlw	0
  4216  002588  0100               	movlb	0	; () banked
  4217  00258A  6FB1               	movwf	___fladd@a& (0+255),b
  4218  00258C  0E00               	movlw	0
  4219  00258E  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  4220  002590  0E00               	movlw	0
  4221  002592  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  4222  002594  0E00               	movlw	0
  4223  002596                     L4:
  4224  002596  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  4225                           
  4226                           ; BSR set to: 0
  4227                           
  4228                           ; BSR set to: 0
  4229  002598  0100               	movlb	0	; () banked
  4230  00259A  51BF               	movf	___fladd@bexp& (0+255),w,b
  4231  00259C  0100               	movlb	0	; () banked
  4232  00259E  5DBE               	subwf	___fladd@aexp& (0+255),w,b
  4233  0025A0  B0D8               	btfsc	status,0,c
  4234  0025A2  D024               	goto	l5489
  4235                           
  4236                           ; BSR set to: 0
  4237  0025A4  0100               	movlb	0	; () banked
  4238  0025A6  ADBD               	btfss	___fladd@signs& (0+255),6,b
  4239  0025A8  D003               	goto	l5459
  4240                           
  4241                           ; BSR set to: 0
  4242  0025AA  0E80               	movlw	128
  4243  0025AC  0100               	movlb	0	; () banked
  4244  0025AE  1BBD               	xorwf	___fladd@signs& (0+255),f,b
  4245  0025B0                     l5459:
  4246                           
  4247                           ; BSR set to: 0
  4248  0025B0  C0BF  F0C0         	movff	___fladd@bexp,___fladd@grs
  4249                           
  4250                           ; BSR set to: 0
  4251  0025B4  C0BE  F0BF         	movff	___fladd@aexp,___fladd@bexp
  4252                           
  4253                           ; BSR set to: 0
  4254  0025B8  C0C0  F0BE         	movff	___fladd@grs,___fladd@aexp
  4255                           
  4256                           ; BSR set to: 0
  4257  0025BC  C0AD  F0C0         	movff	___fladd@b,___fladd@grs
  4258                           
  4259                           ; BSR set to: 0
  4260  0025C0  C0B1  F0AD         	movff	___fladd@a,___fladd@b
  4261                           
  4262                           ; BSR set to: 0
  4263  0025C4  C0C0  F0B1         	movff	___fladd@grs,___fladd@a
  4264                           
  4265                           ; BSR set to: 0
  4266  0025C8  C0AE  F0C0         	movff	___fladd@b+1,___fladd@grs
  4267                           
  4268                           ; BSR set to: 0
  4269  0025CC  C0B2  F0AE         	movff	___fladd@a+1,___fladd@b+1
  4270                           
  4271                           ; BSR set to: 0
  4272  0025D0  C0C0  F0B2         	movff	___fladd@grs,___fladd@a+1
  4273                           
  4274                           ; BSR set to: 0
  4275  0025D4  C0AF  F0C0         	movff	___fladd@b+2,___fladd@grs
  4276                           
  4277                           ; BSR set to: 0
  4278  0025D8  C0B3  F0AF         	movff	___fladd@a+2,___fladd@b+2
  4279                           
  4280                           ; BSR set to: 0
  4281  0025DC  C0C0  F0B3         	movff	___fladd@grs,___fladd@a+2
  4282                           
  4283                           ; BSR set to: 0
  4284  0025E0  C0B0  F0C0         	movff	___fladd@b+3,___fladd@grs
  4285                           
  4286                           ; BSR set to: 0
  4287  0025E4  C0B4  F0B0         	movff	___fladd@a+3,___fladd@b+3
  4288                           
  4289                           ; BSR set to: 0
  4290  0025E8  C0C0  F0B4         	movff	___fladd@grs,___fladd@a+3
  4291  0025EC                     l5489:
  4292                           
  4293                           ; BSR set to: 0
  4294  0025EC  0E00               	movlw	0
  4295  0025EE  0100               	movlb	0	; () banked
  4296  0025F0  6FC0               	movwf	___fladd@grs& (0+255),b
  4297                           
  4298                           ; BSR set to: 0
  4299  0025F2  0100               	movlb	0	; () banked
  4300  0025F4  51BF               	movf	___fladd@bexp& (0+255),w,b
  4301  0025F6  0100               	movlb	0	; () banked
  4302  0025F8  6FB5               	movwf	??___fladd& (0+255),b
  4303  0025FA  6BB6               	clrf	(??___fladd+1)& (0+255),b
  4304  0025FC  0100               	movlb	0	; () banked
  4305  0025FE  1FB5               	comf	??___fladd& (0+255),f,b
  4306  002600  1FB6               	comf	(??___fladd+1)& (0+255),f,b
  4307  002602  4BB5               	infsnz	??___fladd& (0+255),f,b
  4308  002604  2BB6               	incf	(??___fladd+1)& (0+255),f,b
  4309  002606  0100               	movlb	0	; () banked
  4310  002608  51BE               	movf	___fladd@aexp& (0+255),w,b
  4311  00260A  0100               	movlb	0	; () banked
  4312  00260C  6FB7               	movwf	(??___fladd+2)& (0+255),b
  4313  00260E  6BB8               	clrf	(??___fladd+3)& (0+255),b
  4314  002610  0100               	movlb	0	; () banked
  4315  002612  51B5               	movf	??___fladd& (0+255),w,b
  4316  002614  0100               	movlb	0	; () banked
  4317  002616  27B7               	addwf	(??___fladd+2)& (0+255),f,b
  4318  002618  0100               	movlb	0	; () banked
  4319  00261A  51B6               	movf	(??___fladd+1)& (0+255),w,b
  4320  00261C  0100               	movlb	0	; () banked
  4321  00261E  23B8               	addwfc	(??___fladd+3)& (0+255),f,b
  4322  002620  0100               	movlb	0	; () banked
  4323  002622  BFB8               	btfsc	(??___fladd+3)& (0+255),7,b
  4324  002624  D03D               	goto	l1230
  4325  002626  0100               	movlb	0	; () banked
  4326  002628  51B8               	movf	(??___fladd+3)& (0+255),w,b
  4327  00262A  E105               	bnz	u6840
  4328  00262C  0E1A               	movlw	26
  4329  00262E  0100               	movlb	0	; () banked
  4330  002630  5DB7               	subwf	(??___fladd+2)& (0+255),w,b
  4331  002632  A0D8               	btfss	status,0,c
  4332  002634  D035               	goto	l1230
  4333  002636                     u6840:
  4334                           
  4335                           ; BSR set to: 0
  4336  002636  0100               	movlb	0	; () banked
  4337  002638  51AD               	movf	___fladd@b& (0+255),w,b
  4338  00263A  0100               	movlb	0	; () banked
  4339  00263C  11AE               	iorwf	(___fladd@b+1)& (0+255),w,b
  4340  00263E  0100               	movlb	0	; () banked
  4341  002640  11AF               	iorwf	(___fladd@b+2)& (0+255),w,b
  4342  002642  0100               	movlb	0	; () banked
  4343  002644  11B0               	iorwf	(___fladd@b+3)& (0+255),w,b
  4344  002646  B4D8               	btfsc	status,2,c
  4345  002648  D002               	goto	u6850
  4346  00264A  0E01               	movlw	1
  4347  00264C  D001               	goto	u6860
  4348  00264E                     u6850:
  4349  00264E  0E00               	movlw	0
  4350  002650                     u6860:
  4351  002650  0100               	movlb	0	; () banked
  4352  002652  6FC0               	movwf	___fladd@grs& (0+255),b
  4353                           
  4354                           ; BSR set to: 0
  4355  002654  0E00               	movlw	0
  4356  002656  0100               	movlb	0	; () banked
  4357  002658  6FAD               	movwf	___fladd@b& (0+255),b
  4358  00265A  0E00               	movlw	0
  4359  00265C  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  4360  00265E  0E00               	movlw	0
  4361  002660  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  4362  002662  0E00               	movlw	0
  4363  002664  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  4364                           
  4365                           ; BSR set to: 0
  4366  002666  C0BE  F0BF         	movff	___fladd@aexp,___fladd@bexp
  4367  00266A  D020               	goto	l1229
  4368  00266C                     l1231:
  4369                           
  4370                           ; BSR set to: 0
  4371  00266C  0100               	movlb	0	; () banked
  4372  00266E  A1C0               	btfss	___fladd@grs& (0+255),0,b
  4373  002670  D007               	goto	l5501
  4374                           
  4375                           ; BSR set to: 0
  4376  002672  0100               	movlb	0	; () banked
  4377  002674  90D8               	bcf	status,0,c
  4378  002676  31C0               	rrcf	___fladd@grs& (0+255),w,b
  4379  002678  0901               	iorlw	1
  4380  00267A  0100               	movlb	0	; () banked
  4381  00267C  6FC0               	movwf	___fladd@grs& (0+255),b
  4382  00267E  D003               	goto	l5503
  4383  002680                     l5501:
  4384                           
  4385                           ; BSR set to: 0
  4386  002680  0100               	movlb	0	; () banked
  4387  002682  90D8               	bcf	status,0,c
  4388  002684  33C0               	rrcf	___fladd@grs& (0+255),f,b
  4389  002686                     l5503:
  4390                           
  4391                           ; BSR set to: 0
  4392  002686  0100               	movlb	0	; () banked
  4393  002688  A1AD               	btfss	___fladd@b& (0+255),0,b
  4394  00268A  D002               	goto	l5507
  4395                           
  4396                           ; BSR set to: 0
  4397  00268C  0100               	movlb	0	; () banked
  4398  00268E  8FC0               	bsf	___fladd@grs& (0+255),7,b
  4399  002690                     l5507:
  4400                           
  4401                           ; BSR set to: 0
  4402  002690  0100               	movlb	0	; () banked
  4403  002692  35B0               	rlcf	(___fladd@b+3)& (0+255),w,b
  4404  002694  33B0               	rrcf	(___fladd@b+3)& (0+255),f,b
  4405  002696  33AF               	rrcf	(___fladd@b+2)& (0+255),f,b
  4406  002698  33AE               	rrcf	(___fladd@b+1)& (0+255),f,b
  4407  00269A  33AD               	rrcf	___fladd@b& (0+255),f,b
  4408                           
  4409                           ; BSR set to: 0
  4410  00269C  0100               	movlb	0	; () banked
  4411  00269E  2BBF               	incf	___fladd@bexp& (0+255),f,b
  4412  0026A0                     l1230:
  4413                           
  4414                           ; BSR set to: 0
  4415  0026A0  0100               	movlb	0	; () banked
  4416  0026A2  51BE               	movf	___fladd@aexp& (0+255),w,b
  4417  0026A4  0100               	movlb	0	; () banked
  4418  0026A6  5DBF               	subwf	___fladd@bexp& (0+255),w,b
  4419  0026A8  A0D8               	btfss	status,0,c
  4420  0026AA  D7E0               	goto	l1231
  4421  0026AC                     l1229:
  4422                           
  4423                           ; BSR set to: 0
  4424  0026AC  0100               	movlb	0	; () banked
  4425  0026AE  BDBD               	btfsc	___fladd@signs& (0+255),6,b
  4426  0026B0  D03F               	goto	l5535
  4427                           
  4428                           ; BSR set to: 0
  4429  0026B2  0100               	movlb	0	; () banked
  4430  0026B4  51BF               	movf	___fladd@bexp& (0+255),w,b
  4431  0026B6  0100               	movlb	0	; () banked
  4432  0026B8  A4D8               	btfss	status,2,c
  4433  0026BA  D00A               	goto	l5517
  4434                           
  4435                           ; BSR set to: 0
  4436  0026BC  0E00               	movlw	0
  4437  0026BE  0100               	movlb	0	; () banked
  4438  0026C0  6FAD               	movwf	?___fladd& (0+255),b
  4439  0026C2  0E00               	movlw	0
  4440  0026C4  6FAE               	movwf	(?___fladd+1)& (0+255),b
  4441  0026C6  0E00               	movlw	0
  4442  0026C8  6FAF               	movwf	(?___fladd+2)& (0+255),b
  4443  0026CA  0E00               	movlw	0
  4444  0026CC  6FB0               	movwf	(?___fladd+3)& (0+255),b
  4445                           
  4446                           ; BSR set to: 0
  4447  0026CE  0012               	return	
  4448  0026D0                     l5517:
  4449                           
  4450                           ; BSR set to: 0
  4451  0026D0  0100               	movlb	0	; () banked
  4452  0026D2  51B1               	movf	___fladd@a& (0+255),w,b
  4453  0026D4  0100               	movlb	0	; () banked
  4454  0026D6  27AD               	addwf	___fladd@b& (0+255),f,b
  4455  0026D8  0100               	movlb	0	; () banked
  4456  0026DA  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  4457  0026DC  0100               	movlb	0	; () banked
  4458  0026DE  23AE               	addwfc	(___fladd@b+1)& (0+255),f,b
  4459  0026E0  0100               	movlb	0	; () banked
  4460  0026E2  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  4461  0026E4  0100               	movlb	0	; () banked
  4462  0026E6  23AF               	addwfc	(___fladd@b+2)& (0+255),f,b
  4463  0026E8  0100               	movlb	0	; () banked
  4464  0026EA  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  4465  0026EC  0100               	movlb	0	; () banked
  4466  0026EE  23B0               	addwfc	(___fladd@b+3)& (0+255),f,b
  4467                           
  4468                           ; BSR set to: 0
  4469  0026F0  0100               	movlb	0	; () banked
  4470  0026F2  A1B0               	btfss	(___fladd@b+3)& (0+255),0,b
  4471  0026F4  D0CC               	goto	l5571
  4472                           
  4473                           ; BSR set to: 0
  4474  0026F6  0100               	movlb	0	; () banked
  4475  0026F8  A1C0               	btfss	___fladd@grs& (0+255),0,b
  4476  0026FA  D009               	goto	l5525
  4477                           
  4478                           ; BSR set to: 0
  4479  0026FC  0100               	movlb	0	; () banked
  4480  0026FE  90D8               	bcf	status,0,c
  4481  002700  33C0               	rrcf	___fladd@grs& (0+255),f,b
  4482  002702  0100               	movlb	0	; () banked
  4483  002704  51C0               	movf	___fladd@grs& (0+255),w,b
  4484  002706  0901               	iorlw	1
  4485  002708  0100               	movlb	0	; () banked
  4486  00270A  6FC0               	movwf	___fladd@grs& (0+255),b
  4487  00270C  D003               	goto	l5527
  4488  00270E                     l5525:
  4489                           
  4490                           ; BSR set to: 0
  4491  00270E  0100               	movlb	0	; () banked
  4492  002710  90D8               	bcf	status,0,c
  4493  002712  33C0               	rrcf	___fladd@grs& (0+255),f,b
  4494  002714                     l5527:
  4495                           
  4496                           ; BSR set to: 0
  4497  002714  0100               	movlb	0	; () banked
  4498  002716  A1AD               	btfss	___fladd@b& (0+255),0,b
  4499  002718  D002               	goto	l5531
  4500                           
  4501                           ; BSR set to: 0
  4502  00271A  0100               	movlb	0	; () banked
  4503  00271C  8FC0               	bsf	___fladd@grs& (0+255),7,b
  4504  00271E                     l5531:
  4505                           
  4506                           ; BSR set to: 0
  4507  00271E  0100               	movlb	0	; () banked
  4508  002720  35B0               	rlcf	(___fladd@b+3)& (0+255),w,b
  4509  002722  33B0               	rrcf	(___fladd@b+3)& (0+255),f,b
  4510  002724  33AF               	rrcf	(___fladd@b+2)& (0+255),f,b
  4511  002726  33AE               	rrcf	(___fladd@b+1)& (0+255),f,b
  4512  002728  33AD               	rrcf	___fladd@b& (0+255),f,b
  4513                           
  4514                           ; BSR set to: 0
  4515  00272A  0100               	movlb	0	; () banked
  4516  00272C  2BBF               	incf	___fladd@bexp& (0+255),f,b
  4517                           
  4518                           ; BSR set to: 0
  4519  00272E  D0AF               	goto	l5571
  4520  002730                     l5535:
  4521                           
  4522                           ; BSR set to: 0
  4523  002730  0100               	movlb	0	; () banked
  4524  002732  51B1               	movf	___fladd@a& (0+255),w,b
  4525  002734  0100               	movlb	0	; () banked
  4526  002736  5DAD               	subwf	___fladd@b& (0+255),w,b
  4527  002738  0100               	movlb	0	; () banked
  4528  00273A  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  4529  00273C  0100               	movlb	0	; () banked
  4530  00273E  59AE               	subwfb	(___fladd@b+1)& (0+255),w,b
  4531  002740  0100               	movlb	0	; () banked
  4532  002742  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  4533  002744  0100               	movlb	0	; () banked
  4534  002746  59AF               	subwfb	(___fladd@b+2)& (0+255),w,b
  4535  002748  0100               	movlb	0	; () banked
  4536  00274A  51B0               	movf	(___fladd@b+3)& (0+255),w,b
  4537  00274C  0A80               	xorlw	128
  4538  00274E  0100               	movlb	0	; () banked
  4539  002750  6FB5               	movwf	??___fladd& (0+255),b
  4540  002752  0100               	movlb	0	; () banked
  4541  002754  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  4542  002756  0A80               	xorlw	128
  4543  002758  0100               	movlb	0	; () banked
  4544  00275A  59B5               	subwfb	??___fladd& (0+255),w,b
  4545  00275C  B0D8               	btfsc	status,0,c
  4546  00275E  D050               	goto	l5545
  4547                           
  4548                           ; BSR set to: 0
  4549  002760  C0AD  F0B5         	movff	___fladd@b,??___fladd
  4550  002764  C0AE  F0B6         	movff	___fladd@b+1,??___fladd+1
  4551  002768  C0AF  F0B7         	movff	___fladd@b+2,??___fladd+2
  4552  00276C  C0B0  F0B8         	movff	___fladd@b+3,??___fladd+3
  4553  002770  0100               	movlb	0	; () banked
  4554  002772  1FB5               	comf	??___fladd& (0+255),f,b
  4555  002774  1FB6               	comf	(??___fladd+1)& (0+255),f,b
  4556  002776  1FB7               	comf	(??___fladd+2)& (0+255),f,b
  4557  002778  1FB8               	comf	(??___fladd+3)& (0+255),f,b
  4558  00277A  2BB5               	incf	??___fladd& (0+255),f,b
  4559  00277C  0E00               	movlw	0
  4560  00277E  23B6               	addwfc	(??___fladd+1)& (0+255),f,b
  4561  002780  23B7               	addwfc	(??___fladd+2)& (0+255),f,b
  4562  002782  23B8               	addwfc	(??___fladd+3)& (0+255),f,b
  4563  002784  0100               	movlb	0	; () banked
  4564  002786  51B1               	movf	___fladd@a& (0+255),w,b
  4565  002788  0100               	movlb	0	; () banked
  4566  00278A  25B5               	addwf	??___fladd& (0+255),w,b
  4567  00278C  0100               	movlb	0	; () banked
  4568  00278E  6FB9               	movwf	(??___fladd+4)& (0+255),b
  4569  002790  0100               	movlb	0	; () banked
  4570  002792  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  4571  002794  0100               	movlb	0	; () banked
  4572  002796  21B6               	addwfc	(??___fladd+1)& (0+255),w,b
  4573  002798  0100               	movlb	0	; () banked
  4574  00279A  6FBA               	movwf	(??___fladd+5)& (0+255),b
  4575  00279C  0100               	movlb	0	; () banked
  4576  00279E  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  4577  0027A0  0100               	movlb	0	; () banked
  4578  0027A2  21B7               	addwfc	(??___fladd+2)& (0+255),w,b
  4579  0027A4  0100               	movlb	0	; () banked
  4580  0027A6  6FBB               	movwf	(??___fladd+6)& (0+255),b
  4581  0027A8  0100               	movlb	0	; () banked
  4582  0027AA  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  4583  0027AC  0100               	movlb	0	; () banked
  4584  0027AE  21B8               	addwfc	(??___fladd+3)& (0+255),w,b
  4585  0027B0  0100               	movlb	0	; () banked
  4586  0027B2  6FBC               	movwf	(??___fladd+7)& (0+255),b
  4587  0027B4  0EFF               	movlw	255
  4588  0027B6  0100               	movlb	0	; () banked
  4589  0027B8  25B9               	addwf	(??___fladd+4)& (0+255),w,b
  4590  0027BA  0100               	movlb	0	; () banked
  4591  0027BC  6FAD               	movwf	___fladd@b& (0+255),b
  4592  0027BE  0EFF               	movlw	255
  4593  0027C0  0100               	movlb	0	; () banked
  4594  0027C2  21BA               	addwfc	(??___fladd+5)& (0+255),w,b
  4595  0027C4  0100               	movlb	0	; () banked
  4596  0027C6  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  4597  0027C8  0EFF               	movlw	255
  4598  0027CA  0100               	movlb	0	; () banked
  4599  0027CC  21BB               	addwfc	(??___fladd+6)& (0+255),w,b
  4600  0027CE  0100               	movlb	0	; () banked
  4601  0027D0  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  4602  0027D2  0EFF               	movlw	255
  4603  0027D4  0100               	movlb	0	; () banked
  4604  0027D6  21BC               	addwfc	(??___fladd+7)& (0+255),w,b
  4605  0027D8  0100               	movlb	0	; () banked
  4606  0027DA  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  4607  0027DC  0E80               	movlw	128
  4608  0027DE  0100               	movlb	0	; () banked
  4609  0027E0  1BBD               	xorwf	___fladd@signs& (0+255),f,b
  4610                           
  4611                           ; BSR set to: 0
  4612  0027E2  0100               	movlb	0	; () banked
  4613  0027E4  6DC0               	negf	___fladd@grs& (0+255),b
  4614                           
  4615                           ; BSR set to: 0
  4616  0027E6  0100               	movlb	0	; () banked
  4617  0027E8  51C0               	movf	___fladd@grs& (0+255),w,b
  4618  0027EA  0100               	movlb	0	; () banked
  4619  0027EC  A4D8               	btfss	status,2,c
  4620  0027EE  D018               	goto	l1246
  4621                           
  4622                           ; BSR set to: 0
  4623  0027F0  0E01               	movlw	1
  4624  0027F2  0100               	movlb	0	; () banked
  4625  0027F4  27AD               	addwf	___fladd@b& (0+255),f,b
  4626  0027F6  0E00               	movlw	0
  4627  0027F8  23AE               	addwfc	(___fladd@b+1)& (0+255),f,b
  4628  0027FA  23AF               	addwfc	(___fladd@b+2)& (0+255),f,b
  4629  0027FC  23B0               	addwfc	(___fladd@b+3)& (0+255),f,b
  4630                           
  4631                           ; BSR set to: 0
  4632  0027FE  D010               	goto	l1246
  4633  002800                     l5545:
  4634                           
  4635                           ; BSR set to: 0
  4636  002800  0100               	movlb	0	; () banked
  4637  002802  51B1               	movf	___fladd@a& (0+255),w,b
  4638  002804  0100               	movlb	0	; () banked
  4639  002806  5FAD               	subwf	___fladd@b& (0+255),f,b
  4640  002808  0100               	movlb	0	; () banked
  4641  00280A  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  4642  00280C  0100               	movlb	0	; () banked
  4643  00280E  5BAE               	subwfb	(___fladd@b+1)& (0+255),f,b
  4644  002810  0100               	movlb	0	; () banked
  4645  002812  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  4646  002814  0100               	movlb	0	; () banked
  4647  002816  5BAF               	subwfb	(___fladd@b+2)& (0+255),f,b
  4648  002818  0100               	movlb	0	; () banked
  4649  00281A  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  4650  00281C  0100               	movlb	0	; () banked
  4651  00281E  5BB0               	subwfb	(___fladd@b+3)& (0+255),f,b
  4652  002820                     l1246:
  4653                           
  4654                           ; BSR set to: 0
  4655  002820  0100               	movlb	0	; () banked
  4656  002822  51AD               	movf	___fladd@b& (0+255),w,b
  4657  002824  0100               	movlb	0	; () banked
  4658  002826  11AE               	iorwf	(___fladd@b+1)& (0+255),w,b
  4659  002828  0100               	movlb	0	; () banked
  4660  00282A  11AF               	iorwf	(___fladd@b+2)& (0+255),w,b
  4661  00282C  0100               	movlb	0	; () banked
  4662  00282E  11B0               	iorwf	(___fladd@b+3)& (0+255),w,b
  4663  002830  A4D8               	btfss	status,2,c
  4664  002832  D02A               	goto	l5569
  4665                           
  4666                           ; BSR set to: 0
  4667  002834  0100               	movlb	0	; () banked
  4668  002836  51C0               	movf	___fladd@grs& (0+255),w,b
  4669  002838  0100               	movlb	0	; () banked
  4670  00283A  A4D8               	btfss	status,2,c
  4671  00283C  D025               	goto	l5569
  4672                           
  4673                           ; BSR set to: 0
  4674  00283E  0E00               	movlw	0
  4675  002840  0100               	movlb	0	; () banked
  4676  002842  6FAD               	movwf	?___fladd& (0+255),b
  4677  002844  0E00               	movlw	0
  4678  002846  6FAE               	movwf	(?___fladd+1)& (0+255),b
  4679  002848  0E00               	movlw	0
  4680  00284A  6FAF               	movwf	(?___fladd+2)& (0+255),b
  4681  00284C  0E00               	movlw	0
  4682  00284E  6FB0               	movwf	(?___fladd+3)& (0+255),b
  4683                           
  4684                           ; BSR set to: 0
  4685  002850  0012               	return	
  4686  002852                     l5553:
  4687                           
  4688                           ; BSR set to: 0
  4689  002852  0100               	movlb	0	; () banked
  4690  002854  90D8               	bcf	status,0,c
  4691  002856  37AD               	rlcf	___fladd@b& (0+255),f,b
  4692  002858  37AE               	rlcf	(___fladd@b+1)& (0+255),f,b
  4693  00285A  37AF               	rlcf	(___fladd@b+2)& (0+255),f,b
  4694  00285C  37B0               	rlcf	(___fladd@b+3)& (0+255),f,b
  4695                           
  4696                           ; BSR set to: 0
  4697  00285E  0100               	movlb	0	; () banked
  4698  002860  AFC0               	btfss	___fladd@grs& (0+255),7,b
  4699  002862  D002               	goto	l5559
  4700                           
  4701                           ; BSR set to: 0
  4702  002864  0100               	movlb	0	; () banked
  4703  002866  81AD               	bsf	___fladd@b& (0+255),0,b
  4704  002868                     l5559:
  4705                           
  4706                           ; BSR set to: 0
  4707  002868  0100               	movlb	0	; () banked
  4708  00286A  A1C0               	btfss	___fladd@grs& (0+255),0,b
  4709  00286C  D003               	goto	l5563
  4710                           
  4711                           ; BSR set to: 0
  4712  00286E  80D8               	bsf	status,0,c
  4713  002870  0100               	movlb	0	; () banked
  4714  002872  D002               	goto	L5
  4715  002874                     l5563:
  4716                           
  4717                           ; BSR set to: 0
  4718  002874  0100               	movlb	0	; () banked
  4719  002876  90D8               	bcf	status,0,c
  4720  002878                     L5:
  4721  002878  37C0               	rlcf	___fladd@grs& (0+255),f,b
  4722                           
  4723                           ; BSR set to: 0
  4724                           
  4725                           ; BSR set to: 0
  4726  00287A  0100               	movlb	0	; () banked
  4727  00287C  51BF               	movf	___fladd@bexp& (0+255),w,b
  4728  00287E  0100               	movlb	0	; () banked
  4729  002880  B4D8               	btfsc	status,2,c
  4730  002882  D002               	goto	l5569
  4731                           
  4732                           ; BSR set to: 0
  4733  002884  0100               	movlb	0	; () banked
  4734  002886  07BF               	decf	___fladd@bexp& (0+255),f,b
  4735  002888                     l5569:
  4736                           
  4737                           ; BSR set to: 0
  4738  002888  0100               	movlb	0	; () banked
  4739  00288A  AFAF               	btfss	(___fladd@b+2)& (0+255),7,b
  4740  00288C  D7E2               	goto	l5553
  4741  00288E                     l5571:
  4742                           
  4743                           ; BSR set to: 0
  4744  00288E  0E00               	movlw	0
  4745  002890  0100               	movlb	0	; () banked
  4746  002892  6FBE               	movwf	___fladd@aexp& (0+255),b
  4747                           
  4748                           ; BSR set to: 0
  4749  002894  0100               	movlb	0	; () banked
  4750  002896  AFC0               	btfss	___fladd@grs& (0+255),7,b
  4751  002898  D00D               	goto	l1255
  4752                           
  4753                           ; BSR set to: 0
  4754  00289A  C0C0  F0B5         	movff	___fladd@grs,??___fladd
  4755  00289E  0E7F               	movlw	127
  4756  0028A0  0100               	movlb	0	; () banked
  4757  0028A2  17B5               	andwf	??___fladd& (0+255),f,b
  4758  0028A4  A4D8               	btfss	status,2,c
  4759  0028A6  D003               	goto	l5579
  4760                           
  4761                           ; BSR set to: 0
  4762                           
  4763                           ; BSR set to: 0
  4764  0028A8  0100               	movlb	0	; () banked
  4765  0028AA  A1AD               	btfss	___fladd@b& (0+255),0,b
  4766  0028AC  D003               	goto	l1255
  4767  0028AE                     l5579:
  4768                           
  4769                           ; BSR set to: 0
  4770  0028AE  0E01               	movlw	1
  4771  0028B0  0100               	movlb	0	; () banked
  4772  0028B2  6FBE               	movwf	___fladd@aexp& (0+255),b
  4773  0028B4                     l1255:
  4774                           
  4775                           ; BSR set to: 0
  4776  0028B4  0100               	movlb	0	; () banked
  4777  0028B6  51BE               	movf	___fladd@aexp& (0+255),w,b
  4778  0028B8  0100               	movlb	0	; () banked
  4779  0028BA  B4D8               	btfsc	status,2,c
  4780  0028BC  D026               	goto	l5589
  4781                           
  4782                           ; BSR set to: 0
  4783  0028BE  0E01               	movlw	1
  4784  0028C0  0100               	movlb	0	; () banked
  4785  0028C2  27AD               	addwf	___fladd@b& (0+255),f,b
  4786  0028C4  0E00               	movlw	0
  4787  0028C6  23AE               	addwfc	(___fladd@b+1)& (0+255),f,b
  4788  0028C8  23AF               	addwfc	(___fladd@b+2)& (0+255),f,b
  4789  0028CA  23B0               	addwfc	(___fladd@b+3)& (0+255),f,b
  4790                           
  4791                           ; BSR set to: 0
  4792  0028CC  0100               	movlb	0	; () banked
  4793  0028CE  A1B0               	btfss	(___fladd@b+3)& (0+255),0,b
  4794  0028D0  D01C               	goto	l5589
  4795                           
  4796                           ; BSR set to: 0
  4797  0028D2  C0AD  F0B5         	movff	___fladd@b,??___fladd
  4798  0028D6  C0AE  F0B6         	movff	___fladd@b+1,??___fladd+1
  4799  0028DA  C0AF  F0B7         	movff	___fladd@b+2,??___fladd+2
  4800  0028DE  C0B0  F0B8         	movff	___fladd@b+3,??___fladd+3
  4801  0028E2  0100               	movlb	0	; () banked
  4802  0028E4  35B8               	rlcf	(??___fladd+3)& (0+255),w,b
  4803  0028E6  33B8               	rrcf	(??___fladd+3)& (0+255),f,b
  4804  0028E8  33B7               	rrcf	(??___fladd+2)& (0+255),f,b
  4805  0028EA  33B6               	rrcf	(??___fladd+1)& (0+255),f,b
  4806  0028EC  33B5               	rrcf	??___fladd& (0+255),f,b
  4807  0028EE  C0B5  F0AD         	movff	??___fladd,___fladd@b
  4808  0028F2  C0B6  F0AE         	movff	??___fladd+1,___fladd@b+1
  4809  0028F6  C0B7  F0AF         	movff	??___fladd+2,___fladd@b+2
  4810  0028FA  C0B8  F0B0         	movff	??___fladd+3,___fladd@b+3
  4811  0028FE  0100               	movlb	0	; () banked
  4812  002900  29BF               	incf	___fladd@bexp& (0+255),w,b
  4813  002902  B4D8               	btfsc	status,2,c
  4814  002904  D002               	goto	l5589
  4815                           
  4816                           ; BSR set to: 0
  4817  002906  0100               	movlb	0	; () banked
  4818  002908  2BBF               	incf	___fladd@bexp& (0+255),f,b
  4819  00290A                     l5589:
  4820                           
  4821                           ; BSR set to: 0
  4822  00290A  0100               	movlb	0	; () banked
  4823  00290C  29BF               	incf	___fladd@bexp& (0+255),w,b
  4824  00290E  B4D8               	btfsc	status,2,c
  4825  002910  D005               	goto	l5593
  4826                           
  4827                           ; BSR set to: 0
  4828  002912  0100               	movlb	0	; () banked
  4829  002914  51BF               	movf	___fladd@bexp& (0+255),w,b
  4830  002916  0100               	movlb	0	; () banked
  4831  002918  A4D8               	btfss	status,2,c
  4832  00291A  D011               	goto	l5597
  4833  00291C                     l5593:
  4834                           
  4835                           ; BSR set to: 0
  4836  00291C  0E00               	movlw	0
  4837  00291E  0100               	movlb	0	; () banked
  4838  002920  6FAD               	movwf	___fladd@b& (0+255),b
  4839  002922  0E00               	movlw	0
  4840  002924  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  4841  002926  0E00               	movlw	0
  4842  002928  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  4843  00292A  0E00               	movlw	0
  4844  00292C  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  4845  00292E  0100               	movlb	0	; () banked
  4846  002930  51BF               	movf	___fladd@bexp& (0+255),w,b
  4847  002932  0100               	movlb	0	; () banked
  4848  002934  A4D8               	btfss	status,2,c
  4849  002936  D003               	goto	l5597
  4850                           
  4851                           ; BSR set to: 0
  4852  002938  0E00               	movlw	0
  4853  00293A  0100               	movlb	0	; () banked
  4854  00293C  6FBD               	movwf	___fladd@signs& (0+255),b
  4855  00293E                     l5597:
  4856                           
  4857                           ; BSR set to: 0
  4858  00293E  0100               	movlb	0	; () banked
  4859  002940  A1BF               	btfss	___fladd@bexp& (0+255),0,b
  4860  002942  D003               	goto	l5601
  4861                           
  4862                           ; BSR set to: 0
  4863  002944  0100               	movlb	0	; () banked
  4864  002946  8FAF               	bsf	(___fladd@b+2)& (0+255),7,b
  4865  002948  D002               	goto	l5603
  4866  00294A                     l5601:
  4867                           
  4868                           ; BSR set to: 0
  4869  00294A  0100               	movlb	0	; () banked
  4870  00294C  9FAF               	bcf	(___fladd@b+2)& (0+255),7,b
  4871  00294E                     l5603:
  4872                           
  4873                           ; BSR set to: 0
  4874  00294E  0100               	movlb	0	; () banked
  4875  002950  90D8               	bcf	status,0,c
  4876  002952  31BF               	rrcf	___fladd@bexp& (0+255),w,b
  4877  002954  0100               	movlb	0	; () banked
  4878  002956  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  4879                           
  4880                           ; BSR set to: 0
  4881  002958  0100               	movlb	0	; () banked
  4882  00295A  AFBD               	btfss	___fladd@signs& (0+255),7,b
  4883  00295C  D002               	goto	l5609
  4884                           
  4885                           ; BSR set to: 0
  4886  00295E  0100               	movlb	0	; () banked
  4887  002960  8FB0               	bsf	(___fladd@b+3)& (0+255),7,b
  4888  002962                     l5609:
  4889                           
  4890                           ; BSR set to: 0
  4891  002962  C0AD  F0AD         	movff	___fladd@b,?___fladd
  4892  002966  C0AE  F0AE         	movff	___fladd@b+1,?___fladd+1
  4893  00296A  C0AF  F0AF         	movff	___fladd@b+2,?___fladd+2
  4894  00296E  C0B0  F0B0         	movff	___fladd@b+3,?___fladd+3
  4895  002972  0012               	return	
  4896  002974                     __end_of___fladd:
  4897                           	opt stack 0
  4898                           tblptru	equ	0xFF8
  4899                           tblptrh	equ	0xFF7
  4900                           tblptrl	equ	0xFF6
  4901                           tablat	equ	0xFF5
  4902                           prodh	equ	0xFF4
  4903                           prodl	equ	0xFF3
  4904                           postinc0	equ	0xFEE
  4905                           wreg	equ	0xFE8
  4906                           postinc2	equ	0xFDE
  4907                           postdec2	equ	0xFDD
  4908                           status	equ	0xFD8
  4909                           
  4910 ;; *************** function ___flge *****************
  4911 ;; Defined at:
  4912 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  4913 ;; Parameters:    Size  Location     Type
  4914 ;;  ff1             4   81[BANK0 ] unsigned char 
  4915 ;;  ff2             4   85[BANK0 ] unsigned char 
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;		None
  4918 ;; Return value:  Size  Location     Type
  4919 ;;		None               void
  4920 ;; Registers used:
  4921 ;;		wreg, status,2, status,0
  4922 ;; Tracked objects:
  4923 ;;		On entry : 0/0
  4924 ;;		On exit  : 0/0
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4927 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4929 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4930 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4931 ;;Total ram usage:       12 bytes
  4932 ;; Hardware stack levels used:    1
  4933 ;; Hardware stack levels required when called:    4
  4934 ;; This function calls:
  4935 ;;		Nothing
  4936 ;; This function is called by:
  4937 ;;		_parallelo
  4938 ;;		_asin
  4939 ;;		_atan
  4940 ;; This function uses a non-reentrant model
  4941 ;;
  4942                           
  4943                           	psect	text11
  4944  0044C2                     __ptext11:
  4945                           	opt stack 0
  4946  0044C2                     ___flge:
  4947                           	opt stack 22
  4948                           
  4949                           ; BSR set to: 0
  4950                           ;incstack = 0
  4951  0044C2  0E00               	movlw	0
  4952  0044C4  0100               	movlb	0	; () banked
  4953  0044C6  15B1               	andwf	___flge@ff1& (0+255),w,b
  4954  0044C8  0100               	movlb	0	; () banked
  4955  0044CA  6FB9               	movwf	??___flge& (0+255),b
  4956  0044CC  0E00               	movlw	0
  4957  0044CE  0100               	movlb	0	; () banked
  4958  0044D0  15B2               	andwf	(___flge@ff1+1)& (0+255),w,b
  4959  0044D2  0100               	movlb	0	; () banked
  4960  0044D4  6FBA               	movwf	(??___flge+1)& (0+255),b
  4961  0044D6  0E80               	movlw	128
  4962  0044D8  0100               	movlb	0	; () banked
  4963  0044DA  15B3               	andwf	(___flge@ff1+2)& (0+255),w,b
  4964  0044DC  0100               	movlb	0	; () banked
  4965  0044DE  6FBB               	movwf	(??___flge+2)& (0+255),b
  4966  0044E0  0E7F               	movlw	127
  4967  0044E2  0100               	movlb	0	; () banked
  4968  0044E4  15B4               	andwf	(___flge@ff1+3)& (0+255),w,b
  4969  0044E6  0100               	movlb	0	; () banked
  4970  0044E8  6FBC               	movwf	(??___flge+3)& (0+255),b
  4971  0044EA  0100               	movlb	0	; () banked
  4972  0044EC  51B9               	movf	??___flge& (0+255),w,b
  4973  0044EE  0100               	movlb	0	; () banked
  4974  0044F0  11BA               	iorwf	(??___flge+1)& (0+255),w,b
  4975  0044F2  0100               	movlb	0	; () banked
  4976  0044F4  11BB               	iorwf	(??___flge+2)& (0+255),w,b
  4977  0044F6  0100               	movlb	0	; () banked
  4978  0044F8  11BC               	iorwf	(??___flge+3)& (0+255),w,b
  4979  0044FA  A4D8               	btfss	status,2,c
  4980  0044FC  D009               	goto	l5903
  4981                           
  4982                           ; BSR set to: 0
  4983  0044FE  0E00               	movlw	0
  4984  004500  0100               	movlb	0	; () banked
  4985  004502  6FB1               	movwf	___flge@ff1& (0+255),b
  4986  004504  0E00               	movlw	0
  4987  004506  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  4988  004508  0E00               	movlw	0
  4989  00450A  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  4990  00450C  0E00               	movlw	0
  4991  00450E  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  4992  004510                     l5903:
  4993                           
  4994                           ; BSR set to: 0
  4995  004510  0E00               	movlw	0
  4996  004512  0100               	movlb	0	; () banked
  4997  004514  15B5               	andwf	___flge@ff2& (0+255),w,b
  4998  004516  0100               	movlb	0	; () banked
  4999  004518  6FB9               	movwf	??___flge& (0+255),b
  5000  00451A  0E00               	movlw	0
  5001  00451C  0100               	movlb	0	; () banked
  5002  00451E  15B6               	andwf	(___flge@ff2+1)& (0+255),w,b
  5003  004520  0100               	movlb	0	; () banked
  5004  004522  6FBA               	movwf	(??___flge+1)& (0+255),b
  5005  004524  0E80               	movlw	128
  5006  004526  0100               	movlb	0	; () banked
  5007  004528  15B7               	andwf	(___flge@ff2+2)& (0+255),w,b
  5008  00452A  0100               	movlb	0	; () banked
  5009  00452C  6FBB               	movwf	(??___flge+2)& (0+255),b
  5010  00452E  0E7F               	movlw	127
  5011  004530  0100               	movlb	0	; () banked
  5012  004532  15B8               	andwf	(___flge@ff2+3)& (0+255),w,b
  5013  004534  0100               	movlb	0	; () banked
  5014  004536  6FBC               	movwf	(??___flge+3)& (0+255),b
  5015  004538  0100               	movlb	0	; () banked
  5016  00453A  51B9               	movf	??___flge& (0+255),w,b
  5017  00453C  0100               	movlb	0	; () banked
  5018  00453E  11BA               	iorwf	(??___flge+1)& (0+255),w,b
  5019  004540  0100               	movlb	0	; () banked
  5020  004542  11BB               	iorwf	(??___flge+2)& (0+255),w,b
  5021  004544  0100               	movlb	0	; () banked
  5022  004546  11BC               	iorwf	(??___flge+3)& (0+255),w,b
  5023  004548  A4D8               	btfss	status,2,c
  5024  00454A  D009               	goto	l5907
  5025                           
  5026                           ; BSR set to: 0
  5027  00454C  0E00               	movlw	0
  5028  00454E  0100               	movlb	0	; () banked
  5029  004550  6FB5               	movwf	___flge@ff2& (0+255),b
  5030  004552  0E00               	movlw	0
  5031  004554  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  5032  004556  0E00               	movlw	0
  5033  004558  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  5034  00455A  0E00               	movlw	0
  5035  00455C  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  5036  00455E                     l5907:
  5037                           
  5038                           ; BSR set to: 0
  5039  00455E  0100               	movlb	0	; () banked
  5040  004560  AFB4               	btfss	(___flge@ff1+3)& (0+255),7,b
  5041  004562  D026               	goto	l5911
  5042                           
  5043                           ; BSR set to: 0
  5044  004564  C0B1  F0B9         	movff	___flge@ff1,??___flge
  5045  004568  C0B2  F0BA         	movff	___flge@ff1+1,??___flge+1
  5046  00456C  C0B3  F0BB         	movff	___flge@ff1+2,??___flge+2
  5047  004570  C0B4  F0BC         	movff	___flge@ff1+3,??___flge+3
  5048  004574  0100               	movlb	0	; () banked
  5049  004576  1FB9               	comf	??___flge& (0+255),f,b
  5050  004578  1FBA               	comf	(??___flge+1)& (0+255),f,b
  5051  00457A  1FBB               	comf	(??___flge+2)& (0+255),f,b
  5052  00457C  1FBC               	comf	(??___flge+3)& (0+255),f,b
  5053  00457E  2BB9               	incf	??___flge& (0+255),f,b
  5054  004580  0E00               	movlw	0
  5055  004582  23BA               	addwfc	(??___flge+1)& (0+255),f,b
  5056  004584  23BB               	addwfc	(??___flge+2)& (0+255),f,b
  5057  004586  23BC               	addwfc	(??___flge+3)& (0+255),f,b
  5058  004588  0E00               	movlw	0
  5059  00458A  0100               	movlb	0	; () banked
  5060  00458C  25B9               	addwf	??___flge& (0+255),w,b
  5061  00458E  0100               	movlb	0	; () banked
  5062  004590  6FB1               	movwf	___flge@ff1& (0+255),b
  5063  004592  0E00               	movlw	0
  5064  004594  0100               	movlb	0	; () banked
  5065  004596  21BA               	addwfc	(??___flge+1)& (0+255),w,b
  5066  004598  0100               	movlb	0	; () banked
  5067  00459A  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  5068  00459C  0E00               	movlw	0
  5069  00459E  0100               	movlb	0	; () banked
  5070  0045A0  21BB               	addwfc	(??___flge+2)& (0+255),w,b
  5071  0045A2  0100               	movlb	0	; () banked
  5072  0045A4  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  5073  0045A6  0E80               	movlw	128
  5074  0045A8  0100               	movlb	0	; () banked
  5075  0045AA  21BC               	addwfc	(??___flge+3)& (0+255),w,b
  5076  0045AC  0100               	movlb	0	; () banked
  5077  0045AE  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  5078  0045B0                     l5911:
  5079                           
  5080                           ; BSR set to: 0
  5081  0045B0  0100               	movlb	0	; () banked
  5082  0045B2  AFB8               	btfss	(___flge@ff2+3)& (0+255),7,b
  5083  0045B4  D026               	goto	l992
  5084                           
  5085                           ; BSR set to: 0
  5086  0045B6  C0B5  F0B9         	movff	___flge@ff2,??___flge
  5087  0045BA  C0B6  F0BA         	movff	___flge@ff2+1,??___flge+1
  5088  0045BE  C0B7  F0BB         	movff	___flge@ff2+2,??___flge+2
  5089  0045C2  C0B8  F0BC         	movff	___flge@ff2+3,??___flge+3
  5090  0045C6  0100               	movlb	0	; () banked
  5091  0045C8  1FB9               	comf	??___flge& (0+255),f,b
  5092  0045CA  1FBA               	comf	(??___flge+1)& (0+255),f,b
  5093  0045CC  1FBB               	comf	(??___flge+2)& (0+255),f,b
  5094  0045CE  1FBC               	comf	(??___flge+3)& (0+255),f,b
  5095  0045D0  2BB9               	incf	??___flge& (0+255),f,b
  5096  0045D2  0E00               	movlw	0
  5097  0045D4  23BA               	addwfc	(??___flge+1)& (0+255),f,b
  5098  0045D6  23BB               	addwfc	(??___flge+2)& (0+255),f,b
  5099  0045D8  23BC               	addwfc	(??___flge+3)& (0+255),f,b
  5100  0045DA  0E00               	movlw	0
  5101  0045DC  0100               	movlb	0	; () banked
  5102  0045DE  25B9               	addwf	??___flge& (0+255),w,b
  5103  0045E0  0100               	movlb	0	; () banked
  5104  0045E2  6FB5               	movwf	___flge@ff2& (0+255),b
  5105  0045E4  0E00               	movlw	0
  5106  0045E6  0100               	movlb	0	; () banked
  5107  0045E8  21BA               	addwfc	(??___flge+1)& (0+255),w,b
  5108  0045EA  0100               	movlb	0	; () banked
  5109  0045EC  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  5110  0045EE  0E00               	movlw	0
  5111  0045F0  0100               	movlb	0	; () banked
  5112  0045F2  21BB               	addwfc	(??___flge+2)& (0+255),w,b
  5113  0045F4  0100               	movlb	0	; () banked
  5114  0045F6  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  5115  0045F8  0E80               	movlw	128
  5116  0045FA  0100               	movlb	0	; () banked
  5117  0045FC  21BC               	addwfc	(??___flge+3)& (0+255),w,b
  5118  0045FE  0100               	movlb	0	; () banked
  5119  004600  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  5120  004602                     l992:
  5121                           
  5122                           ; BSR set to: 0
  5123  004602  0E00               	movlw	0
  5124  004604  0100               	movlb	0	; () banked
  5125  004606  1BB1               	xorwf	___flge@ff1& (0+255),f,b
  5126  004608  0E00               	movlw	0
  5127  00460A  1BB2               	xorwf	(___flge@ff1+1)& (0+255),f,b
  5128  00460C  0E00               	movlw	0
  5129  00460E  1BB3               	xorwf	(___flge@ff1+2)& (0+255),f,b
  5130  004610  0E80               	movlw	128
  5131  004612  1BB4               	xorwf	(___flge@ff1+3)& (0+255),f,b
  5132  004614  0E00               	movlw	0
  5133  004616  0100               	movlb	0	; () banked
  5134  004618  1BB5               	xorwf	___flge@ff2& (0+255),f,b
  5135  00461A  0E00               	movlw	0
  5136  00461C  1BB6               	xorwf	(___flge@ff2+1)& (0+255),f,b
  5137  00461E  0E00               	movlw	0
  5138  004620  1BB7               	xorwf	(___flge@ff2+2)& (0+255),f,b
  5139  004622  0E80               	movlw	128
  5140  004624  1BB8               	xorwf	(___flge@ff2+3)& (0+255),f,b
  5141  004626  0100               	movlb	0	; () banked
  5142  004628  51B5               	movf	___flge@ff2& (0+255),w,b
  5143  00462A  0100               	movlb	0	; () banked
  5144  00462C  5DB1               	subwf	___flge@ff1& (0+255),w,b
  5145  00462E  0100               	movlb	0	; () banked
  5146  004630  51B6               	movf	(___flge@ff2+1)& (0+255),w,b
  5147  004632  0100               	movlb	0	; () banked
  5148  004634  59B2               	subwfb	(___flge@ff1+1)& (0+255),w,b
  5149  004636  0100               	movlb	0	; () banked
  5150  004638  51B7               	movf	(___flge@ff2+2)& (0+255),w,b
  5151  00463A  0100               	movlb	0	; () banked
  5152  00463C  59B3               	subwfb	(___flge@ff1+2)& (0+255),w,b
  5153  00463E  0100               	movlb	0	; () banked
  5154  004640  51B8               	movf	(___flge@ff2+3)& (0+255),w,b
  5155  004642  0100               	movlb	0	; () banked
  5156  004644  59B4               	subwfb	(___flge@ff1+3)& (0+255),w,b
  5157  004646  B0D8               	btfsc	status,0,c
  5158  004648  D002               	goto	l5917
  5159                           
  5160                           ; BSR set to: 0
  5161  00464A  90D8               	bcf	status,0,c
  5162  00464C  0012               	return	
  5163  00464E                     l5917:
  5164                           
  5165                           ; BSR set to: 0
  5166  00464E  80D8               	bsf	status,0,c
  5167                           
  5168                           ; BSR set to: 0
  5169  004650  0012               	return	
  5170  004652                     __end_of___flge:
  5171                           	opt stack 0
  5172                           tblptru	equ	0xFF8
  5173                           tblptrh	equ	0xFF7
  5174                           tblptrl	equ	0xFF6
  5175                           tablat	equ	0xFF5
  5176                           prodh	equ	0xFF4
  5177                           prodl	equ	0xFF3
  5178                           postinc0	equ	0xFEE
  5179                           wreg	equ	0xFE8
  5180                           postinc2	equ	0xFDE
  5181                           postdec2	equ	0xFDD
  5182                           status	equ	0xFD8
  5183                           
  5184 ;; *************** function ___fldiv *****************
  5185 ;; Defined at:
  5186 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
  5187 ;; Parameters:    Size  Location     Type
  5188 ;;  b               4   23[BANK0 ] unsigned char 
  5189 ;;  a               4   27[BANK0 ] unsigned char 
  5190 ;; Auto vars:     Size  Location     Type
  5191 ;;  grs             4   42[BANK0 ] unsigned long 
  5192 ;;  rem             4   36[BANK0 ] unsigned long 
  5193 ;;  new_exp         2   40[BANK0 ] int 
  5194 ;;  aexp            1   47[BANK0 ] unsigned char 
  5195 ;;  bexp            1   46[BANK0 ] unsigned char 
  5196 ;;  sign            1   35[BANK0 ] unsigned char 
  5197 ;; Return value:  Size  Location     Type
  5198 ;;                  4   23[BANK0 ] unsigned char 
  5199 ;; Registers used:
  5200 ;;		wreg, status,2, status,0
  5201 ;; Tracked objects:
  5202 ;;		On entry : 0/0
  5203 ;;		On exit  : 0/0
  5204 ;;		Unchanged: 0/0
  5205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5206 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5207 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5208 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5209 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5210 ;;Total ram usage:       25 bytes
  5211 ;; Hardware stack levels used:    1
  5212 ;; Hardware stack levels required when called:    4
  5213 ;; This function calls:
  5214 ;;		Nothing
  5215 ;; This function is called by:
  5216 ;;		_parallelo
  5217 ;;		_asin
  5218 ;;		_atan
  5219 ;; This function uses a non-reentrant model
  5220 ;;
  5221                           
  5222                           	psect	text12
  5223  0031E4                     __ptext12:
  5224                           	opt stack 0
  5225  0031E4                     ___fldiv:
  5226                           	opt stack 22
  5227                           
  5228                           ; BSR set to: 0
  5229                           ;incstack = 0
  5230  0031E4  0100               	movlb	0	; () banked
  5231  0031E6  517A               	movf	(___fldiv@b+3)& (0+255),w,b
  5232  0031E8  0B80               	andlw	128
  5233  0031EA  0100               	movlb	0	; () banked
  5234  0031EC  6F83               	movwf	___fldiv@sign& (0+255),b
  5235  0031EE  0100               	movlb	0	; () banked
  5236  0031F0  517A               	movf	(___fldiv@b+3)& (0+255),w,b
  5237  0031F2  257A               	addwf	(___fldiv@b+3)& (0+255),w,b
  5238  0031F4  0100               	movlb	0	; () banked
  5239  0031F6  6F8E               	movwf	___fldiv@bexp& (0+255),b
  5240                           
  5241                           ; BSR set to: 0
  5242  0031F8  0100               	movlb	0	; () banked
  5243  0031FA  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
  5244  0031FC  D002               	goto	l5757
  5245                           
  5246                           ; BSR set to: 0
  5247  0031FE  0100               	movlb	0	; () banked
  5248  003200  818E               	bsf	___fldiv@bexp& (0+255),0,b
  5249  003202                     l5757:
  5250                           
  5251                           ; BSR set to: 0
  5252  003202  0100               	movlb	0	; () banked
  5253  003204  518E               	movf	___fldiv@bexp& (0+255),w,b
  5254  003206  0100               	movlb	0	; () banked
  5255  003208  B4D8               	btfsc	status,2,c
  5256  00320A  D012               	goto	l5767
  5257                           
  5258                           ; BSR set to: 0
  5259  00320C  0100               	movlb	0	; () banked
  5260  00320E  298E               	incf	___fldiv@bexp& (0+255),w,b
  5261  003210  A4D8               	btfss	status,2,c
  5262  003212  D009               	goto	l5763
  5263                           
  5264                           ; BSR set to: 0
  5265  003214  0E00               	movlw	0
  5266  003216  0100               	movlb	0	; () banked
  5267  003218  6F77               	movwf	___fldiv@b& (0+255),b
  5268  00321A  0E00               	movlw	0
  5269  00321C  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  5270  00321E  0E00               	movlw	0
  5271  003220  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  5272  003222  0E00               	movlw	0
  5273  003224  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  5274  003226                     l5763:
  5275                           
  5276                           ; BSR set to: 0
  5277  003226  0100               	movlb	0	; () banked
  5278  003228  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
  5279                           
  5280                           ; BSR set to: 0
  5281  00322A  0E00               	movlw	0
  5282  00322C  0100               	movlb	0	; () banked
  5283  00322E  D008               	goto	L6
  5284  003230                     l5767:
  5285                           
  5286                           ; BSR set to: 0
  5287  003230  0E00               	movlw	0
  5288  003232  0100               	movlb	0	; () banked
  5289  003234  6F77               	movwf	___fldiv@b& (0+255),b
  5290  003236  0E00               	movlw	0
  5291  003238  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  5292  00323A  0E00               	movlw	0
  5293  00323C  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  5294  00323E  0E00               	movlw	0
  5295  003240                     L6:
  5296  003240  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  5297                           
  5298                           ; BSR set to: 0
  5299                           
  5300                           ; BSR set to: 0
  5301  003242  0100               	movlb	0	; () banked
  5302  003244  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  5303  003246  0B80               	andlw	128
  5304  003248  0100               	movlb	0	; () banked
  5305  00324A  1B83               	xorwf	___fldiv@sign& (0+255),f,b
  5306                           
  5307                           ; BSR set to: 0
  5308  00324C  0100               	movlb	0	; () banked
  5309  00324E  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  5310  003250  257E               	addwf	(___fldiv@a+3)& (0+255),w,b
  5311  003252  0100               	movlb	0	; () banked
  5312  003254  6F8F               	movwf	___fldiv@aexp& (0+255),b
  5313                           
  5314                           ; BSR set to: 0
  5315  003256  0100               	movlb	0	; () banked
  5316  003258  AF7D               	btfss	(___fldiv@a+2)& (0+255),7,b
  5317  00325A  D002               	goto	l5777
  5318                           
  5319                           ; BSR set to: 0
  5320  00325C  0100               	movlb	0	; () banked
  5321  00325E  818F               	bsf	___fldiv@aexp& (0+255),0,b
  5322  003260                     l5777:
  5323                           
  5324                           ; BSR set to: 0
  5325  003260  0100               	movlb	0	; () banked
  5326  003262  518F               	movf	___fldiv@aexp& (0+255),w,b
  5327  003264  0100               	movlb	0	; () banked
  5328  003266  B4D8               	btfsc	status,2,c
  5329  003268  D012               	goto	l5787
  5330                           
  5331                           ; BSR set to: 0
  5332  00326A  0100               	movlb	0	; () banked
  5333  00326C  298F               	incf	___fldiv@aexp& (0+255),w,b
  5334  00326E  A4D8               	btfss	status,2,c
  5335  003270  D009               	goto	l5783
  5336                           
  5337                           ; BSR set to: 0
  5338  003272  0E00               	movlw	0
  5339  003274  0100               	movlb	0	; () banked
  5340  003276  6F7B               	movwf	___fldiv@a& (0+255),b
  5341  003278  0E00               	movlw	0
  5342  00327A  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5343  00327C  0E00               	movlw	0
  5344  00327E  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5345  003280  0E00               	movlw	0
  5346  003282  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5347  003284                     l5783:
  5348                           
  5349                           ; BSR set to: 0
  5350  003284  0100               	movlb	0	; () banked
  5351  003286  8F7D               	bsf	(___fldiv@a+2)& (0+255),7,b
  5352                           
  5353                           ; BSR set to: 0
  5354  003288  0E00               	movlw	0
  5355  00328A  0100               	movlb	0	; () banked
  5356  00328C  D008               	goto	L7
  5357  00328E                     l5787:
  5358                           
  5359                           ; BSR set to: 0
  5360  00328E  0E00               	movlw	0
  5361  003290  0100               	movlb	0	; () banked
  5362  003292  6F7B               	movwf	___fldiv@a& (0+255),b
  5363  003294  0E00               	movlw	0
  5364  003296  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5365  003298  0E00               	movlw	0
  5366  00329A  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5367  00329C  0E00               	movlw	0
  5368  00329E                     L7:
  5369  00329E  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5370                           
  5371                           ; BSR set to: 0
  5372                           
  5373                           ; BSR set to: 0
  5374  0032A0  0100               	movlb	0	; () banked
  5375  0032A2  517B               	movf	___fldiv@a& (0+255),w,b
  5376  0032A4  0100               	movlb	0	; () banked
  5377  0032A6  117C               	iorwf	(___fldiv@a+1)& (0+255),w,b
  5378  0032A8  0100               	movlb	0	; () banked
  5379  0032AA  117D               	iorwf	(___fldiv@a+2)& (0+255),w,b
  5380  0032AC  0100               	movlb	0	; () banked
  5381  0032AE  117E               	iorwf	(___fldiv@a+3)& (0+255),w,b
  5382  0032B0  A4D8               	btfss	status,2,c
  5383  0032B2  D017               	goto	l5799
  5384                           
  5385                           ; BSR set to: 0
  5386  0032B4  0E00               	movlw	0
  5387  0032B6  0100               	movlb	0	; () banked
  5388  0032B8  6F77               	movwf	___fldiv@b& (0+255),b
  5389  0032BA  0E00               	movlw	0
  5390  0032BC  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  5391  0032BE  0E00               	movlw	0
  5392  0032C0  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  5393  0032C2  0E00               	movlw	0
  5394  0032C4  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  5395                           
  5396                           ; BSR set to: 0
  5397  0032C6  0100               	movlb	0	; () banked
  5398  0032C8  0E80               	movlw	128
  5399  0032CA  1379               	iorwf	(___fldiv@b+2)& (0+255),f,b
  5400  0032CC  0E7F               	movlw	127
  5401  0032CE  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
  5402                           
  5403                           ; BSR set to: 0
  5404  0032D0  C077  F077         	movff	___fldiv@b,?___fldiv
  5405  0032D4  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
  5406  0032D8  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
  5407  0032DC  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
  5408                           
  5409                           ; BSR set to: 0
  5410  0032E0  0012               	return	
  5411  0032E2                     l5799:
  5412                           
  5413                           ; BSR set to: 0
  5414  0032E2  0100               	movlb	0	; () banked
  5415  0032E4  518E               	movf	___fldiv@bexp& (0+255),w,b
  5416  0032E6  0100               	movlb	0	; () banked
  5417  0032E8  A4D8               	btfss	status,2,c
  5418  0032EA  D012               	goto	l5807
  5419                           
  5420                           ; BSR set to: 0
  5421  0032EC  0E00               	movlw	0
  5422  0032EE  0100               	movlb	0	; () banked
  5423  0032F0  6F77               	movwf	___fldiv@b& (0+255),b
  5424  0032F2  0E00               	movlw	0
  5425  0032F4  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  5426  0032F6  0E00               	movlw	0
  5427  0032F8  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  5428  0032FA  0E00               	movlw	0
  5429  0032FC  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  5430                           
  5431                           ; BSR set to: 0
  5432  0032FE  C077  F077         	movff	___fldiv@b,?___fldiv
  5433  003302  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
  5434  003306  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
  5435  00330A  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
  5436                           
  5437                           ; BSR set to: 0
  5438  00330E  0012               	return	
  5439  003310                     l5807:
  5440                           
  5441                           ; BSR set to: 0
  5442  003310  0100               	movlb	0	; () banked
  5443  003312  518F               	movf	___fldiv@aexp& (0+255),w,b
  5444  003314  0100               	movlb	0	; () banked
  5445  003316  6F7F               	movwf	??___fldiv& (0+255),b
  5446  003318  6B80               	clrf	(??___fldiv+1)& (0+255),b
  5447  00331A  0100               	movlb	0	; () banked
  5448  00331C  1F7F               	comf	??___fldiv& (0+255),f,b
  5449  00331E  1F80               	comf	(??___fldiv+1)& (0+255),f,b
  5450  003320  4B7F               	infsnz	??___fldiv& (0+255),f,b
  5451  003322  2B80               	incf	(??___fldiv+1)& (0+255),f,b
  5452  003324  0100               	movlb	0	; () banked
  5453  003326  518E               	movf	___fldiv@bexp& (0+255),w,b
  5454  003328  0100               	movlb	0	; () banked
  5455  00332A  6F81               	movwf	(??___fldiv+2)& (0+255),b
  5456  00332C  6B82               	clrf	(??___fldiv+3)& (0+255),b
  5457  00332E  0100               	movlb	0	; () banked
  5458  003330  517F               	movf	??___fldiv& (0+255),w,b
  5459  003332  0100               	movlb	0	; () banked
  5460  003334  2781               	addwf	(??___fldiv+2)& (0+255),f,b
  5461  003336  0100               	movlb	0	; () banked
  5462  003338  5180               	movf	(??___fldiv+1)& (0+255),w,b
  5463  00333A  0100               	movlb	0	; () banked
  5464  00333C  2382               	addwfc	(??___fldiv+3)& (0+255),f,b
  5465  00333E  0E7F               	movlw	127
  5466  003340  0100               	movlb	0	; () banked
  5467  003342  2581               	addwf	(??___fldiv+2)& (0+255),w,b
  5468  003344  0100               	movlb	0	; () banked
  5469  003346  6F88               	movwf	___fldiv@new_exp& (0+255),b
  5470  003348  0E00               	movlw	0
  5471  00334A  0100               	movlb	0	; () banked
  5472  00334C  2182               	addwfc	(??___fldiv+3)& (0+255),w,b
  5473  00334E  0100               	movlb	0	; () banked
  5474  003350  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
  5475                           
  5476                           ; BSR set to: 0
  5477  003352  C077  F084         	movff	___fldiv@b,___fldiv@rem
  5478  003356  C078  F085         	movff	___fldiv@b+1,___fldiv@rem+1
  5479  00335A  C079  F086         	movff	___fldiv@b+2,___fldiv@rem+2
  5480  00335E  C07A  F087         	movff	___fldiv@b+3,___fldiv@rem+3
  5481                           
  5482                           ; BSR set to: 0
  5483  003362  0E00               	movlw	0
  5484  003364  0100               	movlb	0	; () banked
  5485  003366  6F77               	movwf	___fldiv@b& (0+255),b
  5486  003368  0E00               	movlw	0
  5487  00336A  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  5488  00336C  0E00               	movlw	0
  5489  00336E  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  5490  003370  0E00               	movlw	0
  5491  003372  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  5492                           
  5493                           ; BSR set to: 0
  5494  003374  0E00               	movlw	0
  5495  003376  0100               	movlb	0	; () banked
  5496  003378  6F8A               	movwf	___fldiv@grs& (0+255),b
  5497  00337A  0E00               	movlw	0
  5498  00337C  6F8B               	movwf	(___fldiv@grs+1)& (0+255),b
  5499  00337E  0E00               	movlw	0
  5500  003380  6F8C               	movwf	(___fldiv@grs+2)& (0+255),b
  5501  003382  0E00               	movlw	0
  5502  003384  6F8D               	movwf	(___fldiv@grs+3)& (0+255),b
  5503                           
  5504                           ; BSR set to: 0
  5505  003386  0E00               	movlw	0
  5506  003388  0100               	movlb	0	; () banked
  5507  00338A  6F8F               	movwf	___fldiv@aexp& (0+255),b
  5508  00338C  D042               	goto	l1285
  5509  00338E                     l5817:
  5510                           
  5511                           ; BSR set to: 0
  5512  00338E  0100               	movlb	0	; () banked
  5513  003390  518F               	movf	___fldiv@aexp& (0+255),w,b
  5514  003392  0100               	movlb	0	; () banked
  5515  003394  B4D8               	btfsc	status,2,c
  5516  003396  D017               	goto	l5825
  5517                           
  5518                           ; BSR set to: 0
  5519  003398  0100               	movlb	0	; () banked
  5520  00339A  90D8               	bcf	status,0,c
  5521  00339C  3784               	rlcf	___fldiv@rem& (0+255),f,b
  5522  00339E  3785               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  5523  0033A0  3786               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  5524  0033A2  3787               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  5525  0033A4  0100               	movlb	0	; () banked
  5526  0033A6  90D8               	bcf	status,0,c
  5527  0033A8  3777               	rlcf	___fldiv@b& (0+255),f,b
  5528  0033AA  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
  5529  0033AC  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
  5530  0033AE  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
  5531                           
  5532                           ; BSR set to: 0
  5533  0033B0  0100               	movlb	0	; () banked
  5534  0033B2  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
  5535  0033B4  D002               	goto	l1288
  5536                           
  5537                           ; BSR set to: 0
  5538  0033B6  0100               	movlb	0	; () banked
  5539  0033B8  8177               	bsf	___fldiv@b& (0+255),0,b
  5540  0033BA                     l1288:
  5541                           
  5542                           ; BSR set to: 0
  5543  0033BA  0100               	movlb	0	; () banked
  5544  0033BC  90D8               	bcf	status,0,c
  5545  0033BE  378A               	rlcf	___fldiv@grs& (0+255),f,b
  5546  0033C0  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  5547  0033C2  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  5548  0033C4  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  5549  0033C6                     l5825:
  5550                           
  5551                           ; BSR set to: 0
  5552  0033C6  0100               	movlb	0	; () banked
  5553  0033C8  517B               	movf	___fldiv@a& (0+255),w,b
  5554  0033CA  0100               	movlb	0	; () banked
  5555  0033CC  5D84               	subwf	___fldiv@rem& (0+255),w,b
  5556  0033CE  0100               	movlb	0	; () banked
  5557  0033D0  517C               	movf	(___fldiv@a+1)& (0+255),w,b
  5558  0033D2  0100               	movlb	0	; () banked
  5559  0033D4  5985               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  5560  0033D6  0100               	movlb	0	; () banked
  5561  0033D8  517D               	movf	(___fldiv@a+2)& (0+255),w,b
  5562  0033DA  0100               	movlb	0	; () banked
  5563  0033DC  5986               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  5564  0033DE  0100               	movlb	0	; () banked
  5565  0033E0  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  5566  0033E2  0100               	movlb	0	; () banked
  5567  0033E4  5987               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  5568  0033E6  A0D8               	btfss	status,0,c
  5569  0033E8  D012               	goto	l5831
  5570                           
  5571                           ; BSR set to: 0
  5572  0033EA  0100               	movlb	0	; () banked
  5573  0033EC  8D8D               	bsf	(___fldiv@grs+3)& (0+255),6,b
  5574                           
  5575                           ; BSR set to: 0
  5576  0033EE  0100               	movlb	0	; () banked
  5577  0033F0  517B               	movf	___fldiv@a& (0+255),w,b
  5578  0033F2  0100               	movlb	0	; () banked
  5579  0033F4  5F84               	subwf	___fldiv@rem& (0+255),f,b
  5580  0033F6  0100               	movlb	0	; () banked
  5581  0033F8  517C               	movf	(___fldiv@a+1)& (0+255),w,b
  5582  0033FA  0100               	movlb	0	; () banked
  5583  0033FC  5B85               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  5584  0033FE  0100               	movlb	0	; () banked
  5585  003400  517D               	movf	(___fldiv@a+2)& (0+255),w,b
  5586  003402  0100               	movlb	0	; () banked
  5587  003404  5B86               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  5588  003406  0100               	movlb	0	; () banked
  5589  003408  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  5590  00340A  0100               	movlb	0	; () banked
  5591  00340C  5B87               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  5592  00340E                     l5831:
  5593                           
  5594                           ; BSR set to: 0
  5595  00340E  0100               	movlb	0	; () banked
  5596  003410  2B8F               	incf	___fldiv@aexp& (0+255),f,b
  5597  003412                     l1285:
  5598                           
  5599                           ; BSR set to: 0
  5600  003412  0E19               	movlw	25
  5601  003414  0100               	movlb	0	; () banked
  5602  003416  658F               	cpfsgt	___fldiv@aexp& (0+255),b
  5603  003418  D7BA               	goto	l5817
  5604                           
  5605                           ; BSR set to: 0
  5606                           
  5607                           ; BSR set to: 0
  5608  00341A  0100               	movlb	0	; () banked
  5609  00341C  5184               	movf	___fldiv@rem& (0+255),w,b
  5610  00341E  0100               	movlb	0	; () banked
  5611  003420  1185               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  5612  003422  0100               	movlb	0	; () banked
  5613  003424  1186               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  5614  003426  0100               	movlb	0	; () banked
  5615  003428  1187               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  5616  00342A  B4D8               	btfsc	status,2,c
  5617  00342C  D018               	goto	l5843
  5618                           
  5619                           ; BSR set to: 0
  5620  00342E  0100               	movlb	0	; () banked
  5621  003430  818A               	bsf	___fldiv@grs& (0+255),0,b
  5622                           
  5623                           ; BSR set to: 0
  5624  003432  D015               	goto	l5843
  5625  003434                     l5837:
  5626                           
  5627                           ; BSR set to: 0
  5628  003434  0100               	movlb	0	; () banked
  5629  003436  90D8               	bcf	status,0,c
  5630  003438  3777               	rlcf	___fldiv@b& (0+255),f,b
  5631  00343A  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
  5632  00343C  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
  5633  00343E  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
  5634                           
  5635                           ; BSR set to: 0
  5636  003440  0100               	movlb	0	; () banked
  5637  003442  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
  5638  003444  D002               	goto	l1294
  5639                           
  5640                           ; BSR set to: 0
  5641  003446  0100               	movlb	0	; () banked
  5642  003448  8177               	bsf	___fldiv@b& (0+255),0,b
  5643  00344A                     l1294:
  5644                           
  5645                           ; BSR set to: 0
  5646  00344A  0100               	movlb	0	; () banked
  5647  00344C  90D8               	bcf	status,0,c
  5648  00344E  378A               	rlcf	___fldiv@grs& (0+255),f,b
  5649  003450  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  5650  003452  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  5651  003454  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  5652  003456  0100               	movlb	0	; () banked
  5653  003458  0788               	decf	___fldiv@new_exp& (0+255),f,b
  5654  00345A  A0D8               	btfss	status,0,c
  5655  00345C  0789               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  5656  00345E                     l5843:
  5657                           
  5658                           ; BSR set to: 0
  5659  00345E  0100               	movlb	0	; () banked
  5660  003460  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
  5661  003462  D7E8               	goto	l5837
  5662                           
  5663                           ; BSR set to: 0
  5664                           
  5665                           ; BSR set to: 0
  5666  003464  0E00               	movlw	0
  5667  003466  0100               	movlb	0	; () banked
  5668  003468  6F8F               	movwf	___fldiv@aexp& (0+255),b
  5669                           
  5670                           ; BSR set to: 0
  5671  00346A  0100               	movlb	0	; () banked
  5672  00346C  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
  5673  00346E  D024               	goto	l1296
  5674                           
  5675                           ; BSR set to: 0
  5676  003470  0EFF               	movlw	255
  5677  003472  0100               	movlb	0	; () banked
  5678  003474  158A               	andwf	___fldiv@grs& (0+255),w,b
  5679  003476  0100               	movlb	0	; () banked
  5680  003478  6F7F               	movwf	??___fldiv& (0+255),b
  5681  00347A  0EFF               	movlw	255
  5682  00347C  0100               	movlb	0	; () banked
  5683  00347E  158B               	andwf	(___fldiv@grs+1)& (0+255),w,b
  5684  003480  0100               	movlb	0	; () banked
  5685  003482  6F80               	movwf	(??___fldiv+1)& (0+255),b
  5686  003484  0EFF               	movlw	255
  5687  003486  0100               	movlb	0	; () banked
  5688  003488  158C               	andwf	(___fldiv@grs+2)& (0+255),w,b
  5689  00348A  0100               	movlb	0	; () banked
  5690  00348C  6F81               	movwf	(??___fldiv+2)& (0+255),b
  5691  00348E  0E7F               	movlw	127
  5692  003490  0100               	movlb	0	; () banked
  5693  003492  158D               	andwf	(___fldiv@grs+3)& (0+255),w,b
  5694  003494  0100               	movlb	0	; () banked
  5695  003496  6F82               	movwf	(??___fldiv+3)& (0+255),b
  5696  003498  0100               	movlb	0	; () banked
  5697  00349A  517F               	movf	??___fldiv& (0+255),w,b
  5698  00349C  0100               	movlb	0	; () banked
  5699  00349E  1180               	iorwf	(??___fldiv+1)& (0+255),w,b
  5700  0034A0  0100               	movlb	0	; () banked
  5701  0034A2  1181               	iorwf	(??___fldiv+2)& (0+255),w,b
  5702  0034A4  0100               	movlb	0	; () banked
  5703  0034A6  1182               	iorwf	(??___fldiv+3)& (0+255),w,b
  5704  0034A8  A4D8               	btfss	status,2,c
  5705  0034AA  D003               	goto	l5853
  5706                           
  5707                           ; BSR set to: 0
  5708                           
  5709                           ; BSR set to: 0
  5710  0034AC  0100               	movlb	0	; () banked
  5711  0034AE  A177               	btfss	___fldiv@b& (0+255),0,b
  5712  0034B0  D003               	goto	l1296
  5713  0034B2                     l5853:
  5714                           
  5715                           ; BSR set to: 0
  5716  0034B2  0E01               	movlw	1
  5717  0034B4  0100               	movlb	0	; () banked
  5718  0034B6  6F8F               	movwf	___fldiv@aexp& (0+255),b
  5719  0034B8                     l1296:
  5720                           
  5721                           ; BSR set to: 0
  5722  0034B8  0100               	movlb	0	; () banked
  5723  0034BA  518F               	movf	___fldiv@aexp& (0+255),w,b
  5724  0034BC  0100               	movlb	0	; () banked
  5725  0034BE  B4D8               	btfsc	status,2,c
  5726  0034C0  D023               	goto	l5863
  5727                           
  5728                           ; BSR set to: 0
  5729  0034C2  0E01               	movlw	1
  5730  0034C4  0100               	movlb	0	; () banked
  5731  0034C6  2777               	addwf	___fldiv@b& (0+255),f,b
  5732  0034C8  0E00               	movlw	0
  5733  0034CA  2378               	addwfc	(___fldiv@b+1)& (0+255),f,b
  5734  0034CC  2379               	addwfc	(___fldiv@b+2)& (0+255),f,b
  5735  0034CE  237A               	addwfc	(___fldiv@b+3)& (0+255),f,b
  5736                           
  5737                           ; BSR set to: 0
  5738  0034D0  0100               	movlb	0	; () banked
  5739  0034D2  A17A               	btfss	(___fldiv@b+3)& (0+255),0,b
  5740  0034D4  D019               	goto	l5863
  5741                           
  5742                           ; BSR set to: 0
  5743  0034D6  C077  F07F         	movff	___fldiv@b,??___fldiv
  5744  0034DA  C078  F080         	movff	___fldiv@b+1,??___fldiv+1
  5745  0034DE  C079  F081         	movff	___fldiv@b+2,??___fldiv+2
  5746  0034E2  C07A  F082         	movff	___fldiv@b+3,??___fldiv+3
  5747  0034E6  0100               	movlb	0	; () banked
  5748  0034E8  3582               	rlcf	(??___fldiv+3)& (0+255),w,b
  5749  0034EA  3382               	rrcf	(??___fldiv+3)& (0+255),f,b
  5750  0034EC  3381               	rrcf	(??___fldiv+2)& (0+255),f,b
  5751  0034EE  3380               	rrcf	(??___fldiv+1)& (0+255),f,b
  5752  0034F0  337F               	rrcf	??___fldiv& (0+255),f,b
  5753  0034F2  C07F  F077         	movff	??___fldiv,___fldiv@b
  5754  0034F6  C080  F078         	movff	??___fldiv+1,___fldiv@b+1
  5755  0034FA  C081  F079         	movff	??___fldiv+2,___fldiv@b+2
  5756  0034FE  C082  F07A         	movff	??___fldiv+3,___fldiv@b+3
  5757                           
  5758                           ; BSR set to: 0
  5759  003502  0100               	movlb	0	; () banked
  5760  003504  4B88               	infsnz	___fldiv@new_exp& (0+255),f,b
  5761  003506  2B89               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  5762  003508                     l5863:
  5763                           
  5764                           ; BSR set to: 0
  5765  003508  0100               	movlb	0	; () banked
  5766  00350A  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  5767  00350C  D014               	goto	l5867
  5768  00350E  0100               	movlb	0	; () banked
  5769  003510  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  5770  003512  E104               	bnz	u7540
  5771  003514  0100               	movlb	0	; () banked
  5772  003516  2988               	incf	___fldiv@new_exp& (0+255),w,b
  5773  003518  A0D8               	btfss	status,0,c
  5774  00351A  D00D               	goto	l5867
  5775  00351C                     u7540:
  5776                           
  5777                           ; BSR set to: 0
  5778  00351C  0E00               	movlw	0
  5779  00351E  0100               	movlb	0	; () banked
  5780  003520  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
  5781  003522  6988               	setf	___fldiv@new_exp& (0+255),b
  5782  003524  0E00               	movlw	0
  5783  003526  0100               	movlb	0	; () banked
  5784  003528  6F77               	movwf	___fldiv@b& (0+255),b
  5785  00352A  0E00               	movlw	0
  5786  00352C  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  5787  00352E  0E00               	movlw	0
  5788  003530  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  5789  003532  0E00               	movlw	0
  5790  003534  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  5791  003536                     l5867:
  5792                           
  5793                           ; BSR set to: 0
  5794  003536  0100               	movlb	0	; () banked
  5795  003538  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  5796  00353A  D007               	goto	l5869
  5797  00353C  0100               	movlb	0	; () banked
  5798  00353E  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  5799  003540  E115               	bnz	l5871
  5800  003542  0100               	movlb	0	; () banked
  5801  003544  0588               	decf	___fldiv@new_exp& (0+255),w,b
  5802  003546  B0D8               	btfsc	status,0,c
  5803  003548  D011               	goto	l5871
  5804  00354A                     l5869:
  5805                           
  5806                           ; BSR set to: 0
  5807  00354A  0E00               	movlw	0
  5808  00354C  0100               	movlb	0	; () banked
  5809  00354E  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
  5810  003550  0E00               	movlw	0
  5811  003552  6F88               	movwf	___fldiv@new_exp& (0+255),b
  5812  003554  0E00               	movlw	0
  5813  003556  0100               	movlb	0	; () banked
  5814  003558  6F77               	movwf	___fldiv@b& (0+255),b
  5815  00355A  0E00               	movlw	0
  5816  00355C  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  5817  00355E  0E00               	movlw	0
  5818  003560  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  5819  003562  0E00               	movlw	0
  5820  003564  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  5821  003566  0E00               	movlw	0
  5822  003568  0100               	movlb	0	; () banked
  5823  00356A  6F83               	movwf	___fldiv@sign& (0+255),b
  5824  00356C                     l5871:
  5825                           
  5826                           ; BSR set to: 0
  5827  00356C  C088  F08E         	movff	___fldiv@new_exp,___fldiv@bexp
  5828                           
  5829                           ; BSR set to: 0
  5830  003570  0100               	movlb	0	; () banked
  5831  003572  A18E               	btfss	___fldiv@bexp& (0+255),0,b
  5832  003574  D003               	goto	l5877
  5833                           
  5834                           ; BSR set to: 0
  5835  003576  0100               	movlb	0	; () banked
  5836  003578  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
  5837  00357A  D002               	goto	l5879
  5838  00357C                     l5877:
  5839                           
  5840                           ; BSR set to: 0
  5841  00357C  0100               	movlb	0	; () banked
  5842  00357E  9F79               	bcf	(___fldiv@b+2)& (0+255),7,b
  5843  003580                     l5879:
  5844                           
  5845                           ; BSR set to: 0
  5846  003580  0100               	movlb	0	; () banked
  5847  003582  90D8               	bcf	status,0,c
  5848  003584  318E               	rrcf	___fldiv@bexp& (0+255),w,b
  5849  003586  0100               	movlb	0	; () banked
  5850  003588  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  5851                           
  5852                           ; BSR set to: 0
  5853  00358A  0100               	movlb	0	; () banked
  5854  00358C  5183               	movf	___fldiv@sign& (0+255),w,b
  5855  00358E  0100               	movlb	0	; () banked
  5856  003590  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
  5857                           
  5858                           ; BSR set to: 0
  5859  003592  C077  F077         	movff	___fldiv@b,?___fldiv
  5860  003596  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
  5861  00359A  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
  5862  00359E  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
  5863  0035A2  0012               	return	
  5864  0035A4                     __end_of___fldiv:
  5865                           	opt stack 0
  5866                           tblptru	equ	0xFF8
  5867                           tblptrh	equ	0xFF7
  5868                           tblptrl	equ	0xFF6
  5869                           tablat	equ	0xFF5
  5870                           prodh	equ	0xFF4
  5871                           prodl	equ	0xFF3
  5872                           postinc0	equ	0xFEE
  5873                           wreg	equ	0xFE8
  5874                           postinc2	equ	0xFDE
  5875                           postdec2	equ	0xFDD
  5876                           status	equ	0xFD8
  5877                           
  5878 ;; *************** function _abs *****************
  5879 ;; Defined at:
  5880 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  5881 ;; Parameters:    Size  Location     Type
  5882 ;;  a               2  107[BANK0 ] int 
  5883 ;; Auto vars:     Size  Location     Type
  5884 ;;		None
  5885 ;; Return value:  Size  Location     Type
  5886 ;;                  2  107[BANK0 ] int 
  5887 ;; Registers used:
  5888 ;;		wreg, status,2, status,0
  5889 ;; Tracked objects:
  5890 ;;		On entry : 0/0
  5891 ;;		On exit  : 0/0
  5892 ;;		Unchanged: 0/0
  5893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5894 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5896 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5897 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5898 ;;Total ram usage:        4 bytes
  5899 ;; Hardware stack levels used:    1
  5900 ;; Hardware stack levels required when called:    4
  5901 ;; This function calls:
  5902 ;;		Nothing
  5903 ;; This function is called by:
  5904 ;;		_park_search
  5905 ;;		_parallelo
  5906 ;; This function uses a non-reentrant model
  5907 ;;
  5908                           
  5909                           	psect	text13
  5910  004E22                     __ptext13:
  5911                           	opt stack 0
  5912  004E22                     _abs:
  5913                           	opt stack 24
  5914                           
  5915                           ; BSR set to: 0
  5916                           ;incstack = 0
  5917  004E22  0100               	movlb	0	; () banked
  5918  004E24  AFCC               	btfss	(abs@a+1)& (0+255),7,b
  5919  004E26  D00E               	goto	l791
  5920                           
  5921                           ; BSR set to: 0
  5922  004E28  C0CB  F0CD         	movff	abs@a,??_abs
  5923  004E2C  C0CC  F0CE         	movff	abs@a+1,??_abs+1
  5924  004E30  0100               	movlb	0	; () banked
  5925  004E32  1FCD               	comf	??_abs& (0+255),f,b
  5926  004E34  1FCE               	comf	(??_abs+1)& (0+255),f,b
  5927  004E36  4BCD               	infsnz	??_abs& (0+255),f,b
  5928  004E38  2BCE               	incf	(??_abs+1)& (0+255),f,b
  5929  004E3A  C0CD  F0CB         	movff	??_abs,?_abs
  5930  004E3E  C0CE  F0CC         	movff	??_abs+1,?_abs+1
  5931  004E42  0012               	return	
  5932  004E44                     l791:
  5933                           
  5934                           ; BSR set to: 0
  5935  004E44  C0CB  F0CB         	movff	abs@a,?_abs
  5936  004E48  C0CC  F0CC         	movff	abs@a+1,?_abs+1
  5937                           
  5938                           ; BSR set to: 0
  5939  004E4C  0012               	return		;funcret
  5940  004E4E                     __end_of_abs:
  5941                           	opt stack 0
  5942                           tblptru	equ	0xFF8
  5943                           tblptrh	equ	0xFF7
  5944                           tblptrl	equ	0xFF6
  5945                           tablat	equ	0xFF5
  5946                           prodh	equ	0xFF4
  5947                           prodl	equ	0xFF3
  5948                           postinc0	equ	0xFEE
  5949                           wreg	equ	0xFE8
  5950                           postinc2	equ	0xFDE
  5951                           postdec2	equ	0xFDD
  5952                           status	equ	0xFD8
  5953                           
  5954 ;; *************** function ___xxtofl *****************
  5955 ;; Defined at:
  5956 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  5957 ;; Parameters:    Size  Location     Type
  5958 ;;  sign            1    wreg     unsigned char 
  5959 ;;  val             4  111[BANK0 ] long 
  5960 ;; Auto vars:     Size  Location     Type
  5961 ;;  sign            1    4[BANK1 ] unsigned char 
  5962 ;;  arg             4    6[BANK1 ] unsigned long 
  5963 ;;  exp             1    5[BANK1 ] unsigned char 
  5964 ;; Return value:  Size  Location     Type
  5965 ;;                  4  111[BANK0 ] unsigned char 
  5966 ;; Registers used:
  5967 ;;		wreg, status,2, status,0
  5968 ;; Tracked objects:
  5969 ;;		On entry : 0/0
  5970 ;;		On exit  : 0/0
  5971 ;;		Unchanged: 0/0
  5972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5973 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5974 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5975 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5976 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0
  5977 ;;Total ram usage:       14 bytes
  5978 ;; Hardware stack levels used:    1
  5979 ;; Hardware stack levels required when called:    4
  5980 ;; This function calls:
  5981 ;;		Nothing
  5982 ;; This function is called by:
  5983 ;;		_park_search
  5984 ;;		_parallelo
  5985 ;; This function uses a non-reentrant model
  5986 ;;
  5987                           
  5988                           	psect	text14
  5989  00412E                     __ptext14:
  5990                           	opt stack 0
  5991  00412E                     ___xxtofl:
  5992                           	opt stack 24
  5993                           
  5994                           ; BSR set to: 0
  5995                           ;incstack = 0
  5996                           ;___xxtofl@sign stored from wreg
  5997  00412E  0101               	movlb	1	; () banked
  5998  004130  6F5B               	movwf	___xxtofl@sign& (0+255),b
  5999  004132  0101               	movlb	1	; () banked
  6000  004134  515B               	movf	___xxtofl@sign& (0+255),w,b
  6001  004136  0101               	movlb	1	; () banked
  6002  004138  B4D8               	btfsc	status,2,c
  6003  00413A  D01E               	goto	l1357
  6004                           
  6005                           ; BSR set to: 1
  6006  00413C  0100               	movlb	0	; () banked
  6007  00413E  AFD2               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6008  004140  D01B               	goto	l1357
  6009                           
  6010                           ; BSR set to: 0
  6011  004142  C0CF  F157         	movff	___xxtofl@val,??___xxtofl
  6012  004146  C0D0  F158         	movff	___xxtofl@val+1,??___xxtofl+1
  6013  00414A  C0D1  F159         	movff	___xxtofl@val+2,??___xxtofl+2
  6014  00414E  C0D2  F15A         	movff	___xxtofl@val+3,??___xxtofl+3
  6015  004152  0101               	movlb	1	; () banked
  6016  004154  1F57               	comf	??___xxtofl& (0+255),f,b
  6017  004156  1F58               	comf	(??___xxtofl+1)& (0+255),f,b
  6018  004158  1F59               	comf	(??___xxtofl+2)& (0+255),f,b
  6019  00415A  1F5A               	comf	(??___xxtofl+3)& (0+255),f,b
  6020  00415C  2B57               	incf	??___xxtofl& (0+255),f,b
  6021  00415E  0E00               	movlw	0
  6022  004160  2358               	addwfc	(??___xxtofl+1)& (0+255),f,b
  6023  004162  2359               	addwfc	(??___xxtofl+2)& (0+255),f,b
  6024  004164  235A               	addwfc	(??___xxtofl+3)& (0+255),f,b
  6025  004166  C157  F15D         	movff	??___xxtofl,___xxtofl@arg
  6026  00416A  C158  F15E         	movff	??___xxtofl+1,___xxtofl@arg+1
  6027  00416E  C159  F15F         	movff	??___xxtofl+2,___xxtofl@arg+2
  6028  004172  C15A  F160         	movff	??___xxtofl+3,___xxtofl@arg+3
  6029  004176  D008               	goto	l6093
  6030  004178                     l1357:
  6031  004178  C0CF  F15D         	movff	___xxtofl@val,___xxtofl@arg
  6032  00417C  C0D0  F15E         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6033  004180  C0D1  F15F         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6034  004184  C0D2  F160         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6035  004188                     l6093:
  6036  004188  0100               	movlb	0	; () banked
  6037  00418A  51CF               	movf	___xxtofl@val& (0+255),w,b
  6038  00418C  0100               	movlb	0	; () banked
  6039  00418E  11D0               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  6040  004190  0100               	movlb	0	; () banked
  6041  004192  11D1               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  6042  004194  0100               	movlb	0	; () banked
  6043  004196  11D2               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  6044  004198  A4D8               	btfss	status,2,c
  6045  00419A  D00A               	goto	l6099
  6046                           
  6047                           ; BSR set to: 0
  6048  00419C  0E00               	movlw	0
  6049  00419E  0100               	movlb	0	; () banked
  6050  0041A0  6FCF               	movwf	?___xxtofl& (0+255),b
  6051  0041A2  0E00               	movlw	0
  6052  0041A4  6FD0               	movwf	(?___xxtofl+1)& (0+255),b
  6053  0041A6  0E00               	movlw	0
  6054  0041A8  6FD1               	movwf	(?___xxtofl+2)& (0+255),b
  6055  0041AA  0E00               	movlw	0
  6056  0041AC  6FD2               	movwf	(?___xxtofl+3)& (0+255),b
  6057                           
  6058                           ; BSR set to: 0
  6059  0041AE  0012               	return	
  6060  0041B0                     l6099:
  6061                           
  6062                           ; BSR set to: 0
  6063  0041B0  0E96               	movlw	150
  6064  0041B2  0101               	movlb	1	; () banked
  6065  0041B4  6F5C               	movwf	___xxtofl@exp& (0+255),b
  6066  0041B6  D008               	goto	l6103
  6067  0041B8                     l6101:
  6068                           
  6069                           ; BSR set to: 1
  6070  0041B8  0101               	movlb	1	; () banked
  6071  0041BA  2B5C               	incf	___xxtofl@exp& (0+255),f,b
  6072  0041BC  0101               	movlb	1	; () banked
  6073  0041BE  90D8               	bcf	status,0,c
  6074  0041C0  3360               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6075  0041C2  335F               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6076  0041C4  335E               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6077  0041C6  335D               	rrcf	___xxtofl@arg& (0+255),f,b
  6078  0041C8                     l6103:
  6079                           
  6080                           ; BSR set to: 1
  6081  0041C8  0E00               	movlw	0
  6082  0041CA  0101               	movlb	1	; () banked
  6083  0041CC  155D               	andwf	___xxtofl@arg& (0+255),w,b
  6084  0041CE  0101               	movlb	1	; () banked
  6085  0041D0  6F57               	movwf	??___xxtofl& (0+255),b
  6086  0041D2  0E00               	movlw	0
  6087  0041D4  0101               	movlb	1	; () banked
  6088  0041D6  155E               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6089  0041D8  0101               	movlb	1	; () banked
  6090  0041DA  6F58               	movwf	(??___xxtofl+1)& (0+255),b
  6091  0041DC  0E00               	movlw	0
  6092  0041DE  0101               	movlb	1	; () banked
  6093  0041E0  155F               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6094  0041E2  0101               	movlb	1	; () banked
  6095  0041E4  6F59               	movwf	(??___xxtofl+2)& (0+255),b
  6096  0041E6  0EFE               	movlw	254
  6097  0041E8  0101               	movlb	1	; () banked
  6098  0041EA  1560               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6099  0041EC  0101               	movlb	1	; () banked
  6100  0041EE  6F5A               	movwf	(??___xxtofl+3)& (0+255),b
  6101  0041F0  0101               	movlb	1	; () banked
  6102  0041F2  5157               	movf	??___xxtofl& (0+255),w,b
  6103  0041F4  0101               	movlb	1	; () banked
  6104  0041F6  1158               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6105  0041F8  0101               	movlb	1	; () banked
  6106  0041FA  1159               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6107  0041FC  0101               	movlb	1	; () banked
  6108  0041FE  115A               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6109  004200  B4D8               	btfsc	status,2,c
  6110  004202  D010               	goto	l1364
  6111  004204  D7D9               	goto	l6101
  6112  004206                     l6105:
  6113                           
  6114                           ; BSR set to: 1
  6115  004206  0101               	movlb	1	; () banked
  6116  004208  2B5C               	incf	___xxtofl@exp& (0+255),f,b
  6117                           
  6118                           ; BSR set to: 1
  6119  00420A  0E01               	movlw	1
  6120  00420C  0101               	movlb	1	; () banked
  6121  00420E  275D               	addwf	___xxtofl@arg& (0+255),f,b
  6122  004210  0E00               	movlw	0
  6123  004212  235E               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  6124  004214  235F               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  6125  004216  2360               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  6126                           
  6127                           ; BSR set to: 1
  6128  004218  0101               	movlb	1	; () banked
  6129  00421A  90D8               	bcf	status,0,c
  6130  00421C  3360               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6131  00421E  335F               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6132  004220  335E               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6133  004222  335D               	rrcf	___xxtofl@arg& (0+255),f,b
  6134  004224                     l1364:
  6135                           
  6136                           ; BSR set to: 1
  6137  004224  0E00               	movlw	0
  6138  004226  0101               	movlb	1	; () banked
  6139  004228  155D               	andwf	___xxtofl@arg& (0+255),w,b
  6140  00422A  0101               	movlb	1	; () banked
  6141  00422C  6F57               	movwf	??___xxtofl& (0+255),b
  6142  00422E  0E00               	movlw	0
  6143  004230  0101               	movlb	1	; () banked
  6144  004232  155E               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6145  004234  0101               	movlb	1	; () banked
  6146  004236  6F58               	movwf	(??___xxtofl+1)& (0+255),b
  6147  004238  0E00               	movlw	0
  6148  00423A  0101               	movlb	1	; () banked
  6149  00423C  155F               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6150  00423E  0101               	movlb	1	; () banked
  6151  004240  6F59               	movwf	(??___xxtofl+2)& (0+255),b
  6152  004242  0EFF               	movlw	255
  6153  004244  0101               	movlb	1	; () banked
  6154  004246  1560               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6155  004248  0101               	movlb	1	; () banked
  6156  00424A  6F5A               	movwf	(??___xxtofl+3)& (0+255),b
  6157  00424C  0101               	movlb	1	; () banked
  6158  00424E  5157               	movf	??___xxtofl& (0+255),w,b
  6159  004250  0101               	movlb	1	; () banked
  6160  004252  1158               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6161  004254  0101               	movlb	1	; () banked
  6162  004256  1159               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6163  004258  0101               	movlb	1	; () banked
  6164  00425A  115A               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6165  00425C  B4D8               	btfsc	status,2,c
  6166  00425E  D009               	goto	l6113
  6167  004260  D7D2               	goto	l6105
  6168  004262                     l6111:
  6169                           
  6170                           ; BSR set to: 1
  6171  004262  0101               	movlb	1	; () banked
  6172  004264  075C               	decf	___xxtofl@exp& (0+255),f,b
  6173  004266  0101               	movlb	1	; () banked
  6174  004268  90D8               	bcf	status,0,c
  6175  00426A  375D               	rlcf	___xxtofl@arg& (0+255),f,b
  6176  00426C  375E               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  6177  00426E  375F               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  6178  004270  3760               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  6179  004272                     l6113:
  6180                           
  6181                           ; BSR set to: 1
  6182  004272  0101               	movlb	1	; () banked
  6183  004274  BF5F               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  6184  004276  D004               	goto	l1371
  6185                           
  6186                           ; BSR set to: 1
  6187  004278  0E02               	movlw	2
  6188  00427A  0101               	movlb	1	; () banked
  6189  00427C  615C               	cpfslt	___xxtofl@exp& (0+255),b
  6190  00427E  D7F1               	goto	l6111
  6191  004280                     l1371:
  6192                           
  6193                           ; BSR set to: 1
  6194  004280  0101               	movlb	1	; () banked
  6195  004282  B15C               	btfsc	___xxtofl@exp& (0+255),0,b
  6196  004284  D009               	goto	l1372
  6197                           
  6198                           ; BSR set to: 1
  6199  004286  0EFF               	movlw	255
  6200  004288  0101               	movlb	1	; () banked
  6201  00428A  175D               	andwf	___xxtofl@arg& (0+255),f,b
  6202  00428C  0EFF               	movlw	255
  6203  00428E  175E               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  6204  004290  0E7F               	movlw	127
  6205  004292  175F               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  6206  004294  0EFF               	movlw	255
  6207  004296  1760               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  6208  004298                     l1372:
  6209                           
  6210                           ; BSR set to: 1
  6211  004298  0101               	movlb	1	; () banked
  6212  00429A  90D8               	bcf	status,0,c
  6213  00429C  335C               	rrcf	___xxtofl@exp& (0+255),f,b
  6214  00429E  C15C  F157         	movff	___xxtofl@exp,??___xxtofl
  6215  0042A2  0101               	movlb	1	; () banked
  6216  0042A4  6B58               	clrf	(??___xxtofl+1)& (0+255),b
  6217  0042A6  6B59               	clrf	(??___xxtofl+2)& (0+255),b
  6218  0042A8  6B5A               	clrf	(??___xxtofl+3)& (0+255),b
  6219  0042AA  C157  F15A         	movff	??___xxtofl,??___xxtofl+3
  6220  0042AE  0101               	movlb	1	; () banked
  6221  0042B0  6B59               	clrf	(??___xxtofl+2)& (0+255),b
  6222  0042B2  6B58               	clrf	(??___xxtofl+1)& (0+255),b
  6223  0042B4  6B57               	clrf	??___xxtofl& (0+255),b
  6224  0042B6  0101               	movlb	1	; () banked
  6225  0042B8  5157               	movf	??___xxtofl& (0+255),w,b
  6226  0042BA  0101               	movlb	1	; () banked
  6227  0042BC  135D               	iorwf	___xxtofl@arg& (0+255),f,b
  6228  0042BE  0101               	movlb	1	; () banked
  6229  0042C0  5158               	movf	(??___xxtofl+1)& (0+255),w,b
  6230  0042C2  0101               	movlb	1	; () banked
  6231  0042C4  135E               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  6232  0042C6  0101               	movlb	1	; () banked
  6233  0042C8  5159               	movf	(??___xxtofl+2)& (0+255),w,b
  6234  0042CA  0101               	movlb	1	; () banked
  6235  0042CC  135F               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  6236  0042CE  0101               	movlb	1	; () banked
  6237  0042D0  515A               	movf	(??___xxtofl+3)& (0+255),w,b
  6238  0042D2  0101               	movlb	1	; () banked
  6239  0042D4  1360               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  6240                           
  6241                           ; BSR set to: 1
  6242  0042D6  0101               	movlb	1	; () banked
  6243  0042D8  515B               	movf	___xxtofl@sign& (0+255),w,b
  6244  0042DA  0101               	movlb	1	; () banked
  6245  0042DC  B4D8               	btfsc	status,2,c
  6246  0042DE  D005               	goto	l6125
  6247                           
  6248                           ; BSR set to: 1
  6249  0042E0  0100               	movlb	0	; () banked
  6250  0042E2  AFD2               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6251  0042E4  D002               	goto	l6125
  6252                           
  6253                           ; BSR set to: 0
  6254  0042E6  0101               	movlb	1	; () banked
  6255  0042E8  8F60               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  6256  0042EA                     l6125:
  6257  0042EA  C15D  F0CF         	movff	___xxtofl@arg,?___xxtofl
  6258  0042EE  C15E  F0D0         	movff	___xxtofl@arg+1,?___xxtofl+1
  6259  0042F2  C15F  F0D1         	movff	___xxtofl@arg+2,?___xxtofl+2
  6260  0042F6  C160  F0D2         	movff	___xxtofl@arg+3,?___xxtofl+3
  6261  0042FA  0012               	return	
  6262  0042FC                     __end_of___xxtofl:
  6263                           	opt stack 0
  6264                           tblptru	equ	0xFF8
  6265                           tblptrh	equ	0xFF7
  6266                           tblptrl	equ	0xFF6
  6267                           tablat	equ	0xFF5
  6268                           prodh	equ	0xFF4
  6269                           prodl	equ	0xFF3
  6270                           postinc0	equ	0xFEE
  6271                           wreg	equ	0xFE8
  6272                           postinc2	equ	0xFDE
  6273                           postdec2	equ	0xFDD
  6274                           status	equ	0xFD8
  6275                           
  6276 ;; *************** function ___fltol *****************
  6277 ;; Defined at:
  6278 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  6279 ;; Parameters:    Size  Location     Type
  6280 ;;  f1              4   97[BANK0 ] unsigned char 
  6281 ;; Auto vars:     Size  Location     Type
  6282 ;;  exp1            1  106[BANK0 ] unsigned char 
  6283 ;;  sign1           1  105[BANK0 ] unsigned char 
  6284 ;; Return value:  Size  Location     Type
  6285 ;;                  4   97[BANK0 ] long 
  6286 ;; Registers used:
  6287 ;;		wreg, status,2, status,0
  6288 ;; Tracked objects:
  6289 ;;		On entry : 0/0
  6290 ;;		On exit  : 0/0
  6291 ;;		Unchanged: 0/0
  6292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6293 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6294 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6295 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6296 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6297 ;;Total ram usage:       10 bytes
  6298 ;; Hardware stack levels used:    1
  6299 ;; Hardware stack levels required when called:    4
  6300 ;; This function calls:
  6301 ;;		Nothing
  6302 ;; This function is called by:
  6303 ;;		_parallelo
  6304 ;; This function uses a non-reentrant model
  6305 ;;
  6306                           
  6307                           	psect	text15
  6308  0048D0                     __ptext15:
  6309                           	opt stack 0
  6310  0048D0                     ___fltol:
  6311                           	opt stack 24
  6312                           
  6313                           ;incstack = 0
  6314  0048D0  0100               	movlb	0	; () banked
  6315  0048D2  35C3               	rlcf	(___fltol@f1+2)& (0+255),w,b
  6316  0048D4  35C4               	rlcf	(___fltol@f1+3)& (0+255),w,b
  6317  0048D6  0100               	movlb	0	; () banked
  6318  0048D8  6FCA               	movwf	___fltol@exp1& (0+255),b
  6319  0048DA  0100               	movlb	0	; () banked
  6320  0048DC  51CA               	movf	___fltol@exp1& (0+255),w,b
  6321  0048DE  A4D8               	btfss	status,2,c
  6322  0048E0  D00A               	goto	l4815
  6323                           
  6324                           ; BSR set to: 0
  6325  0048E2  0E00               	movlw	0
  6326  0048E4  0100               	movlb	0	; () banked
  6327  0048E6  6FC1               	movwf	?___fltol& (0+255),b
  6328  0048E8  0E00               	movlw	0
  6329  0048EA  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6330  0048EC  0E00               	movlw	0
  6331  0048EE  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6332  0048F0  0E00               	movlw	0
  6333  0048F2  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6334                           
  6335                           ; BSR set to: 0
  6336  0048F4  0012               	return	
  6337  0048F6                     l4815:
  6338                           
  6339                           ; BSR set to: 0
  6340  0048F6  C0C1  F0C5         	movff	___fltol@f1,??___fltol
  6341  0048FA  C0C2  F0C6         	movff	___fltol@f1+1,??___fltol+1
  6342  0048FE  C0C3  F0C7         	movff	___fltol@f1+2,??___fltol+2
  6343  004902  C0C4  F0C8         	movff	___fltol@f1+3,??___fltol+3
  6344  004906  0E20               	movlw	32
  6345  004908  D006               	goto	u5940
  6346  00490A                     u5945:
  6347  00490A  0100               	movlb	0	; () banked
  6348  00490C  90D8               	bcf	status,0,c
  6349  00490E  33C8               	rrcf	(??___fltol+3)& (0+255),f,b
  6350  004910  33C7               	rrcf	(??___fltol+2)& (0+255),f,b
  6351  004912  33C6               	rrcf	(??___fltol+1)& (0+255),f,b
  6352  004914  33C5               	rrcf	??___fltol& (0+255),f,b
  6353  004916                     u5940:
  6354  004916  2EE8               	decfsz	wreg,f,c
  6355  004918  D7F8               	goto	u5945
  6356  00491A  0100               	movlb	0	; () banked
  6357  00491C  51C5               	movf	??___fltol& (0+255),w,b
  6358  00491E  0100               	movlb	0	; () banked
  6359  004920  6FC9               	movwf	___fltol@sign1& (0+255),b
  6360                           
  6361                           ; BSR set to: 0
  6362  004922  0100               	movlb	0	; () banked
  6363  004924  8FC3               	bsf	(___fltol@f1+2)& (0+255),7,b
  6364                           
  6365                           ; BSR set to: 0
  6366  004926  0EFF               	movlw	255
  6367  004928  0100               	movlb	0	; () banked
  6368  00492A  17C1               	andwf	___fltol@f1& (0+255),f,b
  6369  00492C  0EFF               	movlw	255
  6370  00492E  17C2               	andwf	(___fltol@f1+1)& (0+255),f,b
  6371  004930  0EFF               	movlw	255
  6372  004932  17C3               	andwf	(___fltol@f1+2)& (0+255),f,b
  6373  004934  0E00               	movlw	0
  6374  004936  17C4               	andwf	(___fltol@f1+3)& (0+255),f,b
  6375                           
  6376                           ; BSR set to: 0
  6377  004938  0E96               	movlw	150
  6378  00493A  0100               	movlb	0	; () banked
  6379  00493C  5FCA               	subwf	___fltol@exp1& (0+255),f,b
  6380                           
  6381                           ; BSR set to: 0
  6382  00493E  0100               	movlb	0	; () banked
  6383  004940  AFCA               	btfss	___fltol@exp1& (0+255),7,b
  6384  004942  D01A               	goto	l4835
  6385                           
  6386                           ; BSR set to: 0
  6387  004944  0100               	movlb	0	; () banked
  6388  004946  51CA               	movf	___fltol@exp1& (0+255),w,b
  6389  004948  0A80               	xorlw	128
  6390  00494A  0F97               	addlw	151
  6391  00494C  B0D8               	btfsc	status,0,c
  6392  00494E  D00A               	goto	l4831
  6393                           
  6394                           ; BSR set to: 0
  6395  004950  0E00               	movlw	0
  6396  004952  0100               	movlb	0	; () banked
  6397  004954  6FC1               	movwf	?___fltol& (0+255),b
  6398  004956  0E00               	movlw	0
  6399  004958  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6400  00495A  0E00               	movlw	0
  6401  00495C  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6402  00495E  0E00               	movlw	0
  6403  004960  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6404                           
  6405                           ; BSR set to: 0
  6406  004962  0012               	return	
  6407  004964                     l4831:
  6408                           
  6409                           ; BSR set to: 0
  6410  004964  0100               	movlb	0	; () banked
  6411  004966  90D8               	bcf	status,0,c
  6412  004968  33C4               	rrcf	(___fltol@f1+3)& (0+255),f,b
  6413  00496A  33C3               	rrcf	(___fltol@f1+2)& (0+255),f,b
  6414  00496C  33C2               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6415  00496E  33C1               	rrcf	___fltol@f1& (0+255),f,b
  6416                           
  6417                           ; BSR set to: 0
  6418  004970  0100               	movlb	0	; () banked
  6419  004972  3FCA               	incfsz	___fltol@exp1& (0+255),f,b
  6420  004974  D7F7               	goto	l4831
  6421                           
  6422                           ; BSR set to: 0
  6423  004976  D01B               	goto	l4845
  6424  004978                     l4835:
  6425                           
  6426                           ; BSR set to: 0
  6427  004978  0E1F               	movlw	31
  6428  00497A  0100               	movlb	0	; () banked
  6429  00497C  65CA               	cpfsgt	___fltol@exp1& (0+255),b
  6430  00497E  D012               	goto	l4843
  6431                           
  6432                           ; BSR set to: 0
  6433  004980  0E00               	movlw	0
  6434  004982  0100               	movlb	0	; () banked
  6435  004984  6FC1               	movwf	?___fltol& (0+255),b
  6436  004986  0E00               	movlw	0
  6437  004988  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6438  00498A  0E00               	movlw	0
  6439  00498C  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6440  00498E  0E00               	movlw	0
  6441  004990  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6442                           
  6443                           ; BSR set to: 0
  6444  004992  0012               	return	
  6445  004994                     l4841:
  6446                           
  6447                           ; BSR set to: 0
  6448  004994  0100               	movlb	0	; () banked
  6449  004996  90D8               	bcf	status,0,c
  6450  004998  37C1               	rlcf	___fltol@f1& (0+255),f,b
  6451  00499A  37C2               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6452  00499C  37C3               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6453  00499E  37C4               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6454  0049A0  0100               	movlb	0	; () banked
  6455  0049A2  07CA               	decf	___fltol@exp1& (0+255),f,b
  6456  0049A4                     l4843:
  6457                           
  6458                           ; BSR set to: 0
  6459  0049A4  0100               	movlb	0	; () banked
  6460  0049A6  51CA               	movf	___fltol@exp1& (0+255),w,b
  6461  0049A8  0100               	movlb	0	; () banked
  6462  0049AA  A4D8               	btfss	status,2,c
  6463  0049AC  D7F3               	goto	l4841
  6464  0049AE                     l4845:
  6465                           
  6466                           ; BSR set to: 0
  6467  0049AE  0100               	movlb	0	; () banked
  6468  0049B0  51C9               	movf	___fltol@sign1& (0+255),w,b
  6469  0049B2  0100               	movlb	0	; () banked
  6470  0049B4  B4D8               	btfsc	status,2,c
  6471  0049B6  D009               	goto	l4849
  6472                           
  6473                           ; BSR set to: 0
  6474  0049B8  0100               	movlb	0	; () banked
  6475  0049BA  1FC4               	comf	(___fltol@f1+3)& (0+255),f,b
  6476  0049BC  1FC3               	comf	(___fltol@f1+2)& (0+255),f,b
  6477  0049BE  1FC2               	comf	(___fltol@f1+1)& (0+255),f,b
  6478  0049C0  6DC1               	negf	___fltol@f1& (0+255),b
  6479  0049C2  0E00               	movlw	0
  6480  0049C4  23C2               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6481  0049C6  23C3               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6482  0049C8  23C4               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6483  0049CA                     l4849:
  6484                           
  6485                           ; BSR set to: 0
  6486  0049CA  C0C1  F0C1         	movff	___fltol@f1,?___fltol
  6487  0049CE  C0C2  F0C2         	movff	___fltol@f1+1,?___fltol+1
  6488  0049D2  C0C3  F0C3         	movff	___fltol@f1+2,?___fltol+2
  6489  0049D6  C0C4  F0C4         	movff	___fltol@f1+3,?___fltol+3
  6490  0049DA  0012               	return	
  6491  0049DC                     __end_of___fltol:
  6492                           	opt stack 0
  6493                           tblptru	equ	0xFF8
  6494                           tblptrh	equ	0xFF7
  6495                           tblptrl	equ	0xFF6
  6496                           tablat	equ	0xFF5
  6497                           prodh	equ	0xFF4
  6498                           prodl	equ	0xFF3
  6499                           postinc0	equ	0xFEE
  6500                           wreg	equ	0xFE8
  6501                           postinc2	equ	0xFDE
  6502                           postdec2	equ	0xFDD
  6503                           status	equ	0xFD8
  6504                           
  6505 ;; *************** function _park_routine *****************
  6506 ;; Defined at:
  6507 ;;		line 224 in file "parcheggio.c"
  6508 ;; Parameters:    Size  Location     Type
  6509 ;;		None
  6510 ;; Auto vars:     Size  Location     Type
  6511 ;;		None
  6512 ;; Return value:  Size  Location     Type
  6513 ;;		None               void
  6514 ;; Registers used:
  6515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6516 ;; Tracked objects:
  6517 ;;		On entry : 0/0
  6518 ;;		On exit  : 0/0
  6519 ;;		Unchanged: 0/0
  6520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6525 ;;Total ram usage:        0 bytes
  6526 ;; Hardware stack levels used:    1
  6527 ;; Hardware stack levels required when called:    6
  6528 ;; This function calls:
  6529 ;;		_can_send
  6530 ;; This function is called by:
  6531 ;;		_main
  6532 ;; This function uses a non-reentrant model
  6533 ;;
  6534                           
  6535                           	psect	text16
  6536  004E72                     __ptext16:
  6537                           	opt stack 0
  6538  004E72                     _park_routine:
  6539                           	opt stack 24
  6540                           
  6541                           ;parcheggio.c: 225: while ((PORTBbits.RB5 == 1) && (activation == 1)) {
  6542                           
  6543                           ; BSR set to: 0
  6544                           ;incstack = 0
  6545  004E72  D00A               	goto	l5221
  6546  004E74                     l5217:
  6547                           
  6548                           ;parcheggio.c: 226: set_speed = 0;
  6549  004E74  0E00               	movlw	0
  6550  004E76  0100               	movlb	0	; () banked
  6551  004E78  6FE6               	movwf	(_set_speed+1)& (0+255),b
  6552  004E7A  0E00               	movlw	0
  6553  004E7C  6FE5               	movwf	_set_speed& (0+255),b
  6554                           
  6555                           ;parcheggio.c: 227: data_brake[0] = 0;
  6556  004E7E  0E00               	movlw	0
  6557  004E80  0101               	movlb	1	; () banked
  6558  004E82  6F37               	movwf	_data_brake& (0+255),b
  6559                           
  6560                           ; BSR set to: 1
  6561                           ;parcheggio.c: 228: can_send();
  6562  004E84  ECEE  F024         	call	_can_send	;wreg free
  6563  004E88                     l5221:
  6564  004E88  AA81               	btfss	3969,5,c	;volatile
  6565  004E8A  0012               	return	
  6566  004E8C  A046               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  6567  004E8E  0012               	return	
  6568  004E90  D7F1               	goto	l5217
  6569  004E92                     __end_of_park_routine:
  6570                           	opt stack 0
  6571                           tblptru	equ	0xFF8
  6572                           tblptrh	equ	0xFF7
  6573                           tblptrl	equ	0xFF6
  6574                           tablat	equ	0xFF5
  6575                           prodh	equ	0xFF4
  6576                           prodl	equ	0xFF3
  6577                           postinc0	equ	0xFEE
  6578                           wreg	equ	0xFE8
  6579                           postinc2	equ	0xFDE
  6580                           postdec2	equ	0xFDD
  6581                           status	equ	0xFD8
  6582                           
  6583 ;; *************** function _can_send *****************
  6584 ;; Defined at:
  6585 ;;		line 233 in file "parcheggio.c"
  6586 ;; Parameters:    Size  Location     Type
  6587 ;;		None
  6588 ;; Auto vars:     Size  Location     Type
  6589 ;;		None
  6590 ;; Return value:  Size  Location     Type
  6591 ;;		None               void
  6592 ;; Registers used:
  6593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6594 ;; Tracked objects:
  6595 ;;		On entry : 0/0
  6596 ;;		On exit  : 0/0
  6597 ;;		Unchanged: 0/0
  6598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6603 ;;Total ram usage:        0 bytes
  6604 ;; Hardware stack levels used:    1
  6605 ;; Hardware stack levels required when called:    5
  6606 ;; This function calls:
  6607 ;;		_CANisTxReady
  6608 ;;		_CANsendMessage
  6609 ;; This function is called by:
  6610 ;;		_park_routine
  6611 ;;		_parallelo
  6612 ;; This function uses a non-reentrant model
  6613 ;;
  6614                           
  6615                           	psect	text17
  6616  0049DC                     __ptext17:
  6617                           	opt stack 0
  6618  0049DC                     _can_send:
  6619                           	opt stack 23
  6620                           
  6621                           ;parcheggio.c: 234: if (PORTBbits.RB5 == 1) {
  6622                           
  6623                           ;incstack = 0
  6624  0049DC  AA81               	btfss	3969,5,c	;volatile
  6625  0049DE  D060               	goto	l4767
  6626  0049E0                     l4749:
  6627  0049E0  EC27  F027         	call	_CANisTxReady	;wreg free
  6628  0049E4  06E8               	decf	wreg,f,c
  6629  0049E6  A4D8               	btfss	status,2,c
  6630  0049E8  D7FB               	goto	l4749
  6631                           
  6632                           ;parcheggio.c: 236: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG &
      +                           CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  6633  0049EA  0E05               	movlw	5
  6634  0049EC  0100               	movlb	0	; () banked
  6635  0049EE  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  6636  0049F0  0E00               	movlw	0
  6637  0049F2  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  6638  0049F4  0E00               	movlw	0
  6639  0049F6  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  6640  0049F8  0E00               	movlw	0
  6641  0049FA  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  6642  0049FC  0E4F               	movlw	low _data_steering
  6643  0049FE  0100               	movlb	0	; () banked
  6644  004A00  6F7B               	movwf	CANsendMessage@data& (0+255),b
  6645  004A02  0E01               	movlw	high _data_steering
  6646  004A04  0100               	movlb	0	; () banked
  6647  004A06  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  6648  004A08  0E08               	movlw	8
  6649  004A0A  0100               	movlb	0	; () banked
  6650  004A0C  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  6651  004A0E  0EBC               	movlw	188
  6652  004A10  0100               	movlb	0	; () banked
  6653  004A12  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  6654  004A14  EC1A  F00C         	call	_CANsendMessage	;wreg free
  6655                           
  6656                           ;parcheggio.c: 237: data_speed[0] = set_speed;
  6657  004A18  C0E5  F147         	movff	_set_speed,_data_speed
  6658                           
  6659                           ;parcheggio.c: 238: data_speed[1] = (set_speed >> 8);
  6660  004A1C  0100               	movlb	0	; () banked
  6661  004A1E  51E6               	movf	(_set_speed+1)& (0+255),w,b
  6662  004A20  0101               	movlb	1	; () banked
  6663  004A22  6F48               	movwf	(_data_speed+1)& (0+255),b
  6664                           
  6665                           ; BSR set to: 1
  6666                           ;parcheggio.c: 239: data_speed[2] = dir;
  6667  004A24  0E00               	movlw	0
  6668  004A26  B246               	btfsc	_dir/(0+8),_dir& (0+7),c
  6669  004A28  0E01               	movlw	1
  6670  004A2A  0101               	movlb	1	; () banked
  6671  004A2C  6F49               	movwf	(_data_speed+2)& (0+255),b
  6672  004A2E                     l4759:
  6673  004A2E  EC27  F027         	call	_CANisTxReady	;wreg free
  6674  004A32  06E8               	decf	wreg,f,c
  6675  004A34  A4D8               	btfss	status,2,c
  6676  004A36  D7FB               	goto	l4759
  6677                           
  6678                           ;parcheggio.c: 241: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  6679  004A38  0E03               	movlw	3
  6680  004A3A  0100               	movlb	0	; () banked
  6681  004A3C  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  6682  004A3E  0E00               	movlw	0
  6683  004A40  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  6684  004A42  0E00               	movlw	0
  6685  004A44  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  6686  004A46  0E00               	movlw	0
  6687  004A48  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  6688  004A4A  0E47               	movlw	low _data_speed
  6689  004A4C  0100               	movlb	0	; () banked
  6690  004A4E  6F7B               	movwf	CANsendMessage@data& (0+255),b
  6691  004A50  0E01               	movlw	high _data_speed
  6692  004A52  0100               	movlb	0	; () banked
  6693  004A54  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  6694  004A56  0E08               	movlw	8
  6695  004A58  0100               	movlb	0	; () banked
  6696  004A5A  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  6697  004A5C  0EBC               	movlw	188
  6698  004A5E  0100               	movlb	0	; () banked
  6699  004A60  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  6700  004A62  EC1A  F00C         	call	_CANsendMessage	;wreg free
  6701  004A66                     l4763:
  6702  004A66  EC27  F027         	call	_CANisTxReady	;wreg free
  6703  004A6A  06E8               	decf	wreg,f,c
  6704  004A6C  A4D8               	btfss	status,2,c
  6705  004A6E  D7FB               	goto	l4763
  6706                           
  6707                           ;parcheggio.c: 243: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  6708  004A70  0E04               	movlw	4
  6709  004A72  0100               	movlb	0	; () banked
  6710  004A74  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  6711  004A76  0E00               	movlw	0
  6712  004A78  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  6713  004A7A  0E00               	movlw	0
  6714  004A7C  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  6715  004A7E  0E00               	movlw	0
  6716  004A80  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  6717  004A82  0E37               	movlw	low _data_brake
  6718  004A84  0100               	movlb	0	; () banked
  6719  004A86  6F7B               	movwf	CANsendMessage@data& (0+255),b
  6720  004A88  0E01               	movlw	high _data_brake
  6721  004A8A  0100               	movlb	0	; () banked
  6722  004A8C  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  6723  004A8E  0E08               	movlw	8
  6724  004A90  0100               	movlb	0	; () banked
  6725  004A92  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  6726  004A94  0EBC               	movlw	188
  6727  004A96  0100               	movlb	0	; () banked
  6728  004A98  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  6729  004A9A  EC1A  F00C         	call	_CANsendMessage	;wreg free
  6730                           
  6731                           ;parcheggio.c: 244: } else {
  6732  004A9E  0012               	return	
  6733  004AA0                     l4767:
  6734                           
  6735                           ;parcheggio.c: 246: data_correction[1] = 0;
  6736  004AA0  0E00               	movlw	0
  6737  004AA2  0101               	movlb	1	; () banked
  6738  004AA4  6F40               	movwf	(_data_correction+1)& (0+255),b
  6739                           
  6740                           ; BSR set to: 1
  6741                           ;parcheggio.c: 247: CANsendMessage(0xAA, data_correction, 8, CAN_CONFIG_STD_MSG & CAN_NO
      +                          RMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  6742  004AA6  0EAA               	movlw	170
  6743  004AA8  0100               	movlb	0	; () banked
  6744  004AAA  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  6745  004AAC  0E00               	movlw	0
  6746  004AAE  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  6747  004AB0  0E00               	movlw	0
  6748  004AB2  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  6749  004AB4  0E00               	movlw	0
  6750  004AB6  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  6751  004AB8  0E3F               	movlw	low _data_correction
  6752  004ABA  0100               	movlb	0	; () banked
  6753  004ABC  6F7B               	movwf	CANsendMessage@data& (0+255),b
  6754  004ABE  0E01               	movlw	high _data_correction
  6755  004AC0  0100               	movlb	0	; () banked
  6756  004AC2  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  6757  004AC4  0E08               	movlw	8
  6758  004AC6  0100               	movlb	0	; () banked
  6759  004AC8  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  6760  004ACA  0EBC               	movlw	188
  6761  004ACC  0100               	movlb	0	; () banked
  6762  004ACE  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  6763  004AD0  EC1A  F00C         	call	_CANsendMessage	;wreg free
  6764  004AD4  0012               	return	
  6765  004AD6                     __end_of_can_send:
  6766                           	opt stack 0
  6767                           tblptru	equ	0xFF8
  6768                           tblptrh	equ	0xFF7
  6769                           tblptrl	equ	0xFF6
  6770                           tablat	equ	0xFF5
  6771                           prodh	equ	0xFF4
  6772                           prodl	equ	0xFF3
  6773                           postinc0	equ	0xFEE
  6774                           wreg	equ	0xFE8
  6775                           postinc2	equ	0xFDE
  6776                           postdec2	equ	0xFDD
  6777                           status	equ	0xFD8
  6778                           
  6779 ;; *************** function _CANsendMessage *****************
  6780 ;; Defined at:
  6781 ;;		line 295 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6782 ;; Parameters:    Size  Location     Type
  6783 ;;  identifier      4   23[BANK0 ] unsigned long 
  6784 ;;  data            2   27[BANK0 ] PTR unsigned char 
  6785 ;;		 -> data_correction(8), data_speed(8), data_steering(8), data_brake(8), 
  6786 ;;		 -> data(8), 
  6787 ;;  dataLength      1   29[BANK0 ] unsigned char 
  6788 ;;  flags           1   30[BANK0 ] enum E16335
  6789 ;; Auto vars:     Size  Location     Type
  6790 ;;  tamp            4   35[BANK0 ] unsigned long 
  6791 ;; Return value:  Size  Location     Type
  6792 ;;		None               void
  6793 ;; Registers used:
  6794 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6795 ;; Tracked objects:
  6796 ;;		On entry : 0/0
  6797 ;;		On exit  : 0/0
  6798 ;;		Unchanged: 0/0
  6799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6800 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6801 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6802 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6803 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6804 ;;Total ram usage:       16 bytes
  6805 ;; Hardware stack levels used:    1
  6806 ;; Hardware stack levels required when called:    4
  6807 ;; This function calls:
  6808 ;;		Nothing
  6809 ;; This function is called by:
  6810 ;;		_park_search
  6811 ;;		_can_send
  6812 ;; This function uses a non-reentrant model
  6813 ;;
  6814                           
  6815                           	psect	text18
  6816  001834                     __ptext18:
  6817                           	opt stack 0
  6818  001834                     _CANsendMessage:
  6819                           	opt stack 23
  6820                           
  6821                           ;inc\CANlib.h: 297: unsigned long tamp;
  6822                           ;inc\CANlib.h: 299: if (TXB0CONbits.TXREQ == 0)
  6823                           
  6824                           ;incstack = 0
  6825  001834  010F               	movlb	15	; () banked
  6826  001836  B740               	btfsc	64,3,b	;volatile
  6827  001838  D13F               	goto	l357
  6828                           
  6829                           ; BSR set to: 15
  6830                           ;inc\CANlib.h: 300: { TXB0DLC = dataLength;
  6831  00183A  C07D  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  6832                           
  6833                           ;inc\CANlib.h: 301: if (0b01000000 & flags)
  6834  00183E  0100               	movlb	0	; () banked
  6835  001840  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  6836  001842  D003               	goto	l358
  6837                           
  6838                           ; BSR set to: 0
  6839                           ;inc\CANlib.h: 302: TXB0DLCbits.TXRTR = 0x01;
  6840  001844  010F               	movlb	15	; () banked
  6841  001846  8D45               	bsf	69,6,b	;volatile
  6842  001848  D002               	goto	l359
  6843  00184A                     l358:
  6844                           
  6845                           ; BSR set to: 0
  6846                           ;inc\CANlib.h: 303: else
  6847                           ;inc\CANlib.h: 304: TXB0DLCbits.TXRTR = 0x00;
  6848  00184A  010F               	movlb	15	; () banked
  6849  00184C  9D45               	bcf	69,6,b	;volatile
  6850  00184E                     l359:
  6851                           
  6852                           ; BSR set to: 15
  6853                           ;inc\CANlib.h: 306: if (CAN_TX_FRAME_MASK & flags)
  6854  00184E  0100               	movlb	0	; () banked
  6855  001850  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  6856  001852  D079               	goto	l360
  6857                           
  6858                           ; BSR set to: 0
  6859                           ;inc\CANlib.h: 307: {
  6860                           ;inc\CANlib.h: 309: tamp = identifier & 0x000000FF;
  6861  001854  0100               	movlb	0	; () banked
  6862  001856  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  6863  001858  0100               	movlb	0	; () banked
  6864  00185A  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  6865  00185C  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6866  00185E  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6867  001860  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6868                           
  6869                           ; BSR set to: 0
  6870                           ;inc\CANlib.h: 310: TXB0EIDL = (unsigned char) tamp;
  6871  001862  C083  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  6872                           
  6873                           ; BSR set to: 0
  6874                           ;inc\CANlib.h: 312: tamp = identifier & 0x0000FF00;
  6875  001866  0E00               	movlw	0
  6876  001868  0100               	movlb	0	; () banked
  6877  00186A  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  6878  00186C  0100               	movlb	0	; () banked
  6879  00186E  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  6880  001870  0EFF               	movlw	255
  6881  001872  0100               	movlb	0	; () banked
  6882  001874  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6883  001876  0100               	movlb	0	; () banked
  6884  001878  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6885  00187A  0E00               	movlw	0
  6886  00187C  0100               	movlb	0	; () banked
  6887  00187E  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6888  001880  0100               	movlb	0	; () banked
  6889  001882  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6890  001884  0E00               	movlw	0
  6891  001886  0100               	movlb	0	; () banked
  6892  001888  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6893  00188A  0100               	movlb	0	; () banked
  6894  00188C  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6895                           
  6896                           ; BSR set to: 0
  6897                           ;inc\CANlib.h: 313: tamp = tamp >> 8;
  6898  00188E  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  6899  001892  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6900  001896  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6901  00189A  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6902  00189E  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  6903  0018A2  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  6904  0018A6  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  6905  0018AA  0100               	movlb	0	; () banked
  6906  0018AC  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  6907  0018AE  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  6908  0018B2  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6909  0018B6  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6910  0018BA  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6911                           
  6912                           ; BSR set to: 0
  6913                           ;inc\CANlib.h: 314: TXB0EIDH = (unsigned char) tamp;
  6914  0018BE  C083  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  6915                           
  6916                           ; BSR set to: 0
  6917                           ;inc\CANlib.h: 316: TXB0SIDL = 0x00;
  6918  0018C2  0E00               	movlw	0
  6919  0018C4  010F               	movlb	15	; () banked
  6920  0018C6  6F42               	movwf	66,b	;volatile
  6921                           
  6922                           ; BSR set to: 15
  6923                           ;inc\CANlib.h: 317: TXB0SIDLbits.EXIDE = 0x01;
  6924  0018C8  010F               	movlb	15	; () banked
  6925  0018CA  8742               	bsf	66,3,b	;volatile
  6926                           
  6927                           ; BSR set to: 15
  6928                           ;inc\CANlib.h: 319: if (identifier & 0x00010000)
  6929  0018CC  0100               	movlb	0	; () banked
  6930  0018CE  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  6931  0018D0  D002               	goto	l361
  6932                           
  6933                           ; BSR set to: 0
  6934                           ;inc\CANlib.h: 320: TXB0SIDLbits.EID16 = 0x01;
  6935  0018D2  010F               	movlb	15	; () banked
  6936  0018D4  8142               	bsf	66,0,b	;volatile
  6937  0018D6                     l361:
  6938                           
  6939                           ;inc\CANlib.h: 321: if (identifier & 0x00020000)
  6940  0018D6  0100               	movlb	0	; () banked
  6941  0018D8  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  6942  0018DA  D002               	goto	l362
  6943                           
  6944                           ; BSR set to: 0
  6945                           ;inc\CANlib.h: 322: TXB0SIDLbits.EID17 = 0x01;
  6946  0018DC  010F               	movlb	15	; () banked
  6947  0018DE  8342               	bsf	66,1,b	;volatile
  6948  0018E0                     l362:
  6949                           
  6950                           ;inc\CANlib.h: 323: if (identifier & 0x00040000)
  6951  0018E0  0100               	movlb	0	; () banked
  6952  0018E2  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  6953  0018E4  D002               	goto	l363
  6954                           
  6955                           ; BSR set to: 0
  6956                           ;inc\CANlib.h: 324: TXB0SIDLbits.SID0 = 0x01;
  6957  0018E6  010F               	movlb	15	; () banked
  6958  0018E8  8B42               	bsf	66,5,b	;volatile
  6959  0018EA                     l363:
  6960                           
  6961                           ;inc\CANlib.h: 325: if (identifier & 0x00080000)
  6962  0018EA  0100               	movlb	0	; () banked
  6963  0018EC  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  6964  0018EE  D002               	goto	l364
  6965                           
  6966                           ; BSR set to: 0
  6967                           ;inc\CANlib.h: 326: TXB0SIDLbits.SID1 = 0x01;
  6968  0018F0  010F               	movlb	15	; () banked
  6969  0018F2  8D42               	bsf	66,6,b	;volatile
  6970  0018F4                     l364:
  6971                           
  6972                           ;inc\CANlib.h: 327: if (identifier & 0x00100000)
  6973  0018F4  0100               	movlb	0	; () banked
  6974  0018F6  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  6975  0018F8  D002               	goto	l3991
  6976                           
  6977                           ; BSR set to: 0
  6978                           ;inc\CANlib.h: 328: TXB0SIDLbits.SID2 = 0x01;
  6979  0018FA  010F               	movlb	15	; () banked
  6980  0018FC  8F42               	bsf	66,7,b	;volatile
  6981  0018FE                     l3991:
  6982                           
  6983                           ;inc\CANlib.h: 330: tamp = (identifier >> 21);
  6984  0018FE  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  6985  001902  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6986  001906  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6987  00190A  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6988  00190E  0E16               	movlw	22
  6989  001910  D006               	goto	u4370
  6990  001912                     u4375:
  6991  001912  0100               	movlb	0	; () banked
  6992  001914  90D8               	bcf	status,0,c
  6993  001916  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6994  001918  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6995  00191A  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6996  00191C  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  6997  00191E                     u4370:
  6998  00191E  2EE8               	decfsz	wreg,f,c
  6999  001920  D7F8               	goto	u4375
  7000  001922  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  7001  001926  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7002  00192A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7003  00192E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7004                           
  7005                           ; BSR set to: 0
  7006                           ;inc\CANlib.h: 331: tamp = tamp & 0x000000FF;
  7007  001932  0100               	movlb	0	; () banked
  7008  001934  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  7009  001936  0100               	movlb	0	; () banked
  7010  001938  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  7011  00193A  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  7012  00193C  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  7013  00193E  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  7014                           
  7015                           ; BSR set to: 0
  7016                           ;inc\CANlib.h: 332: TXB0SIDH = (unsigned char) tamp;
  7017  001940  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  7018                           
  7019                           ;inc\CANlib.h: 333: }
  7020  001944  D059               	goto	l4011
  7021  001946                     l360:
  7022                           
  7023                           ; BSR set to: 0
  7024                           ;inc\CANlib.h: 335: else
  7025                           ;inc\CANlib.h: 337: {
  7026                           ;inc\CANlib.h: 338: TXB0SIDLbits.EXIDE = 0x00;
  7027  001946  010F               	movlb	15	; () banked
  7028  001948  9742               	bcf	66,3,b	;volatile
  7029                           
  7030                           ; BSR set to: 15
  7031                           ;inc\CANlib.h: 340: tamp = (identifier >> 3);
  7032  00194A  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  7033  00194E  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  7034  001952  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  7035  001956  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  7036  00195A  0E04               	movlw	4
  7037  00195C  D006               	goto	u4380
  7038  00195E                     u4385:
  7039  00195E  0100               	movlb	0	; () banked
  7040  001960  90D8               	bcf	status,0,c
  7041  001962  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  7042  001964  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  7043  001966  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  7044  001968  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  7045  00196A                     u4380:
  7046  00196A  2EE8               	decfsz	wreg,f,c
  7047  00196C  D7F8               	goto	u4385
  7048  00196E  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  7049  001972  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7050  001976  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7051  00197A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7052                           
  7053                           ; BSR set to: 0
  7054                           ;inc\CANlib.h: 341: tamp = tamp & 0x000000FF;
  7055  00197E  0100               	movlb	0	; () banked
  7056  001980  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  7057  001982  0100               	movlb	0	; () banked
  7058  001984  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  7059  001986  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  7060  001988  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  7061  00198A  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  7062                           
  7063                           ; BSR set to: 0
  7064                           ;inc\CANlib.h: 342: TXB0SIDH = (unsigned char) tamp;
  7065  00198C  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  7066                           
  7067                           ; BSR set to: 0
  7068                           ;inc\CANlib.h: 344: tamp = identifier & 0x00000007;
  7069  001990  0E07               	movlw	7
  7070  001992  0100               	movlb	0	; () banked
  7071  001994  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  7072  001996  0100               	movlb	0	; () banked
  7073  001998  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  7074  00199A  0E00               	movlw	0
  7075  00199C  0100               	movlb	0	; () banked
  7076  00199E  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  7077  0019A0  0100               	movlb	0	; () banked
  7078  0019A2  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  7079  0019A4  0E00               	movlw	0
  7080  0019A6  0100               	movlb	0	; () banked
  7081  0019A8  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  7082  0019AA  0100               	movlb	0	; () banked
  7083  0019AC  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  7084  0019AE  0E00               	movlw	0
  7085  0019B0  0100               	movlb	0	; () banked
  7086  0019B2  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  7087  0019B4  0100               	movlb	0	; () banked
  7088  0019B6  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  7089                           
  7090                           ; BSR set to: 0
  7091                           ;inc\CANlib.h: 345: tamp = tamp << 5;
  7092  0019B8  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  7093  0019BC  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  7094  0019C0  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  7095  0019C4  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  7096  0019C8  0E05               	movlw	5
  7097  0019CA                     u4395:
  7098  0019CA  90D8               	bcf	status,0,c
  7099  0019CC  0100               	movlb	0	; () banked
  7100  0019CE  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  7101  0019D0  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  7102  0019D2  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  7103  0019D4  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  7104  0019D6  2EE8               	decfsz	wreg,f,c
  7105  0019D8  D7F8               	goto	u4395
  7106  0019DA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  7107  0019DE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7108  0019E2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7109  0019E6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7110                           
  7111                           ; BSR set to: 0
  7112                           ;inc\CANlib.h: 346: TXB0SIDL = TXB0SIDL & 0b00011111;
  7113  0019EA  010F               	movlb	15	; () banked
  7114  0019EC  5142               	movf	66,w,b	;volatile
  7115  0019EE  0B1F               	andlw	31
  7116  0019F0  010F               	movlb	15	; () banked
  7117  0019F2  6F42               	movwf	66,b	;volatile
  7118                           
  7119                           ; BSR set to: 15
  7120                           ;inc\CANlib.h: 347: TXB0SIDL = (unsigned char) tamp;
  7121  0019F4  C083  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  7122  0019F8                     l4011:
  7123                           
  7124                           ;inc\CANlib.h: 348: }
  7125                           ;inc\CANlib.h: 350: if (0b00000001 & flags)
  7126  0019F8  0100               	movlb	0	; () banked
  7127  0019FA  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  7128  0019FC  D003               	goto	l367
  7129                           
  7130                           ; BSR set to: 0
  7131                           ;inc\CANlib.h: 351: TXB0CONbits.TXPRI0 = 0x01;
  7132  0019FE  010F               	movlb	15	; () banked
  7133  001A00  8140               	bsf	64,0,b	;volatile
  7134  001A02  D002               	goto	l368
  7135  001A04                     l367:
  7136                           
  7137                           ; BSR set to: 0
  7138                           ;inc\CANlib.h: 352: else
  7139                           ;inc\CANlib.h: 353: TXB0CONbits.TXPRI0 = 0x00;
  7140  001A04  010F               	movlb	15	; () banked
  7141  001A06  9140               	bcf	64,0,b	;volatile
  7142  001A08                     l368:
  7143                           
  7144                           ; BSR set to: 15
  7145                           ;inc\CANlib.h: 354: if (0b00000010 & flags)
  7146  001A08  0100               	movlb	0	; () banked
  7147  001A0A  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  7148  001A0C  D003               	goto	l369
  7149                           
  7150                           ; BSR set to: 0
  7151                           ;inc\CANlib.h: 355: TXB0CONbits.TXPRI1 = 0x01;
  7152  001A0E  010F               	movlb	15	; () banked
  7153  001A10  8340               	bsf	64,1,b	;volatile
  7154  001A12  D002               	goto	l4017
  7155  001A14                     l369:
  7156                           
  7157                           ; BSR set to: 0
  7158                           ;inc\CANlib.h: 356: else
  7159                           ;inc\CANlib.h: 357: TXB0CONbits.TXPRI1 = 0x00;
  7160  001A14  010F               	movlb	15	; () banked
  7161  001A16  9340               	bcf	64,1,b	;volatile
  7162  001A18                     l4017:
  7163                           
  7164                           ; BSR set to: 15
  7165                           ;inc\CANlib.h: 359: TXB0D0 = data[0];
  7166  001A18  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  7167  001A1C  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  7168  001A20  50DF               	movf	indf2,w,c
  7169  001A22  010F               	movlb	15	; () banked
  7170  001A24  6F46               	movwf	70,b	;volatile
  7171                           
  7172                           ; BSR set to: 15
  7173                           ;inc\CANlib.h: 360: TXB0D1 = data[1];
  7174  001A26  0100               	movlb	0	; () banked
  7175  001A28  EE20 F001          	lfsr	2,1
  7176  001A2C  517B               	movf	CANsendMessage@data& (0+255),w,b
  7177  001A2E  26D9               	addwf	fsr2l,f,c
  7178  001A30  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7179  001A32  22DA               	addwfc	fsr2h,f,c
  7180  001A34  50DF               	movf	indf2,w,c
  7181  001A36  010F               	movlb	15	; () banked
  7182  001A38  6F47               	movwf	71,b	;volatile
  7183                           
  7184                           ; BSR set to: 15
  7185                           ;inc\CANlib.h: 361: TXB0D2 = data[2];
  7186  001A3A  0100               	movlb	0	; () banked
  7187  001A3C  EE20 F002          	lfsr	2,2
  7188  001A40  517B               	movf	CANsendMessage@data& (0+255),w,b
  7189  001A42  26D9               	addwf	fsr2l,f,c
  7190  001A44  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7191  001A46  22DA               	addwfc	fsr2h,f,c
  7192  001A48  50DF               	movf	indf2,w,c
  7193  001A4A  010F               	movlb	15	; () banked
  7194  001A4C  6F48               	movwf	72,b	;volatile
  7195                           
  7196                           ; BSR set to: 15
  7197                           ;inc\CANlib.h: 362: TXB0D3 = data[3];
  7198  001A4E  0100               	movlb	0	; () banked
  7199  001A50  EE20 F003          	lfsr	2,3
  7200  001A54  517B               	movf	CANsendMessage@data& (0+255),w,b
  7201  001A56  26D9               	addwf	fsr2l,f,c
  7202  001A58  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7203  001A5A  22DA               	addwfc	fsr2h,f,c
  7204  001A5C  50DF               	movf	indf2,w,c
  7205  001A5E  010F               	movlb	15	; () banked
  7206  001A60  6F49               	movwf	73,b	;volatile
  7207                           
  7208                           ; BSR set to: 15
  7209                           ;inc\CANlib.h: 363: TXB0D4 = data[4];
  7210  001A62  0100               	movlb	0	; () banked
  7211  001A64  EE20 F004          	lfsr	2,4
  7212  001A68  517B               	movf	CANsendMessage@data& (0+255),w,b
  7213  001A6A  26D9               	addwf	fsr2l,f,c
  7214  001A6C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7215  001A6E  22DA               	addwfc	fsr2h,f,c
  7216  001A70  50DF               	movf	indf2,w,c
  7217  001A72  010F               	movlb	15	; () banked
  7218  001A74  6F4A               	movwf	74,b	;volatile
  7219                           
  7220                           ; BSR set to: 15
  7221                           ;inc\CANlib.h: 364: TXB0D5 = data[5];
  7222  001A76  0100               	movlb	0	; () banked
  7223  001A78  EE20 F005          	lfsr	2,5
  7224  001A7C  517B               	movf	CANsendMessage@data& (0+255),w,b
  7225  001A7E  26D9               	addwf	fsr2l,f,c
  7226  001A80  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7227  001A82  22DA               	addwfc	fsr2h,f,c
  7228  001A84  50DF               	movf	indf2,w,c
  7229  001A86  010F               	movlb	15	; () banked
  7230  001A88  6F4B               	movwf	75,b	;volatile
  7231                           
  7232                           ; BSR set to: 15
  7233                           ;inc\CANlib.h: 365: TXB0D6 = data[6];
  7234  001A8A  0100               	movlb	0	; () banked
  7235  001A8C  EE20 F006          	lfsr	2,6
  7236  001A90  517B               	movf	CANsendMessage@data& (0+255),w,b
  7237  001A92  26D9               	addwf	fsr2l,f,c
  7238  001A94  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7239  001A96  22DA               	addwfc	fsr2h,f,c
  7240  001A98  50DF               	movf	indf2,w,c
  7241  001A9A  010F               	movlb	15	; () banked
  7242  001A9C  6F4C               	movwf	76,b	;volatile
  7243                           
  7244                           ; BSR set to: 15
  7245                           ;inc\CANlib.h: 366: TXB0D7 = data[7];
  7246  001A9E  0100               	movlb	0	; () banked
  7247  001AA0  EE20 F007          	lfsr	2,7
  7248  001AA4  517B               	movf	CANsendMessage@data& (0+255),w,b
  7249  001AA6  26D9               	addwf	fsr2l,f,c
  7250  001AA8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7251  001AAA  22DA               	addwfc	fsr2h,f,c
  7252  001AAC  50DF               	movf	indf2,w,c
  7253  001AAE  010F               	movlb	15	; () banked
  7254  001AB0  6F4D               	movwf	77,b	;volatile
  7255                           
  7256                           ; BSR set to: 15
  7257                           ;inc\CANlib.h: 368: TXB0CONbits.TXREQ = 0x01;
  7258  001AB2  010F               	movlb	15	; () banked
  7259  001AB4  8740               	bsf	64,3,b	;volatile
  7260                           
  7261                           ; BSR set to: 15
  7262                           ;inc\CANlib.h: 369: return;
  7263  001AB6  0012               	return	
  7264  001AB8                     l357:
  7265                           
  7266                           ; BSR set to: 15
  7267                           ;inc\CANlib.h: 370: }
  7268                           ;inc\CANlib.h: 374: if (TXB1CONbits.TXREQ == 0)
  7269  001AB8  010F               	movlb	15	; () banked
  7270  001ABA  B730               	btfsc	48,3,b	;volatile
  7271  001ABC  D13F               	goto	l372
  7272                           
  7273                           ; BSR set to: 15
  7274                           ;inc\CANlib.h: 375: { TXB1DLC = dataLength;
  7275  001ABE  C07D  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  7276                           
  7277                           ;inc\CANlib.h: 377: if (0b01000000 & flags)
  7278  001AC2  0100               	movlb	0	; () banked
  7279  001AC4  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  7280  001AC6  D003               	goto	l373
  7281                           
  7282                           ; BSR set to: 0
  7283                           ;inc\CANlib.h: 378: TXB1DLCbits.TXRTR = 0x01;
  7284  001AC8  010F               	movlb	15	; () banked
  7285  001ACA  8D35               	bsf	53,6,b	;volatile
  7286  001ACC  D002               	goto	l374
  7287  001ACE                     l373:
  7288                           
  7289                           ; BSR set to: 0
  7290                           ;inc\CANlib.h: 379: else
  7291                           ;inc\CANlib.h: 380: TXB1DLCbits.TXRTR = 0x00;
  7292  001ACE  010F               	movlb	15	; () banked
  7293  001AD0  9D35               	bcf	53,6,b	;volatile
  7294  001AD2                     l374:
  7295                           
  7296                           ; BSR set to: 15
  7297                           ;inc\CANlib.h: 382: if (CAN_TX_FRAME_MASK & flags)
  7298  001AD2  0100               	movlb	0	; () banked
  7299  001AD4  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  7300  001AD6  D079               	goto	l375
  7301                           
  7302                           ; BSR set to: 0
  7303                           ;inc\CANlib.h: 383: {
  7304                           ;inc\CANlib.h: 384: tamp = identifier & 0x000000FF;
  7305  001AD8  0100               	movlb	0	; () banked
  7306  001ADA  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  7307  001ADC  0100               	movlb	0	; () banked
  7308  001ADE  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  7309  001AE0  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  7310  001AE2  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  7311  001AE4  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  7312                           
  7313                           ; BSR set to: 0
  7314                           ;inc\CANlib.h: 385: TXB1EIDL = (unsigned char) tamp;
  7315  001AE6  C083  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  7316                           
  7317                           ; BSR set to: 0
  7318                           ;inc\CANlib.h: 387: tamp = identifier & 0x0000FF00;
  7319  001AEA  0E00               	movlw	0
  7320  001AEC  0100               	movlb	0	; () banked
  7321  001AEE  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  7322  001AF0  0100               	movlb	0	; () banked
  7323  001AF2  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  7324  001AF4  0EFF               	movlw	255
  7325  001AF6  0100               	movlb	0	; () banked
  7326  001AF8  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  7327  001AFA  0100               	movlb	0	; () banked
  7328  001AFC  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  7329  001AFE  0E00               	movlw	0
  7330  001B00  0100               	movlb	0	; () banked
  7331  001B02  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  7332  001B04  0100               	movlb	0	; () banked
  7333  001B06  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  7334  001B08  0E00               	movlw	0
  7335  001B0A  0100               	movlb	0	; () banked
  7336  001B0C  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  7337  001B0E  0100               	movlb	0	; () banked
  7338  001B10  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  7339                           
  7340                           ; BSR set to: 0
  7341                           ;inc\CANlib.h: 388: tamp = tamp >> 8;
  7342  001B12  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  7343  001B16  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  7344  001B1A  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  7345  001B1E  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  7346  001B22  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  7347  001B26  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  7348  001B2A  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  7349  001B2E  0100               	movlb	0	; () banked
  7350  001B30  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  7351  001B32  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  7352  001B36  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7353  001B3A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7354  001B3E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7355                           
  7356                           ; BSR set to: 0
  7357                           ;inc\CANlib.h: 389: TXB1EIDH = (unsigned char) tamp;
  7358  001B42  C083  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  7359                           
  7360                           ; BSR set to: 0
  7361                           ;inc\CANlib.h: 391: TXB1SIDL = 0x00;
  7362  001B46  0E00               	movlw	0
  7363  001B48  010F               	movlb	15	; () banked
  7364  001B4A  6F32               	movwf	50,b	;volatile
  7365                           
  7366                           ; BSR set to: 15
  7367                           ;inc\CANlib.h: 392: TXB1SIDLbits.EXIDE = 0x01;
  7368  001B4C  010F               	movlb	15	; () banked
  7369  001B4E  8732               	bsf	50,3,b	;volatile
  7370                           
  7371                           ; BSR set to: 15
  7372                           ;inc\CANlib.h: 394: if (identifier & 0x00010000)
  7373  001B50  0100               	movlb	0	; () banked
  7374  001B52  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  7375  001B54  D002               	goto	l376
  7376                           
  7377                           ; BSR set to: 0
  7378                           ;inc\CANlib.h: 395: TXB1SIDLbits.EID16 = 0x01;
  7379  001B56  010F               	movlb	15	; () banked
  7380  001B58  8132               	bsf	50,0,b	;volatile
  7381  001B5A                     l376:
  7382                           
  7383                           ;inc\CANlib.h: 396: if (identifier & 0x00020000)
  7384  001B5A  0100               	movlb	0	; () banked
  7385  001B5C  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  7386  001B5E  D002               	goto	l377
  7387                           
  7388                           ; BSR set to: 0
  7389                           ;inc\CANlib.h: 397: TXB1SIDLbits.EID17 = 0x01;
  7390  001B60  010F               	movlb	15	; () banked
  7391  001B62  8332               	bsf	50,1,b	;volatile
  7392  001B64                     l377:
  7393                           
  7394                           ;inc\CANlib.h: 398: if (identifier & 0x00040000)
  7395  001B64  0100               	movlb	0	; () banked
  7396  001B66  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  7397  001B68  D002               	goto	l378
  7398                           
  7399                           ; BSR set to: 0
  7400                           ;inc\CANlib.h: 399: TXB1SIDLbits.SID0 = 0x01;
  7401  001B6A  010F               	movlb	15	; () banked
  7402  001B6C  8B32               	bsf	50,5,b	;volatile
  7403  001B6E                     l378:
  7404                           
  7405                           ;inc\CANlib.h: 400: if (identifier & 0x00080000)
  7406  001B6E  0100               	movlb	0	; () banked
  7407  001B70  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  7408  001B72  D002               	goto	l379
  7409                           
  7410                           ; BSR set to: 0
  7411                           ;inc\CANlib.h: 401: TXB1SIDLbits.SID1 = 0x01;
  7412  001B74  010F               	movlb	15	; () banked
  7413  001B76  8D32               	bsf	50,6,b	;volatile
  7414  001B78                     l379:
  7415                           
  7416                           ;inc\CANlib.h: 402: if (identifier & 0x00100000)
  7417  001B78  0100               	movlb	0	; () banked
  7418  001B7A  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  7419  001B7C  D002               	goto	l4067
  7420                           
  7421                           ; BSR set to: 0
  7422                           ;inc\CANlib.h: 403: TXB1SIDLbits.SID2 = 0x01;
  7423  001B7E  010F               	movlb	15	; () banked
  7424  001B80  8F32               	bsf	50,7,b	;volatile
  7425  001B82                     l4067:
  7426                           
  7427                           ;inc\CANlib.h: 405: tamp = (identifier >> 21);
  7428  001B82  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  7429  001B86  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  7430  001B8A  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  7431  001B8E  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  7432  001B92  0E16               	movlw	22
  7433  001B94  D006               	goto	u4500
  7434  001B96                     u4505:
  7435  001B96  0100               	movlb	0	; () banked
  7436  001B98  90D8               	bcf	status,0,c
  7437  001B9A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  7438  001B9C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  7439  001B9E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  7440  001BA0  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  7441  001BA2                     u4500:
  7442  001BA2  2EE8               	decfsz	wreg,f,c
  7443  001BA4  D7F8               	goto	u4505
  7444  001BA6  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  7445  001BAA  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7446  001BAE  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7447  001BB2  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7448                           
  7449                           ; BSR set to: 0
  7450                           ;inc\CANlib.h: 406: tamp = tamp & 0x000000FF;
  7451  001BB6  0100               	movlb	0	; () banked
  7452  001BB8  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  7453  001BBA  0100               	movlb	0	; () banked
  7454  001BBC  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  7455  001BBE  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  7456  001BC0  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  7457  001BC2  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  7458                           
  7459                           ; BSR set to: 0
  7460                           ;inc\CANlib.h: 407: TXB1SIDH = (unsigned char) tamp;
  7461  001BC4  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  7462                           
  7463                           ;inc\CANlib.h: 408: }
  7464  001BC8  D059               	goto	l4087
  7465  001BCA                     l375:
  7466                           
  7467                           ; BSR set to: 0
  7468                           ;inc\CANlib.h: 410: else
  7469                           ;inc\CANlib.h: 412: {
  7470                           ;inc\CANlib.h: 413: TXB1SIDLbits.EXIDE = 0x00;
  7471  001BCA  010F               	movlb	15	; () banked
  7472  001BCC  9732               	bcf	50,3,b	;volatile
  7473                           
  7474                           ; BSR set to: 15
  7475                           ;inc\CANlib.h: 415: tamp = (identifier >> 3);
  7476  001BCE  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  7477  001BD2  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  7478  001BD6  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  7479  001BDA  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  7480  001BDE  0E04               	movlw	4
  7481  001BE0  D006               	goto	u4510
  7482  001BE2                     u4515:
  7483  001BE2  0100               	movlb	0	; () banked
  7484  001BE4  90D8               	bcf	status,0,c
  7485  001BE6  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  7486  001BE8  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  7487  001BEA  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  7488  001BEC  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  7489  001BEE                     u4510:
  7490  001BEE  2EE8               	decfsz	wreg,f,c
  7491  001BF0  D7F8               	goto	u4515
  7492  001BF2  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  7493  001BF6  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7494  001BFA  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7495  001BFE  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7496                           
  7497                           ; BSR set to: 0
  7498                           ;inc\CANlib.h: 416: tamp = tamp & 0x000000FF;
  7499  001C02  0100               	movlb	0	; () banked
  7500  001C04  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  7501  001C06  0100               	movlb	0	; () banked
  7502  001C08  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  7503  001C0A  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  7504  001C0C  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  7505  001C0E  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  7506                           
  7507                           ; BSR set to: 0
  7508                           ;inc\CANlib.h: 417: TXB1SIDH = (unsigned char) tamp;
  7509  001C10  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  7510                           
  7511                           ; BSR set to: 0
  7512                           ;inc\CANlib.h: 419: tamp = identifier & 0x00000007;
  7513  001C14  0E07               	movlw	7
  7514  001C16  0100               	movlb	0	; () banked
  7515  001C18  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  7516  001C1A  0100               	movlb	0	; () banked
  7517  001C1C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  7518  001C1E  0E00               	movlw	0
  7519  001C20  0100               	movlb	0	; () banked
  7520  001C22  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  7521  001C24  0100               	movlb	0	; () banked
  7522  001C26  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  7523  001C28  0E00               	movlw	0
  7524  001C2A  0100               	movlb	0	; () banked
  7525  001C2C  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  7526  001C2E  0100               	movlb	0	; () banked
  7527  001C30  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  7528  001C32  0E00               	movlw	0
  7529  001C34  0100               	movlb	0	; () banked
  7530  001C36  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  7531  001C38  0100               	movlb	0	; () banked
  7532  001C3A  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  7533                           
  7534                           ; BSR set to: 0
  7535                           ;inc\CANlib.h: 420: tamp = tamp << 5;
  7536  001C3C  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  7537  001C40  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  7538  001C44  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  7539  001C48  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  7540  001C4C  0E05               	movlw	5
  7541  001C4E                     u4525:
  7542  001C4E  90D8               	bcf	status,0,c
  7543  001C50  0100               	movlb	0	; () banked
  7544  001C52  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  7545  001C54  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  7546  001C56  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  7547  001C58  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  7548  001C5A  2EE8               	decfsz	wreg,f,c
  7549  001C5C  D7F8               	goto	u4525
  7550  001C5E  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  7551  001C62  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7552  001C66  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7553  001C6A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7554                           
  7555                           ; BSR set to: 0
  7556                           ;inc\CANlib.h: 421: TXB1SIDL = TXB1SIDL & 0b00011111;
  7557  001C6E  010F               	movlb	15	; () banked
  7558  001C70  5132               	movf	50,w,b	;volatile
  7559  001C72  0B1F               	andlw	31
  7560  001C74  010F               	movlb	15	; () banked
  7561  001C76  6F32               	movwf	50,b	;volatile
  7562                           
  7563                           ; BSR set to: 15
  7564                           ;inc\CANlib.h: 422: TXB1SIDL = (unsigned char) tamp;
  7565  001C78  C083  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  7566  001C7C                     l4087:
  7567                           
  7568                           ;inc\CANlib.h: 423: }
  7569                           ;inc\CANlib.h: 425: if (0b00000001 & flags)
  7570  001C7C  0100               	movlb	0	; () banked
  7571  001C7E  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  7572  001C80  D003               	goto	l382
  7573                           
  7574                           ; BSR set to: 0
  7575                           ;inc\CANlib.h: 426: TXB1CONbits.TXPRI0 = 0x01;
  7576  001C82  010F               	movlb	15	; () banked
  7577  001C84  8130               	bsf	48,0,b	;volatile
  7578  001C86  D002               	goto	l383
  7579  001C88                     l382:
  7580                           
  7581                           ; BSR set to: 0
  7582                           ;inc\CANlib.h: 427: else
  7583                           ;inc\CANlib.h: 428: TXB1CONbits.TXPRI0 = 0x00;
  7584  001C88  010F               	movlb	15	; () banked
  7585  001C8A  9130               	bcf	48,0,b	;volatile
  7586  001C8C                     l383:
  7587                           
  7588                           ; BSR set to: 15
  7589                           ;inc\CANlib.h: 429: if (0b00000010 & flags)
  7590  001C8C  0100               	movlb	0	; () banked
  7591  001C8E  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  7592  001C90  D003               	goto	l384
  7593                           
  7594                           ; BSR set to: 0
  7595                           ;inc\CANlib.h: 430: TXB1CONbits.TXPRI1 = 0x01;
  7596  001C92  010F               	movlb	15	; () banked
  7597  001C94  8330               	bsf	48,1,b	;volatile
  7598  001C96  D002               	goto	l4093
  7599  001C98                     l384:
  7600                           
  7601                           ; BSR set to: 0
  7602                           ;inc\CANlib.h: 431: else
  7603                           ;inc\CANlib.h: 432: TXB1CONbits.TXPRI1 = 0x00;
  7604  001C98  010F               	movlb	15	; () banked
  7605  001C9A  9330               	bcf	48,1,b	;volatile
  7606  001C9C                     l4093:
  7607                           
  7608                           ; BSR set to: 15
  7609                           ;inc\CANlib.h: 434: TXB1D0 = data[0];
  7610  001C9C  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  7611  001CA0  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  7612  001CA4  50DF               	movf	indf2,w,c
  7613  001CA6  010F               	movlb	15	; () banked
  7614  001CA8  6F36               	movwf	54,b	;volatile
  7615                           
  7616                           ; BSR set to: 15
  7617                           ;inc\CANlib.h: 435: TXB1D1 = data[1];
  7618  001CAA  0100               	movlb	0	; () banked
  7619  001CAC  EE20 F001          	lfsr	2,1
  7620  001CB0  517B               	movf	CANsendMessage@data& (0+255),w,b
  7621  001CB2  26D9               	addwf	fsr2l,f,c
  7622  001CB4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7623  001CB6  22DA               	addwfc	fsr2h,f,c
  7624  001CB8  50DF               	movf	indf2,w,c
  7625  001CBA  010F               	movlb	15	; () banked
  7626  001CBC  6F37               	movwf	55,b	;volatile
  7627                           
  7628                           ; BSR set to: 15
  7629                           ;inc\CANlib.h: 436: TXB1D2 = data[2];
  7630  001CBE  0100               	movlb	0	; () banked
  7631  001CC0  EE20 F002          	lfsr	2,2
  7632  001CC4  517B               	movf	CANsendMessage@data& (0+255),w,b
  7633  001CC6  26D9               	addwf	fsr2l,f,c
  7634  001CC8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7635  001CCA  22DA               	addwfc	fsr2h,f,c
  7636  001CCC  50DF               	movf	indf2,w,c
  7637  001CCE  010F               	movlb	15	; () banked
  7638  001CD0  6F38               	movwf	56,b	;volatile
  7639                           
  7640                           ; BSR set to: 15
  7641                           ;inc\CANlib.h: 437: TXB1D3 = data[3];
  7642  001CD2  0100               	movlb	0	; () banked
  7643  001CD4  EE20 F003          	lfsr	2,3
  7644  001CD8  517B               	movf	CANsendMessage@data& (0+255),w,b
  7645  001CDA  26D9               	addwf	fsr2l,f,c
  7646  001CDC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7647  001CDE  22DA               	addwfc	fsr2h,f,c
  7648  001CE0  50DF               	movf	indf2,w,c
  7649  001CE2  010F               	movlb	15	; () banked
  7650  001CE4  6F39               	movwf	57,b	;volatile
  7651                           
  7652                           ; BSR set to: 15
  7653                           ;inc\CANlib.h: 438: TXB1D4 = data[4];
  7654  001CE6  0100               	movlb	0	; () banked
  7655  001CE8  EE20 F004          	lfsr	2,4
  7656  001CEC  517B               	movf	CANsendMessage@data& (0+255),w,b
  7657  001CEE  26D9               	addwf	fsr2l,f,c
  7658  001CF0  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7659  001CF2  22DA               	addwfc	fsr2h,f,c
  7660  001CF4  50DF               	movf	indf2,w,c
  7661  001CF6  010F               	movlb	15	; () banked
  7662  001CF8  6F3A               	movwf	58,b	;volatile
  7663                           
  7664                           ; BSR set to: 15
  7665                           ;inc\CANlib.h: 439: TXB1D5 = data[5];
  7666  001CFA  0100               	movlb	0	; () banked
  7667  001CFC  EE20 F005          	lfsr	2,5
  7668  001D00  517B               	movf	CANsendMessage@data& (0+255),w,b
  7669  001D02  26D9               	addwf	fsr2l,f,c
  7670  001D04  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7671  001D06  22DA               	addwfc	fsr2h,f,c
  7672  001D08  50DF               	movf	indf2,w,c
  7673  001D0A  010F               	movlb	15	; () banked
  7674  001D0C  6F3B               	movwf	59,b	;volatile
  7675                           
  7676                           ; BSR set to: 15
  7677                           ;inc\CANlib.h: 440: TXB1D6 = data[6];
  7678  001D0E  0100               	movlb	0	; () banked
  7679  001D10  EE20 F006          	lfsr	2,6
  7680  001D14  517B               	movf	CANsendMessage@data& (0+255),w,b
  7681  001D16  26D9               	addwf	fsr2l,f,c
  7682  001D18  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7683  001D1A  22DA               	addwfc	fsr2h,f,c
  7684  001D1C  50DF               	movf	indf2,w,c
  7685  001D1E  010F               	movlb	15	; () banked
  7686  001D20  6F3C               	movwf	60,b	;volatile
  7687                           
  7688                           ; BSR set to: 15
  7689                           ;inc\CANlib.h: 441: TXB1D7 = data[7];
  7690  001D22  0100               	movlb	0	; () banked
  7691  001D24  EE20 F007          	lfsr	2,7
  7692  001D28  517B               	movf	CANsendMessage@data& (0+255),w,b
  7693  001D2A  26D9               	addwf	fsr2l,f,c
  7694  001D2C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7695  001D2E  22DA               	addwfc	fsr2h,f,c
  7696  001D30  50DF               	movf	indf2,w,c
  7697  001D32  010F               	movlb	15	; () banked
  7698  001D34  6F3D               	movwf	61,b	;volatile
  7699                           
  7700                           ; BSR set to: 15
  7701                           ;inc\CANlib.h: 443: TXB1CONbits.TXREQ = 0x01;
  7702  001D36  010F               	movlb	15	; () banked
  7703  001D38  8730               	bsf	48,3,b	;volatile
  7704                           
  7705                           ; BSR set to: 15
  7706                           ;inc\CANlib.h: 445: return;
  7707  001D3A  0012               	return	
  7708  001D3C                     l372:
  7709                           
  7710                           ; BSR set to: 15
  7711                           ;inc\CANlib.h: 446: }
  7712                           ;inc\CANlib.h: 450: if (TXB2CONbits.TXREQ == 0)
  7713  001D3C  010F               	movlb	15	; () banked
  7714  001D3E  B720               	btfsc	32,3,b	;volatile
  7715  001D40  0012               	return	
  7716                           
  7717                           ; BSR set to: 15
  7718                           ;inc\CANlib.h: 451: { TXB2DLC = dataLength;
  7719  001D42  C07D  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  7720                           
  7721                           ;inc\CANlib.h: 453: if (0b01000000 & flags)
  7722  001D46  0100               	movlb	0	; () banked
  7723  001D48  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  7724  001D4A  D003               	goto	l387
  7725                           
  7726                           ; BSR set to: 0
  7727                           ;inc\CANlib.h: 454: TXB2DLCbits.TXRTR = 0x01;
  7728  001D4C  010F               	movlb	15	; () banked
  7729  001D4E  8D25               	bsf	37,6,b	;volatile
  7730  001D50  D002               	goto	l388
  7731  001D52                     l387:
  7732                           
  7733                           ; BSR set to: 0
  7734                           ;inc\CANlib.h: 455: else
  7735                           ;inc\CANlib.h: 456: TXB2DLCbits.TXRTR = 0x00;
  7736  001D52  010F               	movlb	15	; () banked
  7737  001D54  9D25               	bcf	37,6,b	;volatile
  7738  001D56                     l388:
  7739                           
  7740                           ; BSR set to: 15
  7741                           ;inc\CANlib.h: 458: if (CAN_TX_FRAME_MASK & flags)
  7742  001D56  0100               	movlb	0	; () banked
  7743  001D58  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  7744  001D5A  D079               	goto	l389
  7745                           
  7746                           ; BSR set to: 0
  7747                           ;inc\CANlib.h: 459: {
  7748                           ;inc\CANlib.h: 460: tamp = identifier & 0x000000FF;
  7749  001D5C  0100               	movlb	0	; () banked
  7750  001D5E  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  7751  001D60  0100               	movlb	0	; () banked
  7752  001D62  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  7753  001D64  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  7754  001D66  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  7755  001D68  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  7756                           
  7757                           ; BSR set to: 0
  7758                           ;inc\CANlib.h: 461: TXB2EIDL = (unsigned char) tamp;
  7759  001D6A  C083  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  7760                           
  7761                           ; BSR set to: 0
  7762                           ;inc\CANlib.h: 463: tamp = identifier & 0x0000FF00;
  7763  001D6E  0E00               	movlw	0
  7764  001D70  0100               	movlb	0	; () banked
  7765  001D72  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  7766  001D74  0100               	movlb	0	; () banked
  7767  001D76  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  7768  001D78  0EFF               	movlw	255
  7769  001D7A  0100               	movlb	0	; () banked
  7770  001D7C  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  7771  001D7E  0100               	movlb	0	; () banked
  7772  001D80  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  7773  001D82  0E00               	movlw	0
  7774  001D84  0100               	movlb	0	; () banked
  7775  001D86  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  7776  001D88  0100               	movlb	0	; () banked
  7777  001D8A  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  7778  001D8C  0E00               	movlw	0
  7779  001D8E  0100               	movlb	0	; () banked
  7780  001D90  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  7781  001D92  0100               	movlb	0	; () banked
  7782  001D94  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  7783                           
  7784                           ; BSR set to: 0
  7785                           ;inc\CANlib.h: 464: tamp = tamp >> 8;
  7786  001D96  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  7787  001D9A  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  7788  001D9E  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  7789  001DA2  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  7790  001DA6  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  7791  001DAA  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  7792  001DAE  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  7793  001DB2  0100               	movlb	0	; () banked
  7794  001DB4  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  7795  001DB6  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  7796  001DBA  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7797  001DBE  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7798  001DC2  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7799                           
  7800                           ; BSR set to: 0
  7801                           ;inc\CANlib.h: 465: TXB2EIDH = (unsigned char) tamp;
  7802  001DC6  C083  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  7803                           
  7804                           ; BSR set to: 0
  7805                           ;inc\CANlib.h: 467: TXB2SIDL = 0x00;
  7806  001DCA  0E00               	movlw	0
  7807  001DCC  010F               	movlb	15	; () banked
  7808  001DCE  6F22               	movwf	34,b	;volatile
  7809                           
  7810                           ; BSR set to: 15
  7811                           ;inc\CANlib.h: 468: TXB2SIDLbits.EXIDE = 0x01;
  7812  001DD0  010F               	movlb	15	; () banked
  7813  001DD2  8722               	bsf	34,3,b	;volatile
  7814                           
  7815                           ; BSR set to: 15
  7816                           ;inc\CANlib.h: 470: if (identifier & 0x00010000)
  7817  001DD4  0100               	movlb	0	; () banked
  7818  001DD6  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  7819  001DD8  D002               	goto	l390
  7820                           
  7821                           ; BSR set to: 0
  7822                           ;inc\CANlib.h: 471: TXB2SIDLbits.EID16 = 0x01;
  7823  001DDA  010F               	movlb	15	; () banked
  7824  001DDC  8122               	bsf	34,0,b	;volatile
  7825  001DDE                     l390:
  7826                           
  7827                           ;inc\CANlib.h: 472: if (identifier & 0x00020000)
  7828  001DDE  0100               	movlb	0	; () banked
  7829  001DE0  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  7830  001DE2  D002               	goto	l391
  7831                           
  7832                           ; BSR set to: 0
  7833                           ;inc\CANlib.h: 473: TXB2SIDLbits.EID17 = 0x01;
  7834  001DE4  010F               	movlb	15	; () banked
  7835  001DE6  8322               	bsf	34,1,b	;volatile
  7836  001DE8                     l391:
  7837                           
  7838                           ;inc\CANlib.h: 474: if (identifier & 0x00040000)
  7839  001DE8  0100               	movlb	0	; () banked
  7840  001DEA  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  7841  001DEC  D002               	goto	l392
  7842                           
  7843                           ; BSR set to: 0
  7844                           ;inc\CANlib.h: 475: TXB2SIDLbits.SID0 = 0x01;
  7845  001DEE  010F               	movlb	15	; () banked
  7846  001DF0  8B22               	bsf	34,5,b	;volatile
  7847  001DF2                     l392:
  7848                           
  7849                           ;inc\CANlib.h: 476: if (identifier & 0x00080000)
  7850  001DF2  0100               	movlb	0	; () banked
  7851  001DF4  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  7852  001DF6  D002               	goto	l393
  7853                           
  7854                           ; BSR set to: 0
  7855                           ;inc\CANlib.h: 477: TXB2SIDLbits.SID1 = 0x01;
  7856  001DF8  010F               	movlb	15	; () banked
  7857  001DFA  8D22               	bsf	34,6,b	;volatile
  7858  001DFC                     l393:
  7859                           
  7860                           ;inc\CANlib.h: 478: if (identifier & 0x00100000)
  7861  001DFC  0100               	movlb	0	; () banked
  7862  001DFE  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  7863  001E00  D002               	goto	l4143
  7864                           
  7865                           ; BSR set to: 0
  7866                           ;inc\CANlib.h: 479: TXB2SIDLbits.SID2 = 0x01;
  7867  001E02  010F               	movlb	15	; () banked
  7868  001E04  8F22               	bsf	34,7,b	;volatile
  7869  001E06                     l4143:
  7870                           
  7871                           ;inc\CANlib.h: 481: tamp = (identifier >> 21);
  7872  001E06  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  7873  001E0A  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  7874  001E0E  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  7875  001E12  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  7876  001E16  0E16               	movlw	22
  7877  001E18  D006               	goto	u4630
  7878  001E1A                     u4635:
  7879  001E1A  0100               	movlb	0	; () banked
  7880  001E1C  90D8               	bcf	status,0,c
  7881  001E1E  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  7882  001E20  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  7883  001E22  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  7884  001E24  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  7885  001E26                     u4630:
  7886  001E26  2EE8               	decfsz	wreg,f,c
  7887  001E28  D7F8               	goto	u4635
  7888  001E2A  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  7889  001E2E  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7890  001E32  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7891  001E36  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7892                           
  7893                           ; BSR set to: 0
  7894                           ;inc\CANlib.h: 482: tamp = tamp & 0x000000FF;
  7895  001E3A  0100               	movlb	0	; () banked
  7896  001E3C  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  7897  001E3E  0100               	movlb	0	; () banked
  7898  001E40  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  7899  001E42  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  7900  001E44  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  7901  001E46  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  7902                           
  7903                           ; BSR set to: 0
  7904                           ;inc\CANlib.h: 483: TXB2SIDH = (unsigned char) tamp;
  7905  001E48  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  7906                           
  7907                           ;inc\CANlib.h: 484: }
  7908  001E4C  D059               	goto	l4163
  7909  001E4E                     l389:
  7910                           
  7911                           ; BSR set to: 0
  7912                           ;inc\CANlib.h: 486: else
  7913                           ;inc\CANlib.h: 488: {
  7914                           ;inc\CANlib.h: 489: TXB2SIDLbits.EXIDE = 0x00;
  7915  001E4E  010F               	movlb	15	; () banked
  7916  001E50  9722               	bcf	34,3,b	;volatile
  7917                           
  7918                           ; BSR set to: 15
  7919                           ;inc\CANlib.h: 491: tamp = (identifier >> 3);
  7920  001E52  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  7921  001E56  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  7922  001E5A  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  7923  001E5E  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  7924  001E62  0E04               	movlw	4
  7925  001E64  D006               	goto	u4640
  7926  001E66                     u4645:
  7927  001E66  0100               	movlb	0	; () banked
  7928  001E68  90D8               	bcf	status,0,c
  7929  001E6A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  7930  001E6C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  7931  001E6E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  7932  001E70  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  7933  001E72                     u4640:
  7934  001E72  2EE8               	decfsz	wreg,f,c
  7935  001E74  D7F8               	goto	u4645
  7936  001E76  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  7937  001E7A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7938  001E7E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7939  001E82  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7940                           
  7941                           ; BSR set to: 0
  7942                           ;inc\CANlib.h: 492: tamp = tamp & 0x000000FF;
  7943  001E86  0100               	movlb	0	; () banked
  7944  001E88  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  7945  001E8A  0100               	movlb	0	; () banked
  7946  001E8C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  7947  001E8E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  7948  001E90  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  7949  001E92  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  7950                           
  7951                           ; BSR set to: 0
  7952                           ;inc\CANlib.h: 493: TXB2SIDH = (unsigned char) tamp;
  7953  001E94  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  7954                           
  7955                           ; BSR set to: 0
  7956                           ;inc\CANlib.h: 495: tamp = identifier & 0x00000007;
  7957  001E98  0E07               	movlw	7
  7958  001E9A  0100               	movlb	0	; () banked
  7959  001E9C  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  7960  001E9E  0100               	movlb	0	; () banked
  7961  001EA0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  7962  001EA2  0E00               	movlw	0
  7963  001EA4  0100               	movlb	0	; () banked
  7964  001EA6  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  7965  001EA8  0100               	movlb	0	; () banked
  7966  001EAA  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  7967  001EAC  0E00               	movlw	0
  7968  001EAE  0100               	movlb	0	; () banked
  7969  001EB0  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  7970  001EB2  0100               	movlb	0	; () banked
  7971  001EB4  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  7972  001EB6  0E00               	movlw	0
  7973  001EB8  0100               	movlb	0	; () banked
  7974  001EBA  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  7975  001EBC  0100               	movlb	0	; () banked
  7976  001EBE  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  7977                           
  7978                           ; BSR set to: 0
  7979                           ;inc\CANlib.h: 496: tamp = tamp << 5;
  7980  001EC0  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  7981  001EC4  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  7982  001EC8  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  7983  001ECC  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  7984  001ED0  0E05               	movlw	5
  7985  001ED2                     u4655:
  7986  001ED2  90D8               	bcf	status,0,c
  7987  001ED4  0100               	movlb	0	; () banked
  7988  001ED6  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  7989  001ED8  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  7990  001EDA  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  7991  001EDC  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  7992  001EDE  2EE8               	decfsz	wreg,f,c
  7993  001EE0  D7F8               	goto	u4655
  7994  001EE2  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  7995  001EE6  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7996  001EEA  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7997  001EEE  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7998                           
  7999                           ; BSR set to: 0
  8000                           ;inc\CANlib.h: 497: TXB2SIDL = TXB2SIDL & 0b00011111;
  8001  001EF2  010F               	movlb	15	; () banked
  8002  001EF4  5122               	movf	34,w,b	;volatile
  8003  001EF6  0B1F               	andlw	31
  8004  001EF8  010F               	movlb	15	; () banked
  8005  001EFA  6F22               	movwf	34,b	;volatile
  8006                           
  8007                           ; BSR set to: 15
  8008                           ;inc\CANlib.h: 498: TXB2SIDL = (unsigned char) tamp;
  8009  001EFC  C083  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  8010  001F00                     l4163:
  8011                           
  8012                           ;inc\CANlib.h: 499: }
  8013                           ;inc\CANlib.h: 501: if (0b00000001 & flags)
  8014  001F00  0100               	movlb	0	; () banked
  8015  001F02  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  8016  001F04  D003               	goto	l396
  8017                           
  8018                           ; BSR set to: 0
  8019                           ;inc\CANlib.h: 502: TXB2CONbits.TXPRI0 = 0x01;
  8020  001F06  010F               	movlb	15	; () banked
  8021  001F08  8120               	bsf	32,0,b	;volatile
  8022  001F0A  D002               	goto	l397
  8023  001F0C                     l396:
  8024                           
  8025                           ; BSR set to: 0
  8026                           ;inc\CANlib.h: 503: else
  8027                           ;inc\CANlib.h: 504: TXB2CONbits.TXPRI0 = 0x00;
  8028  001F0C  010F               	movlb	15	; () banked
  8029  001F0E  9120               	bcf	32,0,b	;volatile
  8030  001F10                     l397:
  8031                           
  8032                           ; BSR set to: 15
  8033                           ;inc\CANlib.h: 505: if (0b00000010 & flags)
  8034  001F10  0100               	movlb	0	; () banked
  8035  001F12  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  8036  001F14  D003               	goto	l398
  8037                           
  8038                           ; BSR set to: 0
  8039                           ;inc\CANlib.h: 506: TXB2CONbits.TXPRI1 = 0x01;
  8040  001F16  010F               	movlb	15	; () banked
  8041  001F18  8320               	bsf	32,1,b	;volatile
  8042  001F1A  D002               	goto	l4169
  8043  001F1C                     l398:
  8044                           
  8045                           ; BSR set to: 0
  8046                           ;inc\CANlib.h: 507: else
  8047                           ;inc\CANlib.h: 508: TXB2CONbits.TXPRI1 = 0x00;
  8048  001F1C  010F               	movlb	15	; () banked
  8049  001F1E  9320               	bcf	32,1,b	;volatile
  8050  001F20                     l4169:
  8051                           
  8052                           ; BSR set to: 15
  8053                           ;inc\CANlib.h: 510: TXB2D0 = data[0];
  8054  001F20  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  8055  001F24  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  8056  001F28  50DF               	movf	indf2,w,c
  8057  001F2A  010F               	movlb	15	; () banked
  8058  001F2C  6F26               	movwf	38,b	;volatile
  8059                           
  8060                           ; BSR set to: 15
  8061                           ;inc\CANlib.h: 511: TXB2D1 = data[1];
  8062  001F2E  0100               	movlb	0	; () banked
  8063  001F30  EE20 F001          	lfsr	2,1
  8064  001F34  517B               	movf	CANsendMessage@data& (0+255),w,b
  8065  001F36  26D9               	addwf	fsr2l,f,c
  8066  001F38  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  8067  001F3A  22DA               	addwfc	fsr2h,f,c
  8068  001F3C  50DF               	movf	indf2,w,c
  8069  001F3E  010F               	movlb	15	; () banked
  8070  001F40  6F27               	movwf	39,b	;volatile
  8071                           
  8072                           ; BSR set to: 15
  8073                           ;inc\CANlib.h: 512: TXB2D2 = data[2];
  8074  001F42  0100               	movlb	0	; () banked
  8075  001F44  EE20 F002          	lfsr	2,2
  8076  001F48  517B               	movf	CANsendMessage@data& (0+255),w,b
  8077  001F4A  26D9               	addwf	fsr2l,f,c
  8078  001F4C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  8079  001F4E  22DA               	addwfc	fsr2h,f,c
  8080  001F50  50DF               	movf	indf2,w,c
  8081  001F52  010F               	movlb	15	; () banked
  8082  001F54  6F28               	movwf	40,b	;volatile
  8083                           
  8084                           ; BSR set to: 15
  8085                           ;inc\CANlib.h: 513: TXB2D3 = data[3];
  8086  001F56  0100               	movlb	0	; () banked
  8087  001F58  EE20 F003          	lfsr	2,3
  8088  001F5C  517B               	movf	CANsendMessage@data& (0+255),w,b
  8089  001F5E  26D9               	addwf	fsr2l,f,c
  8090  001F60  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  8091  001F62  22DA               	addwfc	fsr2h,f,c
  8092  001F64  50DF               	movf	indf2,w,c
  8093  001F66  010F               	movlb	15	; () banked
  8094  001F68  6F29               	movwf	41,b	;volatile
  8095                           
  8096                           ; BSR set to: 15
  8097                           ;inc\CANlib.h: 514: TXB2D4 = data[4];
  8098  001F6A  0100               	movlb	0	; () banked
  8099  001F6C  EE20 F004          	lfsr	2,4
  8100  001F70  517B               	movf	CANsendMessage@data& (0+255),w,b
  8101  001F72  26D9               	addwf	fsr2l,f,c
  8102  001F74  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  8103  001F76  22DA               	addwfc	fsr2h,f,c
  8104  001F78  50DF               	movf	indf2,w,c
  8105  001F7A  010F               	movlb	15	; () banked
  8106  001F7C  6F2A               	movwf	42,b	;volatile
  8107                           
  8108                           ; BSR set to: 15
  8109                           ;inc\CANlib.h: 515: TXB2D5 = data[5];
  8110  001F7E  0100               	movlb	0	; () banked
  8111  001F80  EE20 F005          	lfsr	2,5
  8112  001F84  517B               	movf	CANsendMessage@data& (0+255),w,b
  8113  001F86  26D9               	addwf	fsr2l,f,c
  8114  001F88  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  8115  001F8A  22DA               	addwfc	fsr2h,f,c
  8116  001F8C  50DF               	movf	indf2,w,c
  8117  001F8E  010F               	movlb	15	; () banked
  8118  001F90  6F2B               	movwf	43,b	;volatile
  8119                           
  8120                           ; BSR set to: 15
  8121                           ;inc\CANlib.h: 516: TXB2D6 = data[6];
  8122  001F92  0100               	movlb	0	; () banked
  8123  001F94  EE20 F006          	lfsr	2,6
  8124  001F98  517B               	movf	CANsendMessage@data& (0+255),w,b
  8125  001F9A  26D9               	addwf	fsr2l,f,c
  8126  001F9C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  8127  001F9E  22DA               	addwfc	fsr2h,f,c
  8128  001FA0  50DF               	movf	indf2,w,c
  8129  001FA2  010F               	movlb	15	; () banked
  8130  001FA4  6F2C               	movwf	44,b	;volatile
  8131                           
  8132                           ; BSR set to: 15
  8133                           ;inc\CANlib.h: 517: TXB2D7 = data[7];
  8134  001FA6  0100               	movlb	0	; () banked
  8135  001FA8  EE20 F007          	lfsr	2,7
  8136  001FAC  517B               	movf	CANsendMessage@data& (0+255),w,b
  8137  001FAE  26D9               	addwf	fsr2l,f,c
  8138  001FB0  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  8139  001FB2  22DA               	addwfc	fsr2h,f,c
  8140  001FB4  50DF               	movf	indf2,w,c
  8141  001FB6  010F               	movlb	15	; () banked
  8142  001FB8  6F2D               	movwf	45,b	;volatile
  8143                           
  8144                           ; BSR set to: 15
  8145                           ;inc\CANlib.h: 519: TXB2CONbits.TXREQ = 0x01;
  8146  001FBA  010F               	movlb	15	; () banked
  8147  001FBC  8720               	bsf	32,3,b	;volatile
  8148                           
  8149                           ; BSR set to: 15
  8150                           ;inc\CANlib.h: 521: return;
  8151  001FBE  0012               	return	
  8152  001FC0                     __end_of_CANsendMessage:
  8153                           	opt stack 0
  8154                           tblptru	equ	0xFF8
  8155                           tblptrh	equ	0xFF7
  8156                           tblptrl	equ	0xFF6
  8157                           tablat	equ	0xFF5
  8158                           prodh	equ	0xFF4
  8159                           prodl	equ	0xFF3
  8160                           postinc0	equ	0xFEE
  8161                           wreg	equ	0xFE8
  8162                           indf2	equ	0xFDF
  8163                           postinc2	equ	0xFDE
  8164                           postdec2	equ	0xFDD
  8165                           fsr2h	equ	0xFDA
  8166                           fsr2l	equ	0xFD9
  8167                           status	equ	0xFD8
  8168                           
  8169 ;; *************** function _CANisTxReady *****************
  8170 ;; Defined at:
  8171 ;;		line 1155 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  8172 ;; Parameters:    Size  Location     Type
  8173 ;;		None
  8174 ;; Auto vars:     Size  Location     Type
  8175 ;;		None
  8176 ;; Return value:  Size  Location     Type
  8177 ;;                  1    wreg      unsigned char 
  8178 ;; Registers used:
  8179 ;;		wreg, status,2
  8180 ;; Tracked objects:
  8181 ;;		On entry : 0/0
  8182 ;;		On exit  : 0/0
  8183 ;;		Unchanged: 0/0
  8184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8186 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8188 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8189 ;;Total ram usage:        1 bytes
  8190 ;; Hardware stack levels used:    1
  8191 ;; Hardware stack levels required when called:    4
  8192 ;; This function calls:
  8193 ;;		Nothing
  8194 ;; This function is called by:
  8195 ;;		_park_search
  8196 ;;		_can_send
  8197 ;; This function uses a non-reentrant model
  8198 ;;
  8199                           
  8200                           	psect	text19
  8201  004E4E                     __ptext19:
  8202                           	opt stack 0
  8203  004E4E                     _CANisTxReady:
  8204                           	opt stack 23
  8205                           
  8206                           ;inc\CANlib.h: 1157: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  8207                           
  8208                           ; BSR set to: 15
  8209                           ;incstack = 0
  8210  004E4E  0E01               	movlw	1
  8211  004E50  0100               	movlb	0	; () banked
  8212  004E52  6F77               	movwf	_CANisTxReady$2808& (0+255),b
  8213                           
  8214                           ; BSR set to: 0
  8215  004E54  010F               	movlb	15	; () banked
  8216  004E56  A740               	btfss	64,3,b	;volatile
  8217  004E58  D009               	goto	l550
  8218                           
  8219                           ; BSR set to: 15
  8220  004E5A  010F               	movlb	15	; () banked
  8221  004E5C  A730               	btfss	48,3,b	;volatile
  8222  004E5E  D006               	goto	l550
  8223                           
  8224                           ; BSR set to: 15
  8225  004E60  010F               	movlb	15	; () banked
  8226  004E62  A720               	btfss	32,3,b	;volatile
  8227  004E64  D003               	goto	l550
  8228                           
  8229                           ; BSR set to: 15
  8230  004E66  0E00               	movlw	0
  8231  004E68  0100               	movlb	0	; () banked
  8232  004E6A  6F77               	movwf	_CANisTxReady$2808& (0+255),b
  8233  004E6C                     l550:
  8234  004E6C  0100               	movlb	0	; () banked
  8235  004E6E  5177               	movf	_CANisTxReady$2808& (0+255),w,b
  8236  004E70  0012               	return	
  8237  004E72                     __end_of_CANisTxReady:
  8238                           	opt stack 0
  8239                           tblptru	equ	0xFF8
  8240                           tblptrh	equ	0xFF7
  8241                           tblptrl	equ	0xFF6
  8242                           tablat	equ	0xFF5
  8243                           prodh	equ	0xFF4
  8244                           prodl	equ	0xFF3
  8245                           postinc0	equ	0xFEE
  8246                           wreg	equ	0xFE8
  8247                           indf2	equ	0xFDF
  8248                           postinc2	equ	0xFDE
  8249                           postdec2	equ	0xFDD
  8250                           fsr2h	equ	0xFDA
  8251                           fsr2l	equ	0xFD9
  8252                           status	equ	0xFD8
  8253                           
  8254 ;; *************** function _configurazione *****************
  8255 ;; Defined at:
  8256 ;;		line 291 in file "parcheggio.c"
  8257 ;; Parameters:    Size  Location     Type
  8258 ;;		None
  8259 ;; Auto vars:     Size  Location     Type
  8260 ;;		None
  8261 ;; Return value:  Size  Location     Type
  8262 ;;		None               void
  8263 ;; Registers used:
  8264 ;;		wreg, status,2, status,0, cstack
  8265 ;; Tracked objects:
  8266 ;;		On entry : 0/0
  8267 ;;		On exit  : 0/0
  8268 ;;		Unchanged: 0/0
  8269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8274 ;;Total ram usage:        0 bytes
  8275 ;; Hardware stack levels used:    1
  8276 ;; Hardware stack levels required when called:    6
  8277 ;; This function calls:
  8278 ;;		_CANInitialize
  8279 ;; This function is called by:
  8280 ;;		_main
  8281 ;; This function uses a non-reentrant model
  8282 ;;
  8283                           
  8284                           	psect	text20
  8285  004C2E                     __ptext20:
  8286                           	opt stack 0
  8287  004C2E                     _configurazione:
  8288                           	opt stack 24
  8289                           
  8290                           ;parcheggio.c: 292: LATA = 0x00;
  8291                           
  8292                           ; BSR set to: 0
  8293                           ;incstack = 0
  8294  004C2E  0E00               	movlw	0
  8295  004C30  6E89               	movwf	3977,c	;volatile
  8296                           
  8297                           ;parcheggio.c: 293: TRISA = 0b11110000;
  8298  004C32  0EF0               	movlw	240
  8299  004C34  6E92               	movwf	3986,c	;volatile
  8300                           
  8301                           ;parcheggio.c: 295: LATB = 0x00;
  8302  004C36  0E00               	movlw	0
  8303  004C38  6E8A               	movwf	3978,c	;volatile
  8304                           
  8305                           ;parcheggio.c: 296: TRISB = 0b10001010;
  8306  004C3A  0E8A               	movlw	138
  8307  004C3C  6E93               	movwf	3987,c	;volatile
  8308                           
  8309                           ;parcheggio.c: 298: LATC = 0x00;
  8310  004C3E  0E00               	movlw	0
  8311  004C40  6E8B               	movwf	3979,c	;volatile
  8312                           
  8313                           ;parcheggio.c: 299: TRISC = 0b11111111;
  8314  004C42  6894               	setf	3988,c	;volatile
  8315                           
  8316                           ;parcheggio.c: 301: ADCON1 = 0xFF;
  8317  004C44  68C1               	setf	4033,c	;volatile
  8318                           
  8319                           ;parcheggio.c: 302: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG
      +                          _SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  8320  004C46  0E06               	movlw	6
  8321  004C48  0100               	movlb	0	; () banked
  8322  004C4A  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
  8323  004C4C  0E05               	movlw	5
  8324  004C4E  0100               	movlb	0	; () banked
  8325  004C50  6F86               	movwf	CANInitialize@phaseSeg2& (0+255),b
  8326  004C52  0E01               	movlw	1
  8327  004C54  0100               	movlb	0	; () banked
  8328  004C56  6F87               	movwf	CANInitialize@SJW& (0+255),b
  8329  004C58  0E03               	movlw	3
  8330  004C5A  0100               	movlb	0	; () banked
  8331  004C5C  6F88               	movwf	CANInitialize@BRP& (0+255),b
  8332  004C5E  0E9D               	movlw	157
  8333  004C60  0100               	movlb	0	; () banked
  8334  004C62  6F89               	movwf	CANInitialize@flags& (0+255),b
  8335  004C64  0E04               	movlw	4
  8336  004C66  EC7E  F021         	call	_CANInitialize
  8337                           
  8338                           ;parcheggio.c: 304: RCONbits.IPEN = 1;
  8339  004C6A  8ED0               	bsf	4048,7,c	;volatile
  8340                           
  8341                           ;parcheggio.c: 305: PIR3bits.RXB1IF = 0;
  8342  004C6C  92A4               	bcf	4004,1,c	;volatile
  8343                           
  8344                           ;parcheggio.c: 306: PIR3bits.RXB0IF = 0;
  8345  004C6E  90A4               	bcf	4004,0,c	;volatile
  8346                           
  8347                           ;parcheggio.c: 307: IPR3bits.RXB1IP = 0;
  8348  004C70  92A5               	bcf	4005,1,c	;volatile
  8349                           
  8350                           ;parcheggio.c: 308: IPR3bits.RXB0IP = 0;
  8351  004C72  90A5               	bcf	4005,0,c	;volatile
  8352                           
  8353                           ;parcheggio.c: 309: PIE3bits.RXB1IE = 1;
  8354  004C74  82A3               	bsf	4003,1,c	;volatile
  8355                           
  8356                           ;parcheggio.c: 310: PIE3bits.RXB0IE = 1;
  8357  004C76  80A3               	bsf	4003,0,c	;volatile
  8358                           
  8359                           ;parcheggio.c: 311: INTCON2bits.TMR0IP = 0;
  8360  004C78  94F1               	bcf	intcon2,2,c	;volatile
  8361                           
  8362                           ;parcheggio.c: 312: T0CON = 0x80;
  8363  004C7A  0E80               	movlw	128
  8364  004C7C  6ED5               	movwf	4053,c	;volatile
  8365                           
  8366                           ;parcheggio.c: 313: T3CON = 0x11;
  8367  004C7E  0E11               	movlw	17
  8368  004C80  6EB1               	movwf	4017,c	;volatile
  8369                           
  8370                           ;parcheggio.c: 314: TMR0H = 0x34;
  8371  004C82  0E34               	movlw	52
  8372  004C84  6ED7               	movwf	4055,c	;volatile
  8373                           
  8374                           ;parcheggio.c: 315: TMR0L = 0xE0;
  8375  004C86  0EE0               	movlw	224
  8376  004C88  6ED6               	movwf	4054,c	;volatile
  8377                           
  8378                           ;parcheggio.c: 316: INTCONbits.TMR0IF = 0;
  8379  004C8A  94F2               	bcf	intcon,2,c	;volatile
  8380                           
  8381                           ;parcheggio.c: 317: INTCONbits.TMR0IE = 1;
  8382  004C8C  8AF2               	bsf	intcon,5,c	;volatile
  8383                           
  8384                           ;parcheggio.c: 318: INTCON2bits.INTEDG0 = 1;
  8385  004C8E  8CF1               	bsf	intcon2,6,c	;volatile
  8386                           
  8387                           ;parcheggio.c: 319: INTCONbits.INT0IF = 0;
  8388  004C90  92F2               	bcf	intcon,1,c	;volatile
  8389                           
  8390                           ;parcheggio.c: 320: INTCONbits.INT0IE = 0;
  8391  004C92  98F2               	bcf	intcon,4,c	;volatile
  8392                           
  8393                           ;parcheggio.c: 321: INTCONbits.GIEL = 1;
  8394  004C94  8CF2               	bsf	intcon,6,c	;volatile
  8395                           
  8396                           ;parcheggio.c: 322: INTCONbits.GIEH = 1;
  8397  004C96  8EF2               	bsf	intcon,7,c	;volatile
  8398  004C98  0012               	return		;funcret
  8399  004C9A                     __end_of_configurazione:
  8400                           	opt stack 0
  8401                           tblptru	equ	0xFF8
  8402                           tblptrh	equ	0xFF7
  8403                           tblptrl	equ	0xFF6
  8404                           tablat	equ	0xFF5
  8405                           prodh	equ	0xFF4
  8406                           prodl	equ	0xFF3
  8407                           intcon	equ	0xFF2
  8408                           intcon2	equ	0xFF1
  8409                           postinc0	equ	0xFEE
  8410                           wreg	equ	0xFE8
  8411                           indf2	equ	0xFDF
  8412                           postinc2	equ	0xFDE
  8413                           postdec2	equ	0xFDD
  8414                           fsr2h	equ	0xFDA
  8415                           fsr2l	equ	0xFD9
  8416                           status	equ	0xFD8
  8417                           
  8418 ;; *************** function _CANInitialize *****************
  8419 ;; Defined at:
  8420 ;;		line 219 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  8421 ;; Parameters:    Size  Location     Type
  8422 ;;  propSeg         1    wreg     unsigned char 
  8423 ;;  phaseSeg1       1   37[BANK0 ] unsigned char 
  8424 ;;  phaseSeg2       1   38[BANK0 ] unsigned char 
  8425 ;;  SJW             1   39[BANK0 ] unsigned char 
  8426 ;;  BRP             1   40[BANK0 ] unsigned char 
  8427 ;;  flags           1   41[BANK0 ] enum E16313
  8428 ;; Auto vars:     Size  Location     Type
  8429 ;;  propSeg         1   46[BANK0 ] unsigned char 
  8430 ;;  FilterConfig    1   48[BANK0 ] unsigned char 
  8431 ;;  FilterConfig    1   47[BANK0 ] unsigned char 
  8432 ;; Return value:  Size  Location     Type
  8433 ;;		None               void
  8434 ;; Registers used:
  8435 ;;		wreg, status,2, status,0, cstack
  8436 ;; Tracked objects:
  8437 ;;		On entry : 0/0
  8438 ;;		On exit  : 0/0
  8439 ;;		Unchanged: 0/0
  8440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8441 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8442 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8443 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8444 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8445 ;;Total ram usage:       12 bytes
  8446 ;; Hardware stack levels used:    1
  8447 ;; Hardware stack levels required when called:    5
  8448 ;; This function calls:
  8449 ;;		_CANOperationMode
  8450 ;;		_CANSetFilter
  8451 ;;		_CANSetMask
  8452 ;; This function is called by:
  8453 ;;		_configurazione
  8454 ;; This function uses a non-reentrant model
  8455 ;;
  8456                           
  8457                           	psect	text21
  8458  0042FC                     __ptext21:
  8459                           	opt stack 0
  8460  0042FC                     _CANInitialize:
  8461                           	opt stack 24
  8462                           
  8463                           ;incstack = 0
  8464                           ;CANInitialize@propSeg stored from wreg
  8465  0042FC  0100               	movlb	0	; () banked
  8466  0042FE  6F8E               	movwf	CANInitialize@propSeg& (0+255),b
  8467                           
  8468                           ;inc\CANlib.h: 221: BYTE FilterConfig1;
  8469                           ;inc\CANlib.h: 222: BYTE FilterConfig2;
  8470                           ;inc\CANlib.h: 224: CANOperationMode(CAN_OP_MODE_CONFIG);
  8471  004300  0E80               	movlw	128
  8472  004302  EC49  F027         	call	_CANOperationMode
  8473                           
  8474                           ;inc\CANlib.h: 226: BRGCON1 = 0x00;
  8475  004306  0E00               	movlw	0
  8476  004308  6E70               	movwf	3952,c	;volatile
  8477                           
  8478                           ;inc\CANlib.h: 227: BRGCON2 = 0x00;
  8479  00430A  0E00               	movlw	0
  8480  00430C  6E71               	movwf	3953,c	;volatile
  8481                           
  8482                           ;inc\CANlib.h: 228: BRGCON3 = 0x00;
  8483  00430E  0E00               	movlw	0
  8484  004310  6E72               	movwf	3954,c	;volatile
  8485                           
  8486                           ;inc\CANlib.h: 230: SJW= SJW << 6;
  8487  004312  0100               	movlb	0	; () banked
  8488  004314  4187               	rrncf	CANInitialize@SJW& (0+255),w,b
  8489  004316  42E8               	rrncf	wreg,f,c
  8490  004318  0BC0               	andlw	192
  8491  00431A  0100               	movlb	0	; () banked
  8492  00431C  6F87               	movwf	CANInitialize@SJW& (0+255),b
  8493                           
  8494                           ; BSR set to: 0
  8495                           ;inc\CANlib.h: 231: BRGCON1 |= SJW;
  8496  00431E  0100               	movlb	0	; () banked
  8497  004320  5187               	movf	CANInitialize@SJW& (0+255),w,b
  8498  004322  1270               	iorwf	3952,f,c	;volatile
  8499                           
  8500                           ; BSR set to: 0
  8501                           ;inc\CANlib.h: 232: BRGCON1 |= BRP;
  8502  004324  0100               	movlb	0	; () banked
  8503  004326  5188               	movf	CANInitialize@BRP& (0+255),w,b
  8504  004328  1270               	iorwf	3952,f,c	;volatile
  8505                           
  8506                           ; BSR set to: 0
  8507                           ;inc\CANlib.h: 234: BRGCON2 |= propSeg;
  8508  00432A  0100               	movlb	0	; () banked
  8509  00432C  518E               	movf	CANInitialize@propSeg& (0+255),w,b
  8510  00432E  1271               	iorwf	3953,f,c	;volatile
  8511                           
  8512                           ; BSR set to: 0
  8513                           ;inc\CANlib.h: 235: phaseSeg1 = phaseSeg1 <<3;
  8514  004330  0100               	movlb	0	; () banked
  8515  004332  3985               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  8516  004334  42E8               	rrncf	wreg,f,c
  8517  004336  0BF8               	andlw	248
  8518  004338  0100               	movlb	0	; () banked
  8519  00433A  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
  8520                           
  8521                           ; BSR set to: 0
  8522                           ;inc\CANlib.h: 236: BRGCON2 |= phaseSeg1;
  8523  00433C  0100               	movlb	0	; () banked
  8524  00433E  5185               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  8525  004340  1271               	iorwf	3953,f,c	;volatile
  8526                           
  8527                           ; BSR set to: 0
  8528                           ;inc\CANlib.h: 238: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  8529  004342  0100               	movlb	0	; () banked
  8530  004344  A589               	btfss	CANInitialize@flags& (0+255),2,b
  8531                           
  8532                           ; BSR set to: 0
  8533                           ;inc\CANlib.h: 239: BRGCON2bits.SAM= 1;
  8534  004346  8C71               	bsf	3953,6,c	;volatile
  8535                           
  8536                           ; BSR set to: 0
  8537                           ;inc\CANlib.h: 241: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  8538  004348  0100               	movlb	0	; () banked
  8539  00434A  B189               	btfsc	CANInitialize@flags& (0+255),0,b
  8540                           
  8541                           ; BSR set to: 0
  8542                           ;inc\CANlib.h: 242: BRGCON2bits.SEG2PHTS = 1;
  8543  00434C  8E71               	bsf	3953,7,c	;volatile
  8544                           
  8545                           ; BSR set to: 0
  8546                           ;inc\CANlib.h: 244: BRGCON3 |= phaseSeg2;
  8547                           
  8548                           ; BSR set to: 0
  8549  00434E  0100               	movlb	0	; () banked
  8550  004350  5186               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  8551  004352  1272               	iorwf	3954,f,c	;volatile
  8552                           
  8553                           ; BSR set to: 0
  8554                           ;inc\CANlib.h: 246: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  8555  004354  0100               	movlb	0	; () banked
  8556  004356  B389               	btfsc	CANInitialize@flags& (0+255),1,b
  8557                           
  8558                           ; BSR set to: 0
  8559                           ;inc\CANlib.h: 247: BRGCON3bits.WAKFIL = 1;
  8560  004358  8C72               	bsf	3954,6,c	;volatile
  8561                           
  8562                           ; BSR set to: 0
  8563                           ;inc\CANlib.h: 252: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  8564                           
  8565                           ; BSR set to: 0
  8566  00435A  0100               	movlb	0	; () banked
  8567  00435C  5189               	movf	CANInitialize@flags& (0+255),w,b
  8568  00435E  0B60               	andlw	96
  8569  004360  6E60               	movwf	3936,c	;volatile
  8570                           
  8571                           ;inc\CANlib.h: 253: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  8572  004362  0100               	movlb	0	; () banked
  8573  004364  5189               	movf	CANInitialize@flags& (0+255),w,b
  8574  004366  0B10               	andlw	16
  8575  004368  0AFF               	xorlw	255
  8576  00436A  B4D8               	btfsc	status,2,c
  8577                           
  8578                           ; BSR set to: 0
  8579                           ;inc\CANlib.h: 254: RXB0CONbits.RXB0DBEN = 1;
  8580  00436C  8460               	bsf	3936,2,c	;volatile
  8581                           
  8582                           ; BSR set to: 0
  8583                           ;inc\CANlib.h: 256: RXB1CON = RXB0CON;
  8584  00436E  CF60 FF50          	movff	3936,3920	;volatile
  8585                           
  8586                           ; BSR set to: 0
  8587                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  8588  004372  0E00               	movlw	0
  8589  004374  0100               	movlb	0	; () banked
  8590  004376  6F77               	movwf	CANSetMask@mask& (0+255),b
  8591  004378  0E00               	movlw	0
  8592  00437A  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
  8593  00437C  0E00               	movlw	0
  8594  00437E  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
  8595  004380  0E00               	movlw	0
  8596  004382  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
  8597  004384  0EF7               	movlw	247
  8598  004386  0100               	movlb	0	; () banked
  8599  004388  6F7B               	movwf	CANSetMask@type& (0+255),b
  8600  00438A  0E01               	movlw	1
  8601  00438C  ECD2  F01A         	call	_CANSetMask
  8602                           
  8603                           ;inc\CANlib.h: 261: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  8604  004390  0E00               	movlw	0
  8605  004392  0100               	movlb	0	; () banked
  8606  004394  6F77               	movwf	CANSetMask@mask& (0+255),b
  8607  004396  0E00               	movlw	0
  8608  004398  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
  8609  00439A  0E00               	movlw	0
  8610  00439C  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
  8611  00439E  0E00               	movlw	0
  8612  0043A0  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
  8613  0043A2  0EF7               	movlw	247
  8614  0043A4  0100               	movlb	0	; () banked
  8615  0043A6  6F7B               	movwf	CANSetMask@type& (0+255),b
  8616  0043A8  0E02               	movlw	2
  8617  0043AA  ECD2  F01A         	call	_CANSetMask
  8618                           
  8619                           ;inc\CANlib.h: 264: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  8620  0043AE  D00F               	goto	l4939
  8621  0043B0                     l4933:
  8622                           
  8623                           ;inc\CANlib.h: 267: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  8624  0043B0  0EF7               	movlw	247
  8625  0043B2  0100               	movlb	0	; () banked
  8626  0043B4  6F8F               	movwf	CANInitialize@FilterConfig1& (0+255),b
  8627  0043B6  D007               	goto	l4935
  8628  0043B8                     l352:
  8629                           
  8630                           ; BSR set to: 0
  8631                           ;inc\CANlib.h: 272: FilterConfig1 = CAN_CONFIG_STD_MSG;
  8632  0043B8  0100               	movlb	0	; () banked
  8633  0043BA  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
  8634                           
  8635                           ;inc\CANlib.h: 273: FilterConfig2 = CAN_CONFIG_STD_MSG;
  8636  0043BC  0100               	movlb	0	; () banked
  8637  0043BE  6990               	setf	CANInitialize@FilterConfig2& (0+255),b
  8638                           
  8639                           ;inc\CANlib.h: 274: break;
  8640  0043C0  D028               	goto	l4941
  8641  0043C2                     l353:
  8642                           
  8643                           ; BSR set to: 0
  8644                           ;inc\CANlib.h: 276: FilterConfig1 = CAN_CONFIG_STD_MSG;
  8645  0043C2  0100               	movlb	0	; () banked
  8646  0043C4  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
  8647  0043C6                     l4935:
  8648                           
  8649                           ; BSR set to: 0
  8650                           ;inc\CANlib.h: 277: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  8651  0043C6  0EF7               	movlw	247
  8652  0043C8  0100               	movlb	0	; () banked
  8653  0043CA  6F90               	movwf	CANInitialize@FilterConfig2& (0+255),b
  8654                           
  8655                           ; BSR set to: 0
  8656                           ;inc\CANlib.h: 279: }
  8657                           
  8658                           ;inc\CANlib.h: 278: break;
  8659  0043CC  D022               	goto	l4941
  8660  0043CE                     l4939:
  8661  0043CE  0E9F               	movlw	159
  8662  0043D0  0100               	movlb	0	; () banked
  8663  0043D2  6F8A               	movwf	??_CANInitialize& (0+255),b
  8664  0043D4  0EFF               	movlw	255
  8665  0043D6  0100               	movlb	0	; () banked
  8666  0043D8  6F8B               	movwf	(??_CANInitialize+1)& (0+255),b
  8667  0043DA  0100               	movlb	0	; () banked
  8668  0043DC  5189               	movf	CANInitialize@flags& (0+255),w,b
  8669  0043DE  0B60               	andlw	96
  8670  0043E0  0100               	movlb	0	; () banked
  8671  0043E2  6F8C               	movwf	(??_CANInitialize+2)& (0+255),b
  8672  0043E4  6B8D               	clrf	(??_CANInitialize+3)& (0+255),b
  8673  0043E6  0100               	movlb	0	; () banked
  8674  0043E8  518A               	movf	??_CANInitialize& (0+255),w,b
  8675  0043EA  0100               	movlb	0	; () banked
  8676  0043EC  138C               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  8677  0043EE  0100               	movlb	0	; () banked
  8678  0043F0  518B               	movf	(??_CANInitialize+1)& (0+255),w,b
  8679  0043F2  0100               	movlb	0	; () banked
  8680  0043F4  138D               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  8681                           
  8682                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8683                           ; Switch size 1, requested type "space"
  8684                           ; Number of cases is 1, Range of values is 0 to 0
  8685                           ; switch strategies available:
  8686                           ; Name         Instructions Cycles
  8687                           ; simple_byte            4     3 (average)
  8688                           ;	Chosen strategy is simple_byte
  8689  0043F6  0100               	movlb	0	; () banked
  8690  0043F8  518D               	movf	(??_CANInitialize+3)& (0+255),w,b
  8691  0043FA  0A00               	xorlw	0	; case 0
  8692  0043FC  A4D8               	btfss	status,2,c
  8693  0043FE  D7E1               	goto	l353
  8694                           
  8695                           ; BSR set to: 0
  8696                           ; Switch size 1, requested type "space"
  8697                           ; Number of cases is 2, Range of values is 191 to 223
  8698                           ; switch strategies available:
  8699                           ; Name         Instructions Cycles
  8700                           ; simple_byte            7     4 (average)
  8701                           ;	Chosen strategy is simple_byte
  8702  004400  0100               	movlb	0	; () banked
  8703  004402  518C               	movf	(??_CANInitialize+2)& (0+255),w,b
  8704  004404  0ABF               	xorlw	191	; case 191
  8705  004406  B4D8               	btfsc	status,2,c
  8706  004408  D7D7               	goto	l352
  8707  00440A  0A60               	xorlw	96	; case 223
  8708  00440C  B4D8               	btfsc	status,2,c
  8709  00440E  D7D0               	goto	l4933
  8710  004410  D7D8               	goto	l353
  8711  004412                     l4941:
  8712                           
  8713                           ; BSR set to: 0
  8714                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  8715  004412  0E00               	movlw	0
  8716  004414  0100               	movlb	0	; () banked
  8717  004416  6F77               	movwf	CANSetFilter@filter& (0+255),b
  8718  004418  0E00               	movlw	0
  8719  00441A  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
  8720  00441C  0E00               	movlw	0
  8721  00441E  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
  8722  004420  0E00               	movlw	0
  8723  004422  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
  8724  004424  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  8725  004428  0E00               	movlw	0
  8726  00442A  EC97  F006         	call	_CANSetFilter
  8727                           
  8728                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  8729  00442E  0E00               	movlw	0
  8730  004430  0100               	movlb	0	; () banked
  8731  004432  6F77               	movwf	CANSetFilter@filter& (0+255),b
  8732  004434  0E00               	movlw	0
  8733  004436  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
  8734  004438  0E00               	movlw	0
  8735  00443A  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
  8736  00443C  0E00               	movlw	0
  8737  00443E  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
  8738  004440  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  8739  004444  0E01               	movlw	1
  8740  004446  EC97  F006         	call	_CANSetFilter
  8741                           
  8742                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  8743  00444A  0E00               	movlw	0
  8744  00444C  0100               	movlb	0	; () banked
  8745  00444E  6F77               	movwf	CANSetFilter@filter& (0+255),b
  8746  004450  0E00               	movlw	0
  8747  004452  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
  8748  004454  0E00               	movlw	0
  8749  004456  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
  8750  004458  0E00               	movlw	0
  8751  00445A  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
  8752  00445C  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  8753  004460  0E02               	movlw	2
  8754  004462  EC97  F006         	call	_CANSetFilter
  8755                           
  8756                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  8757  004466  0E00               	movlw	0
  8758  004468  0100               	movlb	0	; () banked
  8759  00446A  6F77               	movwf	CANSetFilter@filter& (0+255),b
  8760  00446C  0E00               	movlw	0
  8761  00446E  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
  8762  004470  0E00               	movlw	0
  8763  004472  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
  8764  004474  0E00               	movlw	0
  8765  004476  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
  8766  004478  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  8767  00447C  0E03               	movlw	3
  8768  00447E  EC97  F006         	call	_CANSetFilter
  8769                           
  8770                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  8771  004482  0E00               	movlw	0
  8772  004484  0100               	movlb	0	; () banked
  8773  004486  6F77               	movwf	CANSetFilter@filter& (0+255),b
  8774  004488  0E00               	movlw	0
  8775  00448A  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
  8776  00448C  0E00               	movlw	0
  8777  00448E  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
  8778  004490  0E00               	movlw	0
  8779  004492  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
  8780  004494  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  8781  004498  0E04               	movlw	4
  8782  00449A  EC97  F006         	call	_CANSetFilter
  8783                           
  8784                           ;inc\CANlib.h: 286: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  8785  00449E  0E00               	movlw	0
  8786  0044A0  0100               	movlb	0	; () banked
  8787  0044A2  6F77               	movwf	CANSetFilter@filter& (0+255),b
  8788  0044A4  0E00               	movlw	0
  8789  0044A6  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
  8790  0044A8  0E00               	movlw	0
  8791  0044AA  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
  8792  0044AC  0E00               	movlw	0
  8793  0044AE  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
  8794  0044B0  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  8795  0044B4  0E05               	movlw	5
  8796  0044B6  EC97  F006         	call	_CANSetFilter
  8797                           
  8798                           ;inc\CANlib.h: 288: CANOperationMode(CAN_OP_MODE_NORMAL);
  8799  0044BA  0E00               	movlw	0
  8800  0044BC  EC49  F027         	call	_CANOperationMode
  8801  0044C0  0012               	return		;funcret
  8802  0044C2                     __end_of_CANInitialize:
  8803                           	opt stack 0
  8804                           tblptru	equ	0xFF8
  8805                           tblptrh	equ	0xFF7
  8806                           tblptrl	equ	0xFF6
  8807                           tablat	equ	0xFF5
  8808                           prodh	equ	0xFF4
  8809                           prodl	equ	0xFF3
  8810                           intcon	equ	0xFF2
  8811                           intcon2	equ	0xFF1
  8812                           postinc0	equ	0xFEE
  8813                           wreg	equ	0xFE8
  8814                           indf2	equ	0xFDF
  8815                           postinc2	equ	0xFDE
  8816                           postdec2	equ	0xFDD
  8817                           fsr2h	equ	0xFDA
  8818                           fsr2l	equ	0xFD9
  8819                           status	equ	0xFD8
  8820                           
  8821 ;; *************** function _CANSetMask *****************
  8822 ;; Defined at:
  8823 ;;		line 641 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  8824 ;; Parameters:    Size  Location     Type
  8825 ;;  numBuffer       1    wreg     enum E16347
  8826 ;;  mask            4   23[BANK0 ] unsigned long 
  8827 ;;  type            1   27[BANK0 ] enum E16313
  8828 ;; Auto vars:     Size  Location     Type
  8829 ;;  numBuffer       1   32[BANK0 ] enum E16347
  8830 ;;  tamp            4   33[BANK0 ] unsigned long 
  8831 ;; Return value:  Size  Location     Type
  8832 ;;		None               void
  8833 ;; Registers used:
  8834 ;;		wreg, status,2, status,0
  8835 ;; Tracked objects:
  8836 ;;		On entry : 0/0
  8837 ;;		On exit  : 0/0
  8838 ;;		Unchanged: 0/0
  8839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8840 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8841 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8842 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8843 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8844 ;;Total ram usage:       14 bytes
  8845 ;; Hardware stack levels used:    1
  8846 ;; Hardware stack levels required when called:    4
  8847 ;; This function calls:
  8848 ;;		Nothing
  8849 ;; This function is called by:
  8850 ;;		_CANInitialize
  8851 ;; This function uses a non-reentrant model
  8852 ;;
  8853                           
  8854                           	psect	text22
  8855  0035A4                     __ptext22:
  8856                           	opt stack 0
  8857  0035A4                     _CANSetMask:
  8858                           	opt stack 24
  8859                           
  8860                           ;incstack = 0
  8861                           ;CANSetMask@numBuffer stored from wreg
  8862  0035A4  0100               	movlb	0	; () banked
  8863  0035A6  6F80               	movwf	CANSetMask@numBuffer& (0+255),b
  8864                           
  8865                           ;inc\CANlib.h: 644: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  8866  0035A8  0100               	movlb	0	; () banked
  8867  0035AA  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
  8868  0035AC  A4D8               	btfss	status,2,c
  8869  0035AE  D056               	goto	l4349
  8870                           
  8871                           ; BSR set to: 0
  8872  0035B0  0100               	movlb	0	; () banked
  8873  0035B2  297B               	incf	CANSetMask@type& (0+255),w,b
  8874  0035B4  A4D8               	btfss	status,2,c
  8875  0035B6  D052               	goto	l4349
  8876                           
  8877                           ; BSR set to: 0
  8878                           ;inc\CANlib.h: 645: {
  8879                           ;inc\CANlib.h: 646: tamp = (mask >> 3);
  8880  0035B8  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
  8881  0035BC  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
  8882  0035C0  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
  8883  0035C4  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
  8884  0035C8  0E04               	movlw	4
  8885  0035CA  D006               	goto	u4910
  8886  0035CC                     u4915:
  8887  0035CC  0100               	movlb	0	; () banked
  8888  0035CE  90D8               	bcf	status,0,c
  8889  0035D0  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  8890  0035D2  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  8891  0035D4  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  8892  0035D6  337C               	rrcf	??_CANSetMask& (0+255),f,b
  8893  0035D8                     u4910:
  8894  0035D8  2EE8               	decfsz	wreg,f,c
  8895  0035DA  D7F8               	goto	u4915
  8896  0035DC  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
  8897  0035E0  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  8898  0035E4  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  8899  0035E8  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  8900                           
  8901                           ; BSR set to: 0
  8902                           ;inc\CANlib.h: 647: tamp = tamp & 0x000000FF;
  8903  0035EC  0100               	movlb	0	; () banked
  8904  0035EE  5181               	movf	CANSetMask@tamp& (0+255),w,b
  8905  0035F0  0100               	movlb	0	; () banked
  8906  0035F2  6F81               	movwf	CANSetMask@tamp& (0+255),b
  8907  0035F4  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
  8908  0035F6  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
  8909  0035F8  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
  8910                           
  8911                           ; BSR set to: 0
  8912                           ;inc\CANlib.h: 648: RXM0SIDH = (unsigned char) tamp;
  8913  0035FA  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
  8914                           
  8915                           ; BSR set to: 0
  8916                           ;inc\CANlib.h: 650: tamp = mask & 0x00000007;
  8917  0035FE  0E07               	movlw	7
  8918  003600  0100               	movlb	0	; () banked
  8919  003602  1577               	andwf	CANSetMask@mask& (0+255),w,b
  8920  003604  0100               	movlb	0	; () banked
  8921  003606  6F81               	movwf	CANSetMask@tamp& (0+255),b
  8922  003608  0E00               	movlw	0
  8923  00360A  0100               	movlb	0	; () banked
  8924  00360C  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  8925  00360E  0100               	movlb	0	; () banked
  8926  003610  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
  8927  003612  0E00               	movlw	0
  8928  003614  0100               	movlb	0	; () banked
  8929  003616  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  8930  003618  0100               	movlb	0	; () banked
  8931  00361A  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
  8932  00361C  0E00               	movlw	0
  8933  00361E  0100               	movlb	0	; () banked
  8934  003620  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  8935  003622  0100               	movlb	0	; () banked
  8936  003624  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
  8937                           
  8938                           ; BSR set to: 0
  8939                           ;inc\CANlib.h: 651: tamp = tamp << 5;
  8940  003626  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
  8941  00362A  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  8942  00362E  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  8943  003632  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  8944  003636  0E05               	movlw	5
  8945  003638                     u4925:
  8946  003638  90D8               	bcf	status,0,c
  8947  00363A  0100               	movlb	0	; () banked
  8948  00363C  377C               	rlcf	??_CANSetMask& (0+255),f,b
  8949  00363E  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  8950  003640  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  8951  003642  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  8952  003644  2EE8               	decfsz	wreg,f,c
  8953  003646  D7F8               	goto	u4925
  8954  003648  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
  8955  00364C  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  8956  003650  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  8957  003654  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  8958                           
  8959                           ; BSR set to: 0
  8960                           ;inc\CANlib.h: 652: RXM0SIDL = (unsigned char) tamp;
  8961  003658  C081  FF19         	movff	CANSetMask@tamp,3865	;volatile
  8962  00365C                     l4349:
  8963                           
  8964                           ; BSR set to: 0
  8965                           ;inc\CANlib.h: 653: }
  8966                           ;inc\CANlib.h: 655: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  8967  00365C  0E02               	movlw	2
  8968  00365E  0100               	movlb	0	; () banked
  8969  003660  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  8970  003662  A4D8               	btfss	status,2,c
  8971  003664  D056               	goto	l4365
  8972                           
  8973                           ; BSR set to: 0
  8974  003666  0100               	movlb	0	; () banked
  8975  003668  297B               	incf	CANSetMask@type& (0+255),w,b
  8976  00366A  A4D8               	btfss	status,2,c
  8977  00366C  D052               	goto	l4365
  8978                           
  8979                           ; BSR set to: 0
  8980                           ;inc\CANlib.h: 656: {
  8981                           ;inc\CANlib.h: 657: tamp = (mask >> 3);
  8982  00366E  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
  8983  003672  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
  8984  003676  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
  8985  00367A  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
  8986  00367E  0E04               	movlw	4
  8987  003680  D006               	goto	u4950
  8988  003682                     u4955:
  8989  003682  0100               	movlb	0	; () banked
  8990  003684  90D8               	bcf	status,0,c
  8991  003686  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  8992  003688  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  8993  00368A  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  8994  00368C  337C               	rrcf	??_CANSetMask& (0+255),f,b
  8995  00368E                     u4950:
  8996  00368E  2EE8               	decfsz	wreg,f,c
  8997  003690  D7F8               	goto	u4955
  8998  003692  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
  8999  003696  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  9000  00369A  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  9001  00369E  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  9002                           
  9003                           ; BSR set to: 0
  9004                           ;inc\CANlib.h: 658: tamp = tamp & 0x000000FF;
  9005  0036A2  0100               	movlb	0	; () banked
  9006  0036A4  5181               	movf	CANSetMask@tamp& (0+255),w,b
  9007  0036A6  0100               	movlb	0	; () banked
  9008  0036A8  6F81               	movwf	CANSetMask@tamp& (0+255),b
  9009  0036AA  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
  9010  0036AC  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
  9011  0036AE  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
  9012                           
  9013                           ; BSR set to: 0
  9014                           ;inc\CANlib.h: 659: RXM1SIDH = (unsigned char) tamp;
  9015  0036B0  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  9016                           
  9017                           ; BSR set to: 0
  9018                           ;inc\CANlib.h: 661: tamp = mask & 0x00000007;
  9019  0036B4  0E07               	movlw	7
  9020  0036B6  0100               	movlb	0	; () banked
  9021  0036B8  1577               	andwf	CANSetMask@mask& (0+255),w,b
  9022  0036BA  0100               	movlb	0	; () banked
  9023  0036BC  6F81               	movwf	CANSetMask@tamp& (0+255),b
  9024  0036BE  0E00               	movlw	0
  9025  0036C0  0100               	movlb	0	; () banked
  9026  0036C2  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  9027  0036C4  0100               	movlb	0	; () banked
  9028  0036C6  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
  9029  0036C8  0E00               	movlw	0
  9030  0036CA  0100               	movlb	0	; () banked
  9031  0036CC  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  9032  0036CE  0100               	movlb	0	; () banked
  9033  0036D0  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
  9034  0036D2  0E00               	movlw	0
  9035  0036D4  0100               	movlb	0	; () banked
  9036  0036D6  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  9037  0036D8  0100               	movlb	0	; () banked
  9038  0036DA  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
  9039                           
  9040                           ; BSR set to: 0
  9041                           ;inc\CANlib.h: 662: tamp = tamp << 5;
  9042  0036DC  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
  9043  0036E0  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  9044  0036E4  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  9045  0036E8  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  9046  0036EC  0E05               	movlw	5
  9047  0036EE                     u4965:
  9048  0036EE  90D8               	bcf	status,0,c
  9049  0036F0  0100               	movlb	0	; () banked
  9050  0036F2  377C               	rlcf	??_CANSetMask& (0+255),f,b
  9051  0036F4  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  9052  0036F6  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  9053  0036F8  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  9054  0036FA  2EE8               	decfsz	wreg,f,c
  9055  0036FC  D7F8               	goto	u4965
  9056  0036FE  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
  9057  003702  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  9058  003706  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  9059  00370A  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  9060                           
  9061                           ; BSR set to: 0
  9062                           ;inc\CANlib.h: 663: RXM1SIDL = (unsigned char) tamp;
  9063  00370E  C081  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  9064  003712                     l4365:
  9065                           
  9066                           ; BSR set to: 0
  9067                           ;inc\CANlib.h: 664: }
  9068                           ;inc\CANlib.h: 666: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  9069  003712  0100               	movlb	0	; () banked
  9070  003714  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
  9071  003716  A4D8               	btfss	status,2,c
  9072  003718  D087               	goto	l4397
  9073                           
  9074                           ; BSR set to: 0
  9075  00371A  0EF7               	movlw	247
  9076  00371C  0100               	movlb	0	; () banked
  9077  00371E  197B               	xorwf	CANSetMask@type& (0+255),w,b
  9078  003720  A4D8               	btfss	status,2,c
  9079  003722  D082               	goto	l4397
  9080                           
  9081                           ; BSR set to: 0
  9082                           ;inc\CANlib.h: 667: {
  9083                           ;inc\CANlib.h: 668: tamp = mask & 0x000000FF;
  9084  003724  0100               	movlb	0	; () banked
  9085  003726  5177               	movf	CANSetMask@mask& (0+255),w,b
  9086  003728  0100               	movlb	0	; () banked
  9087  00372A  6F81               	movwf	CANSetMask@tamp& (0+255),b
  9088  00372C  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
  9089  00372E  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
  9090  003730  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
  9091                           
  9092                           ; BSR set to: 0
  9093                           ;inc\CANlib.h: 669: RXM0EIDL = (unsigned char) tamp;
  9094  003732  C081  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  9095                           
  9096                           ; BSR set to: 0
  9097                           ;inc\CANlib.h: 671: tamp = mask & 0x0000FF00;
  9098  003736  0E00               	movlw	0
  9099  003738  0100               	movlb	0	; () banked
  9100  00373A  1577               	andwf	CANSetMask@mask& (0+255),w,b
  9101  00373C  0100               	movlb	0	; () banked
  9102  00373E  6F81               	movwf	CANSetMask@tamp& (0+255),b
  9103  003740  0EFF               	movlw	255
  9104  003742  0100               	movlb	0	; () banked
  9105  003744  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  9106  003746  0100               	movlb	0	; () banked
  9107  003748  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
  9108  00374A  0E00               	movlw	0
  9109  00374C  0100               	movlb	0	; () banked
  9110  00374E  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  9111  003750  0100               	movlb	0	; () banked
  9112  003752  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
  9113  003754  0E00               	movlw	0
  9114  003756  0100               	movlb	0	; () banked
  9115  003758  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  9116  00375A  0100               	movlb	0	; () banked
  9117  00375C  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
  9118                           
  9119                           ; BSR set to: 0
  9120                           ;inc\CANlib.h: 672: tamp = tamp >> 8;
  9121  00375E  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
  9122  003762  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  9123  003766  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  9124  00376A  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  9125  00376E  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
  9126  003772  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
  9127  003776  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
  9128  00377A  0100               	movlb	0	; () banked
  9129  00377C  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
  9130  00377E  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
  9131  003782  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  9132  003786  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  9133  00378A  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  9134                           
  9135                           ; BSR set to: 0
  9136                           ;inc\CANlib.h: 673: RXM0EIDH = (unsigned char) tamp;
  9137  00378E  C081  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  9138                           
  9139                           ; BSR set to: 0
  9140                           ;inc\CANlib.h: 675: if (mask & 0x00010000)
  9141  003792  0100               	movlb	0	; () banked
  9142  003794  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  9143  003796  D003               	goto	l426
  9144                           
  9145                           ; BSR set to: 0
  9146                           ;inc\CANlib.h: 676: RXM0SIDLbits.EID16 = 0x01;
  9147  003798  010F               	movlb	15	; () banked
  9148  00379A  8119               	bsf	25,0,b	;volatile
  9149  00379C  D002               	goto	l427
  9150  00379E                     l426:
  9151                           
  9152                           ; BSR set to: 0
  9153                           ;inc\CANlib.h: 677: else
  9154                           ;inc\CANlib.h: 678: RXM0SIDLbits.EID16 = 0x00;
  9155  00379E  010F               	movlb	15	; () banked
  9156  0037A0  9119               	bcf	25,0,b	;volatile
  9157  0037A2                     l427:
  9158                           
  9159                           ; BSR set to: 15
  9160                           ;inc\CANlib.h: 680: if (mask & 0x00020000)
  9161  0037A2  0100               	movlb	0	; () banked
  9162  0037A4  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  9163  0037A6  D003               	goto	l428
  9164                           
  9165                           ; BSR set to: 0
  9166                           ;inc\CANlib.h: 681: RXM0SIDLbits.EID17 = 0x01;
  9167  0037A8  010F               	movlb	15	; () banked
  9168  0037AA  8319               	bsf	25,1,b	;volatile
  9169  0037AC  D002               	goto	l429
  9170  0037AE                     l428:
  9171                           
  9172                           ; BSR set to: 0
  9173                           ;inc\CANlib.h: 682: else
  9174                           ;inc\CANlib.h: 683: RXM0SIDLbits.EID17 = 0x00;
  9175  0037AE  010F               	movlb	15	; () banked
  9176  0037B0  9319               	bcf	25,1,b	;volatile
  9177  0037B2                     l429:
  9178                           
  9179                           ; BSR set to: 15
  9180                           ;inc\CANlib.h: 685: if (mask & 0x00040000)
  9181  0037B2  0100               	movlb	0	; () banked
  9182  0037B4  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  9183  0037B6  D003               	goto	l430
  9184                           
  9185                           ; BSR set to: 0
  9186                           ;inc\CANlib.h: 686: RXM0SIDLbits.SID0 = 0x01;
  9187  0037B8  010F               	movlb	15	; () banked
  9188  0037BA  8B19               	bsf	25,5,b	;volatile
  9189  0037BC  D002               	goto	l431
  9190  0037BE                     l430:
  9191                           
  9192                           ; BSR set to: 0
  9193                           ;inc\CANlib.h: 687: else
  9194                           ;inc\CANlib.h: 688: RXM0SIDLbits.SID0 = 0x00;
  9195  0037BE  010F               	movlb	15	; () banked
  9196  0037C0  9B19               	bcf	25,5,b	;volatile
  9197  0037C2                     l431:
  9198                           
  9199                           ; BSR set to: 15
  9200                           ;inc\CANlib.h: 690: if (mask & 0x00080000)
  9201  0037C2  0100               	movlb	0	; () banked
  9202  0037C4  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  9203  0037C6  D003               	goto	l432
  9204                           
  9205                           ; BSR set to: 0
  9206                           ;inc\CANlib.h: 691: RXM0SIDLbits.SID1 = 0x01;
  9207  0037C8  010F               	movlb	15	; () banked
  9208  0037CA  8D19               	bsf	25,6,b	;volatile
  9209  0037CC  D002               	goto	l433
  9210  0037CE                     l432:
  9211                           
  9212                           ; BSR set to: 0
  9213                           ;inc\CANlib.h: 692: else
  9214                           ;inc\CANlib.h: 693: RXM0SIDLbits.SID1 = 0x00;
  9215  0037CE  010F               	movlb	15	; () banked
  9216  0037D0  9D19               	bcf	25,6,b	;volatile
  9217  0037D2                     l433:
  9218                           
  9219                           ; BSR set to: 15
  9220                           ;inc\CANlib.h: 695: if (mask & 0x00100000)
  9221  0037D2  0100               	movlb	0	; () banked
  9222  0037D4  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  9223  0037D6  D003               	goto	l434
  9224                           
  9225                           ; BSR set to: 0
  9226                           ;inc\CANlib.h: 696: RXM0SIDLbits.SID2 = 0x01 ;
  9227  0037D8  010F               	movlb	15	; () banked
  9228  0037DA  8F19               	bsf	25,7,b	;volatile
  9229  0037DC  D002               	goto	l4391
  9230  0037DE                     l434:
  9231                           
  9232                           ; BSR set to: 0
  9233                           ;inc\CANlib.h: 697: else
  9234                           ;inc\CANlib.h: 698: RXM0SIDLbits.SID2 = 0x00 ;
  9235  0037DE  010F               	movlb	15	; () banked
  9236  0037E0  9F19               	bcf	25,7,b	;volatile
  9237  0037E2                     l4391:
  9238                           
  9239                           ; BSR set to: 15
  9240                           ;inc\CANlib.h: 700: tamp = (mask >> 21);
  9241  0037E2  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
  9242  0037E6  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
  9243  0037EA  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
  9244  0037EE  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
  9245  0037F2  0E16               	movlw	22
  9246  0037F4  D006               	goto	u5040
  9247  0037F6                     u5045:
  9248  0037F6  0100               	movlb	0	; () banked
  9249  0037F8  90D8               	bcf	status,0,c
  9250  0037FA  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  9251  0037FC  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  9252  0037FE  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  9253  003800  337C               	rrcf	??_CANSetMask& (0+255),f,b
  9254  003802                     u5040:
  9255  003802  2EE8               	decfsz	wreg,f,c
  9256  003804  D7F8               	goto	u5045
  9257  003806  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
  9258  00380A  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  9259  00380E  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  9260  003812  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  9261                           
  9262                           ; BSR set to: 0
  9263                           ;inc\CANlib.h: 701: tamp = tamp & 0x000000FF;
  9264  003816  0100               	movlb	0	; () banked
  9265  003818  5181               	movf	CANSetMask@tamp& (0+255),w,b
  9266  00381A  0100               	movlb	0	; () banked
  9267  00381C  6F81               	movwf	CANSetMask@tamp& (0+255),b
  9268  00381E  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
  9269  003820  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
  9270  003822  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
  9271                           
  9272                           ; BSR set to: 0
  9273                           ;inc\CANlib.h: 702: RXM0SIDH = (unsigned char) tamp;
  9274  003824  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
  9275  003828                     l4397:
  9276                           
  9277                           ; BSR set to: 0
  9278                           ;inc\CANlib.h: 703: }
  9279                           ;inc\CANlib.h: 705: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  9280  003828  0E02               	movlw	2
  9281  00382A  0100               	movlb	0	; () banked
  9282  00382C  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  9283  00382E  A4D8               	btfss	status,2,c
  9284  003830  0012               	return	
  9285                           
  9286                           ; BSR set to: 0
  9287  003832  0EF7               	movlw	247
  9288  003834  0100               	movlb	0	; () banked
  9289  003836  197B               	xorwf	CANSetMask@type& (0+255),w,b
  9290  003838  A4D8               	btfss	status,2,c
  9291  00383A  0012               	return	
  9292                           
  9293                           ; BSR set to: 0
  9294                           ;inc\CANlib.h: 706: {
  9295                           ;inc\CANlib.h: 707: tamp = mask & 0x000000FF;
  9296  00383C  0100               	movlb	0	; () banked
  9297  00383E  5177               	movf	CANSetMask@mask& (0+255),w,b
  9298  003840  0100               	movlb	0	; () banked
  9299  003842  6F81               	movwf	CANSetMask@tamp& (0+255),b
  9300  003844  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
  9301  003846  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
  9302  003848  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
  9303                           
  9304                           ; BSR set to: 0
  9305                           ;inc\CANlib.h: 708: RXM1EIDL = (unsigned char) tamp;
  9306  00384A  C081  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  9307                           
  9308                           ; BSR set to: 0
  9309                           ;inc\CANlib.h: 710: tamp = mask & 0x0000FF00;
  9310  00384E  0E00               	movlw	0
  9311  003850  0100               	movlb	0	; () banked
  9312  003852  1577               	andwf	CANSetMask@mask& (0+255),w,b
  9313  003854  0100               	movlb	0	; () banked
  9314  003856  6F81               	movwf	CANSetMask@tamp& (0+255),b
  9315  003858  0EFF               	movlw	255
  9316  00385A  0100               	movlb	0	; () banked
  9317  00385C  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  9318  00385E  0100               	movlb	0	; () banked
  9319  003860  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
  9320  003862  0E00               	movlw	0
  9321  003864  0100               	movlb	0	; () banked
  9322  003866  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  9323  003868  0100               	movlb	0	; () banked
  9324  00386A  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
  9325  00386C  0E00               	movlw	0
  9326  00386E  0100               	movlb	0	; () banked
  9327  003870  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  9328  003872  0100               	movlb	0	; () banked
  9329  003874  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
  9330                           
  9331                           ; BSR set to: 0
  9332                           ;inc\CANlib.h: 711: tamp = tamp >> 8;
  9333  003876  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
  9334  00387A  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  9335  00387E  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  9336  003882  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  9337  003886  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
  9338  00388A  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
  9339  00388E  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
  9340  003892  0100               	movlb	0	; () banked
  9341  003894  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
  9342  003896  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
  9343  00389A  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  9344  00389E  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  9345  0038A2  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  9346                           
  9347                           ; BSR set to: 0
  9348                           ;inc\CANlib.h: 712: RXM1EIDH = (unsigned char) tamp;
  9349  0038A6  C081  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  9350                           
  9351                           ; BSR set to: 0
  9352                           ;inc\CANlib.h: 714: if (mask & 0x00010000)
  9353  0038AA  0100               	movlb	0	; () banked
  9354  0038AC  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  9355  0038AE  D003               	goto	l437
  9356                           
  9357                           ; BSR set to: 0
  9358                           ;inc\CANlib.h: 715: RXM1SIDLbits.EID16 = 0x01;
  9359  0038B0  010F               	movlb	15	; () banked
  9360  0038B2  811D               	bsf	29,0,b	;volatile
  9361  0038B4  D002               	goto	l438
  9362  0038B6                     l437:
  9363                           
  9364                           ; BSR set to: 0
  9365                           ;inc\CANlib.h: 716: else
  9366                           ;inc\CANlib.h: 717: RXM1SIDLbits.EID16 = 0x00;
  9367  0038B6  010F               	movlb	15	; () banked
  9368  0038B8  911D               	bcf	29,0,b	;volatile
  9369  0038BA                     l438:
  9370                           
  9371                           ; BSR set to: 15
  9372                           ;inc\CANlib.h: 719: if (mask & 0x00020000)
  9373  0038BA  0100               	movlb	0	; () banked
  9374  0038BC  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  9375  0038BE  D003               	goto	l439
  9376                           
  9377                           ; BSR set to: 0
  9378                           ;inc\CANlib.h: 720: RXM1SIDLbits.EID17 = 0x01;
  9379  0038C0  010F               	movlb	15	; () banked
  9380  0038C2  831D               	bsf	29,1,b	;volatile
  9381  0038C4  D002               	goto	l440
  9382  0038C6                     l439:
  9383                           
  9384                           ; BSR set to: 0
  9385                           ;inc\CANlib.h: 721: else
  9386                           ;inc\CANlib.h: 722: RXM1SIDLbits.EID17 = 0x00;
  9387  0038C6  010F               	movlb	15	; () banked
  9388  0038C8  931D               	bcf	29,1,b	;volatile
  9389  0038CA                     l440:
  9390                           
  9391                           ; BSR set to: 15
  9392                           ;inc\CANlib.h: 724: if (mask & 0x00040000)
  9393  0038CA  0100               	movlb	0	; () banked
  9394  0038CC  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  9395  0038CE  D003               	goto	l441
  9396                           
  9397                           ; BSR set to: 0
  9398                           ;inc\CANlib.h: 725: RXM1SIDLbits.SID0 = 0x01;
  9399  0038D0  010F               	movlb	15	; () banked
  9400  0038D2  8B1D               	bsf	29,5,b	;volatile
  9401  0038D4  D002               	goto	l442
  9402  0038D6                     l441:
  9403                           
  9404                           ; BSR set to: 0
  9405                           ;inc\CANlib.h: 726: else
  9406                           ;inc\CANlib.h: 727: RXM1SIDLbits.SID0 = 0x00;
  9407  0038D6  010F               	movlb	15	; () banked
  9408  0038D8  9B1D               	bcf	29,5,b	;volatile
  9409  0038DA                     l442:
  9410                           
  9411                           ; BSR set to: 15
  9412                           ;inc\CANlib.h: 729: if (mask & 0x00080000)
  9413  0038DA  0100               	movlb	0	; () banked
  9414  0038DC  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  9415  0038DE  D003               	goto	l443
  9416                           
  9417                           ; BSR set to: 0
  9418                           ;inc\CANlib.h: 730: RXM1SIDLbits.SID1 = 0x01;
  9419  0038E0  010F               	movlb	15	; () banked
  9420  0038E2  8D1D               	bsf	29,6,b	;volatile
  9421  0038E4  D002               	goto	l444
  9422  0038E6                     l443:
  9423                           
  9424                           ; BSR set to: 0
  9425                           ;inc\CANlib.h: 731: else
  9426                           ;inc\CANlib.h: 732: RXM1SIDLbits.SID1 = 0x00;
  9427  0038E6  010F               	movlb	15	; () banked
  9428  0038E8  9D1D               	bcf	29,6,b	;volatile
  9429  0038EA                     l444:
  9430                           
  9431                           ; BSR set to: 15
  9432                           ;inc\CANlib.h: 734: if (mask & 0x00100000)
  9433  0038EA  0100               	movlb	0	; () banked
  9434  0038EC  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  9435  0038EE  D003               	goto	l445
  9436                           
  9437                           ; BSR set to: 0
  9438                           ;inc\CANlib.h: 735: RXM1SIDLbits.SID2 = 0x01 ;
  9439  0038F0  010F               	movlb	15	; () banked
  9440  0038F2  8F1D               	bsf	29,7,b	;volatile
  9441  0038F4  D002               	goto	l4423
  9442  0038F6                     l445:
  9443                           
  9444                           ; BSR set to: 0
  9445                           ;inc\CANlib.h: 736: else
  9446                           ;inc\CANlib.h: 737: RXM1SIDLbits.SID2 = 0x00 ;
  9447  0038F6  010F               	movlb	15	; () banked
  9448  0038F8  9F1D               	bcf	29,7,b	;volatile
  9449  0038FA                     l4423:
  9450                           
  9451                           ; BSR set to: 15
  9452                           ;inc\CANlib.h: 739: tamp = (mask >> 21);
  9453  0038FA  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
  9454  0038FE  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
  9455  003902  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
  9456  003906  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
  9457  00390A  0E16               	movlw	22
  9458  00390C  D006               	goto	u5120
  9459  00390E                     u5125:
  9460  00390E  0100               	movlb	0	; () banked
  9461  003910  90D8               	bcf	status,0,c
  9462  003912  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  9463  003914  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  9464  003916  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  9465  003918  337C               	rrcf	??_CANSetMask& (0+255),f,b
  9466  00391A                     u5120:
  9467  00391A  2EE8               	decfsz	wreg,f,c
  9468  00391C  D7F8               	goto	u5125
  9469  00391E  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
  9470  003922  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  9471  003926  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  9472  00392A  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  9473                           
  9474                           ; BSR set to: 0
  9475                           ;inc\CANlib.h: 740: tamp = tamp & 0x000000FF;
  9476  00392E  0100               	movlb	0	; () banked
  9477  003930  5181               	movf	CANSetMask@tamp& (0+255),w,b
  9478  003932  0100               	movlb	0	; () banked
  9479  003934  6F81               	movwf	CANSetMask@tamp& (0+255),b
  9480  003936  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
  9481  003938  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
  9482  00393A  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
  9483                           
  9484                           ; BSR set to: 0
  9485                           ;inc\CANlib.h: 741: RXM1SIDH = (unsigned char) tamp;
  9486  00393C  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  9487  003940  0012               	return	
  9488  003942                     __end_of_CANSetMask:
  9489                           	opt stack 0
  9490                           tblptru	equ	0xFF8
  9491                           tblptrh	equ	0xFF7
  9492                           tblptrl	equ	0xFF6
  9493                           tablat	equ	0xFF5
  9494                           prodh	equ	0xFF4
  9495                           prodl	equ	0xFF3
  9496                           intcon	equ	0xFF2
  9497                           intcon2	equ	0xFF1
  9498                           postinc0	equ	0xFEE
  9499                           wreg	equ	0xFE8
  9500                           indf2	equ	0xFDF
  9501                           postinc2	equ	0xFDE
  9502                           postdec2	equ	0xFDD
  9503                           fsr2h	equ	0xFDA
  9504                           fsr2l	equ	0xFD9
  9505                           status	equ	0xFD8
  9506                           
  9507 ;; *************** function _CANSetFilter *****************
  9508 ;; Defined at:
  9509 ;;		line 749 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  9510 ;; Parameters:    Size  Location     Type
  9511 ;;  numBuffer       1    wreg     enum E16350
  9512 ;;  filter          4   23[BANK0 ] unsigned long 
  9513 ;;  type            1   27[BANK0 ] enum E16313
  9514 ;; Auto vars:     Size  Location     Type
  9515 ;;  numBuffer       1   32[BANK0 ] enum E16350
  9516 ;;  tamp            4   33[BANK0 ] unsigned long 
  9517 ;; Return value:  Size  Location     Type
  9518 ;;		None               void
  9519 ;; Registers used:
  9520 ;;		wreg, status,2, status,0
  9521 ;; Tracked objects:
  9522 ;;		On entry : 0/0
  9523 ;;		On exit  : 0/0
  9524 ;;		Unchanged: 0/0
  9525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9526 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9527 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9528 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9529 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9530 ;;Total ram usage:       14 bytes
  9531 ;; Hardware stack levels used:    1
  9532 ;; Hardware stack levels required when called:    4
  9533 ;; This function calls:
  9534 ;;		Nothing
  9535 ;; This function is called by:
  9536 ;;		_CANInitialize
  9537 ;; This function uses a non-reentrant model
  9538 ;;
  9539                           
  9540                           	psect	text23
  9541  000D2E                     __ptext23:
  9542                           	opt stack 0
  9543  000D2E                     _CANSetFilter:
  9544                           	opt stack 24
  9545                           
  9546                           ; BSR set to: 0
  9547                           ;incstack = 0
  9548                           ;CANSetFilter@numBuffer stored from wreg
  9549  000D2E  0100               	movlb	0	; () banked
  9550  000D30  6F80               	movwf	CANSetFilter@numBuffer& (0+255),b
  9551                           
  9552                           ;inc\CANlib.h: 751: unsigned long tamp;
  9553                           ;inc\CANlib.h: 753: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  9554  000D32  0100               	movlb	0	; () banked
  9555  000D34  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
  9556  000D36  0100               	movlb	0	; () banked
  9557  000D38  A4D8               	btfss	status,2,c
  9558  000D3A  D058               	goto	l4447
  9559                           
  9560                           ; BSR set to: 0
  9561  000D3C  0100               	movlb	0	; () banked
  9562  000D3E  297B               	incf	CANSetFilter@type& (0+255),w,b
  9563  000D40  A4D8               	btfss	status,2,c
  9564  000D42  D054               	goto	l4447
  9565                           
  9566                           ; BSR set to: 0
  9567                           ;inc\CANlib.h: 754: {
  9568                           ;inc\CANlib.h: 755: RXF0SIDLbits.EXIDEN = 0x00;
  9569  000D44  010F               	movlb	15	; () banked
  9570  000D46  9701               	bcf	1,3,b	;volatile
  9571                           
  9572                           ; BSR set to: 15
  9573                           ;inc\CANlib.h: 757: tamp = (filter >> 3);
  9574  000D48  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
  9575  000D4C  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9576  000D50  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9577  000D54  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9578  000D58  0E04               	movlw	4
  9579  000D5A  D006               	goto	u5150
  9580  000D5C                     u5155:
  9581  000D5C  0100               	movlb	0	; () banked
  9582  000D5E  90D8               	bcf	status,0,c
  9583  000D60  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9584  000D62  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9585  000D64  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9586  000D66  337C               	rrcf	??_CANSetFilter& (0+255),f,b
  9587  000D68                     u5150:
  9588  000D68  2EE8               	decfsz	wreg,f,c
  9589  000D6A  D7F8               	goto	u5155
  9590  000D6C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
  9591  000D70  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9592  000D74  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9593  000D78  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9594                           
  9595                           ; BSR set to: 0
  9596                           ;inc\CANlib.h: 758: tamp = tamp & 0x000000FF;
  9597  000D7C  0100               	movlb	0	; () banked
  9598  000D7E  5181               	movf	CANSetFilter@tamp& (0+255),w,b
  9599  000D80  0100               	movlb	0	; () banked
  9600  000D82  6F81               	movwf	CANSetFilter@tamp& (0+255),b
  9601  000D84  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9602  000D86  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9603  000D88  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9604                           
  9605                           ; BSR set to: 0
  9606                           ;inc\CANlib.h: 759: RXF0SIDH = (unsigned char) tamp;
  9607  000D8A  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  9608                           
  9609                           ; BSR set to: 0
  9610                           ;inc\CANlib.h: 761: tamp = filter & 0x00000007;
  9611  000D8E  0E07               	movlw	7
  9612  000D90  0100               	movlb	0	; () banked
  9613  000D92  1577               	andwf	CANSetFilter@filter& (0+255),w,b
  9614  000D94  0100               	movlb	0	; () banked
  9615  000D96  6F81               	movwf	CANSetFilter@tamp& (0+255),b
  9616  000D98  0E00               	movlw	0
  9617  000D9A  0100               	movlb	0	; () banked
  9618  000D9C  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9619  000D9E  0100               	movlb	0	; () banked
  9620  000DA0  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9621  000DA2  0E00               	movlw	0
  9622  000DA4  0100               	movlb	0	; () banked
  9623  000DA6  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9624  000DA8  0100               	movlb	0	; () banked
  9625  000DAA  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9626  000DAC  0E00               	movlw	0
  9627  000DAE  0100               	movlb	0	; () banked
  9628  000DB0  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9629  000DB2  0100               	movlb	0	; () banked
  9630  000DB4  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9631                           
  9632                           ; BSR set to: 0
  9633                           ;inc\CANlib.h: 762: tamp = tamp << 5;
  9634  000DB6  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
  9635  000DBA  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9636  000DBE  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9637  000DC2  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9638  000DC6  0E05               	movlw	5
  9639  000DC8                     u5165:
  9640  000DC8  90D8               	bcf	status,0,c
  9641  000DCA  0100               	movlb	0	; () banked
  9642  000DCC  377C               	rlcf	??_CANSetFilter& (0+255),f,b
  9643  000DCE  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  9644  000DD0  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  9645  000DD2  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  9646  000DD4  2EE8               	decfsz	wreg,f,c
  9647  000DD6  D7F8               	goto	u5165
  9648  000DD8  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
  9649  000DDC  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9650  000DE0  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9651  000DE4  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9652                           
  9653                           ; BSR set to: 0
  9654                           ;inc\CANlib.h: 763: RXF0SIDL = (unsigned char) tamp;
  9655  000DE8  C081  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  9656  000DEC                     l4447:
  9657                           
  9658                           ; BSR set to: 0
  9659                           ;inc\CANlib.h: 764: }
  9660                           ;inc\CANlib.h: 766: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  9661  000DEC  0100               	movlb	0	; () banked
  9662  000DEE  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
  9663  000DF0  A4D8               	btfss	status,2,c
  9664  000DF2  D058               	goto	l4465
  9665                           
  9666                           ; BSR set to: 0
  9667  000DF4  0100               	movlb	0	; () banked
  9668  000DF6  297B               	incf	CANSetFilter@type& (0+255),w,b
  9669  000DF8  A4D8               	btfss	status,2,c
  9670  000DFA  D054               	goto	l4465
  9671                           
  9672                           ; BSR set to: 0
  9673                           ;inc\CANlib.h: 767: {
  9674                           ;inc\CANlib.h: 768: RXF1SIDLbits.EXIDEN = 0x00;
  9675  000DFC  010F               	movlb	15	; () banked
  9676  000DFE  9705               	bcf	5,3,b	;volatile
  9677                           
  9678                           ; BSR set to: 15
  9679                           ;inc\CANlib.h: 770: tamp = (filter >> 3);
  9680  000E00  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
  9681  000E04  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9682  000E08  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9683  000E0C  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9684  000E10  0E04               	movlw	4
  9685  000E12  D006               	goto	u5190
  9686  000E14                     u5195:
  9687  000E14  0100               	movlb	0	; () banked
  9688  000E16  90D8               	bcf	status,0,c
  9689  000E18  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9690  000E1A  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9691  000E1C  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9692  000E1E  337C               	rrcf	??_CANSetFilter& (0+255),f,b
  9693  000E20                     u5190:
  9694  000E20  2EE8               	decfsz	wreg,f,c
  9695  000E22  D7F8               	goto	u5195
  9696  000E24  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
  9697  000E28  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9698  000E2C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9699  000E30  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9700                           
  9701                           ; BSR set to: 0
  9702                           ;inc\CANlib.h: 771: tamp = tamp & 0x000000FF;
  9703  000E34  0100               	movlb	0	; () banked
  9704  000E36  5181               	movf	CANSetFilter@tamp& (0+255),w,b
  9705  000E38  0100               	movlb	0	; () banked
  9706  000E3A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
  9707  000E3C  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9708  000E3E  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9709  000E40  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9710                           
  9711                           ; BSR set to: 0
  9712                           ;inc\CANlib.h: 772: RXF1SIDH = (unsigned char) tamp;
  9713  000E42  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  9714                           
  9715                           ; BSR set to: 0
  9716                           ;inc\CANlib.h: 774: tamp = filter & 0x00000007;
  9717  000E46  0E07               	movlw	7
  9718  000E48  0100               	movlb	0	; () banked
  9719  000E4A  1577               	andwf	CANSetFilter@filter& (0+255),w,b
  9720  000E4C  0100               	movlb	0	; () banked
  9721  000E4E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
  9722  000E50  0E00               	movlw	0
  9723  000E52  0100               	movlb	0	; () banked
  9724  000E54  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9725  000E56  0100               	movlb	0	; () banked
  9726  000E58  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9727  000E5A  0E00               	movlw	0
  9728  000E5C  0100               	movlb	0	; () banked
  9729  000E5E  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9730  000E60  0100               	movlb	0	; () banked
  9731  000E62  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9732  000E64  0E00               	movlw	0
  9733  000E66  0100               	movlb	0	; () banked
  9734  000E68  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9735  000E6A  0100               	movlb	0	; () banked
  9736  000E6C  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9737                           
  9738                           ; BSR set to: 0
  9739                           ;inc\CANlib.h: 775: tamp = tamp << 5;
  9740  000E6E  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
  9741  000E72  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9742  000E76  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9743  000E7A  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9744  000E7E  0E05               	movlw	5
  9745  000E80                     u5205:
  9746  000E80  90D8               	bcf	status,0,c
  9747  000E82  0100               	movlb	0	; () banked
  9748  000E84  377C               	rlcf	??_CANSetFilter& (0+255),f,b
  9749  000E86  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  9750  000E88  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  9751  000E8A  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  9752  000E8C  2EE8               	decfsz	wreg,f,c
  9753  000E8E  D7F8               	goto	u5205
  9754  000E90  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
  9755  000E94  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9756  000E98  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9757  000E9C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9758                           
  9759                           ; BSR set to: 0
  9760                           ;inc\CANlib.h: 776: RXF1SIDL = (unsigned char) tamp;
  9761  000EA0  C081  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  9762  000EA4                     l4465:
  9763                           
  9764                           ; BSR set to: 0
  9765                           ;inc\CANlib.h: 777: }
  9766                           ;inc\CANlib.h: 779: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  9767  000EA4  0E02               	movlw	2
  9768  000EA6  0100               	movlb	0	; () banked
  9769  000EA8  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  9770  000EAA  A4D8               	btfss	status,2,c
  9771  000EAC  D058               	goto	l4483
  9772                           
  9773                           ; BSR set to: 0
  9774  000EAE  0100               	movlb	0	; () banked
  9775  000EB0  297B               	incf	CANSetFilter@type& (0+255),w,b
  9776  000EB2  A4D8               	btfss	status,2,c
  9777  000EB4  D054               	goto	l4483
  9778                           
  9779                           ; BSR set to: 0
  9780                           ;inc\CANlib.h: 780: {
  9781                           ;inc\CANlib.h: 781: RXF2SIDLbits.EXIDEN = 0x00;
  9782  000EB6  010F               	movlb	15	; () banked
  9783  000EB8  9709               	bcf	9,3,b	;volatile
  9784                           
  9785                           ; BSR set to: 15
  9786                           ;inc\CANlib.h: 783: tamp = (filter >> 3);
  9787  000EBA  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
  9788  000EBE  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9789  000EC2  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9790  000EC6  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9791  000ECA  0E04               	movlw	4
  9792  000ECC  D006               	goto	u5230
  9793  000ECE                     u5235:
  9794  000ECE  0100               	movlb	0	; () banked
  9795  000ED0  90D8               	bcf	status,0,c
  9796  000ED2  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9797  000ED4  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9798  000ED6  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9799  000ED8  337C               	rrcf	??_CANSetFilter& (0+255),f,b
  9800  000EDA                     u5230:
  9801  000EDA  2EE8               	decfsz	wreg,f,c
  9802  000EDC  D7F8               	goto	u5235
  9803  000EDE  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
  9804  000EE2  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9805  000EE6  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9806  000EEA  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9807                           
  9808                           ; BSR set to: 0
  9809                           ;inc\CANlib.h: 784: tamp = tamp & 0x000000FF;
  9810  000EEE  0100               	movlb	0	; () banked
  9811  000EF0  5181               	movf	CANSetFilter@tamp& (0+255),w,b
  9812  000EF2  0100               	movlb	0	; () banked
  9813  000EF4  6F81               	movwf	CANSetFilter@tamp& (0+255),b
  9814  000EF6  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9815  000EF8  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9816  000EFA  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9817                           
  9818                           ; BSR set to: 0
  9819                           ;inc\CANlib.h: 785: RXF2SIDH = (unsigned char) tamp;
  9820  000EFC  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  9821                           
  9822                           ; BSR set to: 0
  9823                           ;inc\CANlib.h: 787: tamp = filter & 0x00000007;
  9824  000F00  0E07               	movlw	7
  9825  000F02  0100               	movlb	0	; () banked
  9826  000F04  1577               	andwf	CANSetFilter@filter& (0+255),w,b
  9827  000F06  0100               	movlb	0	; () banked
  9828  000F08  6F81               	movwf	CANSetFilter@tamp& (0+255),b
  9829  000F0A  0E00               	movlw	0
  9830  000F0C  0100               	movlb	0	; () banked
  9831  000F0E  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9832  000F10  0100               	movlb	0	; () banked
  9833  000F12  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9834  000F14  0E00               	movlw	0
  9835  000F16  0100               	movlb	0	; () banked
  9836  000F18  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9837  000F1A  0100               	movlb	0	; () banked
  9838  000F1C  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9839  000F1E  0E00               	movlw	0
  9840  000F20  0100               	movlb	0	; () banked
  9841  000F22  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9842  000F24  0100               	movlb	0	; () banked
  9843  000F26  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9844                           
  9845                           ; BSR set to: 0
  9846                           ;inc\CANlib.h: 788: tamp = tamp << 5;
  9847  000F28  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
  9848  000F2C  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9849  000F30  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9850  000F34  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9851  000F38  0E05               	movlw	5
  9852  000F3A                     u5245:
  9853  000F3A  90D8               	bcf	status,0,c
  9854  000F3C  0100               	movlb	0	; () banked
  9855  000F3E  377C               	rlcf	??_CANSetFilter& (0+255),f,b
  9856  000F40  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  9857  000F42  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  9858  000F44  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  9859  000F46  2EE8               	decfsz	wreg,f,c
  9860  000F48  D7F8               	goto	u5245
  9861  000F4A  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
  9862  000F4E  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9863  000F52  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9864  000F56  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9865                           
  9866                           ; BSR set to: 0
  9867                           ;inc\CANlib.h: 789: RXF2SIDL = (unsigned char) tamp;
  9868  000F5A  C081  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  9869  000F5E                     l4483:
  9870                           
  9871                           ; BSR set to: 0
  9872                           ;inc\CANlib.h: 790: }
  9873                           ;inc\CANlib.h: 792: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  9874  000F5E  0E03               	movlw	3
  9875  000F60  0100               	movlb	0	; () banked
  9876  000F62  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  9877  000F64  A4D8               	btfss	status,2,c
  9878  000F66  D058               	goto	l4501
  9879                           
  9880                           ; BSR set to: 0
  9881  000F68  0100               	movlb	0	; () banked
  9882  000F6A  297B               	incf	CANSetFilter@type& (0+255),w,b
  9883  000F6C  A4D8               	btfss	status,2,c
  9884  000F6E  D054               	goto	l4501
  9885                           
  9886                           ; BSR set to: 0
  9887                           ;inc\CANlib.h: 793: {
  9888                           ;inc\CANlib.h: 794: RXF3SIDLbits.EXIDEN = 0x00;
  9889  000F70  010F               	movlb	15	; () banked
  9890  000F72  970D               	bcf	13,3,b	;volatile
  9891                           
  9892                           ; BSR set to: 15
  9893                           ;inc\CANlib.h: 796: tamp = (filter >> 3);
  9894  000F74  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
  9895  000F78  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9896  000F7C  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9897  000F80  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9898  000F84  0E04               	movlw	4
  9899  000F86  D006               	goto	u5270
  9900  000F88                     u5275:
  9901  000F88  0100               	movlb	0	; () banked
  9902  000F8A  90D8               	bcf	status,0,c
  9903  000F8C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9904  000F8E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9905  000F90  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9906  000F92  337C               	rrcf	??_CANSetFilter& (0+255),f,b
  9907  000F94                     u5270:
  9908  000F94  2EE8               	decfsz	wreg,f,c
  9909  000F96  D7F8               	goto	u5275
  9910  000F98  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
  9911  000F9C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9912  000FA0  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9913  000FA4  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9914                           
  9915                           ; BSR set to: 0
  9916                           ;inc\CANlib.h: 797: tamp = tamp & 0x000000FF;
  9917  000FA8  0100               	movlb	0	; () banked
  9918  000FAA  5181               	movf	CANSetFilter@tamp& (0+255),w,b
  9919  000FAC  0100               	movlb	0	; () banked
  9920  000FAE  6F81               	movwf	CANSetFilter@tamp& (0+255),b
  9921  000FB0  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9922  000FB2  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9923  000FB4  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9924                           
  9925                           ; BSR set to: 0
  9926                           ;inc\CANlib.h: 798: RXF3SIDH = (unsigned char) tamp;
  9927  000FB6  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  9928                           
  9929                           ; BSR set to: 0
  9930                           ;inc\CANlib.h: 800: tamp = filter & 0x00000007;
  9931  000FBA  0E07               	movlw	7
  9932  000FBC  0100               	movlb	0	; () banked
  9933  000FBE  1577               	andwf	CANSetFilter@filter& (0+255),w,b
  9934  000FC0  0100               	movlb	0	; () banked
  9935  000FC2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
  9936  000FC4  0E00               	movlw	0
  9937  000FC6  0100               	movlb	0	; () banked
  9938  000FC8  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9939  000FCA  0100               	movlb	0	; () banked
  9940  000FCC  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9941  000FCE  0E00               	movlw	0
  9942  000FD0  0100               	movlb	0	; () banked
  9943  000FD2  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9944  000FD4  0100               	movlb	0	; () banked
  9945  000FD6  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9946  000FD8  0E00               	movlw	0
  9947  000FDA  0100               	movlb	0	; () banked
  9948  000FDC  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9949  000FDE  0100               	movlb	0	; () banked
  9950  000FE0  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9951                           
  9952                           ; BSR set to: 0
  9953                           ;inc\CANlib.h: 801: tamp = tamp << 5;
  9954  000FE2  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
  9955  000FE6  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9956  000FEA  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9957  000FEE  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9958  000FF2  0E05               	movlw	5
  9959  000FF4                     u5285:
  9960  000FF4  90D8               	bcf	status,0,c
  9961  000FF6  0100               	movlb	0	; () banked
  9962  000FF8  377C               	rlcf	??_CANSetFilter& (0+255),f,b
  9963  000FFA  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  9964  000FFC  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  9965  000FFE  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  9966  001000  2EE8               	decfsz	wreg,f,c
  9967  001002  D7F8               	goto	u5285
  9968  001004  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
  9969  001008  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9970  00100C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9971  001010  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9972                           
  9973                           ; BSR set to: 0
  9974                           ;inc\CANlib.h: 802: RXF3SIDL = (unsigned char) tamp;
  9975  001014  C081  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  9976  001018                     l4501:
  9977                           
  9978                           ; BSR set to: 0
  9979                           ;inc\CANlib.h: 803: }
  9980                           ;inc\CANlib.h: 805: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  9981  001018  0E04               	movlw	4
  9982  00101A  0100               	movlb	0	; () banked
  9983  00101C  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  9984  00101E  A4D8               	btfss	status,2,c
  9985  001020  D058               	goto	l4519
  9986                           
  9987                           ; BSR set to: 0
  9988  001022  0100               	movlb	0	; () banked
  9989  001024  297B               	incf	CANSetFilter@type& (0+255),w,b
  9990  001026  A4D8               	btfss	status,2,c
  9991  001028  D054               	goto	l4519
  9992                           
  9993                           ; BSR set to: 0
  9994                           ;inc\CANlib.h: 806: {
  9995                           ;inc\CANlib.h: 807: RXF4SIDLbits.EXIDEN = 0x00;
  9996  00102A  010F               	movlb	15	; () banked
  9997  00102C  9711               	bcf	17,3,b	;volatile
  9998                           
  9999                           ; BSR set to: 15
 10000                           ;inc\CANlib.h: 809: tamp = (filter >> 3);
 10001  00102E  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 10002  001032  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10003  001036  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10004  00103A  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10005  00103E  0E04               	movlw	4
 10006  001040  D006               	goto	u5310
 10007  001042                     u5315:
 10008  001042  0100               	movlb	0	; () banked
 10009  001044  90D8               	bcf	status,0,c
 10010  001046  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10011  001048  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10012  00104A  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10013  00104C  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 10014  00104E                     u5310:
 10015  00104E  2EE8               	decfsz	wreg,f,c
 10016  001050  D7F8               	goto	u5315
 10017  001052  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10018  001056  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10019  00105A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10020  00105E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10021                           
 10022                           ; BSR set to: 0
 10023                           ;inc\CANlib.h: 810: tamp = tamp & 0x000000FF;
 10024  001062  0100               	movlb	0	; () banked
 10025  001064  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 10026  001066  0100               	movlb	0	; () banked
 10027  001068  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10028  00106A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10029  00106C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10030  00106E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10031                           
 10032                           ; BSR set to: 0
 10033                           ;inc\CANlib.h: 811: RXF4SIDH = (unsigned char) tamp;
 10034  001070  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 10035                           
 10036                           ; BSR set to: 0
 10037                           ;inc\CANlib.h: 813: tamp = filter & 0x00000007;
 10038  001074  0E07               	movlw	7
 10039  001076  0100               	movlb	0	; () banked
 10040  001078  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 10041  00107A  0100               	movlb	0	; () banked
 10042  00107C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10043  00107E  0E00               	movlw	0
 10044  001080  0100               	movlb	0	; () banked
 10045  001082  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 10046  001084  0100               	movlb	0	; () banked
 10047  001086  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10048  001088  0E00               	movlw	0
 10049  00108A  0100               	movlb	0	; () banked
 10050  00108C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 10051  00108E  0100               	movlb	0	; () banked
 10052  001090  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10053  001092  0E00               	movlw	0
 10054  001094  0100               	movlb	0	; () banked
 10055  001096  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 10056  001098  0100               	movlb	0	; () banked
 10057  00109A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10058                           
 10059                           ; BSR set to: 0
 10060                           ;inc\CANlib.h: 814: tamp = tamp << 5;
 10061  00109C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 10062  0010A0  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10063  0010A4  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10064  0010A8  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10065  0010AC  0E05               	movlw	5
 10066  0010AE                     u5325:
 10067  0010AE  90D8               	bcf	status,0,c
 10068  0010B0  0100               	movlb	0	; () banked
 10069  0010B2  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 10070  0010B4  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 10071  0010B6  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 10072  0010B8  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 10073  0010BA  2EE8               	decfsz	wreg,f,c
 10074  0010BC  D7F8               	goto	u5325
 10075  0010BE  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10076  0010C2  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10077  0010C6  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10078  0010CA  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10079                           
 10080                           ; BSR set to: 0
 10081                           ;inc\CANlib.h: 815: RXF4SIDL = (unsigned char) tamp;
 10082  0010CE  C081  FF11         	movff	CANSetFilter@tamp,3857	;volatile
 10083  0010D2                     l4519:
 10084                           
 10085                           ; BSR set to: 0
 10086                           ;inc\CANlib.h: 816: }
 10087                           ;inc\CANlib.h: 818: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
 10088  0010D2  0E05               	movlw	5
 10089  0010D4  0100               	movlb	0	; () banked
 10090  0010D6  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 10091  0010D8  A4D8               	btfss	status,2,c
 10092  0010DA  D058               	goto	l4537
 10093                           
 10094                           ; BSR set to: 0
 10095  0010DC  0100               	movlb	0	; () banked
 10096  0010DE  297B               	incf	CANSetFilter@type& (0+255),w,b
 10097  0010E0  A4D8               	btfss	status,2,c
 10098  0010E2  D054               	goto	l4537
 10099                           
 10100                           ; BSR set to: 0
 10101                           ;inc\CANlib.h: 819: {
 10102                           ;inc\CANlib.h: 820: RXF5SIDLbits.EXIDEN = 0x00;
 10103  0010E4  010F               	movlb	15	; () banked
 10104  0010E6  9715               	bcf	21,3,b	;volatile
 10105                           
 10106                           ; BSR set to: 15
 10107                           ;inc\CANlib.h: 822: tamp = (filter >> 3);
 10108  0010E8  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 10109  0010EC  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10110  0010F0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10111  0010F4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10112  0010F8  0E04               	movlw	4
 10113  0010FA  D006               	goto	u5350
 10114  0010FC                     u5355:
 10115  0010FC  0100               	movlb	0	; () banked
 10116  0010FE  90D8               	bcf	status,0,c
 10117  001100  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10118  001102  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10119  001104  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10120  001106  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 10121  001108                     u5350:
 10122  001108  2EE8               	decfsz	wreg,f,c
 10123  00110A  D7F8               	goto	u5355
 10124  00110C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10125  001110  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10126  001114  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10127  001118  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10128                           
 10129                           ; BSR set to: 0
 10130                           ;inc\CANlib.h: 823: tamp = tamp & 0x000000FF;
 10131  00111C  0100               	movlb	0	; () banked
 10132  00111E  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 10133  001120  0100               	movlb	0	; () banked
 10134  001122  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10135  001124  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10136  001126  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10137  001128  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10138                           
 10139                           ; BSR set to: 0
 10140                           ;inc\CANlib.h: 824: RXF5SIDH = (unsigned char) tamp;
 10141  00112A  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 10142                           
 10143                           ; BSR set to: 0
 10144                           ;inc\CANlib.h: 826: tamp = filter & 0x00000007;
 10145  00112E  0E07               	movlw	7
 10146  001130  0100               	movlb	0	; () banked
 10147  001132  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 10148  001134  0100               	movlb	0	; () banked
 10149  001136  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10150  001138  0E00               	movlw	0
 10151  00113A  0100               	movlb	0	; () banked
 10152  00113C  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 10153  00113E  0100               	movlb	0	; () banked
 10154  001140  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10155  001142  0E00               	movlw	0
 10156  001144  0100               	movlb	0	; () banked
 10157  001146  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 10158  001148  0100               	movlb	0	; () banked
 10159  00114A  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10160  00114C  0E00               	movlw	0
 10161  00114E  0100               	movlb	0	; () banked
 10162  001150  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 10163  001152  0100               	movlb	0	; () banked
 10164  001154  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10165                           
 10166                           ; BSR set to: 0
 10167                           ;inc\CANlib.h: 827: tamp = tamp << 5;
 10168  001156  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 10169  00115A  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10170  00115E  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10171  001162  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10172  001166  0E05               	movlw	5
 10173  001168                     u5365:
 10174  001168  90D8               	bcf	status,0,c
 10175  00116A  0100               	movlb	0	; () banked
 10176  00116C  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 10177  00116E  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 10178  001170  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 10179  001172  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 10180  001174  2EE8               	decfsz	wreg,f,c
 10181  001176  D7F8               	goto	u5365
 10182  001178  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10183  00117C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10184  001180  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10185  001184  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10186                           
 10187                           ; BSR set to: 0
 10188                           ;inc\CANlib.h: 828: RXF5SIDL = (unsigned char) tamp;
 10189  001188  C081  FF15         	movff	CANSetFilter@tamp,3861	;volatile
 10190  00118C                     l4537:
 10191                           
 10192                           ; BSR set to: 0
 10193                           ;inc\CANlib.h: 829: }
 10194                           ;inc\CANlib.h: 832: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
 10195  00118C  0100               	movlb	0	; () banked
 10196  00118E  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 10197  001190  0100               	movlb	0	; () banked
 10198  001192  A4D8               	btfss	status,2,c
 10199  001194  D089               	goto	l4571
 10200                           
 10201                           ; BSR set to: 0
 10202  001196  0EF7               	movlw	247
 10203  001198  0100               	movlb	0	; () banked
 10204  00119A  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 10205  00119C  A4D8               	btfss	status,2,c
 10206  00119E  D084               	goto	l4571
 10207                           
 10208                           ; BSR set to: 0
 10209                           ;inc\CANlib.h: 833: {
 10210                           ;inc\CANlib.h: 834: RXF0SIDLbits.EXIDEN = 0x01;
 10211  0011A0  010F               	movlb	15	; () banked
 10212  0011A2  8701               	bsf	1,3,b	;volatile
 10213                           
 10214                           ; BSR set to: 15
 10215                           ;inc\CANlib.h: 836: tamp = filter & 0x000000FF;
 10216  0011A4  0100               	movlb	0	; () banked
 10217  0011A6  5177               	movf	CANSetFilter@filter& (0+255),w,b
 10218  0011A8  0100               	movlb	0	; () banked
 10219  0011AA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10220  0011AC  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10221  0011AE  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10222  0011B0  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10223                           
 10224                           ; BSR set to: 0
 10225                           ;inc\CANlib.h: 837: RXF0EIDL = (unsigned char) tamp;
 10226  0011B2  C081  FF03         	movff	CANSetFilter@tamp,3843	;volatile
 10227                           
 10228                           ; BSR set to: 0
 10229                           ;inc\CANlib.h: 839: tamp = filter & 0x0000FF00;
 10230  0011B6  0E00               	movlw	0
 10231  0011B8  0100               	movlb	0	; () banked
 10232  0011BA  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 10233  0011BC  0100               	movlb	0	; () banked
 10234  0011BE  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10235  0011C0  0EFF               	movlw	255
 10236  0011C2  0100               	movlb	0	; () banked
 10237  0011C4  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 10238  0011C6  0100               	movlb	0	; () banked
 10239  0011C8  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10240  0011CA  0E00               	movlw	0
 10241  0011CC  0100               	movlb	0	; () banked
 10242  0011CE  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 10243  0011D0  0100               	movlb	0	; () banked
 10244  0011D2  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10245  0011D4  0E00               	movlw	0
 10246  0011D6  0100               	movlb	0	; () banked
 10247  0011D8  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 10248  0011DA  0100               	movlb	0	; () banked
 10249  0011DC  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10250                           
 10251                           ; BSR set to: 0
 10252                           ;inc\CANlib.h: 840: tamp = tamp >> 8;
 10253  0011DE  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 10254  0011E2  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10255  0011E6  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10256  0011EA  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10257  0011EE  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 10258  0011F2  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 10259  0011F6  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 10260  0011FA  0100               	movlb	0	; () banked
 10261  0011FC  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 10262  0011FE  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10263  001202  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10264  001206  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10265  00120A  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10266                           
 10267                           ; BSR set to: 0
 10268                           ;inc\CANlib.h: 841: RXF0EIDH = (unsigned char) tamp;
 10269  00120E  C081  FF02         	movff	CANSetFilter@tamp,3842	;volatile
 10270                           
 10271                           ; BSR set to: 0
 10272                           ;inc\CANlib.h: 843: if (filter & 0x00010000)
 10273  001212  0100               	movlb	0	; () banked
 10274  001214  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 10275  001216  D003               	goto	l457
 10276                           
 10277                           ; BSR set to: 0
 10278                           ;inc\CANlib.h: 844: RXF0SIDLbits.EID16 = 0x01;
 10279  001218  010F               	movlb	15	; () banked
 10280  00121A  8101               	bsf	1,0,b	;volatile
 10281  00121C  D002               	goto	l458
 10282  00121E                     l457:
 10283                           
 10284                           ; BSR set to: 0
 10285                           ;inc\CANlib.h: 845: else
 10286                           ;inc\CANlib.h: 846: RXF0SIDLbits.EID16 = 0x00;
 10287  00121E  010F               	movlb	15	; () banked
 10288  001220  9101               	bcf	1,0,b	;volatile
 10289  001222                     l458:
 10290                           
 10291                           ; BSR set to: 15
 10292                           ;inc\CANlib.h: 848: if (filter & 0x00020000)
 10293  001222  0100               	movlb	0	; () banked
 10294  001224  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 10295  001226  D003               	goto	l459
 10296                           
 10297                           ; BSR set to: 0
 10298                           ;inc\CANlib.h: 849: RXF0SIDLbits.EID17 = 0x01;
 10299  001228  010F               	movlb	15	; () banked
 10300  00122A  8301               	bsf	1,1,b	;volatile
 10301  00122C  D002               	goto	l460
 10302  00122E                     l459:
 10303                           
 10304                           ; BSR set to: 0
 10305                           ;inc\CANlib.h: 850: else
 10306                           ;inc\CANlib.h: 851: RXF0SIDLbits.EID17 = 0x00;
 10307  00122E  010F               	movlb	15	; () banked
 10308  001230  9301               	bcf	1,1,b	;volatile
 10309  001232                     l460:
 10310                           
 10311                           ; BSR set to: 15
 10312                           ;inc\CANlib.h: 853: if (filter & 0x00040000)
 10313  001232  0100               	movlb	0	; () banked
 10314  001234  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 10315  001236  D003               	goto	l461
 10316                           
 10317                           ; BSR set to: 0
 10318                           ;inc\CANlib.h: 854: RXF0SIDLbits.SID0 = 0x01;
 10319  001238  010F               	movlb	15	; () banked
 10320  00123A  8B01               	bsf	1,5,b	;volatile
 10321  00123C  D002               	goto	l462
 10322  00123E                     l461:
 10323                           
 10324                           ; BSR set to: 0
 10325                           ;inc\CANlib.h: 855: else
 10326                           ;inc\CANlib.h: 856: RXF0SIDLbits.SID0 = 0x00;
 10327  00123E  010F               	movlb	15	; () banked
 10328  001240  9B01               	bcf	1,5,b	;volatile
 10329  001242                     l462:
 10330                           
 10331                           ; BSR set to: 15
 10332                           ;inc\CANlib.h: 858: if (filter & 0x00080000)
 10333  001242  0100               	movlb	0	; () banked
 10334  001244  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 10335  001246  D003               	goto	l463
 10336                           
 10337                           ; BSR set to: 0
 10338                           ;inc\CANlib.h: 859: RXF0SIDLbits.SID1 = 0x01;
 10339  001248  010F               	movlb	15	; () banked
 10340  00124A  8D01               	bsf	1,6,b	;volatile
 10341  00124C  D002               	goto	l464
 10342  00124E                     l463:
 10343                           
 10344                           ; BSR set to: 0
 10345                           ;inc\CANlib.h: 860: else
 10346                           ;inc\CANlib.h: 861: RXF0SIDLbits.SID1 = 0x00;
 10347  00124E  010F               	movlb	15	; () banked
 10348  001250  9D01               	bcf	1,6,b	;volatile
 10349  001252                     l464:
 10350                           
 10351                           ; BSR set to: 15
 10352                           ;inc\CANlib.h: 863: if (filter & 0x00100000)
 10353  001252  0100               	movlb	0	; () banked
 10354  001254  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 10355  001256  D003               	goto	l465
 10356                           
 10357                           ; BSR set to: 0
 10358                           ;inc\CANlib.h: 864: RXF0SIDLbits.SID2 = 0x01 ;
 10359  001258  010F               	movlb	15	; () banked
 10360  00125A  8F01               	bsf	1,7,b	;volatile
 10361  00125C  D002               	goto	l4565
 10362  00125E                     l465:
 10363                           
 10364                           ; BSR set to: 0
 10365                           ;inc\CANlib.h: 865: else
 10366                           ;inc\CANlib.h: 866: RXF0SIDLbits.SID2 = 0x00 ;
 10367  00125E  010F               	movlb	15	; () banked
 10368  001260  9F01               	bcf	1,7,b	;volatile
 10369  001262                     l4565:
 10370                           
 10371                           ; BSR set to: 15
 10372                           ;inc\CANlib.h: 868: tamp = (filter >> 21);
 10373  001262  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 10374  001266  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10375  00126A  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10376  00126E  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10377  001272  0E16               	movlw	22
 10378  001274  D006               	goto	u5440
 10379  001276                     u5445:
 10380  001276  0100               	movlb	0	; () banked
 10381  001278  90D8               	bcf	status,0,c
 10382  00127A  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10383  00127C  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10384  00127E  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10385  001280  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 10386  001282                     u5440:
 10387  001282  2EE8               	decfsz	wreg,f,c
 10388  001284  D7F8               	goto	u5445
 10389  001286  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10390  00128A  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10391  00128E  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10392  001292  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10393                           
 10394                           ; BSR set to: 0
 10395                           ;inc\CANlib.h: 869: tamp = tamp & 0x000000FF;
 10396  001296  0100               	movlb	0	; () banked
 10397  001298  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 10398  00129A  0100               	movlb	0	; () banked
 10399  00129C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10400  00129E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10401  0012A0  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10402  0012A2  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10403                           
 10404                           ; BSR set to: 0
 10405                           ;inc\CANlib.h: 870: RXF0SIDH = (unsigned char) tamp;
 10406  0012A4  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 10407  0012A8                     l4571:
 10408                           
 10409                           ; BSR set to: 0
 10410                           ;inc\CANlib.h: 871: }
 10411                           ;inc\CANlib.h: 873: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
 10412  0012A8  0100               	movlb	0	; () banked
 10413  0012AA  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 10414  0012AC  A4D8               	btfss	status,2,c
 10415  0012AE  D089               	goto	l4605
 10416                           
 10417                           ; BSR set to: 0
 10418  0012B0  0EF7               	movlw	247
 10419  0012B2  0100               	movlb	0	; () banked
 10420  0012B4  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 10421  0012B6  A4D8               	btfss	status,2,c
 10422  0012B8  D084               	goto	l4605
 10423                           
 10424                           ; BSR set to: 0
 10425                           ;inc\CANlib.h: 874: {
 10426                           ;inc\CANlib.h: 875: RXF1SIDLbits.EXIDEN = 0x01;
 10427  0012BA  010F               	movlb	15	; () banked
 10428  0012BC  8705               	bsf	5,3,b	;volatile
 10429                           
 10430                           ; BSR set to: 15
 10431                           ;inc\CANlib.h: 877: tamp = filter & 0x000000FF;
 10432  0012BE  0100               	movlb	0	; () banked
 10433  0012C0  5177               	movf	CANSetFilter@filter& (0+255),w,b
 10434  0012C2  0100               	movlb	0	; () banked
 10435  0012C4  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10436  0012C6  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10437  0012C8  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10438  0012CA  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10439                           
 10440                           ; BSR set to: 0
 10441                           ;inc\CANlib.h: 878: RXF1EIDL = (unsigned char) tamp;
 10442  0012CC  C081  FF07         	movff	CANSetFilter@tamp,3847	;volatile
 10443                           
 10444                           ; BSR set to: 0
 10445                           ;inc\CANlib.h: 880: tamp = filter & 0x0000FF00;
 10446  0012D0  0E00               	movlw	0
 10447  0012D2  0100               	movlb	0	; () banked
 10448  0012D4  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 10449  0012D6  0100               	movlb	0	; () banked
 10450  0012D8  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10451  0012DA  0EFF               	movlw	255
 10452  0012DC  0100               	movlb	0	; () banked
 10453  0012DE  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 10454  0012E0  0100               	movlb	0	; () banked
 10455  0012E2  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10456  0012E4  0E00               	movlw	0
 10457  0012E6  0100               	movlb	0	; () banked
 10458  0012E8  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 10459  0012EA  0100               	movlb	0	; () banked
 10460  0012EC  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10461  0012EE  0E00               	movlw	0
 10462  0012F0  0100               	movlb	0	; () banked
 10463  0012F2  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 10464  0012F4  0100               	movlb	0	; () banked
 10465  0012F6  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10466                           
 10467                           ; BSR set to: 0
 10468                           ;inc\CANlib.h: 881: tamp = tamp >> 8;
 10469  0012F8  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 10470  0012FC  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10471  001300  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10472  001304  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10473  001308  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 10474  00130C  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 10475  001310  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 10476  001314  0100               	movlb	0	; () banked
 10477  001316  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 10478  001318  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10479  00131C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10480  001320  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10481  001324  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10482                           
 10483                           ; BSR set to: 0
 10484                           ;inc\CANlib.h: 882: RXF1EIDH = (unsigned char) tamp;
 10485  001328  C081  FF06         	movff	CANSetFilter@tamp,3846	;volatile
 10486                           
 10487                           ; BSR set to: 0
 10488                           ;inc\CANlib.h: 884: if (filter & 0x00010000)
 10489  00132C  0100               	movlb	0	; () banked
 10490  00132E  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 10491  001330  D003               	goto	l468
 10492                           
 10493                           ; BSR set to: 0
 10494                           ;inc\CANlib.h: 885: RXF1SIDLbits.EID16 = 0x01;
 10495  001332  010F               	movlb	15	; () banked
 10496  001334  8105               	bsf	5,0,b	;volatile
 10497  001336  D002               	goto	l469
 10498  001338                     l468:
 10499                           
 10500                           ; BSR set to: 0
 10501                           ;inc\CANlib.h: 886: else
 10502                           ;inc\CANlib.h: 887: RXF1SIDLbits.EID16 = 0x00;
 10503  001338  010F               	movlb	15	; () banked
 10504  00133A  9105               	bcf	5,0,b	;volatile
 10505  00133C                     l469:
 10506                           
 10507                           ; BSR set to: 15
 10508                           ;inc\CANlib.h: 889: if (filter & 0x00020000)
 10509  00133C  0100               	movlb	0	; () banked
 10510  00133E  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 10511  001340  D003               	goto	l470
 10512                           
 10513                           ; BSR set to: 0
 10514                           ;inc\CANlib.h: 890: RXF1SIDLbits.EID17 = 0x01;
 10515  001342  010F               	movlb	15	; () banked
 10516  001344  8305               	bsf	5,1,b	;volatile
 10517  001346  D002               	goto	l471
 10518  001348                     l470:
 10519                           
 10520                           ; BSR set to: 0
 10521                           ;inc\CANlib.h: 891: else
 10522                           ;inc\CANlib.h: 892: RXF1SIDLbits.EID17 = 0x00;
 10523  001348  010F               	movlb	15	; () banked
 10524  00134A  9305               	bcf	5,1,b	;volatile
 10525  00134C                     l471:
 10526                           
 10527                           ; BSR set to: 15
 10528                           ;inc\CANlib.h: 894: if (filter & 0x00040000)
 10529  00134C  0100               	movlb	0	; () banked
 10530  00134E  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 10531  001350  D003               	goto	l472
 10532                           
 10533                           ; BSR set to: 0
 10534                           ;inc\CANlib.h: 895: RXF1SIDLbits.SID0 = 0x01;
 10535  001352  010F               	movlb	15	; () banked
 10536  001354  8B05               	bsf	5,5,b	;volatile
 10537  001356  D002               	goto	l473
 10538  001358                     l472:
 10539                           
 10540                           ; BSR set to: 0
 10541                           ;inc\CANlib.h: 896: else
 10542                           ;inc\CANlib.h: 897: RXF1SIDLbits.SID0 = 0x00;
 10543  001358  010F               	movlb	15	; () banked
 10544  00135A  9B05               	bcf	5,5,b	;volatile
 10545  00135C                     l473:
 10546                           
 10547                           ; BSR set to: 15
 10548                           ;inc\CANlib.h: 899: if (filter & 0x00080000)
 10549  00135C  0100               	movlb	0	; () banked
 10550  00135E  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 10551  001360  D003               	goto	l474
 10552                           
 10553                           ; BSR set to: 0
 10554                           ;inc\CANlib.h: 900: RXF1SIDLbits.SID1 = 0x01;
 10555  001362  010F               	movlb	15	; () banked
 10556  001364  8D05               	bsf	5,6,b	;volatile
 10557  001366  D002               	goto	l475
 10558  001368                     l474:
 10559                           
 10560                           ; BSR set to: 0
 10561                           ;inc\CANlib.h: 901: else
 10562                           ;inc\CANlib.h: 902: RXF1SIDLbits.SID1 = 0x00;
 10563  001368  010F               	movlb	15	; () banked
 10564  00136A  9D05               	bcf	5,6,b	;volatile
 10565  00136C                     l475:
 10566                           
 10567                           ; BSR set to: 15
 10568                           ;inc\CANlib.h: 904: if (filter & 0x00100000)
 10569  00136C  0100               	movlb	0	; () banked
 10570  00136E  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 10571  001370  D003               	goto	l476
 10572                           
 10573                           ; BSR set to: 0
 10574                           ;inc\CANlib.h: 905: RXF1SIDLbits.SID2 = 0x01 ;
 10575  001372  010F               	movlb	15	; () banked
 10576  001374  8F05               	bsf	5,7,b	;volatile
 10577  001376  D002               	goto	l4599
 10578  001378                     l476:
 10579                           
 10580                           ; BSR set to: 0
 10581                           ;inc\CANlib.h: 906: else
 10582                           ;inc\CANlib.h: 907: RXF1SIDLbits.SID2 = 0x00 ;
 10583  001378  010F               	movlb	15	; () banked
 10584  00137A  9F05               	bcf	5,7,b	;volatile
 10585  00137C                     l4599:
 10586                           
 10587                           ; BSR set to: 15
 10588                           ;inc\CANlib.h: 909: tamp = (filter >> 21);
 10589  00137C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 10590  001380  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10591  001384  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10592  001388  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10593  00138C  0E16               	movlw	22
 10594  00138E  D006               	goto	u5520
 10595  001390                     u5525:
 10596  001390  0100               	movlb	0	; () banked
 10597  001392  90D8               	bcf	status,0,c
 10598  001394  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10599  001396  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10600  001398  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10601  00139A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 10602  00139C                     u5520:
 10603  00139C  2EE8               	decfsz	wreg,f,c
 10604  00139E  D7F8               	goto	u5525
 10605  0013A0  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10606  0013A4  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10607  0013A8  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10608  0013AC  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10609                           
 10610                           ; BSR set to: 0
 10611                           ;inc\CANlib.h: 910: tamp = tamp & 0x000000FF;
 10612  0013B0  0100               	movlb	0	; () banked
 10613  0013B2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 10614  0013B4  0100               	movlb	0	; () banked
 10615  0013B6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10616  0013B8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10617  0013BA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10618  0013BC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10619                           
 10620                           ; BSR set to: 0
 10621                           ;inc\CANlib.h: 911: RXF1SIDH = (unsigned char) tamp;
 10622  0013BE  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 10623  0013C2                     l4605:
 10624                           
 10625                           ; BSR set to: 0
 10626                           ;inc\CANlib.h: 912: }
 10627                           ;inc\CANlib.h: 915: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
 10628  0013C2  0E02               	movlw	2
 10629  0013C4  0100               	movlb	0	; () banked
 10630  0013C6  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 10631  0013C8  A4D8               	btfss	status,2,c
 10632  0013CA  D089               	goto	l4639
 10633                           
 10634                           ; BSR set to: 0
 10635  0013CC  0EF7               	movlw	247
 10636  0013CE  0100               	movlb	0	; () banked
 10637  0013D0  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 10638  0013D2  A4D8               	btfss	status,2,c
 10639  0013D4  D084               	goto	l4639
 10640                           
 10641                           ; BSR set to: 0
 10642                           ;inc\CANlib.h: 916: {
 10643                           ;inc\CANlib.h: 917: RXF2SIDLbits.EXIDEN = 0x01;
 10644  0013D6  010F               	movlb	15	; () banked
 10645  0013D8  8709               	bsf	9,3,b	;volatile
 10646                           
 10647                           ; BSR set to: 15
 10648                           ;inc\CANlib.h: 919: tamp = filter & 0x000000FF;
 10649  0013DA  0100               	movlb	0	; () banked
 10650  0013DC  5177               	movf	CANSetFilter@filter& (0+255),w,b
 10651  0013DE  0100               	movlb	0	; () banked
 10652  0013E0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10653  0013E2  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10654  0013E4  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10655  0013E6  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10656                           
 10657                           ; BSR set to: 0
 10658                           ;inc\CANlib.h: 920: RXF2EIDL = (unsigned char) tamp;
 10659  0013E8  C081  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
 10660                           
 10661                           ; BSR set to: 0
 10662                           ;inc\CANlib.h: 922: tamp = filter & 0x0000FF00;
 10663  0013EC  0E00               	movlw	0
 10664  0013EE  0100               	movlb	0	; () banked
 10665  0013F0  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 10666  0013F2  0100               	movlb	0	; () banked
 10667  0013F4  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10668  0013F6  0EFF               	movlw	255
 10669  0013F8  0100               	movlb	0	; () banked
 10670  0013FA  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 10671  0013FC  0100               	movlb	0	; () banked
 10672  0013FE  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10673  001400  0E00               	movlw	0
 10674  001402  0100               	movlb	0	; () banked
 10675  001404  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 10676  001406  0100               	movlb	0	; () banked
 10677  001408  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10678  00140A  0E00               	movlw	0
 10679  00140C  0100               	movlb	0	; () banked
 10680  00140E  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 10681  001410  0100               	movlb	0	; () banked
 10682  001412  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10683                           
 10684                           ; BSR set to: 0
 10685                           ;inc\CANlib.h: 923: tamp = tamp >> 8;
 10686  001414  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 10687  001418  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10688  00141C  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10689  001420  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10690  001424  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 10691  001428  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 10692  00142C  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 10693  001430  0100               	movlb	0	; () banked
 10694  001432  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 10695  001434  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10696  001438  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10697  00143C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10698  001440  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10699                           
 10700                           ; BSR set to: 0
 10701                           ;inc\CANlib.h: 924: RXF2EIDH = (unsigned char) tamp;
 10702  001444  C081  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
 10703                           
 10704                           ; BSR set to: 0
 10705                           ;inc\CANlib.h: 926: if (filter & 0x00010000)
 10706  001448  0100               	movlb	0	; () banked
 10707  00144A  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 10708  00144C  D003               	goto	l479
 10709                           
 10710                           ; BSR set to: 0
 10711                           ;inc\CANlib.h: 927: RXF2SIDLbits.EID16 = 0x01;
 10712  00144E  010F               	movlb	15	; () banked
 10713  001450  8109               	bsf	9,0,b	;volatile
 10714  001452  D002               	goto	l480
 10715  001454                     l479:
 10716                           
 10717                           ; BSR set to: 0
 10718                           ;inc\CANlib.h: 928: else
 10719                           ;inc\CANlib.h: 929: RXF2SIDLbits.EID16 = 0x00;
 10720  001454  010F               	movlb	15	; () banked
 10721  001456  9109               	bcf	9,0,b	;volatile
 10722  001458                     l480:
 10723                           
 10724                           ; BSR set to: 15
 10725                           ;inc\CANlib.h: 931: if (filter & 0x00020000)
 10726  001458  0100               	movlb	0	; () banked
 10727  00145A  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 10728  00145C  D003               	goto	l481
 10729                           
 10730                           ; BSR set to: 0
 10731                           ;inc\CANlib.h: 932: RXF2SIDLbits.EID17 = 0x01;
 10732  00145E  010F               	movlb	15	; () banked
 10733  001460  8309               	bsf	9,1,b	;volatile
 10734  001462  D002               	goto	l482
 10735  001464                     l481:
 10736                           
 10737                           ; BSR set to: 0
 10738                           ;inc\CANlib.h: 933: else
 10739                           ;inc\CANlib.h: 934: RXF2SIDLbits.EID17 = 0x00;
 10740  001464  010F               	movlb	15	; () banked
 10741  001466  9309               	bcf	9,1,b	;volatile
 10742  001468                     l482:
 10743                           
 10744                           ; BSR set to: 15
 10745                           ;inc\CANlib.h: 936: if (filter & 0x00040000)
 10746  001468  0100               	movlb	0	; () banked
 10747  00146A  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 10748  00146C  D003               	goto	l483
 10749                           
 10750                           ; BSR set to: 0
 10751                           ;inc\CANlib.h: 937: RXF2SIDLbits.SID0 = 0x01;
 10752  00146E  010F               	movlb	15	; () banked
 10753  001470  8B09               	bsf	9,5,b	;volatile
 10754  001472  D002               	goto	l484
 10755  001474                     l483:
 10756                           
 10757                           ; BSR set to: 0
 10758                           ;inc\CANlib.h: 938: else
 10759                           ;inc\CANlib.h: 939: RXF2SIDLbits.SID0 = 0x00;
 10760  001474  010F               	movlb	15	; () banked
 10761  001476  9B09               	bcf	9,5,b	;volatile
 10762  001478                     l484:
 10763                           
 10764                           ; BSR set to: 15
 10765                           ;inc\CANlib.h: 941: if (filter & 0x00080000)
 10766  001478  0100               	movlb	0	; () banked
 10767  00147A  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 10768  00147C  D003               	goto	l485
 10769                           
 10770                           ; BSR set to: 0
 10771                           ;inc\CANlib.h: 942: RXF2SIDLbits.SID1 = 0x01;
 10772  00147E  010F               	movlb	15	; () banked
 10773  001480  8D09               	bsf	9,6,b	;volatile
 10774  001482  D002               	goto	l486
 10775  001484                     l485:
 10776                           
 10777                           ; BSR set to: 0
 10778                           ;inc\CANlib.h: 943: else
 10779                           ;inc\CANlib.h: 944: RXF2SIDLbits.SID1 = 0x00;
 10780  001484  010F               	movlb	15	; () banked
 10781  001486  9D09               	bcf	9,6,b	;volatile
 10782  001488                     l486:
 10783                           
 10784                           ; BSR set to: 15
 10785                           ;inc\CANlib.h: 946: if (filter & 0x00100000)
 10786  001488  0100               	movlb	0	; () banked
 10787  00148A  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 10788  00148C  D003               	goto	l487
 10789                           
 10790                           ; BSR set to: 0
 10791                           ;inc\CANlib.h: 947: RXF2SIDLbits.SID2 = 0x01 ;
 10792  00148E  010F               	movlb	15	; () banked
 10793  001490  8F09               	bsf	9,7,b	;volatile
 10794  001492  D002               	goto	l4633
 10795  001494                     l487:
 10796                           
 10797                           ; BSR set to: 0
 10798                           ;inc\CANlib.h: 948: else
 10799                           ;inc\CANlib.h: 949: RXF2SIDLbits.SID2 = 0x00 ;
 10800  001494  010F               	movlb	15	; () banked
 10801  001496  9F09               	bcf	9,7,b	;volatile
 10802  001498                     l4633:
 10803                           
 10804                           ; BSR set to: 15
 10805                           ;inc\CANlib.h: 951: tamp = (filter >> 21);
 10806  001498  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 10807  00149C  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10808  0014A0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10809  0014A4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10810  0014A8  0E16               	movlw	22
 10811  0014AA  D006               	goto	u5600
 10812  0014AC                     u5605:
 10813  0014AC  0100               	movlb	0	; () banked
 10814  0014AE  90D8               	bcf	status,0,c
 10815  0014B0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10816  0014B2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10817  0014B4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10818  0014B6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 10819  0014B8                     u5600:
 10820  0014B8  2EE8               	decfsz	wreg,f,c
 10821  0014BA  D7F8               	goto	u5605
 10822  0014BC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10823  0014C0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10824  0014C4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10825  0014C8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10826                           
 10827                           ; BSR set to: 0
 10828                           ;inc\CANlib.h: 952: tamp = tamp & 0x000000FF;
 10829  0014CC  0100               	movlb	0	; () banked
 10830  0014CE  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 10831  0014D0  0100               	movlb	0	; () banked
 10832  0014D2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10833  0014D4  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10834  0014D6  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10835  0014D8  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10836                           
 10837                           ; BSR set to: 0
 10838                           ;inc\CANlib.h: 953: RXF2SIDH = (unsigned char) tamp;
 10839  0014DA  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 10840  0014DE                     l4639:
 10841                           
 10842                           ; BSR set to: 0
 10843                           ;inc\CANlib.h: 954: }
 10844                           ;inc\CANlib.h: 956: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
 10845  0014DE  0E03               	movlw	3
 10846  0014E0  0100               	movlb	0	; () banked
 10847  0014E2  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 10848  0014E4  A4D8               	btfss	status,2,c
 10849  0014E6  D089               	goto	l4673
 10850                           
 10851                           ; BSR set to: 0
 10852  0014E8  0EF7               	movlw	247
 10853  0014EA  0100               	movlb	0	; () banked
 10854  0014EC  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 10855  0014EE  A4D8               	btfss	status,2,c
 10856  0014F0  D084               	goto	l4673
 10857                           
 10858                           ; BSR set to: 0
 10859                           ;inc\CANlib.h: 957: {
 10860                           ;inc\CANlib.h: 958: RXF3SIDLbits.EXIDEN = 0x01;
 10861  0014F2  010F               	movlb	15	; () banked
 10862  0014F4  870D               	bsf	13,3,b	;volatile
 10863                           
 10864                           ; BSR set to: 15
 10865                           ;inc\CANlib.h: 960: tamp = filter & 0x000000FF;
 10866  0014F6  0100               	movlb	0	; () banked
 10867  0014F8  5177               	movf	CANSetFilter@filter& (0+255),w,b
 10868  0014FA  0100               	movlb	0	; () banked
 10869  0014FC  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10870  0014FE  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10871  001500  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10872  001502  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10873                           
 10874                           ; BSR set to: 0
 10875                           ;inc\CANlib.h: 961: RXF3EIDL = (unsigned char) tamp;
 10876  001504  C081  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
 10877                           
 10878                           ; BSR set to: 0
 10879                           ;inc\CANlib.h: 963: tamp = filter & 0x0000FF00;
 10880  001508  0E00               	movlw	0
 10881  00150A  0100               	movlb	0	; () banked
 10882  00150C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 10883  00150E  0100               	movlb	0	; () banked
 10884  001510  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10885  001512  0EFF               	movlw	255
 10886  001514  0100               	movlb	0	; () banked
 10887  001516  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 10888  001518  0100               	movlb	0	; () banked
 10889  00151A  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10890  00151C  0E00               	movlw	0
 10891  00151E  0100               	movlb	0	; () banked
 10892  001520  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 10893  001522  0100               	movlb	0	; () banked
 10894  001524  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10895  001526  0E00               	movlw	0
 10896  001528  0100               	movlb	0	; () banked
 10897  00152A  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 10898  00152C  0100               	movlb	0	; () banked
 10899  00152E  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10900                           
 10901                           ; BSR set to: 0
 10902                           ;inc\CANlib.h: 964: tamp = tamp >> 8;
 10903  001530  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 10904  001534  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10905  001538  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10906  00153C  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10907  001540  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 10908  001544  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 10909  001548  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 10910  00154C  0100               	movlb	0	; () banked
 10911  00154E  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 10912  001550  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10913  001554  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10914  001558  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10915  00155C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10916                           
 10917                           ; BSR set to: 0
 10918                           ;inc\CANlib.h: 965: RXF3EIDH = (unsigned char) tamp;
 10919  001560  C081  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
 10920                           
 10921                           ; BSR set to: 0
 10922                           ;inc\CANlib.h: 967: if (filter & 0x00010000)
 10923  001564  0100               	movlb	0	; () banked
 10924  001566  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 10925  001568  D003               	goto	l490
 10926                           
 10927                           ; BSR set to: 0
 10928                           ;inc\CANlib.h: 968: RXF3SIDLbits.EID16 = 0x01;
 10929  00156A  010F               	movlb	15	; () banked
 10930  00156C  810D               	bsf	13,0,b	;volatile
 10931  00156E  D002               	goto	l491
 10932  001570                     l490:
 10933                           
 10934                           ; BSR set to: 0
 10935                           ;inc\CANlib.h: 969: else
 10936                           ;inc\CANlib.h: 970: RXF3SIDLbits.EID16 = 0x00;
 10937  001570  010F               	movlb	15	; () banked
 10938  001572  910D               	bcf	13,0,b	;volatile
 10939  001574                     l491:
 10940                           
 10941                           ; BSR set to: 15
 10942                           ;inc\CANlib.h: 972: if (filter & 0x00020000)
 10943  001574  0100               	movlb	0	; () banked
 10944  001576  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 10945  001578  D003               	goto	l492
 10946                           
 10947                           ; BSR set to: 0
 10948                           ;inc\CANlib.h: 973: RXF3SIDLbits.EID17 = 0x01;
 10949  00157A  010F               	movlb	15	; () banked
 10950  00157C  830D               	bsf	13,1,b	;volatile
 10951  00157E  D002               	goto	l493
 10952  001580                     l492:
 10953                           
 10954                           ; BSR set to: 0
 10955                           ;inc\CANlib.h: 974: else
 10956                           ;inc\CANlib.h: 975: RXF3SIDLbits.EID17 = 0x00;
 10957  001580  010F               	movlb	15	; () banked
 10958  001582  930D               	bcf	13,1,b	;volatile
 10959  001584                     l493:
 10960                           
 10961                           ; BSR set to: 15
 10962                           ;inc\CANlib.h: 977: if (filter & 0x00040000)
 10963  001584  0100               	movlb	0	; () banked
 10964  001586  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 10965  001588  D003               	goto	l494
 10966                           
 10967                           ; BSR set to: 0
 10968                           ;inc\CANlib.h: 978: RXF3SIDLbits.SID0 = 0x01;
 10969  00158A  010F               	movlb	15	; () banked
 10970  00158C  8B0D               	bsf	13,5,b	;volatile
 10971  00158E  D002               	goto	l495
 10972  001590                     l494:
 10973                           
 10974                           ; BSR set to: 0
 10975                           ;inc\CANlib.h: 979: else
 10976                           ;inc\CANlib.h: 980: RXF3SIDLbits.SID0 = 0x00;
 10977  001590  010F               	movlb	15	; () banked
 10978  001592  9B0D               	bcf	13,5,b	;volatile
 10979  001594                     l495:
 10980                           
 10981                           ; BSR set to: 15
 10982                           ;inc\CANlib.h: 982: if (filter & 0x00080000)
 10983  001594  0100               	movlb	0	; () banked
 10984  001596  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 10985  001598  D003               	goto	l496
 10986                           
 10987                           ; BSR set to: 0
 10988                           ;inc\CANlib.h: 983: RXF3SIDLbits.SID1 = 0x01;
 10989  00159A  010F               	movlb	15	; () banked
 10990  00159C  8D0D               	bsf	13,6,b	;volatile
 10991  00159E  D002               	goto	l497
 10992  0015A0                     l496:
 10993                           
 10994                           ; BSR set to: 0
 10995                           ;inc\CANlib.h: 984: else
 10996                           ;inc\CANlib.h: 985: RXF3SIDLbits.SID1 = 0x00;
 10997  0015A0  010F               	movlb	15	; () banked
 10998  0015A2  9D0D               	bcf	13,6,b	;volatile
 10999  0015A4                     l497:
 11000                           
 11001                           ; BSR set to: 15
 11002                           ;inc\CANlib.h: 987: if (filter & 0x00100000)
 11003  0015A4  0100               	movlb	0	; () banked
 11004  0015A6  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 11005  0015A8  D003               	goto	l498
 11006                           
 11007                           ; BSR set to: 0
 11008                           ;inc\CANlib.h: 988: RXF3SIDLbits.SID2 = 0x01 ;
 11009  0015AA  010F               	movlb	15	; () banked
 11010  0015AC  8F0D               	bsf	13,7,b	;volatile
 11011  0015AE  D002               	goto	l4667
 11012  0015B0                     l498:
 11013                           
 11014                           ; BSR set to: 0
 11015                           ;inc\CANlib.h: 989: else
 11016                           ;inc\CANlib.h: 990: RXF3SIDLbits.SID2 = 0x00 ;
 11017  0015B0  010F               	movlb	15	; () banked
 11018  0015B2  9F0D               	bcf	13,7,b	;volatile
 11019  0015B4                     l4667:
 11020                           
 11021                           ; BSR set to: 15
 11022                           ;inc\CANlib.h: 992: tamp = (filter >> 21);
 11023  0015B4  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 11024  0015B8  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 11025  0015BC  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 11026  0015C0  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 11027  0015C4  0E16               	movlw	22
 11028  0015C6  D006               	goto	u5680
 11029  0015C8                     u5685:
 11030  0015C8  0100               	movlb	0	; () banked
 11031  0015CA  90D8               	bcf	status,0,c
 11032  0015CC  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 11033  0015CE  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 11034  0015D0  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 11035  0015D2  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 11036  0015D4                     u5680:
 11037  0015D4  2EE8               	decfsz	wreg,f,c
 11038  0015D6  D7F8               	goto	u5685
 11039  0015D8  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 11040  0015DC  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 11041  0015E0  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 11042  0015E4  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 11043                           
 11044                           ; BSR set to: 0
 11045                           ;inc\CANlib.h: 993: tamp = tamp & 0x000000FF;
 11046  0015E8  0100               	movlb	0	; () banked
 11047  0015EA  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 11048  0015EC  0100               	movlb	0	; () banked
 11049  0015EE  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11050  0015F0  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 11051  0015F2  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 11052  0015F4  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 11053                           
 11054                           ; BSR set to: 0
 11055                           ;inc\CANlib.h: 994: RXF3SIDH = (unsigned char) tamp;
 11056  0015F6  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 11057  0015FA                     l4673:
 11058                           
 11059                           ; BSR set to: 0
 11060                           ;inc\CANlib.h: 995: }
 11061                           ;inc\CANlib.h: 997: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
 11062  0015FA  0E04               	movlw	4
 11063  0015FC  0100               	movlb	0	; () banked
 11064  0015FE  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 11065  001600  A4D8               	btfss	status,2,c
 11066  001602  D089               	goto	l4707
 11067                           
 11068                           ; BSR set to: 0
 11069  001604  0EF7               	movlw	247
 11070  001606  0100               	movlb	0	; () banked
 11071  001608  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 11072  00160A  A4D8               	btfss	status,2,c
 11073  00160C  D084               	goto	l4707
 11074                           
 11075                           ; BSR set to: 0
 11076                           ;inc\CANlib.h: 998: {
 11077                           ;inc\CANlib.h: 999: RXF4SIDLbits.EXIDEN = 0x01;
 11078  00160E  010F               	movlb	15	; () banked
 11079  001610  8711               	bsf	17,3,b	;volatile
 11080                           
 11081                           ; BSR set to: 15
 11082                           ;inc\CANlib.h: 1001: tamp = filter & 0x000000FF;
 11083  001612  0100               	movlb	0	; () banked
 11084  001614  5177               	movf	CANSetFilter@filter& (0+255),w,b
 11085  001616  0100               	movlb	0	; () banked
 11086  001618  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11087  00161A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 11088  00161C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 11089  00161E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 11090                           
 11091                           ; BSR set to: 0
 11092                           ;inc\CANlib.h: 1002: RXF4EIDL = (unsigned char) tamp;
 11093  001620  C081  FF13         	movff	CANSetFilter@tamp,3859	;volatile
 11094                           
 11095                           ; BSR set to: 0
 11096                           ;inc\CANlib.h: 1004: tamp = filter & 0x0000FF00;
 11097  001624  0E00               	movlw	0
 11098  001626  0100               	movlb	0	; () banked
 11099  001628  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 11100  00162A  0100               	movlb	0	; () banked
 11101  00162C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11102  00162E  0EFF               	movlw	255
 11103  001630  0100               	movlb	0	; () banked
 11104  001632  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 11105  001634  0100               	movlb	0	; () banked
 11106  001636  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 11107  001638  0E00               	movlw	0
 11108  00163A  0100               	movlb	0	; () banked
 11109  00163C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 11110  00163E  0100               	movlb	0	; () banked
 11111  001640  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 11112  001642  0E00               	movlw	0
 11113  001644  0100               	movlb	0	; () banked
 11114  001646  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 11115  001648  0100               	movlb	0	; () banked
 11116  00164A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 11117                           
 11118                           ; BSR set to: 0
 11119                           ;inc\CANlib.h: 1005: tamp = tamp >> 8;
 11120  00164C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 11121  001650  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 11122  001654  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 11123  001658  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 11124  00165C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 11125  001660  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 11126  001664  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 11127  001668  0100               	movlb	0	; () banked
 11128  00166A  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 11129  00166C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 11130  001670  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 11131  001674  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 11132  001678  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 11133                           
 11134                           ; BSR set to: 0
 11135                           ;inc\CANlib.h: 1006: RXF4EIDH = (unsigned char) tamp;
 11136  00167C  C081  FF12         	movff	CANSetFilter@tamp,3858	;volatile
 11137                           
 11138                           ; BSR set to: 0
 11139                           ;inc\CANlib.h: 1008: if (filter & 0x00010000)
 11140  001680  0100               	movlb	0	; () banked
 11141  001682  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 11142  001684  D003               	goto	l501
 11143                           
 11144                           ; BSR set to: 0
 11145                           ;inc\CANlib.h: 1009: RXF4SIDLbits.EID16 = 0x01;
 11146  001686  010F               	movlb	15	; () banked
 11147  001688  8111               	bsf	17,0,b	;volatile
 11148  00168A  D002               	goto	l502
 11149  00168C                     l501:
 11150                           
 11151                           ; BSR set to: 0
 11152                           ;inc\CANlib.h: 1010: else
 11153                           ;inc\CANlib.h: 1011: RXF4SIDLbits.EID16 = 0x00;
 11154  00168C  010F               	movlb	15	; () banked
 11155  00168E  9111               	bcf	17,0,b	;volatile
 11156  001690                     l502:
 11157                           
 11158                           ; BSR set to: 15
 11159                           ;inc\CANlib.h: 1013: if (filter & 0x00020000)
 11160  001690  0100               	movlb	0	; () banked
 11161  001692  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 11162  001694  D003               	goto	l503
 11163                           
 11164                           ; BSR set to: 0
 11165                           ;inc\CANlib.h: 1014: RXF4SIDLbits.EID17 = 0x01;
 11166  001696  010F               	movlb	15	; () banked
 11167  001698  8311               	bsf	17,1,b	;volatile
 11168  00169A  D002               	goto	l504
 11169  00169C                     l503:
 11170                           
 11171                           ; BSR set to: 0
 11172                           ;inc\CANlib.h: 1015: else
 11173                           ;inc\CANlib.h: 1016: RXF4SIDLbits.EID17 = 0x00;
 11174  00169C  010F               	movlb	15	; () banked
 11175  00169E  9311               	bcf	17,1,b	;volatile
 11176  0016A0                     l504:
 11177                           
 11178                           ; BSR set to: 15
 11179                           ;inc\CANlib.h: 1018: if (filter & 0x00040000)
 11180  0016A0  0100               	movlb	0	; () banked
 11181  0016A2  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 11182  0016A4  D003               	goto	l505
 11183                           
 11184                           ; BSR set to: 0
 11185                           ;inc\CANlib.h: 1019: RXF4SIDLbits.SID0 = 0x01;
 11186  0016A6  010F               	movlb	15	; () banked
 11187  0016A8  8B11               	bsf	17,5,b	;volatile
 11188  0016AA  D002               	goto	l506
 11189  0016AC                     l505:
 11190                           
 11191                           ; BSR set to: 0
 11192                           ;inc\CANlib.h: 1020: else
 11193                           ;inc\CANlib.h: 1021: RXF4SIDLbits.SID0 = 0x00;
 11194  0016AC  010F               	movlb	15	; () banked
 11195  0016AE  9B11               	bcf	17,5,b	;volatile
 11196  0016B0                     l506:
 11197                           
 11198                           ; BSR set to: 15
 11199                           ;inc\CANlib.h: 1023: if (filter & 0x00080000)
 11200  0016B0  0100               	movlb	0	; () banked
 11201  0016B2  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 11202  0016B4  D003               	goto	l507
 11203                           
 11204                           ; BSR set to: 0
 11205                           ;inc\CANlib.h: 1024: RXF4SIDLbits.SID1 = 0x01;
 11206  0016B6  010F               	movlb	15	; () banked
 11207  0016B8  8D11               	bsf	17,6,b	;volatile
 11208  0016BA  D002               	goto	l508
 11209  0016BC                     l507:
 11210                           
 11211                           ; BSR set to: 0
 11212                           ;inc\CANlib.h: 1025: else
 11213                           ;inc\CANlib.h: 1026: RXF4SIDLbits.SID1 = 0x00;
 11214  0016BC  010F               	movlb	15	; () banked
 11215  0016BE  9D11               	bcf	17,6,b	;volatile
 11216  0016C0                     l508:
 11217                           
 11218                           ; BSR set to: 15
 11219                           ;inc\CANlib.h: 1028: if (filter & 0x00100000)
 11220  0016C0  0100               	movlb	0	; () banked
 11221  0016C2  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 11222  0016C4  D003               	goto	l509
 11223                           
 11224                           ; BSR set to: 0
 11225                           ;inc\CANlib.h: 1029: RXF4SIDLbits.SID2 = 0x01 ;
 11226  0016C6  010F               	movlb	15	; () banked
 11227  0016C8  8F11               	bsf	17,7,b	;volatile
 11228  0016CA  D002               	goto	l4701
 11229  0016CC                     l509:
 11230                           
 11231                           ; BSR set to: 0
 11232                           ;inc\CANlib.h: 1030: else
 11233                           ;inc\CANlib.h: 1031: RXF4SIDLbits.SID2 = 0x00 ;
 11234  0016CC  010F               	movlb	15	; () banked
 11235  0016CE  9F11               	bcf	17,7,b	;volatile
 11236  0016D0                     l4701:
 11237                           
 11238                           ; BSR set to: 15
 11239                           ;inc\CANlib.h: 1033: tamp = (filter >> 21);
 11240  0016D0  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 11241  0016D4  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 11242  0016D8  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 11243  0016DC  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 11244  0016E0  0E16               	movlw	22
 11245  0016E2  D006               	goto	u5760
 11246  0016E4                     u5765:
 11247  0016E4  0100               	movlb	0	; () banked
 11248  0016E6  90D8               	bcf	status,0,c
 11249  0016E8  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 11250  0016EA  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 11251  0016EC  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 11252  0016EE  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 11253  0016F0                     u5760:
 11254  0016F0  2EE8               	decfsz	wreg,f,c
 11255  0016F2  D7F8               	goto	u5765
 11256  0016F4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 11257  0016F8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 11258  0016FC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 11259  001700  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 11260                           
 11261                           ; BSR set to: 0
 11262                           ;inc\CANlib.h: 1034: tamp = tamp & 0x000000FF;
 11263  001704  0100               	movlb	0	; () banked
 11264  001706  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 11265  001708  0100               	movlb	0	; () banked
 11266  00170A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11267  00170C  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 11268  00170E  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 11269  001710  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 11270                           
 11271                           ; BSR set to: 0
 11272                           ;inc\CANlib.h: 1035: RXF4SIDH = (unsigned char) tamp;
 11273  001712  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 11274  001716                     l4707:
 11275                           
 11276                           ; BSR set to: 0
 11277                           ;inc\CANlib.h: 1036: }
 11278                           ;inc\CANlib.h: 1038: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
 11279  001716  0E05               	movlw	5
 11280  001718  0100               	movlb	0	; () banked
 11281  00171A  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 11282  00171C  A4D8               	btfss	status,2,c
 11283  00171E  0012               	return	
 11284                           
 11285                           ; BSR set to: 0
 11286  001720  0EF7               	movlw	247
 11287  001722  0100               	movlb	0	; () banked
 11288  001724  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 11289  001726  A4D8               	btfss	status,2,c
 11290  001728  0012               	return	
 11291                           
 11292                           ; BSR set to: 0
 11293                           ;inc\CANlib.h: 1039: {
 11294                           ;inc\CANlib.h: 1040: RXF5SIDLbits.EXIDEN = 0x01;
 11295  00172A  010F               	movlb	15	; () banked
 11296  00172C  8715               	bsf	21,3,b	;volatile
 11297                           
 11298                           ; BSR set to: 15
 11299                           ;inc\CANlib.h: 1042: tamp = filter & 0x000000FF;
 11300  00172E  0100               	movlb	0	; () banked
 11301  001730  5177               	movf	CANSetFilter@filter& (0+255),w,b
 11302  001732  0100               	movlb	0	; () banked
 11303  001734  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11304  001736  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 11305  001738  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 11306  00173A  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 11307                           
 11308                           ; BSR set to: 0
 11309                           ;inc\CANlib.h: 1043: RXF5EIDL = (unsigned char) tamp;
 11310  00173C  C081  FF17         	movff	CANSetFilter@tamp,3863	;volatile
 11311                           
 11312                           ; BSR set to: 0
 11313                           ;inc\CANlib.h: 1045: tamp = filter & 0x0000FF00;
 11314  001740  0E00               	movlw	0
 11315  001742  0100               	movlb	0	; () banked
 11316  001744  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 11317  001746  0100               	movlb	0	; () banked
 11318  001748  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11319  00174A  0EFF               	movlw	255
 11320  00174C  0100               	movlb	0	; () banked
 11321  00174E  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 11322  001750  0100               	movlb	0	; () banked
 11323  001752  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 11324  001754  0E00               	movlw	0
 11325  001756  0100               	movlb	0	; () banked
 11326  001758  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 11327  00175A  0100               	movlb	0	; () banked
 11328  00175C  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 11329  00175E  0E00               	movlw	0
 11330  001760  0100               	movlb	0	; () banked
 11331  001762  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 11332  001764  0100               	movlb	0	; () banked
 11333  001766  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 11334                           
 11335                           ; BSR set to: 0
 11336                           ;inc\CANlib.h: 1046: tamp = tamp >> 8;
 11337  001768  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 11338  00176C  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 11339  001770  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 11340  001774  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 11341  001778  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 11342  00177C  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 11343  001780  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 11344  001784  0100               	movlb	0	; () banked
 11345  001786  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 11346  001788  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 11347  00178C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 11348  001790  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 11349  001794  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 11350                           
 11351                           ; BSR set to: 0
 11352                           ;inc\CANlib.h: 1047: RXF5EIDH = (unsigned char) tamp;
 11353  001798  C081  FF16         	movff	CANSetFilter@tamp,3862	;volatile
 11354                           
 11355                           ; BSR set to: 0
 11356                           ;inc\CANlib.h: 1049: if (filter & 0x00010000)
 11357  00179C  0100               	movlb	0	; () banked
 11358  00179E  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 11359  0017A0  D003               	goto	l512
 11360                           
 11361                           ; BSR set to: 0
 11362                           ;inc\CANlib.h: 1050: RXF5SIDLbits.EID16 = 0x01;
 11363  0017A2  010F               	movlb	15	; () banked
 11364  0017A4  8115               	bsf	21,0,b	;volatile
 11365  0017A6  D002               	goto	l513
 11366  0017A8                     l512:
 11367                           
 11368                           ; BSR set to: 0
 11369                           ;inc\CANlib.h: 1051: else
 11370                           ;inc\CANlib.h: 1052: RXF5SIDLbits.EID16 = 0x00;
 11371  0017A8  010F               	movlb	15	; () banked
 11372  0017AA  9115               	bcf	21,0,b	;volatile
 11373  0017AC                     l513:
 11374                           
 11375                           ; BSR set to: 15
 11376                           ;inc\CANlib.h: 1054: if (filter & 0x00020000)
 11377  0017AC  0100               	movlb	0	; () banked
 11378  0017AE  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 11379  0017B0  D003               	goto	l514
 11380                           
 11381                           ; BSR set to: 0
 11382                           ;inc\CANlib.h: 1055: RXF5SIDLbits.EID17 = 0x01;
 11383  0017B2  010F               	movlb	15	; () banked
 11384  0017B4  8315               	bsf	21,1,b	;volatile
 11385  0017B6  D002               	goto	l515
 11386  0017B8                     l514:
 11387                           
 11388                           ; BSR set to: 0
 11389                           ;inc\CANlib.h: 1056: else
 11390                           ;inc\CANlib.h: 1057: RXF5SIDLbits.EID17 = 0x00;
 11391  0017B8  010F               	movlb	15	; () banked
 11392  0017BA  9315               	bcf	21,1,b	;volatile
 11393  0017BC                     l515:
 11394                           
 11395                           ; BSR set to: 15
 11396                           ;inc\CANlib.h: 1059: if (filter & 0x00040000)
 11397  0017BC  0100               	movlb	0	; () banked
 11398  0017BE  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 11399  0017C0  D003               	goto	l516
 11400                           
 11401                           ; BSR set to: 0
 11402                           ;inc\CANlib.h: 1060: RXF5SIDLbits.SID0 = 0x01;
 11403  0017C2  010F               	movlb	15	; () banked
 11404  0017C4  8B15               	bsf	21,5,b	;volatile
 11405  0017C6  D002               	goto	l517
 11406  0017C8                     l516:
 11407                           
 11408                           ; BSR set to: 0
 11409                           ;inc\CANlib.h: 1061: else
 11410                           ;inc\CANlib.h: 1062: RXF5SIDLbits.SID0 = 0x00;
 11411  0017C8  010F               	movlb	15	; () banked
 11412  0017CA  9B15               	bcf	21,5,b	;volatile
 11413  0017CC                     l517:
 11414                           
 11415                           ; BSR set to: 15
 11416                           ;inc\CANlib.h: 1064: if (filter & 0x00080000)
 11417  0017CC  0100               	movlb	0	; () banked
 11418  0017CE  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 11419  0017D0  D003               	goto	l518
 11420                           
 11421                           ; BSR set to: 0
 11422                           ;inc\CANlib.h: 1065: RXF5SIDLbits.SID1 = 0x01;
 11423  0017D2  010F               	movlb	15	; () banked
 11424  0017D4  8D15               	bsf	21,6,b	;volatile
 11425  0017D6  D002               	goto	l519
 11426  0017D8                     l518:
 11427                           
 11428                           ; BSR set to: 0
 11429                           ;inc\CANlib.h: 1066: else
 11430                           ;inc\CANlib.h: 1067: RXF5SIDLbits.SID1 = 0x00;
 11431  0017D8  010F               	movlb	15	; () banked
 11432  0017DA  9D15               	bcf	21,6,b	;volatile
 11433  0017DC                     l519:
 11434                           
 11435                           ; BSR set to: 15
 11436                           ;inc\CANlib.h: 1069: if (filter & 0x00100000)
 11437  0017DC  0100               	movlb	0	; () banked
 11438  0017DE  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 11439  0017E0  D003               	goto	l520
 11440                           
 11441                           ; BSR set to: 0
 11442                           ;inc\CANlib.h: 1070: RXF5SIDLbits.SID2 = 0x01 ;
 11443  0017E2  010F               	movlb	15	; () banked
 11444  0017E4  8F15               	bsf	21,7,b	;volatile
 11445  0017E6  D002               	goto	l4735
 11446  0017E8                     l520:
 11447                           
 11448                           ; BSR set to: 0
 11449                           ;inc\CANlib.h: 1071: else
 11450                           ;inc\CANlib.h: 1072: RXF5SIDLbits.SID2 = 0x00 ;
 11451  0017E8  010F               	movlb	15	; () banked
 11452  0017EA  9F15               	bcf	21,7,b	;volatile
 11453  0017EC                     l4735:
 11454                           
 11455                           ; BSR set to: 15
 11456                           ;inc\CANlib.h: 1074: tamp = (filter >> 21);
 11457  0017EC  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 11458  0017F0  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 11459  0017F4  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 11460  0017F8  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 11461  0017FC  0E16               	movlw	22
 11462  0017FE  D006               	goto	u5840
 11463  001800                     u5845:
 11464  001800  0100               	movlb	0	; () banked
 11465  001802  90D8               	bcf	status,0,c
 11466  001804  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 11467  001806  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 11468  001808  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 11469  00180A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 11470  00180C                     u5840:
 11471  00180C  2EE8               	decfsz	wreg,f,c
 11472  00180E  D7F8               	goto	u5845
 11473  001810  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 11474  001814  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 11475  001818  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 11476  00181C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 11477                           
 11478                           ; BSR set to: 0
 11479                           ;inc\CANlib.h: 1075: tamp = tamp & 0x000000FF;
 11480  001820  0100               	movlb	0	; () banked
 11481  001822  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 11482  001824  0100               	movlb	0	; () banked
 11483  001826  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11484  001828  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 11485  00182A  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 11486  00182C  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 11487                           
 11488                           ; BSR set to: 0
 11489                           ;inc\CANlib.h: 1076: RXF5SIDH = (unsigned char) tamp;
 11490  00182E  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 11491  001832  0012               	return	
 11492  001834                     __end_of_CANSetFilter:
 11493                           	opt stack 0
 11494                           tblptru	equ	0xFF8
 11495                           tblptrh	equ	0xFF7
 11496                           tblptrl	equ	0xFF6
 11497                           tablat	equ	0xFF5
 11498                           prodh	equ	0xFF4
 11499                           prodl	equ	0xFF3
 11500                           intcon	equ	0xFF2
 11501                           intcon2	equ	0xFF1
 11502                           postinc0	equ	0xFEE
 11503                           wreg	equ	0xFE8
 11504                           indf2	equ	0xFDF
 11505                           postinc2	equ	0xFDE
 11506                           postdec2	equ	0xFDD
 11507                           fsr2h	equ	0xFDA
 11508                           fsr2l	equ	0xFD9
 11509                           status	equ	0xFD8
 11510                           
 11511 ;; *************** function _CANOperationMode *****************
 11512 ;; Defined at:
 11513 ;;		line 207 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 11514 ;; Parameters:    Size  Location     Type
 11515 ;;  mode            1    wreg     enum E16307
 11516 ;; Auto vars:     Size  Location     Type
 11517 ;;  mode            1   23[BANK0 ] enum E16307
 11518 ;; Return value:  Size  Location     Type
 11519 ;;		None               void
 11520 ;; Registers used:
 11521 ;;		wreg, status,2, status,0
 11522 ;; Tracked objects:
 11523 ;;		On entry : 0/0
 11524 ;;		On exit  : 0/0
 11525 ;;		Unchanged: 0/0
 11526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11528 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11530 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11531 ;;Total ram usage:        1 bytes
 11532 ;; Hardware stack levels used:    1
 11533 ;; Hardware stack levels required when called:    4
 11534 ;; This function calls:
 11535 ;;		Nothing
 11536 ;; This function is called by:
 11537 ;;		_CANInitialize
 11538 ;; This function uses a non-reentrant model
 11539 ;;
 11540                           
 11541                           	psect	text24
 11542  004E92                     __ptext24:
 11543                           	opt stack 0
 11544  004E92                     _CANOperationMode:
 11545                           	opt stack 24
 11546                           
 11547                           ; BSR set to: 0
 11548                           ;incstack = 0
 11549                           ;CANOperationMode@mode stored from wreg
 11550  004E92  0100               	movlb	0	; () banked
 11551  004E94  6F77               	movwf	CANOperationMode@mode& (0+255),b
 11552                           
 11553                           ;inc\CANlib.h: 209: CANCON = mode;
 11554  004E96  C077  FF6F         	movff	CANOperationMode@mode,3951	;volatile
 11555  004E9A                     l4331:
 11556  004E9A  506E               	movf	3950,w,c	;volatile
 11557  004E9C  0BE0               	andlw	224
 11558  004E9E  0100               	movlb	0	; () banked
 11559  004EA0  1977               	xorwf	CANOperationMode@mode& (0+255),w,b
 11560  004EA2  B4D8               	btfsc	status,2,c
 11561  004EA4  0012               	return	
 11562  004EA6  D7F9               	goto	l4331
 11563  004EA8                     __end_of_CANOperationMode:
 11564                           	opt stack 0
 11565                           tblptru	equ	0xFF8
 11566                           tblptrh	equ	0xFF7
 11567                           tblptrl	equ	0xFF6
 11568                           tablat	equ	0xFF5
 11569                           prodh	equ	0xFF4
 11570                           prodl	equ	0xFF3
 11571                           intcon	equ	0xFF2
 11572                           intcon2	equ	0xFF1
 11573                           postinc0	equ	0xFEE
 11574                           wreg	equ	0xFE8
 11575                           indf2	equ	0xFDF
 11576                           postinc2	equ	0xFDE
 11577                           postdec2	equ	0xFDD
 11578                           fsr2h	equ	0xFDA
 11579                           fsr2l	equ	0xFD9
 11580                           status	equ	0xFD8
 11581                           
 11582 ;; *************** function _can_interpreter *****************
 11583 ;; Defined at:
 11584 ;;		line 283 in file "parcheggio.c"
 11585 ;; Parameters:    Size  Location     Type
 11586 ;;		None
 11587 ;; Auto vars:     Size  Location     Type
 11588 ;;		None
 11589 ;; Return value:  Size  Location     Type
 11590 ;;		None               void
 11591 ;; Registers used:
 11592 ;;		wreg, status,2, status,0
 11593 ;; Tracked objects:
 11594 ;;		On entry : 0/0
 11595 ;;		On exit  : 0/0
 11596 ;;		Unchanged: 0/0
 11597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11600 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11601 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11602 ;;Total ram usage:        4 bytes
 11603 ;; Hardware stack levels used:    1
 11604 ;; Hardware stack levels required when called:    4
 11605 ;; This function calls:
 11606 ;;		Nothing
 11607 ;; This function is called by:
 11608 ;;		_main
 11609 ;; This function uses a non-reentrant model
 11610 ;;
 11611                           
 11612                           	psect	text25
 11613  004D58                     __ptext25:
 11614                           	opt stack 0
 11615  004D58                     _can_interpreter:
 11616                           	opt stack 26
 11617                           
 11618                           ;parcheggio.c: 284: left_speed = data_speed_rx[1];
 11619                           
 11620                           ; BSR set to: 0
 11621                           ;incstack = 0
 11622  004D58  C109  F03A         	movff	_data_speed_rx+1,_left_speed
 11623  004D5C  6A3B               	clrf	_left_speed+1,c
 11624                           
 11625                           ;parcheggio.c: 285: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 11626  004D5E  503A               	movf	_left_speed,w,c
 11627  004D60  0100               	movlb	0	; () banked
 11628  004D62  6F77               	movwf	??_can_interpreter& (0+255),b
 11629  004D64  0101               	movlb	1	; () banked
 11630  004D66  5108               	movf	_data_speed_rx& (0+255),w,b
 11631  004D68  6E3A               	movwf	_left_speed,c
 11632  004D6A  C077  F03B         	movff	??_can_interpreter,_left_speed+1
 11633                           
 11634                           ; BSR set to: 1
 11635                           ;parcheggio.c: 286: right_speed = data_speed_rx[3];
 11636  004D6E  C10B  F03E         	movff	_data_speed_rx+3,_right_speed
 11637  004D72  6A3F               	clrf	_right_speed+1,c
 11638                           
 11639                           ;parcheggio.c: 287: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 11640  004D74  503E               	movf	_right_speed,w,c
 11641  004D76  0100               	movlb	0	; () banked
 11642  004D78  6F77               	movwf	??_can_interpreter& (0+255),b
 11643  004D7A  0101               	movlb	1	; () banked
 11644  004D7C  510A               	movf	(_data_speed_rx+2)& (0+255),w,b
 11645  004D7E  6E3E               	movwf	_right_speed,c
 11646  004D80  C077  F03F         	movff	??_can_interpreter,_right_speed+1
 11647                           
 11648                           ; BSR set to: 1
 11649                           ;parcheggio.c: 288: actual_speed = (right_speed + left_speed) / 2;
 11650  004D84  503A               	movf	_left_speed,w,c
 11651  004D86  243E               	addwf	_right_speed,w,c
 11652  004D88  0100               	movlb	0	; () banked
 11653  004D8A  6F77               	movwf	??_can_interpreter& (0+255),b
 11654  004D8C  503B               	movf	_left_speed+1,w,c
 11655  004D8E  203F               	addwfc	_right_speed+1,w,c
 11656  004D90  0100               	movlb	0	; () banked
 11657  004D92  6F78               	movwf	(??_can_interpreter+1)& (0+255),b
 11658  004D94  90D8               	bcf	status,0,c
 11659  004D96  0100               	movlb	0	; () banked
 11660  004D98  3178               	rrcf	(??_can_interpreter+1)& (0+255),w,b
 11661  004D9A  0100               	movlb	0	; () banked
 11662  004D9C  6F79               	movwf	(??_can_interpreter+2)& (0+255),b
 11663  004D9E  0100               	movlb	0	; () banked
 11664  004DA0  3177               	rrcf	??_can_interpreter& (0+255),w,b
 11665  004DA2  0100               	movlb	0	; () banked
 11666  004DA4  6FE1               	movwf	_actual_speed& (0+255),b
 11667  004DA6  C079  F0E2         	movff	??_can_interpreter+2,_actual_speed+1
 11668                           
 11669                           ; BSR set to: 0
 11670  004DAA  0012               	return		;funcret
 11671  004DAC                     __end_of_can_interpreter:
 11672                           	opt stack 0
 11673                           tblptru	equ	0xFF8
 11674                           tblptrh	equ	0xFF7
 11675                           tblptrl	equ	0xFF6
 11676                           tablat	equ	0xFF5
 11677                           prodh	equ	0xFF4
 11678                           prodl	equ	0xFF3
 11679                           intcon	equ	0xFF2
 11680                           intcon2	equ	0xFF1
 11681                           postinc0	equ	0xFEE
 11682                           wreg	equ	0xFE8
 11683                           indf2	equ	0xFDF
 11684                           postinc2	equ	0xFDE
 11685                           postdec2	equ	0xFDD
 11686                           fsr2h	equ	0xFDA
 11687                           fsr2l	equ	0xFD9
 11688                           status	equ	0xFD8
 11689                           
 11690 ;; *************** function _ISR_Bassa *****************
 11691 ;; Defined at:
 11692 ;;		line 92 in file "parcheggio.c"
 11693 ;; Parameters:    Size  Location     Type
 11694 ;;		None
 11695 ;; Auto vars:     Size  Location     Type
 11696 ;;  i               1   34[COMRAM] unsigned char 
 11697 ;;  gigi            1   33[COMRAM] unsigned char 
 11698 ;; Return value:  Size  Location     Type
 11699 ;;		None               void
 11700 ;; Registers used:
 11701 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11702 ;; Tracked objects:
 11703 ;;		On entry : 0/0
 11704 ;;		On exit  : 0/0
 11705 ;;		Unchanged: 0/0
 11706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11708 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11709 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11710 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11711 ;;Total ram usage:       23 bytes
 11712 ;; Hardware stack levels used:    1
 11713 ;; Hardware stack levels required when called:    3
 11714 ;; This function calls:
 11715 ;;		_CANreceiveMessage
 11716 ;; This function is called by:
 11717 ;;		Interrupt level 1
 11718 ;; This function uses a non-reentrant model
 11719 ;;
 11720                           
 11721                           	psect	intcodelo
 11722  000018                     __pintcodelo:
 11723                           	opt stack 0
 11724  000018                     _ISR_Bassa:
 11725                           	opt stack 21
 11726                           
 11727                           ; BSR set to: 0
 11728                           ;incstack = 0
 11729  000018  8048               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 11730  00001A  CFD8 F011          	movff	status,??_ISR_Bassa+4
 11731  00001E  CFE8 F012          	movff	wreg,??_ISR_Bassa+5
 11732  000022  CFE0 F013          	movff	bsr,??_ISR_Bassa+6
 11733  000026  CFFA F014          	movff	pclath,??_ISR_Bassa+7
 11734  00002A  CFFB F015          	movff	pclatu,??_ISR_Bassa+8
 11735  00002E  CFE9 F016          	movff	fsr0l,??_ISR_Bassa+9
 11736  000032  CFEA F017          	movff	fsr0h,??_ISR_Bassa+10
 11737  000036  CFE1 F018          	movff	fsr1l,??_ISR_Bassa+11
 11738  00003A  CFE2 F019          	movff	fsr1h,??_ISR_Bassa+12
 11739  00003E  CFD9 F01A          	movff	fsr2l,??_ISR_Bassa+13
 11740  000042  CFDA F01B          	movff	fsr2h,??_ISR_Bassa+14
 11741  000046  CFF3 F01C          	movff	prodl,??_ISR_Bassa+15
 11742  00004A  CFF4 F01D          	movff	prodh,??_ISR_Bassa+16
 11743  00004E  CFF6 F01E          	movff	tblptrl,??_ISR_Bassa+17
 11744  000052  CFF7 F01F          	movff	tblptrh,??_ISR_Bassa+18
 11745  000056  CFF8 F020          	movff	tblptru,??_ISR_Bassa+19
 11746  00005A  CFF5 F021          	movff	tablat,??_ISR_Bassa+20
 11747                           
 11748                           ;parcheggio.c: 94: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
 11749  00005E  A0A4               	btfss	4004,0,c	;volatile
 11750  000060  B2A4               	btfsc	4004,1,c	;volatile
 11751  000062  D001               	goto	i1l5269
 11752  000064  D090               	goto	i1l657
 11753  000066                     i1l5269:
 11754                           
 11755                           ;parcheggio.c: 95: CANreceiveMessage(&msg);
 11756  000066  0E20               	movlw	low _msg
 11757  000068  6E01               	movwf	CANreceiveMessage@msg,c
 11758  00006A  0E01               	movlw	high _msg
 11759  00006C  6E02               	movwf	CANreceiveMessage@msg+1,c
 11760  00006E  ECE0  F00F         	call	_CANreceiveMessage	;wreg free
 11761                           
 11762                           ;parcheggio.c: 97: if ((msg.identifier == 0b00000000111) && (msg.RTR != 1)) {
 11763  000072  0E07               	movlw	7
 11764  000074  0101               	movlb	1	; () banked
 11765  000076  1920               	xorwf	_msg& (0+255),w,b
 11766  000078  0101               	movlb	1	; () banked
 11767  00007A  1121               	iorwf	(_msg+1)& (0+255),w,b
 11768  00007C  0101               	movlb	1	; () banked
 11769  00007E  1122               	iorwf	(_msg+2)& (0+255),w,b
 11770  000080  0101               	movlb	1	; () banked
 11771  000082  1123               	iorwf	(_msg+3)& (0+255),w,b
 11772  000084  A4D8               	btfss	status,2,c
 11773  000086  D02C               	goto	i1l5285
 11774                           
 11775                           ; BSR set to: 1
 11776  000088  0101               	movlb	1	; () banked
 11777  00008A  052E               	decf	(_msg+14)& (0+255),w,b
 11778  00008C  B4D8               	btfsc	status,2,c
 11779  00008E  D028               	goto	i1l5285
 11780                           
 11781                           ; BSR set to: 1
 11782                           ;parcheggio.c: 98: distance_average = 0;
 11783  000090  0E00               	movlw	0
 11784  000092  0100               	movlb	0	; () banked
 11785  000094  6FE4               	movwf	(_distance_average+1)& (0+255),b	;volatile
 11786  000096  0E00               	movlw	0
 11787  000098  6FE3               	movwf	_distance_average& (0+255),b	;volatile
 11788                           
 11789                           ; BSR set to: 0
 11790                           ;parcheggio.c: 99: distance_dx = msg.data[1];
 11791  00009A  C125  F036         	movff	_msg+5,_distance_dx	;volatile
 11792  00009E  6A37               	clrf	_distance_dx+1,c	;volatile
 11793                           
 11794                           ;parcheggio.c: 100: distance_dx = ((distance_dx << 8) | msg.data[0]);
 11795  0000A0  5036               	movf	_distance_dx,w,c	;volatile
 11796  0000A2  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 11797  0000A4  0101               	movlb	1	; () banked
 11798  0000A6  5124               	movf	(_msg+4)& (0+255),w,b
 11799  0000A8  6E36               	movwf	_distance_dx,c	;volatile
 11800  0000AA  C00D  F037         	movff	??_ISR_Bassa,_distance_dx+1	;volatile
 11801                           
 11802                           ; BSR set to: 1
 11803                           ;parcheggio.c: 101: distance_sx = msg.data[3];
 11804  0000AE  C127  F038         	movff	_msg+7,_distance_sx	;volatile
 11805  0000B2  6A39               	clrf	_distance_sx+1,c	;volatile
 11806                           
 11807                           ;parcheggio.c: 102: distance_sx = ((distance_sx << 8) | msg.data[2]);
 11808  0000B4  5038               	movf	_distance_sx,w,c	;volatile
 11809  0000B6  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 11810  0000B8  0101               	movlb	1	; () banked
 11811  0000BA  5126               	movf	(_msg+6)& (0+255),w,b
 11812  0000BC  6E38               	movwf	_distance_sx,c	;volatile
 11813  0000BE  C00D  F039         	movff	??_ISR_Bassa,_distance_sx+1	;volatile
 11814                           
 11815                           ; BSR set to: 1
 11816                           ;parcheggio.c: 103: distance_average = (distance_sx + distance_dx) / 2;
 11817  0000C2  5036               	movf	_distance_dx,w,c	;volatile
 11818  0000C4  2438               	addwf	_distance_sx,w,c	;volatile
 11819  0000C6  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 11820  0000C8  5037               	movf	_distance_dx+1,w,c	;volatile
 11821  0000CA  2039               	addwfc	_distance_sx+1,w,c	;volatile
 11822  0000CC  6E0E               	movwf	(??_ISR_Bassa+1)& (0+255),c
 11823  0000CE  90D8               	bcf	status,0,c
 11824  0000D0  300E               	rrcf	??_ISR_Bassa+1,w,c
 11825  0000D2  6E0F               	movwf	(??_ISR_Bassa+2)& (0+255),c
 11826  0000D4  300D               	rrcf	??_ISR_Bassa,w,c
 11827  0000D6  0100               	movlb	0	; () banked
 11828  0000D8  6FE3               	movwf	_distance_average& (0+255),b	;volatile
 11829  0000DA  C00F  F0E4         	movff	??_ISR_Bassa+2,_distance_average+1	;volatile
 11830                           
 11831                           ; BSR set to: 0
 11832                           ;parcheggio.c: 104: distance_received = 1;
 11833  0000DE  8646               	bsf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
 11834  0000E0                     i1l5285:
 11835                           
 11836                           ;parcheggio.c: 105: }
 11837                           ;parcheggio.c: 106: if (msg.identifier == 0b00000001010) {
 11838  0000E0  0E0A               	movlw	10
 11839  0000E2  0101               	movlb	1	; () banked
 11840  0000E4  1920               	xorwf	_msg& (0+255),w,b
 11841  0000E6  0101               	movlb	1	; () banked
 11842  0000E8  1121               	iorwf	(_msg+1)& (0+255),w,b
 11843  0000EA  0101               	movlb	1	; () banked
 11844  0000EC  1122               	iorwf	(_msg+2)& (0+255),w,b
 11845  0000EE  0101               	movlb	1	; () banked
 11846  0000F0  1123               	iorwf	(_msg+3)& (0+255),w,b
 11847  0000F2  A4D8               	btfss	status,2,c
 11848  0000F4  D00B               	goto	i1l5291
 11849                           
 11850                           ; BSR set to: 1
 11851                           ;parcheggio.c: 107: if (msg.data[0] == 1) {
 11852  0000F6  0101               	movlb	1	; () banked
 11853  0000F8  0524               	decf	(_msg+4)& (0+255),w,b
 11854  0000FA  A4D8               	btfss	status,2,c
 11855  0000FC  D003               	goto	i1l662
 11856                           
 11857                           ; BSR set to: 1
 11858                           ;parcheggio.c: 108: activation = 1;
 11859  0000FE  8046               	bsf	_activation/(0+8),_activation& (0+7),c	;volatile
 11860                           
 11861                           ;parcheggio.c: 109: PORTBbits.RB6 = 1;
 11862  000100  8C81               	bsf	3969,6,c	;volatile
 11863                           
 11864                           ;parcheggio.c: 110: } else {
 11865  000102  D004               	goto	i1l5291
 11866  000104                     i1l662:
 11867                           
 11868                           ; BSR set to: 1
 11869                           ;parcheggio.c: 111: activation = 0;
 11870  000104  9046               	bcf	_activation/(0+8),_activation& (0+7),c	;volatile
 11871                           
 11872                           ;parcheggio.c: 112: PORTBbits.RB4 = 0;
 11873  000106  9881               	bcf	3969,4,c	;volatile
 11874                           
 11875                           ;parcheggio.c: 113: PORTBbits.RB5 = 0;
 11876  000108  9A81               	bcf	3969,5,c	;volatile
 11877                           
 11878                           ;parcheggio.c: 114: PORTBbits.RB6 = 0;
 11879  00010A  9C81               	bcf	3969,6,c	;volatile
 11880  00010C                     i1l5291:
 11881                           
 11882                           ; BSR set to: 1
 11883                           ;parcheggio.c: 115: }
 11884                           ;parcheggio.c: 116: }
 11885                           ;parcheggio.c: 117: if (msg.identifier == 0b00000001100) {
 11886  00010C  0E0C               	movlw	12
 11887  00010E  0101               	movlb	1	; () banked
 11888  000110  1920               	xorwf	_msg& (0+255),w,b
 11889  000112  0101               	movlb	1	; () banked
 11890  000114  1121               	iorwf	(_msg+1)& (0+255),w,b
 11891  000116  0101               	movlb	1	; () banked
 11892  000118  1122               	iorwf	(_msg+2)& (0+255),w,b
 11893  00011A  0101               	movlb	1	; () banked
 11894  00011C  1123               	iorwf	(_msg+3)& (0+255),w,b
 11895  00011E  B4D8               	btfsc	status,2,c
 11896                           
 11897                           ; BSR set to: 1
 11898                           ;parcheggio.c: 118: start_operation = 1;
 11899  000120  8C46               	bsf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 11900                           
 11901                           ; BSR set to: 1
 11902                           ;parcheggio.c: 119: }
 11903                           ;parcheggio.c: 120: if (msg.identifier == 0b00000000110) {
 11904                           
 11905                           ; BSR set to: 1
 11906  000122  0E06               	movlw	6
 11907  000124  0101               	movlb	1	; () banked
 11908  000126  1920               	xorwf	_msg& (0+255),w,b
 11909  000128  0101               	movlb	1	; () banked
 11910  00012A  1121               	iorwf	(_msg+1)& (0+255),w,b
 11911  00012C  0101               	movlb	1	; () banked
 11912  00012E  1122               	iorwf	(_msg+2)& (0+255),w,b
 11913  000130  0101               	movlb	1	; () banked
 11914  000132  1123               	iorwf	(_msg+3)& (0+255),w,b
 11915  000134  A4D8               	btfss	status,2,c
 11916  000136  D025               	goto	i1l665
 11917                           
 11918                           ; BSR set to: 1
 11919                           ;parcheggio.c: 121: for (unsigned char i = 0; i < 8; i++) {
 11920  000138  0E00               	movlw	0
 11921  00013A  6E23               	movwf	ISR_Bassa@i,c
 11922  00013C                     i1l5299:
 11923                           
 11924                           ; BSR set to: 1
 11925  00013C  0E07               	movlw	7
 11926  00013E  6423               	cpfsgt	ISR_Bassa@i,c
 11927  000140  D001               	goto	i1l5303
 11928  000142  D014               	goto	i1l5309
 11929  000144                     i1l5303:
 11930                           
 11931                           ;parcheggio.c: 122: data_speed_rx[i] = msg.data[i];
 11932  000144  5023               	movf	ISR_Bassa@i,w,c
 11933  000146  0D01               	mullw	1
 11934  000148  0E24               	movlw	low (_msg+4)
 11935  00014A  24F3               	addwf	prodl,w,c
 11936  00014C  6ED9               	movwf	fsr2l,c
 11937  00014E  0E01               	movlw	high (_msg+4)
 11938  000150  20F4               	addwfc	prodh,w,c
 11939  000152  6EDA               	movwf	fsr2h,c
 11940  000154  5023               	movf	ISR_Bassa@i,w,c
 11941  000156  0D01               	mullw	1
 11942  000158  0E08               	movlw	low _data_speed_rx
 11943  00015A  24F3               	addwf	prodl,w,c
 11944  00015C  6EE1               	movwf	fsr1l,c
 11945  00015E  0E01               	movlw	high _data_speed_rx
 11946  000160  20F4               	addwfc	prodh,w,c
 11947  000162  6EE2               	movwf	fsr1h,c
 11948  000164  CFDF FFE7          	movff	indf2,indf1
 11949  000168  2A23               	incf	ISR_Bassa@i,f,c
 11950  00016A  D7E8               	goto	i1l5299
 11951  00016C                     i1l5309:
 11952                           
 11953                           ;parcheggio.c: 123: }
 11954                           ;parcheggio.c: 124: if (msg.identifier == 0b00000001101) {
 11955  00016C  0E0D               	movlw	13
 11956  00016E  0101               	movlb	1	; () banked
 11957  000170  1920               	xorwf	_msg& (0+255),w,b
 11958  000172  0101               	movlb	1	; () banked
 11959  000174  1121               	iorwf	(_msg+1)& (0+255),w,b
 11960  000176  0101               	movlb	1	; () banked
 11961  000178  1122               	iorwf	(_msg+2)& (0+255),w,b
 11962  00017A  0101               	movlb	1	; () banked
 11963  00017C  1123               	iorwf	(_msg+3)& (0+255),w,b
 11964  00017E  B4D8               	btfsc	status,2,c
 11965                           
 11966                           ; BSR set to: 1
 11967                           ;parcheggio.c: 125: distance_wait = 0;
 11968  000180  9846               	bcf	_distance_wait/(0+8),_distance_wait& (0+7),c	;volatile
 11969  000182                     i1l665:
 11970                           
 11971                           ; BSR set to: 1
 11972                           ;parcheggio.c: 126: }
 11973                           ;parcheggio.c: 128: }
 11974                           ;parcheggio.c: 130: PIR3bits.RXB0IF = 0;
 11975  000182  90A4               	bcf	4004,0,c	;volatile
 11976                           
 11977                           ;parcheggio.c: 131: PIR3bits.RXB1IF = 0;
 11978  000184  92A4               	bcf	4004,1,c	;volatile
 11979  000186                     i1l657:
 11980                           
 11981                           ;parcheggio.c: 132: }
 11982                           ;parcheggio.c: 134: if (INTCONbits.TMR0IF == 1) {
 11983  000186  A4F2               	btfss	intcon,2,c	;volatile
 11984  000188  D033               	goto	i1l672
 11985                           
 11986                           ;parcheggio.c: 135: INTCONbits.INT0IE = 0;
 11987  00018A  98F2               	bcf	intcon,4,c	;volatile
 11988                           
 11989                           ;parcheggio.c: 136: TMR0H = 0x34;
 11990  00018C  0E34               	movlw	52
 11991  00018E  6ED7               	movwf	4055,c	;volatile
 11992                           
 11993                           ;parcheggio.c: 137: TMR0L = 0xE0;
 11994  000190  0EE0               	movlw	224
 11995  000192  6ED6               	movwf	4054,c	;volatile
 11996                           
 11997                           ;parcheggio.c: 138: if (distance_error == 1) {
 11998  000194  A446               	btfss	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 11999  000196  D00C               	goto	i1l5321
 12000                           
 12001                           ;parcheggio.c: 139: sensor_distance[MUX_index] = 5000;
 12002  000198  5042               	movf	_MUX_index,w,c	;volatile
 12003  00019A  0D02               	mullw	2
 12004  00019C  0E24               	movlw	low _sensor_distance
 12005  00019E  24F3               	addwf	prodl,w,c
 12006  0001A0  6ED9               	movwf	fsr2l,c
 12007  0001A2  0E00               	movlw	high _sensor_distance
 12008  0001A4  20F4               	addwfc	prodh,w,c
 12009  0001A6  6EDA               	movwf	fsr2h,c
 12010  0001A8  0E88               	movlw	136
 12011  0001AA  6EDE               	movwf	postinc2,c
 12012  0001AC  0E13               	movlw	19
 12013  0001AE  6EDD               	movwf	postdec2,c
 12014  0001B0                     i1l5321:
 12015                           
 12016                           ;parcheggio.c: 140: }
 12017                           ;parcheggio.c: 141: MUX_index++;
 12018  0001B0  2A42               	incf	_MUX_index,f,c	;volatile
 12019                           
 12020                           ;parcheggio.c: 142: if (MUX_index == 8) {
 12021  0001B2  0E08               	movlw	8
 12022  0001B4  1842               	xorwf	_MUX_index,w,c	;volatile
 12023  0001B6  A4D8               	btfss	status,2,c
 12024  0001B8  D002               	goto	i1l671
 12025                           
 12026                           ;parcheggio.c: 143: MUX_index = 0;
 12027  0001BA  0E00               	movlw	0
 12028  0001BC  6E42               	movwf	_MUX_index,c	;volatile
 12029  0001BE                     i1l671:
 12030                           
 12031                           ;parcheggio.c: 144: }
 12032                           ;parcheggio.c: 146: unsigned char gigi = 0;
 12033  0001BE  0E00               	movlw	0
 12034  0001C0  6E22               	movwf	ISR_Bassa@gigi,c
 12035                           
 12036                           ;parcheggio.c: 147: gigi = MUX_select[MUX_index];
 12037  0001C2  5042               	movf	_MUX_index,w,c	;volatile
 12038  0001C4  0D01               	mullw	1
 12039  0001C6  0E00               	movlw	low _MUX_select
 12040  0001C8  24F3               	addwf	prodl,w,c
 12041  0001CA  6ED9               	movwf	fsr2l,c
 12042  0001CC  0E01               	movlw	high _MUX_select
 12043  0001CE  20F4               	addwfc	prodh,w,c
 12044  0001D0  6EDA               	movwf	fsr2h,c
 12045  0001D2  50DF               	movf	indf2,w,c
 12046  0001D4  6E22               	movwf	ISR_Bassa@gigi,c
 12047                           
 12048                           ;parcheggio.c: 148: PORTA = gigi;
 12049  0001D6  C022  FF80         	movff	ISR_Bassa@gigi,3968	;volatile
 12050                           
 12051                           ;parcheggio.c: 149: TRISBbits.RB0 = 0;
 12052  0001DA  9093               	bcf	3987,0,c	;volatile
 12053                           
 12054                           ;parcheggio.c: 150: LATBbits.LATB0 = 1;
 12055  0001DC  808A               	bsf	3978,0,c	;volatile
 12056                           
 12057                           ;parcheggio.c: 151: _delay((unsigned long)((15)*(16000000/4000000.0)));
 12058  0001DE  0E14               	movlw	20
 12059  0001E0                     i1u815_27:
 12060  0001E0  2EE8               	decfsz	wreg,f,c
 12061  0001E2  D7FE               	goto	i1u815_27
 12062                           
 12063                           ;parcheggio.c: 152: distance_error = 1;
 12064  0001E4  8446               	bsf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 12065                           
 12066                           ;parcheggio.c: 153: LATBbits.LATB0 = 0;
 12067  0001E6  908A               	bcf	3978,0,c	;volatile
 12068                           
 12069                           ;parcheggio.c: 154: TRISBbits.RB0 = 1;
 12070  0001E8  8093               	bsf	3987,0,c	;volatile
 12071                           
 12072                           ;parcheggio.c: 155: INTCONbits.INT0IF = 0;
 12073  0001EA  92F2               	bcf	intcon,1,c	;volatile
 12074                           
 12075                           ;parcheggio.c: 156: INTCONbits.INT0IE = 1;
 12076  0001EC  88F2               	bsf	intcon,4,c	;volatile
 12077                           
 12078                           ;parcheggio.c: 157: INTCONbits.TMR0IF = 0;
 12079  0001EE  94F2               	bcf	intcon,2,c	;volatile
 12080  0001F0                     i1l672:
 12081  0001F0  C021  FFF5         	movff	??_ISR_Bassa+20,tablat
 12082  0001F4  C020  FFF8         	movff	??_ISR_Bassa+19,tblptru
 12083  0001F8  C01F  FFF7         	movff	??_ISR_Bassa+18,tblptrh
 12084  0001FC  C01E  FFF6         	movff	??_ISR_Bassa+17,tblptrl
 12085  000200  C01D  FFF4         	movff	??_ISR_Bassa+16,prodh
 12086  000204  C01C  FFF3         	movff	??_ISR_Bassa+15,prodl
 12087  000208  C01B  FFDA         	movff	??_ISR_Bassa+14,fsr2h
 12088  00020C  C01A  FFD9         	movff	??_ISR_Bassa+13,fsr2l
 12089  000210  C019  FFE2         	movff	??_ISR_Bassa+12,fsr1h
 12090  000214  C018  FFE1         	movff	??_ISR_Bassa+11,fsr1l
 12091  000218  C017  FFEA         	movff	??_ISR_Bassa+10,fsr0h
 12092  00021C  C016  FFE9         	movff	??_ISR_Bassa+9,fsr0l
 12093  000220  C015  FFFB         	movff	??_ISR_Bassa+8,pclatu
 12094  000224  C014  FFFA         	movff	??_ISR_Bassa+7,pclath
 12095  000228  C013  FFE0         	movff	??_ISR_Bassa+6,bsr
 12096  00022C  C012  FFE8         	movff	??_ISR_Bassa+5,wreg
 12097  000230  C011  FFD8         	movff	??_ISR_Bassa+4,status
 12098  000234  9048               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 12099  000236  0010               	retfie	
 12100  000238                     __end_of_ISR_Bassa:
 12101                           	opt stack 0
 12102                           pclatu	equ	0xFFB
 12103                           pclath	equ	0xFFA
 12104                           tblptru	equ	0xFF8
 12105                           tblptrh	equ	0xFF7
 12106                           tblptrl	equ	0xFF6
 12107                           tablat	equ	0xFF5
 12108                           prodh	equ	0xFF4
 12109                           prodl	equ	0xFF3
 12110                           intcon	equ	0xFF2
 12111                           intcon2	equ	0xFF1
 12112                           postinc0	equ	0xFEE
 12113                           fsr0h	equ	0xFEA
 12114                           fsr0l	equ	0xFE9
 12115                           wreg	equ	0xFE8
 12116                           indf1	equ	0xFE7
 12117                           fsr1h	equ	0xFE2
 12118                           fsr1l	equ	0xFE1
 12119                           bsr	equ	0xFE0
 12120                           indf2	equ	0xFDF
 12121                           postinc2	equ	0xFDE
 12122                           postdec2	equ	0xFDD
 12123                           fsr2h	equ	0xFDA
 12124                           fsr2l	equ	0xFD9
 12125                           status	equ	0xFD8
 12126                           
 12127 ;; *************** function _CANreceiveMessage *****************
 12128 ;; Defined at:
 12129 ;;		line 529 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 12130 ;; Parameters:    Size  Location     Type
 12131 ;;  msg             2    0[COMRAM] PTR struct .
 12132 ;;		 -> msg(15), 
 12133 ;; Auto vars:     Size  Location     Type
 12134 ;;  tamp            1   11[COMRAM] unsigned char 
 12135 ;;  error           1   10[COMRAM] unsigned char 
 12136 ;; Return value:  Size  Location     Type
 12137 ;;                  1    wreg      unsigned char 
 12138 ;; Registers used:
 12139 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12140 ;; Tracked objects:
 12141 ;;		On entry : 0/0
 12142 ;;		On exit  : 0/0
 12143 ;;		Unchanged: 0/0
 12144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12145 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12146 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12147 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12148 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12149 ;;Total ram usage:       12 bytes
 12150 ;; Hardware stack levels used:    1
 12151 ;; Hardware stack levels required when called:    2
 12152 ;; This function calls:
 12153 ;;		Nothing
 12154 ;; This function is called by:
 12155 ;;		_ISR_Bassa
 12156 ;; This function uses a non-reentrant model
 12157 ;;
 12158                           
 12159                           	psect	text27
 12160  001FC0                     __ptext27:
 12161                           	opt stack 0
 12162  001FC0                     _CANreceiveMessage:
 12163                           	opt stack 21
 12164                           
 12165                           ;inc\CANlib.h: 531: BYTE tamp;
 12166                           ;inc\CANlib.h: 532: BYTE error = 0;
 12167                           
 12168                           ;incstack = 0
 12169  001FC0  0E00               	movlw	0
 12170  001FC2  6E0B               	movwf	CANreceiveMessage@error,c
 12171                           
 12172                           ;inc\CANlib.h: 534: if (COMSTATbits.RXB0OVFL == 0x01)
 12173  001FC4  BE74               	btfsc	3956,7,c	;volatile
 12174                           
 12175                           ;inc\CANlib.h: 535: error |= CAN_RX_BUFFER_1_OVFL;
 12176  001FC6  800B               	bsf	CANreceiveMessage@error,0,c
 12177                           
 12178                           ;inc\CANlib.h: 537: if (COMSTATbits.RXB1OVFL == 0x01)
 12179  001FC8  BC74               	btfsc	3956,6,c	;volatile
 12180                           
 12181                           ;inc\CANlib.h: 538: error |= CAN_RX_BUFFER_2_OVFL;
 12182  001FCA  820B               	bsf	CANreceiveMessage@error,1,c
 12183                           
 12184                           ;inc\CANlib.h: 541: if (RXB1CONbits.RXFUL ==0x01)
 12185  001FCC  010F               	movlb	15	; () banked
 12186  001FCE  AF50               	btfss	80,7,b	;volatile
 12187  001FD0  D143               	goto	i1l404
 12188                           
 12189                           ; BSR set to: 15
 12190                           ;inc\CANlib.h: 542: {
 12191                           ;inc\CANlib.h: 543: msg->identifier = 0;
 12192  001FD2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12193  001FD6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12194  001FDA  6ADE               	clrf	postinc2,c
 12195  001FDC  6ADE               	clrf	postinc2,c
 12196  001FDE  6ADE               	clrf	postinc2,c
 12197  001FE0  6ADD               	clrf	postdec2,c
 12198                           
 12199                           ; BSR set to: 15
 12200                           ;inc\CANlib.h: 544: msg->data[0] =RXB1D0;
 12201  001FE2  EE20 F004          	lfsr	2,4
 12202  001FE6  5001               	movf	CANreceiveMessage@msg,w,c
 12203  001FE8  26D9               	addwf	fsr2l,f,c
 12204  001FEA  5002               	movf	CANreceiveMessage@msg+1,w,c
 12205  001FEC  22DA               	addwfc	fsr2h,f,c
 12206  001FEE  CF56 FFDF          	movff	3926,indf2	;volatile
 12207                           
 12208                           ; BSR set to: 15
 12209                           ;inc\CANlib.h: 545: msg->data[1] =RXB1D1;
 12210  001FF2  EE20 F005          	lfsr	2,5
 12211  001FF6  5001               	movf	CANreceiveMessage@msg,w,c
 12212  001FF8  26D9               	addwf	fsr2l,f,c
 12213  001FFA  5002               	movf	CANreceiveMessage@msg+1,w,c
 12214  001FFC  22DA               	addwfc	fsr2h,f,c
 12215  001FFE  CF57 FFDF          	movff	3927,indf2	;volatile
 12216                           
 12217                           ; BSR set to: 15
 12218                           ;inc\CANlib.h: 546: msg->data[2] =RXB1D2;
 12219  002002  EE20 F006          	lfsr	2,6
 12220  002006  5001               	movf	CANreceiveMessage@msg,w,c
 12221  002008  26D9               	addwf	fsr2l,f,c
 12222  00200A  5002               	movf	CANreceiveMessage@msg+1,w,c
 12223  00200C  22DA               	addwfc	fsr2h,f,c
 12224  00200E  CF58 FFDF          	movff	3928,indf2	;volatile
 12225                           
 12226                           ; BSR set to: 15
 12227                           ;inc\CANlib.h: 547: msg->data[3] =RXB1D3;
 12228  002012  EE20 F007          	lfsr	2,7
 12229  002016  5001               	movf	CANreceiveMessage@msg,w,c
 12230  002018  26D9               	addwf	fsr2l,f,c
 12231  00201A  5002               	movf	CANreceiveMessage@msg+1,w,c
 12232  00201C  22DA               	addwfc	fsr2h,f,c
 12233  00201E  CF59 FFDF          	movff	3929,indf2	;volatile
 12234                           
 12235                           ; BSR set to: 15
 12236                           ;inc\CANlib.h: 548: msg->data[4] =RXB1D4;
 12237  002022  EE20 F008          	lfsr	2,8
 12238  002026  5001               	movf	CANreceiveMessage@msg,w,c
 12239  002028  26D9               	addwf	fsr2l,f,c
 12240  00202A  5002               	movf	CANreceiveMessage@msg+1,w,c
 12241  00202C  22DA               	addwfc	fsr2h,f,c
 12242  00202E  CF5A FFDF          	movff	3930,indf2	;volatile
 12243                           
 12244                           ; BSR set to: 15
 12245                           ;inc\CANlib.h: 549: msg->data[5] =RXB1D5;
 12246  002032  EE20 F009          	lfsr	2,9
 12247  002036  5001               	movf	CANreceiveMessage@msg,w,c
 12248  002038  26D9               	addwf	fsr2l,f,c
 12249  00203A  5002               	movf	CANreceiveMessage@msg+1,w,c
 12250  00203C  22DA               	addwfc	fsr2h,f,c
 12251  00203E  CF5B FFDF          	movff	3931,indf2	;volatile
 12252                           
 12253                           ; BSR set to: 15
 12254                           ;inc\CANlib.h: 550: msg->data[6] =RXB1D6;
 12255  002042  EE20 F00A          	lfsr	2,10
 12256  002046  5001               	movf	CANreceiveMessage@msg,w,c
 12257  002048  26D9               	addwf	fsr2l,f,c
 12258  00204A  5002               	movf	CANreceiveMessage@msg+1,w,c
 12259  00204C  22DA               	addwfc	fsr2h,f,c
 12260  00204E  CF5C FFDF          	movff	3932,indf2	;volatile
 12261                           
 12262                           ; BSR set to: 15
 12263                           ;inc\CANlib.h: 551: msg->data[7] =RXB1D7;
 12264  002052  EE20 F00B          	lfsr	2,11
 12265  002056  5001               	movf	CANreceiveMessage@msg,w,c
 12266  002058  26D9               	addwf	fsr2l,f,c
 12267  00205A  5002               	movf	CANreceiveMessage@msg+1,w,c
 12268  00205C  22DA               	addwfc	fsr2h,f,c
 12269  00205E  CF5D FFDF          	movff	3933,indf2	;volatile
 12270                           
 12271                           ; BSR set to: 15
 12272                           ;inc\CANlib.h: 553: msg->RTR = RXB1DLCbits.RXRTR;
 12273  002062  EE20 F00E          	lfsr	2,14
 12274  002066  5001               	movf	CANreceiveMessage@msg,w,c
 12275  002068  26D9               	addwf	fsr2l,f,c
 12276  00206A  5002               	movf	CANreceiveMessage@msg+1,w,c
 12277  00206C  22DA               	addwfc	fsr2h,f,c
 12278  00206E  010F               	movlb	15	; () banked
 12279  002070  AD55               	btfss	85,6,b	;volatile
 12280  002072  D002               	goto	i1u622_20
 12281  002074  0E01               	movlw	1
 12282  002076  D001               	goto	i1u622_26
 12283  002078                     i1u622_20:
 12284  002078  0E00               	movlw	0
 12285  00207A                     i1u622_26:
 12286  00207A  6EDF               	movwf	indf2,c
 12287                           
 12288                           ; BSR set to: 15
 12289                           ;inc\CANlib.h: 555: msg->length = RXB1DLC & 0x0F;
 12290  00207C  EE20 F00D          	lfsr	2,13
 12291  002080  5001               	movf	CANreceiveMessage@msg,w,c
 12292  002082  26D9               	addwf	fsr2l,f,c
 12293  002084  5002               	movf	CANreceiveMessage@msg+1,w,c
 12294  002086  22DA               	addwfc	fsr2h,f,c
 12295  002088  010F               	movlb	15	; () banked
 12296  00208A  5155               	movf	85,w,b	;volatile
 12297  00208C  0B0F               	andlw	15
 12298  00208E  6EDF               	movwf	indf2,c
 12299                           
 12300                           ; BSR set to: 15
 12301                           ;inc\CANlib.h: 557: msg->type = RXB1SIDLbits.EXID;
 12302  002090  EE20 F00C          	lfsr	2,12
 12303  002094  5001               	movf	CANreceiveMessage@msg,w,c
 12304  002096  26D9               	addwf	fsr2l,f,c
 12305  002098  5002               	movf	CANreceiveMessage@msg+1,w,c
 12306  00209A  22DA               	addwfc	fsr2h,f,c
 12307  00209C  010F               	movlb	15	; () banked
 12308  00209E  A752               	btfss	82,3,b	;volatile
 12309  0020A0  D002               	goto	i1u623_20
 12310  0020A2  0E01               	movlw	1
 12311  0020A4  D001               	goto	i1u623_26
 12312  0020A6                     i1u623_20:
 12313  0020A6  0E00               	movlw	0
 12314  0020A8                     i1u623_26:
 12315  0020A8  6EDF               	movwf	indf2,c
 12316                           
 12317                           ; BSR set to: 15
 12318                           ;inc\CANlib.h: 559: if (RXB1SIDLbits.EXID == 0)
 12319  0020AA  010F               	movlb	15	; () banked
 12320  0020AC  B752               	btfsc	82,3,b	;volatile
 12321  0020AE  D044               	goto	i1l5023
 12322                           
 12323                           ; BSR set to: 15
 12324                           ;inc\CANlib.h: 560: {
 12325                           ;inc\CANlib.h: 561: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 12326  0020B0  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 12327  0020B4  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 12328  0020B6  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 12329  0020B8  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 12330  0020BA  0E03               	movlw	3
 12331  0020BC                     i1u625_25:
 12332  0020BC  90D8               	bcf	status,0,c
 12333  0020BE  3603               	rlcf	??_CANreceiveMessage,f,c
 12334  0020C0  3604               	rlcf	??_CANreceiveMessage+1,f,c
 12335  0020C2  3605               	rlcf	??_CANreceiveMessage+2,f,c
 12336  0020C4  3606               	rlcf	??_CANreceiveMessage+3,f,c
 12337  0020C6  2EE8               	decfsz	wreg,f,c
 12338  0020C8  D7F9               	goto	i1u625_25
 12339  0020CA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12340  0020CE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12341  0020D2  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 12342  0020D6  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 12343  0020DA  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 12344  0020DE  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 12345                           
 12346                           ; BSR set to: 15
 12347                           ;inc\CANlib.h: 562: tamp = (RXB1SIDL >> 5 ) & 0x07;
 12348  0020E2  010F               	movlb	15	; () banked
 12349  0020E4  3952               	swapf	82,w,b	;volatile
 12350  0020E6  42E8               	rrncf	wreg,f,c
 12351  0020E8  0B07               	andlw	7
 12352  0020EA  0B07               	andlw	7
 12353  0020EC  6E0C               	movwf	CANreceiveMessage@tamp,c
 12354                           
 12355                           ; BSR set to: 15
 12356                           ;inc\CANlib.h: 563: msg->identifier = msg->identifier + tamp;
 12357  0020EE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12358  0020F2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12359  0020F6  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 12360  0020FA  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 12361  0020FE  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 12362  002102  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 12363  002106  500C               	movf	CANreceiveMessage@tamp,w,c
 12364  002108  2403               	addwf	??_CANreceiveMessage,w,c
 12365  00210A  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 12366  00210C  0E00               	movlw	0
 12367  00210E  2004               	addwfc	??_CANreceiveMessage+1,w,c
 12368  002110  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 12369  002112  0E00               	movlw	0
 12370  002114  2005               	addwfc	??_CANreceiveMessage+2,w,c
 12371  002116  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 12372  002118  0E00               	movlw	0
 12373  00211A  2006               	addwfc	??_CANreceiveMessage+3,w,c
 12374  00211C  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 12375  00211E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12376  002122  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12377  002126  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 12378  00212A  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 12379  00212E  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 12380  002132  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 12381                           
 12382                           ;inc\CANlib.h: 564: }
 12383  002136  D08D               	goto	i1l5049
 12384  002138                     i1l5023:
 12385                           
 12386                           ; BSR set to: 15
 12387                           ;inc\CANlib.h: 565: else
 12388                           ;inc\CANlib.h: 566: {
 12389                           ;inc\CANlib.h: 567: msg->identifier = (unsigned long) RXB1EIDL;
 12390  002138  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
 12391  00213C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 12392  00213E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 12393  002140  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 12394  002142  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12395  002146  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12396  00214A  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 12397  00214E  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 12398  002152  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 12399  002156  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 12400                           
 12401                           ; BSR set to: 15
 12402                           ;inc\CANlib.h: 568: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 12403  00215A  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
 12404  00215E  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 12405  002160  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 12406  002162  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 12407  002164  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 12408  002168  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 12409  00216C  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 12410  002170  6A03               	clrf	??_CANreceiveMessage,c
 12411  002172  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12412  002176  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12413  00217A  5003               	movf	??_CANreceiveMessage,w,c
 12414  00217C  26DE               	addwf	postinc2,f,c
 12415  00217E  5004               	movf	??_CANreceiveMessage+1,w,c
 12416  002180  22DE               	addwfc	postinc2,f,c
 12417  002182  5005               	movf	??_CANreceiveMessage+2,w,c
 12418  002184  22DE               	addwfc	postinc2,f,c
 12419  002186  5006               	movf	??_CANreceiveMessage+3,w,c
 12420  002188  22DE               	addwfc	postinc2,f,c
 12421                           
 12422                           ; BSR set to: 15
 12423                           ;inc\CANlib.h: 570: if (RXB1SIDLbits.EID16)
 12424  00218A  010F               	movlb	15	; () banked
 12425  00218C  A152               	btfss	82,0,b	;volatile
 12426  00218E  D00C               	goto	i1l5031
 12427                           
 12428                           ; BSR set to: 15
 12429                           ;inc\CANlib.h: 571: msg->identifier |= 0x00010000;
 12430  002190  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12431  002194  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12432  002198  0E00               	movlw	0
 12433  00219A  12DE               	iorwf	postinc2,f,c
 12434  00219C  0E00               	movlw	0
 12435  00219E  12DE               	iorwf	postinc2,f,c
 12436  0021A0  0E01               	movlw	1
 12437  0021A2  12DE               	iorwf	postinc2,f,c
 12438  0021A4  0E00               	movlw	0
 12439  0021A6  12DE               	iorwf	postinc2,f,c
 12440  0021A8                     i1l5031:
 12441                           
 12442                           ; BSR set to: 15
 12443                           ;inc\CANlib.h: 572: if (RXB1SIDLbits.EID17)
 12444  0021A8  010F               	movlb	15	; () banked
 12445  0021AA  A352               	btfss	82,1,b	;volatile
 12446  0021AC  D00C               	goto	i1l5035
 12447                           
 12448                           ; BSR set to: 15
 12449                           ;inc\CANlib.h: 573: msg->identifier |= 0x00020000;
 12450  0021AE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12451  0021B2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12452  0021B6  0E00               	movlw	0
 12453  0021B8  12DE               	iorwf	postinc2,f,c
 12454  0021BA  0E00               	movlw	0
 12455  0021BC  12DE               	iorwf	postinc2,f,c
 12456  0021BE  0E02               	movlw	2
 12457  0021C0  12DE               	iorwf	postinc2,f,c
 12458  0021C2  0E00               	movlw	0
 12459  0021C4  12DE               	iorwf	postinc2,f,c
 12460  0021C6                     i1l5035:
 12461                           
 12462                           ; BSR set to: 15
 12463                           ;inc\CANlib.h: 574: if (RXB1SIDLbits.SID0)
 12464  0021C6  010F               	movlb	15	; () banked
 12465  0021C8  AB52               	btfss	82,5,b	;volatile
 12466  0021CA  D00C               	goto	i1l5039
 12467                           
 12468                           ; BSR set to: 15
 12469                           ;inc\CANlib.h: 575: msg->identifier |= 0x00040000;
 12470  0021CC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12471  0021D0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12472  0021D4  0E00               	movlw	0
 12473  0021D6  12DE               	iorwf	postinc2,f,c
 12474  0021D8  0E00               	movlw	0
 12475  0021DA  12DE               	iorwf	postinc2,f,c
 12476  0021DC  0E04               	movlw	4
 12477  0021DE  12DE               	iorwf	postinc2,f,c
 12478  0021E0  0E00               	movlw	0
 12479  0021E2  12DE               	iorwf	postinc2,f,c
 12480  0021E4                     i1l5039:
 12481                           
 12482                           ; BSR set to: 15
 12483                           ;inc\CANlib.h: 576: if (RXB1SIDLbits.SID1)
 12484  0021E4  010F               	movlb	15	; () banked
 12485  0021E6  AD52               	btfss	82,6,b	;volatile
 12486  0021E8  D00C               	goto	i1l5043
 12487                           
 12488                           ; BSR set to: 15
 12489                           ;inc\CANlib.h: 577: msg->identifier |= 0x00080000;
 12490  0021EA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12491  0021EE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12492  0021F2  0E00               	movlw	0
 12493  0021F4  12DE               	iorwf	postinc2,f,c
 12494  0021F6  0E00               	movlw	0
 12495  0021F8  12DE               	iorwf	postinc2,f,c
 12496  0021FA  0E08               	movlw	8
 12497  0021FC  12DE               	iorwf	postinc2,f,c
 12498  0021FE  0E00               	movlw	0
 12499  002200  12DE               	iorwf	postinc2,f,c
 12500  002202                     i1l5043:
 12501                           
 12502                           ; BSR set to: 15
 12503                           ;inc\CANlib.h: 578: if (RXB1SIDLbits.SID2)
 12504  002202  010F               	movlb	15	; () banked
 12505  002204  AF52               	btfss	82,7,b	;volatile
 12506  002206  D00C               	goto	i1l5047
 12507                           
 12508                           ; BSR set to: 15
 12509                           ;inc\CANlib.h: 579: msg->identifier |= 0x00100000;
 12510  002208  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12511  00220C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12512  002210  0E00               	movlw	0
 12513  002212  12DE               	iorwf	postinc2,f,c
 12514  002214  0E00               	movlw	0
 12515  002216  12DE               	iorwf	postinc2,f,c
 12516  002218  0E10               	movlw	16
 12517  00221A  12DE               	iorwf	postinc2,f,c
 12518  00221C  0E00               	movlw	0
 12519  00221E  12DE               	iorwf	postinc2,f,c
 12520  002220                     i1l5047:
 12521                           
 12522                           ; BSR set to: 15
 12523                           ;inc\CANlib.h: 581: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 12524  002220  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 12525  002224  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 12526  002226  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 12527  002228  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 12528  00222A  0E15               	movlw	21
 12529  00222C                     i1u631_25:
 12530  00222C  90D8               	bcf	status,0,c
 12531  00222E  3603               	rlcf	??_CANreceiveMessage,f,c
 12532  002230  3604               	rlcf	??_CANreceiveMessage+1,f,c
 12533  002232  3605               	rlcf	??_CANreceiveMessage+2,f,c
 12534  002234  3606               	rlcf	??_CANreceiveMessage+3,f,c
 12535  002236  2EE8               	decfsz	wreg,f,c
 12536  002238  D7F9               	goto	i1u631_25
 12537  00223A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12538  00223E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12539  002242  5003               	movf	??_CANreceiveMessage,w,c
 12540  002244  12DE               	iorwf	postinc2,f,c
 12541  002246  5004               	movf	??_CANreceiveMessage+1,w,c
 12542  002248  12DE               	iorwf	postinc2,f,c
 12543  00224A  5005               	movf	??_CANreceiveMessage+2,w,c
 12544  00224C  12DE               	iorwf	postinc2,f,c
 12545  00224E  5006               	movf	??_CANreceiveMessage+3,w,c
 12546  002250  12DE               	iorwf	postinc2,f,c
 12547  002252                     i1l5049:
 12548                           
 12549                           ; BSR set to: 15
 12550                           ;inc\CANlib.h: 582: }
 12551                           ;inc\CANlib.h: 584: RXB1CONbits.RXFUL = 0x00;
 12552  002252  010F               	movlb	15	; () banked
 12553  002254  9F50               	bcf	80,7,b	;volatile
 12554                           
 12555                           ; BSR set to: 15
 12556                           ;inc\CANlib.h: 585: return (error);
 12557                           ;	Return value of _CANreceiveMessage is never used
 12558  002256  0012               	return	
 12559  002258                     i1l404:
 12560                           
 12561                           ; BSR set to: 15
 12562                           ;inc\CANlib.h: 586: }
 12563                           ;inc\CANlib.h: 588: if (RXB0CONbits.RXFUL ==0x01)
 12564  002258  AE60               	btfss	3936,7,c	;volatile
 12565  00225A  0012               	return	
 12566                           
 12567                           ; BSR set to: 15
 12568                           ;inc\CANlib.h: 589: {
 12569                           ;inc\CANlib.h: 590: msg->identifier = 0;
 12570  00225C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12571  002260  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12572  002264  6ADE               	clrf	postinc2,c
 12573  002266  6ADE               	clrf	postinc2,c
 12574  002268  6ADE               	clrf	postinc2,c
 12575  00226A  6ADD               	clrf	postdec2,c
 12576                           
 12577                           ; BSR set to: 15
 12578                           ;inc\CANlib.h: 591: msg->data[0] =RXB0D0;
 12579  00226C  EE20 F004          	lfsr	2,4
 12580  002270  5001               	movf	CANreceiveMessage@msg,w,c
 12581  002272  26D9               	addwf	fsr2l,f,c
 12582  002274  5002               	movf	CANreceiveMessage@msg+1,w,c
 12583  002276  22DA               	addwfc	fsr2h,f,c
 12584  002278  CF66 FFDF          	movff	3942,indf2	;volatile
 12585                           
 12586                           ; BSR set to: 15
 12587                           ;inc\CANlib.h: 592: msg->data[1] =RXB0D1;
 12588  00227C  EE20 F005          	lfsr	2,5
 12589  002280  5001               	movf	CANreceiveMessage@msg,w,c
 12590  002282  26D9               	addwf	fsr2l,f,c
 12591  002284  5002               	movf	CANreceiveMessage@msg+1,w,c
 12592  002286  22DA               	addwfc	fsr2h,f,c
 12593  002288  CF67 FFDF          	movff	3943,indf2	;volatile
 12594                           
 12595                           ; BSR set to: 15
 12596                           ;inc\CANlib.h: 593: msg->data[2] =RXB0D2;
 12597  00228C  EE20 F006          	lfsr	2,6
 12598  002290  5001               	movf	CANreceiveMessage@msg,w,c
 12599  002292  26D9               	addwf	fsr2l,f,c
 12600  002294  5002               	movf	CANreceiveMessage@msg+1,w,c
 12601  002296  22DA               	addwfc	fsr2h,f,c
 12602  002298  CF68 FFDF          	movff	3944,indf2	;volatile
 12603                           
 12604                           ; BSR set to: 15
 12605                           ;inc\CANlib.h: 594: msg->data[3] =RXB0D3;
 12606  00229C  EE20 F007          	lfsr	2,7
 12607  0022A0  5001               	movf	CANreceiveMessage@msg,w,c
 12608  0022A2  26D9               	addwf	fsr2l,f,c
 12609  0022A4  5002               	movf	CANreceiveMessage@msg+1,w,c
 12610  0022A6  22DA               	addwfc	fsr2h,f,c
 12611  0022A8  CF69 FFDF          	movff	3945,indf2	;volatile
 12612                           
 12613                           ; BSR set to: 15
 12614                           ;inc\CANlib.h: 595: msg->data[4] =RXB0D4;
 12615  0022AC  EE20 F008          	lfsr	2,8
 12616  0022B0  5001               	movf	CANreceiveMessage@msg,w,c
 12617  0022B2  26D9               	addwf	fsr2l,f,c
 12618  0022B4  5002               	movf	CANreceiveMessage@msg+1,w,c
 12619  0022B6  22DA               	addwfc	fsr2h,f,c
 12620  0022B8  CF6A FFDF          	movff	3946,indf2	;volatile
 12621                           
 12622                           ; BSR set to: 15
 12623                           ;inc\CANlib.h: 596: msg->data[5] =RXB0D5;
 12624  0022BC  EE20 F009          	lfsr	2,9
 12625  0022C0  5001               	movf	CANreceiveMessage@msg,w,c
 12626  0022C2  26D9               	addwf	fsr2l,f,c
 12627  0022C4  5002               	movf	CANreceiveMessage@msg+1,w,c
 12628  0022C6  22DA               	addwfc	fsr2h,f,c
 12629  0022C8  CF6B FFDF          	movff	3947,indf2	;volatile
 12630                           
 12631                           ; BSR set to: 15
 12632                           ;inc\CANlib.h: 597: msg->data[6] =RXB0D6;
 12633  0022CC  EE20 F00A          	lfsr	2,10
 12634  0022D0  5001               	movf	CANreceiveMessage@msg,w,c
 12635  0022D2  26D9               	addwf	fsr2l,f,c
 12636  0022D4  5002               	movf	CANreceiveMessage@msg+1,w,c
 12637  0022D6  22DA               	addwfc	fsr2h,f,c
 12638  0022D8  CF6C FFDF          	movff	3948,indf2	;volatile
 12639                           
 12640                           ; BSR set to: 15
 12641                           ;inc\CANlib.h: 598: msg->data[7] =RXB0D7;
 12642  0022DC  EE20 F00B          	lfsr	2,11
 12643  0022E0  5001               	movf	CANreceiveMessage@msg,w,c
 12644  0022E2  26D9               	addwf	fsr2l,f,c
 12645  0022E4  5002               	movf	CANreceiveMessage@msg+1,w,c
 12646  0022E6  22DA               	addwfc	fsr2h,f,c
 12647  0022E8  CF6D FFDF          	movff	3949,indf2	;volatile
 12648                           
 12649                           ; BSR set to: 15
 12650                           ;inc\CANlib.h: 600: msg->RTR = RXB0DLCbits.RXRTR;
 12651  0022EC  EE20 F00E          	lfsr	2,14
 12652  0022F0  5001               	movf	CANreceiveMessage@msg,w,c
 12653  0022F2  26D9               	addwf	fsr2l,f,c
 12654  0022F4  5002               	movf	CANreceiveMessage@msg+1,w,c
 12655  0022F6  22DA               	addwfc	fsr2h,f,c
 12656  0022F8  AC65               	btfss	3941,6,c	;volatile
 12657  0022FA  D002               	goto	i1u633_20
 12658  0022FC  0E01               	movlw	1
 12659  0022FE  D001               	goto	i1u633_26
 12660  002300                     i1u633_20:
 12661  002300  0E00               	movlw	0
 12662  002302                     i1u633_26:
 12663  002302  6EDF               	movwf	indf2,c
 12664                           
 12665                           ; BSR set to: 15
 12666                           ;inc\CANlib.h: 602: msg->length = RXB0DLC & 0x0F;
 12667  002304  EE20 F00D          	lfsr	2,13
 12668  002308  5001               	movf	CANreceiveMessage@msg,w,c
 12669  00230A  26D9               	addwf	fsr2l,f,c
 12670  00230C  5002               	movf	CANreceiveMessage@msg+1,w,c
 12671  00230E  22DA               	addwfc	fsr2h,f,c
 12672  002310  5065               	movf	3941,w,c	;volatile
 12673  002312  0B0F               	andlw	15
 12674  002314  6EDF               	movwf	indf2,c
 12675                           
 12676                           ; BSR set to: 15
 12677                           ;inc\CANlib.h: 604: msg->type = RXB0SIDLbits.EXID;
 12678  002316  EE20 F00C          	lfsr	2,12
 12679  00231A  5001               	movf	CANreceiveMessage@msg,w,c
 12680  00231C  26D9               	addwf	fsr2l,f,c
 12681  00231E  5002               	movf	CANreceiveMessage@msg+1,w,c
 12682  002320  22DA               	addwfc	fsr2h,f,c
 12683  002322  A662               	btfss	3938,3,c	;volatile
 12684  002324  D002               	goto	i1u634_20
 12685  002326  0E01               	movlw	1
 12686  002328  D001               	goto	i1u634_26
 12687  00232A                     i1u634_20:
 12688  00232A  0E00               	movlw	0
 12689  00232C                     i1u634_26:
 12690  00232C  6EDF               	movwf	indf2,c
 12691                           
 12692                           ; BSR set to: 15
 12693                           ;inc\CANlib.h: 606: if (RXB0SIDLbits.EXID == 0)
 12694  00232E  B662               	btfsc	3938,3,c	;volatile
 12695  002330  D043               	goto	i1l5085
 12696                           
 12697                           ; BSR set to: 15
 12698                           ;inc\CANlib.h: 607: {
 12699                           ;inc\CANlib.h: 608: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 12700  002332  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 12701  002336  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 12702  002338  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 12703  00233A  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 12704  00233C  0E03               	movlw	3
 12705  00233E                     i1u636_25:
 12706  00233E  90D8               	bcf	status,0,c
 12707  002340  3603               	rlcf	??_CANreceiveMessage,f,c
 12708  002342  3604               	rlcf	??_CANreceiveMessage+1,f,c
 12709  002344  3605               	rlcf	??_CANreceiveMessage+2,f,c
 12710  002346  3606               	rlcf	??_CANreceiveMessage+3,f,c
 12711  002348  2EE8               	decfsz	wreg,f,c
 12712  00234A  D7F9               	goto	i1u636_25
 12713  00234C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12714  002350  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12715  002354  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 12716  002358  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 12717  00235C  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 12718  002360  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 12719                           
 12720                           ; BSR set to: 15
 12721                           ;inc\CANlib.h: 609: tamp = (RXB0SIDL >> 5 ) & 0x07;
 12722  002364  3862               	swapf	3938,w,c	;volatile
 12723  002366  42E8               	rrncf	wreg,f,c
 12724  002368  0B07               	andlw	7
 12725  00236A  0B07               	andlw	7
 12726  00236C  6E0C               	movwf	CANreceiveMessage@tamp,c
 12727                           
 12728                           ; BSR set to: 15
 12729                           ;inc\CANlib.h: 610: msg->identifier = msg->identifier + tamp;
 12730  00236E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12731  002372  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12732  002376  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 12733  00237A  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 12734  00237E  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 12735  002382  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 12736  002386  500C               	movf	CANreceiveMessage@tamp,w,c
 12737  002388  2403               	addwf	??_CANreceiveMessage,w,c
 12738  00238A  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 12739  00238C  0E00               	movlw	0
 12740  00238E  2004               	addwfc	??_CANreceiveMessage+1,w,c
 12741  002390  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 12742  002392  0E00               	movlw	0
 12743  002394  2005               	addwfc	??_CANreceiveMessage+2,w,c
 12744  002396  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 12745  002398  0E00               	movlw	0
 12746  00239A  2006               	addwfc	??_CANreceiveMessage+3,w,c
 12747  00239C  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 12748  00239E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12749  0023A2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12750  0023A6  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 12751  0023AA  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 12752  0023AE  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 12753  0023B2  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 12754                           
 12755                           ;inc\CANlib.h: 611: }
 12756  0023B6  D088               	goto	i1l5111
 12757  0023B8                     i1l5085:
 12758                           
 12759                           ; BSR set to: 15
 12760                           ;inc\CANlib.h: 612: else
 12761                           ;inc\CANlib.h: 613: {
 12762                           ;inc\CANlib.h: 614: msg->identifier = (unsigned long) RXB0EIDL;
 12763  0023B8  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
 12764  0023BC  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 12765  0023BE  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 12766  0023C0  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 12767  0023C2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12768  0023C6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12769  0023CA  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 12770  0023CE  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 12771  0023D2  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 12772  0023D6  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 12773                           
 12774                           ; BSR set to: 15
 12775                           ;inc\CANlib.h: 615: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 12776  0023DA  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
 12777  0023DE  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 12778  0023E0  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 12779  0023E2  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 12780  0023E4  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 12781  0023E8  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 12782  0023EC  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 12783  0023F0  6A03               	clrf	??_CANreceiveMessage,c
 12784  0023F2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12785  0023F6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12786  0023FA  5003               	movf	??_CANreceiveMessage,w,c
 12787  0023FC  26DE               	addwf	postinc2,f,c
 12788  0023FE  5004               	movf	??_CANreceiveMessage+1,w,c
 12789  002400  22DE               	addwfc	postinc2,f,c
 12790  002402  5005               	movf	??_CANreceiveMessage+2,w,c
 12791  002404  22DE               	addwfc	postinc2,f,c
 12792  002406  5006               	movf	??_CANreceiveMessage+3,w,c
 12793  002408  22DE               	addwfc	postinc2,f,c
 12794                           
 12795                           ; BSR set to: 15
 12796                           ;inc\CANlib.h: 617: if (RXB0SIDLbits.EID16)
 12797  00240A  A062               	btfss	3938,0,c	;volatile
 12798  00240C  D00C               	goto	i1l5093
 12799                           
 12800                           ; BSR set to: 15
 12801                           ;inc\CANlib.h: 618: msg->identifier |= 0x00010000;
 12802  00240E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12803  002412  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12804  002416  0E00               	movlw	0
 12805  002418  12DE               	iorwf	postinc2,f,c
 12806  00241A  0E00               	movlw	0
 12807  00241C  12DE               	iorwf	postinc2,f,c
 12808  00241E  0E01               	movlw	1
 12809  002420  12DE               	iorwf	postinc2,f,c
 12810  002422  0E00               	movlw	0
 12811  002424  12DE               	iorwf	postinc2,f,c
 12812  002426                     i1l5093:
 12813                           
 12814                           ; BSR set to: 15
 12815                           ;inc\CANlib.h: 619: if (RXB0SIDLbits.EID17)
 12816  002426  A262               	btfss	3938,1,c	;volatile
 12817  002428  D00C               	goto	i1l5097
 12818                           
 12819                           ; BSR set to: 15
 12820                           ;inc\CANlib.h: 620: msg->identifier |= 0x00020000;
 12821  00242A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12822  00242E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12823  002432  0E00               	movlw	0
 12824  002434  12DE               	iorwf	postinc2,f,c
 12825  002436  0E00               	movlw	0
 12826  002438  12DE               	iorwf	postinc2,f,c
 12827  00243A  0E02               	movlw	2
 12828  00243C  12DE               	iorwf	postinc2,f,c
 12829  00243E  0E00               	movlw	0
 12830  002440  12DE               	iorwf	postinc2,f,c
 12831  002442                     i1l5097:
 12832                           
 12833                           ; BSR set to: 15
 12834                           ;inc\CANlib.h: 621: if (RXB0SIDLbits.SID0)
 12835  002442  AA62               	btfss	3938,5,c	;volatile
 12836  002444  D00C               	goto	i1l5101
 12837                           
 12838                           ; BSR set to: 15
 12839                           ;inc\CANlib.h: 622: msg->identifier |= 0x00040000;
 12840  002446  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12841  00244A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12842  00244E  0E00               	movlw	0
 12843  002450  12DE               	iorwf	postinc2,f,c
 12844  002452  0E00               	movlw	0
 12845  002454  12DE               	iorwf	postinc2,f,c
 12846  002456  0E04               	movlw	4
 12847  002458  12DE               	iorwf	postinc2,f,c
 12848  00245A  0E00               	movlw	0
 12849  00245C  12DE               	iorwf	postinc2,f,c
 12850  00245E                     i1l5101:
 12851                           
 12852                           ; BSR set to: 15
 12853                           ;inc\CANlib.h: 623: if (RXB0SIDLbits.SID1)
 12854  00245E  AC62               	btfss	3938,6,c	;volatile
 12855  002460  D00C               	goto	i1l5105
 12856                           
 12857                           ; BSR set to: 15
 12858                           ;inc\CANlib.h: 624: msg->identifier |= 0x00080000;
 12859  002462  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12860  002466  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12861  00246A  0E00               	movlw	0
 12862  00246C  12DE               	iorwf	postinc2,f,c
 12863  00246E  0E00               	movlw	0
 12864  002470  12DE               	iorwf	postinc2,f,c
 12865  002472  0E08               	movlw	8
 12866  002474  12DE               	iorwf	postinc2,f,c
 12867  002476  0E00               	movlw	0
 12868  002478  12DE               	iorwf	postinc2,f,c
 12869  00247A                     i1l5105:
 12870                           
 12871                           ; BSR set to: 15
 12872                           ;inc\CANlib.h: 625: if (RXB0SIDLbits.SID2)
 12873  00247A  AE62               	btfss	3938,7,c	;volatile
 12874  00247C  D00C               	goto	i1l5109
 12875                           
 12876                           ; BSR set to: 15
 12877                           ;inc\CANlib.h: 626: msg->identifier |= 0x00100000;
 12878  00247E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12879  002482  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12880  002486  0E00               	movlw	0
 12881  002488  12DE               	iorwf	postinc2,f,c
 12882  00248A  0E00               	movlw	0
 12883  00248C  12DE               	iorwf	postinc2,f,c
 12884  00248E  0E10               	movlw	16
 12885  002490  12DE               	iorwf	postinc2,f,c
 12886  002492  0E00               	movlw	0
 12887  002494  12DE               	iorwf	postinc2,f,c
 12888  002496                     i1l5109:
 12889                           
 12890                           ; BSR set to: 15
 12891                           ;inc\CANlib.h: 628: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 12892  002496  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 12893  00249A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 12894  00249C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 12895  00249E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 12896  0024A0  0E15               	movlw	21
 12897  0024A2                     i1u642_25:
 12898  0024A2  90D8               	bcf	status,0,c
 12899  0024A4  3603               	rlcf	??_CANreceiveMessage,f,c
 12900  0024A6  3604               	rlcf	??_CANreceiveMessage+1,f,c
 12901  0024A8  3605               	rlcf	??_CANreceiveMessage+2,f,c
 12902  0024AA  3606               	rlcf	??_CANreceiveMessage+3,f,c
 12903  0024AC  2EE8               	decfsz	wreg,f,c
 12904  0024AE  D7F9               	goto	i1u642_25
 12905  0024B0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12906  0024B4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12907  0024B8  5003               	movf	??_CANreceiveMessage,w,c
 12908  0024BA  12DE               	iorwf	postinc2,f,c
 12909  0024BC  5004               	movf	??_CANreceiveMessage+1,w,c
 12910  0024BE  12DE               	iorwf	postinc2,f,c
 12911  0024C0  5005               	movf	??_CANreceiveMessage+2,w,c
 12912  0024C2  12DE               	iorwf	postinc2,f,c
 12913  0024C4  5006               	movf	??_CANreceiveMessage+3,w,c
 12914  0024C6  12DE               	iorwf	postinc2,f,c
 12915  0024C8                     i1l5111:
 12916                           
 12917                           ; BSR set to: 15
 12918                           ;inc\CANlib.h: 630: }
 12919                           ;inc\CANlib.h: 631: RXB0CONbits.RXFUL = 0x00;
 12920  0024C8  9E60               	bcf	3936,7,c	;volatile
 12921                           
 12922                           ; BSR set to: 15
 12923                           ;inc\CANlib.h: 633: return (error);
 12924                           ;	Return value of _CANreceiveMessage is never used
 12925  0024CA  0012               	return	
 12926  0024CC                     __end_of_CANreceiveMessage:
 12927                           	opt stack 0
 12928                           pclatu	equ	0xFFB
 12929                           pclath	equ	0xFFA
 12930                           tblptru	equ	0xFF8
 12931                           tblptrh	equ	0xFF7
 12932                           tblptrl	equ	0xFF6
 12933                           tablat	equ	0xFF5
 12934                           prodh	equ	0xFF4
 12935                           prodl	equ	0xFF3
 12936                           intcon	equ	0xFF2
 12937                           intcon2	equ	0xFF1
 12938                           postinc0	equ	0xFEE
 12939                           fsr0h	equ	0xFEA
 12940                           fsr0l	equ	0xFE9
 12941                           wreg	equ	0xFE8
 12942                           indf1	equ	0xFE7
 12943                           fsr1h	equ	0xFE2
 12944                           fsr1l	equ	0xFE1
 12945                           bsr	equ	0xFE0
 12946                           indf2	equ	0xFDF
 12947                           postinc2	equ	0xFDE
 12948                           postdec2	equ	0xFDD
 12949                           fsr2h	equ	0xFDA
 12950                           fsr2l	equ	0xFD9
 12951                           status	equ	0xFD8
 12952                           
 12953 ;; *************** function _ISR_Alta *****************
 12954 ;; Defined at:
 12955 ;;		line 73 in file "parcheggio.c"
 12956 ;; Parameters:    Size  Location     Type
 12957 ;;		None
 12958 ;; Auto vars:     Size  Location     Type
 12959 ;;		None
 12960 ;; Return value:  Size  Location     Type
 12961 ;;		None               void
 12962 ;; Registers used:
 12963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12964 ;; Tracked objects:
 12965 ;;		On entry : 0/0
 12966 ;;		On exit  : 0/0
 12967 ;;		Unchanged: 0/0
 12968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12971 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12972 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12973 ;;Total ram usage:       16 bytes
 12974 ;; Hardware stack levels used:    1
 12975 ;; Hardware stack levels required when called:    1
 12976 ;; This function calls:
 12977 ;;		___lwdiv
 12978 ;; This function is called by:
 12979 ;;		Interrupt level 2
 12980 ;; This function uses a non-reentrant model
 12981 ;;
 12982                           
 12983                           	psect	intcode
 12984  000008                     __pintcode:
 12985                           	opt stack 0
 12986  000008                     _ISR_Alta:
 12987                           	opt stack 21
 12988                           
 12989                           ; BSR set to: 15
 12990                           ;incstack = 0
 12991  000008  8248               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 12992  00000A  CFFA F069          	movff	pclath,??_ISR_Alta+2
 12993  00000E  CFFB F06A          	movff	pclatu,??_ISR_Alta+3
 12994  000012  EF6B  F025         	goto	int_func
 12995                           pclatu	equ	0xFFB
 12996                           pclath	equ	0xFFA
 12997                           tblptru	equ	0xFF8
 12998                           tblptrh	equ	0xFF7
 12999                           tblptrl	equ	0xFF6
 13000                           tablat	equ	0xFF5
 13001                           prodh	equ	0xFF4
 13002                           prodl	equ	0xFF3
 13003                           intcon	equ	0xFF2
 13004                           intcon2	equ	0xFF1
 13005                           postinc0	equ	0xFEE
 13006                           fsr0h	equ	0xFEA
 13007                           fsr0l	equ	0xFE9
 13008                           wreg	equ	0xFE8
 13009                           indf1	equ	0xFE7
 13010                           fsr1h	equ	0xFE2
 13011                           fsr1l	equ	0xFE1
 13012                           bsr	equ	0xFE0
 13013                           indf2	equ	0xFDF
 13014                           postinc2	equ	0xFDE
 13015                           postdec2	equ	0xFDD
 13016                           fsr2h	equ	0xFDA
 13017                           fsr2l	equ	0xFD9
 13018                           status	equ	0xFD8
 13019                           
 13020                           	psect	intcode_body
 13021  004AD6                     __pintcode_body:
 13022                           	opt stack 21
 13023  004AD6                     int_func:
 13024                           	opt stack 21
 13025  004AD6  CFE9 F06B          	movff	fsr0l,??_ISR_Alta+4
 13026  004ADA  CFEA F06C          	movff	fsr0h,??_ISR_Alta+5
 13027  004ADE  CFE1 F06D          	movff	fsr1l,??_ISR_Alta+6
 13028  004AE2  CFE2 F06E          	movff	fsr1h,??_ISR_Alta+7
 13029  004AE6  CFD9 F06F          	movff	fsr2l,??_ISR_Alta+8
 13030  004AEA  CFDA F070          	movff	fsr2h,??_ISR_Alta+9
 13031  004AEE  CFF3 F071          	movff	prodl,??_ISR_Alta+10
 13032  004AF2  CFF4 F072          	movff	prodh,??_ISR_Alta+11
 13033  004AF6  CFF6 F073          	movff	tblptrl,??_ISR_Alta+12
 13034  004AFA  CFF7 F074          	movff	tblptrh,??_ISR_Alta+13
 13035  004AFE  CFF8 F075          	movff	tblptru,??_ISR_Alta+14
 13036  004B02  CFF5 F076          	movff	tablat,??_ISR_Alta+15
 13037                           
 13038                           ;parcheggio.c: 75: if (INTCON2bits.INTEDG0 == 1) {
 13039  004B06  ACF1               	btfss	intcon2,6,c	;volatile
 13040  004B08  D007               	goto	i2l652
 13041                           
 13042                           ;parcheggio.c: 76: INTCON2bits.INTEDG0 = 0;
 13043  004B0A  9CF1               	bcf	intcon2,6,c	;volatile
 13044                           
 13045                           ;parcheggio.c: 77: TMR3H = 0;
 13046  004B0C  0E00               	movlw	0
 13047  004B0E  6EB3               	movwf	4019,c	;volatile
 13048                           
 13049                           ;parcheggio.c: 78: TMR3L = 0;
 13050  004B10  0E00               	movlw	0
 13051  004B12  6EB2               	movwf	4018,c	;volatile
 13052                           
 13053                           ;parcheggio.c: 79: distance_error = 0;
 13054  004B14  9446               	bcf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 13055                           
 13056                           ;parcheggio.c: 80: } else {
 13057  004B16  D030               	goto	i2l6245
 13058  004B18                     i2l652:
 13059                           
 13060                           ;parcheggio.c: 81: gianni = TMR3H;
 13061  004B18  CFB3 F044          	movff	4019,_gianni	;volatile
 13062                           
 13063                           ;parcheggio.c: 82: asus = TMR3L;
 13064  004B1C  CFB2 F043          	movff	4018,_asus	;volatile
 13065                           
 13066                           ;parcheggio.c: 83: timerValue2 = gianni;
 13067  004B20  C044  F040         	movff	_gianni,_timerValue2	;volatile
 13068  004B24  6A41               	clrf	_timerValue2+1,c	;volatile
 13069                           
 13070                           ;parcheggio.c: 84: timerValue2 = ((timerValue2 << 8) | (asus));
 13071  004B26  5040               	movf	_timerValue2,w,c	;volatile
 13072  004B28  0100               	movlb	0	; () banked
 13073  004B2A  6F67               	movwf	??_ISR_Alta& (0+255),b
 13074  004B2C  5043               	movf	_asus,w,c	;volatile
 13075  004B2E  6E40               	movwf	_timerValue2,c	;volatile
 13076  004B30  C067  F041         	movff	??_ISR_Alta,_timerValue2+1	;volatile
 13077                           
 13078                           ; BSR set to: 0
 13079                           ;parcheggio.c: 85: pulse_time = timerValue2 / 2;
 13080  004B34  90D8               	bcf	status,0,c
 13081  004B36  3041               	rrcf	_timerValue2+1,w,c	;volatile
 13082  004B38  0100               	movlb	0	; () banked
 13083  004B3A  6F67               	movwf	??_ISR_Alta& (0+255),b
 13084  004B3C  3040               	rrcf	_timerValue2,w,c	;volatile
 13085  004B3E  6E3C               	movwf	_pulse_time,c	;volatile
 13086  004B40  C067  F03D         	movff	??_ISR_Alta,_pulse_time+1	;volatile
 13087                           
 13088                           ; BSR set to: 0
 13089                           ;parcheggio.c: 86: sensor_distance[MUX_index] = pulse_time / 58;
 13090  004B44  C03C  F060         	movff	_pulse_time,___lwdiv@dividend	;volatile
 13091  004B48  C03D  F061         	movff	_pulse_time+1,___lwdiv@dividend+1	;volatile
 13092  004B4C  0E00               	movlw	0
 13093  004B4E  0100               	movlb	0	; () banked
 13094  004B50  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 13095  004B52  0E3A               	movlw	58
 13096  004B54  6F62               	movwf	___lwdiv@divisor& (0+255),b
 13097  004B56  ECDB  F025         	call	___lwdiv	;wreg free
 13098  004B5A  5042               	movf	_MUX_index,w,c	;volatile
 13099  004B5C  0D02               	mullw	2
 13100  004B5E  0E24               	movlw	low _sensor_distance
 13101  004B60  24F3               	addwf	prodl,w,c
 13102  004B62  6ED9               	movwf	fsr2l,c
 13103  004B64  0E00               	movlw	high _sensor_distance
 13104  004B66  20F4               	addwfc	prodh,w,c
 13105  004B68  6EDA               	movwf	fsr2h,c
 13106  004B6A  0100               	movlb	0	; () banked
 13107  004B6C  C060  FFDE         	movff	?___lwdiv,postinc2
 13108  004B70  0100               	movlb	0	; () banked
 13109  004B72  C061  FFDD         	movff	?___lwdiv+1,postdec2
 13110                           
 13111                           ; BSR set to: 0
 13112                           ;parcheggio.c: 87: INTCON2bits.INTEDG0 = 1;
 13113  004B76  8CF1               	bsf	intcon2,6,c	;volatile
 13114  004B78                     i2l6245:
 13115                           
 13116                           ;parcheggio.c: 88: }
 13117                           ;parcheggio.c: 89: INTCONbits.INT0IF = 0;
 13118  004B78  92F2               	bcf	intcon,1,c	;volatile
 13119  004B7A  C076  FFF5         	movff	??_ISR_Alta+15,tablat
 13120  004B7E  C075  FFF8         	movff	??_ISR_Alta+14,tblptru
 13121  004B82  C074  FFF7         	movff	??_ISR_Alta+13,tblptrh
 13122  004B86  C073  FFF6         	movff	??_ISR_Alta+12,tblptrl
 13123  004B8A  C072  FFF4         	movff	??_ISR_Alta+11,prodh
 13124  004B8E  C071  FFF3         	movff	??_ISR_Alta+10,prodl
 13125  004B92  C070  FFDA         	movff	??_ISR_Alta+9,fsr2h
 13126  004B96  C06F  FFD9         	movff	??_ISR_Alta+8,fsr2l
 13127  004B9A  C06E  FFE2         	movff	??_ISR_Alta+7,fsr1h
 13128  004B9E  C06D  FFE1         	movff	??_ISR_Alta+6,fsr1l
 13129  004BA2  C06C  FFEA         	movff	??_ISR_Alta+5,fsr0h
 13130  004BA6  C06B  FFE9         	movff	??_ISR_Alta+4,fsr0l
 13131  004BAA  C06A  FFFB         	movff	??_ISR_Alta+3,pclatu
 13132  004BAE  C069  FFFA         	movff	??_ISR_Alta+2,pclath
 13133  004BB2  9248               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13134  004BB4  0011               	retfie		f
 13135  004BB6                     __end_of_ISR_Alta:
 13136                           	opt stack 0
 13137                           pclatu	equ	0xFFB
 13138                           pclath	equ	0xFFA
 13139                           tblptru	equ	0xFF8
 13140                           tblptrh	equ	0xFF7
 13141                           tblptrl	equ	0xFF6
 13142                           tablat	equ	0xFF5
 13143                           prodh	equ	0xFF4
 13144                           prodl	equ	0xFF3
 13145                           intcon	equ	0xFF2
 13146                           intcon2	equ	0xFF1
 13147                           postinc0	equ	0xFEE
 13148                           fsr0h	equ	0xFEA
 13149                           fsr0l	equ	0xFE9
 13150                           wreg	equ	0xFE8
 13151                           indf1	equ	0xFE7
 13152                           fsr1h	equ	0xFE2
 13153                           fsr1l	equ	0xFE1
 13154                           bsr	equ	0xFE0
 13155                           indf2	equ	0xFDF
 13156                           postinc2	equ	0xFDE
 13157                           postdec2	equ	0xFDD
 13158                           fsr2h	equ	0xFDA
 13159                           fsr2l	equ	0xFD9
 13160                           status	equ	0xFD8
 13161                           
 13162 ;; *************** function ___lwdiv *****************
 13163 ;; Defined at:
 13164 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 13165 ;; Parameters:    Size  Location     Type
 13166 ;;  dividend        2    0[BANK0 ] unsigned int 
 13167 ;;  divisor         2    2[BANK0 ] unsigned int 
 13168 ;; Auto vars:     Size  Location     Type
 13169 ;;  quotient        2    5[BANK0 ] unsigned int 
 13170 ;;  counter         1    4[BANK0 ] unsigned char 
 13171 ;; Return value:  Size  Location     Type
 13172 ;;                  2    0[BANK0 ] unsigned int 
 13173 ;; Registers used:
 13174 ;;		wreg, status,2, status,0
 13175 ;; Tracked objects:
 13176 ;;		On entry : 0/0
 13177 ;;		On exit  : 0/0
 13178 ;;		Unchanged: 0/0
 13179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13180 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13181 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13183 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13184 ;;Total ram usage:        7 bytes
 13185 ;; Hardware stack levels used:    1
 13186 ;; This function calls:
 13187 ;;		Nothing
 13188 ;; This function is called by:
 13189 ;;		_ISR_Alta
 13190 ;; This function uses a non-reentrant model
 13191 ;;
 13192                           
 13193                           	psect	text29
 13194  004BB6                     __ptext29:
 13195                           	opt stack 0
 13196  004BB6                     ___lwdiv:
 13197                           	opt stack 21
 13198                           
 13199                           ;incstack = 0
 13200  004BB6  0E00               	movlw	0
 13201  004BB8  0100               	movlb	0	; () banked
 13202  004BBA  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 13203  004BBC  0E00               	movlw	0
 13204  004BBE  6F65               	movwf	___lwdiv@quotient& (0+255),b
 13205                           
 13206                           ; BSR set to: 0
 13207  004BC0  0100               	movlb	0	; () banked
 13208  004BC2  5162               	movf	___lwdiv@divisor& (0+255),w,b
 13209  004BC4  0100               	movlb	0	; () banked
 13210  004BC6  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 13211  004BC8  B4D8               	btfsc	status,2,c
 13212  004BCA  D02C               	goto	i2l1192
 13213                           
 13214                           ; BSR set to: 0
 13215  004BCC  0E01               	movlw	1
 13216  004BCE  0100               	movlb	0	; () banked
 13217  004BD0  6F64               	movwf	___lwdiv@counter& (0+255),b
 13218  004BD2  D006               	goto	i2l6215
 13219  004BD4                     i2l6213:
 13220                           
 13221                           ; BSR set to: 0
 13222  004BD4  0100               	movlb	0	; () banked
 13223  004BD6  90D8               	bcf	status,0,c
 13224  004BD8  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 13225  004BDA  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 13226  004BDC  0100               	movlb	0	; () banked
 13227  004BDE  2B64               	incf	___lwdiv@counter& (0+255),f,b
 13228  004BE0                     i2l6215:
 13229                           
 13230                           ; BSR set to: 0
 13231  004BE0  0100               	movlb	0	; () banked
 13232  004BE2  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 13233  004BE4  D7F7               	goto	i2l6213
 13234  004BE6                     i2l6217:
 13235                           
 13236                           ; BSR set to: 0
 13237  004BE6  0100               	movlb	0	; () banked
 13238  004BE8  90D8               	bcf	status,0,c
 13239  004BEA  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 13240  004BEC  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 13241                           
 13242                           ; BSR set to: 0
 13243  004BEE  0100               	movlb	0	; () banked
 13244  004BF0  5162               	movf	___lwdiv@divisor& (0+255),w,b
 13245  004BF2  0100               	movlb	0	; () banked
 13246  004BF4  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 13247  004BF6  0100               	movlb	0	; () banked
 13248  004BF8  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 13249  004BFA  0100               	movlb	0	; () banked
 13250  004BFC  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 13251  004BFE  A0D8               	btfss	status,0,c
 13252  004C00  D00A               	goto	i2l6225
 13253                           
 13254                           ; BSR set to: 0
 13255  004C02  0100               	movlb	0	; () banked
 13256  004C04  5162               	movf	___lwdiv@divisor& (0+255),w,b
 13257  004C06  0100               	movlb	0	; () banked
 13258  004C08  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 13259  004C0A  0100               	movlb	0	; () banked
 13260  004C0C  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 13261  004C0E  0100               	movlb	0	; () banked
 13262  004C10  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 13263                           
 13264                           ; BSR set to: 0
 13265  004C12  0100               	movlb	0	; () banked
 13266  004C14  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 13267  004C16                     i2l6225:
 13268                           
 13269                           ; BSR set to: 0
 13270  004C16  0100               	movlb	0	; () banked
 13271  004C18  90D8               	bcf	status,0,c
 13272  004C1A  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 13273  004C1C  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 13274                           
 13275                           ; BSR set to: 0
 13276  004C1E  0100               	movlb	0	; () banked
 13277  004C20  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 13278  004C22  D7E1               	goto	i2l6217
 13279  004C24                     i2l1192:
 13280                           
 13281                           ; BSR set to: 0
 13282  004C24  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 13283  004C28  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 13284                           
 13285                           ; BSR set to: 0
 13286  004C2C  0012               	return		;funcret
 13287  004C2E                     __end_of___lwdiv:
 13288                           	opt stack 0
 13289                           pclatu	equ	0xFFB
 13290                           pclath	equ	0xFFA
 13291                           tblptru	equ	0xFF8
 13292                           tblptrh	equ	0xFF7
 13293                           tblptrl	equ	0xFF6
 13294                           tablat	equ	0xFF5
 13295                           prodh	equ	0xFF4
 13296                           prodl	equ	0xFF3
 13297                           intcon	equ	0xFF2
 13298                           intcon2	equ	0xFF1
 13299                           postinc0	equ	0xFEE
 13300                           fsr0h	equ	0xFEA
 13301                           fsr0l	equ	0xFE9
 13302                           wreg	equ	0xFE8
 13303                           indf1	equ	0xFE7
 13304                           fsr1h	equ	0xFE2
 13305                           fsr1l	equ	0xFE1
 13306                           bsr	equ	0xFE0
 13307                           indf2	equ	0xFDF
 13308                           postinc2	equ	0xFDE
 13309                           postdec2	equ	0xFDD
 13310                           fsr2h	equ	0xFDA
 13311                           fsr2l	equ	0xFD9
 13312                           status	equ	0xFD8
 13313                           pclatu	equ	0xFFB
 13314                           pclath	equ	0xFFA
 13315                           tblptru	equ	0xFF8
 13316                           tblptrh	equ	0xFF7
 13317                           tblptrl	equ	0xFF6
 13318                           tablat	equ	0xFF5
 13319                           prodh	equ	0xFF4
 13320                           prodl	equ	0xFF3
 13321                           intcon	equ	0xFF2
 13322                           intcon2	equ	0xFF1
 13323                           postinc0	equ	0xFEE
 13324                           fsr0h	equ	0xFEA
 13325                           fsr0l	equ	0xFE9
 13326                           wreg	equ	0xFE8
 13327                           indf1	equ	0xFE7
 13328                           fsr1h	equ	0xFE2
 13329                           fsr1l	equ	0xFE1
 13330                           bsr	equ	0xFE0
 13331                           indf2	equ	0xFDF
 13332                           postinc2	equ	0xFDE
 13333                           postdec2	equ	0xFDD
 13334                           fsr2h	equ	0xFDA
 13335                           fsr2l	equ	0xFD9
 13336                           status	equ	0xFD8
 13337                           
 13338                           	psect	param0
 13339  0000                     pclatu	equ	0xFFB
 13340                           pclath	equ	0xFFA
 13341                           tblptru	equ	0xFF8
 13342                           tblptrh	equ	0xFF7
 13343                           tblptrl	equ	0xFF6
 13344                           tablat	equ	0xFF5
 13345                           prodh	equ	0xFF4
 13346                           prodl	equ	0xFF3
 13347                           intcon	equ	0xFF2
 13348                           intcon2	equ	0xFF1
 13349                           postinc0	equ	0xFEE
 13350                           fsr0h	equ	0xFEA
 13351                           fsr0l	equ	0xFE9
 13352                           wreg	equ	0xFE8
 13353                           indf1	equ	0xFE7
 13354                           fsr1h	equ	0xFE2
 13355                           fsr1l	equ	0xFE1
 13356                           bsr	equ	0xFE0
 13357                           indf2	equ	0xFDF
 13358                           postinc2	equ	0xFDE
 13359                           postdec2	equ	0xFDD
 13360                           fsr2h	equ	0xFDA
 13361                           fsr2l	equ	0xFD9
 13362                           status	equ	0xFD8
 13363                           
 13364                           	psect	temp
 13365  000048                     btemp:
 13366                           	opt stack 0
 13367  000048                     	ds	1
 13368  0000                     int$flags	set	btemp
 13369                           pclatu	equ	0xFFB
 13370                           pclath	equ	0xFFA
 13371                           tblptru	equ	0xFF8
 13372                           tblptrh	equ	0xFF7
 13373                           tblptrl	equ	0xFF6
 13374                           tablat	equ	0xFF5
 13375                           prodh	equ	0xFF4
 13376                           prodl	equ	0xFF3
 13377                           intcon	equ	0xFF2
 13378                           intcon2	equ	0xFF1
 13379                           postinc0	equ	0xFEE
 13380                           fsr0h	equ	0xFEA
 13381                           fsr0l	equ	0xFE9
 13382                           wreg	equ	0xFE8
 13383                           indf1	equ	0xFE7
 13384                           fsr1h	equ	0xFE2
 13385                           fsr1l	equ	0xFE1
 13386                           bsr	equ	0xFE0
 13387                           indf2	equ	0xFDF
 13388                           postinc2	equ	0xFDE
 13389                           postdec2	equ	0xFDD
 13390                           fsr2h	equ	0xFDA
 13391                           fsr2l	equ	0xFD9
 13392                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    44
    Data        3
    BSS         139
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      71
    BANK0           160    117     137
    BANK1           256     49     136
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_correction(BANK1[8]), data_speed(BANK1[8]), data_steering(BANK1[8]), data_brake(BANK1[8]), 
		 -> data(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    None.

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _asin->_atan
    _sqrt->___fladd
    _atan->_eval_poly
    _fabs->___flneg
    ___flneg->___flmul
    _eval_poly->___fladd
    ___flmul->___fldiv
    ___fladd->___flneg
    ___flge->_fabs
    _abs->___fltol
    ___xxtofl->_abs
    ___fltol->___fladd
    _can_send->_CANsendMessage
    _configurazione->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask

Critical Paths under _ISR_Alta in BANK0

    _ISR_Alta->___lwdiv

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_park_search
    _park_search->_parallelo
    _parallelo->_asin
    _asin->_sqrt

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Alta in BANK3

    None.

Critical Paths under _ISR_Bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Alta in BANK4

    None.

Critical Paths under _ISR_Bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Alta in BANK5

    None.

Critical Paths under _ISR_Bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Alta in BANK6

    None.

Critical Paths under _ISR_Bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Alta in BANK7

    None.

Critical Paths under _ISR_Bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Alta in BANK8

    None.

Critical Paths under _ISR_Bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Alta in BANK9

    None.

Critical Paths under _ISR_Bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Alta in BANK10

    None.

Critical Paths under _ISR_Bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Alta in BANK11

    None.

Critical Paths under _ISR_Bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Alta in BANK12

    None.

Critical Paths under _ISR_Bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   70623
                    _can_interpreter
                     _configurazione
                       _park_routine
                        _park_search
 ---------------------------------------------------------------------------------
 (1) _park_search                                          2     2      0   60734
                                             47 BANK1      2     2      0
                       _CANisTxReady
                     _CANsendMessage
                           ___xxtofl
                                _abs
                          _parallelo
 ---------------------------------------------------------------------------------
 (2) _parallelo                                            2     2      0   55891
                                             45 BANK1      2     2      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                                _abs
                               _asin
                           _can_send
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _asin                                                36    32      4   37298
                                             21 BANK1     24    20      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                               _atan
                               _fabs
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _sqrt                                                29    25      4    1467
                                             97 BANK0      8     4      4
                                              0 BANK1     21    21      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (4) _atan                                                21    17      4   21923
                                            113 BANK0      4     0      4
                                              0 BANK1     17    17      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                          _eval_poly
                               _fabs
 ---------------------------------------------------------------------------------
 (4) _fabs                                                 4     0      4    1082
                                             77 BANK0      4     0      4
                            ___flneg
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     758
                                             73 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           16     8      8    8195
                                             97 BANK0     16     8      8
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3231
                                             48 BANK0     25    17      8
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    4248
                                             77 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     882
                                             81 BANK0     12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2807
                                             23 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     258
                                            107 BANK0      4     2      2
                            ___fladd (ARG)
                            ___flneg (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     630
                                            111 BANK0      4     0      4
                                              0 BANK1     10    10      0
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     357
                                             97 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (1) _park_routine                                         0     0      0    3955
                           _can_send
 ---------------------------------------------------------------------------------
 (3) _can_send                                             0     0      0    3955
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (4) _CANsendMessage                                      16     8      8    3931
                                             23 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (4) _CANisTxReady                                         1     1      0      24
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _configurazione                                       0     0      0    5934
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             37 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      4     4      0       0
                                             23 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_Bassa                                           23    23      0    1251
                                             12 COMRAM    23    23      0
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (8) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_Alta                                            16    16      0     395
                                              7 BANK0     16    16      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (10) ___lwdiv                                             7     3      4     395
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _can_interpreter
   _configurazione
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _park_routine
     _can_send
       _CANisTxReady
       _CANsendMessage
   _park_search
     _CANisTxReady
     _CANsendMessage
     ___xxtofl
       _abs (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
     _abs
       ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___flneg (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___flmul
         ___fldiv (ARG)
       ___flneg
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___xxtofl
         _abs (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
       _abs
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___flmul
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)

 _ISR_Bassa (ROOT)
   _CANreceiveMessage

 _ISR_Alta (ROOT)
   ___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     31      88       7       53.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     75      89       5       85.6%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     23      47       1       75.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     158      20        0.0%
DATA                 0      0     158       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Apr 24 11:50:41 2016

                ___fldiv@aexp 008F                  ___fldiv@bexp 008E                             _x 00D9  
                           _z 00DD          __end_of_CANSetFilter 1834                  ___fldiv@sign 0083  
                          bsr 000FE0                   __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                 __CFG_OSC$HS 000000                    _MUX_select 0100                           l501 168C  
                         l502 1690                           l430 37BE                           l503 169C  
                         l431 37C2                           l520 17E8                           l512 17A8  
                         l504 16A0                           l440 38CA                           l432 37CE  
                         l352 43B8                           l360 1946                           l513 17AC  
                         l505 16AC                           l441 38D6                           l433 37D2  
                         l353 43C2                           l361 18D6                           l514 17B8  
                         l506 16B0                           l442 38DA                           l434 37DE  
                         l426 379E                           l362 18E0                           l515 17BC  
                         l507 16BC                           l443 38E6                           l427 37A2  
                         l363 18EA                           l516 17C8                           l508 16C0  
                         l460 1232                           l444 38EA                           l428 37AE  
                         l372 1D3C                           l364 18F4                           l517 17CC  
                         l509 16CC                           l461 123E                           l445 38F6  
                         l437 38B6                           l429 37B2                           l373 1ACE  
                         l357 1AB8                           l518 17D8                           l470 1348  
                         l462 1242                           l438 38BA                           l550 4E6C  
                         l390 1DDE                           l382 1C88                           l374 1AD2  
                         l358 184A                           l519 17DC                           l471 134C  
                         l463 124E                           l439 38C6                           l391 1DE8  
                         l383 1C8C                           l375 1BCA                           l367 1A04  
                         l359 184E                           l480 1458                           l472 1358  
                         l464 1252                           l392 1DF2                           l384 1C98  
                         l376 1B5A                           l368 1A08                           l481 1464  
                         l473 135C                           l465 125E                           l457 121E  
                         l393 1DFC                           l377 1B64                           l369 1A14  
                         l490 1570                           l482 1468                           l474 1368  
                         l458 1222                           l378 1B6E                           l491 1574  
                         l483 1474                           l475 136C                           l459 122E  
                         l387 1D52                           l379 1B78                           l492 1580  
                         l484 1478                           l476 1378                           l468 1338  
                         l396 1F0C                           l388 1D56                           l493 1584  
                         l485 1484                           l469 133C                           l397 1F10  
                         l389 1E4E                           l494 1590                           l486 1488  
                         l398 1F1C                           l495 1594                           l487 1494  
                         l479 1454                           l496 15A0                           l497 15A4  
                         l498 15B0                           l686 47AE                           l791 4E44  
                         l699 47AA                           l992 4602                           l985 4DD8  
                __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000                           _abs 4E22  
                         _dir 0231                           _msg 0120                           prod 000FF3  
                         wreg 000FE8                  ___flmul@aexp 009D                  ___flmul@bexp 00A2  
             ?_configurazione 0001                  ___flmul@sign 009C                  ___flmul@temp 00A7  
                ___flmul@prod 00A3                  __CFG_LVP$OFF 000000                  ___fltol@exp1 00CA  
                __CFG_WDT$OFF 000000                          ?_abs 00CB                          l1230 26A0  
                        l1231 266C                          l1322 2CC4                          l1315 2A28  
                        l1332 2DD6                          l1324 2D32                          l1229 26AC  
                        l1246 2820                          l1255 28B4                          l4011 19F8  
                        l1371 4280                          l1372 4298                          l1364 4224  
                        l1357 4178                          l1285 3412                          l1294 344A  
                        l1296 34B8                          l1288 33BA                          l4017 1A18  
                        l4143 1E06                          l4331 4E9A                          l4163 1F00  
                        l4067 1B82                          l6011 31C4                          l6003 318E  
                        l4501 1018                          l4093 1C9C                          l5221 4E88  
                        l6101 41B8                          l4423 38FA                          l4087 1C7C  
                        l6111 4262                          l6103 41C8                          l4169 1F20  
                        l5217 4E74                          l6113 4272                          l6105 4206  
                        l6041 40F0                          l6025 3F28                          l4701 16D0  
                        l4605 13C2                          l4365 3712                          l4349 365C  
                        l6125 42EA                          l5501 2680                          l6045 4108  
                        l6029 3F9C                          l4519 10D2                          l4447 0DEC  
                        l4391 37E2                          l5503 2686                          l5423 250E  
                        l6055 39A0                          l4633 1498                          l4537 118C  
                        l4465 0EA4                          l5601 294A                          l5441 2558  
                        l5417 24EA                          l6153 3E52                          l4707 1716  
                        l4571 12A8                          l4483 0F5E                          l5603 294E  
                        l5531 271E                          l5507 2690                          l5451 2586  
                        l5435 2544                          l5427 2518                          l6067 3ACE  
                        l6171 4668                          l6163 4654                          l4565 1262  
                        l4397 3828                          l6093 4188                          l5525 270E  
                        l5517 26D0                          l5701 2CD8                          l6181 46B8  
                        l4735 17EC                          l4639 14DE                          l4831 4964  
                        l4815 48F6                          l5527 2714                          l5535 2730  
                        l5447 257C                          l5711 2D2C                          l6079 3BB0  
                        l6183 4714                          l6271 4CD4                          l4673 15FA  
                        l4841 4994                          l5609 2962                          l5553 2852  
                        l5545 2800                          l5721 2D82                          l5625 29B6  
                        l6193 475C                          l4667 15B4                          l4763 4A66  
                        l4843 49A4                          l4835 4978                          l6099 41B0  
                        l5563 2874                          l5571 288E                          l5459 25B0  
                        l5643 2A10                          l5627 29BC                          l5619 2992  
                        l4941 4412                          l4933 43B0                          l4749 49E0  
                        l4845 49AE                          l5725 2DA8                          l5653 2A50  
                        l5645 2A16                          l5637 29EC                          l5629 29CE  
                        l6189 4724                          l4599 137C                          l4935 43C6  
                        l3991 18FE                          l4759 4A2E                          l4767 4AA0  
                        l5831 340E                          l5807 3310                          l5911 45B0  
                        l5903 4510                          l5559 2868                          l5735 2DF6  
                        l5727 2DBC                          l6279 4CF0                          l4849 49CA  
                        l5825 33C6                          l5817 338E                          l5593 291C  
                        l5569 2888                          l5489 25EC                          l5737 2E00  
                        l5649 2A3C                          l4939 43CE                          l5843 345E  
                        l5763 3226                          l5907 455E                          l5579 28AE  
                        l5747 4E10                          l5853 34B2                          l5837 3434  
                        l5757 3202                          l5917 464E                          l5597 293E  
                        l5589 290A                          l5941 2E96                          l5871 356C  
                        l5863 3508                          l5783 3284                          l5767 3230  
                        l5695 2CAE                          l5927 2E38                          l5777 3260  
                        l5867 3536                          l5787 328E                          l5947 2EB6  
                        l5939 2E84                          l5877 357C                          l5869 354A  
                        l5879 3580                          l5799 32E2                          l5895 480E  
                        l5983 3038                          l5991 30AE                          l5967 2F28  
                        l5959 2EF8                          l5897 48B2                          l5985 3072  
                        l5977 2FAA                          l5979 2FB2                          _LATA 000F89  
                        _LATB 000F8A                          _LATC 000F8B                          u5120 391A  
                        u5040 3802                          u4500 1BA2                          u5205 0E80  
                        u5125 390E                          u5045 37F6                          u5310 104E  
                        u5230 0EDA                          u5150 0D68                          u4510 1BEE  
                        u4505 1B96                          u4370 191E                          u5315 1042  
                        u5235 0ECE                          u5155 0D5C                          u4515 1BE2  
                        u4380 196A                          u5325 10AE                          u5245 0F3A  
                        u5165 0DC8                          u4525 1C4E                          u5350 1108  
                        u5270 0F94                          u5190 0E20                          u4630 1E26  
                        u4375 1912                          u5600 14B8                          u5520 139C  
                        u5440 1282                          u4640 1E72                          u4385 195E  
                        u5355 10FC                          u5275 0F88                          u5195 0E14  
                        u4635 1E1A                          u4395 19CA                          u7300 2D96  
                        u7220 2C50                          u5605 14AC                          u5525 1390  
                        u5445 1276                          u5365 1168                          u5285 0FF4  
                        u4645 1E66                          u4910 35D8                          u4655 1ED2  
                        u7225 2C44                          u8130 4CDE                          u4915 35CC  
                        u8060 4770                          u8140 4CEC                          u4925 3638  
                        u4950 368E                          u5840 180C                          u5760 16F0  
                        u5680 15D4                          u4955 3682                          u5940 4916  
                        u7540 351C                          u5845 1800                          u5765 16E4  
                        u5685 15C8                          u4965 36EE                          u6840 2636  
                        u5945 490A                          u6850 264E                          u6860 2650  
                        u7760 3F58                          u7770 3F5A                          u7951 3CE6  
                        u7961 3CF2                          u7980 3EC6                          u7990 4664  
         __size_of_CANSetMask 039E                          abs@a 00CB                          _fabs 4DAC  
                        _data 012F                          _atan 3EDC                          _asin 3942  
                        _main 4C9A                          _asus 0043                          fsr0h 000FEA  
                        fsr1h 000FE2                          fsr0l 000FE9                          fsr2h 000FDA  
                        indf1 000FE7                          fsr1l 000FE1                          indf2 000FDF  
                        fsr2l 000FD9                          btemp 0048                          _sqrt 2E1A  
                        pclat 000FFA                          prodh 000FF4                          prodl 000FF3  
                        start 0238                 __CFG_IESO$OFF 000000               ___fldiv@new_exp 0088  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000              _CANOperationMode 4E92  
                       ??_abs 00CD    __size_of_CANreceiveMessage 050C                         ?_fabs 00AD  
               ___fltol@sign1 00C9                         ?_atan 00D1                         ?_asin 016C  
             __end_of___fladd 2974                         ?_main 0001               __end_of___fldiv 35A4  
             __end_of___flneg 4E22               __end_of___flmul 2E1A               __end_of___fltol 49DC  
                       ?_sqrt 00C1                         _T0CON 000FD5                         _T3CON 000FB1  
          __size_of_ISR_Bassa 0220               __end_of___lwdiv 4C2E                         i1l404 2258  
                       i1l662 0104                         i1l671 01BE                         i1l672 01F0  
                       i1l665 0182                         i1l657 0186                         i2l652 4B18  
                       _TMR0H 000FD7                         _TMR0L 000FD6                         _TMR3H 000FB3  
                       _TMR3L 000FB2                         _PORTA 000F80                         _TRISA 000F92  
                       _TRISB 000F93                         _TRISC 000F94                 __CFG_PWRT$OFF 000000  
            __end_of_ISR_Alta 4BB6                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000            CANInitialize@flags 0089  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
                       fabs@d 00AD                         _errno 011E                         atan@f 00D1  
                       atan@x 015B                         atan@y 0157                         asin@x 016C  
                       asin@y 017C                __pbitbssCOMRAM 0230                         tablat 000FF5  
        __end_of_CANisTxReady 4E72                         sqrt@a 00C1                         sqrt@i 0158  
                       sqrt@p 015D                         status 000FD8                  ?_park_search 0001  
             __initialization 4CFE                  __end_of_fabs 4DEA                  __end_of_atan 412E  
                __end_of_asin 3C54                  __end_of_main 4CFE                  __end_of_sqrt 31E4  
                      ??_fabs 00B1                        ??_atan 00D5                        ??_asin 00D5  
                      ??_main 00D5                        ??_sqrt 00C5                 __activetblptr 000003  
           _CANisTxReady$2808 0077                        _ADCON1 000FC1                        _CANCON 000F6F  
             __CFG_BBSIZ$1024 000000             _spazio_parcheggio 00E7                        i1l5101 245E  
                      i1l5111 24C8                        i1l5031 21A8                        i1l5023 2138  
                      i1l5105 247A                        i1l5043 2202                        i1l5035 21C6  
                      i1l5109 2496                        i1l5047 2220                        i1l5039 21E4  
                      i1l5303 0144                        i1l5049 2252                        i1l5321 01B0  
                      i1l5093 2426                        i1l5085 23B8                        i1l5309 016C  
                      i2l1192 4C24                        i1l5097 2442                        i1l5291 010C  
                      i1l5285 00E0                        i1l5269 0066                        i1l5299 013C  
                      i2l6213 4BD4                        i2l6215 4BE0                        i2l6225 4C16  
                      i2l6217 4BE6                        i2l6245 4B78                        _RXB0D0 000F66  
                      _RXB0D1 000F67                        _RXB0D2 000F68                        _RXB0D3 000F69  
                      _RXB0D4 000F6A                        _RXB1D0 000F56                        _RXB0D5 000F6B  
                      _RXB1D1 000F57                        _RXB0D6 000F6C                        _RXB1D2 000F58  
                      _RXB0D7 000F6D                        _RXB1D3 000F59                        _RXB1D4 000F5A  
                      _RXB1D5 000F5B                        _RXB1D6 000F5C                        _RXB1D7 000F5D  
                      _TXB0D0 000F46                        _TXB0D1 000F47                        _TXB0D2 000F48  
                      _TXB0D3 000F49                        _TXB1D0 000F36                        _TXB0D4 000F4A  
                      _TXB1D1 000F37                        _TXB0D5 000F4B                        _TXB1D2 000F38  
                      _TXB0D6 000F4C                        _TXB1D3 000F39                        _TXB0D7 000F4D  
                      _TXB2D0 000F26                        _TXB1D4 000F3A                        _TXB2D1 000F27  
                      _TXB1D5 000F3B                        _TXB2D2 000F28                        _TXB1D6 000F3C  
                      _TXB2D3 000F29                        _TXB1D7 000F3D                        _TXB2D4 000F2A  
                      _TXB2D5 000F2B                        _TXB2D6 000F2C                        _TXB2D7 000F2D  
          CANsendMessage@data 007B              __end_of_can_send 4AD6            CANsendMessage@tamp 0083  
            __end_of___xxtofl 42FC             __end_of_ISR_Bassa 0238         __size_of_CANSetFilter 0B06  
              __CFG_XINST$OFF 000000                        ___flge 44C2               _data_correction 013F  
                   ??___fladd 00B5                     ??___fldiv 007F                     ??___flneg 00AD  
              __CFG_STVREN$ON 000000                     ??___flmul 0098                     ??___fltol 00C5  
                   ??___lwdiv 0064                  ??_CANSetMask 007C                        _gianni 0044  
                      clear_0 4D04                        clear_1 4D10                        clear_2 4D1E  
             __CFG_BOREN$BOHW 000000                  __pdataCOMRAM 0047                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                _CANSetFilter 0D2E                    ___flge@ff1 00B1                    ___flge@ff2 00B5  
                ___xxtofl@arg 015D                  ___xxtofl@exp 015C                  ___xxtofl@val 00CF  
                  __accesstop 0060       __end_of__initialization 4D4E            __end_of_CANSetMask 3942  
             __CFG_PBADEN$OFF 000000                    ___flneg@f1 00A9                 ?_park_routine 0001  
                eval_poly@res 00CD                 ___rparam_used 000000                    ___fltol@f1 00C1  
              __pcstackCOMRAM 0001                     ?_ISR_Alta 0001                  __pidataBANK0 4EA8  
            ??_configurazione 0091         CANSetFilter@numBuffer 0080                  _actual_speed 00E1  
       __size_of_CANisTxReady 0024      __end_of_CANOperationMode 4EA8                    __pbssBANK0 00D5  
                  __pbssBANK1 0100               _sensor_distance 0024            __size_of_eval_poly 0118  
                  _data_brake 0137                ??_park_routine 0087                 ISR_Bassa@gigi 0022  
     __size_of_CANsendMessage 078C                    _data_speed 0147                    _activation 0230  
    __size_of_can_interpreter 0054            __size_of_parallelo 0288          __size_of_park_search 0166  
           _old_alignment_gap 0118                    ??_ISR_Alta 0067                       ?___flge 00B1  
                     _CANSTAT 000F6E                  _CANisTxReady 4E4E                       _BRGCON1 000F70  
                     _BRGCON2 000F71                       _BRGCON3 000F72                     ?_can_send 0001  
                   ?___xxtofl 00CF        __size_of_CANInitialize 01C6                       _RXB0DLC 000F65  
                     _RXB1DLC 000F55                       _RXB0CON 000F60                       _RXB1CON 000F50  
                     _TXB0DLC 000F45                       _TXB1DLC 000F35                       _TXB2DLC 000F25  
         CANsendMessage@flags 007E                       __Hparam 0000                    _left_speed 003A  
                     __Lparam 0000               __size_of___flge 0190                       ___fladd 24CC  
                     ___fldiv 31E4                       ___flneg 4DEA                       ___flmul 2974  
                     ___fltol 48D0                       ___lwdiv 4BB6                  __psmallconst 0D00  
        CANInitialize@propSeg 008E                       __pcinit 4CFE             __end_of_eval_poly 48D0  
                     __ramtop 0D00                       __ptext0 4C9A                       __ptext1 4652  
                     __ptext2 3C54                       __ptext3 3942                       __ptext4 2E1A  
                     __ptext5 3EDC                       __ptext6 4DAC                       __ptext7 4DEA  
                     __ptext8 47B8                       __ptext9 2974                    ??_can_send 0087  
                __size_of_abs 002C               atan@val_squared 0160                    ??___xxtofl 0157  
                     atan@val 0164             __end_of_parallelo 3EDC                       asin@sgn 0170  
      CANreceiveMessage@error 000B               _start_operation 0236                __pintcode_body 4AD6  
        end_of_initialization 4D4E                       int_func 4AD6                 _CANInitialize 42FC  
                   _ISR_Bassa 0018                       postdec2 000FDD                       postinc0 000FEE  
                     postinc2 000FDE                       sqrt@grs 015E                       sqrt@exp 0162  
           ??_can_interpreter 0077       _steering_correction_dir 0237                     _PORTBbits 000F81  
              CANSetMask@mask 0077                CANSetMask@tamp 0081                  _distance_set 0110  
              CANSetMask@type 007B          __end_of_park_routine 4E92                   ___fladd@grs 00C0  
               ___xxtofl@sign 015B                     _TRISBbits 000F93                   ___fldiv@grs 008A  
                 ___fldiv@rem 0084                     _MUX_index 0042                    _pulse_time 003C  
     _clock_counter_reference 0034                   ___flmul@grs 009E                _CANsendMessage 1834  
            CANInitialize@BRP 0088              CANInitialize@SJW 0087                ?_CANInitialize 0085  
                  ?_ISR_Bassa 0001                __end_of___flge 4652             __size_of_ISR_Alta 4BAE  
               __pidataCOMRAM 4EAA           start_initialization 4CFE                    eval_poly@d 00C5  
                  eval_poly@n 00C7                    eval_poly@x 00C1                   __end_of_abs 4E4E  
         CANSetMask@numBuffer 0080                 _data_speed_rx 0108        __end_of_CANsendMessage 1FC0  
           ?_CANOperationMode 0001                 _data_steering 014F            ??_CANOperationMode 0077  
           _distance_received 0233    CANInitialize@FilterConfig1 008F    CANInitialize@FilterConfig2 0090  
         _steering_correction 0045                      ??___flge 00B9                   __pdataBANK0 00E7  
            __CFG_LPT1OSC$OFF 000000                     ___fladd@a 00B1                     ___fladd@b 00AD  
      CANInitialize@phaseSeg1 0085        CANInitialize@phaseSeg2 0086                     ___fldiv@a 007B  
                   ___fldiv@b 0077                     ___flmul@a 0094                     ___flmul@b 0090  
                 __pbssCOMRAM 0024                 __pcstackBANK0 0060                 __pcstackBANK1 0157  
                 _BRGCON2bits 000F71                   _BRGCON3bits 000F72             __size_of_can_send 00FA  
           __size_of___xxtofl 01CE               ?_CANsendMessage 0077               ??_CANInitialize 008A  
                   _asin$3620 0178                     _asin$3621 0174                     _asin$3619 0180  
               ??_park_search 0186                 _alignment_gap 00D5            CANSetFilter@filter 0077  
            ___lwdiv@dividend 0060                    ISR_Bassa@i 0023                   ??_ISR_Bassa 000D  
                   __pintcode 0008                      ?___fladd 00AD                      ?___fldiv 0077  
                    ?___flneg 00A9                      ?___flmul 0090                      ?___fltol 00C1  
       __size_of_park_routine 0020                      ?___lwdiv 0060                   __pintcodelo 0018  
                 __smallconst 0D00                   _COMSTATbits 000F74                     _eval_poly 47B8  
            ___lwdiv@quotient 0065       __size_of_configurazione 006C                     _parallelo 3C54  
       CANreceiveMessage@tamp 000C                      _LATBbits 000F8A               _can_interpreter 4D58  
                   atan@recip 015F                  _park_routine 4E72  _delay_quartz_frequency_value 0047  
                    _IPR3bits 000FA5                      _PIE3bits 000FA3                      i1u622_20 2078  
                    i1u622_26 207A                      i1u623_20 20A6                      i1u631_25 222C  
                    i1u623_26 20A8                      i1u633_20 2300                      i1u625_25 20BC  
                    i1u633_26 2302                      i1u634_20 232A                      i1u642_25 24A2  
                    i1u634_26 232C                      i1u636_25 233E                      i1u815_27 01E0  
                    _PIR3bits 000FA4                      _RXB0EIDH 000F63                      _RXB0EIDL 000F64  
                    _RXB1EIDH 000F53                      _RXB1EIDL 000F54                      _ISR_Alta 0008  
                   _set_speed 00E5                      _RCONbits 000FD0              __CFG_WDTPS$32768 000000  
                    _RXB0SIDH 000F61                      _RXB0SIDL 000F62                      _RXF0EIDH 000F02  
                    _RXB1SIDH 000F51                      _RXF0EIDL 000F03                      _RXB1SIDL 000F52  
                    _RXF1EIDH 000F06                      _RXF1EIDL 000F07                      _RXF2EIDH 000F0A  
                    _RXF2EIDL 000F0B                      _RXF3EIDH 000F0E                      _RXF3EIDL 000F0F  
                    _RXF4EIDH 000F12                      _RXF4EIDL 000F13                      _RXF5EIDH 000F16  
                    _RXF5EIDL 000F17                      _RXF0SIDH 000F00                      _RXF0SIDL 000F01  
         __end_of_park_search 47B8                      _TXB0EIDH 000F43                      _RXF1SIDH 000F04  
                    _TXB0EIDL 000F44                      _RXF1SIDL 000F05                      _TXB1EIDH 000F33  
                    _RXF2SIDH 000F08                      _TXB1EIDL 000F34                      _RXF2SIDL 000F09  
                    _TXB2EIDH 000F23                      _RXF3SIDH 000F0C                      _TXB2EIDL 000F24  
                    _RXF3SIDL 000F0D                      _RXF4SIDH 000F10                      _RXF4SIDL 000F11  
                    _RXF5SIDH 000F14                      _RXF5SIDL 000F15                      _RXM0EIDH 000F1A  
                    _RXM0EIDL 000F1B                      _TXB0SIDH 000F41                      _RXM1EIDH 000F1E  
                    _TXB0SIDL 000F42                      _RXM1EIDL 000F1F                      _TXB1SIDH 000F31  
                    _TXB1SIDL 000F32                      _TXB2SIDH 000F21                      _TXB2SIDL 000F22  
                    _RXM0SIDH 000F18                      _RXM0SIDL 000F19                      _RXM1SIDH 000F1C  
                    _RXM1SIDL 000F1D                   _distance_dx 0036                   _distance_sx 0038  
                    _RXERRCNT 000F75                      _TXERRCNT 000F76                    ?_eval_poly 00C1  
         __end_ofatan@coeff_a 0D19           __end_ofatan@coeff_b 0D2D                 ?_CANSetFilter 0077  
                 _INTCON2bits 000FF1                    _CANCONbits 000F6F                    ?_parallelo 0001  
            _distance_average 00E3                      __Hparam0 0000                      __Lparam0 0000  
                _RXB0SIDLbits 000F62                  _RXB1SIDLbits 000F52              __size_of___fladd 04A8  
                  _CANSetMask 35A4              __size_of___fldiv 03C0              __size_of___flneg 0038  
            __size_of___flmul 04A6              __size_of___fltol 010C              __size_of___lwdiv 0078  
                    _can_send 49DC                      ___xxtofl 412E                  _RXF0SIDLbits 000F01  
             ___lwdiv@divisor 0062                  _RXF1SIDLbits 000F05               ___lwdiv@counter 0064  
              ??_CANSetFilter 007C                      __ptext10 24CC                      __ptext11 44C2  
                    __ptext20 4C2E                      __ptext12 31E4                      __ptext21 42FC  
                    __ptext13 4E22                      __ptext22 35A4                      __ptext14 412E  
                    __ptext23 0D2E                      __ptext15 48D0                      __ptext24 4E92  
                    __ptext16 4E72                      __ptext25 4D58                      __ptext17 49DC  
                    __ptext18 1834                      __ptext27 1FC0                      __ptext19 4E4E  
                    __ptext29 4BB6                  _RXF2SIDLbits 000F09       __end_of_can_interpreter 4DAC  
                _RXF3SIDLbits 000F0D                      _distance 011C                  _RXF4SIDLbits 000F11  
                _RXF5SIDLbits 000F15      CANsendMessage@dataLength 007D                 __size_of_fabs 003E  
               __size_of_atan 0252                 __size_of_asin 0312                 __size_of_main 0064  
               __size_of_sqrt 03CA                   _park_search 4652          CANreceiveMessage@msg 0001  
                _TXB0SIDLbits 000F42                  _TXB1SIDLbits 000F32                  _TXB2SIDLbits 000F22  
                    int$flags 0048     __size_of_CANOperationMode 0016                 ?_CANisTxReady 0001  
                 atan@coeff_a 0D01                   atan@coeff_b 0D19                   _RXB0DLCbits 000F65  
                 _RXB1DLCbits 000F55                  _RXM0SIDLbits 000F19                   _RXB0CONbits 000F60  
                 _RXB1CONbits 000F50             _CANreceiveMessage 1FC0                  _RXM1SIDLbits 000F1D  
                  _INTCONbits 000FF2                   ??_eval_poly 00C9              ??_CANsendMessage 007F  
          ?_CANreceiveMessage 0001                  _request_sent 0235                     sqrt@tfrac 0159  
              _configurazione 4C2E      CANsendMessage@identifier 0077                   ??_parallelo 0184  
                    intlevel1 0000                      intlevel2 0000              CANSetFilter@tamp 0081  
            CANSetFilter@type 007B           ??_CANreceiveMessage 0003                   _TXB0DLCbits 000F45  
                 _right_speed 003E                   _TXB1DLCbits 000F35                   _TXB0CONbits 000F40  
                 _TXB2DLCbits 000F25                   _TXB1CONbits 000F30                   _TXB2CONbits 000F20  
        CANOperationMode@mode 0077                   ?_CANSetMask 0077                ??_CANisTxReady 0077  
              _distance_error 0232     __end_of_CANreceiveMessage 24CC                      sqrt@frac 0168  
                    sqrt@sign 0157                      sqrt@root 0164                   _timerValue2 0040  
      __end_of_configurazione 4C9A                 ___fladd@signs 00BD                 _distance_wait 0234  
            ?_can_interpreter 0001                  ___fladd@aexp 00BE                  ___fladd@bexp 00BF  
       __end_of_CANInitialize 44C2  
