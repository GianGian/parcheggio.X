

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun May 22 18:01:21 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2685
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    61                           	psect	param0,global,class=BANK0,space=1,delta=1
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    63  0000                     
    64                           	psect	idataBANK0
    65  0066F8                     __pidataBANK0:
    66                           	opt stack 0
    67                           
    68                           ;initializer for _spazio_parcheggio
    69  0066F8  0064               	dw	100
    70                           
    71                           ;initializer for _delay_quartz_frequency_value
    72  0066FA  10                 	db	16
    73                           
    74                           	psect	idataBANK1
    75  0066F0                     __pidataBANK1:
    76                           	opt stack 0
    77                           
    78                           ;initializer for _larghezza
    79  0066F0  0000               	dw	0
    80  0066F2  4200               	dw	16896
    81                           
    82                           ;initializer for _raggio
    83  0066F4  0000               	dw	0
    84  0066F6  428C               	dw	17036
    85                           
    86                           	psect	smallconst
    87  000D00                     __psmallconst:
    88                           	opt stack 0
    89  000D00  00                 	db	0
    90  000D01                     atan@coeff_a:
    91                           	opt stack 0
    92  000D01  3C06               	dw	15366
    93  000D03  4204               	dw	16900
    94  000D05  9F7D               	dw	40829
    95  000D07  426A               	dw	17002
    96  000D09  905C               	dw	36956
    97  000D0B  4201               	dw	16897
    98  000D0D  4D60               	dw	19808
    99  000D0F  40BB               	dw	16571
   100  000D11  EC51               	dw	60497
   101  000D13  3E47               	dw	15943
   102  000D15  8DDE               	dw	36318
   103  000D17  BB1F               	dw	47903
   104  000D19                     __end_ofatan@coeff_a:
   105                           	opt stack 0
   106  000D19                     atan@coeff_b:
   107                           	opt stack 0
   108  000D19  3C06               	dw	15366
   109  000D1B  4204               	dw	16900
   110  000D1D  59C0               	dw	22976
   111  000D1F  428B               	dw	17035
   112  000D21  0474               	dw	1140
   113  000D23  4244               	dw	16964
   114  000D25  9BF9               	dw	39929
   115  000D27  414F               	dw	16719
   116  000D29  0000               	dw	0
   117  000D2B  3F80               	dw	16256
   118  000D2D                     __end_ofatan@coeff_b:
   119                           	opt stack 0
   120  000D2D                     sin@coeff_a:
   121                           	opt stack 0
   122  000D2D  F3EC               	dw	62444
   123  000D2F  484A               	dw	18506
   124  000D31  9535               	dw	38197
   125  000D33  C795               	dw	51093
   126  000D35  C117               	dw	49431
   127  000D37  45DC               	dw	17884
   128  000D39  DBFD               	dw	56317
   129  000D3B  C36D               	dw	50029
   130  000D3D  B372               	dw	45938
   131  000D3F  4033               	dw	16435
   132  000D41                     __end_ofsin@coeff_a:
   133                           	opt stack 0
   134  000D41                     sin@coeff_b:
   135                           	opt stack 0
   136  000D41  342B               	dw	13355
   137  000D43  4801               	dw	18433
   138  000D45  9D7F               	dw	40319
   139  000D47  45B0               	dw	17840
   140  000D49  FFE7               	dw	65511
   141  000D4B  42D9               	dw	17113
   142  000D4D  0000               	dw	0
   143  000D4F  3F80               	dw	16256
   144  000D51                     __end_ofsin@coeff_b:
   145                           	opt stack 0
   146  0000                     _RXB1CON	set	3920
   147  0000                     _RXB1CONbits	set	3920
   148  0000                     _RXB1D0	set	3926
   149  0000                     _RXB1D1	set	3927
   150  0000                     _RXB1D2	set	3928
   151  0000                     _RXB1D3	set	3929
   152  0000                     _RXB1D4	set	3930
   153  0000                     _RXB1D5	set	3931
   154  0000                     _RXB1D6	set	3932
   155  0000                     _RXB1D7	set	3933
   156  0000                     _RXB1DLC	set	3925
   157  0000                     _RXB1DLCbits	set	3925
   158  0000                     _RXB1EIDH	set	3923
   159  0000                     _RXB1EIDL	set	3924
   160  0000                     _RXB1SIDH	set	3921
   161  0000                     _RXB1SIDL	set	3922
   162  0000                     _RXB1SIDLbits	set	3922
   163  0000                     _RXF0EIDH	set	3842
   164  0000                     _RXF0EIDL	set	3843
   165  0000                     _RXF0SIDH	set	3840
   166  0000                     _RXF0SIDL	set	3841
   167  0000                     _RXF0SIDLbits	set	3841
   168  0000                     _RXF1EIDH	set	3846
   169  0000                     _RXF1EIDL	set	3847
   170  0000                     _RXF1SIDH	set	3844
   171  0000                     _RXF1SIDL	set	3845
   172  0000                     _RXF1SIDLbits	set	3845
   173  0000                     _RXF2EIDH	set	3850
   174  0000                     _RXF2EIDL	set	3851
   175  0000                     _RXF2SIDH	set	3848
   176  0000                     _RXF2SIDL	set	3849
   177  0000                     _RXF2SIDLbits	set	3849
   178  0000                     _RXF3EIDH	set	3854
   179  0000                     _RXF3EIDL	set	3855
   180  0000                     _RXF3SIDH	set	3852
   181  0000                     _RXF3SIDL	set	3853
   182  0000                     _RXF3SIDLbits	set	3853
   183  0000                     _RXF4EIDH	set	3858
   184  0000                     _RXF4EIDL	set	3859
   185  0000                     _RXF4SIDH	set	3856
   186  0000                     _RXF4SIDL	set	3857
   187  0000                     _RXF4SIDLbits	set	3857
   188  0000                     _RXF5EIDH	set	3862
   189  0000                     _RXF5EIDL	set	3863
   190  0000                     _RXF5SIDH	set	3860
   191  0000                     _RXF5SIDL	set	3861
   192  0000                     _RXF5SIDLbits	set	3861
   193  0000                     _RXM0EIDH	set	3866
   194  0000                     _RXM0EIDL	set	3867
   195  0000                     _RXM0SIDH	set	3864
   196  0000                     _RXM0SIDL	set	3865
   197  0000                     _RXM0SIDLbits	set	3865
   198  0000                     _RXM1EIDH	set	3870
   199  0000                     _RXM1EIDL	set	3871
   200  0000                     _RXM1SIDH	set	3868
   201  0000                     _RXM1SIDL	set	3869
   202  0000                     _RXM1SIDLbits	set	3869
   203  0000                     _TXB0CONbits	set	3904
   204  0000                     _TXB0D0	set	3910
   205  0000                     _TXB0D1	set	3911
   206  0000                     _TXB0D2	set	3912
   207  0000                     _TXB0D3	set	3913
   208  0000                     _TXB0D4	set	3914
   209  0000                     _TXB0D5	set	3915
   210  0000                     _TXB0D6	set	3916
   211  0000                     _TXB0D7	set	3917
   212  0000                     _TXB0DLC	set	3909
   213  0000                     _TXB0DLCbits	set	3909
   214  0000                     _TXB0EIDH	set	3907
   215  0000                     _TXB0EIDL	set	3908
   216  0000                     _TXB0SIDH	set	3905
   217  0000                     _TXB0SIDL	set	3906
   218  0000                     _TXB0SIDLbits	set	3906
   219  0000                     _TXB1CONbits	set	3888
   220  0000                     _TXB1D0	set	3894
   221  0000                     _TXB1D1	set	3895
   222  0000                     _TXB1D2	set	3896
   223  0000                     _TXB1D3	set	3897
   224  0000                     _TXB1D4	set	3898
   225  0000                     _TXB1D5	set	3899
   226  0000                     _TXB1D6	set	3900
   227  0000                     _TXB1D7	set	3901
   228  0000                     _TXB1DLC	set	3893
   229  0000                     _TXB1DLCbits	set	3893
   230  0000                     _TXB1EIDH	set	3891
   231  0000                     _TXB1EIDL	set	3892
   232  0000                     _TXB1SIDH	set	3889
   233  0000                     _TXB1SIDL	set	3890
   234  0000                     _TXB1SIDLbits	set	3890
   235  0000                     _TXB2CONbits	set	3872
   236  0000                     _TXB2D0	set	3878
   237  0000                     _TXB2D1	set	3879
   238  0000                     _TXB2D2	set	3880
   239  0000                     _TXB2D3	set	3881
   240  0000                     _TXB2D4	set	3882
   241  0000                     _TXB2D5	set	3883
   242  0000                     _TXB2D6	set	3884
   243  0000                     _TXB2D7	set	3885
   244  0000                     _TXB2DLC	set	3877
   245  0000                     _TXB2DLCbits	set	3877
   246  0000                     _TXB2EIDH	set	3875
   247  0000                     _TXB2EIDL	set	3876
   248  0000                     _TXB2SIDH	set	3873
   249  0000                     _TXB2SIDL	set	3874
   250  0000                     _TXB2SIDLbits	set	3874
   251  0000                     _ADCON1	set	4033
   252  0000                     _BRGCON1	set	3952
   253  0000                     _BRGCON2	set	3953
   254  0000                     _BRGCON2bits	set	3953
   255  0000                     _BRGCON3	set	3954
   256  0000                     _BRGCON3bits	set	3954
   257  0000                     _CANCON	set	3951
   258  0000                     _CANCONbits	set	3951
   259  0000                     _CANSTAT	set	3950
   260  0000                     _COMSTATbits	set	3956
   261  0000                     _INTCON2bits	set	4081
   262  0000                     _INTCONbits	set	4082
   263  0000                     _IPR3bits	set	4005
   264  0000                     _LATA	set	3977
   265  0000                     _LATB	set	3978
   266  0000                     _LATBbits	set	3978
   267  0000                     _LATC	set	3979
   268  0000                     _PIE3bits	set	4003
   269  0000                     _PIR3bits	set	4004
   270  0000                     _PORTA	set	3968
   271  0000                     _PORTBbits	set	3969
   272  0000                     _RCONbits	set	4048
   273  0000                     _RXB0CON	set	3936
   274  0000                     _RXB0CONbits	set	3936
   275  0000                     _RXB0D0	set	3942
   276  0000                     _RXB0D1	set	3943
   277  0000                     _RXB0D2	set	3944
   278  0000                     _RXB0D3	set	3945
   279  0000                     _RXB0D4	set	3946
   280  0000                     _RXB0D5	set	3947
   281  0000                     _RXB0D6	set	3948
   282  0000                     _RXB0D7	set	3949
   283  0000                     _RXB0DLC	set	3941
   284  0000                     _RXB0DLCbits	set	3941
   285  0000                     _RXB0EIDH	set	3939
   286  0000                     _RXB0EIDL	set	3940
   287  0000                     _RXB0SIDH	set	3937
   288  0000                     _RXB0SIDL	set	3938
   289  0000                     _RXB0SIDLbits	set	3938
   290  0000                     _RXERRCNT	set	3957
   291  0000                     _T0CON	set	4053
   292  0000                     _T0CONbits	set	4053
   293  0000                     _T3CON	set	4017
   294  0000                     _TMR0H	set	4055
   295  0000                     _TMR0L	set	4054
   296  0000                     _TMR3H	set	4019
   297  0000                     _TMR3L	set	4018
   298  0000                     _TRISA	set	3986
   299  0000                     _TRISB	set	3987
   300  0000                     _TRISBbits	set	3987
   301  0000                     _TRISC	set	3988
   302  0000                     _TXERRCNT	set	3958
   303                           
   304                           ; #config settings
   305  000D51  00                 	db	0	; dummy byte at the end
   306  0000                     
   307                           	psect	cinit
   308  0063E2                     __pcinit:
   309                           	opt stack 0
   310  0063E2                     start_initialization:
   311                           	opt stack 0
   312  0063E2                     __initialization:
   313                           	opt stack 0
   314                           
   315                           ; Clear objects allocated to BANK1 (139 bytes)
   316  0063E2  EE01  F000         	lfsr	0,__pbssBANK1
   317  0063E6  0E8B               	movlw	139
   318  0063E8                     clear_0:
   319  0063E8  6AEE               	clrf	postinc0,c
   320  0063EA  06E8               	decf	wreg,f,c
   321  0063EC  E1FD               	bnz	clear_0
   322                           
   323                           ; Clear objects allocated to BANK0 (12 bytes)
   324  0063EE  EE00  F0DA         	lfsr	0,__pbssBANK0
   325  0063F2  0E0C               	movlw	12
   326  0063F4                     clear_1:
   327  0063F4  6AEE               	clrf	postinc0,c
   328  0063F6  06E8               	decf	wreg,f,c
   329  0063F8  E1FD               	bnz	clear_1
   330                           
   331                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   332  0063FA  6A55               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   333  0063FC  6A54               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   334                           
   335                           ; Clear objects allocated to COMRAM (44 bytes)
   336  0063FE  EE00  F001         	lfsr	0,__pbssCOMRAM
   337  006402  0E2C               	movlw	44
   338  006404                     clear_2:
   339  006404  6AEE               	clrf	postinc0,c
   340  006406  06E8               	decf	wreg,f,c
   341  006408  E1FD               	bnz	clear_2
   342                           
   343                           ; Initialize objects allocated to BANK1 (8 bytes)
   344                           ; load TBLPTR registers with __pidataBANK1
   345  00640A  0EF0               	movlw	low __pidataBANK1
   346  00640C  6EF6               	movwf	tblptrl,c
   347  00640E  0E66               	movlw	high __pidataBANK1
   348  006410  6EF7               	movwf	tblptrh,c
   349  006412  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   350  006414  6EF8               	movwf	tblptru,c
   351  006416  EE01  F0E4         	lfsr	0,__pdataBANK1
   352  00641A  EE10 F008          	lfsr	1,8
   353  00641E                     copy_data0:
   354  00641E  0009               	tblrd		*+
   355  006420  CFF5 FFEE          	movff	tablat,postinc0
   356  006424  50E5               	movf	postdec1,w,c
   357  006426  50E1               	movf	fsr1l,w,c
   358  006428  E1FA               	bnz	copy_data0
   359                           
   360                           ; Initialize objects allocated to BANK0 (3 bytes)
   361                           ; load TBLPTR registers with __pidataBANK0
   362  00642A  0EF8               	movlw	low __pidataBANK0
   363  00642C  6EF6               	movwf	tblptrl,c
   364  00642E  0E66               	movlw	high __pidataBANK0
   365  006430  6EF7               	movwf	tblptrh,c
   366  006432  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   367  006434  6EF8               	movwf	tblptru,c
   368  006436  0009               	tblrd		*+	;fetch initializer
   369  006438  CFF5 F0E6          	movff	tablat,__pdataBANK0
   370  00643C  0009               	tblrd		*+	;fetch initializer
   371  00643E  CFF5 F0E7          	movff	tablat,__pdataBANK0+1
   372  006442  0009               	tblrd		*+	;fetch initializer
   373  006444  CFF5 F0E8          	movff	tablat,__pdataBANK0+2
   374  006448                     end_of_initialization:
   375                           	opt stack 0
   376  006448                     __end_of__initialization:
   377                           	opt stack 0
   378  006448  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   379  00644A  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   380  00644C  0100               	movlb	0
   381  00644E  EF0E  F031         	goto	_main	;jump to C main() function
   382                           tblptru	equ	0xFF8
   383                           tblptrh	equ	0xFF7
   384                           tblptrl	equ	0xFF6
   385                           tablat	equ	0xFF5
   386                           postinc0	equ	0xFEE
   387                           wreg	equ	0xFE8
   388                           postdec1	equ	0xFE5
   389                           fsr1l	equ	0xFE1
   390                           
   391                           	psect	bitbssCOMRAM
   392  0002A0                     __pbitbssCOMRAM:
   393                           	opt stack 0
   394  0002A0                     _activation:
   395                           	opt stack 0
   396  0002A0                     	ds	1
   397  0002A1                     _asd:
   398                           	opt stack 0
   399  0002A1                     	ds	1
   400  0002A2                     _avvicinamento:
   401                           	opt stack 0
   402  0002A2                     	ds	1
   403  0002A3                     _dir:
   404                           	opt stack 0
   405  0002A3                     	ds	1
   406  0002A4                     _distance_error:
   407                           	opt stack 0
   408  0002A4                     	ds	1
   409  0002A5                     _distance_received:
   410                           	opt stack 0
   411  0002A5                     	ds	1
   412  0002A6                     _distance_received1:
   413                           	opt stack 0
   414  0002A6                     	ds	1
   415  0002A7                     _distance_wait:
   416                           	opt stack 0
   417  0002A7                     	ds	1
   418  0002A8                     _emergency:
   419                           	opt stack 0
   420  0002A8                     	ds	1
   421  0002A9                     _first:
   422                           	opt stack 0
   423  0002A9                     	ds	1
   424  0002AA                     _new_distance:
   425                           	opt stack 0
   426  0002AA                     	ds	1
   427  0002AB                     _old_data_correction:
   428                           	opt stack 0
   429  0002AB                     	ds	1
   430  0002AC                     _request_sent:
   431                           	opt stack 0
   432  0002AC                     	ds	1
   433  0002AD                     _request_sent1:
   434                           	opt stack 0
   435  0002AD                     	ds	1
   436  0002AE                     _start_operation:
   437                           	opt stack 0
   438  0002AE                     	ds	1
   439  0002AF                     _steering_correction_dir:
   440                           	opt stack 0
   441  0002AF                     	ds	1
   442                           tblptru	equ	0xFF8
   443                           tblptrh	equ	0xFF7
   444                           tblptrl	equ	0xFF6
   445                           tablat	equ	0xFF5
   446                           postinc0	equ	0xFEE
   447                           wreg	equ	0xFE8
   448                           postdec1	equ	0xFE5
   449                           fsr1l	equ	0xFE1
   450                           
   451                           	psect	bssCOMRAM
   452  000001                     __pbssCOMRAM:
   453                           	opt stack 0
   454  000001                     _sensor_distance:
   455                           	opt stack 0
   456  000001                     	ds	16
   457  000011                     _alignment_gap:
   458                           	opt stack 0
   459  000011                     	ds	4
   460  000015                     _z:
   461                           	opt stack 0
   462  000015                     	ds	4
   463  000019                     _distance_average:
   464                           	opt stack 0
   465  000019                     	ds	2
   466  00001B                     _distance_dx:
   467                           	opt stack 0
   468  00001B                     	ds	2
   469  00001D                     _distance_sx:
   470                           	opt stack 0
   471  00001D                     	ds	2
   472  00001F                     _left_speed:
   473                           	opt stack 0
   474  00001F                     	ds	2
   475  000021                     _pulse_time:
   476                           	opt stack 0
   477  000021                     	ds	2
   478  000023                     _right_speed:
   479                           	opt stack 0
   480  000023                     	ds	2
   481  000025                     _set_speed:
   482                           	opt stack 0
   483  000025                     	ds	2
   484  000027                     _timerValue2:
   485                           	opt stack 0
   486  000027                     	ds	2
   487  000029                     _MUX_index:
   488                           	opt stack 0
   489  000029                     	ds	1
   490  00002A                     _asus:
   491                           	opt stack 0
   492  00002A                     	ds	1
   493  00002B                     _gianni:
   494                           	opt stack 0
   495  00002B                     	ds	1
   496  00002C                     _steering_correction:
   497                           	opt stack 0
   498  00002C                     	ds	1
   499                           tblptru	equ	0xFF8
   500                           tblptrh	equ	0xFF7
   501                           tblptrl	equ	0xFF6
   502                           tablat	equ	0xFF5
   503                           postinc0	equ	0xFEE
   504                           wreg	equ	0xFE8
   505                           postdec1	equ	0xFE5
   506                           fsr1l	equ	0xFE1
   507                           
   508                           	psect	bssBANK0
   509  0000DA                     __pbssBANK0:
   510                           	opt stack 0
   511  0000DA                     _x:
   512                           	opt stack 0
   513  0000DA                     	ds	4
   514  0000DE                     _actual_speed:
   515                           	opt stack 0
   516  0000DE                     	ds	2
   517  0000E0                     _clock_counter_reference:
   518                           	opt stack 0
   519  0000E0                     	ds	2
   520  0000E2                     _distance:
   521                           	opt stack 0
   522  0000E2                     	ds	2
   523  0000E4                     _errno:
   524                           	opt stack 0
   525  0000E4                     	ds	2
   526                           tblptru	equ	0xFF8
   527                           tblptrh	equ	0xFF7
   528                           tblptrl	equ	0xFF6
   529                           tablat	equ	0xFF5
   530                           postinc0	equ	0xFEE
   531                           wreg	equ	0xFE8
   532                           postdec1	equ	0xFE5
   533                           fsr1l	equ	0xFE1
   534                           
   535                           	psect	dataBANK0
   536  0000E6                     __pdataBANK0:
   537                           	opt stack 0
   538  0000E6                     _spazio_parcheggio:
   539                           	opt stack 0
   540  0000E6                     	ds	2
   541  0000E8                     _delay_quartz_frequency_value:
   542                           	opt stack 0
   543  0000E8                     	ds	1
   544                           tblptru	equ	0xFF8
   545                           tblptrh	equ	0xFF7
   546                           tblptrl	equ	0xFF6
   547                           tablat	equ	0xFF5
   548                           postinc0	equ	0xFEE
   549                           wreg	equ	0xFE8
   550                           postdec1	equ	0xFE5
   551                           fsr1l	equ	0xFE1
   552                           
   553                           	psect	bssBANK1
   554  000100                     __pbssBANK1:
   555                           	opt stack 0
   556  000100                     _MUX_select:
   557                           	opt stack 0
   558  000100                     	ds	8
   559  000108                     _data_speed_rx:
   560                           	opt stack 0
   561  000108                     	ds	8
   562  000110                     _distance_set:
   563                           	opt stack 0
   564  000110                     	ds	8
   565  000118                     _sensor_distance_old:
   566                           	opt stack 0
   567  000118                     	ds	8
   568  000120                     _Pminimo:
   569                           	opt stack 0
   570  000120                     	ds	4
   571  000124                     _alfa:
   572                           	opt stack 0
   573  000124                     	ds	4
   574  000128                     _beta:
   575                           	opt stack 0
   576  000128                     	ds	4
   577  00012C                     _bordo:
   578                           	opt stack 0
   579  00012C                     	ds	4
   580  000130                     _jjj:
   581                           	opt stack 0
   582  000130                     	ds	4
   583  000134                     _kkk:
   584                           	opt stack 0
   585  000134                     	ds	4
   586  000138                     _n:
   587                           	opt stack 0
   588  000138                     	ds	4
   589  00013C                     _old_alignment_gap:
   590                           	opt stack 0
   591  00013C                     	ds	4
   592  000140                     _prima_sterzata:
   593                           	opt stack 0
   594  000140                     	ds	4
   595  000144                     _msg:
   596                           	opt stack 0
   597  000144                     	ds	15
   598  000153                     _data:
   599                           	opt stack 0
   600  000153                     	ds	8
   601  00015B                     _data_brake:
   602                           	opt stack 0
   603  00015B                     	ds	8
   604  000163                     _data_correction:
   605                           	opt stack 0
   606  000163                     	ds	8
   607  00016B                     _data_speed:
   608                           	opt stack 0
   609  00016B                     	ds	8
   610  000173                     _data_steering:
   611                           	opt stack 0
   612  000173                     	ds	8
   613  00017B                     _data_test:
   614                           	opt stack 0
   615  00017B                     	ds	8
   616  000183                     _sensor_distance_short:
   617                           	opt stack 0
   618  000183                     	ds	8
   619                           tblptru	equ	0xFF8
   620                           tblptrh	equ	0xFF7
   621                           tblptrl	equ	0xFF6
   622                           tablat	equ	0xFF5
   623                           postinc0	equ	0xFEE
   624                           wreg	equ	0xFE8
   625                           postdec1	equ	0xFE5
   626                           fsr1l	equ	0xFE1
   627                           
   628                           	psect	dataBANK1
   629  0001E4                     __pdataBANK1:
   630                           	opt stack 0
   631  0001E4                     _larghezza:
   632                           	opt stack 0
   633  0001E4                     	ds	4
   634  0001E8                     _raggio:
   635                           	opt stack 0
   636  0001E8                     	ds	4
   637                           tblptru	equ	0xFF8
   638                           tblptrh	equ	0xFF7
   639                           tblptrl	equ	0xFF6
   640                           tablat	equ	0xFF5
   641                           postinc0	equ	0xFEE
   642                           wreg	equ	0xFE8
   643                           postdec1	equ	0xFE5
   644                           fsr1l	equ	0xFE1
   645                           
   646                           	psect	cstackBANK1
   647  00018B                     __pcstackBANK1:
   648                           	opt stack 0
   649  00018B                     ?_floor:
   650                           	opt stack 0
   651  00018B                     sqrt@sign:
   652                           	opt stack 0
   653  00018B                     atan@y:
   654                           	opt stack 0
   655  00018B                     floor@x:
   656                           	opt stack 0
   657                           
   658                           ; 4 bytes @ 0x0
   659  00018B                     	ds	1
   660  00018C                     sqrt@i:
   661                           	opt stack 0
   662                           
   663                           ; 1 bytes @ 0x1
   664  00018C                     	ds	1
   665  00018D                     sqrt@tfrac:
   666                           	opt stack 0
   667                           
   668                           ; 4 bytes @ 0x2
   669  00018D                     	ds	2
   670  00018F                     atan@x:
   671                           	opt stack 0
   672  00018F                     floor@i:
   673                           	opt stack 0
   674                           
   675                           ; 4 bytes @ 0x4
   676  00018F                     	ds	2
   677  000191                     sqrt@p:
   678                           	opt stack 0
   679                           
   680                           ; 1 bytes @ 0x6
   681  000191                     	ds	1
   682  000192                     sqrt@grs:
   683                           	opt stack 0
   684                           
   685                           ; 4 bytes @ 0x7
   686  000192                     	ds	1
   687  000193                     atan@recip:
   688                           	opt stack 0
   689  000193                     floor@expon:
   690                           	opt stack 0
   691                           
   692                           ; 2 bytes @ 0x8
   693  000193                     	ds	1
   694  000194                     atan@val_squared:
   695                           	opt stack 0
   696                           
   697                           ; 4 bytes @ 0x9
   698  000194                     	ds	1
   699  000195                     ?___flsub:
   700                           	opt stack 0
   701  000195                     ___flsub@b:
   702                           	opt stack 0
   703                           
   704                           ; 4 bytes @ 0xA
   705  000195                     	ds	1
   706  000196                     sqrt@exp:
   707                           	opt stack 0
   708                           
   709                           ; 2 bytes @ 0xB
   710  000196                     	ds	2
   711  000198                     atan@val:
   712                           	opt stack 0
   713  000198                     sqrt@root:
   714                           	opt stack 0
   715                           
   716                           ; 4 bytes @ 0xD
   717  000198                     	ds	1
   718  000199                     ___flsub@a:
   719                           	opt stack 0
   720                           
   721                           ; 4 bytes @ 0xE
   722  000199                     	ds	3
   723  00019C                     sqrt@frac:
   724                           	opt stack 0
   725                           
   726                           ; 4 bytes @ 0x11
   727  00019C                     	ds	1
   728  00019D                     ?_sin:
   729                           	opt stack 0
   730  00019D                     sin@f:
   731                           	opt stack 0
   732                           
   733                           ; 4 bytes @ 0x12
   734  00019D                     	ds	3
   735  0001A0                     asin@sgn:
   736                           	opt stack 0
   737                           
   738                           ; 4 bytes @ 0x15
   739  0001A0                     	ds	1
   740  0001A1                     sin@y:
   741                           	opt stack 0
   742                           
   743                           ; 4 bytes @ 0x16
   744  0001A1                     	ds	3
   745  0001A4                     _asin$3755:
   746                           	opt stack 0
   747                           
   748                           ; 4 bytes @ 0x19
   749  0001A4                     	ds	1
   750  0001A5                     _sin$3757:
   751                           	opt stack 0
   752                           
   753                           ; 4 bytes @ 0x1A
   754  0001A5                     	ds	3
   755  0001A8                     _asin$3754:
   756                           	opt stack 0
   757                           
   758                           ; 4 bytes @ 0x1D
   759  0001A8                     	ds	1
   760  0001A9                     sin@x2:
   761                           	opt stack 0
   762                           
   763                           ; 4 bytes @ 0x1E
   764  0001A9                     	ds	3
   765  0001AC                     asin@y:
   766                           	opt stack 0
   767                           
   768                           ; 4 bytes @ 0x21
   769  0001AC                     	ds	1
   770  0001AD                     sin@sgn:
   771                           	opt stack 0
   772                           
   773                           ; 1 bytes @ 0x22
   774  0001AD                     	ds	3
   775  0001B0                     _asin$3753:
   776                           	opt stack 0
   777                           
   778                           ; 4 bytes @ 0x25
   779  0001B0                     	ds	4
   780  0001B4                     ??_parallelo:
   781  0001B4                     ?_cos:
   782                           	opt stack 0
   783  0001B4                     cos@f:
   784                           	opt stack 0
   785                           
   786                           ; 4 bytes @ 0x29
   787  0001B4                     	ds	2
   788  0001B6                     ??_park_search:
   789                           
   790                           ; 0 bytes @ 0x2B
   791  0001B6                     	ds	2
   792  0001B8                     _cos$3756:
   793                           	opt stack 0
   794                           
   795                           ; 4 bytes @ 0x2D
   796  0001B8                     	ds	4
   797  0001BC                     _matematica$3746:
   798                           	opt stack 0
   799                           
   800                           ; 4 bytes @ 0x31
   801  0001BC                     	ds	4
   802  0001C0                     _matematica$3747:
   803                           	opt stack 0
   804                           
   805                           ; 4 bytes @ 0x35
   806  0001C0                     	ds	4
   807  0001C4                     _matematica$3748:
   808                           	opt stack 0
   809                           
   810                           ; 4 bytes @ 0x39
   811  0001C4                     	ds	4
   812  0001C8                     _matematica$3749:
   813                           	opt stack 0
   814                           
   815                           ; 4 bytes @ 0x3D
   816  0001C8                     	ds	4
   817  0001CC                     _matematica$3751:
   818                           	opt stack 0
   819                           
   820                           ; 4 bytes @ 0x41
   821  0001CC                     	ds	4
   822  0001D0                     _matematica$3752:
   823                           	opt stack 0
   824                           
   825                           ; 4 bytes @ 0x45
   826  0001D0                     	ds	4
   827  0001D4                     _matematica$3750:
   828                           	opt stack 0
   829                           
   830                           ; 4 bytes @ 0x49
   831  0001D4                     	ds	4
   832  0001D8                     ??_park_routine:
   833                           
   834                           ; 0 bytes @ 0x4D
   835  0001D8                     	ds	4
   836  0001DC                     _park_routine$3744:
   837                           	opt stack 0
   838                           
   839                           ; 4 bytes @ 0x51
   840  0001DC                     	ds	4
   841  0001E0                     _park_routine$3745:
   842                           	opt stack 0
   843                           
   844                           ; 4 bytes @ 0x55
   845  0001E0                     	ds	4
   846                           tblptru	equ	0xFF8
   847                           tblptrh	equ	0xFF7
   848                           tblptrl	equ	0xFF6
   849                           tablat	equ	0xFF5
   850                           postinc0	equ	0xFEE
   851                           wreg	equ	0xFE8
   852                           postdec1	equ	0xFE5
   853                           fsr1l	equ	0xFE1
   854                           
   855                           	psect	cstackBANK0
   856  000060                     __pcstackBANK0:
   857                           	opt stack 0
   858  000060                     ?___lwdiv:
   859                           	opt stack 0
   860  000060                     ___lwdiv@dividend:
   861                           	opt stack 0
   862                           
   863                           ; 2 bytes @ 0x0
   864  000060                     	ds	2
   865  000062                     ___lwdiv@divisor:
   866                           	opt stack 0
   867                           
   868                           ; 2 bytes @ 0x2
   869  000062                     	ds	2
   870  000064                     ___lwdiv@counter:
   871                           	opt stack 0
   872                           
   873                           ; 1 bytes @ 0x4
   874  000064                     	ds	1
   875  000065                     ___lwdiv@quotient:
   876                           	opt stack 0
   877                           
   878                           ; 2 bytes @ 0x5
   879  000065                     	ds	2
   880  000067                     ??_ISR_Alta:
   881                           
   882                           ; 0 bytes @ 0x7
   883  000067                     	ds	16
   884  000077                     ??_can_interpreter:
   885  000077                     ?_abs:
   886                           	opt stack 0
   887  000077                     ?___wmul:
   888                           	opt stack 0
   889  000077                     ?___fldiv:
   890                           	opt stack 0
   891  000077                     CANOperationMode@mode:
   892                           	opt stack 0
   893  000077                     _CANisTxReady$2845:
   894                           	opt stack 0
   895  000077                     ___wmul@multiplier:
   896                           	opt stack 0
   897  000077                     abs@a:
   898                           	opt stack 0
   899  000077                     CANsendMessage@identifier:
   900                           	opt stack 0
   901  000077                     CANSetMask@mask:
   902                           	opt stack 0
   903  000077                     CANSetFilter@filter:
   904                           	opt stack 0
   905  000077                     ___fldiv@b:
   906                           	opt stack 0
   907  000077                     frexp@value:
   908                           	opt stack 0
   909                           
   910                           ; 4 bytes @ 0x17
   911  000077                     	ds	2
   912  000079                     ??_abs:
   913  000079                     ___wmul@multiplicand:
   914                           	opt stack 0
   915                           
   916                           ; 2 bytes @ 0x19
   917  000079                     	ds	2
   918  00007B                     CANSetMask@type:
   919                           	opt stack 0
   920  00007B                     CANSetFilter@type:
   921                           	opt stack 0
   922  00007B                     CANsendMessage@data:
   923                           	opt stack 0
   924  00007B                     ___wmul@product:
   925                           	opt stack 0
   926  00007B                     frexp@eptr:
   927                           	opt stack 0
   928  00007B                     ___fldiv@a:
   929                           	opt stack 0
   930                           
   931                           ; 4 bytes @ 0x1B
   932  00007B                     	ds	1
   933  00007C                     ??_CANSetMask:
   934  00007C                     ??_CANSetFilter:
   935                           
   936                           ; 0 bytes @ 0x1C
   937  00007C                     	ds	1
   938  00007D                     ??_frexp:
   939  00007D                     CANsendMessage@dataLength:
   940                           	opt stack 0
   941  00007D                     delay_ms@value_ms:
   942                           	opt stack 0
   943                           
   944                           ; 2 bytes @ 0x1D
   945  00007D                     	ds	1
   946  00007E                     CANsendMessage@flags:
   947                           	opt stack 0
   948                           
   949                           ; 1 bytes @ 0x1E
   950  00007E                     	ds	1
   951  00007F                     ??___fldiv:
   952  00007F                     ??_CANsendMessage:
   953  00007F                     delay_s@value_s:
   954                           	opt stack 0
   955                           
   956                           ; 1 bytes @ 0x1F
   957  00007F                     	ds	1
   958  000080                     CANSetMask@numBuffer:
   959                           	opt stack 0
   960  000080                     CANSetFilter@numBuffer:
   961                           	opt stack 0
   962  000080                     delay_s@repeat_loop:
   963                           	opt stack 0
   964                           
   965                           ; 1 bytes @ 0x20
   966  000080                     	ds	1
   967  000081                     CANSetMask@tamp:
   968                           	opt stack 0
   969  000081                     CANSetFilter@tamp:
   970                           	opt stack 0
   971                           
   972                           ; 4 bytes @ 0x21
   973  000081                     	ds	2
   974  000083                     ___fldiv@sign:
   975                           	opt stack 0
   976  000083                     CANsendMessage@tamp:
   977                           	opt stack 0
   978                           
   979                           ; 4 bytes @ 0x23
   980  000083                     	ds	1
   981  000084                     ___fldiv@rem:
   982                           	opt stack 0
   983                           
   984                           ; 4 bytes @ 0x24
   985  000084                     	ds	1
   986  000085                     CANInitialize@phaseSeg1:
   987                           	opt stack 0
   988                           
   989                           ; 1 bytes @ 0x25
   990  000085                     	ds	1
   991  000086                     CANInitialize@phaseSeg2:
   992                           	opt stack 0
   993                           
   994                           ; 1 bytes @ 0x26
   995  000086                     	ds	1
   996  000087                     can_send@data_correction1:
   997                           	opt stack 0
   998  000087                     CANInitialize@SJW:
   999                           	opt stack 0
  1000                           
  1001                           ; 1 bytes @ 0x27
  1002  000087                     	ds	1
  1003  000088                     CANInitialize@BRP:
  1004                           	opt stack 0
  1005  000088                     ___fldiv@new_exp:
  1006                           	opt stack 0
  1007                           
  1008                           ; 2 bytes @ 0x28
  1009  000088                     	ds	1
  1010  000089                     CANInitialize@flags:
  1011                           	opt stack 0
  1012                           
  1013                           ; 1 bytes @ 0x29
  1014  000089                     	ds	1
  1015  00008A                     ??_CANInitialize:
  1016  00008A                     ___fldiv@grs:
  1017                           	opt stack 0
  1018                           
  1019                           ; 4 bytes @ 0x2A
  1020  00008A                     	ds	4
  1021  00008E                     CANInitialize@propSeg:
  1022                           	opt stack 0
  1023  00008E                     ___fldiv@bexp:
  1024                           	opt stack 0
  1025                           
  1026                           ; 1 bytes @ 0x2E
  1027  00008E                     	ds	1
  1028  00008F                     CANInitialize@FilterConfig1:
  1029                           	opt stack 0
  1030  00008F                     ___fldiv@aexp:
  1031                           	opt stack 0
  1032                           
  1033                           ; 1 bytes @ 0x2F
  1034  00008F                     	ds	1
  1035  000090                     ?___flmul:
  1036                           	opt stack 0
  1037  000090                     CANInitialize@FilterConfig2:
  1038                           	opt stack 0
  1039  000090                     ___flmul@b:
  1040                           	opt stack 0
  1041                           
  1042                           ; 4 bytes @ 0x30
  1043  000090                     	ds	1
  1044  000091                     
  1045                           ; 0 bytes @ 0x31
  1046  000091                     	ds	3
  1047  000094                     ___flmul@a:
  1048                           	opt stack 0
  1049                           
  1050                           ; 4 bytes @ 0x34
  1051  000094                     	ds	4
  1052  000098                     ??___flmul:
  1053                           
  1054                           ; 0 bytes @ 0x38
  1055  000098                     	ds	4
  1056  00009C                     ___flmul@sign:
  1057                           	opt stack 0
  1058                           
  1059                           ; 1 bytes @ 0x3C
  1060  00009C                     	ds	1
  1061  00009D                     ___flmul@aexp:
  1062                           	opt stack 0
  1063                           
  1064                           ; 1 bytes @ 0x3D
  1065  00009D                     	ds	1
  1066  00009E                     ___flmul@grs:
  1067                           	opt stack 0
  1068                           
  1069                           ; 4 bytes @ 0x3E
  1070  00009E                     	ds	4
  1071  0000A2                     ___flmul@bexp:
  1072                           	opt stack 0
  1073                           
  1074                           ; 1 bytes @ 0x42
  1075  0000A2                     	ds	1
  1076  0000A3                     ___flmul@prod:
  1077                           	opt stack 0
  1078                           
  1079                           ; 4 bytes @ 0x43
  1080  0000A3                     	ds	4
  1081  0000A7                     ___flmul@temp:
  1082                           	opt stack 0
  1083                           
  1084                           ; 2 bytes @ 0x47
  1085  0000A7                     	ds	2
  1086  0000A9                     ?___fladd:
  1087                           	opt stack 0
  1088  0000A9                     ___fladd@b:
  1089                           	opt stack 0
  1090                           
  1091                           ; 4 bytes @ 0x49
  1092  0000A9                     	ds	4
  1093  0000AD                     ___fladd@a:
  1094                           	opt stack 0
  1095                           
  1096                           ; 4 bytes @ 0x4D
  1097  0000AD                     	ds	4
  1098  0000B1                     ??___fladd:
  1099                           
  1100                           ; 0 bytes @ 0x51
  1101  0000B1                     	ds	8
  1102  0000B9                     ___fladd@signs:
  1103                           	opt stack 0
  1104                           
  1105                           ; 1 bytes @ 0x59
  1106  0000B9                     	ds	1
  1107  0000BA                     ___fladd@aexp:
  1108                           	opt stack 0
  1109                           
  1110                           ; 1 bytes @ 0x5A
  1111  0000BA                     	ds	1
  1112  0000BB                     ___fladd@bexp:
  1113                           	opt stack 0
  1114                           
  1115                           ; 1 bytes @ 0x5B
  1116  0000BB                     	ds	1
  1117  0000BC                     ___fladd@grs:
  1118                           	opt stack 0
  1119                           
  1120                           ; 1 bytes @ 0x5C
  1121  0000BC                     	ds	1
  1122  0000BD                     ?_eval_poly:
  1123                           	opt stack 0
  1124  0000BD                     ?___flneg:
  1125                           	opt stack 0
  1126  0000BD                     eval_poly@x:
  1127                           	opt stack 0
  1128  0000BD                     ___flneg@f1:
  1129                           	opt stack 0
  1130                           
  1131                           ; 4 bytes @ 0x5D
  1132  0000BD                     	ds	4
  1133  0000C1                     ?_sqrt:
  1134                           	opt stack 0
  1135  0000C1                     ?_fabs:
  1136                           	opt stack 0
  1137  0000C1                     ?___fltol:
  1138                           	opt stack 0
  1139  0000C1                     eval_poly@d:
  1140                           	opt stack 0
  1141  0000C1                     fabs@d:
  1142                           	opt stack 0
  1143  0000C1                     ___fltol@f1:
  1144                           	opt stack 0
  1145  0000C1                     sqrt@a:
  1146                           	opt stack 0
  1147                           
  1148                           ; 4 bytes @ 0x61
  1149  0000C1                     	ds	2
  1150  0000C3                     eval_poly@n:
  1151                           	opt stack 0
  1152                           
  1153                           ; 2 bytes @ 0x63
  1154  0000C3                     	ds	2
  1155  0000C5                     ??_sqrt:
  1156  0000C5                     ??_eval_poly:
  1157  0000C5                     ??___fltol:
  1158  0000C5                     ___flge@ff1:
  1159                           	opt stack 0
  1160                           
  1161                           ; 4 bytes @ 0x65
  1162  0000C5                     	ds	4
  1163  0000C9                     ___fltol@sign1:
  1164                           	opt stack 0
  1165  0000C9                     eval_poly@res:
  1166                           	opt stack 0
  1167  0000C9                     ___flge@ff2:
  1168                           	opt stack 0
  1169                           
  1170                           ; 4 bytes @ 0x69
  1171  0000C9                     	ds	1
  1172  0000CA                     ___fltol@exp1:
  1173                           	opt stack 0
  1174                           
  1175                           ; 1 bytes @ 0x6A
  1176  0000CA                     	ds	1
  1177  0000CB                     ?___xxtofl:
  1178                           	opt stack 0
  1179  0000CB                     ___xxtofl@val:
  1180                           	opt stack 0
  1181                           
  1182                           ; 4 bytes @ 0x6B
  1183  0000CB                     	ds	2
  1184  0000CD                     ??___flge:
  1185                           
  1186                           ; 0 bytes @ 0x6D
  1187  0000CD                     	ds	2
  1188  0000CF                     ??___xxtofl:
  1189                           
  1190                           ; 0 bytes @ 0x6F
  1191  0000CF                     	ds	2
  1192  0000D1                     ?_atan:
  1193                           	opt stack 0
  1194  0000D1                     atan@f:
  1195                           	opt stack 0
  1196                           
  1197                           ; 4 bytes @ 0x71
  1198  0000D1                     	ds	2
  1199  0000D3                     ___xxtofl@sign:
  1200                           	opt stack 0
  1201                           
  1202                           ; 1 bytes @ 0x73
  1203  0000D3                     	ds	1
  1204  0000D4                     ___xxtofl@exp:
  1205                           	opt stack 0
  1206                           
  1207                           ; 1 bytes @ 0x74
  1208  0000D4                     	ds	1
  1209  0000D5                     ?_asin:
  1210                           	opt stack 0
  1211  0000D5                     asin@x:
  1212                           	opt stack 0
  1213  0000D5                     ___xxtofl@arg:
  1214                           	opt stack 0
  1215                           
  1216                           ; 4 bytes @ 0x75
  1217  0000D5                     	ds	4
  1218  0000D9                     ??_main:
  1219                           
  1220                           ; 0 bytes @ 0x79
  1221  0000D9                     	ds	1
  1222                           tblptru	equ	0xFF8
  1223                           tblptrh	equ	0xFF7
  1224                           tblptrl	equ	0xFF6
  1225                           tablat	equ	0xFF5
  1226                           postinc0	equ	0xFEE
  1227                           wreg	equ	0xFE8
  1228                           postdec1	equ	0xFE5
  1229                           fsr1l	equ	0xFE1
  1230                           
  1231                           	psect	cstackCOMRAM
  1232  00002D                     __pcstackCOMRAM:
  1233                           	opt stack 0
  1234  00002D                     i1_CANisTxReady$2845:
  1235                           	opt stack 0
  1236  00002D                     CANreceiveMessage@msg:
  1237                           	opt stack 0
  1238  00002D                     i1CANsendMessage@identifier:
  1239                           	opt stack 0
  1240                           
  1241                           ; 4 bytes @ 0x0
  1242  00002D                     	ds	2
  1243  00002F                     ??_CANreceiveMessage:
  1244                           
  1245                           ; 0 bytes @ 0x2
  1246  00002F                     	ds	2
  1247  000031                     i1CANsendMessage@data:
  1248                           	opt stack 0
  1249                           
  1250                           ; 2 bytes @ 0x4
  1251  000031                     	ds	2
  1252  000033                     i1CANsendMessage@dataLength:
  1253                           	opt stack 0
  1254                           
  1255                           ; 1 bytes @ 0x6
  1256  000033                     	ds	1
  1257  000034                     i1CANsendMessage@flags:
  1258                           	opt stack 0
  1259                           
  1260                           ; 1 bytes @ 0x7
  1261  000034                     	ds	1
  1262  000035                     ??i1_CANsendMessage:
  1263                           
  1264                           ; 0 bytes @ 0x8
  1265  000035                     	ds	2
  1266  000037                     CANreceiveMessage@error:
  1267                           	opt stack 0
  1268                           
  1269                           ; 1 bytes @ 0xA
  1270  000037                     	ds	1
  1271  000038                     CANreceiveMessage@tamp:
  1272                           	opt stack 0
  1273                           
  1274                           ; 1 bytes @ 0xB
  1275  000038                     	ds	1
  1276  000039                     i1CANsendMessage@tamp:
  1277                           	opt stack 0
  1278                           
  1279                           ; 4 bytes @ 0xC
  1280  000039                     	ds	4
  1281  00003D                     ??_ISR_Bassa:
  1282                           
  1283                           ; 0 bytes @ 0x10
  1284  00003D                     	ds	21
  1285  000052                     ISR_Bassa@gigi:
  1286                           	opt stack 0
  1287                           
  1288                           ; 1 bytes @ 0x25
  1289  000052                     	ds	1
  1290  000053                     ISR_Bassa@i:
  1291                           	opt stack 0
  1292                           
  1293                           ; 1 bytes @ 0x26
  1294  000053                     	ds	1
  1295                           tblptru	equ	0xFF8
  1296                           tblptrh	equ	0xFF7
  1297                           tblptrl	equ	0xFF6
  1298                           tablat	equ	0xFF5
  1299                           postinc0	equ	0xFEE
  1300                           wreg	equ	0xFE8
  1301                           postdec1	equ	0xFE5
  1302                           fsr1l	equ	0xFE1
  1303                           
  1304 ;;
  1305 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1306 ;;
  1307 ;; *************** function _main *****************
  1308 ;; Defined at:
  1309 ;;		line 206 in file "parcheggio.c"
  1310 ;; Parameters:    Size  Location     Type
  1311 ;;		None
  1312 ;; Auto vars:     Size  Location     Type
  1313 ;;		None
  1314 ;; Return value:  Size  Location     Type
  1315 ;;		None               void
  1316 ;; Registers used:
  1317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1325 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1326 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1327 ;;Total ram usage:        1 bytes
  1328 ;; Hardware stack levels required when called:   10
  1329 ;; This function calls:
  1330 ;;		_CANisTxReady
  1331 ;;		_CANsendMessage
  1332 ;;		_can_interpreter
  1333 ;;		_configurazione
  1334 ;;		_delay_ms
  1335 ;;		_park_routine
  1336 ;;		_park_search
  1337 ;; This function is called by:
  1338 ;;		Startup code after reset
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	text0
  1343  00621C                     __ptext0:
  1344                           	opt stack 0
  1345  00621C                     _main:
  1346                           	opt stack 21
  1347                           
  1348                           ;parcheggio.c: 207: MUX_select[0] = 0b00000000;
  1349                           
  1350                           ; BSR set to: 15
  1351                           ;incstack = 0
  1352  00621C  0E00               	movlw	0
  1353  00621E  0101               	movlb	1	; () banked
  1354  006220  6F00               	movwf	_MUX_select& (0+255),b
  1355                           
  1356                           ;parcheggio.c: 208: MUX_select[1] = 0b00000001;
  1357  006222  0E01               	movlw	1
  1358  006224  0101               	movlb	1	; () banked
  1359  006226  6F01               	movwf	(_MUX_select+1)& (0+255),b
  1360                           
  1361                           ;parcheggio.c: 209: MUX_select[2] = 0b00000010;
  1362  006228  0E02               	movlw	2
  1363  00622A  0101               	movlb	1	; () banked
  1364  00622C  6F02               	movwf	(_MUX_select+2)& (0+255),b
  1365                           
  1366                           ;parcheggio.c: 210: MUX_select[3] = 0b00000011;
  1367  00622E  0E03               	movlw	3
  1368  006230  0101               	movlb	1	; () banked
  1369  006232  6F03               	movwf	(_MUX_select+3)& (0+255),b
  1370                           
  1371                           ;parcheggio.c: 211: MUX_select[4] = 0b00000100;
  1372  006234  0E04               	movlw	4
  1373  006236  0101               	movlb	1	; () banked
  1374  006238  6F04               	movwf	(_MUX_select+4)& (0+255),b
  1375                           
  1376                           ;parcheggio.c: 212: MUX_select[5] = 0b00000101;
  1377  00623A  0E05               	movlw	5
  1378  00623C  0101               	movlb	1	; () banked
  1379  00623E  6F05               	movwf	(_MUX_select+5)& (0+255),b
  1380                           
  1381                           ;parcheggio.c: 213: MUX_select[6] = 0b00000110;
  1382  006240  0E06               	movlw	6
  1383  006242  0101               	movlb	1	; () banked
  1384  006244  6F06               	movwf	(_MUX_select+6)& (0+255),b
  1385                           
  1386                           ;parcheggio.c: 214: MUX_select[7] = 0b00000111;
  1387  006246  0E07               	movlw	7
  1388  006248  0101               	movlb	1	; () banked
  1389  00624A  6F07               	movwf	(_MUX_select+7)& (0+255),b
  1390                           
  1391                           ; BSR set to: 1
  1392                           ;parcheggio.c: 215: emergency = 0;
  1393  00624C  9055               	bcf	_emergency/(0+8),_emergency& (0+7),c	;volatile
  1394                           
  1395                           ; BSR set to: 1
  1396                           ;parcheggio.c: 216: configurazione();
  1397  00624E  EC29  F032         	call	_configurazione	;wreg free
  1398                           
  1399                           ;parcheggio.c: 217: PORTBbits.RB4 = 0;
  1400  006252  9881               	bcf	3969,4,c	;volatile
  1401                           
  1402                           ;parcheggio.c: 218: PORTBbits.RB5 = 0;
  1403  006254  9A81               	bcf	3969,5,c	;volatile
  1404                           
  1405                           ;parcheggio.c: 219: PORTBbits.RB6 = 0;
  1406  006256  9C81               	bcf	3969,6,c	;volatile
  1407                           
  1408                           ;parcheggio.c: 220: request_sent = 0;
  1409  006258  9855               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1410                           
  1411                           ;parcheggio.c: 221: start_operation = 0;
  1412  00625A  9C55               	bcf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  1413                           
  1414                           ;parcheggio.c: 224: while (activation != 1) {
  1415                           
  1416                           ;parcheggio.c: 223: while (1) {
  1417  00625C  D033               	goto	l8710
  1418  00625E                     l8702:
  1419  00625E  EC4C  F033         	call	_CANisTxReady	;wreg free
  1420  006262  0900               	iorlw	0
  1421  006264  B4D8               	btfsc	status,2,c
  1422  006266  D7FB               	goto	l8702
  1423                           
  1424                           ;parcheggio.c: 226: PORTBbits.RB4 = ~PORTBbits.RB4;
  1425  006268  A881               	btfss	3969,4,c	;volatile
  1426  00626A  D002               	goto	u11620
  1427  00626C  0E01               	movlw	1
  1428  00626E  D001               	goto	u11626
  1429  006270                     u11620:
  1430  006270  0E00               	movlw	0
  1431  006272                     u11626:
  1432  006272  0AFF               	xorlw	255
  1433  006274  0100               	movlb	0	; () banked
  1434  006276  6FD9               	movwf	??_main& (0+255),b
  1435  006278  0100               	movlb	0	; () banked
  1436  00627A  3BD9               	swapf	??_main& (0+255),f,b
  1437  00627C  5081               	movf	3969,w,c	;volatile
  1438  00627E  0100               	movlb	0	; () banked
  1439  006280  19D9               	xorwf	??_main& (0+255),w,b
  1440  006282  0BEF               	andlw	-17
  1441  006284  19D9               	xorwf	??_main& (0+255),w,b
  1442  006286  6E81               	movwf	3969,c	;volatile
  1443                           
  1444                           ; BSR set to: 0
  1445                           ;parcheggio.c: 227: CANsendMessage(0xAA, sensor_distance_short, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1446  006288  0EAA               	movlw	170
  1447  00628A  0100               	movlb	0	; () banked
  1448  00628C  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1449  00628E  0E00               	movlw	0
  1450  006290  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1451  006292  0E00               	movlw	0
  1452  006294  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1453  006296  0E00               	movlw	0
  1454  006298  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1455  00629A  0E83               	movlw	low _sensor_distance_short
  1456  00629C  0100               	movlb	0	; () banked
  1457  00629E  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1458  0062A0  0E01               	movlw	high _sensor_distance_short
  1459  0062A2  0100               	movlb	0	; () banked
  1460  0062A4  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1461  0062A6  0E08               	movlw	8
  1462  0062A8  0100               	movlb	0	; () banked
  1463  0062AA  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1464  0062AC  0EFC               	movlw	252
  1465  0062AE  0100               	movlb	0	; () banked
  1466  0062B0  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1467  0062B2  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1468                           
  1469                           ;parcheggio.c: 228: delay_ms(100);
  1470  0062B6  0E00               	movlw	0
  1471  0062B8  0100               	movlb	0	; () banked
  1472  0062BA  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1473  0062BC  0E64               	movlw	100
  1474  0062BE  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  1475  0062C0  ECCC  F032         	call	_delay_ms	;wreg free
  1476  0062C4                     l8710:
  1477  0062C4  A054               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1478  0062C6  D7CB               	goto	l8702
  1479                           
  1480                           ;parcheggio.c: 243: }
  1481                           ;parcheggio.c: 244: park_search();
  1482  0062C8  EC46  F02C         	call	_park_search	;wreg free
  1483                           
  1484                           ;parcheggio.c: 245: can_interpreter();
  1485  0062CC  EC5F  F032         	call	_can_interpreter	;wreg free
  1486                           
  1487                           ;parcheggio.c: 246: park_routine();
  1488  0062D0  EC2C  F01D         	call	_park_routine	;wreg free
  1489  0062D4  D7F7               	goto	l8710
  1490  0062D6                     __end_of_main:
  1491                           	opt stack 0
  1492                           tblptru	equ	0xFF8
  1493                           tblptrh	equ	0xFF7
  1494                           tblptrl	equ	0xFF6
  1495                           tablat	equ	0xFF5
  1496                           postinc0	equ	0xFEE
  1497                           wreg	equ	0xFE8
  1498                           postdec1	equ	0xFE5
  1499                           fsr1l	equ	0xFE1
  1500                           status	equ	0xFD8
  1501                           
  1502 ;; *************** function _park_search *****************
  1503 ;; Defined at:
  1504 ;;		line 250 in file "parcheggio.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;		None
  1507 ;; Auto vars:     Size  Location     Type
  1508 ;;		None
  1509 ;; Return value:  Size  Location     Type
  1510 ;;		None               void
  1511 ;; Registers used:
  1512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1513 ;; Tracked objects:
  1514 ;;		On entry : 0/0
  1515 ;;		On exit  : 0/0
  1516 ;;		Unchanged: 0/0
  1517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1520 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1521 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1522 ;;Total ram usage:        2 bytes
  1523 ;; Hardware stack levels used:    1
  1524 ;; Hardware stack levels required when called:    9
  1525 ;; This function calls:
  1526 ;;		_CANisTxReady
  1527 ;;		_CANsendMessage
  1528 ;;		___xxtofl
  1529 ;;		_abs
  1530 ;;		_parallelo
  1531 ;; This function is called by:
  1532 ;;		_main
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535                           
  1536                           	psect	text1
  1537  00588C                     __ptext1:
  1538                           	opt stack 0
  1539  00588C                     _park_search:
  1540                           	opt stack 21
  1541                           
  1542                           ;parcheggio.c: 251: while ((activation == 1) && (PORTBbits.RB5 == 0)) {
  1543                           
  1544                           ;incstack = 0
  1545  00588C  D0DA               	goto	l747
  1546  00588E                     l8088:
  1547                           
  1548                           ;parcheggio.c: 252: parallelo();
  1549  00588E  EC11  F028         	call	_parallelo	;wreg free
  1550                           
  1551                           ;parcheggio.c: 253: if (sensor_distance[0] > 50) {
  1552  005892  5002               	movf	_sensor_distance+1,w,c	;volatile
  1553  005894  E104               	bnz	u10620
  1554  005896  0E33               	movlw	51
  1555  005898  5C01               	subwf	_sensor_distance,w,c	;volatile
  1556  00589A  A0D8               	btfss	status,0,c
  1557  00589C  D029               	goto	l749
  1558  00589E                     u10620:
  1559                           
  1560                           ;parcheggio.c: 254: if (request_sent == 0) {
  1561  00589E  B855               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1562  0058A0  D056               	goto	l8108
  1563  0058A2                     l8096:
  1564  0058A2  EC4C  F033         	call	_CANisTxReady	;wreg free
  1565  0058A6  0900               	iorlw	0
  1566  0058A8  B4D8               	btfsc	status,2,c
  1567  0058AA  D7FB               	goto	l8096
  1568                           
  1569                           ;parcheggio.c: 256: CANsendMessage(0b00000001000, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1570  0058AC  0E08               	movlw	8
  1571  0058AE  0100               	movlb	0	; () banked
  1572  0058B0  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1573  0058B2  0E00               	movlw	0
  1574  0058B4  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1575  0058B6  0E00               	movlw	0
  1576  0058B8  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1577  0058BA  0E00               	movlw	0
  1578  0058BC  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1579  0058BE  0E53               	movlw	low _data
  1580  0058C0  0100               	movlb	0	; () banked
  1581  0058C2  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1582  0058C4  0E01               	movlw	high _data
  1583  0058C6  0100               	movlb	0	; () banked
  1584  0058C8  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1585  0058CA  0E08               	movlw	8
  1586  0058CC  0100               	movlb	0	; () banked
  1587  0058CE  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1588  0058D0  0EFC               	movlw	252
  1589  0058D2  0100               	movlb	0	; () banked
  1590  0058D4  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1591  0058D6  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1592                           
  1593                           ;parcheggio.c: 257: request_sent = 1;
  1594  0058DA  8855               	bsf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1595                           
  1596                           ;parcheggio.c: 258: alignment_gap = 0;
  1597  0058DC  0E00               	movlw	0
  1598  0058DE  6E11               	movwf	_alignment_gap,c
  1599  0058E0  0E00               	movlw	0
  1600  0058E2  6E12               	movwf	_alignment_gap+1,c
  1601  0058E4  0E00               	movlw	0
  1602  0058E6  6E13               	movwf	_alignment_gap+2,c
  1603  0058E8  0E00               	movlw	0
  1604  0058EA  6E14               	movwf	_alignment_gap+3,c
  1605                           
  1606                           ;parcheggio.c: 259: LATBbits.LATB4 = 1;
  1607  0058EC  888A               	bsf	3978,4,c	;volatile
  1608                           
  1609                           ;parcheggio.c: 260: }
  1610                           ;parcheggio.c: 261: } else {
  1611  0058EE  D02F               	goto	l8108
  1612  0058F0                     l749:
  1613                           
  1614                           ;parcheggio.c: 262: LATBbits.LATB4 = 0;
  1615  0058F0  988A               	bcf	3978,4,c	;volatile
  1616                           
  1617                           ;parcheggio.c: 263: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  1618  0058F2  EE20  F003         	lfsr	2,_sensor_distance+2	;volatile
  1619  0058F6  CFDE F1B6          	movff	postinc2,??_park_search
  1620  0058FA  CFDD F1B7          	movff	postdec2,??_park_search+1
  1621  0058FE  0101               	movlb	1	; () banked
  1622  005900  1FB6               	comf	??_park_search& (0+255),f,b
  1623  005902  1FB7               	comf	(??_park_search+1)& (0+255),f,b
  1624  005904  4BB6               	infsnz	??_park_search& (0+255),f,b
  1625  005906  2BB7               	incf	(??_park_search+1)& (0+255),f,b
  1626  005908  5001               	movf	_sensor_distance,w,c	;volatile
  1627  00590A  0101               	movlb	1	; () banked
  1628  00590C  25B6               	addwf	??_park_search& (0+255),w,b
  1629  00590E  0100               	movlb	0	; () banked
  1630  005910  6F77               	movwf	abs@a& (0+255),b
  1631  005912  5002               	movf	_sensor_distance+1,w,c	;volatile
  1632  005914  0101               	movlb	1	; () banked
  1633  005916  21B7               	addwfc	(??_park_search+1)& (0+255),w,b
  1634  005918  0100               	movlb	0	; () banked
  1635  00591A  6F78               	movwf	(abs@a+1)& (0+255),b
  1636  00591C  EC20  F033         	call	_abs	;wreg free
  1637  005920  0100               	movlb	0	; () banked
  1638  005922  C077  F0CB         	movff	?_abs,___xxtofl@val
  1639  005926  0100               	movlb	0	; () banked
  1640  005928  C078  F0CC         	movff	?_abs+1,___xxtofl@val+1
  1641  00592C  0100               	movlb	0	; () banked
  1642  00592E  0E00               	movlw	0
  1643  005930  BFCC               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1644  005932  0EFF               	movlw	-1
  1645  005934  6FCD               	movwf	(___xxtofl@val+2)& (0+255),b
  1646  005936  6FCE               	movwf	(___xxtofl@val+3)& (0+255),b
  1647  005938  0E01               	movlw	1
  1648  00593A  EC7C  F02A         	call	___xxtofl
  1649  00593E  C0CB  F011         	movff	?___xxtofl,_alignment_gap
  1650  005942  C0CC  F012         	movff	?___xxtofl+1,_alignment_gap+1
  1651  005946  C0CD  F013         	movff	?___xxtofl+2,_alignment_gap+2
  1652  00594A  C0CE  F014         	movff	?___xxtofl+3,_alignment_gap+3
  1653  00594E                     l8108:
  1654                           
  1655                           ;parcheggio.c: 264: }
  1656                           ;parcheggio.c: 265: if ((sensor_distance[0] < 50) && (request_sent == 1)&&(sensor_distan
      +                          ce[1] < 50)) {
  1657  00594E  5002               	movf	_sensor_distance+1,w,c	;volatile
  1658  005950  E128               	bnz	l8120
  1659  005952  0E32               	movlw	50
  1660  005954  5C01               	subwf	_sensor_distance,w,c	;volatile
  1661  005956  A0D8               	btfss	status,0,c
  1662  005958  A855               	btfss	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1663  00595A  D023               	goto	l8120
  1664  00595C  5004               	movf	_sensor_distance+3,w,c	;volatile
  1665  00595E  E121               	bnz	l8120
  1666  005960  0E32               	movlw	50
  1667  005962  5C03               	subwf	_sensor_distance+2,w,c	;volatile
  1668  005964  B0D8               	btfsc	status,0,c
  1669  005966  D01D               	goto	l8120
  1670                           
  1671                           ;parcheggio.c: 266: request_sent = 0;
  1672  005968  9855               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1673  00596A                     l8116:
  1674  00596A  EC4C  F033         	call	_CANisTxReady	;wreg free
  1675  00596E  0900               	iorlw	0
  1676  005970  B4D8               	btfsc	status,2,c
  1677  005972  D7FB               	goto	l8116
  1678                           
  1679                           ;parcheggio.c: 268: CANsendMessage(0b00000000111, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1680  005974  0E07               	movlw	7
  1681  005976  0100               	movlb	0	; () banked
  1682  005978  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1683  00597A  0E00               	movlw	0
  1684  00597C  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1685  00597E  0E00               	movlw	0
  1686  005980  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1687  005982  0E00               	movlw	0
  1688  005984  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1689  005986  0E53               	movlw	low _data
  1690  005988  0100               	movlb	0	; () banked
  1691  00598A  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1692  00598C  0E01               	movlw	high _data
  1693  00598E  0100               	movlb	0	; () banked
  1694  005990  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1695  005992  0E08               	movlw	8
  1696  005994  0100               	movlb	0	; () banked
  1697  005996  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1698  005998  0EFC               	movlw	252
  1699  00599A  0100               	movlb	0	; () banked
  1700  00599C  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1701  00599E  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1702  0059A2                     l8120:
  1703                           
  1704                           ;parcheggio.c: 269: }
  1705                           ;parcheggio.c: 270: if (distance_received == 1) {
  1706  0059A2  AA54               	btfss	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1707  0059A4  D04E               	goto	l747
  1708                           
  1709                           ;parcheggio.c: 271: if (distance_average > 65) {
  1710  0059A6  501A               	movf	_distance_average+1,w,c	;volatile
  1711  0059A8  E104               	bnz	u10700
  1712  0059AA  0E42               	movlw	66
  1713  0059AC  5C19               	subwf	_distance_average,w,c	;volatile
  1714  0059AE  A0D8               	btfss	status,0,c
  1715  0059B0  D046               	goto	l760
  1716  0059B2                     u10700:
  1717                           
  1718                           ;parcheggio.c: 272: PORTBbits.RB5 = 1;
  1719  0059B2  8A81               	bsf	3969,5,c	;volatile
  1720                           
  1721                           ;parcheggio.c: 273: data[0] = 1;
  1722  0059B4  0E01               	movlw	1
  1723  0059B6  0101               	movlb	1	; () banked
  1724  0059B8  6F53               	movwf	_data& (0+255),b
  1725                           
  1726                           ; BSR set to: 1
  1727                           ;parcheggio.c: 274: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  1728  0059BA  0E0B               	movlw	11
  1729  0059BC  0100               	movlb	0	; () banked
  1730  0059BE  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1731  0059C0  0E00               	movlw	0
  1732  0059C2  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1733  0059C4  0E00               	movlw	0
  1734  0059C6  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1735  0059C8  0E00               	movlw	0
  1736  0059CA  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1737  0059CC  0E53               	movlw	low _data
  1738  0059CE  0100               	movlb	0	; () banked
  1739  0059D0  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1740  0059D2  0E01               	movlw	high _data
  1741  0059D4  0100               	movlb	0	; () banked
  1742  0059D6  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1743  0059D8  0E01               	movlw	1
  1744  0059DA  0100               	movlb	0	; () banked
  1745  0059DC  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1746  0059DE  0EBC               	movlw	188
  1747  0059E0  0100               	movlb	0	; () banked
  1748  0059E2  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1749  0059E4  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1750                           
  1751                           ;parcheggio.c: 275: if ((request_sent1 == 0)&&(sensor_distance[0] < 40)) {
  1752  0059E8  BA55               	btfsc	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1753  0059EA  D02B               	goto	l747
  1754  0059EC  5002               	movf	_sensor_distance+1,w,c	;volatile
  1755  0059EE  E129               	bnz	l747
  1756  0059F0  0E28               	movlw	40
  1757  0059F2  5C01               	subwf	_sensor_distance,w,c	;volatile
  1758  0059F4  B0D8               	btfsc	status,0,c
  1759  0059F6  D025               	goto	l747
  1760                           
  1761                           ;parcheggio.c: 276: data_test[0] = 50;
  1762  0059F8  0E32               	movlw	50
  1763  0059FA  0101               	movlb	1	; () banked
  1764  0059FC  6F7B               	movwf	_data_test& (0+255),b
  1765                           
  1766                           ; BSR set to: 1
  1767                           ;parcheggio.c: 277: asd = 1;
  1768  0059FE  8254               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  1769  005A00                     l8138:
  1770  005A00  EC4C  F033         	call	_CANisTxReady	;wreg free
  1771  005A04  0900               	iorlw	0
  1772  005A06  B4D8               	btfsc	status,2,c
  1773  005A08  D7FB               	goto	l8138
  1774                           
  1775                           ;parcheggio.c: 279: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1776  005A0A  0E0D               	movlw	13
  1777  005A0C  0100               	movlb	0	; () banked
  1778  005A0E  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1779  005A10  0E00               	movlw	0
  1780  005A12  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1781  005A14  0E00               	movlw	0
  1782  005A16  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1783  005A18  0E00               	movlw	0
  1784  005A1A  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1785  005A1C  0E7B               	movlw	low _data_test
  1786  005A1E  0100               	movlb	0	; () banked
  1787  005A20  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1788  005A22  0E01               	movlw	high _data_test
  1789  005A24  0100               	movlb	0	; () banked
  1790  005A26  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1791  005A28  0E08               	movlw	8
  1792  005A2A  0100               	movlb	0	; () banked
  1793  005A2C  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1794  005A2E  0EBC               	movlw	188
  1795  005A30  0100               	movlb	0	; () banked
  1796  005A32  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1797  005A34  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1798                           
  1799                           ;parcheggio.c: 281: distance_received1 = 0;
  1800  005A38  9C54               	bcf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
  1801                           
  1802                           ;parcheggio.c: 282: request_sent1 = 1;
  1803  005A3A  8A55               	bsf	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1804                           
  1805                           ;parcheggio.c: 283: }
  1806                           ;parcheggio.c: 284: } else {
  1807  005A3C  D002               	goto	l747
  1808  005A3E                     l760:
  1809                           
  1810                           ;parcheggio.c: 285: distance_received = 0;
  1811  005A3E  9A54               	bcf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1812                           
  1813                           ;parcheggio.c: 286: PORTBbits.RB5 = 0;
  1814  005A40  9A81               	bcf	3969,5,c	;volatile
  1815  005A42                     l747:
  1816  005A42  A054               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1817  005A44  0012               	return	
  1818  005A46  BA81               	btfsc	3969,5,c	;volatile
  1819  005A48  0012               	return	
  1820  005A4A  D721               	goto	l8088
  1821  005A4C                     __end_of_park_search:
  1822                           	opt stack 0
  1823                           tblptru	equ	0xFF8
  1824                           tblptrh	equ	0xFF7
  1825                           tblptrl	equ	0xFF6
  1826                           tablat	equ	0xFF5
  1827                           postinc0	equ	0xFEE
  1828                           wreg	equ	0xFE8
  1829                           postdec1	equ	0xFE5
  1830                           fsr1l	equ	0xFE1
  1831                           postinc2	equ	0xFDE
  1832                           postdec2	equ	0xFDD
  1833                           status	equ	0xFD8
  1834                           
  1835 ;; *************** function _park_routine *****************
  1836 ;; Defined at:
  1837 ;;		line 292 in file "parcheggio.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;		None
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;		None
  1842 ;; Return value:  Size  Location     Type
  1843 ;;		None               void
  1844 ;; Registers used:
  1845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1852 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1853 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1854 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  1855 ;;Total ram usage:       12 bytes
  1856 ;; Hardware stack levels used:    1
  1857 ;; Hardware stack levels required when called:    9
  1858 ;; This function calls:
  1859 ;;		_CANisTxReady
  1860 ;;		_CANsendMessage
  1861 ;;		___fladd
  1862 ;;		___flneg
  1863 ;;		___fltol
  1864 ;;		___xxtofl
  1865 ;;		_can_send
  1866 ;;		_delay_ms
  1867 ;;		_delay_s
  1868 ;;		_matematica
  1869 ;;		_parallelo
  1870 ;; This function is called by:
  1871 ;;		_main
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           	psect	text2
  1876  003A58                     __ptext2:
  1877                           	opt stack 0
  1878  003A58                     _park_routine:
  1879                           	opt stack 21
  1880                           
  1881                           ;parcheggio.c: 293: data_correction[0] = 0;
  1882                           
  1883                           ;incstack = 0
  1884  003A58  0E00               	movlw	0
  1885  003A5A  0101               	movlb	1	; () banked
  1886  003A5C  6F63               	movwf	_data_correction& (0+255),b
  1887                           
  1888                           ;parcheggio.c: 294: while ((asd == 1)&&(PORTBbits.RB5 == 1) && (activation == 1)) {
  1889  003A5E  D03E               	goto	l8164
  1890  003A60                     l8150:
  1891                           
  1892                           ;parcheggio.c: 295: delay_ms(200);
  1893  003A60  0E00               	movlw	0
  1894  003A62  0100               	movlb	0	; () banked
  1895  003A64  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1896  003A66  0EC8               	movlw	200
  1897  003A68  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  1898  003A6A  ECCC  F032         	call	_delay_ms	;wreg free
  1899                           
  1900                           ;parcheggio.c: 296: PORTBbits.RB6 = ~PORTBbits.RB6;
  1901  003A6E  AC81               	btfss	3969,6,c	;volatile
  1902  003A70  D002               	goto	u10760
  1903  003A72  0E01               	movlw	1
  1904  003A74  D001               	goto	u10766
  1905  003A76                     u10760:
  1906  003A76  0E00               	movlw	0
  1907  003A78                     u10766:
  1908  003A78  0AFF               	xorlw	255
  1909  003A7A  0101               	movlb	1	; () banked
  1910  003A7C  6FD8               	movwf	??_park_routine& (0+255),b
  1911  003A7E  0101               	movlb	1	; () banked
  1912  003A80  3BD8               	swapf	??_park_routine& (0+255),f,b
  1913  003A82  47D8               	rlncf	??_park_routine& (0+255),f,b
  1914  003A84  47D8               	rlncf	??_park_routine& (0+255),f,b
  1915  003A86  5081               	movf	3969,w,c	;volatile
  1916  003A88  0101               	movlb	1	; () banked
  1917  003A8A  19D8               	xorwf	??_park_routine& (0+255),w,b
  1918  003A8C  0BBF               	andlw	-65
  1919  003A8E  19D8               	xorwf	??_park_routine& (0+255),w,b
  1920  003A90  6E81               	movwf	3969,c	;volatile
  1921                           
  1922                           ; BSR set to: 1
  1923                           ;parcheggio.c: 297: parallelo();
  1924  003A92  EC11  F028         	call	_parallelo	;wreg free
  1925                           
  1926                           ;parcheggio.c: 298: if (data_correction[0] > 50) {
  1927  003A96  0E32               	movlw	50
  1928  003A98  0101               	movlb	1	; () banked
  1929  003A9A  6563               	cpfsgt	_data_correction& (0+255),b
  1930  003A9C  D003               	goto	l8160
  1931                           
  1932                           ; BSR set to: 1
  1933                           ;parcheggio.c: 299: data_correction[0] = 0;
  1934  003A9E  0E00               	movlw	0
  1935  003AA0  0101               	movlb	1	; () banked
  1936  003AA2  6F63               	movwf	_data_correction& (0+255),b
  1937  003AA4                     l8160:
  1938  003AA4  EC4C  F033         	call	_CANisTxReady	;wreg free
  1939  003AA8  0900               	iorlw	0
  1940  003AAA  B4D8               	btfsc	status,2,c
  1941  003AAC  D7FB               	goto	l8160
  1942                           
  1943                           ;parcheggio.c: 302: CANsendMessage(0b00000001110, data_correction, 8, CAN_CONFIG_STD_MSG
      +                           & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1944  003AAE  0E0E               	movlw	14
  1945  003AB0  0100               	movlb	0	; () banked
  1946  003AB2  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1947  003AB4  0E00               	movlw	0
  1948  003AB6  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1949  003AB8  0E00               	movlw	0
  1950  003ABA  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1951  003ABC  0E00               	movlw	0
  1952  003ABE  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1953  003AC0  0E63               	movlw	low _data_correction
  1954  003AC2  0100               	movlb	0	; () banked
  1955  003AC4  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1956  003AC6  0E01               	movlw	high _data_correction
  1957  003AC8  0100               	movlb	0	; () banked
  1958  003ACA  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1959  003ACC  0E08               	movlw	8
  1960  003ACE  0100               	movlb	0	; () banked
  1961  003AD0  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1962  003AD2  0EBC               	movlw	188
  1963  003AD4  0100               	movlb	0	; () banked
  1964  003AD6  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1965  003AD8  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1966  003ADC                     l8164:
  1967  003ADC  B254               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  1968  003ADE  AA81               	btfss	3969,5,c	;volatile
  1969  003AE0  D002               	goto	l780
  1970  003AE2  B054               	btfsc	_activation/(0+8),_activation& (0+7),c	;volatile
  1971  003AE4  D7BD               	goto	l8150
  1972  003AE6                     l780:
  1973                           
  1974                           ;parcheggio.c: 303: }
  1975                           ;parcheggio.c: 304: if ((PORTBbits.RB5 == 1) && (activation == 1)) {
  1976  003AE6  BA81               	btfsc	3969,5,c	;volatile
  1977  003AE8  A054               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1978  003AEA  D02E               	goto	l8184
  1979                           
  1980                           ;parcheggio.c: 305: PORTBbits.RB6 = 0;
  1981  003AEC  9C81               	bcf	3969,6,c	;volatile
  1982                           
  1983                           ;parcheggio.c: 306: data[0] = 2;
  1984  003AEE  0E02               	movlw	2
  1985  003AF0  0101               	movlb	1	; () banked
  1986  003AF2  6F53               	movwf	_data& (0+255),b
  1987                           
  1988                           ; BSR set to: 1
  1989                           ;parcheggio.c: 307: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  1990  003AF4  0E0B               	movlw	11
  1991  003AF6  0100               	movlb	0	; () banked
  1992  003AF8  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1993  003AFA  0E00               	movlw	0
  1994  003AFC  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1995  003AFE  0E00               	movlw	0
  1996  003B00  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1997  003B02  0E00               	movlw	0
  1998  003B04  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1999  003B06  0E53               	movlw	low _data
  2000  003B08  0100               	movlb	0	; () banked
  2001  003B0A  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2002  003B0C  0E01               	movlw	high _data
  2003  003B0E  0100               	movlb	0	; () banked
  2004  003B10  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2005  003B12  0E01               	movlw	1
  2006  003B14  0100               	movlb	0	; () banked
  2007  003B16  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2008  003B18  0EBC               	movlw	188
  2009  003B1A  0100               	movlb	0	; () banked
  2010  003B1C  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2011  003B1E  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2012                           
  2013                           ;parcheggio.c: 308: }
  2014                           ;parcheggio.c: 309: while ((start_operation != 1)&&(activation == 1)) {
  2015  003B22  D012               	goto	l8184
  2016  003B24                     l783:
  2017                           
  2018                           ;parcheggio.c: 310: if (first == 0) {
  2019  003B24  B255               	btfsc	_first/(0+8),_first& (0+7),c	;volatile
  2020  003B26  D010               	goto	l8184
  2021                           
  2022                           ;parcheggio.c: 311: set_speed = 0;
  2023  003B28  0E00               	movlw	0
  2024  003B2A  6E26               	movwf	_set_speed+1,c
  2025  003B2C  0E00               	movlw	0
  2026  003B2E  6E25               	movwf	_set_speed,c
  2027                           
  2028                           ;parcheggio.c: 312: data_steering[0] = 90;
  2029  003B30  0E5A               	movlw	90
  2030  003B32  0101               	movlb	1	; () banked
  2031  003B34  6F73               	movwf	_data_steering& (0+255),b
  2032                           
  2033                           ;parcheggio.c: 313: data_brake [0] = 0;
  2034  003B36  0E00               	movlw	0
  2035  003B38  0101               	movlb	1	; () banked
  2036  003B3A  6F5B               	movwf	_data_brake& (0+255),b
  2037                           
  2038                           ;parcheggio.c: 314: data_brake [1] = 1;
  2039  003B3C  0E01               	movlw	1
  2040  003B3E  0101               	movlb	1	; () banked
  2041  003B40  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2042                           
  2043                           ; BSR set to: 1
  2044                           ;parcheggio.c: 315: can_send();
  2045  003B42  ECEE  F02D         	call	_can_send	;wreg free
  2046                           
  2047                           ;parcheggio.c: 316: first = 1;
  2048  003B46  8255               	bsf	_first/(0+8),_first& (0+7),c	;volatile
  2049  003B48                     l8184:
  2050  003B48  AC55               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2051  003B4A  A054               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  2052  003B4C  D1BA               	goto	l8294
  2053  003B4E  D7EA               	goto	l783
  2054  003B50                     l789:
  2055                           
  2056                           ;parcheggio.c: 320: LATBbits.LATB4 = 1;
  2057  003B50  888A               	bsf	3978,4,c	;volatile
  2058                           
  2059                           ;parcheggio.c: 322: bordo = (sensor_distance[0] + sensor_distance[1]) / 2;
  2060  003B52  5001               	movf	_sensor_distance,w,c	;volatile
  2061  003B54  2403               	addwf	_sensor_distance+2,w,c	;volatile
  2062  003B56  0101               	movlb	1	; () banked
  2063  003B58  6FD8               	movwf	??_park_routine& (0+255),b
  2064  003B5A  5002               	movf	_sensor_distance+1,w,c	;volatile
  2065  003B5C  2004               	addwfc	_sensor_distance+3,w,c	;volatile
  2066  003B5E  0101               	movlb	1	; () banked
  2067  003B60  6FD9               	movwf	(??_park_routine+1)& (0+255),b
  2068  003B62  90D8               	bcf	status,0,c
  2069  003B64  0101               	movlb	1	; () banked
  2070  003B66  31D9               	rrcf	(??_park_routine+1)& (0+255),w,b
  2071  003B68  0101               	movlb	1	; () banked
  2072  003B6A  6FDB               	movwf	(??_park_routine+3)& (0+255),b
  2073  003B6C  0101               	movlb	1	; () banked
  2074  003B6E  31D8               	rrcf	??_park_routine& (0+255),w,b
  2075  003B70  0101               	movlb	1	; () banked
  2076  003B72  6FDA               	movwf	(??_park_routine+2)& (0+255),b
  2077  003B74  C1DA  F0CB         	movff	??_park_routine+2,___xxtofl@val
  2078  003B78  C1DB  F0CC         	movff	??_park_routine+3,___xxtofl@val+1
  2079  003B7C  0100               	movlb	0	; () banked
  2080  003B7E  6BCD               	clrf	(___xxtofl@val+2)& (0+255),b
  2081  003B80  6BCE               	clrf	(___xxtofl@val+3)& (0+255),b
  2082  003B82  0E00               	movlw	0
  2083  003B84  EC7C  F02A         	call	___xxtofl
  2084  003B88  C0CB  F12C         	movff	?___xxtofl,_bordo	;volatile
  2085  003B8C  C0CC  F12D         	movff	?___xxtofl+1,_bordo+1	;volatile
  2086  003B90  C0CD  F12E         	movff	?___xxtofl+2,_bordo+2	;volatile
  2087  003B94  C0CE  F12F         	movff	?___xxtofl+3,_bordo+3	;volatile
  2088                           
  2089                           ;parcheggio.c: 323: matematica();
  2090  003B98  EC3A  F013         	call	_matematica	;wreg free
  2091                           
  2092                           ;parcheggio.c: 324: set_speed = 0;
  2093  003B9C  0E00               	movlw	0
  2094  003B9E  6E26               	movwf	_set_speed+1,c
  2095  003BA0  0E00               	movlw	0
  2096  003BA2  6E25               	movwf	_set_speed,c
  2097                           
  2098                           ;parcheggio.c: 325: data_steering[0] = 90;
  2099  003BA4  0E5A               	movlw	90
  2100  003BA6  0101               	movlb	1	; () banked
  2101  003BA8  6F73               	movwf	_data_steering& (0+255),b
  2102                           
  2103                           ; BSR set to: 1
  2104                           ;parcheggio.c: 326: data_brake [0] = 0;
  2105  003BAA  0E00               	movlw	0
  2106  003BAC  0101               	movlb	1	; () banked
  2107  003BAE  6F5B               	movwf	_data_brake& (0+255),b
  2108                           
  2109                           ; BSR set to: 1
  2110                           ;parcheggio.c: 327: data_brake [1] = 1;
  2111  003BB0  0E01               	movlw	1
  2112  003BB2  0101               	movlb	1	; () banked
  2113  003BB4  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2114                           
  2115                           ; BSR set to: 1
  2116                           ;parcheggio.c: 328: can_send();
  2117  003BB6  ECEE  F02D         	call	_can_send	;wreg free
  2118                           
  2119                           ;parcheggio.c: 329: delay_s(1);
  2120  003BBA  0E01               	movlw	1
  2121  003BBC  EC36  F033         	call	_delay_s
  2122                           
  2123                           ;parcheggio.c: 331: data_brake [0] = 3;
  2124  003BC0  0E03               	movlw	3
  2125  003BC2  0101               	movlb	1	; () banked
  2126  003BC4  6F5B               	movwf	_data_brake& (0+255),b
  2127                           
  2128                           ; BSR set to: 1
  2129                           ;parcheggio.c: 332: data_brake [1] = 1;
  2130  003BC6  0E01               	movlw	1
  2131  003BC8  0101               	movlb	1	; () banked
  2132  003BCA  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2133                           
  2134                           ; BSR set to: 1
  2135                           ;parcheggio.c: 334: set_speed = 1000;
  2136  003BCC  0E03               	movlw	3
  2137  003BCE  6E26               	movwf	_set_speed+1,c
  2138  003BD0  0EE8               	movlw	232
  2139  003BD2  6E25               	movwf	_set_speed,c
  2140                           
  2141                           ; BSR set to: 1
  2142                           ;parcheggio.c: 335: dir = 0;
  2143  003BD4  9654               	bcf	_dir/(0+8),_dir& (0+7),c
  2144                           
  2145                           ; BSR set to: 1
  2146                           ;parcheggio.c: 336: data_steering[0] = 90;
  2147  003BD6  0E5A               	movlw	90
  2148  003BD8  0101               	movlb	1	; () banked
  2149  003BDA  6F73               	movwf	_data_steering& (0+255),b
  2150                           
  2151                           ; BSR set to: 1
  2152                           ;parcheggio.c: 337: data_test[0] = ((50 + Pminimo + 5)-(n + 15));
  2153  003BDC  0E00               	movlw	0
  2154  003BDE  0100               	movlb	0	; () banked
  2155  003BE0  6FAD               	movwf	___fladd@a& (0+255),b
  2156  003BE2  0E00               	movlw	0
  2157  003BE4  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2158  003BE6  0E70               	movlw	112
  2159  003BE8  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2160  003BEA  0E41               	movlw	65
  2161  003BEC  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2162  003BEE  C138  F0A9         	movff	_n,___fladd@b
  2163  003BF2  C139  F0AA         	movff	_n+1,___fladd@b+1
  2164  003BF6  C13A  F0AB         	movff	_n+2,___fladd@b+2
  2165  003BFA  C13B  F0AC         	movff	_n+3,___fladd@b+3
  2166  003BFE  EC85  F018         	call	___fladd	;wreg free
  2167  003C02  C0A9  F0BD         	movff	?___fladd,___flneg@f1
  2168  003C06  C0AA  F0BE         	movff	?___fladd+1,___flneg@f1+1
  2169  003C0A  C0AB  F0BF         	movff	?___fladd+2,___flneg@f1+2
  2170  003C0E  C0AC  F0C0         	movff	?___fladd+3,___flneg@f1+3
  2171  003C12  ECE9  F032         	call	___flneg	;wreg free
  2172  003C16  C0BD  F1DC         	movff	?___flneg,_park_routine$3744
  2173  003C1A  C0BE  F1DD         	movff	?___flneg+1,_park_routine$3744+1
  2174  003C1E  C0BF  F1DE         	movff	?___flneg+2,_park_routine$3744+2
  2175  003C22  C0C0  F1DF         	movff	?___flneg+3,_park_routine$3744+3
  2176                           
  2177                           ;parcheggio.c: 337: data_test[0] = ((50 + Pminimo + 5)-(n + 15));
  2178  003C26  C120  F0AD         	movff	_Pminimo,___fladd@a
  2179  003C2A  C121  F0AE         	movff	_Pminimo+1,___fladd@a+1
  2180  003C2E  C122  F0AF         	movff	_Pminimo+2,___fladd@a+2
  2181  003C32  C123  F0B0         	movff	_Pminimo+3,___fladd@a+3
  2182  003C36  C1DC  F0A9         	movff	_park_routine$3744,___fladd@b
  2183  003C3A  C1DD  F0AA         	movff	_park_routine$3744+1,___fladd@b+1
  2184  003C3E  C1DE  F0AB         	movff	_park_routine$3744+2,___fladd@b+2
  2185  003C42  C1DF  F0AC         	movff	_park_routine$3744+3,___fladd@b+3
  2186  003C46  EC85  F018         	call	___fladd	;wreg free
  2187  003C4A  C0A9  F1E0         	movff	?___fladd,_park_routine$3745
  2188  003C4E  C0AA  F1E1         	movff	?___fladd+1,_park_routine$3745+1
  2189  003C52  C0AB  F1E2         	movff	?___fladd+2,_park_routine$3745+2
  2190  003C56  C0AC  F1E3         	movff	?___fladd+3,_park_routine$3745+3
  2191                           
  2192                           ;parcheggio.c: 337: data_test[0] = ((50 + Pminimo + 5)-(n + 15));
  2193  003C5A  0E00               	movlw	0
  2194  003C5C  0100               	movlb	0	; () banked
  2195  003C5E  6FAD               	movwf	___fladd@a& (0+255),b
  2196  003C60  0E00               	movlw	0
  2197  003C62  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2198  003C64  0E5C               	movlw	92
  2199  003C66  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2200  003C68  0E42               	movlw	66
  2201  003C6A  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2202  003C6C  C1E0  F0A9         	movff	_park_routine$3745,___fladd@b
  2203  003C70  C1E1  F0AA         	movff	_park_routine$3745+1,___fladd@b+1
  2204  003C74  C1E2  F0AB         	movff	_park_routine$3745+2,___fladd@b+2
  2205  003C78  C1E3  F0AC         	movff	_park_routine$3745+3,___fladd@b+3
  2206  003C7C  EC85  F018         	call	___fladd	;wreg free
  2207  003C80  C0A9  F0C1         	movff	?___fladd,___fltol@f1
  2208  003C84  C0AA  F0C2         	movff	?___fladd+1,___fltol@f1+1
  2209  003C88  C0AB  F0C3         	movff	?___fladd+2,___fltol@f1+2
  2210  003C8C  C0AC  F0C4         	movff	?___fladd+3,___fltol@f1+3
  2211  003C90  ECA6  F02F         	call	___fltol	;wreg free
  2212  003C94  0100               	movlb	0	; () banked
  2213  003C96  51C1               	movf	?___fltol& (0+255),w,b
  2214  003C98  0101               	movlb	1	; () banked
  2215  003C9A  6F7B               	movwf	_data_test& (0+255),b
  2216                           
  2217                           ; BSR set to: 1
  2218                           ;parcheggio.c: 338: asd = 1;
  2219  003C9C  8254               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2220                           
  2221                           ; BSR set to: 1
  2222                           ;parcheggio.c: 339: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2223  003C9E  0E0D               	movlw	13
  2224  003CA0  0100               	movlb	0	; () banked
  2225  003CA2  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2226  003CA4  0E00               	movlw	0
  2227  003CA6  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2228  003CA8  0E00               	movlw	0
  2229  003CAA  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2230  003CAC  0E00               	movlw	0
  2231  003CAE  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2232  003CB0  0E7B               	movlw	low _data_test
  2233  003CB2  0100               	movlb	0	; () banked
  2234  003CB4  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2235  003CB6  0E01               	movlw	high _data_test
  2236  003CB8  0100               	movlb	0	; () banked
  2237  003CBA  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2238  003CBC  0E08               	movlw	8
  2239  003CBE  0100               	movlb	0	; () banked
  2240  003CC0  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2241  003CC2  0EBC               	movlw	188
  2242  003CC4  0100               	movlb	0	; () banked
  2243  003CC6  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2244  003CC8  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2245                           
  2246                           ;parcheggio.c: 340: can_send();
  2247  003CCC  ECEE  F02D         	call	_can_send	;wreg free
  2248  003CD0                     l790:
  2249  003CD0  B254               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2250  003CD2  D7FE               	goto	l790
  2251                           
  2252                           ;parcheggio.c: 343: set_speed = 0;
  2253  003CD4  0E00               	movlw	0
  2254  003CD6  6E26               	movwf	_set_speed+1,c
  2255  003CD8  0E00               	movlw	0
  2256  003CDA  6E25               	movwf	_set_speed,c
  2257                           
  2258                           ;parcheggio.c: 344: data_steering[0] = 90;
  2259  003CDC  0E5A               	movlw	90
  2260  003CDE  0101               	movlb	1	; () banked
  2261  003CE0  6F73               	movwf	_data_steering& (0+255),b
  2262                           
  2263                           ;parcheggio.c: 345: data_brake [0] = 0;
  2264  003CE2  0E00               	movlw	0
  2265  003CE4  0101               	movlb	1	; () banked
  2266  003CE6  6F5B               	movwf	_data_brake& (0+255),b
  2267                           
  2268                           ;parcheggio.c: 346: data_brake [1] = 1;
  2269  003CE8  0E01               	movlw	1
  2270  003CEA  0101               	movlb	1	; () banked
  2271  003CEC  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2272                           
  2273                           ; BSR set to: 1
  2274                           ;parcheggio.c: 347: can_send();
  2275  003CEE  ECEE  F02D         	call	_can_send	;wreg free
  2276                           
  2277                           ;parcheggio.c: 348: delay_s(1);
  2278  003CF2  0E01               	movlw	1
  2279  003CF4  EC36  F033         	call	_delay_s
  2280                           
  2281                           ;parcheggio.c: 350: data_brake [0] = 3;
  2282  003CF8  0E03               	movlw	3
  2283  003CFA  0101               	movlb	1	; () banked
  2284  003CFC  6F5B               	movwf	_data_brake& (0+255),b
  2285                           
  2286                           ; BSR set to: 1
  2287                           ;parcheggio.c: 351: data_brake [1] = 1;
  2288  003CFE  0E01               	movlw	1
  2289  003D00  0101               	movlb	1	; () banked
  2290  003D02  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2291                           
  2292                           ; BSR set to: 1
  2293                           ;parcheggio.c: 352: set_speed = 1000;
  2294  003D04  0E03               	movlw	3
  2295  003D06  6E26               	movwf	_set_speed+1,c
  2296  003D08  0EE8               	movlw	232
  2297  003D0A  6E25               	movwf	_set_speed,c
  2298                           
  2299                           ; BSR set to: 1
  2300                           ;parcheggio.c: 353: dir = 0;
  2301  003D0C  9654               	bcf	_dir/(0+8),_dir& (0+7),c
  2302                           
  2303                           ; BSR set to: 1
  2304                           ;parcheggio.c: 354: data_steering[0] = 180;
  2305  003D0E  0EB4               	movlw	180
  2306  003D10  0101               	movlb	1	; () banked
  2307  003D12  6F73               	movwf	_data_steering& (0+255),b
  2308                           
  2309                           ; BSR set to: 1
  2310                           ;parcheggio.c: 355: data_test[0] = prima_sterzata;
  2311  003D14  C140  F0C1         	movff	_prima_sterzata,___fltol@f1
  2312  003D18  C141  F0C2         	movff	_prima_sterzata+1,___fltol@f1+1
  2313  003D1C  C142  F0C3         	movff	_prima_sterzata+2,___fltol@f1+2
  2314  003D20  C143  F0C4         	movff	_prima_sterzata+3,___fltol@f1+3
  2315  003D24  ECA6  F02F         	call	___fltol	;wreg free
  2316  003D28  0100               	movlb	0	; () banked
  2317  003D2A  51C1               	movf	?___fltol& (0+255),w,b
  2318  003D2C  0101               	movlb	1	; () banked
  2319  003D2E  6F7B               	movwf	_data_test& (0+255),b
  2320                           
  2321                           ; BSR set to: 1
  2322                           ;parcheggio.c: 356: asd = 1;
  2323  003D30  8254               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2324                           
  2325                           ; BSR set to: 1
  2326                           ;parcheggio.c: 357: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2327  003D32  0E0D               	movlw	13
  2328  003D34  0100               	movlb	0	; () banked
  2329  003D36  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2330  003D38  0E00               	movlw	0
  2331  003D3A  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2332  003D3C  0E00               	movlw	0
  2333  003D3E  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2334  003D40  0E00               	movlw	0
  2335  003D42  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2336  003D44  0E7B               	movlw	low _data_test
  2337  003D46  0100               	movlb	0	; () banked
  2338  003D48  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2339  003D4A  0E01               	movlw	high _data_test
  2340  003D4C  0100               	movlb	0	; () banked
  2341  003D4E  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2342  003D50  0E08               	movlw	8
  2343  003D52  0100               	movlb	0	; () banked
  2344  003D54  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2345  003D56  0EBC               	movlw	188
  2346  003D58  0100               	movlb	0	; () banked
  2347  003D5A  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2348  003D5C  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2349                           
  2350                           ;parcheggio.c: 358: can_send();
  2351  003D60  ECEE  F02D         	call	_can_send	;wreg free
  2352  003D64                     l793:
  2353  003D64  B254               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2354  003D66  D7FE               	goto	l793
  2355                           
  2356                           ;parcheggio.c: 360: set_speed = 1000;
  2357  003D68  0E03               	movlw	3
  2358  003D6A  6E26               	movwf	_set_speed+1,c
  2359  003D6C  0EE8               	movlw	232
  2360  003D6E  6E25               	movwf	_set_speed,c
  2361                           
  2362                           ;parcheggio.c: 361: data_steering[0] = 0;
  2363  003D70  0E00               	movlw	0
  2364  003D72  0101               	movlb	1	; () banked
  2365  003D74  6F73               	movwf	_data_steering& (0+255),b
  2366                           
  2367                           ; BSR set to: 1
  2368                           ;parcheggio.c: 362: asd = 1;
  2369  003D76  8254               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2370                           
  2371                           ; BSR set to: 1
  2372                           ;parcheggio.c: 363: data_test[0] = prima_sterzata + 9;
  2373  003D78  0E00               	movlw	0
  2374  003D7A  0100               	movlb	0	; () banked
  2375  003D7C  6FAD               	movwf	___fladd@a& (0+255),b
  2376  003D7E  0E00               	movlw	0
  2377  003D80  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2378  003D82  0E10               	movlw	16
  2379  003D84  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2380  003D86  0E41               	movlw	65
  2381  003D88  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2382  003D8A  C140  F0A9         	movff	_prima_sterzata,___fladd@b
  2383  003D8E  C141  F0AA         	movff	_prima_sterzata+1,___fladd@b+1
  2384  003D92  C142  F0AB         	movff	_prima_sterzata+2,___fladd@b+2
  2385  003D96  C143  F0AC         	movff	_prima_sterzata+3,___fladd@b+3
  2386  003D9A  EC85  F018         	call	___fladd	;wreg free
  2387  003D9E  C0A9  F0C1         	movff	?___fladd,___fltol@f1
  2388  003DA2  C0AA  F0C2         	movff	?___fladd+1,___fltol@f1+1
  2389  003DA6  C0AB  F0C3         	movff	?___fladd+2,___fltol@f1+2
  2390  003DAA  C0AC  F0C4         	movff	?___fladd+3,___fltol@f1+3
  2391  003DAE  ECA6  F02F         	call	___fltol	;wreg free
  2392  003DB2  0100               	movlb	0	; () banked
  2393  003DB4  51C1               	movf	?___fltol& (0+255),w,b
  2394  003DB6  0101               	movlb	1	; () banked
  2395  003DB8  6F7B               	movwf	_data_test& (0+255),b
  2396                           
  2397                           ; BSR set to: 1
  2398                           ;parcheggio.c: 364: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2399  003DBA  0E0D               	movlw	13
  2400  003DBC  0100               	movlb	0	; () banked
  2401  003DBE  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2402  003DC0  0E00               	movlw	0
  2403  003DC2  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2404  003DC4  0E00               	movlw	0
  2405  003DC6  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2406  003DC8  0E00               	movlw	0
  2407  003DCA  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2408  003DCC  0E7B               	movlw	low _data_test
  2409  003DCE  0100               	movlb	0	; () banked
  2410  003DD0  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2411  003DD2  0E01               	movlw	high _data_test
  2412  003DD4  0100               	movlb	0	; () banked
  2413  003DD6  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2414  003DD8  0E08               	movlw	8
  2415  003DDA  0100               	movlb	0	; () banked
  2416  003DDC  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2417  003DDE  0EBC               	movlw	188
  2418  003DE0  0100               	movlb	0	; () banked
  2419  003DE2  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2420  003DE4  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2421                           
  2422                           ;parcheggio.c: 365: can_send();
  2423  003DE8  ECEE  F02D         	call	_can_send	;wreg free
  2424  003DEC                     l796:
  2425  003DEC  B254               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2426  003DEE  D7FE               	goto	l796
  2427                           
  2428                           ;parcheggio.c: 367: data_brake [0] = 0;
  2429  003DF0  0E00               	movlw	0
  2430  003DF2  0101               	movlb	1	; () banked
  2431  003DF4  6F5B               	movwf	_data_brake& (0+255),b
  2432                           
  2433                           ;parcheggio.c: 368: data_brake [1] = 1;
  2434  003DF6  0E01               	movlw	1
  2435  003DF8  0101               	movlb	1	; () banked
  2436  003DFA  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2437                           
  2438                           ;parcheggio.c: 369: set_speed = 0;
  2439  003DFC  0E00               	movlw	0
  2440  003DFE  6E26               	movwf	_set_speed+1,c
  2441  003E00  0E00               	movlw	0
  2442  003E02  6E25               	movwf	_set_speed,c
  2443                           
  2444                           ;parcheggio.c: 370: data_steering[0] = 90;
  2445  003E04  0E5A               	movlw	90
  2446  003E06  0101               	movlb	1	; () banked
  2447  003E08  6F73               	movwf	_data_steering& (0+255),b
  2448                           
  2449                           ; BSR set to: 1
  2450                           ;parcheggio.c: 371: can_send();
  2451  003E0A  ECEE  F02D         	call	_can_send	;wreg free
  2452                           
  2453                           ;parcheggio.c: 372: delay_s(1);
  2454  003E0E  0E01               	movlw	1
  2455  003E10  EC36  F033         	call	_delay_s
  2456                           
  2457                           ;parcheggio.c: 373: avvicinamento = 1;
  2458  003E14  8454               	bsf	_avvicinamento/(0+8),_avvicinamento& (0+7),c	;volatile
  2459                           
  2460                           ;parcheggio.c: 374: if (sensor_distance [2] > 20) {
  2461  003E16  5006               	movf	_sensor_distance+5,w,c	;volatile
  2462  003E18  E104               	bnz	u10900
  2463  003E1A  0E15               	movlw	21
  2464  003E1C  5C05               	subwf	_sensor_distance+4,w,c	;volatile
  2465  003E1E  A0D8               	btfss	status,0,c
  2466  003E20  D016               	goto	l8278
  2467  003E22                     u10900:
  2468                           
  2469                           ;parcheggio.c: 375: data_brake [0] = 3;
  2470  003E22  0E03               	movlw	3
  2471  003E24  0101               	movlb	1	; () banked
  2472  003E26  6F5B               	movwf	_data_brake& (0+255),b
  2473                           
  2474                           ;parcheggio.c: 376: data_brake [1] = 1;
  2475  003E28  0E01               	movlw	1
  2476  003E2A  0101               	movlb	1	; () banked
  2477  003E2C  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2478                           
  2479                           ;parcheggio.c: 377: set_speed = 500;
  2480  003E2E  0E01               	movlw	1
  2481  003E30  6E26               	movwf	_set_speed+1,c
  2482  003E32  0EF4               	movlw	244
  2483  003E34  6E25               	movwf	_set_speed,c
  2484                           
  2485                           ;parcheggio.c: 378: data_steering[0] = 90;
  2486  003E36  0E5A               	movlw	90
  2487  003E38  0101               	movlb	1	; () banked
  2488  003E3A  6F73               	movwf	_data_steering& (0+255),b
  2489                           
  2490                           ; BSR set to: 1
  2491                           ;parcheggio.c: 379: dir = 1;
  2492  003E3C  8654               	bsf	_dir/(0+8),_dir& (0+7),c
  2493                           
  2494                           ; BSR set to: 1
  2495                           ;parcheggio.c: 380: can_send();
  2496  003E3E  ECEE  F02D         	call	_can_send	;wreg free
  2497  003E42                     l8276:
  2498  003E42  5006               	movf	_sensor_distance+5,w,c	;volatile
  2499  003E44  E1FE               	bnz	l8276
  2500  003E46  0E15               	movlw	21
  2501  003E48  5C05               	subwf	_sensor_distance+4,w,c	;volatile
  2502  003E4A  B0D8               	btfsc	status,0,c
  2503  003E4C  D7FA               	goto	l8276
  2504  003E4E                     l8278:
  2505                           
  2506                           ;parcheggio.c: 382: }
  2507                           ;parcheggio.c: 383: data_brake [0] = 0;
  2508  003E4E  0E00               	movlw	0
  2509  003E50  0101               	movlb	1	; () banked
  2510  003E52  6F5B               	movwf	_data_brake& (0+255),b
  2511                           
  2512                           ;parcheggio.c: 384: data_brake [1] = 1;
  2513  003E54  0E01               	movlw	1
  2514  003E56  0101               	movlb	1	; () banked
  2515  003E58  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2516                           
  2517                           ;parcheggio.c: 385: set_speed = 0;
  2518  003E5A  0E00               	movlw	0
  2519  003E5C  6E26               	movwf	_set_speed+1,c
  2520  003E5E  0E00               	movlw	0
  2521  003E60  6E25               	movwf	_set_speed,c
  2522                           
  2523                           ;parcheggio.c: 386: data_steering[0] = 90;
  2524  003E62  0E5A               	movlw	90
  2525  003E64  0101               	movlb	1	; () banked
  2526  003E66  6F73               	movwf	_data_steering& (0+255),b
  2527                           
  2528                           ; BSR set to: 1
  2529                           ;parcheggio.c: 387: dir = 0;
  2530  003E68  9654               	bcf	_dir/(0+8),_dir& (0+7),c
  2531                           
  2532                           ; BSR set to: 1
  2533                           ;parcheggio.c: 388: can_send();
  2534  003E6A  ECEE  F02D         	call	_can_send	;wreg free
  2535                           
  2536                           ;parcheggio.c: 389: delay_s(1);
  2537  003E6E  0E01               	movlw	1
  2538  003E70  EC36  F033         	call	_delay_s
  2539                           
  2540                           ;parcheggio.c: 390: data[0] = 3;
  2541  003E74  0E03               	movlw	3
  2542  003E76  0101               	movlb	1	; () banked
  2543  003E78  6F53               	movwf	_data& (0+255),b
  2544  003E7A                     l8288:
  2545  003E7A  EC4C  F033         	call	_CANisTxReady	;wreg free
  2546  003E7E  0900               	iorlw	0
  2547  003E80  B4D8               	btfsc	status,2,c
  2548  003E82  D7FB               	goto	l8288
  2549                           
  2550                           ;parcheggio.c: 392: CANsendMessage(0b00000001011, data, 8, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  2551  003E84  0E0B               	movlw	11
  2552  003E86  0100               	movlb	0	; () banked
  2553  003E88  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2554  003E8A  0E00               	movlw	0
  2555  003E8C  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2556  003E8E  0E00               	movlw	0
  2557  003E90  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2558  003E92  0E00               	movlw	0
  2559  003E94  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2560  003E96  0E53               	movlw	low _data
  2561  003E98  0100               	movlb	0	; () banked
  2562  003E9A  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2563  003E9C  0E01               	movlw	high _data
  2564  003E9E  0100               	movlb	0	; () banked
  2565  003EA0  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2566  003EA2  0E08               	movlw	8
  2567  003EA4  0100               	movlb	0	; () banked
  2568  003EA6  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2569  003EA8  0EBC               	movlw	188
  2570  003EAA  0100               	movlb	0	; () banked
  2571  003EAC  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2572  003EAE  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2573                           
  2574                           ;parcheggio.c: 393: delay_ms(100);
  2575  003EB2  0E00               	movlw	0
  2576  003EB4  0100               	movlb	0	; () banked
  2577  003EB6  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2578  003EB8  0E64               	movlw	100
  2579  003EBA  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  2580  003EBC  ECCC  F032         	call	_delay_ms	;wreg free
  2581  003EC0  00FF               	reset		;# 
  2582  003EC2                     l8294:
  2583  003EC2  AA81               	btfss	3969,5,c	;volatile
  2584  003EC4  0012               	return	
  2585  003EC6  A054               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  2586  003EC8  0012               	return	
  2587  003ECA  AC55               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2588  003ECC  0012               	return	
  2589  003ECE  D640               	goto	l789
  2590  003ED0                     __end_of_park_routine:
  2591                           	opt stack 0
  2592                           tblptru	equ	0xFF8
  2593                           tblptrh	equ	0xFF7
  2594                           tblptrl	equ	0xFF6
  2595                           tablat	equ	0xFF5
  2596                           postinc0	equ	0xFEE
  2597                           wreg	equ	0xFE8
  2598                           postdec1	equ	0xFE5
  2599                           fsr1l	equ	0xFE1
  2600                           postinc2	equ	0xFDE
  2601                           postdec2	equ	0xFDD
  2602                           status	equ	0xFD8
  2603                           
  2604 ;; *************** function _parallelo *****************
  2605 ;; Defined at:
  2606 ;;		line 419 in file "parcheggio.c"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;		None
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;		None
  2611 ;; Return value:  Size  Location     Type
  2612 ;;		None               void
  2613 ;; Registers used:
  2614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2615 ;; Tracked objects:
  2616 ;;		On entry : 0/0
  2617 ;;		On exit  : 0/0
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2622 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2623 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2624 ;;Total ram usage:        2 bytes
  2625 ;; Hardware stack levels used:    1
  2626 ;; Hardware stack levels required when called:    8
  2627 ;; This function calls:
  2628 ;;		___fladd
  2629 ;;		___fldiv
  2630 ;;		___flge
  2631 ;;		___flmul
  2632 ;;		___fltol
  2633 ;;		___xxtofl
  2634 ;;		_abs
  2635 ;;		_asin
  2636 ;;		_can_send
  2637 ;;		_sqrt
  2638 ;; This function is called by:
  2639 ;;		_park_search
  2640 ;;		_park_routine
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           	psect	text3
  2645  005022                     __ptext3:
  2646                           	opt stack 0
  2647  005022                     _parallelo:
  2648                           	opt stack 21
  2649                           
  2650                           ;parcheggio.c: 420: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  2651                           
  2652                           ;incstack = 0
  2653  005022  EE20  F003         	lfsr	2,_sensor_distance+2	;volatile
  2654  005026  CFDE F1B4          	movff	postinc2,??_parallelo
  2655  00502A  CFDD F1B5          	movff	postdec2,??_parallelo+1
  2656  00502E  0101               	movlb	1	; () banked
  2657  005030  1FB4               	comf	??_parallelo& (0+255),f,b
  2658  005032  1FB5               	comf	(??_parallelo+1)& (0+255),f,b
  2659  005034  4BB4               	infsnz	??_parallelo& (0+255),f,b
  2660  005036  2BB5               	incf	(??_parallelo+1)& (0+255),f,b
  2661  005038  5001               	movf	_sensor_distance,w,c	;volatile
  2662  00503A  0101               	movlb	1	; () banked
  2663  00503C  25B4               	addwf	??_parallelo& (0+255),w,b
  2664  00503E  0100               	movlb	0	; () banked
  2665  005040  6F77               	movwf	abs@a& (0+255),b
  2666  005042  5002               	movf	_sensor_distance+1,w,c	;volatile
  2667  005044  0101               	movlb	1	; () banked
  2668  005046  21B5               	addwfc	(??_parallelo+1)& (0+255),w,b
  2669  005048  0100               	movlb	0	; () banked
  2670  00504A  6F78               	movwf	(abs@a+1)& (0+255),b
  2671  00504C  EC20  F033         	call	_abs	;wreg free
  2672  005050  0100               	movlb	0	; () banked
  2673  005052  C077  F0CB         	movff	?_abs,___xxtofl@val
  2674  005056  0100               	movlb	0	; () banked
  2675  005058  C078  F0CC         	movff	?_abs+1,___xxtofl@val+1
  2676  00505C  0100               	movlb	0	; () banked
  2677  00505E  0E00               	movlw	0
  2678  005060  BFCC               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2679  005062  0EFF               	movlw	-1
  2680  005064  6FCD               	movwf	(___xxtofl@val+2)& (0+255),b
  2681  005066  6FCE               	movwf	(___xxtofl@val+3)& (0+255),b
  2682  005068  0E01               	movlw	1
  2683  00506A  EC7C  F02A         	call	___xxtofl
  2684  00506E  C0CB  F011         	movff	?___xxtofl,_alignment_gap
  2685  005072  C0CC  F012         	movff	?___xxtofl+1,_alignment_gap+1
  2686  005076  C0CD  F013         	movff	?___xxtofl+2,_alignment_gap+2
  2687  00507A  C0CE  F014         	movff	?___xxtofl+3,_alignment_gap+3
  2688                           
  2689                           ;parcheggio.c: 421: if (alignment_gap < 20) {
  2690  00507E  C011  F0C5         	movff	_alignment_gap,___flge@ff1
  2691  005082  C012  F0C6         	movff	_alignment_gap+1,___flge@ff1+1
  2692  005086  C013  F0C7         	movff	_alignment_gap+2,___flge@ff1+2
  2693  00508A  C014  F0C8         	movff	_alignment_gap+3,___flge@ff1+3
  2694  00508E  0E00               	movlw	0
  2695  005090  0100               	movlb	0	; () banked
  2696  005092  6FC9               	movwf	___flge@ff2& (0+255),b
  2697  005094  0E00               	movlw	0
  2698  005096  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
  2699  005098  0EA0               	movlw	160
  2700  00509A  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
  2701  00509C  0E41               	movlw	65
  2702  00509E  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
  2703  0050A0  EC26  F02D         	call	___flge	;wreg free
  2704  0050A4  0100               	movlb	0	; () banked
  2705  0050A6  B0D8               	btfsc	status,0,c
  2706  0050A8  D0F5               	goto	l826
  2707                           
  2708                           ; BSR set to: 0
  2709                           ;parcheggio.c: 422: if ((sensor_distance[0] < 30) && (sensor_distance[1] < 30)) {
  2710  0050AA  5002               	movf	_sensor_distance+1,w,c	;volatile
  2711  0050AC  E103               	bnz	u10531
  2712  0050AE  0E1E               	movlw	30
  2713  0050B0  5C01               	subwf	_sensor_distance,w,c	;volatile
  2714  0050B2  B0D8               	btfsc	status,0,c
  2715  0050B4                     u10531:
  2716  0050B4  D0E1               	goto	l7992
  2717                           
  2718                           ; BSR set to: 0
  2719  0050B6  5004               	movf	_sensor_distance+3,w,c	;volatile
  2720  0050B8  E103               	bnz	u10541
  2721  0050BA  0E1E               	movlw	30
  2722  0050BC  5C03               	subwf	_sensor_distance+2,w,c	;volatile
  2723  0050BE  B0D8               	btfsc	status,0,c
  2724  0050C0                     u10541:
  2725  0050C0  D0DB               	goto	l7992
  2726                           
  2727                           ; BSR set to: 0
  2728                           ;parcheggio.c: 426: x = ((100) + (alignment_gap * alignment_gap));
  2729  0050C2  C011  F094         	movff	_alignment_gap,___flmul@a
  2730  0050C6  C012  F095         	movff	_alignment_gap+1,___flmul@a+1
  2731  0050CA  C013  F096         	movff	_alignment_gap+2,___flmul@a+2
  2732  0050CE  C014  F097         	movff	_alignment_gap+3,___flmul@a+3
  2733  0050D2  C011  F090         	movff	_alignment_gap,___flmul@b
  2734  0050D6  C012  F091         	movff	_alignment_gap+1,___flmul@b+1
  2735  0050DA  C013  F092         	movff	_alignment_gap+2,___flmul@b+2
  2736  0050DE  C014  F093         	movff	_alignment_gap+3,___flmul@b+3
  2737  0050E2  ECD9  F01A         	call	___flmul	;wreg free
  2738  0050E6  C090  F0A9         	movff	?___flmul,___fladd@b
  2739  0050EA  C091  F0AA         	movff	?___flmul+1,___fladd@b+1
  2740  0050EE  C092  F0AB         	movff	?___flmul+2,___fladd@b+2
  2741  0050F2  C093  F0AC         	movff	?___flmul+3,___fladd@b+3
  2742  0050F6  0E00               	movlw	0
  2743  0050F8  0100               	movlb	0	; () banked
  2744  0050FA  6FAD               	movwf	___fladd@a& (0+255),b
  2745  0050FC  0E00               	movlw	0
  2746  0050FE  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2747  005100  0EC8               	movlw	200
  2748  005102  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2749  005104  0E42               	movlw	66
  2750  005106  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2751  005108  EC85  F018         	call	___fladd	;wreg free
  2752  00510C  C0A9  F0DA         	movff	?___fladd,_x
  2753  005110  C0AA  F0DB         	movff	?___fladd+1,_x+1
  2754  005114  C0AB  F0DC         	movff	?___fladd+2,_x+2
  2755  005118  C0AC  F0DD         	movff	?___fladd+3,_x+3
  2756                           
  2757                           ;parcheggio.c: 427: x = sqrt(x);
  2758  00511C  C0DA  F0C1         	movff	_x,sqrt@a
  2759  005120  C0DB  F0C2         	movff	_x+1,sqrt@a+1
  2760  005124  C0DC  F0C3         	movff	_x+2,sqrt@a+2
  2761  005128  C0DD  F0C4         	movff	_x+3,sqrt@a+3
  2762  00512C  EC68  F01F         	call	_sqrt	;wreg free
  2763  005130  C0C1  F0DA         	movff	?_sqrt,_x
  2764  005134  C0C2  F0DB         	movff	?_sqrt+1,_x+1
  2765  005138  C0C3  F0DC         	movff	?_sqrt+2,_x+2
  2766  00513C  C0C4  F0DD         	movff	?_sqrt+3,_x+3
  2767                           
  2768                           ;parcheggio.c: 428: z = alignment_gap / x;
  2769  005140  C011  F077         	movff	_alignment_gap,___fldiv@b
  2770  005144  C012  F078         	movff	_alignment_gap+1,___fldiv@b+1
  2771  005148  C013  F079         	movff	_alignment_gap+2,___fldiv@b+2
  2772  00514C  C014  F07A         	movff	_alignment_gap+3,___fldiv@b+3
  2773  005150  C0DA  F07B         	movff	_x,___fldiv@a
  2774  005154  C0DB  F07C         	movff	_x+1,___fldiv@a+1
  2775  005158  C0DC  F07D         	movff	_x+2,___fldiv@a+2
  2776  00515C  C0DD  F07E         	movff	_x+3,___fldiv@a+3
  2777  005160  EC4D  F021         	call	___fldiv	;wreg free
  2778  005164  C077  F015         	movff	?___fldiv,_z
  2779  005168  C078  F016         	movff	?___fldiv+1,_z+1
  2780  00516C  C079  F017         	movff	?___fldiv+2,_z+2
  2781  005170  C07A  F018         	movff	?___fldiv+3,_z+3
  2782                           
  2783                           ;parcheggio.c: 429: z = asin(z);
  2784  005174  C015  F0D5         	movff	_z,asin@x
  2785  005178  C016  F0D6         	movff	_z+1,asin@x+1
  2786  00517C  C017  F0D7         	movff	_z+2,asin@x+2
  2787  005180  C018  F0D8         	movff	_z+3,asin@x+3
  2788  005184  EC88  F026         	call	_asin	;wreg free
  2789  005188  C0D5  F015         	movff	?_asin,_z
  2790  00518C  C0D6  F016         	movff	?_asin+1,_z+1
  2791  005190  C0D7  F017         	movff	?_asin+2,_z+2
  2792  005194  C0D8  F018         	movff	?_asin+3,_z+3
  2793                           
  2794                           ;parcheggio.c: 430: z = z / 3.14159265358979323846 * 180;
  2795  005198  0EDB               	movlw	219
  2796  00519A  0100               	movlb	0	; () banked
  2797  00519C  6F7B               	movwf	___fldiv@a& (0+255),b
  2798  00519E  0E0F               	movlw	15
  2799  0051A0  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  2800  0051A2  0E49               	movlw	73
  2801  0051A4  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  2802  0051A6  0E40               	movlw	64
  2803  0051A8  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  2804  0051AA  C015  F077         	movff	_z,___fldiv@b
  2805  0051AE  C016  F078         	movff	_z+1,___fldiv@b+1
  2806  0051B2  C017  F079         	movff	_z+2,___fldiv@b+2
  2807  0051B6  C018  F07A         	movff	_z+3,___fldiv@b+3
  2808  0051BA  EC4D  F021         	call	___fldiv	;wreg free
  2809  0051BE  C077  F090         	movff	?___fldiv,___flmul@b
  2810  0051C2  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  2811  0051C6  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  2812  0051CA  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  2813  0051CE  0E00               	movlw	0
  2814  0051D0  0100               	movlb	0	; () banked
  2815  0051D2  6F94               	movwf	___flmul@a& (0+255),b
  2816  0051D4  0E00               	movlw	0
  2817  0051D6  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2818  0051D8  0E34               	movlw	52
  2819  0051DA  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2820  0051DC  0E43               	movlw	67
  2821  0051DE  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2822  0051E0  ECD9  F01A         	call	___flmul	;wreg free
  2823  0051E4  C090  F015         	movff	?___flmul,_z
  2824  0051E8  C091  F016         	movff	?___flmul+1,_z+1
  2825  0051EC  C092  F017         	movff	?___flmul+2,_z+2
  2826  0051F0  C093  F018         	movff	?___flmul+3,_z+3
  2827                           
  2828                           ;parcheggio.c: 431: data_correction[0] = z;
  2829  0051F4  C015  F0C1         	movff	_z,___fltol@f1
  2830  0051F8  C016  F0C2         	movff	_z+1,___fltol@f1+1
  2831  0051FC  C017  F0C3         	movff	_z+2,___fltol@f1+2
  2832  005200  C018  F0C4         	movff	_z+3,___fltol@f1+3
  2833  005204  ECA6  F02F         	call	___fltol	;wreg free
  2834  005208  0100               	movlb	0	; () banked
  2835  00520A  51C1               	movf	?___fltol& (0+255),w,b
  2836  00520C  0101               	movlb	1	; () banked
  2837  00520E  6F63               	movwf	_data_correction& (0+255),b
  2838                           
  2839                           ; BSR set to: 1
  2840                           ;parcheggio.c: 433: if (sensor_distance[0] < sensor_distance[1]) {
  2841  005210  5003               	movf	_sensor_distance+2,w,c	;volatile
  2842  005212  5C01               	subwf	_sensor_distance,w,c	;volatile
  2843  005214  5004               	movf	_sensor_distance+3,w,c	;volatile
  2844  005216  5802               	subwfb	_sensor_distance+1,w,c	;volatile
  2845  005218  B0D8               	btfsc	status,0,c
  2846  00521A  D002               	goto	l7984
  2847                           
  2848                           ; BSR set to: 1
  2849                           ;parcheggio.c: 434: data_correction[1] = 0;
  2850  00521C  0E00               	movlw	0
  2851  00521E  D001               	goto	L1
  2852  005220                     l7984:
  2853                           
  2854                           ; BSR set to: 1
  2855                           ;parcheggio.c: 436: data_correction[1] = 1;
  2856  005220  0E01               	movlw	1
  2857  005222                     L1:
  2858  005222  0101               	movlb	1	; () banked
  2859  005224  6F64               	movwf	(_data_correction+1)& (0+255),b
  2860                           
  2861                           ; BSR set to: 1
  2862                           ;parcheggio.c: 437: }
  2863                           ;parcheggio.c: 438: if ((old_alignment_gap != alignment_gap) || (old_data_correction != 
      +                          data_correction[1])) {
  2864                           
  2865                           ; BSR set to: 1
  2866  005226  5011               	movf	_alignment_gap,w,c
  2867  005228  0101               	movlb	1	; () banked
  2868  00522A  193C               	xorwf	_old_alignment_gap& (0+255),w,b
  2869  00522C  E114               	bnz	l832
  2870  00522E  5012               	movf	_alignment_gap+1,w,c
  2871  005230  0101               	movlb	1	; () banked
  2872  005232  193D               	xorwf	(_old_alignment_gap+1)& (0+255),w,b
  2873  005234  E110               	bnz	l832
  2874  005236  5013               	movf	_alignment_gap+2,w,c
  2875  005238  0101               	movlb	1	; () banked
  2876  00523A  193E               	xorwf	(_old_alignment_gap+2)& (0+255),w,b
  2877  00523C  E10C               	bnz	l832
  2878  00523E  5014               	movf	_alignment_gap+3,w,c
  2879  005240  0101               	movlb	1	; () banked
  2880  005242  193F               	xorwf	(_old_alignment_gap+3)& (0+255),w,b
  2881  005244  A4D8               	btfss	status,2,c
  2882  005246  D007               	goto	l832
  2883                           
  2884                           ; BSR set to: 1
  2885  005248  0E00               	movlw	0
  2886  00524A  B655               	btfsc	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2887  00524C  0E01               	movlw	1
  2888  00524E  0101               	movlb	1	; () banked
  2889  005250  1964               	xorwf	(_data_correction+1)& (0+255),w,b
  2890  005252  B4D8               	btfsc	status,2,c
  2891  005254  0012               	return	
  2892  005256                     l832:
  2893                           
  2894                           ; BSR set to: 1
  2895                           ;parcheggio.c: 439: old_alignment_gap = alignment_gap;
  2896  005256  C011  F13C         	movff	_alignment_gap,_old_alignment_gap
  2897  00525A  C012  F13D         	movff	_alignment_gap+1,_old_alignment_gap+1
  2898  00525E  C013  F13E         	movff	_alignment_gap+2,_old_alignment_gap+2
  2899  005262  C014  F13F         	movff	_alignment_gap+3,_old_alignment_gap+3
  2900                           
  2901                           ;parcheggio.c: 440: old_data_correction = data_correction[1];
  2902  005266  0101               	movlb	1	; () banked
  2903  005268  A164               	btfss	(_data_correction+1)& (0+255),0,b
  2904  00526A  D002               	goto	u10580
  2905  00526C  8655               	bsf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2906  00526E  D001               	goto	l7990
  2907  005270                     u10580:
  2908  005270  9655               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2909  005272                     l7990:
  2910                           
  2911                           ;parcheggio.c: 441: can_send();
  2912  005272  ECEE  F02D         	call	_can_send	;wreg free
  2913                           
  2914                           ;parcheggio.c: 442: }
  2915                           ;parcheggio.c: 443: } else if (data_correction[0] != old_data_correction) {
  2916  005276  0012               	return	
  2917  005278                     l7992:
  2918  005278  0E00               	movlw	0
  2919  00527A  B655               	btfsc	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2920  00527C  0E01               	movlw	1
  2921  00527E  0101               	movlb	1	; () banked
  2922  005280  1963               	xorwf	_data_correction& (0+255),w,b
  2923  005282  B4D8               	btfsc	status,2,c
  2924  005284  0012               	return	
  2925                           
  2926                           ; BSR set to: 1
  2927                           ;parcheggio.c: 444: data_correction[0] = 0;
  2928  005286  0E00               	movlw	0
  2929  005288  0101               	movlb	1	; () banked
  2930  00528A  6F63               	movwf	_data_correction& (0+255),b
  2931                           
  2932                           ; BSR set to: 1
  2933                           ;parcheggio.c: 445: old_data_correction = 0;
  2934  00528C  9655               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2935                           
  2936                           ; BSR set to: 1
  2937                           ;parcheggio.c: 446: can_send();
  2938  00528E  ECEE  F02D         	call	_can_send	;wreg free
  2939                           
  2940                           ;parcheggio.c: 447: }
  2941                           ;parcheggio.c: 448: } else {
  2942  005292  0012               	return	
  2943  005294                     l826:
  2944                           
  2945                           ; BSR set to: 0
  2946                           ;parcheggio.c: 449: if (old_data_correction != 0) {
  2947  005294  A655               	btfss	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2948  005296  0012               	return	
  2949                           
  2950                           ; BSR set to: 0
  2951                           ;parcheggio.c: 450: data_correction[0] = 0;
  2952  005298  0E00               	movlw	0
  2953  00529A  0101               	movlb	1	; () banked
  2954  00529C  6F63               	movwf	_data_correction& (0+255),b
  2955                           
  2956                           ; BSR set to: 1
  2957                           ;parcheggio.c: 451: old_data_correction = 0;
  2958  00529E  9655               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2959                           
  2960                           ; BSR set to: 1
  2961                           ;parcheggio.c: 452: can_send();
  2962  0052A0  ECEE  F02D         	call	_can_send	;wreg free
  2963  0052A4  0012               	return	
  2964  0052A6                     __end_of_parallelo:
  2965                           	opt stack 0
  2966                           tblptru	equ	0xFF8
  2967                           tblptrh	equ	0xFF7
  2968                           tblptrl	equ	0xFF6
  2969                           tablat	equ	0xFF5
  2970                           postinc0	equ	0xFEE
  2971                           wreg	equ	0xFE8
  2972                           postdec1	equ	0xFE5
  2973                           fsr1l	equ	0xFE1
  2974                           postinc2	equ	0xFDE
  2975                           postdec2	equ	0xFDD
  2976                           status	equ	0xFD8
  2977                           
  2978 ;; *************** function _can_send *****************
  2979 ;; Defined at:
  2980 ;;		line 398 in file "parcheggio.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;		None
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;  data_correct    0   39[BANK0 ] unsigned char [0]
  2985 ;; Return value:  Size  Location     Type
  2986 ;;		None               void
  2987 ;; Registers used:
  2988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2989 ;; Tracked objects:
  2990 ;;		On entry : 0/0
  2991 ;;		On exit  : 0/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2998 ;;Total ram usage:        0 bytes
  2999 ;; Hardware stack levels used:    1
  3000 ;; Hardware stack levels required when called:    5
  3001 ;; This function calls:
  3002 ;;		_CANisTxReady
  3003 ;;		_CANsendMessage
  3004 ;; This function is called by:
  3005 ;;		_park_routine
  3006 ;;		_parallelo
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           	psect	text4
  3011  005BDC                     __ptext4:
  3012                           	opt stack 0
  3013  005BDC                     _can_send:
  3014                           	opt stack 23
  3015                           
  3016                           ;parcheggio.c: 399: if (PORTBbits.RB5 == 1) {
  3017                           
  3018                           ;incstack = 0
  3019  005BDC  AA81               	btfss	3969,5,c	;volatile
  3020  005BDE  D062               	goto	l7840
  3021  005BE0                     l7820:
  3022  005BE0  EC4C  F033         	call	_CANisTxReady	;wreg free
  3023  005BE4  06E8               	decf	wreg,f,c
  3024  005BE6  A4D8               	btfss	status,2,c
  3025  005BE8  D7FB               	goto	l7820
  3026                           
  3027                           ;parcheggio.c: 401: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG &
      +                           CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3028  005BEA  0E05               	movlw	5
  3029  005BEC  0100               	movlb	0	; () banked
  3030  005BEE  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3031  005BF0  0E00               	movlw	0
  3032  005BF2  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3033  005BF4  0E00               	movlw	0
  3034  005BF6  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3035  005BF8  0E00               	movlw	0
  3036  005BFA  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3037  005BFC  0E73               	movlw	low _data_steering
  3038  005BFE  0100               	movlb	0	; () banked
  3039  005C00  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3040  005C02  0E01               	movlw	high _data_steering
  3041  005C04  0100               	movlb	0	; () banked
  3042  005C06  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3043  005C08  0E08               	movlw	8
  3044  005C0A  0100               	movlb	0	; () banked
  3045  005C0C  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3046  005C0E  0EBC               	movlw	188
  3047  005C10  0100               	movlb	0	; () banked
  3048  005C12  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3049  005C14  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3050                           
  3051                           ;parcheggio.c: 402: data_speed[0] = set_speed;
  3052  005C18  C025  F16B         	movff	_set_speed,_data_speed
  3053                           
  3054                           ;parcheggio.c: 403: data_speed[1] = (set_speed >> 8);
  3055  005C1C  5026               	movf	_set_speed+1,w,c
  3056  005C1E  0101               	movlb	1	; () banked
  3057  005C20  6F6C               	movwf	(_data_speed+1)& (0+255),b
  3058                           
  3059                           ; BSR set to: 1
  3060                           ;parcheggio.c: 404: data_speed[2] = dir;
  3061  005C22  0E00               	movlw	0
  3062  005C24  B654               	btfsc	_dir/(0+8),_dir& (0+7),c
  3063  005C26  0E01               	movlw	1
  3064  005C28  0101               	movlb	1	; () banked
  3065  005C2A  6F6D               	movwf	(_data_speed+2)& (0+255),b
  3066  005C2C                     l7830:
  3067  005C2C  EC4C  F033         	call	_CANisTxReady	;wreg free
  3068  005C30  06E8               	decf	wreg,f,c
  3069  005C32  A4D8               	btfss	status,2,c
  3070  005C34  D7FB               	goto	l7830
  3071                           
  3072                           ;parcheggio.c: 406: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3073  005C36  0E03               	movlw	3
  3074  005C38  0100               	movlb	0	; () banked
  3075  005C3A  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3076  005C3C  0E00               	movlw	0
  3077  005C3E  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3078  005C40  0E00               	movlw	0
  3079  005C42  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3080  005C44  0E00               	movlw	0
  3081  005C46  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3082  005C48  0E6B               	movlw	low _data_speed
  3083  005C4A  0100               	movlb	0	; () banked
  3084  005C4C  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3085  005C4E  0E01               	movlw	high _data_speed
  3086  005C50  0100               	movlb	0	; () banked
  3087  005C52  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3088  005C54  0E08               	movlw	8
  3089  005C56  0100               	movlb	0	; () banked
  3090  005C58  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3091  005C5A  0EBC               	movlw	188
  3092  005C5C  0100               	movlb	0	; () banked
  3093  005C5E  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3094  005C60  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3095  005C64                     l7834:
  3096  005C64  EC4C  F033         	call	_CANisTxReady	;wreg free
  3097  005C68  06E8               	decf	wreg,f,c
  3098  005C6A  A4D8               	btfss	status,2,c
  3099  005C6C  D7FB               	goto	l7834
  3100                           
  3101                           ;parcheggio.c: 408: data_brake[1] = 0;
  3102  005C6E  0E00               	movlw	0
  3103  005C70  0101               	movlb	1	; () banked
  3104  005C72  6F5C               	movwf	(_data_brake+1)& (0+255),b
  3105                           
  3106                           ; BSR set to: 1
  3107                           ;parcheggio.c: 409: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3108  005C74  0E04               	movlw	4
  3109  005C76  0100               	movlb	0	; () banked
  3110  005C78  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3111  005C7A  0E00               	movlw	0
  3112  005C7C  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3113  005C7E  0E00               	movlw	0
  3114  005C80  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3115  005C82  0E00               	movlw	0
  3116  005C84  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3117  005C86  0E5B               	movlw	low _data_brake
  3118  005C88  0100               	movlb	0	; () banked
  3119  005C8A  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3120  005C8C  0E01               	movlw	high _data_brake
  3121  005C8E  0100               	movlb	0	; () banked
  3122  005C90  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3123  005C92  0E08               	movlw	8
  3124  005C94  0100               	movlb	0	; () banked
  3125  005C96  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3126  005C98  0EBC               	movlw	188
  3127  005C9A  0100               	movlb	0	; () banked
  3128  005C9C  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3129  005C9E  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3130                           
  3131                           ;parcheggio.c: 410: } else {
  3132  005CA2  0012               	return	
  3133  005CA4                     l7840:
  3134                           
  3135                           ;parcheggio.c: 411: CANsendMessage(0b00000001110, data_correction, 8, CAN_CONFIG_STD_MSG
      +                           & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3136  005CA4  0E0E               	movlw	14
  3137  005CA6  0100               	movlb	0	; () banked
  3138  005CA8  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3139  005CAA  0E00               	movlw	0
  3140  005CAC  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3141  005CAE  0E00               	movlw	0
  3142  005CB0  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3143  005CB2  0E00               	movlw	0
  3144  005CB4  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3145  005CB6  0E63               	movlw	low _data_correction
  3146  005CB8  0100               	movlb	0	; () banked
  3147  005CBA  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3148  005CBC  0E01               	movlw	high _data_correction
  3149  005CBE  0100               	movlb	0	; () banked
  3150  005CC0  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3151  005CC2  0E08               	movlw	8
  3152  005CC4  0100               	movlb	0	; () banked
  3153  005CC6  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3154  005CC8  0EBC               	movlw	188
  3155  005CCA  0100               	movlb	0	; () banked
  3156  005CCC  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3157  005CCE  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3158                           
  3159                           ;parcheggio.c: 412: unsigned char data_correction1[];
  3160                           ;parcheggio.c: 413: data_correction1[0] = data_correction[0];
  3161  005CD2  EE20  F087         	lfsr	2,can_send@data_correction1
  3162  005CD6  C163  FFDF         	movff	_data_correction,indf2
  3163                           
  3164                           ;parcheggio.c: 414: data_correction1[1] = 0;
  3165  005CDA  0E00               	movlw	0
  3166  005CDC  CFE8 F088          	movff	wreg,can_send@data_correction1+1
  3167                           
  3168                           ;parcheggio.c: 415: CANsendMessage(0xAA, data_correction1, 8, CAN_CONFIG_STD_MSG & CAN_N
      +                          ORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3169  005CE0  0EAA               	movlw	170
  3170  005CE2  0100               	movlb	0	; () banked
  3171  005CE4  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3172  005CE6  0E00               	movlw	0
  3173  005CE8  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3174  005CEA  0E00               	movlw	0
  3175  005CEC  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3176  005CEE  0E00               	movlw	0
  3177  005CF0  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3178  005CF2  0E87               	movlw	low can_send@data_correction1
  3179  005CF4  0100               	movlb	0	; () banked
  3180  005CF6  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3181  005CF8  0E00               	movlw	high can_send@data_correction1
  3182  005CFA  0100               	movlb	0	; () banked
  3183  005CFC  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3184  005CFE  0E08               	movlw	8
  3185  005D00  0100               	movlb	0	; () banked
  3186  005D02  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3187  005D04  0EBC               	movlw	188
  3188  005D06  0100               	movlb	0	; () banked
  3189  005D08  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3190  005D0A  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3191  005D0E  0012               	return	
  3192  005D10                     __end_of_can_send:
  3193                           	opt stack 0
  3194                           tblptru	equ	0xFF8
  3195                           tblptrh	equ	0xFF7
  3196                           tblptrl	equ	0xFF6
  3197                           tablat	equ	0xFF5
  3198                           postinc0	equ	0xFEE
  3199                           wreg	equ	0xFE8
  3200                           postdec1	equ	0xFE5
  3201                           fsr1l	equ	0xFE1
  3202                           indf2	equ	0xFDF
  3203                           postinc2	equ	0xFDE
  3204                           postdec2	equ	0xFDD
  3205                           status	equ	0xFD8
  3206                           
  3207 ;; *************** function _CANsendMessage *****************
  3208 ;; Defined at:
  3209 ;;		line 295 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;  identifier      4   23[BANK0 ] unsigned long 
  3212 ;;  data            2   27[BANK0 ] PTR unsigned char 
  3213 ;;		 -> can_send@data_correction1(0), data_speed(8), data_brake(8), data_steering(8), 
  3214 ;;		 -> data_correction(8), data_test(8), data(8), sensor_distance_short(8), 
  3215 ;;  dataLength      1   29[BANK0 ] unsigned char 
  3216 ;;  flags           1   30[BANK0 ] enum E16335
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;  tamp            4   35[BANK0 ] unsigned long 
  3219 ;; Return value:  Size  Location     Type
  3220 ;;		None               void
  3221 ;; Registers used:
  3222 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3228 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3229 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3230 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3231 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3232 ;;Total ram usage:       16 bytes
  3233 ;; Hardware stack levels used:    1
  3234 ;; Hardware stack levels required when called:    4
  3235 ;; This function calls:
  3236 ;;		Nothing
  3237 ;; This function is called by:
  3238 ;;		_main
  3239 ;;		_park_search
  3240 ;;		_park_routine
  3241 ;;		_can_send
  3242 ;; This function uses a non-reentrant model
  3243 ;;
  3244                           
  3245                           	psect	text5
  3246  001858                     __ptext5:
  3247                           	opt stack 0
  3248  001858                     _CANsendMessage:
  3249                           	opt stack 23
  3250                           
  3251                           ;inc\CANlib.h: 297: unsigned long tamp;
  3252                           ;inc\CANlib.h: 299: if (TXB0CONbits.TXREQ == 0)
  3253                           
  3254                           ;incstack = 0
  3255  001858  010F               	movlb	15	; () banked
  3256  00185A  B740               	btfsc	64,3,b	;volatile
  3257  00185C  D13F               	goto	l363
  3258                           
  3259                           ; BSR set to: 15
  3260                           ;inc\CANlib.h: 300: { TXB0DLC = dataLength;
  3261  00185E  C07D  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  3262                           
  3263                           ;inc\CANlib.h: 301: if (0b01000000 & flags)
  3264  001862  0100               	movlb	0	; () banked
  3265  001864  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  3266  001866  D003               	goto	l364
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;inc\CANlib.h: 302: TXB0DLCbits.TXRTR = 0x01;
  3270  001868  010F               	movlb	15	; () banked
  3271  00186A  8D45               	bsf	69,6,b	;volatile
  3272  00186C  D002               	goto	l365
  3273  00186E                     l364:
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;inc\CANlib.h: 303: else
  3277                           ;inc\CANlib.h: 304: TXB0DLCbits.TXRTR = 0x00;
  3278  00186E  010F               	movlb	15	; () banked
  3279  001870  9D45               	bcf	69,6,b	;volatile
  3280  001872                     l365:
  3281                           
  3282                           ; BSR set to: 15
  3283                           ;inc\CANlib.h: 306: if (CAN_TX_FRAME_MASK & flags)
  3284  001872  0100               	movlb	0	; () banked
  3285  001874  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  3286  001876  D079               	goto	l366
  3287                           
  3288                           ; BSR set to: 0
  3289                           ;inc\CANlib.h: 307: {
  3290                           ;inc\CANlib.h: 309: tamp = identifier & 0x000000FF;
  3291  001878  0100               	movlb	0	; () banked
  3292  00187A  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  3293  00187C  0100               	movlb	0	; () banked
  3294  00187E  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3295  001880  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3296  001882  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3297  001884  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3298                           
  3299                           ; BSR set to: 0
  3300                           ;inc\CANlib.h: 310: TXB0EIDL = (unsigned char) tamp;
  3301  001886  C083  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  3302                           
  3303                           ; BSR set to: 0
  3304                           ;inc\CANlib.h: 312: tamp = identifier & 0x0000FF00;
  3305  00188A  0E00               	movlw	0
  3306  00188C  0100               	movlb	0	; () banked
  3307  00188E  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3308  001890  0100               	movlb	0	; () banked
  3309  001892  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3310  001894  0EFF               	movlw	255
  3311  001896  0100               	movlb	0	; () banked
  3312  001898  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3313  00189A  0100               	movlb	0	; () banked
  3314  00189C  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3315  00189E  0E00               	movlw	0
  3316  0018A0  0100               	movlb	0	; () banked
  3317  0018A2  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3318  0018A4  0100               	movlb	0	; () banked
  3319  0018A6  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3320  0018A8  0E00               	movlw	0
  3321  0018AA  0100               	movlb	0	; () banked
  3322  0018AC  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3323  0018AE  0100               	movlb	0	; () banked
  3324  0018B0  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3325                           
  3326                           ; BSR set to: 0
  3327                           ;inc\CANlib.h: 313: tamp = tamp >> 8;
  3328  0018B2  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3329  0018B6  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3330  0018BA  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3331  0018BE  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3332  0018C2  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  3333  0018C6  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  3334  0018CA  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  3335  0018CE  0100               	movlb	0	; () banked
  3336  0018D0  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  3337  0018D2  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3338  0018D6  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3339  0018DA  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3340  0018DE  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3341                           
  3342                           ; BSR set to: 0
  3343                           ;inc\CANlib.h: 314: TXB0EIDH = (unsigned char) tamp;
  3344  0018E2  C083  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;inc\CANlib.h: 316: TXB0SIDL = 0x00;
  3348  0018E6  0E00               	movlw	0
  3349  0018E8  010F               	movlb	15	; () banked
  3350  0018EA  6F42               	movwf	66,b	;volatile
  3351                           
  3352                           ; BSR set to: 15
  3353                           ;inc\CANlib.h: 317: TXB0SIDLbits.EXIDE = 0x01;
  3354  0018EC  010F               	movlb	15	; () banked
  3355  0018EE  8742               	bsf	66,3,b	;volatile
  3356                           
  3357                           ; BSR set to: 15
  3358                           ;inc\CANlib.h: 319: if (identifier & 0x00010000)
  3359  0018F0  0100               	movlb	0	; () banked
  3360  0018F2  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  3361  0018F4  D002               	goto	l367
  3362                           
  3363                           ; BSR set to: 0
  3364                           ;inc\CANlib.h: 320: TXB0SIDLbits.EID16 = 0x01;
  3365  0018F6  010F               	movlb	15	; () banked
  3366  0018F8  8142               	bsf	66,0,b	;volatile
  3367  0018FA                     l367:
  3368                           
  3369                           ;inc\CANlib.h: 321: if (identifier & 0x00020000)
  3370  0018FA  0100               	movlb	0	; () banked
  3371  0018FC  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  3372  0018FE  D002               	goto	l368
  3373                           
  3374                           ; BSR set to: 0
  3375                           ;inc\CANlib.h: 322: TXB0SIDLbits.EID17 = 0x01;
  3376  001900  010F               	movlb	15	; () banked
  3377  001902  8342               	bsf	66,1,b	;volatile
  3378  001904                     l368:
  3379                           
  3380                           ;inc\CANlib.h: 323: if (identifier & 0x00040000)
  3381  001904  0100               	movlb	0	; () banked
  3382  001906  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  3383  001908  D002               	goto	l369
  3384                           
  3385                           ; BSR set to: 0
  3386                           ;inc\CANlib.h: 324: TXB0SIDLbits.SID0 = 0x01;
  3387  00190A  010F               	movlb	15	; () banked
  3388  00190C  8B42               	bsf	66,5,b	;volatile
  3389  00190E                     l369:
  3390                           
  3391                           ;inc\CANlib.h: 325: if (identifier & 0x00080000)
  3392  00190E  0100               	movlb	0	; () banked
  3393  001910  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  3394  001912  D002               	goto	l370
  3395                           
  3396                           ; BSR set to: 0
  3397                           ;inc\CANlib.h: 326: TXB0SIDLbits.SID1 = 0x01;
  3398  001914  010F               	movlb	15	; () banked
  3399  001916  8D42               	bsf	66,6,b	;volatile
  3400  001918                     l370:
  3401                           
  3402                           ;inc\CANlib.h: 327: if (identifier & 0x00100000)
  3403  001918  0100               	movlb	0	; () banked
  3404  00191A  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  3405  00191C  D002               	goto	l7420
  3406                           
  3407                           ; BSR set to: 0
  3408                           ;inc\CANlib.h: 328: TXB0SIDLbits.SID2 = 0x01;
  3409  00191E  010F               	movlb	15	; () banked
  3410  001920  8F42               	bsf	66,7,b	;volatile
  3411  001922                     l7420:
  3412                           
  3413                           ;inc\CANlib.h: 330: tamp = (identifier >> 21);
  3414  001922  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3415  001926  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3416  00192A  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3417  00192E  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3418  001932  0E16               	movlw	22
  3419  001934  D006               	goto	u9790
  3420  001936                     u9795:
  3421  001936  0100               	movlb	0	; () banked
  3422  001938  90D8               	bcf	status,0,c
  3423  00193A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3424  00193C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3425  00193E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3426  001940  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3427  001942                     u9790:
  3428  001942  2EE8               	decfsz	wreg,f,c
  3429  001944  D7F8               	goto	u9795
  3430  001946  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3431  00194A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3432  00194E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3433  001952  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;inc\CANlib.h: 331: tamp = tamp & 0x000000FF;
  3437  001956  0100               	movlb	0	; () banked
  3438  001958  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3439  00195A  0100               	movlb	0	; () banked
  3440  00195C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3441  00195E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3442  001960  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3443  001962  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3444                           
  3445                           ; BSR set to: 0
  3446                           ;inc\CANlib.h: 332: TXB0SIDH = (unsigned char) tamp;
  3447  001964  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  3448                           
  3449                           ;inc\CANlib.h: 333: }
  3450  001968  D059               	goto	l7440
  3451  00196A                     l366:
  3452                           
  3453                           ; BSR set to: 0
  3454                           ;inc\CANlib.h: 335: else
  3455                           ;inc\CANlib.h: 337: {
  3456                           ;inc\CANlib.h: 338: TXB0SIDLbits.EXIDE = 0x00;
  3457  00196A  010F               	movlb	15	; () banked
  3458  00196C  9742               	bcf	66,3,b	;volatile
  3459                           
  3460                           ; BSR set to: 15
  3461                           ;inc\CANlib.h: 340: tamp = (identifier >> 3);
  3462  00196E  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3463  001972  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3464  001976  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3465  00197A  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3466  00197E  0E04               	movlw	4
  3467  001980  D006               	goto	u9800
  3468  001982                     u9805:
  3469  001982  0100               	movlb	0	; () banked
  3470  001984  90D8               	bcf	status,0,c
  3471  001986  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3472  001988  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3473  00198A  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3474  00198C  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3475  00198E                     u9800:
  3476  00198E  2EE8               	decfsz	wreg,f,c
  3477  001990  D7F8               	goto	u9805
  3478  001992  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3479  001996  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3480  00199A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3481  00199E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3482                           
  3483                           ; BSR set to: 0
  3484                           ;inc\CANlib.h: 341: tamp = tamp & 0x000000FF;
  3485  0019A2  0100               	movlb	0	; () banked
  3486  0019A4  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3487  0019A6  0100               	movlb	0	; () banked
  3488  0019A8  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3489  0019AA  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3490  0019AC  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3491  0019AE  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3492                           
  3493                           ; BSR set to: 0
  3494                           ;inc\CANlib.h: 342: TXB0SIDH = (unsigned char) tamp;
  3495  0019B0  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  3496                           
  3497                           ; BSR set to: 0
  3498                           ;inc\CANlib.h: 344: tamp = identifier & 0x00000007;
  3499  0019B4  0E07               	movlw	7
  3500  0019B6  0100               	movlb	0	; () banked
  3501  0019B8  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3502  0019BA  0100               	movlb	0	; () banked
  3503  0019BC  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3504  0019BE  0E00               	movlw	0
  3505  0019C0  0100               	movlb	0	; () banked
  3506  0019C2  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3507  0019C4  0100               	movlb	0	; () banked
  3508  0019C6  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3509  0019C8  0E00               	movlw	0
  3510  0019CA  0100               	movlb	0	; () banked
  3511  0019CC  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3512  0019CE  0100               	movlb	0	; () banked
  3513  0019D0  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3514  0019D2  0E00               	movlw	0
  3515  0019D4  0100               	movlb	0	; () banked
  3516  0019D6  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3517  0019D8  0100               	movlb	0	; () banked
  3518  0019DA  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3519                           
  3520                           ; BSR set to: 0
  3521                           ;inc\CANlib.h: 345: tamp = tamp << 5;
  3522  0019DC  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3523  0019E0  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3524  0019E4  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3525  0019E8  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3526  0019EC  0E05               	movlw	5
  3527  0019EE                     u9815:
  3528  0019EE  90D8               	bcf	status,0,c
  3529  0019F0  0100               	movlb	0	; () banked
  3530  0019F2  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  3531  0019F4  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  3532  0019F6  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  3533  0019F8  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  3534  0019FA  2EE8               	decfsz	wreg,f,c
  3535  0019FC  D7F8               	goto	u9815
  3536  0019FE  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3537  001A02  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3538  001A06  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3539  001A0A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3540                           
  3541                           ; BSR set to: 0
  3542                           ;inc\CANlib.h: 346: TXB0SIDL = TXB0SIDL & 0b00011111;
  3543  001A0E  010F               	movlb	15	; () banked
  3544  001A10  5142               	movf	66,w,b	;volatile
  3545  001A12  0B1F               	andlw	31
  3546  001A14  010F               	movlb	15	; () banked
  3547  001A16  6F42               	movwf	66,b	;volatile
  3548                           
  3549                           ; BSR set to: 15
  3550                           ;inc\CANlib.h: 347: TXB0SIDL = (unsigned char) tamp;
  3551  001A18  C083  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  3552  001A1C                     l7440:
  3553                           
  3554                           ;inc\CANlib.h: 348: }
  3555                           ;inc\CANlib.h: 350: if (0b00000001 & flags)
  3556  001A1C  0100               	movlb	0	; () banked
  3557  001A1E  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  3558  001A20  D003               	goto	l373
  3559                           
  3560                           ; BSR set to: 0
  3561                           ;inc\CANlib.h: 351: TXB0CONbits.TXPRI0 = 0x01;
  3562  001A22  010F               	movlb	15	; () banked
  3563  001A24  8140               	bsf	64,0,b	;volatile
  3564  001A26  D002               	goto	l374
  3565  001A28                     l373:
  3566                           
  3567                           ; BSR set to: 0
  3568                           ;inc\CANlib.h: 352: else
  3569                           ;inc\CANlib.h: 353: TXB0CONbits.TXPRI0 = 0x00;
  3570  001A28  010F               	movlb	15	; () banked
  3571  001A2A  9140               	bcf	64,0,b	;volatile
  3572  001A2C                     l374:
  3573                           
  3574                           ; BSR set to: 15
  3575                           ;inc\CANlib.h: 354: if (0b00000010 & flags)
  3576  001A2C  0100               	movlb	0	; () banked
  3577  001A2E  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  3578  001A30  D003               	goto	l375
  3579                           
  3580                           ; BSR set to: 0
  3581                           ;inc\CANlib.h: 355: TXB0CONbits.TXPRI1 = 0x01;
  3582  001A32  010F               	movlb	15	; () banked
  3583  001A34  8340               	bsf	64,1,b	;volatile
  3584  001A36  D002               	goto	l7446
  3585  001A38                     l375:
  3586                           
  3587                           ; BSR set to: 0
  3588                           ;inc\CANlib.h: 356: else
  3589                           ;inc\CANlib.h: 357: TXB0CONbits.TXPRI1 = 0x00;
  3590  001A38  010F               	movlb	15	; () banked
  3591  001A3A  9340               	bcf	64,1,b	;volatile
  3592  001A3C                     l7446:
  3593                           
  3594                           ; BSR set to: 15
  3595                           ;inc\CANlib.h: 359: TXB0D0 = data[0];
  3596  001A3C  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  3597  001A40  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  3598  001A44  50DF               	movf	indf2,w,c
  3599  001A46  010F               	movlb	15	; () banked
  3600  001A48  6F46               	movwf	70,b	;volatile
  3601                           
  3602                           ; BSR set to: 15
  3603                           ;inc\CANlib.h: 360: TXB0D1 = data[1];
  3604  001A4A  0100               	movlb	0	; () banked
  3605  001A4C  EE20 F001          	lfsr	2,1
  3606  001A50  517B               	movf	CANsendMessage@data& (0+255),w,b
  3607  001A52  26D9               	addwf	fsr2l,f,c
  3608  001A54  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3609  001A56  22DA               	addwfc	fsr2h,f,c
  3610  001A58  50DF               	movf	indf2,w,c
  3611  001A5A  010F               	movlb	15	; () banked
  3612  001A5C  6F47               	movwf	71,b	;volatile
  3613                           
  3614                           ; BSR set to: 15
  3615                           ;inc\CANlib.h: 361: TXB0D2 = data[2];
  3616  001A5E  0100               	movlb	0	; () banked
  3617  001A60  EE20 F002          	lfsr	2,2
  3618  001A64  517B               	movf	CANsendMessage@data& (0+255),w,b
  3619  001A66  26D9               	addwf	fsr2l,f,c
  3620  001A68  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3621  001A6A  22DA               	addwfc	fsr2h,f,c
  3622  001A6C  50DF               	movf	indf2,w,c
  3623  001A6E  010F               	movlb	15	; () banked
  3624  001A70  6F48               	movwf	72,b	;volatile
  3625                           
  3626                           ; BSR set to: 15
  3627                           ;inc\CANlib.h: 362: TXB0D3 = data[3];
  3628  001A72  0100               	movlb	0	; () banked
  3629  001A74  EE20 F003          	lfsr	2,3
  3630  001A78  517B               	movf	CANsendMessage@data& (0+255),w,b
  3631  001A7A  26D9               	addwf	fsr2l,f,c
  3632  001A7C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3633  001A7E  22DA               	addwfc	fsr2h,f,c
  3634  001A80  50DF               	movf	indf2,w,c
  3635  001A82  010F               	movlb	15	; () banked
  3636  001A84  6F49               	movwf	73,b	;volatile
  3637                           
  3638                           ; BSR set to: 15
  3639                           ;inc\CANlib.h: 363: TXB0D4 = data[4];
  3640  001A86  0100               	movlb	0	; () banked
  3641  001A88  EE20 F004          	lfsr	2,4
  3642  001A8C  517B               	movf	CANsendMessage@data& (0+255),w,b
  3643  001A8E  26D9               	addwf	fsr2l,f,c
  3644  001A90  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3645  001A92  22DA               	addwfc	fsr2h,f,c
  3646  001A94  50DF               	movf	indf2,w,c
  3647  001A96  010F               	movlb	15	; () banked
  3648  001A98  6F4A               	movwf	74,b	;volatile
  3649                           
  3650                           ; BSR set to: 15
  3651                           ;inc\CANlib.h: 364: TXB0D5 = data[5];
  3652  001A9A  0100               	movlb	0	; () banked
  3653  001A9C  EE20 F005          	lfsr	2,5
  3654  001AA0  517B               	movf	CANsendMessage@data& (0+255),w,b
  3655  001AA2  26D9               	addwf	fsr2l,f,c
  3656  001AA4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3657  001AA6  22DA               	addwfc	fsr2h,f,c
  3658  001AA8  50DF               	movf	indf2,w,c
  3659  001AAA  010F               	movlb	15	; () banked
  3660  001AAC  6F4B               	movwf	75,b	;volatile
  3661                           
  3662                           ; BSR set to: 15
  3663                           ;inc\CANlib.h: 365: TXB0D6 = data[6];
  3664  001AAE  0100               	movlb	0	; () banked
  3665  001AB0  EE20 F006          	lfsr	2,6
  3666  001AB4  517B               	movf	CANsendMessage@data& (0+255),w,b
  3667  001AB6  26D9               	addwf	fsr2l,f,c
  3668  001AB8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3669  001ABA  22DA               	addwfc	fsr2h,f,c
  3670  001ABC  50DF               	movf	indf2,w,c
  3671  001ABE  010F               	movlb	15	; () banked
  3672  001AC0  6F4C               	movwf	76,b	;volatile
  3673                           
  3674                           ; BSR set to: 15
  3675                           ;inc\CANlib.h: 366: TXB0D7 = data[7];
  3676  001AC2  0100               	movlb	0	; () banked
  3677  001AC4  EE20 F007          	lfsr	2,7
  3678  001AC8  517B               	movf	CANsendMessage@data& (0+255),w,b
  3679  001ACA  26D9               	addwf	fsr2l,f,c
  3680  001ACC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3681  001ACE  22DA               	addwfc	fsr2h,f,c
  3682  001AD0  50DF               	movf	indf2,w,c
  3683  001AD2  010F               	movlb	15	; () banked
  3684  001AD4  6F4D               	movwf	77,b	;volatile
  3685                           
  3686                           ; BSR set to: 15
  3687                           ;inc\CANlib.h: 368: TXB0CONbits.TXREQ = 0x01;
  3688  001AD6  010F               	movlb	15	; () banked
  3689  001AD8  8740               	bsf	64,3,b	;volatile
  3690                           
  3691                           ; BSR set to: 15
  3692                           ;inc\CANlib.h: 369: return;
  3693  001ADA  0012               	return	
  3694  001ADC                     l363:
  3695                           
  3696                           ; BSR set to: 15
  3697                           ;inc\CANlib.h: 370: }
  3698                           ;inc\CANlib.h: 374: if (TXB1CONbits.TXREQ == 0)
  3699  001ADC  010F               	movlb	15	; () banked
  3700  001ADE  B730               	btfsc	48,3,b	;volatile
  3701  001AE0  D13F               	goto	l378
  3702                           
  3703                           ; BSR set to: 15
  3704                           ;inc\CANlib.h: 375: { TXB1DLC = dataLength;
  3705  001AE2  C07D  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  3706                           
  3707                           ;inc\CANlib.h: 377: if (0b01000000 & flags)
  3708  001AE6  0100               	movlb	0	; () banked
  3709  001AE8  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  3710  001AEA  D003               	goto	l379
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;inc\CANlib.h: 378: TXB1DLCbits.TXRTR = 0x01;
  3714  001AEC  010F               	movlb	15	; () banked
  3715  001AEE  8D35               	bsf	53,6,b	;volatile
  3716  001AF0  D002               	goto	l380
  3717  001AF2                     l379:
  3718                           
  3719                           ; BSR set to: 0
  3720                           ;inc\CANlib.h: 379: else
  3721                           ;inc\CANlib.h: 380: TXB1DLCbits.TXRTR = 0x00;
  3722  001AF2  010F               	movlb	15	; () banked
  3723  001AF4  9D35               	bcf	53,6,b	;volatile
  3724  001AF6                     l380:
  3725                           
  3726                           ; BSR set to: 15
  3727                           ;inc\CANlib.h: 382: if (CAN_TX_FRAME_MASK & flags)
  3728  001AF6  0100               	movlb	0	; () banked
  3729  001AF8  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  3730  001AFA  D079               	goto	l381
  3731                           
  3732                           ; BSR set to: 0
  3733                           ;inc\CANlib.h: 383: {
  3734                           ;inc\CANlib.h: 384: tamp = identifier & 0x000000FF;
  3735  001AFC  0100               	movlb	0	; () banked
  3736  001AFE  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  3737  001B00  0100               	movlb	0	; () banked
  3738  001B02  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3739  001B04  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3740  001B06  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3741  001B08  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3742                           
  3743                           ; BSR set to: 0
  3744                           ;inc\CANlib.h: 385: TXB1EIDL = (unsigned char) tamp;
  3745  001B0A  C083  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  3746                           
  3747                           ; BSR set to: 0
  3748                           ;inc\CANlib.h: 387: tamp = identifier & 0x0000FF00;
  3749  001B0E  0E00               	movlw	0
  3750  001B10  0100               	movlb	0	; () banked
  3751  001B12  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3752  001B14  0100               	movlb	0	; () banked
  3753  001B16  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3754  001B18  0EFF               	movlw	255
  3755  001B1A  0100               	movlb	0	; () banked
  3756  001B1C  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3757  001B1E  0100               	movlb	0	; () banked
  3758  001B20  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3759  001B22  0E00               	movlw	0
  3760  001B24  0100               	movlb	0	; () banked
  3761  001B26  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3762  001B28  0100               	movlb	0	; () banked
  3763  001B2A  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3764  001B2C  0E00               	movlw	0
  3765  001B2E  0100               	movlb	0	; () banked
  3766  001B30  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3767  001B32  0100               	movlb	0	; () banked
  3768  001B34  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3769                           
  3770                           ; BSR set to: 0
  3771                           ;inc\CANlib.h: 388: tamp = tamp >> 8;
  3772  001B36  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3773  001B3A  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3774  001B3E  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3775  001B42  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3776  001B46  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  3777  001B4A  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  3778  001B4E  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  3779  001B52  0100               	movlb	0	; () banked
  3780  001B54  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  3781  001B56  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3782  001B5A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3783  001B5E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3784  001B62  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3785                           
  3786                           ; BSR set to: 0
  3787                           ;inc\CANlib.h: 389: TXB1EIDH = (unsigned char) tamp;
  3788  001B66  C083  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  3789                           
  3790                           ; BSR set to: 0
  3791                           ;inc\CANlib.h: 391: TXB1SIDL = 0x00;
  3792  001B6A  0E00               	movlw	0
  3793  001B6C  010F               	movlb	15	; () banked
  3794  001B6E  6F32               	movwf	50,b	;volatile
  3795                           
  3796                           ; BSR set to: 15
  3797                           ;inc\CANlib.h: 392: TXB1SIDLbits.EXIDE = 0x01;
  3798  001B70  010F               	movlb	15	; () banked
  3799  001B72  8732               	bsf	50,3,b	;volatile
  3800                           
  3801                           ; BSR set to: 15
  3802                           ;inc\CANlib.h: 394: if (identifier & 0x00010000)
  3803  001B74  0100               	movlb	0	; () banked
  3804  001B76  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  3805  001B78  D002               	goto	l382
  3806                           
  3807                           ; BSR set to: 0
  3808                           ;inc\CANlib.h: 395: TXB1SIDLbits.EID16 = 0x01;
  3809  001B7A  010F               	movlb	15	; () banked
  3810  001B7C  8132               	bsf	50,0,b	;volatile
  3811  001B7E                     l382:
  3812                           
  3813                           ;inc\CANlib.h: 396: if (identifier & 0x00020000)
  3814  001B7E  0100               	movlb	0	; () banked
  3815  001B80  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  3816  001B82  D002               	goto	l383
  3817                           
  3818                           ; BSR set to: 0
  3819                           ;inc\CANlib.h: 397: TXB1SIDLbits.EID17 = 0x01;
  3820  001B84  010F               	movlb	15	; () banked
  3821  001B86  8332               	bsf	50,1,b	;volatile
  3822  001B88                     l383:
  3823                           
  3824                           ;inc\CANlib.h: 398: if (identifier & 0x00040000)
  3825  001B88  0100               	movlb	0	; () banked
  3826  001B8A  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  3827  001B8C  D002               	goto	l384
  3828                           
  3829                           ; BSR set to: 0
  3830                           ;inc\CANlib.h: 399: TXB1SIDLbits.SID0 = 0x01;
  3831  001B8E  010F               	movlb	15	; () banked
  3832  001B90  8B32               	bsf	50,5,b	;volatile
  3833  001B92                     l384:
  3834                           
  3835                           ;inc\CANlib.h: 400: if (identifier & 0x00080000)
  3836  001B92  0100               	movlb	0	; () banked
  3837  001B94  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  3838  001B96  D002               	goto	l385
  3839                           
  3840                           ; BSR set to: 0
  3841                           ;inc\CANlib.h: 401: TXB1SIDLbits.SID1 = 0x01;
  3842  001B98  010F               	movlb	15	; () banked
  3843  001B9A  8D32               	bsf	50,6,b	;volatile
  3844  001B9C                     l385:
  3845                           
  3846                           ;inc\CANlib.h: 402: if (identifier & 0x00100000)
  3847  001B9C  0100               	movlb	0	; () banked
  3848  001B9E  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  3849  001BA0  D002               	goto	l7496
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;inc\CANlib.h: 403: TXB1SIDLbits.SID2 = 0x01;
  3853  001BA2  010F               	movlb	15	; () banked
  3854  001BA4  8F32               	bsf	50,7,b	;volatile
  3855  001BA6                     l7496:
  3856                           
  3857                           ;inc\CANlib.h: 405: tamp = (identifier >> 21);
  3858  001BA6  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3859  001BAA  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3860  001BAE  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3861  001BB2  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3862  001BB6  0E16               	movlw	22
  3863  001BB8  D006               	goto	u9920
  3864  001BBA                     u9925:
  3865  001BBA  0100               	movlb	0	; () banked
  3866  001BBC  90D8               	bcf	status,0,c
  3867  001BBE  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3868  001BC0  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3869  001BC2  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3870  001BC4  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3871  001BC6                     u9920:
  3872  001BC6  2EE8               	decfsz	wreg,f,c
  3873  001BC8  D7F8               	goto	u9925
  3874  001BCA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3875  001BCE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3876  001BD2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3877  001BD6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3878                           
  3879                           ; BSR set to: 0
  3880                           ;inc\CANlib.h: 406: tamp = tamp & 0x000000FF;
  3881  001BDA  0100               	movlb	0	; () banked
  3882  001BDC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3883  001BDE  0100               	movlb	0	; () banked
  3884  001BE0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3885  001BE2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3886  001BE4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3887  001BE6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3888                           
  3889                           ; BSR set to: 0
  3890                           ;inc\CANlib.h: 407: TXB1SIDH = (unsigned char) tamp;
  3891  001BE8  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  3892                           
  3893                           ;inc\CANlib.h: 408: }
  3894  001BEC  D059               	goto	l7516
  3895  001BEE                     l381:
  3896                           
  3897                           ; BSR set to: 0
  3898                           ;inc\CANlib.h: 410: else
  3899                           ;inc\CANlib.h: 412: {
  3900                           ;inc\CANlib.h: 413: TXB1SIDLbits.EXIDE = 0x00;
  3901  001BEE  010F               	movlb	15	; () banked
  3902  001BF0  9732               	bcf	50,3,b	;volatile
  3903                           
  3904                           ; BSR set to: 15
  3905                           ;inc\CANlib.h: 415: tamp = (identifier >> 3);
  3906  001BF2  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3907  001BF6  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3908  001BFA  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3909  001BFE  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3910  001C02  0E04               	movlw	4
  3911  001C04  D006               	goto	u9930
  3912  001C06                     u9935:
  3913  001C06  0100               	movlb	0	; () banked
  3914  001C08  90D8               	bcf	status,0,c
  3915  001C0A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3916  001C0C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3917  001C0E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3918  001C10  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3919  001C12                     u9930:
  3920  001C12  2EE8               	decfsz	wreg,f,c
  3921  001C14  D7F8               	goto	u9935
  3922  001C16  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3923  001C1A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3924  001C1E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3925  001C22  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3926                           
  3927                           ; BSR set to: 0
  3928                           ;inc\CANlib.h: 416: tamp = tamp & 0x000000FF;
  3929  001C26  0100               	movlb	0	; () banked
  3930  001C28  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3931  001C2A  0100               	movlb	0	; () banked
  3932  001C2C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3933  001C2E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3934  001C30  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3935  001C32  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3936                           
  3937                           ; BSR set to: 0
  3938                           ;inc\CANlib.h: 417: TXB1SIDH = (unsigned char) tamp;
  3939  001C34  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;inc\CANlib.h: 419: tamp = identifier & 0x00000007;
  3943  001C38  0E07               	movlw	7
  3944  001C3A  0100               	movlb	0	; () banked
  3945  001C3C  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3946  001C3E  0100               	movlb	0	; () banked
  3947  001C40  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3948  001C42  0E00               	movlw	0
  3949  001C44  0100               	movlb	0	; () banked
  3950  001C46  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3951  001C48  0100               	movlb	0	; () banked
  3952  001C4A  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3953  001C4C  0E00               	movlw	0
  3954  001C4E  0100               	movlb	0	; () banked
  3955  001C50  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3956  001C52  0100               	movlb	0	; () banked
  3957  001C54  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3958  001C56  0E00               	movlw	0
  3959  001C58  0100               	movlb	0	; () banked
  3960  001C5A  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3961  001C5C  0100               	movlb	0	; () banked
  3962  001C5E  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3963                           
  3964                           ; BSR set to: 0
  3965                           ;inc\CANlib.h: 420: tamp = tamp << 5;
  3966  001C60  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3967  001C64  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3968  001C68  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3969  001C6C  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3970  001C70  0E05               	movlw	5
  3971  001C72                     u9945:
  3972  001C72  90D8               	bcf	status,0,c
  3973  001C74  0100               	movlb	0	; () banked
  3974  001C76  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  3975  001C78  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  3976  001C7A  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  3977  001C7C  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  3978  001C7E  2EE8               	decfsz	wreg,f,c
  3979  001C80  D7F8               	goto	u9945
  3980  001C82  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3981  001C86  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3982  001C8A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3983  001C8E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3984                           
  3985                           ; BSR set to: 0
  3986                           ;inc\CANlib.h: 421: TXB1SIDL = TXB1SIDL & 0b00011111;
  3987  001C92  010F               	movlb	15	; () banked
  3988  001C94  5132               	movf	50,w,b	;volatile
  3989  001C96  0B1F               	andlw	31
  3990  001C98  010F               	movlb	15	; () banked
  3991  001C9A  6F32               	movwf	50,b	;volatile
  3992                           
  3993                           ; BSR set to: 15
  3994                           ;inc\CANlib.h: 422: TXB1SIDL = (unsigned char) tamp;
  3995  001C9C  C083  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  3996  001CA0                     l7516:
  3997                           
  3998                           ;inc\CANlib.h: 423: }
  3999                           ;inc\CANlib.h: 425: if (0b00000001 & flags)
  4000  001CA0  0100               	movlb	0	; () banked
  4001  001CA2  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  4002  001CA4  D003               	goto	l388
  4003                           
  4004                           ; BSR set to: 0
  4005                           ;inc\CANlib.h: 426: TXB1CONbits.TXPRI0 = 0x01;
  4006  001CA6  010F               	movlb	15	; () banked
  4007  001CA8  8130               	bsf	48,0,b	;volatile
  4008  001CAA  D002               	goto	l389
  4009  001CAC                     l388:
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;inc\CANlib.h: 427: else
  4013                           ;inc\CANlib.h: 428: TXB1CONbits.TXPRI0 = 0x00;
  4014  001CAC  010F               	movlb	15	; () banked
  4015  001CAE  9130               	bcf	48,0,b	;volatile
  4016  001CB0                     l389:
  4017                           
  4018                           ; BSR set to: 15
  4019                           ;inc\CANlib.h: 429: if (0b00000010 & flags)
  4020  001CB0  0100               	movlb	0	; () banked
  4021  001CB2  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  4022  001CB4  D003               	goto	l390
  4023                           
  4024                           ; BSR set to: 0
  4025                           ;inc\CANlib.h: 430: TXB1CONbits.TXPRI1 = 0x01;
  4026  001CB6  010F               	movlb	15	; () banked
  4027  001CB8  8330               	bsf	48,1,b	;volatile
  4028  001CBA  D002               	goto	l7522
  4029  001CBC                     l390:
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;inc\CANlib.h: 431: else
  4033                           ;inc\CANlib.h: 432: TXB1CONbits.TXPRI1 = 0x00;
  4034  001CBC  010F               	movlb	15	; () banked
  4035  001CBE  9330               	bcf	48,1,b	;volatile
  4036  001CC0                     l7522:
  4037                           
  4038                           ; BSR set to: 15
  4039                           ;inc\CANlib.h: 434: TXB1D0 = data[0];
  4040  001CC0  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  4041  001CC4  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  4042  001CC8  50DF               	movf	indf2,w,c
  4043  001CCA  010F               	movlb	15	; () banked
  4044  001CCC  6F36               	movwf	54,b	;volatile
  4045                           
  4046                           ; BSR set to: 15
  4047                           ;inc\CANlib.h: 435: TXB1D1 = data[1];
  4048  001CCE  0100               	movlb	0	; () banked
  4049  001CD0  EE20 F001          	lfsr	2,1
  4050  001CD4  517B               	movf	CANsendMessage@data& (0+255),w,b
  4051  001CD6  26D9               	addwf	fsr2l,f,c
  4052  001CD8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4053  001CDA  22DA               	addwfc	fsr2h,f,c
  4054  001CDC  50DF               	movf	indf2,w,c
  4055  001CDE  010F               	movlb	15	; () banked
  4056  001CE0  6F37               	movwf	55,b	;volatile
  4057                           
  4058                           ; BSR set to: 15
  4059                           ;inc\CANlib.h: 436: TXB1D2 = data[2];
  4060  001CE2  0100               	movlb	0	; () banked
  4061  001CE4  EE20 F002          	lfsr	2,2
  4062  001CE8  517B               	movf	CANsendMessage@data& (0+255),w,b
  4063  001CEA  26D9               	addwf	fsr2l,f,c
  4064  001CEC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4065  001CEE  22DA               	addwfc	fsr2h,f,c
  4066  001CF0  50DF               	movf	indf2,w,c
  4067  001CF2  010F               	movlb	15	; () banked
  4068  001CF4  6F38               	movwf	56,b	;volatile
  4069                           
  4070                           ; BSR set to: 15
  4071                           ;inc\CANlib.h: 437: TXB1D3 = data[3];
  4072  001CF6  0100               	movlb	0	; () banked
  4073  001CF8  EE20 F003          	lfsr	2,3
  4074  001CFC  517B               	movf	CANsendMessage@data& (0+255),w,b
  4075  001CFE  26D9               	addwf	fsr2l,f,c
  4076  001D00  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4077  001D02  22DA               	addwfc	fsr2h,f,c
  4078  001D04  50DF               	movf	indf2,w,c
  4079  001D06  010F               	movlb	15	; () banked
  4080  001D08  6F39               	movwf	57,b	;volatile
  4081                           
  4082                           ; BSR set to: 15
  4083                           ;inc\CANlib.h: 438: TXB1D4 = data[4];
  4084  001D0A  0100               	movlb	0	; () banked
  4085  001D0C  EE20 F004          	lfsr	2,4
  4086  001D10  517B               	movf	CANsendMessage@data& (0+255),w,b
  4087  001D12  26D9               	addwf	fsr2l,f,c
  4088  001D14  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4089  001D16  22DA               	addwfc	fsr2h,f,c
  4090  001D18  50DF               	movf	indf2,w,c
  4091  001D1A  010F               	movlb	15	; () banked
  4092  001D1C  6F3A               	movwf	58,b	;volatile
  4093                           
  4094                           ; BSR set to: 15
  4095                           ;inc\CANlib.h: 439: TXB1D5 = data[5];
  4096  001D1E  0100               	movlb	0	; () banked
  4097  001D20  EE20 F005          	lfsr	2,5
  4098  001D24  517B               	movf	CANsendMessage@data& (0+255),w,b
  4099  001D26  26D9               	addwf	fsr2l,f,c
  4100  001D28  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4101  001D2A  22DA               	addwfc	fsr2h,f,c
  4102  001D2C  50DF               	movf	indf2,w,c
  4103  001D2E  010F               	movlb	15	; () banked
  4104  001D30  6F3B               	movwf	59,b	;volatile
  4105                           
  4106                           ; BSR set to: 15
  4107                           ;inc\CANlib.h: 440: TXB1D6 = data[6];
  4108  001D32  0100               	movlb	0	; () banked
  4109  001D34  EE20 F006          	lfsr	2,6
  4110  001D38  517B               	movf	CANsendMessage@data& (0+255),w,b
  4111  001D3A  26D9               	addwf	fsr2l,f,c
  4112  001D3C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4113  001D3E  22DA               	addwfc	fsr2h,f,c
  4114  001D40  50DF               	movf	indf2,w,c
  4115  001D42  010F               	movlb	15	; () banked
  4116  001D44  6F3C               	movwf	60,b	;volatile
  4117                           
  4118                           ; BSR set to: 15
  4119                           ;inc\CANlib.h: 441: TXB1D7 = data[7];
  4120  001D46  0100               	movlb	0	; () banked
  4121  001D48  EE20 F007          	lfsr	2,7
  4122  001D4C  517B               	movf	CANsendMessage@data& (0+255),w,b
  4123  001D4E  26D9               	addwf	fsr2l,f,c
  4124  001D50  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4125  001D52  22DA               	addwfc	fsr2h,f,c
  4126  001D54  50DF               	movf	indf2,w,c
  4127  001D56  010F               	movlb	15	; () banked
  4128  001D58  6F3D               	movwf	61,b	;volatile
  4129                           
  4130                           ; BSR set to: 15
  4131                           ;inc\CANlib.h: 443: TXB1CONbits.TXREQ = 0x01;
  4132  001D5A  010F               	movlb	15	; () banked
  4133  001D5C  8730               	bsf	48,3,b	;volatile
  4134                           
  4135                           ; BSR set to: 15
  4136                           ;inc\CANlib.h: 445: return;
  4137  001D5E  0012               	return	
  4138  001D60                     l378:
  4139                           
  4140                           ; BSR set to: 15
  4141                           ;inc\CANlib.h: 446: }
  4142                           ;inc\CANlib.h: 450: if (TXB2CONbits.TXREQ == 0)
  4143  001D60  010F               	movlb	15	; () banked
  4144  001D62  B720               	btfsc	32,3,b	;volatile
  4145  001D64  0012               	return	
  4146                           
  4147                           ; BSR set to: 15
  4148                           ;inc\CANlib.h: 451: { TXB2DLC = dataLength;
  4149  001D66  C07D  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  4150                           
  4151                           ;inc\CANlib.h: 453: if (0b01000000 & flags)
  4152  001D6A  0100               	movlb	0	; () banked
  4153  001D6C  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  4154  001D6E  D003               	goto	l393
  4155                           
  4156                           ; BSR set to: 0
  4157                           ;inc\CANlib.h: 454: TXB2DLCbits.TXRTR = 0x01;
  4158  001D70  010F               	movlb	15	; () banked
  4159  001D72  8D25               	bsf	37,6,b	;volatile
  4160  001D74  D002               	goto	l394
  4161  001D76                     l393:
  4162                           
  4163                           ; BSR set to: 0
  4164                           ;inc\CANlib.h: 455: else
  4165                           ;inc\CANlib.h: 456: TXB2DLCbits.TXRTR = 0x00;
  4166  001D76  010F               	movlb	15	; () banked
  4167  001D78  9D25               	bcf	37,6,b	;volatile
  4168  001D7A                     l394:
  4169                           
  4170                           ; BSR set to: 15
  4171                           ;inc\CANlib.h: 458: if (CAN_TX_FRAME_MASK & flags)
  4172  001D7A  0100               	movlb	0	; () banked
  4173  001D7C  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  4174  001D7E  D079               	goto	l395
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;inc\CANlib.h: 459: {
  4178                           ;inc\CANlib.h: 460: tamp = identifier & 0x000000FF;
  4179  001D80  0100               	movlb	0	; () banked
  4180  001D82  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  4181  001D84  0100               	movlb	0	; () banked
  4182  001D86  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4183  001D88  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4184  001D8A  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4185  001D8C  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4186                           
  4187                           ; BSR set to: 0
  4188                           ;inc\CANlib.h: 461: TXB2EIDL = (unsigned char) tamp;
  4189  001D8E  C083  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  4190                           
  4191                           ; BSR set to: 0
  4192                           ;inc\CANlib.h: 463: tamp = identifier & 0x0000FF00;
  4193  001D92  0E00               	movlw	0
  4194  001D94  0100               	movlb	0	; () banked
  4195  001D96  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  4196  001D98  0100               	movlb	0	; () banked
  4197  001D9A  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4198  001D9C  0EFF               	movlw	255
  4199  001D9E  0100               	movlb	0	; () banked
  4200  001DA0  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  4201  001DA2  0100               	movlb	0	; () banked
  4202  001DA4  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  4203  001DA6  0E00               	movlw	0
  4204  001DA8  0100               	movlb	0	; () banked
  4205  001DAA  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  4206  001DAC  0100               	movlb	0	; () banked
  4207  001DAE  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  4208  001DB0  0E00               	movlw	0
  4209  001DB2  0100               	movlb	0	; () banked
  4210  001DB4  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  4211  001DB6  0100               	movlb	0	; () banked
  4212  001DB8  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  4213                           
  4214                           ; BSR set to: 0
  4215                           ;inc\CANlib.h: 464: tamp = tamp >> 8;
  4216  001DBA  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  4217  001DBE  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  4218  001DC2  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  4219  001DC6  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  4220  001DCA  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  4221  001DCE  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  4222  001DD2  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  4223  001DD6  0100               	movlb	0	; () banked
  4224  001DD8  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  4225  001DDA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4226  001DDE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4227  001DE2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4228  001DE6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4229                           
  4230                           ; BSR set to: 0
  4231                           ;inc\CANlib.h: 465: TXB2EIDH = (unsigned char) tamp;
  4232  001DEA  C083  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  4233                           
  4234                           ; BSR set to: 0
  4235                           ;inc\CANlib.h: 467: TXB2SIDL = 0x00;
  4236  001DEE  0E00               	movlw	0
  4237  001DF0  010F               	movlb	15	; () banked
  4238  001DF2  6F22               	movwf	34,b	;volatile
  4239                           
  4240                           ; BSR set to: 15
  4241                           ;inc\CANlib.h: 468: TXB2SIDLbits.EXIDE = 0x01;
  4242  001DF4  010F               	movlb	15	; () banked
  4243  001DF6  8722               	bsf	34,3,b	;volatile
  4244                           
  4245                           ; BSR set to: 15
  4246                           ;inc\CANlib.h: 470: if (identifier & 0x00010000)
  4247  001DF8  0100               	movlb	0	; () banked
  4248  001DFA  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  4249  001DFC  D002               	goto	l396
  4250                           
  4251                           ; BSR set to: 0
  4252                           ;inc\CANlib.h: 471: TXB2SIDLbits.EID16 = 0x01;
  4253  001DFE  010F               	movlb	15	; () banked
  4254  001E00  8122               	bsf	34,0,b	;volatile
  4255  001E02                     l396:
  4256                           
  4257                           ;inc\CANlib.h: 472: if (identifier & 0x00020000)
  4258  001E02  0100               	movlb	0	; () banked
  4259  001E04  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  4260  001E06  D002               	goto	l397
  4261                           
  4262                           ; BSR set to: 0
  4263                           ;inc\CANlib.h: 473: TXB2SIDLbits.EID17 = 0x01;
  4264  001E08  010F               	movlb	15	; () banked
  4265  001E0A  8322               	bsf	34,1,b	;volatile
  4266  001E0C                     l397:
  4267                           
  4268                           ;inc\CANlib.h: 474: if (identifier & 0x00040000)
  4269  001E0C  0100               	movlb	0	; () banked
  4270  001E0E  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  4271  001E10  D002               	goto	l398
  4272                           
  4273                           ; BSR set to: 0
  4274                           ;inc\CANlib.h: 475: TXB2SIDLbits.SID0 = 0x01;
  4275  001E12  010F               	movlb	15	; () banked
  4276  001E14  8B22               	bsf	34,5,b	;volatile
  4277  001E16                     l398:
  4278                           
  4279                           ;inc\CANlib.h: 476: if (identifier & 0x00080000)
  4280  001E16  0100               	movlb	0	; () banked
  4281  001E18  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  4282  001E1A  D002               	goto	l399
  4283                           
  4284                           ; BSR set to: 0
  4285                           ;inc\CANlib.h: 477: TXB2SIDLbits.SID1 = 0x01;
  4286  001E1C  010F               	movlb	15	; () banked
  4287  001E1E  8D22               	bsf	34,6,b	;volatile
  4288  001E20                     l399:
  4289                           
  4290                           ;inc\CANlib.h: 478: if (identifier & 0x00100000)
  4291  001E20  0100               	movlb	0	; () banked
  4292  001E22  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  4293  001E24  D002               	goto	l7572
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;inc\CANlib.h: 479: TXB2SIDLbits.SID2 = 0x01;
  4297  001E26  010F               	movlb	15	; () banked
  4298  001E28  8F22               	bsf	34,7,b	;volatile
  4299  001E2A                     l7572:
  4300                           
  4301                           ;inc\CANlib.h: 481: tamp = (identifier >> 21);
  4302  001E2A  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  4303  001E2E  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  4304  001E32  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  4305  001E36  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  4306  001E3A  0E16               	movlw	22
  4307  001E3C  D006               	goto	u10050
  4308  001E3E                     u10055:
  4309  001E3E  0100               	movlb	0	; () banked
  4310  001E40  90D8               	bcf	status,0,c
  4311  001E42  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  4312  001E44  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  4313  001E46  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  4314  001E48  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  4315  001E4A                     u10050:
  4316  001E4A  2EE8               	decfsz	wreg,f,c
  4317  001E4C  D7F8               	goto	u10055
  4318  001E4E  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4319  001E52  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4320  001E56  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4321  001E5A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;inc\CANlib.h: 482: tamp = tamp & 0x000000FF;
  4325  001E5E  0100               	movlb	0	; () banked
  4326  001E60  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  4327  001E62  0100               	movlb	0	; () banked
  4328  001E64  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4329  001E66  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4330  001E68  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4331  001E6A  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;inc\CANlib.h: 483: TXB2SIDH = (unsigned char) tamp;
  4335  001E6C  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  4336                           
  4337                           ;inc\CANlib.h: 484: }
  4338  001E70  D059               	goto	l7592
  4339  001E72                     l395:
  4340                           
  4341                           ; BSR set to: 0
  4342                           ;inc\CANlib.h: 486: else
  4343                           ;inc\CANlib.h: 488: {
  4344                           ;inc\CANlib.h: 489: TXB2SIDLbits.EXIDE = 0x00;
  4345  001E72  010F               	movlb	15	; () banked
  4346  001E74  9722               	bcf	34,3,b	;volatile
  4347                           
  4348                           ; BSR set to: 15
  4349                           ;inc\CANlib.h: 491: tamp = (identifier >> 3);
  4350  001E76  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  4351  001E7A  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  4352  001E7E  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  4353  001E82  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  4354  001E86  0E04               	movlw	4
  4355  001E88  D006               	goto	u10060
  4356  001E8A                     u10065:
  4357  001E8A  0100               	movlb	0	; () banked
  4358  001E8C  90D8               	bcf	status,0,c
  4359  001E8E  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  4360  001E90  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  4361  001E92  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  4362  001E94  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  4363  001E96                     u10060:
  4364  001E96  2EE8               	decfsz	wreg,f,c
  4365  001E98  D7F8               	goto	u10065
  4366  001E9A  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4367  001E9E  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4368  001EA2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4369  001EA6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4370                           
  4371                           ; BSR set to: 0
  4372                           ;inc\CANlib.h: 492: tamp = tamp & 0x000000FF;
  4373  001EAA  0100               	movlb	0	; () banked
  4374  001EAC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  4375  001EAE  0100               	movlb	0	; () banked
  4376  001EB0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4377  001EB2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4378  001EB4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4379  001EB6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4380                           
  4381                           ; BSR set to: 0
  4382                           ;inc\CANlib.h: 493: TXB2SIDH = (unsigned char) tamp;
  4383  001EB8  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  4384                           
  4385                           ; BSR set to: 0
  4386                           ;inc\CANlib.h: 495: tamp = identifier & 0x00000007;
  4387  001EBC  0E07               	movlw	7
  4388  001EBE  0100               	movlb	0	; () banked
  4389  001EC0  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  4390  001EC2  0100               	movlb	0	; () banked
  4391  001EC4  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4392  001EC6  0E00               	movlw	0
  4393  001EC8  0100               	movlb	0	; () banked
  4394  001ECA  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  4395  001ECC  0100               	movlb	0	; () banked
  4396  001ECE  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  4397  001ED0  0E00               	movlw	0
  4398  001ED2  0100               	movlb	0	; () banked
  4399  001ED4  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  4400  001ED6  0100               	movlb	0	; () banked
  4401  001ED8  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  4402  001EDA  0E00               	movlw	0
  4403  001EDC  0100               	movlb	0	; () banked
  4404  001EDE  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  4405  001EE0  0100               	movlb	0	; () banked
  4406  001EE2  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  4407                           
  4408                           ; BSR set to: 0
  4409                           ;inc\CANlib.h: 496: tamp = tamp << 5;
  4410  001EE4  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  4411  001EE8  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  4412  001EEC  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  4413  001EF0  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  4414  001EF4  0E05               	movlw	5
  4415  001EF6                     u10075:
  4416  001EF6  90D8               	bcf	status,0,c
  4417  001EF8  0100               	movlb	0	; () banked
  4418  001EFA  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  4419  001EFC  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  4420  001EFE  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  4421  001F00  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  4422  001F02  2EE8               	decfsz	wreg,f,c
  4423  001F04  D7F8               	goto	u10075
  4424  001F06  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4425  001F0A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4426  001F0E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4427  001F12  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4428                           
  4429                           ; BSR set to: 0
  4430                           ;inc\CANlib.h: 497: TXB2SIDL = TXB2SIDL & 0b00011111;
  4431  001F16  010F               	movlb	15	; () banked
  4432  001F18  5122               	movf	34,w,b	;volatile
  4433  001F1A  0B1F               	andlw	31
  4434  001F1C  010F               	movlb	15	; () banked
  4435  001F1E  6F22               	movwf	34,b	;volatile
  4436                           
  4437                           ; BSR set to: 15
  4438                           ;inc\CANlib.h: 498: TXB2SIDL = (unsigned char) tamp;
  4439  001F20  C083  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  4440  001F24                     l7592:
  4441                           
  4442                           ;inc\CANlib.h: 499: }
  4443                           ;inc\CANlib.h: 501: if (0b00000001 & flags)
  4444  001F24  0100               	movlb	0	; () banked
  4445  001F26  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  4446  001F28  D003               	goto	l402
  4447                           
  4448                           ; BSR set to: 0
  4449                           ;inc\CANlib.h: 502: TXB2CONbits.TXPRI0 = 0x01;
  4450  001F2A  010F               	movlb	15	; () banked
  4451  001F2C  8120               	bsf	32,0,b	;volatile
  4452  001F2E  D002               	goto	l403
  4453  001F30                     l402:
  4454                           
  4455                           ; BSR set to: 0
  4456                           ;inc\CANlib.h: 503: else
  4457                           ;inc\CANlib.h: 504: TXB2CONbits.TXPRI0 = 0x00;
  4458  001F30  010F               	movlb	15	; () banked
  4459  001F32  9120               	bcf	32,0,b	;volatile
  4460  001F34                     l403:
  4461                           
  4462                           ; BSR set to: 15
  4463                           ;inc\CANlib.h: 505: if (0b00000010 & flags)
  4464  001F34  0100               	movlb	0	; () banked
  4465  001F36  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  4466  001F38  D003               	goto	l404
  4467                           
  4468                           ; BSR set to: 0
  4469                           ;inc\CANlib.h: 506: TXB2CONbits.TXPRI1 = 0x01;
  4470  001F3A  010F               	movlb	15	; () banked
  4471  001F3C  8320               	bsf	32,1,b	;volatile
  4472  001F3E  D002               	goto	l7598
  4473  001F40                     l404:
  4474                           
  4475                           ; BSR set to: 0
  4476                           ;inc\CANlib.h: 507: else
  4477                           ;inc\CANlib.h: 508: TXB2CONbits.TXPRI1 = 0x00;
  4478  001F40  010F               	movlb	15	; () banked
  4479  001F42  9320               	bcf	32,1,b	;volatile
  4480  001F44                     l7598:
  4481                           
  4482                           ; BSR set to: 15
  4483                           ;inc\CANlib.h: 510: TXB2D0 = data[0];
  4484  001F44  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  4485  001F48  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  4486  001F4C  50DF               	movf	indf2,w,c
  4487  001F4E  010F               	movlb	15	; () banked
  4488  001F50  6F26               	movwf	38,b	;volatile
  4489                           
  4490                           ; BSR set to: 15
  4491                           ;inc\CANlib.h: 511: TXB2D1 = data[1];
  4492  001F52  0100               	movlb	0	; () banked
  4493  001F54  EE20 F001          	lfsr	2,1
  4494  001F58  517B               	movf	CANsendMessage@data& (0+255),w,b
  4495  001F5A  26D9               	addwf	fsr2l,f,c
  4496  001F5C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4497  001F5E  22DA               	addwfc	fsr2h,f,c
  4498  001F60  50DF               	movf	indf2,w,c
  4499  001F62  010F               	movlb	15	; () banked
  4500  001F64  6F27               	movwf	39,b	;volatile
  4501                           
  4502                           ; BSR set to: 15
  4503                           ;inc\CANlib.h: 512: TXB2D2 = data[2];
  4504  001F66  0100               	movlb	0	; () banked
  4505  001F68  EE20 F002          	lfsr	2,2
  4506  001F6C  517B               	movf	CANsendMessage@data& (0+255),w,b
  4507  001F6E  26D9               	addwf	fsr2l,f,c
  4508  001F70  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4509  001F72  22DA               	addwfc	fsr2h,f,c
  4510  001F74  50DF               	movf	indf2,w,c
  4511  001F76  010F               	movlb	15	; () banked
  4512  001F78  6F28               	movwf	40,b	;volatile
  4513                           
  4514                           ; BSR set to: 15
  4515                           ;inc\CANlib.h: 513: TXB2D3 = data[3];
  4516  001F7A  0100               	movlb	0	; () banked
  4517  001F7C  EE20 F003          	lfsr	2,3
  4518  001F80  517B               	movf	CANsendMessage@data& (0+255),w,b
  4519  001F82  26D9               	addwf	fsr2l,f,c
  4520  001F84  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4521  001F86  22DA               	addwfc	fsr2h,f,c
  4522  001F88  50DF               	movf	indf2,w,c
  4523  001F8A  010F               	movlb	15	; () banked
  4524  001F8C  6F29               	movwf	41,b	;volatile
  4525                           
  4526                           ; BSR set to: 15
  4527                           ;inc\CANlib.h: 514: TXB2D4 = data[4];
  4528  001F8E  0100               	movlb	0	; () banked
  4529  001F90  EE20 F004          	lfsr	2,4
  4530  001F94  517B               	movf	CANsendMessage@data& (0+255),w,b
  4531  001F96  26D9               	addwf	fsr2l,f,c
  4532  001F98  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4533  001F9A  22DA               	addwfc	fsr2h,f,c
  4534  001F9C  50DF               	movf	indf2,w,c
  4535  001F9E  010F               	movlb	15	; () banked
  4536  001FA0  6F2A               	movwf	42,b	;volatile
  4537                           
  4538                           ; BSR set to: 15
  4539                           ;inc\CANlib.h: 515: TXB2D5 = data[5];
  4540  001FA2  0100               	movlb	0	; () banked
  4541  001FA4  EE20 F005          	lfsr	2,5
  4542  001FA8  517B               	movf	CANsendMessage@data& (0+255),w,b
  4543  001FAA  26D9               	addwf	fsr2l,f,c
  4544  001FAC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4545  001FAE  22DA               	addwfc	fsr2h,f,c
  4546  001FB0  50DF               	movf	indf2,w,c
  4547  001FB2  010F               	movlb	15	; () banked
  4548  001FB4  6F2B               	movwf	43,b	;volatile
  4549                           
  4550                           ; BSR set to: 15
  4551                           ;inc\CANlib.h: 516: TXB2D6 = data[6];
  4552  001FB6  0100               	movlb	0	; () banked
  4553  001FB8  EE20 F006          	lfsr	2,6
  4554  001FBC  517B               	movf	CANsendMessage@data& (0+255),w,b
  4555  001FBE  26D9               	addwf	fsr2l,f,c
  4556  001FC0  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4557  001FC2  22DA               	addwfc	fsr2h,f,c
  4558  001FC4  50DF               	movf	indf2,w,c
  4559  001FC6  010F               	movlb	15	; () banked
  4560  001FC8  6F2C               	movwf	44,b	;volatile
  4561                           
  4562                           ; BSR set to: 15
  4563                           ;inc\CANlib.h: 517: TXB2D7 = data[7];
  4564  001FCA  0100               	movlb	0	; () banked
  4565  001FCC  EE20 F007          	lfsr	2,7
  4566  001FD0  517B               	movf	CANsendMessage@data& (0+255),w,b
  4567  001FD2  26D9               	addwf	fsr2l,f,c
  4568  001FD4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4569  001FD6  22DA               	addwfc	fsr2h,f,c
  4570  001FD8  50DF               	movf	indf2,w,c
  4571  001FDA  010F               	movlb	15	; () banked
  4572  001FDC  6F2D               	movwf	45,b	;volatile
  4573                           
  4574                           ; BSR set to: 15
  4575                           ;inc\CANlib.h: 519: TXB2CONbits.TXREQ = 0x01;
  4576  001FDE  010F               	movlb	15	; () banked
  4577  001FE0  8720               	bsf	32,3,b	;volatile
  4578                           
  4579                           ; BSR set to: 15
  4580                           ;inc\CANlib.h: 521: return;
  4581  001FE2  0012               	return	
  4582  001FE4                     __end_of_CANsendMessage:
  4583                           	opt stack 0
  4584                           tblptru	equ	0xFF8
  4585                           tblptrh	equ	0xFF7
  4586                           tblptrl	equ	0xFF6
  4587                           tablat	equ	0xFF5
  4588                           postinc0	equ	0xFEE
  4589                           wreg	equ	0xFE8
  4590                           postdec1	equ	0xFE5
  4591                           fsr1l	equ	0xFE1
  4592                           indf2	equ	0xFDF
  4593                           postinc2	equ	0xFDE
  4594                           postdec2	equ	0xFDD
  4595                           fsr2h	equ	0xFDA
  4596                           fsr2l	equ	0xFD9
  4597                           status	equ	0xFD8
  4598                           
  4599 ;; *************** function _CANisTxReady *****************
  4600 ;; Defined at:
  4601 ;;		line 1155 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
  4602 ;; Parameters:    Size  Location     Type
  4603 ;;		None
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;		None
  4606 ;; Return value:  Size  Location     Type
  4607 ;;                  1    wreg      unsigned char 
  4608 ;; Registers used:
  4609 ;;		wreg, status,2
  4610 ;; Tracked objects:
  4611 ;;		On entry : 0/0
  4612 ;;		On exit  : 0/0
  4613 ;;		Unchanged: 0/0
  4614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4616 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4618 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4619 ;;Total ram usage:        1 bytes
  4620 ;; Hardware stack levels used:    1
  4621 ;; Hardware stack levels required when called:    4
  4622 ;; This function calls:
  4623 ;;		Nothing
  4624 ;; This function is called by:
  4625 ;;		_main
  4626 ;;		_park_search
  4627 ;;		_park_routine
  4628 ;;		_can_send
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631                           
  4632                           	psect	text6
  4633  006698                     __ptext6:
  4634                           	opt stack 0
  4635  006698                     _CANisTxReady:
  4636                           	opt stack 23
  4637                           
  4638                           ;inc\CANlib.h: 1157: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  4639                           
  4640                           ; BSR set to: 15
  4641                           ;incstack = 0
  4642  006698  0E01               	movlw	1
  4643  00669A  0100               	movlb	0	; () banked
  4644  00669C  6F77               	movwf	_CANisTxReady$2845& (0+255),b
  4645                           
  4646                           ; BSR set to: 0
  4647  00669E  010F               	movlb	15	; () banked
  4648  0066A0  A740               	btfss	64,3,b	;volatile
  4649  0066A2  D009               	goto	l556
  4650                           
  4651                           ; BSR set to: 15
  4652  0066A4  010F               	movlb	15	; () banked
  4653  0066A6  A730               	btfss	48,3,b	;volatile
  4654  0066A8  D006               	goto	l556
  4655                           
  4656                           ; BSR set to: 15
  4657  0066AA  010F               	movlb	15	; () banked
  4658  0066AC  A720               	btfss	32,3,b	;volatile
  4659  0066AE  D003               	goto	l556
  4660                           
  4661                           ; BSR set to: 15
  4662  0066B0  0E00               	movlw	0
  4663  0066B2  0100               	movlb	0	; () banked
  4664  0066B4  6F77               	movwf	_CANisTxReady$2845& (0+255),b
  4665  0066B6                     l556:
  4666  0066B6  0100               	movlb	0	; () banked
  4667  0066B8  5177               	movf	_CANisTxReady$2845& (0+255),w,b
  4668  0066BA  0012               	return	
  4669  0066BC                     __end_of_CANisTxReady:
  4670                           	opt stack 0
  4671                           tblptru	equ	0xFF8
  4672                           tblptrh	equ	0xFF7
  4673                           tblptrl	equ	0xFF6
  4674                           tablat	equ	0xFF5
  4675                           postinc0	equ	0xFEE
  4676                           wreg	equ	0xFE8
  4677                           postdec1	equ	0xFE5
  4678                           fsr1l	equ	0xFE1
  4679                           indf2	equ	0xFDF
  4680                           postinc2	equ	0xFDE
  4681                           postdec2	equ	0xFDD
  4682                           fsr2h	equ	0xFDA
  4683                           fsr2l	equ	0xFD9
  4684                           status	equ	0xFD8
  4685                           
  4686 ;; *************** function _abs *****************
  4687 ;; Defined at:
  4688 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;  a               2   23[BANK0 ] int 
  4691 ;; Auto vars:     Size  Location     Type
  4692 ;;		None
  4693 ;; Return value:  Size  Location     Type
  4694 ;;                  2   23[BANK0 ] int 
  4695 ;; Registers used:
  4696 ;;		wreg, status,2, status,0
  4697 ;; Tracked objects:
  4698 ;;		On entry : 0/0
  4699 ;;		On exit  : 0/0
  4700 ;;		Unchanged: 0/0
  4701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4702 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4704 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4705 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4706 ;;Total ram usage:        4 bytes
  4707 ;; Hardware stack levels used:    1
  4708 ;; Hardware stack levels required when called:    4
  4709 ;; This function calls:
  4710 ;;		Nothing
  4711 ;; This function is called by:
  4712 ;;		_park_search
  4713 ;;		_parallelo
  4714 ;; This function uses a non-reentrant model
  4715 ;;
  4716                           
  4717                           	psect	text7
  4718  006640                     __ptext7:
  4719                           	opt stack 0
  4720  006640                     _abs:
  4721                           	opt stack 24
  4722                           
  4723                           ; BSR set to: 0
  4724                           ;incstack = 0
  4725  006640  0100               	movlb	0	; () banked
  4726  006642  AF78               	btfss	(abs@a+1)& (0+255),7,b
  4727  006644  D00E               	goto	l896
  4728                           
  4729                           ; BSR set to: 0
  4730  006646  C077  F079         	movff	abs@a,??_abs
  4731  00664A  C078  F07A         	movff	abs@a+1,??_abs+1
  4732  00664E  0100               	movlb	0	; () banked
  4733  006650  1F79               	comf	??_abs& (0+255),f,b
  4734  006652  1F7A               	comf	(??_abs+1)& (0+255),f,b
  4735  006654  4B79               	infsnz	??_abs& (0+255),f,b
  4736  006656  2B7A               	incf	(??_abs+1)& (0+255),f,b
  4737  006658  C079  F077         	movff	??_abs,?_abs
  4738  00665C  C07A  F078         	movff	??_abs+1,?_abs+1
  4739  006660  0012               	return	
  4740  006662                     l896:
  4741                           
  4742                           ; BSR set to: 0
  4743  006662  C077  F077         	movff	abs@a,?_abs
  4744  006666  C078  F078         	movff	abs@a+1,?_abs+1
  4745                           
  4746                           ; BSR set to: 0
  4747  00666A  0012               	return		;funcret
  4748  00666C                     __end_of_abs:
  4749                           	opt stack 0
  4750                           tblptru	equ	0xFF8
  4751                           tblptrh	equ	0xFF7
  4752                           tblptrl	equ	0xFF6
  4753                           tablat	equ	0xFF5
  4754                           postinc0	equ	0xFEE
  4755                           wreg	equ	0xFE8
  4756                           postdec1	equ	0xFE5
  4757                           fsr1l	equ	0xFE1
  4758                           indf2	equ	0xFDF
  4759                           postinc2	equ	0xFDE
  4760                           postdec2	equ	0xFDD
  4761                           fsr2h	equ	0xFDA
  4762                           fsr2l	equ	0xFD9
  4763                           status	equ	0xFD8
  4764                           
  4765 ;; *************** function _matematica *****************
  4766 ;; Defined at:
  4767 ;;		line 458 in file "parcheggio.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;		None
  4770 ;; Auto vars:     Size  Location     Type
  4771 ;;		None
  4772 ;; Return value:  Size  Location     Type
  4773 ;;		None               void
  4774 ;; Registers used:
  4775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4776 ;; Tracked objects:
  4777 ;;		On entry : 0/0
  4778 ;;		On exit  : 0/0
  4779 ;;		Unchanged: 0/0
  4780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4782 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0
  4783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4784 ;;      Totals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0
  4785 ;;Total ram usage:       28 bytes
  4786 ;; Hardware stack levels used:    1
  4787 ;; Hardware stack levels required when called:    8
  4788 ;; This function calls:
  4789 ;;		___fladd
  4790 ;;		___fldiv
  4791 ;;		___flmul
  4792 ;;		___flneg
  4793 ;;		_asin
  4794 ;;		_cos
  4795 ;; This function is called by:
  4796 ;;		_park_routine
  4797 ;; This function uses a non-reentrant model
  4798 ;;
  4799                           
  4800                           	psect	text8
  4801  002674                     __ptext8:
  4802                           	opt stack 0
  4803  002674                     _matematica:
  4804                           	opt stack 21
  4805                           
  4806                           ;parcheggio.c: 459: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4807                           
  4808                           ; BSR set to: 0
  4809                           ;incstack = 0
  4810  002674  C12C  F0AD         	movff	_bordo,___fladd@a	;volatile
  4811  002678  C12D  F0AE         	movff	_bordo+1,___fladd@a+1	;volatile
  4812  00267C  C12E  F0AF         	movff	_bordo+2,___fladd@a+2	;volatile
  4813  002680  C12F  F0B0         	movff	_bordo+3,___fladd@a+3	;volatile
  4814  002684  0E00               	movlw	0
  4815  002686  0100               	movlb	0	; () banked
  4816  002688  6F7B               	movwf	___fldiv@a& (0+255),b
  4817  00268A  0E00               	movlw	0
  4818  00268C  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4819  00268E  0E00               	movlw	0
  4820  002690  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4821  002692  0E40               	movlw	64
  4822  002694  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4823  002696  C1E4  F077         	movff	_larghezza,___fldiv@b
  4824  00269A  C1E5  F078         	movff	_larghezza+1,___fldiv@b+1
  4825  00269E  C1E6  F079         	movff	_larghezza+2,___fldiv@b+2
  4826  0026A2  C1E7  F07A         	movff	_larghezza+3,___fldiv@b+3
  4827  0026A6  EC4D  F021         	call	___fldiv	;wreg free
  4828  0026AA  C077  F0A9         	movff	?___fldiv,___fladd@b
  4829  0026AE  C078  F0AA         	movff	?___fldiv+1,___fladd@b+1
  4830  0026B2  C079  F0AB         	movff	?___fldiv+2,___fladd@b+2
  4831  0026B6  C07A  F0AC         	movff	?___fldiv+3,___fladd@b+3
  4832  0026BA  EC85  F018         	call	___fladd	;wreg free
  4833  0026BE  C0A9  F0BD         	movff	?___fladd,___flneg@f1
  4834  0026C2  C0AA  F0BE         	movff	?___fladd+1,___flneg@f1+1
  4835  0026C6  C0AB  F0BF         	movff	?___fladd+2,___flneg@f1+2
  4836  0026CA  C0AC  F0C0         	movff	?___fladd+3,___flneg@f1+3
  4837  0026CE  ECE9  F032         	call	___flneg	;wreg free
  4838  0026D2  C0BD  F1BC         	movff	?___flneg,_matematica$3746
  4839  0026D6  C0BE  F1BD         	movff	?___flneg+1,_matematica$3746+1
  4840  0026DA  C0BF  F1BE         	movff	?___flneg+2,_matematica$3746+2
  4841  0026DE  C0C0  F1BF         	movff	?___flneg+3,_matematica$3746+3
  4842                           
  4843                           ;parcheggio.c: 459: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4844  0026E2  C1BC  F0AD         	movff	_matematica$3746,___fladd@a
  4845  0026E6  C1BD  F0AE         	movff	_matematica$3746+1,___fladd@a+1
  4846  0026EA  C1BE  F0AF         	movff	_matematica$3746+2,___fladd@a+2
  4847  0026EE  C1BF  F0B0         	movff	_matematica$3746+3,___fladd@a+3
  4848  0026F2  0E00               	movlw	0
  4849  0026F4  0100               	movlb	0	; () banked
  4850  0026F6  6F94               	movwf	___flmul@a& (0+255),b
  4851  0026F8  0E00               	movlw	0
  4852  0026FA  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4853  0026FC  0E00               	movlw	0
  4854  0026FE  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4855  002700  0E40               	movlw	64
  4856  002702  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4857  002704  C1E8  F090         	movff	_raggio,___flmul@b
  4858  002708  C1E9  F091         	movff	_raggio+1,___flmul@b+1
  4859  00270C  C1EA  F092         	movff	_raggio+2,___flmul@b+2
  4860  002710  C1EB  F093         	movff	_raggio+3,___flmul@b+3
  4861  002714  ECD9  F01A         	call	___flmul	;wreg free
  4862  002718  C090  F0A9         	movff	?___flmul,___fladd@b
  4863  00271C  C091  F0AA         	movff	?___flmul+1,___fladd@b+1
  4864  002720  C092  F0AB         	movff	?___flmul+2,___fladd@b+2
  4865  002724  C093  F0AC         	movff	?___flmul+3,___fladd@b+3
  4866  002728  EC85  F018         	call	___fladd	;wreg free
  4867  00272C  C0A9  F1C0         	movff	?___fladd,_matematica$3747
  4868  002730  C0AA  F1C1         	movff	?___fladd+1,_matematica$3747+1
  4869  002734  C0AB  F1C2         	movff	?___fladd+2,_matematica$3747+2
  4870  002738  C0AC  F1C3         	movff	?___fladd+3,_matematica$3747+3
  4871                           
  4872                           ;parcheggio.c: 459: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4873  00273C  0E00               	movlw	0
  4874  00273E  0100               	movlb	0	; () banked
  4875  002740  6F7B               	movwf	___fldiv@a& (0+255),b
  4876  002742  0E00               	movlw	0
  4877  002744  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4878  002746  0E00               	movlw	0
  4879  002748  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4880  00274A  0E40               	movlw	64
  4881  00274C  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4882  00274E  C1E4  F077         	movff	_larghezza,___fldiv@b
  4883  002752  C1E5  F078         	movff	_larghezza+1,___fldiv@b+1
  4884  002756  C1E6  F079         	movff	_larghezza+2,___fldiv@b+2
  4885  00275A  C1E7  F07A         	movff	_larghezza+3,___fldiv@b+3
  4886  00275E  EC4D  F021         	call	___fldiv	;wreg free
  4887  002762  C077  F0BD         	movff	?___fldiv,___flneg@f1
  4888  002766  C078  F0BE         	movff	?___fldiv+1,___flneg@f1+1
  4889  00276A  C079  F0BF         	movff	?___fldiv+2,___flneg@f1+2
  4890  00276E  C07A  F0C0         	movff	?___fldiv+3,___flneg@f1+3
  4891  002772  ECE9  F032         	call	___flneg	;wreg free
  4892  002776  C0BD  F0AD         	movff	?___flneg,___fladd@a
  4893  00277A  C0BE  F0AE         	movff	?___flneg+1,___fladd@a+1
  4894  00277E  C0BF  F0AF         	movff	?___flneg+2,___fladd@a+2
  4895  002782  C0C0  F0B0         	movff	?___flneg+3,___fladd@a+3
  4896  002786  C1C0  F0A9         	movff	_matematica$3747,___fladd@b
  4897  00278A  C1C1  F0AA         	movff	_matematica$3747+1,___fladd@b+1
  4898  00278E  C1C2  F0AB         	movff	_matematica$3747+2,___fladd@b+2
  4899  002792  C1C3  F0AC         	movff	_matematica$3747+3,___fladd@b+3
  4900  002796  EC85  F018         	call	___fladd	;wreg free
  4901  00279A  C0A9  F1C4         	movff	?___fladd,_matematica$3748
  4902  00279E  C0AA  F1C5         	movff	?___fladd+1,_matematica$3748+1
  4903  0027A2  C0AB  F1C6         	movff	?___fladd+2,_matematica$3748+2
  4904  0027A6  C0AC  F1C7         	movff	?___fladd+3,_matematica$3748+3
  4905                           
  4906                           ;parcheggio.c: 459: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4907  0027AA  C1C4  F077         	movff	_matematica$3748,___fldiv@b
  4908  0027AE  C1C5  F078         	movff	_matematica$3748+1,___fldiv@b+1
  4909  0027B2  C1C6  F079         	movff	_matematica$3748+2,___fldiv@b+2
  4910  0027B6  C1C7  F07A         	movff	_matematica$3748+3,___fldiv@b+3
  4911  0027BA  0E00               	movlw	0
  4912  0027BC  0100               	movlb	0	; () banked
  4913  0027BE  6F94               	movwf	___flmul@a& (0+255),b
  4914  0027C0  0E00               	movlw	0
  4915  0027C2  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4916  0027C4  0E00               	movlw	0
  4917  0027C6  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4918  0027C8  0E40               	movlw	64
  4919  0027CA  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4920  0027CC  C1E8  F090         	movff	_raggio,___flmul@b
  4921  0027D0  C1E9  F091         	movff	_raggio+1,___flmul@b+1
  4922  0027D4  C1EA  F092         	movff	_raggio+2,___flmul@b+2
  4923  0027D8  C1EB  F093         	movff	_raggio+3,___flmul@b+3
  4924  0027DC  ECD9  F01A         	call	___flmul	;wreg free
  4925  0027E0  C090  F07B         	movff	?___flmul,___fldiv@a
  4926  0027E4  C091  F07C         	movff	?___flmul+1,___fldiv@a+1
  4927  0027E8  C092  F07D         	movff	?___flmul+2,___fldiv@a+2
  4928  0027EC  C093  F07E         	movff	?___flmul+3,___fldiv@a+3
  4929  0027F0  EC4D  F021         	call	___fldiv	;wreg free
  4930  0027F4  C077  F1C8         	movff	?___fldiv,_matematica$3749
  4931  0027F8  C078  F1C9         	movff	?___fldiv+1,_matematica$3749+1
  4932  0027FC  C079  F1CA         	movff	?___fldiv+2,_matematica$3749+2
  4933  002800  C07A  F1CB         	movff	?___fldiv+3,_matematica$3749+3
  4934                           
  4935                           ;parcheggio.c: 459: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4936  002804  C1C8  F0D5         	movff	_matematica$3749,asin@x
  4937  002808  C1C9  F0D6         	movff	_matematica$3749+1,asin@x+1
  4938  00280C  C1CA  F0D7         	movff	_matematica$3749+2,asin@x+2
  4939  002810  C1CB  F0D8         	movff	_matematica$3749+3,asin@x+3
  4940  002814  EC88  F026         	call	_asin	;wreg free
  4941  002818  C0D5  F124         	movff	?_asin,_alfa
  4942  00281C  C0D6  F125         	movff	?_asin+1,_alfa+1
  4943  002820  C0D7  F126         	movff	?_asin+2,_alfa+2
  4944  002824  C0D8  F127         	movff	?_asin+3,_alfa+3
  4945                           
  4946                           ;parcheggio.c: 460: alfa = alfa / 3.14159265358979323846 * 180;
  4947  002828  0EDB               	movlw	219
  4948  00282A  0100               	movlb	0	; () banked
  4949  00282C  6F7B               	movwf	___fldiv@a& (0+255),b
  4950  00282E  0E0F               	movlw	15
  4951  002830  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4952  002832  0E49               	movlw	73
  4953  002834  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4954  002836  0E40               	movlw	64
  4955  002838  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4956  00283A  C124  F077         	movff	_alfa,___fldiv@b
  4957  00283E  C125  F078         	movff	_alfa+1,___fldiv@b+1
  4958  002842  C126  F079         	movff	_alfa+2,___fldiv@b+2
  4959  002846  C127  F07A         	movff	_alfa+3,___fldiv@b+3
  4960  00284A  EC4D  F021         	call	___fldiv	;wreg free
  4961  00284E  C077  F090         	movff	?___fldiv,___flmul@b
  4962  002852  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  4963  002856  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  4964  00285A  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  4965  00285E  0E00               	movlw	0
  4966  002860  0100               	movlb	0	; () banked
  4967  002862  6F94               	movwf	___flmul@a& (0+255),b
  4968  002864  0E00               	movlw	0
  4969  002866  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4970  002868  0E34               	movlw	52
  4971  00286A  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4972  00286C  0E43               	movlw	67
  4973  00286E  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4974  002870  ECD9  F01A         	call	___flmul	;wreg free
  4975  002874  C090  F124         	movff	?___flmul,_alfa
  4976  002878  C091  F125         	movff	?___flmul+1,_alfa+1
  4977  00287C  C092  F126         	movff	?___flmul+2,_alfa+2
  4978  002880  C093  F127         	movff	?___flmul+3,_alfa+3
  4979                           
  4980                           ;parcheggio.c: 461: beta = 90 - alfa;
  4981  002884  C124  F0BD         	movff	_alfa,___flneg@f1
  4982  002888  C125  F0BE         	movff	_alfa+1,___flneg@f1+1
  4983  00288C  C126  F0BF         	movff	_alfa+2,___flneg@f1+2
  4984  002890  C127  F0C0         	movff	_alfa+3,___flneg@f1+3
  4985  002894  ECE9  F032         	call	___flneg	;wreg free
  4986  002898  C0BD  F0A9         	movff	?___flneg,___fladd@b
  4987  00289C  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  4988  0028A0  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  4989  0028A4  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  4990  0028A8  0E00               	movlw	0
  4991  0028AA  0100               	movlb	0	; () banked
  4992  0028AC  6FAD               	movwf	___fladd@a& (0+255),b
  4993  0028AE  0E00               	movlw	0
  4994  0028B0  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  4995  0028B2  0EB4               	movlw	180
  4996  0028B4  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  4997  0028B6  0E42               	movlw	66
  4998  0028B8  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  4999  0028BA  EC85  F018         	call	___fladd	;wreg free
  5000  0028BE  C0A9  F128         	movff	?___fladd,_beta
  5001  0028C2  C0AA  F129         	movff	?___fladd+1,_beta+1
  5002  0028C6  C0AB  F12A         	movff	?___fladd+2,_beta+2
  5003  0028CA  C0AC  F12B         	movff	?___fladd+3,_beta+3
  5004                           
  5005                           ;parcheggio.c: 462: alfa = (alfa * 3.14159265358979323846) / 180;
  5006  0028CE  0EDB               	movlw	219
  5007  0028D0  0100               	movlb	0	; () banked
  5008  0028D2  6F94               	movwf	___flmul@a& (0+255),b
  5009  0028D4  0E0F               	movlw	15
  5010  0028D6  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5011  0028D8  0E49               	movlw	73
  5012  0028DA  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5013  0028DC  0E40               	movlw	64
  5014  0028DE  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5015  0028E0  C124  F090         	movff	_alfa,___flmul@b
  5016  0028E4  C125  F091         	movff	_alfa+1,___flmul@b+1
  5017  0028E8  C126  F092         	movff	_alfa+2,___flmul@b+2
  5018  0028EC  C127  F093         	movff	_alfa+3,___flmul@b+3
  5019  0028F0  ECD9  F01A         	call	___flmul	;wreg free
  5020  0028F4  C090  F077         	movff	?___flmul,___fldiv@b
  5021  0028F8  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  5022  0028FC  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  5023  002900  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  5024  002904  0E00               	movlw	0
  5025  002906  0100               	movlb	0	; () banked
  5026  002908  6F7B               	movwf	___fldiv@a& (0+255),b
  5027  00290A  0E00               	movlw	0
  5028  00290C  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5029  00290E  0E34               	movlw	52
  5030  002910  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5031  002912  0E43               	movlw	67
  5032  002914  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5033  002916  EC4D  F021         	call	___fldiv	;wreg free
  5034  00291A  C077  F124         	movff	?___fldiv,_alfa
  5035  00291E  C078  F125         	movff	?___fldiv+1,_alfa+1
  5036  002922  C079  F126         	movff	?___fldiv+2,_alfa+2
  5037  002926  C07A  F127         	movff	?___fldiv+3,_alfa+3
  5038                           
  5039                           ;parcheggio.c: 463: n = cos(alfa);
  5040  00292A  C124  F1B4         	movff	_alfa,cos@f
  5041  00292E  C125  F1B5         	movff	_alfa+1,cos@f+1
  5042  002932  C126  F1B6         	movff	_alfa+2,cos@f+2
  5043  002936  C127  F1B7         	movff	_alfa+3,cos@f+3
  5044  00293A  EC2C  F030         	call	_cos	;wreg free
  5045  00293E  C1B4  F138         	movff	?_cos,_n
  5046  002942  C1B5  F139         	movff	?_cos+1,_n+1
  5047  002946  C1B6  F13A         	movff	?_cos+2,_n+2
  5048  00294A  C1B7  F13B         	movff	?_cos+3,_n+3
  5049                           
  5050                           ;parcheggio.c: 464: n = 2 * raggio *n;
  5051  00294E  C138  F094         	movff	_n,___flmul@a
  5052  002952  C139  F095         	movff	_n+1,___flmul@a+1
  5053  002956  C13A  F096         	movff	_n+2,___flmul@a+2
  5054  00295A  C13B  F097         	movff	_n+3,___flmul@a+3
  5055  00295E  C1E8  F090         	movff	_raggio,___flmul@b
  5056  002962  C1E9  F091         	movff	_raggio+1,___flmul@b+1
  5057  002966  C1EA  F092         	movff	_raggio+2,___flmul@b+2
  5058  00296A  C1EB  F093         	movff	_raggio+3,___flmul@b+3
  5059  00296E  ECD9  F01A         	call	___flmul	;wreg free
  5060  002972  C090  F1D4         	movff	?___flmul,_matematica$3750
  5061  002976  C091  F1D5         	movff	?___flmul+1,_matematica$3750+1
  5062  00297A  C092  F1D6         	movff	?___flmul+2,_matematica$3750+2
  5063  00297E  C093  F1D7         	movff	?___flmul+3,_matematica$3750+3
  5064                           
  5065                           ;parcheggio.c: 464: n = 2 * raggio *n;
  5066  002982  C1D4  F090         	movff	_matematica$3750,___flmul@b
  5067  002986  C1D5  F091         	movff	_matematica$3750+1,___flmul@b+1
  5068  00298A  C1D6  F092         	movff	_matematica$3750+2,___flmul@b+2
  5069  00298E  C1D7  F093         	movff	_matematica$3750+3,___flmul@b+3
  5070  002992  0E00               	movlw	0
  5071  002994  0100               	movlb	0	; () banked
  5072  002996  6F94               	movwf	___flmul@a& (0+255),b
  5073  002998  0E00               	movlw	0
  5074  00299A  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5075  00299C  0E00               	movlw	0
  5076  00299E  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5077  0029A0  0E40               	movlw	64
  5078  0029A2  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5079  0029A4  ECD9  F01A         	call	___flmul	;wreg free
  5080  0029A8  C090  F138         	movff	?___flmul,_n
  5081  0029AC  C091  F139         	movff	?___flmul+1,_n+1
  5082  0029B0  C092  F13A         	movff	?___flmul+2,_n+2
  5083  0029B4  C093  F13B         	movff	?___flmul+3,_n+3
  5084                           
  5085                           ;parcheggio.c: 465: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  5086  0029B8  C128  F094         	movff	_beta,___flmul@a
  5087  0029BC  C129  F095         	movff	_beta+1,___flmul@a+1
  5088  0029C0  C12A  F096         	movff	_beta+2,___flmul@a+2
  5089  0029C4  C12B  F097         	movff	_beta+3,___flmul@a+3
  5090  0029C8  C1E8  F090         	movff	_raggio,___flmul@b
  5091  0029CC  C1E9  F091         	movff	_raggio+1,___flmul@b+1
  5092  0029D0  C1EA  F092         	movff	_raggio+2,___flmul@b+2
  5093  0029D4  C1EB  F093         	movff	_raggio+3,___flmul@b+3
  5094  0029D8  ECD9  F01A         	call	___flmul	;wreg free
  5095  0029DC  C090  F1D4         	movff	?___flmul,_matematica$3750
  5096  0029E0  C091  F1D5         	movff	?___flmul+1,_matematica$3750+1
  5097  0029E4  C092  F1D6         	movff	?___flmul+2,_matematica$3750+2
  5098  0029E8  C093  F1D7         	movff	?___flmul+3,_matematica$3750+3
  5099                           
  5100                           ;parcheggio.c: 465: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  5101  0029EC  0EDB               	movlw	219
  5102  0029EE  0100               	movlb	0	; () banked
  5103  0029F0  6F94               	movwf	___flmul@a& (0+255),b
  5104  0029F2  0E0F               	movlw	15
  5105  0029F4  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5106  0029F6  0EC9               	movlw	201
  5107  0029F8  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5108  0029FA  0E40               	movlw	64
  5109  0029FC  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5110  0029FE  C1D4  F090         	movff	_matematica$3750,___flmul@b
  5111  002A02  C1D5  F091         	movff	_matematica$3750+1,___flmul@b+1
  5112  002A06  C1D6  F092         	movff	_matematica$3750+2,___flmul@b+2
  5113  002A0A  C1D7  F093         	movff	_matematica$3750+3,___flmul@b+3
  5114  002A0E  ECD9  F01A         	call	___flmul	;wreg free
  5115  002A12  C090  F077         	movff	?___flmul,___fldiv@b
  5116  002A16  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  5117  002A1A  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  5118  002A1E  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  5119  002A22  0E00               	movlw	0
  5120  002A24  0100               	movlb	0	; () banked
  5121  002A26  6F7B               	movwf	___fldiv@a& (0+255),b
  5122  002A28  0E00               	movlw	0
  5123  002A2A  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5124  002A2C  0EB4               	movlw	180
  5125  002A2E  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5126  002A30  0E43               	movlw	67
  5127  002A32  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5128  002A34  EC4D  F021         	call	___fldiv	;wreg free
  5129  002A38  C077  F140         	movff	?___fldiv,_prima_sterzata
  5130  002A3C  C078  F141         	movff	?___fldiv+1,_prima_sterzata+1
  5131  002A40  C079  F142         	movff	?___fldiv+2,_prima_sterzata+2
  5132  002A44  C07A  F143         	movff	?___fldiv+3,_prima_sterzata+3
  5133                           
  5134                           ;parcheggio.c: 466: kkk = raggio + (2 * larghezza / 3);
  5135  002A48  0E00               	movlw	0
  5136  002A4A  0100               	movlb	0	; () banked
  5137  002A4C  6F7B               	movwf	___fldiv@a& (0+255),b
  5138  002A4E  0E00               	movlw	0
  5139  002A50  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5140  002A52  0E40               	movlw	64
  5141  002A54  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5142  002A56  0E40               	movlw	64
  5143  002A58  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5144  002A5A  0E00               	movlw	0
  5145  002A5C  0100               	movlb	0	; () banked
  5146  002A5E  6F94               	movwf	___flmul@a& (0+255),b
  5147  002A60  0E00               	movlw	0
  5148  002A62  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5149  002A64  0E00               	movlw	0
  5150  002A66  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5151  002A68  0E40               	movlw	64
  5152  002A6A  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5153  002A6C  C1E4  F090         	movff	_larghezza,___flmul@b
  5154  002A70  C1E5  F091         	movff	_larghezza+1,___flmul@b+1
  5155  002A74  C1E6  F092         	movff	_larghezza+2,___flmul@b+2
  5156  002A78  C1E7  F093         	movff	_larghezza+3,___flmul@b+3
  5157  002A7C  ECD9  F01A         	call	___flmul	;wreg free
  5158  002A80  C090  F077         	movff	?___flmul,___fldiv@b
  5159  002A84  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  5160  002A88  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  5161  002A8C  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  5162  002A90  EC4D  F021         	call	___fldiv	;wreg free
  5163  002A94  C077  F0A9         	movff	?___fldiv,___fladd@b
  5164  002A98  C078  F0AA         	movff	?___fldiv+1,___fladd@b+1
  5165  002A9C  C079  F0AB         	movff	?___fldiv+2,___fladd@b+2
  5166  002AA0  C07A  F0AC         	movff	?___fldiv+3,___fladd@b+3
  5167  002AA4  C1E8  F0AD         	movff	_raggio,___fladd@a
  5168  002AA8  C1E9  F0AE         	movff	_raggio+1,___fladd@a+1
  5169  002AAC  C1EA  F0AF         	movff	_raggio+2,___fladd@a+2
  5170  002AB0  C1EB  F0B0         	movff	_raggio+3,___fladd@a+3
  5171  002AB4  EC85  F018         	call	___fladd	;wreg free
  5172  002AB8  C0A9  F134         	movff	?___fladd,_kkk
  5173  002ABC  C0AA  F135         	movff	?___fladd+1,_kkk+1
  5174  002AC0  C0AB  F136         	movff	?___fladd+2,_kkk+2
  5175  002AC4  C0AC  F137         	movff	?___fladd+3,_kkk+3
  5176                           
  5177                           ;parcheggio.c: 467: jjj = raggio - (2 * larghezza / 3);
  5178  002AC8  0E00               	movlw	0
  5179  002ACA  0100               	movlb	0	; () banked
  5180  002ACC  6F7B               	movwf	___fldiv@a& (0+255),b
  5181  002ACE  0E00               	movlw	0
  5182  002AD0  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5183  002AD2  0E40               	movlw	64
  5184  002AD4  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5185  002AD6  0E40               	movlw	64
  5186  002AD8  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5187  002ADA  0E00               	movlw	0
  5188  002ADC  0100               	movlb	0	; () banked
  5189  002ADE  6F94               	movwf	___flmul@a& (0+255),b
  5190  002AE0  0E00               	movlw	0
  5191  002AE2  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5192  002AE4  0E00               	movlw	0
  5193  002AE6  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5194  002AE8  0E40               	movlw	64
  5195  002AEA  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5196  002AEC  C1E4  F090         	movff	_larghezza,___flmul@b
  5197  002AF0  C1E5  F091         	movff	_larghezza+1,___flmul@b+1
  5198  002AF4  C1E6  F092         	movff	_larghezza+2,___flmul@b+2
  5199  002AF8  C1E7  F093         	movff	_larghezza+3,___flmul@b+3
  5200  002AFC  ECD9  F01A         	call	___flmul	;wreg free
  5201  002B00  C090  F077         	movff	?___flmul,___fldiv@b
  5202  002B04  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  5203  002B08  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  5204  002B0C  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  5205  002B10  EC4D  F021         	call	___fldiv	;wreg free
  5206  002B14  C077  F0BD         	movff	?___fldiv,___flneg@f1
  5207  002B18  C078  F0BE         	movff	?___fldiv+1,___flneg@f1+1
  5208  002B1C  C079  F0BF         	movff	?___fldiv+2,___flneg@f1+2
  5209  002B20  C07A  F0C0         	movff	?___fldiv+3,___flneg@f1+3
  5210  002B24  ECE9  F032         	call	___flneg	;wreg free
  5211  002B28  C0BD  F0A9         	movff	?___flneg,___fladd@b
  5212  002B2C  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  5213  002B30  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  5214  002B34  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  5215  002B38  C1E8  F0AD         	movff	_raggio,___fladd@a
  5216  002B3C  C1E9  F0AE         	movff	_raggio+1,___fladd@a+1
  5217  002B40  C1EA  F0AF         	movff	_raggio+2,___fladd@a+2
  5218  002B44  C1EB  F0B0         	movff	_raggio+3,___fladd@a+3
  5219  002B48  EC85  F018         	call	___fladd	;wreg free
  5220  002B4C  C0A9  F130         	movff	?___fladd,_jjj
  5221  002B50  C0AA  F131         	movff	?___fladd+1,_jjj+1
  5222  002B54  C0AB  F132         	movff	?___fladd+2,_jjj+2
  5223  002B58  C0AC  F133         	movff	?___fladd+3,_jjj+3
  5224                           
  5225                           ;parcheggio.c: 468: Pminimo = kkk * cos(asin((jjj / kkk)));
  5226  002B5C  C134  F07B         	movff	_kkk,___fldiv@a
  5227  002B60  C135  F07C         	movff	_kkk+1,___fldiv@a+1
  5228  002B64  C136  F07D         	movff	_kkk+2,___fldiv@a+2
  5229  002B68  C137  F07E         	movff	_kkk+3,___fldiv@a+3
  5230  002B6C  C130  F077         	movff	_jjj,___fldiv@b
  5231  002B70  C131  F078         	movff	_jjj+1,___fldiv@b+1
  5232  002B74  C132  F079         	movff	_jjj+2,___fldiv@b+2
  5233  002B78  C133  F07A         	movff	_jjj+3,___fldiv@b+3
  5234  002B7C  EC4D  F021         	call	___fldiv	;wreg free
  5235  002B80  C077  F1CC         	movff	?___fldiv,_matematica$3751
  5236  002B84  C078  F1CD         	movff	?___fldiv+1,_matematica$3751+1
  5237  002B88  C079  F1CE         	movff	?___fldiv+2,_matematica$3751+2
  5238  002B8C  C07A  F1CF         	movff	?___fldiv+3,_matematica$3751+3
  5239                           
  5240                           ;parcheggio.c: 468: Pminimo = kkk * cos(asin((jjj / kkk)));
  5241  002B90  C1CC  F0D5         	movff	_matematica$3751,asin@x
  5242  002B94  C1CD  F0D6         	movff	_matematica$3751+1,asin@x+1
  5243  002B98  C1CE  F0D7         	movff	_matematica$3751+2,asin@x+2
  5244  002B9C  C1CF  F0D8         	movff	_matematica$3751+3,asin@x+3
  5245  002BA0  EC88  F026         	call	_asin	;wreg free
  5246  002BA4  C0D5  F1B4         	movff	?_asin,cos@f
  5247  002BA8  C0D6  F1B5         	movff	?_asin+1,cos@f+1
  5248  002BAC  C0D7  F1B6         	movff	?_asin+2,cos@f+2
  5249  002BB0  C0D8  F1B7         	movff	?_asin+3,cos@f+3
  5250  002BB4  EC2C  F030         	call	_cos	;wreg free
  5251  002BB8  C1B4  F1D0         	movff	?_cos,_matematica$3752
  5252  002BBC  C1B5  F1D1         	movff	?_cos+1,_matematica$3752+1
  5253  002BC0  C1B6  F1D2         	movff	?_cos+2,_matematica$3752+2
  5254  002BC4  C1B7  F1D3         	movff	?_cos+3,_matematica$3752+3
  5255                           
  5256                           ;parcheggio.c: 468: Pminimo = kkk * cos(asin((jjj / kkk)));
  5257  002BC8  C1D0  F090         	movff	_matematica$3752,___flmul@b
  5258  002BCC  C1D1  F091         	movff	_matematica$3752+1,___flmul@b+1
  5259  002BD0  C1D2  F092         	movff	_matematica$3752+2,___flmul@b+2
  5260  002BD4  C1D3  F093         	movff	_matematica$3752+3,___flmul@b+3
  5261  002BD8  C134  F094         	movff	_kkk,___flmul@a
  5262  002BDC  C135  F095         	movff	_kkk+1,___flmul@a+1
  5263  002BE0  C136  F096         	movff	_kkk+2,___flmul@a+2
  5264  002BE4  C137  F097         	movff	_kkk+3,___flmul@a+3
  5265  002BE8  ECD9  F01A         	call	___flmul	;wreg free
  5266  002BEC  C090  F120         	movff	?___flmul,_Pminimo
  5267  002BF0  C091  F121         	movff	?___flmul+1,_Pminimo+1
  5268  002BF4  C092  F122         	movff	?___flmul+2,_Pminimo+2
  5269  002BF8  C093  F123         	movff	?___flmul+3,_Pminimo+3
  5270  002BFC  0012               	return		;funcret
  5271  002BFE                     __end_of_matematica:
  5272                           	opt stack 0
  5273                           tblptru	equ	0xFF8
  5274                           tblptrh	equ	0xFF7
  5275                           tblptrl	equ	0xFF6
  5276                           tablat	equ	0xFF5
  5277                           postinc0	equ	0xFEE
  5278                           wreg	equ	0xFE8
  5279                           postdec1	equ	0xFE5
  5280                           fsr1l	equ	0xFE1
  5281                           indf2	equ	0xFDF
  5282                           postinc2	equ	0xFDE
  5283                           postdec2	equ	0xFDD
  5284                           fsr2h	equ	0xFDA
  5285                           fsr2l	equ	0xFD9
  5286                           status	equ	0xFD8
  5287                           
  5288 ;; *************** function _cos *****************
  5289 ;; Defined at:
  5290 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\cos.c"
  5291 ;; Parameters:    Size  Location     Type
  5292 ;;  f               4   41[BANK1 ] int 
  5293 ;; Auto vars:     Size  Location     Type
  5294 ;;		None
  5295 ;; Return value:  Size  Location     Type
  5296 ;;                  4   41[BANK1 ] int 
  5297 ;; Registers used:
  5298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5299 ;; Tracked objects:
  5300 ;;		On entry : 0/0
  5301 ;;		On exit  : 0/0
  5302 ;;		Unchanged: 0/0
  5303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5304 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5305 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5307 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5308 ;;Total ram usage:        8 bytes
  5309 ;; Hardware stack levels used:    1
  5310 ;; Hardware stack levels required when called:    7
  5311 ;; This function calls:
  5312 ;;		___fladd
  5313 ;;		___flge
  5314 ;;		_sin
  5315 ;; This function is called by:
  5316 ;;		_matematica
  5317 ;; This function uses a non-reentrant model
  5318 ;;
  5319                           
  5320                           	psect	text9
  5321  006058                     __ptext9:
  5322                           	opt stack 0
  5323  006058                     _cos:
  5324                           	opt stack 21
  5325                           
  5326                           ;incstack = 0
  5327  006058  0EDB               	movlw	219
  5328  00605A  0100               	movlb	0	; () banked
  5329  00605C  6FC5               	movwf	___flge@ff1& (0+255),b
  5330  00605E  0E0F               	movlw	15
  5331  006060  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  5332  006062  0E49               	movlw	73
  5333  006064  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  5334  006066  0E40               	movlw	64
  5335  006068  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  5336  00606A  C1B4  F0C9         	movff	cos@f,___flge@ff2
  5337  00606E  C1B5  F0CA         	movff	cos@f+1,___flge@ff2+1
  5338  006072  C1B6  F0CB         	movff	cos@f+2,___flge@ff2+2
  5339  006076  C1B7  F0CC         	movff	cos@f+3,___flge@ff2+3
  5340  00607A  EC26  F02D         	call	___flge	;wreg free
  5341  00607E  0100               	movlb	0	; () banked
  5342  006080  B0D8               	btfsc	status,0,c
  5343  006082  D02E               	goto	l7894
  5344                           
  5345                           ; BSR set to: 0
  5346  006084  C1B4  F0A9         	movff	cos@f,___fladd@b
  5347  006088  C1B5  F0AA         	movff	cos@f+1,___fladd@b+1
  5348  00608C  C1B6  F0AB         	movff	cos@f+2,___fladd@b+2
  5349  006090  C1B7  F0AC         	movff	cos@f+3,___fladd@b+3
  5350  006094  0EE4               	movlw	228
  5351  006096  0100               	movlb	0	; () banked
  5352  006098  6FAD               	movwf	___fladd@a& (0+255),b
  5353  00609A  0ECB               	movlw	203
  5354  00609C  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5355  00609E  0E96               	movlw	150
  5356  0060A0  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5357  0060A2  0EC0               	movlw	192
  5358  0060A4  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5359  0060A6  EC85  F018         	call	___fladd	;wreg free
  5360  0060AA  C0A9  F1B8         	movff	?___fladd,_cos$3756
  5361  0060AE  C0AA  F1B9         	movff	?___fladd+1,_cos$3756+1
  5362  0060B2  C0AB  F1BA         	movff	?___fladd+2,_cos$3756+2
  5363  0060B6  C0AC  F1BB         	movff	?___fladd+3,_cos$3756+3
  5364  0060BA  C1B8  F19D         	movff	_cos$3756,sin@f
  5365  0060BE  C1B9  F19E         	movff	_cos$3756+1,sin@f+1
  5366  0060C2  C1BA  F19F         	movff	_cos$3756+2,sin@f+2
  5367  0060C6  C1BB  F1A0         	movff	_cos$3756+3,sin@f+3
  5368  0060CA  ECFC  F024         	call	_sin	;wreg free
  5369  0060CE  C19D  F1B4         	movff	?_sin,?_cos
  5370  0060D2  C19E  F1B5         	movff	?_sin+1,?_cos+1
  5371  0060D6  C19F  F1B6         	movff	?_sin+2,?_cos+2
  5372  0060DA  C1A0  F1B7         	movff	?_sin+3,?_cos+3
  5373  0060DE  0012               	return	
  5374  0060E0                     l7894:
  5375  0060E0  C1B4  F0A9         	movff	cos@f,___fladd@b
  5376  0060E4  C1B5  F0AA         	movff	cos@f+1,___fladd@b+1
  5377  0060E8  C1B6  F0AB         	movff	cos@f+2,___fladd@b+2
  5378  0060EC  C1B7  F0AC         	movff	cos@f+3,___fladd@b+3
  5379  0060F0  0EDB               	movlw	219
  5380  0060F2  0100               	movlb	0	; () banked
  5381  0060F4  6FAD               	movwf	___fladd@a& (0+255),b
  5382  0060F6  0E0F               	movlw	15
  5383  0060F8  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5384  0060FA  0EC9               	movlw	201
  5385  0060FC  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5386  0060FE  0E3F               	movlw	63
  5387  006100  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5388  006102  EC85  F018         	call	___fladd	;wreg free
  5389  006106  C0A9  F1B8         	movff	?___fladd,_cos$3756
  5390  00610A  C0AA  F1B9         	movff	?___fladd+1,_cos$3756+1
  5391  00610E  C0AB  F1BA         	movff	?___fladd+2,_cos$3756+2
  5392  006112  C0AC  F1BB         	movff	?___fladd+3,_cos$3756+3
  5393  006116  C1B8  F19D         	movff	_cos$3756,sin@f
  5394  00611A  C1B9  F19E         	movff	_cos$3756+1,sin@f+1
  5395  00611E  C1BA  F19F         	movff	_cos$3756+2,sin@f+2
  5396  006122  C1BB  F1A0         	movff	_cos$3756+3,sin@f+3
  5397  006126  ECFC  F024         	call	_sin	;wreg free
  5398  00612A  C19D  F1B4         	movff	?_sin,?_cos
  5399  00612E  C19E  F1B5         	movff	?_sin+1,?_cos+1
  5400  006132  C19F  F1B6         	movff	?_sin+2,?_cos+2
  5401  006136  C1A0  F1B7         	movff	?_sin+3,?_cos+3
  5402  00613A  0012               	return	
  5403  00613C                     __end_of_cos:
  5404                           	opt stack 0
  5405                           tblptru	equ	0xFF8
  5406                           tblptrh	equ	0xFF7
  5407                           tblptrl	equ	0xFF6
  5408                           tablat	equ	0xFF5
  5409                           postinc0	equ	0xFEE
  5410                           wreg	equ	0xFE8
  5411                           postdec1	equ	0xFE5
  5412                           fsr1l	equ	0xFE1
  5413                           indf2	equ	0xFDF
  5414                           postinc2	equ	0xFDE
  5415                           postdec2	equ	0xFDD
  5416                           fsr2h	equ	0xFDA
  5417                           fsr2l	equ	0xFD9
  5418                           status	equ	0xFD8
  5419                           
  5420 ;; *************** function _sin *****************
  5421 ;; Defined at:
  5422 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sin.c"
  5423 ;; Parameters:    Size  Location     Type
  5424 ;;  f               4   18[BANK1 ] int 
  5425 ;; Auto vars:     Size  Location     Type
  5426 ;;  x2              4   30[BANK1 ] int 
  5427 ;;  y               4   22[BANK1 ] int 
  5428 ;;  sgn             1   34[BANK1 ] unsigned char 
  5429 ;; Return value:  Size  Location     Type
  5430 ;;                  4   18[BANK1 ] unsigned char 
  5431 ;; Registers used:
  5432 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5433 ;; Tracked objects:
  5434 ;;		On entry : 0/0
  5435 ;;		On exit  : 0/0
  5436 ;;		Unchanged: 0/0
  5437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5438 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5439 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  5440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5441 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  5442 ;;Total ram usage:       17 bytes
  5443 ;; Hardware stack levels used:    1
  5444 ;; Hardware stack levels required when called:    6
  5445 ;; This function calls:
  5446 ;;		___fladd
  5447 ;;		___fldiv
  5448 ;;		___flge
  5449 ;;		___flmul
  5450 ;;		___flneg
  5451 ;;		___flsub
  5452 ;;		_eval_poly
  5453 ;;		_floor
  5454 ;; This function is called by:
  5455 ;;		_cos
  5456 ;; This function uses a non-reentrant model
  5457 ;;
  5458                           
  5459                           	psect	text10
  5460  0049F8                     __ptext10:
  5461                           	opt stack 0
  5462  0049F8                     _sin:
  5463                           	opt stack 21
  5464                           
  5465                           ;incstack = 0
  5466  0049F8  0E00               	movlw	0
  5467  0049FA  0101               	movlb	1	; () banked
  5468  0049FC  6FAD               	movwf	sin@sgn& (0+255),b
  5469                           
  5470                           ; BSR set to: 1
  5471  0049FE  0101               	movlb	1	; () banked
  5472  004A00  AFA0               	btfss	(sin@f+3)& (0+255),7,b
  5473  004A02  D015               	goto	l7772
  5474                           
  5475                           ; BSR set to: 1
  5476  004A04  C19D  F0BD         	movff	sin@f,___flneg@f1
  5477  004A08  C19E  F0BE         	movff	sin@f+1,___flneg@f1+1
  5478  004A0C  C19F  F0BF         	movff	sin@f+2,___flneg@f1+2
  5479  004A10  C1A0  F0C0         	movff	sin@f+3,___flneg@f1+3
  5480  004A14  ECE9  F032         	call	___flneg	;wreg free
  5481  004A18  C0BD  F19D         	movff	?___flneg,sin@f
  5482  004A1C  C0BE  F19E         	movff	?___flneg+1,sin@f+1
  5483  004A20  C0BF  F19F         	movff	?___flneg+2,sin@f+2
  5484  004A24  C0C0  F1A0         	movff	?___flneg+3,sin@f+3
  5485  004A28  0E01               	movlw	1
  5486  004A2A  0101               	movlb	1	; () banked
  5487  004A2C  6FAD               	movwf	sin@sgn& (0+255),b
  5488  004A2E                     l7772:
  5489                           
  5490                           ; BSR set to: 1
  5491  004A2E  C19D  F090         	movff	sin@f,___flmul@b
  5492  004A32  C19E  F091         	movff	sin@f+1,___flmul@b+1
  5493  004A36  C19F  F092         	movff	sin@f+2,___flmul@b+2
  5494  004A3A  C1A0  F093         	movff	sin@f+3,___flmul@b+3
  5495  004A3E  0E83               	movlw	131
  5496  004A40  0100               	movlb	0	; () banked
  5497  004A42  6F94               	movwf	___flmul@a& (0+255),b
  5498  004A44  0EF9               	movlw	249
  5499  004A46  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5500  004A48  0E22               	movlw	34
  5501  004A4A  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5502  004A4C  0E3E               	movlw	62
  5503  004A4E  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5504  004A50  ECD9  F01A         	call	___flmul	;wreg free
  5505  004A54  C090  F19D         	movff	?___flmul,sin@f
  5506  004A58  C091  F19E         	movff	?___flmul+1,sin@f+1
  5507  004A5C  C092  F19F         	movff	?___flmul+2,sin@f+2
  5508  004A60  C093  F1A0         	movff	?___flmul+3,sin@f+3
  5509  004A64  C19D  F195         	movff	sin@f,___flsub@b
  5510  004A68  C19E  F196         	movff	sin@f+1,___flsub@b+1
  5511  004A6C  C19F  F197         	movff	sin@f+2,___flsub@b+2
  5512  004A70  C1A0  F198         	movff	sin@f+3,___flsub@b+3
  5513  004A74  C19D  F18B         	movff	sin@f,floor@x
  5514  004A78  C19E  F18C         	movff	sin@f+1,floor@x+1
  5515  004A7C  C19F  F18D         	movff	sin@f+2,floor@x+2
  5516  004A80  C1A0  F18E         	movff	sin@f+3,floor@x+3
  5517  004A84  EC88  F02E         	call	_floor	;wreg free
  5518  004A88  C18B  F199         	movff	?_floor,___flsub@a
  5519  004A8C  C18C  F19A         	movff	?_floor+1,___flsub@a+1
  5520  004A90  C18D  F19B         	movff	?_floor+2,___flsub@a+2
  5521  004A94  C18E  F19C         	movff	?_floor+3,___flsub@a+3
  5522  004A98  EC89  F032         	call	___flsub	;wreg free
  5523  004A9C  C195  F19D         	movff	?___flsub,sin@f
  5524  004AA0  C196  F19E         	movff	?___flsub+1,sin@f+1
  5525  004AA4  C197  F19F         	movff	?___flsub+2,sin@f+2
  5526  004AA8  C198  F1A0         	movff	?___flsub+3,sin@f+3
  5527  004AAC  C19D  F090         	movff	sin@f,___flmul@b
  5528  004AB0  C19E  F091         	movff	sin@f+1,___flmul@b+1
  5529  004AB4  C19F  F092         	movff	sin@f+2,___flmul@b+2
  5530  004AB8  C1A0  F093         	movff	sin@f+3,___flmul@b+3
  5531  004ABC  0E00               	movlw	0
  5532  004ABE  0100               	movlb	0	; () banked
  5533  004AC0  6F94               	movwf	___flmul@a& (0+255),b
  5534  004AC2  0E00               	movlw	0
  5535  004AC4  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5536  004AC6  0E80               	movlw	128
  5537  004AC8  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5538  004ACA  0E40               	movlw	64
  5539  004ACC  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5540  004ACE  ECD9  F01A         	call	___flmul	;wreg free
  5541  004AD2  C090  F19D         	movff	?___flmul,sin@f
  5542  004AD6  C091  F19E         	movff	?___flmul+1,sin@f+1
  5543  004ADA  C092  F19F         	movff	?___flmul+2,sin@f+2
  5544  004ADE  C093  F1A0         	movff	?___flmul+3,sin@f+3
  5545  004AE2  0E00               	movlw	0
  5546  004AE4  0100               	movlb	0	; () banked
  5547  004AE6  6FC5               	movwf	___flge@ff1& (0+255),b
  5548  004AE8  0E00               	movlw	0
  5549  004AEA  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  5550  004AEC  0E00               	movlw	0
  5551  004AEE  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  5552  004AF0  0E40               	movlw	64
  5553  004AF2  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  5554  004AF4  C19D  F0C9         	movff	sin@f,___flge@ff2
  5555  004AF8  C19E  F0CA         	movff	sin@f+1,___flge@ff2+1
  5556  004AFC  C19F  F0CB         	movff	sin@f+2,___flge@ff2+2
  5557  004B00  C1A0  F0CC         	movff	sin@f+3,___flge@ff2+3
  5558  004B04  EC26  F02D         	call	___flge	;wreg free
  5559  004B08  0100               	movlb	0	; () banked
  5560  004B0A  B0D8               	btfsc	status,0,c
  5561  004B0C  D025               	goto	l7784
  5562                           
  5563                           ; BSR set to: 0
  5564  004B0E  C19D  F195         	movff	sin@f,___flsub@b
  5565  004B12  C19E  F196         	movff	sin@f+1,___flsub@b+1
  5566  004B16  C19F  F197         	movff	sin@f+2,___flsub@b+2
  5567  004B1A  C1A0  F198         	movff	sin@f+3,___flsub@b+3
  5568  004B1E  0E00               	movlw	0
  5569  004B20  0101               	movlb	1	; () banked
  5570  004B22  6F99               	movwf	___flsub@a& (0+255),b
  5571  004B24  0E00               	movlw	0
  5572  004B26  6F9A               	movwf	(___flsub@a+1)& (0+255),b
  5573  004B28  0E00               	movlw	0
  5574  004B2A  6F9B               	movwf	(___flsub@a+2)& (0+255),b
  5575  004B2C  0E40               	movlw	64
  5576  004B2E  6F9C               	movwf	(___flsub@a+3)& (0+255),b
  5577  004B30  EC89  F032         	call	___flsub	;wreg free
  5578  004B34  C195  F19D         	movff	?___flsub,sin@f
  5579  004B38  C196  F19E         	movff	?___flsub+1,sin@f+1
  5580  004B3C  C197  F19F         	movff	?___flsub+2,sin@f+2
  5581  004B40  C198  F1A0         	movff	?___flsub+3,sin@f+3
  5582  004B44  0101               	movlb	1	; () banked
  5583  004B46  51AD               	movf	sin@sgn& (0+255),w,b
  5584  004B48  0101               	movlb	1	; () banked
  5585  004B4A  A4D8               	btfss	status,2,c
  5586  004B4C  D002               	goto	u10320
  5587  004B4E  0E01               	movlw	1
  5588  004B50  D001               	goto	u10330
  5589  004B52                     u10320:
  5590  004B52  0E00               	movlw	0
  5591  004B54                     u10330:
  5592  004B54  0101               	movlb	1	; () banked
  5593  004B56  6FAD               	movwf	sin@sgn& (0+255),b
  5594  004B58                     l7784:
  5595  004B58  0E00               	movlw	0
  5596  004B5A  0100               	movlb	0	; () banked
  5597  004B5C  6FC5               	movwf	___flge@ff1& (0+255),b
  5598  004B5E  0E00               	movlw	0
  5599  004B60  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  5600  004B62  0E80               	movlw	128
  5601  004B64  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  5602  004B66  0E3F               	movlw	63
  5603  004B68  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  5604  004B6A  C19D  F0C9         	movff	sin@f,___flge@ff2
  5605  004B6E  C19E  F0CA         	movff	sin@f+1,___flge@ff2+1
  5606  004B72  C19F  F0CB         	movff	sin@f+2,___flge@ff2+2
  5607  004B76  C1A0  F0CC         	movff	sin@f+3,___flge@ff2+3
  5608  004B7A  EC26  F02D         	call	___flge	;wreg free
  5609  004B7E  0100               	movlb	0	; () banked
  5610  004B80  B0D8               	btfsc	status,0,c
  5611  004B82  D025               	goto	l7788
  5612                           
  5613                           ; BSR set to: 0
  5614  004B84  C19D  F0BD         	movff	sin@f,___flneg@f1
  5615  004B88  C19E  F0BE         	movff	sin@f+1,___flneg@f1+1
  5616  004B8C  C19F  F0BF         	movff	sin@f+2,___flneg@f1+2
  5617  004B90  C1A0  F0C0         	movff	sin@f+3,___flneg@f1+3
  5618  004B94  ECE9  F032         	call	___flneg	;wreg free
  5619  004B98  C0BD  F0A9         	movff	?___flneg,___fladd@b
  5620  004B9C  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  5621  004BA0  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  5622  004BA4  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  5623  004BA8  0E00               	movlw	0
  5624  004BAA  0100               	movlb	0	; () banked
  5625  004BAC  6FAD               	movwf	___fladd@a& (0+255),b
  5626  004BAE  0E00               	movlw	0
  5627  004BB0  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5628  004BB2  0E00               	movlw	0
  5629  004BB4  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5630  004BB6  0E40               	movlw	64
  5631  004BB8  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5632  004BBA  EC85  F018         	call	___fladd	;wreg free
  5633  004BBE  C0A9  F19D         	movff	?___fladd,sin@f
  5634  004BC2  C0AA  F19E         	movff	?___fladd+1,sin@f+1
  5635  004BC6  C0AB  F19F         	movff	?___fladd+2,sin@f+2
  5636  004BCA  C0AC  F1A0         	movff	?___fladd+3,sin@f+3
  5637  004BCE                     l7788:
  5638  004BCE  C19D  F090         	movff	sin@f,___flmul@b
  5639  004BD2  C19E  F091         	movff	sin@f+1,___flmul@b+1
  5640  004BD6  C19F  F092         	movff	sin@f+2,___flmul@b+2
  5641  004BDA  C1A0  F093         	movff	sin@f+3,___flmul@b+3
  5642  004BDE  C19D  F094         	movff	sin@f,___flmul@a
  5643  004BE2  C19E  F095         	movff	sin@f+1,___flmul@a+1
  5644  004BE6  C19F  F096         	movff	sin@f+2,___flmul@a+2
  5645  004BEA  C1A0  F097         	movff	sin@f+3,___flmul@a+3
  5646  004BEE  ECD9  F01A         	call	___flmul	;wreg free
  5647  004BF2  C090  F1A9         	movff	?___flmul,sin@x2
  5648  004BF6  C091  F1AA         	movff	?___flmul+1,sin@x2+1
  5649  004BFA  C092  F1AB         	movff	?___flmul+2,sin@x2+2
  5650  004BFE  C093  F1AC         	movff	?___flmul+3,sin@x2+3
  5651  004C02  C1A9  F0BD         	movff	sin@x2,eval_poly@x
  5652  004C06  C1AA  F0BE         	movff	sin@x2+1,eval_poly@x+1
  5653  004C0A  C1AB  F0BF         	movff	sin@x2+2,eval_poly@x+2
  5654  004C0E  C1AC  F0C0         	movff	sin@x2+3,eval_poly@x+3
  5655  004C12  0E41               	movlw	low sin@coeff_b
  5656  004C14  0100               	movlb	0	; () banked
  5657  004C16  6FC1               	movwf	eval_poly@d& (0+255),b
  5658  004C18  0E0D               	movlw	high sin@coeff_b
  5659  004C1A  0100               	movlb	0	; () banked
  5660  004C1C  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  5661  004C1E  0E00               	movlw	0
  5662  004C20  0100               	movlb	0	; () banked
  5663  004C22  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  5664  004C24  0E03               	movlw	3
  5665  004C26  6FC3               	movwf	eval_poly@n& (0+255),b
  5666  004C28  EC1A  F02F         	call	_eval_poly	;wreg free
  5667  004C2C  C0BD  F1A1         	movff	?_eval_poly,sin@y
  5668  004C30  C0BE  F1A2         	movff	?_eval_poly+1,sin@y+1
  5669  004C34  C0BF  F1A3         	movff	?_eval_poly+2,sin@y+2
  5670  004C38  C0C0  F1A4         	movff	?_eval_poly+3,sin@y+3
  5671  004C3C  C1A1  F07B         	movff	sin@y,___fldiv@a
  5672  004C40  C1A2  F07C         	movff	sin@y+1,___fldiv@a+1
  5673  004C44  C1A3  F07D         	movff	sin@y+2,___fldiv@a+2
  5674  004C48  C1A4  F07E         	movff	sin@y+3,___fldiv@a+3
  5675  004C4C  0E00               	movlw	0
  5676  004C4E  0100               	movlb	0	; () banked
  5677  004C50  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  5678  004C52  0E04               	movlw	4
  5679  004C54  6FC3               	movwf	eval_poly@n& (0+255),b
  5680  004C56  0E2D               	movlw	low sin@coeff_a
  5681  004C58  0100               	movlb	0	; () banked
  5682  004C5A  6FC1               	movwf	eval_poly@d& (0+255),b
  5683  004C5C  0E0D               	movlw	high sin@coeff_a
  5684  004C5E  0100               	movlb	0	; () banked
  5685  004C60  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  5686  004C62  C1A9  F0BD         	movff	sin@x2,eval_poly@x
  5687  004C66  C1AA  F0BE         	movff	sin@x2+1,eval_poly@x+1
  5688  004C6A  C1AB  F0BF         	movff	sin@x2+2,eval_poly@x+2
  5689  004C6E  C1AC  F0C0         	movff	sin@x2+3,eval_poly@x+3
  5690  004C72  EC1A  F02F         	call	_eval_poly	;wreg free
  5691  004C76  C0BD  F077         	movff	?_eval_poly,___fldiv@b
  5692  004C7A  C0BE  F078         	movff	?_eval_poly+1,___fldiv@b+1
  5693  004C7E  C0BF  F079         	movff	?_eval_poly+2,___fldiv@b+2
  5694  004C82  C0C0  F07A         	movff	?_eval_poly+3,___fldiv@b+3
  5695  004C86  EC4D  F021         	call	___fldiv	;wreg free
  5696  004C8A  C077  F1A5         	movff	?___fldiv,_sin$3757
  5697  004C8E  C078  F1A6         	movff	?___fldiv+1,_sin$3757+1
  5698  004C92  C079  F1A7         	movff	?___fldiv+2,_sin$3757+2
  5699  004C96  C07A  F1A8         	movff	?___fldiv+3,_sin$3757+3
  5700  004C9A  C19D  F090         	movff	sin@f,___flmul@b
  5701  004C9E  C19E  F091         	movff	sin@f+1,___flmul@b+1
  5702  004CA2  C19F  F092         	movff	sin@f+2,___flmul@b+2
  5703  004CA6  C1A0  F093         	movff	sin@f+3,___flmul@b+3
  5704  004CAA  C1A5  F094         	movff	_sin$3757,___flmul@a
  5705  004CAE  C1A6  F095         	movff	_sin$3757+1,___flmul@a+1
  5706  004CB2  C1A7  F096         	movff	_sin$3757+2,___flmul@a+2
  5707  004CB6  C1A8  F097         	movff	_sin$3757+3,___flmul@a+3
  5708  004CBA  ECD9  F01A         	call	___flmul	;wreg free
  5709  004CBE  C090  F19D         	movff	?___flmul,sin@f
  5710  004CC2  C091  F19E         	movff	?___flmul+1,sin@f+1
  5711  004CC6  C092  F19F         	movff	?___flmul+2,sin@f+2
  5712  004CCA  C093  F1A0         	movff	?___flmul+3,sin@f+3
  5713  004CCE  0101               	movlb	1	; () banked
  5714  004CD0  51AD               	movf	sin@sgn& (0+255),w,b
  5715  004CD2  0101               	movlb	1	; () banked
  5716  004CD4  B4D8               	btfsc	status,2,c
  5717  004CD6  D013               	goto	l1339
  5718                           
  5719                           ; BSR set to: 1
  5720  004CD8  C19D  F0BD         	movff	sin@f,___flneg@f1
  5721  004CDC  C19E  F0BE         	movff	sin@f+1,___flneg@f1+1
  5722  004CE0  C19F  F0BF         	movff	sin@f+2,___flneg@f1+2
  5723  004CE4  C1A0  F0C0         	movff	sin@f+3,___flneg@f1+3
  5724  004CE8  ECE9  F032         	call	___flneg	;wreg free
  5725  004CEC  C0BD  F19D         	movff	?___flneg,?_sin
  5726  004CF0  C0BE  F19E         	movff	?___flneg+1,?_sin+1
  5727  004CF4  C0BF  F19F         	movff	?___flneg+2,?_sin+2
  5728  004CF8  C0C0  F1A0         	movff	?___flneg+3,?_sin+3
  5729  004CFC  0012               	return	
  5730  004CFE                     l1339:
  5731                           
  5732                           ; BSR set to: 1
  5733  004CFE  C19D  F19D         	movff	sin@f,?_sin
  5734  004D02  C19E  F19E         	movff	sin@f+1,?_sin+1
  5735  004D06  C19F  F19F         	movff	sin@f+2,?_sin+2
  5736  004D0A  C1A0  F1A0         	movff	sin@f+3,?_sin+3
  5737  004D0E  0012               	return		;funcret
  5738  004D10                     __end_of_sin:
  5739                           	opt stack 0
  5740                           tblptru	equ	0xFF8
  5741                           tblptrh	equ	0xFF7
  5742                           tblptrl	equ	0xFF6
  5743                           tablat	equ	0xFF5
  5744                           postinc0	equ	0xFEE
  5745                           wreg	equ	0xFE8
  5746                           postdec1	equ	0xFE5
  5747                           fsr1l	equ	0xFE1
  5748                           indf2	equ	0xFDF
  5749                           postinc2	equ	0xFDE
  5750                           postdec2	equ	0xFDD
  5751                           fsr2h	equ	0xFDA
  5752                           fsr2l	equ	0xFD9
  5753                           status	equ	0xFD8
  5754                           
  5755 ;; *************** function _floor *****************
  5756 ;; Defined at:
  5757 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\floor.c"
  5758 ;; Parameters:    Size  Location     Type
  5759 ;;  x               4    0[BANK1 ] unsigned char 
  5760 ;; Auto vars:     Size  Location     Type
  5761 ;;  i               4    4[BANK1 ] unsigned char 
  5762 ;;  expon           2    8[BANK1 ] int 
  5763 ;; Return value:  Size  Location     Type
  5764 ;;                  4    0[BANK1 ] int 
  5765 ;; Registers used:
  5766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5767 ;; Tracked objects:
  5768 ;;		On entry : 0/0
  5769 ;;		On exit  : 0/0
  5770 ;;		Unchanged: 0/0
  5771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5772 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5773 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5775 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  5776 ;;Total ram usage:       10 bytes
  5777 ;; Hardware stack levels used:    1
  5778 ;; Hardware stack levels required when called:    5
  5779 ;; This function calls:
  5780 ;;		___fladd
  5781 ;;		___flge
  5782 ;;		___fltol
  5783 ;;		___xxtofl
  5784 ;;		_frexp
  5785 ;; This function is called by:
  5786 ;;		_sin
  5787 ;; This function uses a non-reentrant model
  5788 ;;
  5789                           
  5790                           	psect	text11
  5791  005D10                     __ptext11:
  5792                           	opt stack 0
  5793  005D10                     _floor:
  5794                           	opt stack 21
  5795                           
  5796                           ;incstack = 0
  5797  005D10  C18B  F077         	movff	floor@x,frexp@value
  5798  005D14  C18C  F078         	movff	floor@x+1,frexp@value+1
  5799  005D18  C18D  F079         	movff	floor@x+2,frexp@value+2
  5800  005D1C  C18E  F07A         	movff	floor@x+3,frexp@value+3
  5801  005D20  0E93               	movlw	low floor@expon
  5802  005D22  0100               	movlb	0	; () banked
  5803  005D24  6F7B               	movwf	frexp@eptr& (0+255),b
  5804  005D26  0E01               	movlw	high floor@expon
  5805  005D28  0100               	movlb	0	; () banked
  5806  005D2A  6F7C               	movwf	(frexp@eptr+1)& (0+255),b
  5807  005D2C  EC6B  F031         	call	_frexp	;wreg free
  5808  005D30  0101               	movlb	1	; () banked
  5809  005D32  AF94               	btfss	(floor@expon+1)& (0+255),7,b
  5810  005D34  D017               	goto	l7378
  5811                           
  5812                           ; BSR set to: 1
  5813  005D36  0101               	movlb	1	; () banked
  5814  005D38  AF8E               	btfss	(floor@x+3)& (0+255),7,b
  5815  005D3A  D00A               	goto	l7374
  5816                           
  5817                           ; BSR set to: 1
  5818  005D3C  0E00               	movlw	0
  5819  005D3E  0101               	movlb	1	; () banked
  5820  005D40  6F8B               	movwf	?_floor& (0+255),b
  5821  005D42  0E00               	movlw	0
  5822  005D44  6F8C               	movwf	(?_floor+1)& (0+255),b
  5823  005D46  0E80               	movlw	128
  5824  005D48  6F8D               	movwf	(?_floor+2)& (0+255),b
  5825  005D4A  0EBF               	movlw	191
  5826  005D4C  6F8E               	movwf	(?_floor+3)& (0+255),b
  5827                           
  5828                           ; BSR set to: 1
  5829  005D4E  0012               	return	
  5830  005D50                     l7374:
  5831                           
  5832                           ; BSR set to: 1
  5833  005D50  0E00               	movlw	0
  5834  005D52  0101               	movlb	1	; () banked
  5835  005D54  6F8B               	movwf	?_floor& (0+255),b
  5836  005D56  0E00               	movlw	0
  5837  005D58  6F8C               	movwf	(?_floor+1)& (0+255),b
  5838  005D5A  0E00               	movlw	0
  5839  005D5C  6F8D               	movwf	(?_floor+2)& (0+255),b
  5840  005D5E  0E00               	movlw	0
  5841  005D60  6F8E               	movwf	(?_floor+3)& (0+255),b
  5842                           
  5843                           ; BSR set to: 1
  5844  005D62  0012               	return	
  5845  005D64                     l7378:
  5846                           
  5847                           ; BSR set to: 1
  5848  005D64  0101               	movlb	1	; () banked
  5849  005D66  5194               	movf	(floor@expon+1)& (0+255),w,b
  5850  005D68  E105               	bnz	u9690
  5851  005D6A  0E1D               	movlw	29
  5852  005D6C  0101               	movlb	1	; () banked
  5853  005D6E  5D93               	subwf	floor@expon& (0+255),w,b
  5854  005D70  A0D8               	btfss	status,0,c
  5855  005D72  D009               	goto	l7382
  5856  005D74                     u9690:
  5857                           
  5858                           ; BSR set to: 1
  5859  005D74  C18B  F18B         	movff	floor@x,?_floor
  5860  005D78  C18C  F18C         	movff	floor@x+1,?_floor+1
  5861  005D7C  C18D  F18D         	movff	floor@x+2,?_floor+2
  5862  005D80  C18E  F18E         	movff	floor@x+3,?_floor+3
  5863  005D84  0012               	return	
  5864  005D86                     l7382:
  5865                           
  5866                           ; BSR set to: 1
  5867  005D86  C18B  F0C1         	movff	floor@x,___fltol@f1
  5868  005D8A  C18C  F0C2         	movff	floor@x+1,___fltol@f1+1
  5869  005D8E  C18D  F0C3         	movff	floor@x+2,___fltol@f1+2
  5870  005D92  C18E  F0C4         	movff	floor@x+3,___fltol@f1+3
  5871  005D96  ECA6  F02F         	call	___fltol	;wreg free
  5872  005D9A  C0C1  F0CB         	movff	?___fltol,___xxtofl@val
  5873  005D9E  C0C2  F0CC         	movff	?___fltol+1,___xxtofl@val+1
  5874  005DA2  C0C3  F0CD         	movff	?___fltol+2,___xxtofl@val+2
  5875  005DA6  C0C4  F0CE         	movff	?___fltol+3,___xxtofl@val+3
  5876  005DAA  0E01               	movlw	1
  5877  005DAC  EC7C  F02A         	call	___xxtofl
  5878  005DB0  C0CB  F18F         	movff	?___xxtofl,floor@i
  5879  005DB4  C0CC  F190         	movff	?___xxtofl+1,floor@i+1
  5880  005DB8  C0CD  F191         	movff	?___xxtofl+2,floor@i+2
  5881  005DBC  C0CE  F192         	movff	?___xxtofl+3,floor@i+3
  5882  005DC0  C18B  F0C5         	movff	floor@x,___flge@ff1
  5883  005DC4  C18C  F0C6         	movff	floor@x+1,___flge@ff1+1
  5884  005DC8  C18D  F0C7         	movff	floor@x+2,___flge@ff1+2
  5885  005DCC  C18E  F0C8         	movff	floor@x+3,___flge@ff1+3
  5886  005DD0  C18F  F0C9         	movff	floor@i,___flge@ff2
  5887  005DD4  C190  F0CA         	movff	floor@i+1,___flge@ff2+1
  5888  005DD8  C191  F0CB         	movff	floor@i+2,___flge@ff2+2
  5889  005DDC  C192  F0CC         	movff	floor@i+3,___flge@ff2+3
  5890  005DE0  EC26  F02D         	call	___flge	;wreg free
  5891  005DE4  0100               	movlb	0	; () banked
  5892  005DE6  B0D8               	btfsc	status,0,c
  5893  005DE8  D01C               	goto	l1508
  5894                           
  5895                           ; BSR set to: 0
  5896  005DEA  C18F  F0A9         	movff	floor@i,___fladd@b
  5897  005DEE  C190  F0AA         	movff	floor@i+1,___fladd@b+1
  5898  005DF2  C191  F0AB         	movff	floor@i+2,___fladd@b+2
  5899  005DF6  C192  F0AC         	movff	floor@i+3,___fladd@b+3
  5900  005DFA  0E00               	movlw	0
  5901  005DFC  0100               	movlb	0	; () banked
  5902  005DFE  6FAD               	movwf	___fladd@a& (0+255),b
  5903  005E00  0E00               	movlw	0
  5904  005E02  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5905  005E04  0E80               	movlw	128
  5906  005E06  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5907  005E08  0EBF               	movlw	191
  5908  005E0A  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5909  005E0C  EC85  F018         	call	___fladd	;wreg free
  5910  005E10  C0A9  F18B         	movff	?___fladd,?_floor
  5911  005E14  C0AA  F18C         	movff	?___fladd+1,?_floor+1
  5912  005E18  C0AB  F18D         	movff	?___fladd+2,?_floor+2
  5913  005E1C  C0AC  F18E         	movff	?___fladd+3,?_floor+3
  5914  005E20  0012               	return	
  5915  005E22                     l1508:
  5916                           
  5917                           ; BSR set to: 0
  5918  005E22  C18F  F18B         	movff	floor@i,?_floor
  5919  005E26  C190  F18C         	movff	floor@i+1,?_floor+1
  5920  005E2A  C191  F18D         	movff	floor@i+2,?_floor+2
  5921  005E2E  C192  F18E         	movff	floor@i+3,?_floor+3
  5922  005E32  0012               	return		;funcret
  5923  005E34                     __end_of_floor:
  5924                           	opt stack 0
  5925                           tblptru	equ	0xFF8
  5926                           tblptrh	equ	0xFF7
  5927                           tblptrl	equ	0xFF6
  5928                           tablat	equ	0xFF5
  5929                           postinc0	equ	0xFEE
  5930                           wreg	equ	0xFE8
  5931                           postdec1	equ	0xFE5
  5932                           fsr1l	equ	0xFE1
  5933                           indf2	equ	0xFDF
  5934                           postinc2	equ	0xFDE
  5935                           postdec2	equ	0xFDD
  5936                           fsr2h	equ	0xFDA
  5937                           fsr2l	equ	0xFD9
  5938                           status	equ	0xFD8
  5939                           
  5940 ;; *************** function _frexp *****************
  5941 ;; Defined at:
  5942 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\frexp.c"
  5943 ;; Parameters:    Size  Location     Type
  5944 ;;  value           4   23[BANK0 ] int 
  5945 ;;  eptr            2   27[BANK0 ] PTR int 
  5946 ;;		 -> floor@expon(2), 
  5947 ;; Auto vars:     Size  Location     Type
  5948 ;;		None
  5949 ;; Return value:  Size  Location     Type
  5950 ;;                  4   23[BANK0 ] PTR int 
  5951 ;; Registers used:
  5952 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5953 ;; Tracked objects:
  5954 ;;		On entry : 0/0
  5955 ;;		On exit  : 0/0
  5956 ;;		Unchanged: 0/0
  5957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5958 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5960 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5961 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5962 ;;Total ram usage:        8 bytes
  5963 ;; Hardware stack levels used:    1
  5964 ;; Hardware stack levels required when called:    4
  5965 ;; This function calls:
  5966 ;;		Nothing
  5967 ;; This function is called by:
  5968 ;;		_floor
  5969 ;; This function uses a non-reentrant model
  5970 ;;
  5971                           
  5972                           	psect	text12
  5973  0062D6                     __ptext12:
  5974                           	opt stack 0
  5975  0062D6                     _frexp:
  5976                           	opt stack 21
  5977                           
  5978                           ;incstack = 0
  5979  0062D6  0100               	movlb	0	; () banked
  5980  0062D8  5177               	movf	frexp@value& (0+255),w,b
  5981  0062DA  0100               	movlb	0	; () banked
  5982  0062DC  1178               	iorwf	(frexp@value+1)& (0+255),w,b
  5983  0062DE  0100               	movlb	0	; () banked
  5984  0062E0  1179               	iorwf	(frexp@value+2)& (0+255),w,b
  5985  0062E2  0100               	movlb	0	; () banked
  5986  0062E4  117A               	iorwf	(frexp@value+3)& (0+255),w,b
  5987  0062E6  A4D8               	btfss	status,2,c
  5988  0062E8  D009               	goto	l7200
  5989                           
  5990                           ; BSR set to: 0
  5991  0062EA  C07B  FFD9         	movff	frexp@eptr,fsr2l
  5992  0062EE  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  5993  0062F2  0E00               	movlw	0
  5994  0062F4  6EDE               	movwf	postinc2,c
  5995  0062F6  0E00               	movlw	0
  5996  0062F8  6EDD               	movwf	postdec2,c
  5997                           
  5998                           ; BSR set to: 0
  5999                           ;	Return value of _frexp is never used
  6000  0062FA  0012               	return	
  6001  0062FC                     l7200:
  6002                           
  6003                           ; BSR set to: 0
  6004  0062FC  0100               	movlb	0	; () banked
  6005  0062FE  517A               	movf	(frexp@value+3)& (0+255),w,b
  6006  006300  0B7F               	andlw	127
  6007  006302  0100               	movlb	0	; () banked
  6008  006304  6F7D               	movwf	??_frexp& (0+255),b
  6009  006306  6B7E               	clrf	(??_frexp+1)& (0+255),b
  6010  006308  90D8               	bcf	status,0,c
  6011  00630A  0100               	movlb	0	; () banked
  6012  00630C  377D               	rlcf	??_frexp& (0+255),f,b
  6013  00630E  377E               	rlcf	(??_frexp+1)& (0+255),f,b
  6014  006310  C07B  FFD9         	movff	frexp@eptr,fsr2l
  6015  006314  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  6016  006318  C07D  FFDE         	movff	??_frexp,postinc2
  6017  00631C  C07E  FFDD         	movff	??_frexp+1,postdec2
  6018  006320  0100               	movlb	0	; () banked
  6019  006322  AF79               	btfss	(frexp@value+2)& (0+255),7,b
  6020  006324  D004               	goto	u9410
  6021  006326  0100               	movlb	0	; () banked
  6022  006328  6B7D               	clrf	??_frexp& (0+255),b
  6023  00632A  2B7D               	incf	??_frexp& (0+255),f,b
  6024  00632C  D002               	goto	u9418
  6025  00632E                     u9410:
  6026  00632E  0100               	movlb	0	; () banked
  6027  006330  6B7D               	clrf	??_frexp& (0+255),b
  6028  006332                     u9418:
  6029  006332  0100               	movlb	0	; () banked
  6030  006334  517D               	movf	??_frexp& (0+255),w,b
  6031  006336  C07B  FFD9         	movff	frexp@eptr,fsr2l
  6032  00633A  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  6033  00633E  12DE               	iorwf	postinc2,f,c
  6034  006340  0E00               	movlw	0
  6035  006342  12DD               	iorwf	postdec2,f,c
  6036                           
  6037                           ; BSR set to: 0
  6038  006344  C07B  FFD9         	movff	frexp@eptr,fsr2l
  6039  006348  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  6040  00634C  0E82               	movlw	130
  6041  00634E  26DE               	addwf	postinc2,f,c
  6042  006350  0EFF               	movlw	255
  6043  006352  22DD               	addwfc	postdec2,f,c
  6044                           
  6045                           ; BSR set to: 0
  6046  006354  0100               	movlb	0	; () banked
  6047  006356  817A               	bsf	(frexp@value+3)& (0+255),0,b
  6048  006358  837A               	bsf	(frexp@value+3)& (0+255),1,b
  6049  00635A  857A               	bsf	(frexp@value+3)& (0+255),2,b
  6050  00635C  877A               	bsf	(frexp@value+3)& (0+255),3,b
  6051  00635E  897A               	bsf	(frexp@value+3)& (0+255),4,b
  6052  006360  8B7A               	bsf	(frexp@value+3)& (0+255),5,b
  6053  006362  9D7A               	bcf	(frexp@value+3)& (0+255),6,b
  6054                           
  6055                           ; BSR set to: 0
  6056  006364  0100               	movlb	0	; () banked
  6057  006366  9F79               	bcf	(frexp@value+2)& (0+255),7,b
  6058  006368  0012               	return	
  6059  00636A                     __end_of_frexp:
  6060                           	opt stack 0
  6061                           tblptru	equ	0xFF8
  6062                           tblptrh	equ	0xFF7
  6063                           tblptrl	equ	0xFF6
  6064                           tablat	equ	0xFF5
  6065                           postinc0	equ	0xFEE
  6066                           wreg	equ	0xFE8
  6067                           postdec1	equ	0xFE5
  6068                           fsr1l	equ	0xFE1
  6069                           indf2	equ	0xFDF
  6070                           postinc2	equ	0xFDE
  6071                           postdec2	equ	0xFDD
  6072                           fsr2h	equ	0xFDA
  6073                           fsr2l	equ	0xFD9
  6074                           status	equ	0xFD8
  6075                           
  6076 ;; *************** function ___xxtofl *****************
  6077 ;; Defined at:
  6078 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  6079 ;; Parameters:    Size  Location     Type
  6080 ;;  sign            1    wreg     unsigned char 
  6081 ;;  val             4  107[BANK0 ] long 
  6082 ;; Auto vars:     Size  Location     Type
  6083 ;;  sign            1  115[BANK0 ] unsigned char 
  6084 ;;  arg             4  117[BANK0 ] unsigned long 
  6085 ;;  exp             1  116[BANK0 ] unsigned char 
  6086 ;; Return value:  Size  Location     Type
  6087 ;;                  4  107[BANK0 ] unsigned char 
  6088 ;; Registers used:
  6089 ;;		wreg, status,2, status,0
  6090 ;; Tracked objects:
  6091 ;;		On entry : 0/0
  6092 ;;		On exit  : 0/0
  6093 ;;		Unchanged: 0/0
  6094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6095 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6096 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6097 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6098 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6099 ;;Total ram usage:       14 bytes
  6100 ;; Hardware stack levels used:    1
  6101 ;; Hardware stack levels required when called:    4
  6102 ;; This function calls:
  6103 ;;		Nothing
  6104 ;; This function is called by:
  6105 ;;		_park_search
  6106 ;;		_park_routine
  6107 ;;		_parallelo
  6108 ;;		_floor
  6109 ;; This function uses a non-reentrant model
  6110 ;;
  6111                           
  6112                           	psect	text13
  6113  0054F8                     __ptext13:
  6114                           	opt stack 0
  6115  0054F8                     ___xxtofl:
  6116                           	opt stack 24
  6117                           
  6118                           ; BSR set to: 0
  6119                           ;incstack = 0
  6120                           ;___xxtofl@sign stored from wreg
  6121  0054F8  0100               	movlb	0	; () banked
  6122  0054FA  6FD3               	movwf	___xxtofl@sign& (0+255),b
  6123  0054FC  0100               	movlb	0	; () banked
  6124  0054FE  51D3               	movf	___xxtofl@sign& (0+255),w,b
  6125  005500  0100               	movlb	0	; () banked
  6126  005502  B4D8               	btfsc	status,2,c
  6127  005504  D01E               	goto	l1483
  6128                           
  6129                           ; BSR set to: 0
  6130  005506  0100               	movlb	0	; () banked
  6131  005508  AFCE               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6132  00550A  D01B               	goto	l1483
  6133                           
  6134                           ; BSR set to: 0
  6135  00550C  C0CB  F0CF         	movff	___xxtofl@val,??___xxtofl
  6136  005510  C0CC  F0D0         	movff	___xxtofl@val+1,??___xxtofl+1
  6137  005514  C0CD  F0D1         	movff	___xxtofl@val+2,??___xxtofl+2
  6138  005518  C0CE  F0D2         	movff	___xxtofl@val+3,??___xxtofl+3
  6139  00551C  0100               	movlb	0	; () banked
  6140  00551E  1FCF               	comf	??___xxtofl& (0+255),f,b
  6141  005520  1FD0               	comf	(??___xxtofl+1)& (0+255),f,b
  6142  005522  1FD1               	comf	(??___xxtofl+2)& (0+255),f,b
  6143  005524  1FD2               	comf	(??___xxtofl+3)& (0+255),f,b
  6144  005526  2BCF               	incf	??___xxtofl& (0+255),f,b
  6145  005528  0E00               	movlw	0
  6146  00552A  23D0               	addwfc	(??___xxtofl+1)& (0+255),f,b
  6147  00552C  23D1               	addwfc	(??___xxtofl+2)& (0+255),f,b
  6148  00552E  23D2               	addwfc	(??___xxtofl+3)& (0+255),f,b
  6149  005530  C0CF  F0D5         	movff	??___xxtofl,___xxtofl@arg
  6150  005534  C0D0  F0D6         	movff	??___xxtofl+1,___xxtofl@arg+1
  6151  005538  C0D1  F0D7         	movff	??___xxtofl+2,___xxtofl@arg+2
  6152  00553C  C0D2  F0D8         	movff	??___xxtofl+3,___xxtofl@arg+3
  6153  005540  D008               	goto	l7158
  6154  005542                     l1483:
  6155                           
  6156                           ; BSR set to: 0
  6157  005542  C0CB  F0D5         	movff	___xxtofl@val,___xxtofl@arg
  6158  005546  C0CC  F0D6         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6159  00554A  C0CD  F0D7         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6160  00554E  C0CE  F0D8         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6161  005552                     l7158:
  6162                           
  6163                           ; BSR set to: 0
  6164  005552  0100               	movlb	0	; () banked
  6165  005554  51CB               	movf	___xxtofl@val& (0+255),w,b
  6166  005556  0100               	movlb	0	; () banked
  6167  005558  11CC               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  6168  00555A  0100               	movlb	0	; () banked
  6169  00555C  11CD               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  6170  00555E  0100               	movlb	0	; () banked
  6171  005560  11CE               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  6172  005562  A4D8               	btfss	status,2,c
  6173  005564  D00A               	goto	l7164
  6174                           
  6175                           ; BSR set to: 0
  6176  005566  0E00               	movlw	0
  6177  005568  0100               	movlb	0	; () banked
  6178  00556A  6FCB               	movwf	?___xxtofl& (0+255),b
  6179  00556C  0E00               	movlw	0
  6180  00556E  6FCC               	movwf	(?___xxtofl+1)& (0+255),b
  6181  005570  0E00               	movlw	0
  6182  005572  6FCD               	movwf	(?___xxtofl+2)& (0+255),b
  6183  005574  0E00               	movlw	0
  6184  005576  6FCE               	movwf	(?___xxtofl+3)& (0+255),b
  6185                           
  6186                           ; BSR set to: 0
  6187  005578  0012               	return	
  6188  00557A                     l7164:
  6189                           
  6190                           ; BSR set to: 0
  6191  00557A  0E96               	movlw	150
  6192  00557C  0100               	movlb	0	; () banked
  6193  00557E  6FD4               	movwf	___xxtofl@exp& (0+255),b
  6194  005580  D008               	goto	l7168
  6195  005582                     l7166:
  6196                           
  6197                           ; BSR set to: 0
  6198  005582  0100               	movlb	0	; () banked
  6199  005584  2BD4               	incf	___xxtofl@exp& (0+255),f,b
  6200  005586  0100               	movlb	0	; () banked
  6201  005588  90D8               	bcf	status,0,c
  6202  00558A  33D8               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6203  00558C  33D7               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6204  00558E  33D6               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6205  005590  33D5               	rrcf	___xxtofl@arg& (0+255),f,b
  6206  005592                     l7168:
  6207                           
  6208                           ; BSR set to: 0
  6209  005592  0E00               	movlw	0
  6210  005594  0100               	movlb	0	; () banked
  6211  005596  15D5               	andwf	___xxtofl@arg& (0+255),w,b
  6212  005598  0100               	movlb	0	; () banked
  6213  00559A  6FCF               	movwf	??___xxtofl& (0+255),b
  6214  00559C  0E00               	movlw	0
  6215  00559E  0100               	movlb	0	; () banked
  6216  0055A0  15D6               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6217  0055A2  0100               	movlb	0	; () banked
  6218  0055A4  6FD0               	movwf	(??___xxtofl+1)& (0+255),b
  6219  0055A6  0E00               	movlw	0
  6220  0055A8  0100               	movlb	0	; () banked
  6221  0055AA  15D7               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6222  0055AC  0100               	movlb	0	; () banked
  6223  0055AE  6FD1               	movwf	(??___xxtofl+2)& (0+255),b
  6224  0055B0  0EFE               	movlw	254
  6225  0055B2  0100               	movlb	0	; () banked
  6226  0055B4  15D8               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6227  0055B6  0100               	movlb	0	; () banked
  6228  0055B8  6FD2               	movwf	(??___xxtofl+3)& (0+255),b
  6229  0055BA  0100               	movlb	0	; () banked
  6230  0055BC  51CF               	movf	??___xxtofl& (0+255),w,b
  6231  0055BE  0100               	movlb	0	; () banked
  6232  0055C0  11D0               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6233  0055C2  0100               	movlb	0	; () banked
  6234  0055C4  11D1               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6235  0055C6  0100               	movlb	0	; () banked
  6236  0055C8  11D2               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6237  0055CA  B4D8               	btfsc	status,2,c
  6238  0055CC  D010               	goto	l1490
  6239  0055CE  D7D9               	goto	l7166
  6240  0055D0                     l7170:
  6241                           
  6242                           ; BSR set to: 0
  6243  0055D0  0100               	movlb	0	; () banked
  6244  0055D2  2BD4               	incf	___xxtofl@exp& (0+255),f,b
  6245                           
  6246                           ; BSR set to: 0
  6247  0055D4  0E01               	movlw	1
  6248  0055D6  0100               	movlb	0	; () banked
  6249  0055D8  27D5               	addwf	___xxtofl@arg& (0+255),f,b
  6250  0055DA  0E00               	movlw	0
  6251  0055DC  23D6               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  6252  0055DE  23D7               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  6253  0055E0  23D8               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  6254                           
  6255                           ; BSR set to: 0
  6256  0055E2  0100               	movlb	0	; () banked
  6257  0055E4  90D8               	bcf	status,0,c
  6258  0055E6  33D8               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6259  0055E8  33D7               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6260  0055EA  33D6               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6261  0055EC  33D5               	rrcf	___xxtofl@arg& (0+255),f,b
  6262  0055EE                     l1490:
  6263                           
  6264                           ; BSR set to: 0
  6265  0055EE  0E00               	movlw	0
  6266  0055F0  0100               	movlb	0	; () banked
  6267  0055F2  15D5               	andwf	___xxtofl@arg& (0+255),w,b
  6268  0055F4  0100               	movlb	0	; () banked
  6269  0055F6  6FCF               	movwf	??___xxtofl& (0+255),b
  6270  0055F8  0E00               	movlw	0
  6271  0055FA  0100               	movlb	0	; () banked
  6272  0055FC  15D6               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6273  0055FE  0100               	movlb	0	; () banked
  6274  005600  6FD0               	movwf	(??___xxtofl+1)& (0+255),b
  6275  005602  0E00               	movlw	0
  6276  005604  0100               	movlb	0	; () banked
  6277  005606  15D7               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6278  005608  0100               	movlb	0	; () banked
  6279  00560A  6FD1               	movwf	(??___xxtofl+2)& (0+255),b
  6280  00560C  0EFF               	movlw	255
  6281  00560E  0100               	movlb	0	; () banked
  6282  005610  15D8               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6283  005612  0100               	movlb	0	; () banked
  6284  005614  6FD2               	movwf	(??___xxtofl+3)& (0+255),b
  6285  005616  0100               	movlb	0	; () banked
  6286  005618  51CF               	movf	??___xxtofl& (0+255),w,b
  6287  00561A  0100               	movlb	0	; () banked
  6288  00561C  11D0               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6289  00561E  0100               	movlb	0	; () banked
  6290  005620  11D1               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6291  005622  0100               	movlb	0	; () banked
  6292  005624  11D2               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6293  005626  B4D8               	btfsc	status,2,c
  6294  005628  D009               	goto	l7178
  6295  00562A  D7D2               	goto	l7170
  6296  00562C                     l7176:
  6297                           
  6298                           ; BSR set to: 0
  6299  00562C  0100               	movlb	0	; () banked
  6300  00562E  07D4               	decf	___xxtofl@exp& (0+255),f,b
  6301  005630  0100               	movlb	0	; () banked
  6302  005632  90D8               	bcf	status,0,c
  6303  005634  37D5               	rlcf	___xxtofl@arg& (0+255),f,b
  6304  005636  37D6               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  6305  005638  37D7               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  6306  00563A  37D8               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  6307  00563C                     l7178:
  6308                           
  6309                           ; BSR set to: 0
  6310  00563C  0100               	movlb	0	; () banked
  6311  00563E  BFD7               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  6312  005640  D004               	goto	l1497
  6313                           
  6314                           ; BSR set to: 0
  6315  005642  0E02               	movlw	2
  6316  005644  0100               	movlb	0	; () banked
  6317  005646  61D4               	cpfslt	___xxtofl@exp& (0+255),b
  6318  005648  D7F1               	goto	l7176
  6319  00564A                     l1497:
  6320                           
  6321                           ; BSR set to: 0
  6322  00564A  0100               	movlb	0	; () banked
  6323  00564C  B1D4               	btfsc	___xxtofl@exp& (0+255),0,b
  6324  00564E  D009               	goto	l1498
  6325                           
  6326                           ; BSR set to: 0
  6327  005650  0EFF               	movlw	255
  6328  005652  0100               	movlb	0	; () banked
  6329  005654  17D5               	andwf	___xxtofl@arg& (0+255),f,b
  6330  005656  0EFF               	movlw	255
  6331  005658  17D6               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  6332  00565A  0E7F               	movlw	127
  6333  00565C  17D7               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  6334  00565E  0EFF               	movlw	255
  6335  005660  17D8               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  6336  005662                     l1498:
  6337                           
  6338                           ; BSR set to: 0
  6339  005662  0100               	movlb	0	; () banked
  6340  005664  90D8               	bcf	status,0,c
  6341  005666  33D4               	rrcf	___xxtofl@exp& (0+255),f,b
  6342  005668  C0D4  F0CF         	movff	___xxtofl@exp,??___xxtofl
  6343  00566C  0100               	movlb	0	; () banked
  6344  00566E  6BD0               	clrf	(??___xxtofl+1)& (0+255),b
  6345  005670  6BD1               	clrf	(??___xxtofl+2)& (0+255),b
  6346  005672  6BD2               	clrf	(??___xxtofl+3)& (0+255),b
  6347  005674  C0CF  F0D2         	movff	??___xxtofl,??___xxtofl+3
  6348  005678  0100               	movlb	0	; () banked
  6349  00567A  6BD1               	clrf	(??___xxtofl+2)& (0+255),b
  6350  00567C  6BD0               	clrf	(??___xxtofl+1)& (0+255),b
  6351  00567E  6BCF               	clrf	??___xxtofl& (0+255),b
  6352  005680  0100               	movlb	0	; () banked
  6353  005682  51CF               	movf	??___xxtofl& (0+255),w,b
  6354  005684  0100               	movlb	0	; () banked
  6355  005686  13D5               	iorwf	___xxtofl@arg& (0+255),f,b
  6356  005688  0100               	movlb	0	; () banked
  6357  00568A  51D0               	movf	(??___xxtofl+1)& (0+255),w,b
  6358  00568C  0100               	movlb	0	; () banked
  6359  00568E  13D6               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  6360  005690  0100               	movlb	0	; () banked
  6361  005692  51D1               	movf	(??___xxtofl+2)& (0+255),w,b
  6362  005694  0100               	movlb	0	; () banked
  6363  005696  13D7               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  6364  005698  0100               	movlb	0	; () banked
  6365  00569A  51D2               	movf	(??___xxtofl+3)& (0+255),w,b
  6366  00569C  0100               	movlb	0	; () banked
  6367  00569E  13D8               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  6368                           
  6369                           ; BSR set to: 0
  6370  0056A0  0100               	movlb	0	; () banked
  6371  0056A2  51D3               	movf	___xxtofl@sign& (0+255),w,b
  6372  0056A4  0100               	movlb	0	; () banked
  6373  0056A6  B4D8               	btfsc	status,2,c
  6374  0056A8  D005               	goto	l7190
  6375                           
  6376                           ; BSR set to: 0
  6377  0056AA  0100               	movlb	0	; () banked
  6378  0056AC  AFCE               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6379  0056AE  D002               	goto	l7190
  6380                           
  6381                           ; BSR set to: 0
  6382  0056B0  0100               	movlb	0	; () banked
  6383  0056B2  8FD8               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  6384  0056B4                     l7190:
  6385                           
  6386                           ; BSR set to: 0
  6387  0056B4  C0D5  F0CB         	movff	___xxtofl@arg,?___xxtofl
  6388  0056B8  C0D6  F0CC         	movff	___xxtofl@arg+1,?___xxtofl+1
  6389  0056BC  C0D7  F0CD         	movff	___xxtofl@arg+2,?___xxtofl+2
  6390  0056C0  C0D8  F0CE         	movff	___xxtofl@arg+3,?___xxtofl+3
  6391  0056C4  0012               	return	
  6392  0056C6                     __end_of___xxtofl:
  6393                           	opt stack 0
  6394                           tblptru	equ	0xFF8
  6395                           tblptrh	equ	0xFF7
  6396                           tblptrl	equ	0xFF6
  6397                           tablat	equ	0xFF5
  6398                           postinc0	equ	0xFEE
  6399                           wreg	equ	0xFE8
  6400                           postdec1	equ	0xFE5
  6401                           fsr1l	equ	0xFE1
  6402                           indf2	equ	0xFDF
  6403                           postinc2	equ	0xFDE
  6404                           postdec2	equ	0xFDD
  6405                           fsr2h	equ	0xFDA
  6406                           fsr2l	equ	0xFD9
  6407                           status	equ	0xFD8
  6408                           
  6409 ;; *************** function ___fltol *****************
  6410 ;; Defined at:
  6411 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  6412 ;; Parameters:    Size  Location     Type
  6413 ;;  f1              4   97[BANK0 ] unsigned char 
  6414 ;; Auto vars:     Size  Location     Type
  6415 ;;  exp1            1  106[BANK0 ] unsigned char 
  6416 ;;  sign1           1  105[BANK0 ] unsigned char 
  6417 ;; Return value:  Size  Location     Type
  6418 ;;                  4   97[BANK0 ] long 
  6419 ;; Registers used:
  6420 ;;		wreg, status,2, status,0
  6421 ;; Tracked objects:
  6422 ;;		On entry : 0/0
  6423 ;;		On exit  : 0/0
  6424 ;;		Unchanged: 0/0
  6425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6426 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6427 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6428 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6429 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6430 ;;Total ram usage:       10 bytes
  6431 ;; Hardware stack levels used:    1
  6432 ;; Hardware stack levels required when called:    4
  6433 ;; This function calls:
  6434 ;;		Nothing
  6435 ;; This function is called by:
  6436 ;;		_park_routine
  6437 ;;		_parallelo
  6438 ;;		_floor
  6439 ;; This function uses a non-reentrant model
  6440 ;;
  6441                           
  6442                           	psect	text14
  6443  005F4C                     __ptext14:
  6444                           	opt stack 0
  6445  005F4C                     ___fltol:
  6446                           	opt stack 24
  6447                           
  6448                           ; BSR set to: 0
  6449                           ;incstack = 0
  6450  005F4C  0100               	movlb	0	; () banked
  6451  005F4E  35C3               	rlcf	(___fltol@f1+2)& (0+255),w,b
  6452  005F50  35C4               	rlcf	(___fltol@f1+3)& (0+255),w,b
  6453  005F52  0100               	movlb	0	; () banked
  6454  005F54  6FCA               	movwf	___fltol@exp1& (0+255),b
  6455  005F56  0100               	movlb	0	; () banked
  6456  005F58  51CA               	movf	___fltol@exp1& (0+255),w,b
  6457  005F5A  A4D8               	btfss	status,2,c
  6458  005F5C  D00A               	goto	l7114
  6459                           
  6460                           ; BSR set to: 0
  6461  005F5E  0E00               	movlw	0
  6462  005F60  0100               	movlb	0	; () banked
  6463  005F62  6FC1               	movwf	?___fltol& (0+255),b
  6464  005F64  0E00               	movlw	0
  6465  005F66  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6466  005F68  0E00               	movlw	0
  6467  005F6A  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6468  005F6C  0E00               	movlw	0
  6469  005F6E  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6470                           
  6471                           ; BSR set to: 0
  6472  005F70  0012               	return	
  6473  005F72                     l7114:
  6474                           
  6475                           ; BSR set to: 0
  6476  005F72  C0C1  F0C5         	movff	___fltol@f1,??___fltol
  6477  005F76  C0C2  F0C6         	movff	___fltol@f1+1,??___fltol+1
  6478  005F7A  C0C3  F0C7         	movff	___fltol@f1+2,??___fltol+2
  6479  005F7E  C0C4  F0C8         	movff	___fltol@f1+3,??___fltol+3
  6480  005F82  0E20               	movlw	32
  6481  005F84  D006               	goto	u9240
  6482  005F86                     u9245:
  6483  005F86  0100               	movlb	0	; () banked
  6484  005F88  90D8               	bcf	status,0,c
  6485  005F8A  33C8               	rrcf	(??___fltol+3)& (0+255),f,b
  6486  005F8C  33C7               	rrcf	(??___fltol+2)& (0+255),f,b
  6487  005F8E  33C6               	rrcf	(??___fltol+1)& (0+255),f,b
  6488  005F90  33C5               	rrcf	??___fltol& (0+255),f,b
  6489  005F92                     u9240:
  6490  005F92  2EE8               	decfsz	wreg,f,c
  6491  005F94  D7F8               	goto	u9245
  6492  005F96  0100               	movlb	0	; () banked
  6493  005F98  51C5               	movf	??___fltol& (0+255),w,b
  6494  005F9A  0100               	movlb	0	; () banked
  6495  005F9C  6FC9               	movwf	___fltol@sign1& (0+255),b
  6496                           
  6497                           ; BSR set to: 0
  6498  005F9E  0100               	movlb	0	; () banked
  6499  005FA0  8FC3               	bsf	(___fltol@f1+2)& (0+255),7,b
  6500                           
  6501                           ; BSR set to: 0
  6502  005FA2  0EFF               	movlw	255
  6503  005FA4  0100               	movlb	0	; () banked
  6504  005FA6  17C1               	andwf	___fltol@f1& (0+255),f,b
  6505  005FA8  0EFF               	movlw	255
  6506  005FAA  17C2               	andwf	(___fltol@f1+1)& (0+255),f,b
  6507  005FAC  0EFF               	movlw	255
  6508  005FAE  17C3               	andwf	(___fltol@f1+2)& (0+255),f,b
  6509  005FB0  0E00               	movlw	0
  6510  005FB2  17C4               	andwf	(___fltol@f1+3)& (0+255),f,b
  6511                           
  6512                           ; BSR set to: 0
  6513  005FB4  0E96               	movlw	150
  6514  005FB6  0100               	movlb	0	; () banked
  6515  005FB8  5FCA               	subwf	___fltol@exp1& (0+255),f,b
  6516                           
  6517                           ; BSR set to: 0
  6518  005FBA  0100               	movlb	0	; () banked
  6519  005FBC  AFCA               	btfss	___fltol@exp1& (0+255),7,b
  6520  005FBE  D01A               	goto	l7134
  6521                           
  6522                           ; BSR set to: 0
  6523  005FC0  0100               	movlb	0	; () banked
  6524  005FC2  51CA               	movf	___fltol@exp1& (0+255),w,b
  6525  005FC4  0A80               	xorlw	128
  6526  005FC6  0F97               	addlw	151
  6527  005FC8  B0D8               	btfsc	status,0,c
  6528  005FCA  D00A               	goto	l7130
  6529                           
  6530                           ; BSR set to: 0
  6531  005FCC  0E00               	movlw	0
  6532  005FCE  0100               	movlb	0	; () banked
  6533  005FD0  6FC1               	movwf	?___fltol& (0+255),b
  6534  005FD2  0E00               	movlw	0
  6535  005FD4  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6536  005FD6  0E00               	movlw	0
  6537  005FD8  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6538  005FDA  0E00               	movlw	0
  6539  005FDC  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6540                           
  6541                           ; BSR set to: 0
  6542  005FDE  0012               	return	
  6543  005FE0                     l7130:
  6544                           
  6545                           ; BSR set to: 0
  6546  005FE0  0100               	movlb	0	; () banked
  6547  005FE2  90D8               	bcf	status,0,c
  6548  005FE4  33C4               	rrcf	(___fltol@f1+3)& (0+255),f,b
  6549  005FE6  33C3               	rrcf	(___fltol@f1+2)& (0+255),f,b
  6550  005FE8  33C2               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6551  005FEA  33C1               	rrcf	___fltol@f1& (0+255),f,b
  6552                           
  6553                           ; BSR set to: 0
  6554  005FEC  0100               	movlb	0	; () banked
  6555  005FEE  3FCA               	incfsz	___fltol@exp1& (0+255),f,b
  6556  005FF0  D7F7               	goto	l7130
  6557                           
  6558                           ; BSR set to: 0
  6559  005FF2  D01B               	goto	l7144
  6560  005FF4                     l7134:
  6561                           
  6562                           ; BSR set to: 0
  6563  005FF4  0E1F               	movlw	31
  6564  005FF6  0100               	movlb	0	; () banked
  6565  005FF8  65CA               	cpfsgt	___fltol@exp1& (0+255),b
  6566  005FFA  D012               	goto	l7142
  6567                           
  6568                           ; BSR set to: 0
  6569  005FFC  0E00               	movlw	0
  6570  005FFE  0100               	movlb	0	; () banked
  6571  006000  6FC1               	movwf	?___fltol& (0+255),b
  6572  006002  0E00               	movlw	0
  6573  006004  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6574  006006  0E00               	movlw	0
  6575  006008  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6576  00600A  0E00               	movlw	0
  6577  00600C  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6578                           
  6579                           ; BSR set to: 0
  6580  00600E  0012               	return	
  6581  006010                     l7140:
  6582                           
  6583                           ; BSR set to: 0
  6584  006010  0100               	movlb	0	; () banked
  6585  006012  90D8               	bcf	status,0,c
  6586  006014  37C1               	rlcf	___fltol@f1& (0+255),f,b
  6587  006016  37C2               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6588  006018  37C3               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6589  00601A  37C4               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6590  00601C  0100               	movlb	0	; () banked
  6591  00601E  07CA               	decf	___fltol@exp1& (0+255),f,b
  6592  006020                     l7142:
  6593                           
  6594                           ; BSR set to: 0
  6595  006020  0100               	movlb	0	; () banked
  6596  006022  51CA               	movf	___fltol@exp1& (0+255),w,b
  6597  006024  0100               	movlb	0	; () banked
  6598  006026  A4D8               	btfss	status,2,c
  6599  006028  D7F3               	goto	l7140
  6600  00602A                     l7144:
  6601                           
  6602                           ; BSR set to: 0
  6603  00602A  0100               	movlb	0	; () banked
  6604  00602C  51C9               	movf	___fltol@sign1& (0+255),w,b
  6605  00602E  0100               	movlb	0	; () banked
  6606  006030  B4D8               	btfsc	status,2,c
  6607  006032  D009               	goto	l7148
  6608                           
  6609                           ; BSR set to: 0
  6610  006034  0100               	movlb	0	; () banked
  6611  006036  1FC4               	comf	(___fltol@f1+3)& (0+255),f,b
  6612  006038  1FC3               	comf	(___fltol@f1+2)& (0+255),f,b
  6613  00603A  1FC2               	comf	(___fltol@f1+1)& (0+255),f,b
  6614  00603C  6DC1               	negf	___fltol@f1& (0+255),b
  6615  00603E  0E00               	movlw	0
  6616  006040  23C2               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6617  006042  23C3               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6618  006044  23C4               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6619  006046                     l7148:
  6620                           
  6621                           ; BSR set to: 0
  6622  006046  C0C1  F0C1         	movff	___fltol@f1,?___fltol
  6623  00604A  C0C2  F0C2         	movff	___fltol@f1+1,?___fltol+1
  6624  00604E  C0C3  F0C3         	movff	___fltol@f1+2,?___fltol+2
  6625  006052  C0C4  F0C4         	movff	___fltol@f1+3,?___fltol+3
  6626  006056  0012               	return	
  6627  006058                     __end_of___fltol:
  6628                           	opt stack 0
  6629                           tblptru	equ	0xFF8
  6630                           tblptrh	equ	0xFF7
  6631                           tblptrl	equ	0xFF6
  6632                           tablat	equ	0xFF5
  6633                           postinc0	equ	0xFEE
  6634                           wreg	equ	0xFE8
  6635                           postdec1	equ	0xFE5
  6636                           fsr1l	equ	0xFE1
  6637                           indf2	equ	0xFDF
  6638                           postinc2	equ	0xFDE
  6639                           postdec2	equ	0xFDD
  6640                           fsr2h	equ	0xFDA
  6641                           fsr2l	equ	0xFD9
  6642                           status	equ	0xFD8
  6643                           
  6644 ;; *************** function ___flsub *****************
  6645 ;; Defined at:
  6646 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  6647 ;; Parameters:    Size  Location     Type
  6648 ;;  b               4   10[BANK1 ] long 
  6649 ;;  a               4   14[BANK1 ] long 
  6650 ;; Auto vars:     Size  Location     Type
  6651 ;;		None
  6652 ;; Return value:  Size  Location     Type
  6653 ;;                  4   10[BANK1 ] long 
  6654 ;; Registers used:
  6655 ;;		wreg, status,2, status,0, cstack
  6656 ;; Tracked objects:
  6657 ;;		On entry : 0/0
  6658 ;;		On exit  : 0/0
  6659 ;;		Unchanged: 0/0
  6660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6661 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6664 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6665 ;;Total ram usage:        8 bytes
  6666 ;; Hardware stack levels used:    1
  6667 ;; Hardware stack levels required when called:    5
  6668 ;; This function calls:
  6669 ;;		___fladd
  6670 ;; This function is called by:
  6671 ;;		_sin
  6672 ;; This function uses a non-reentrant model
  6673 ;;
  6674                           
  6675                           	psect	text15
  6676  006512                     __ptext15:
  6677                           	opt stack 0
  6678  006512                     ___flsub:
  6679                           	opt stack 21
  6680                           
  6681                           ; BSR set to: 0
  6682                           ;incstack = 0
  6683  006512  0E00               	movlw	0
  6684  006514  0101               	movlb	1	; () banked
  6685  006516  1B99               	xorwf	___flsub@a& (0+255),f,b
  6686  006518  0E00               	movlw	0
  6687  00651A  1B9A               	xorwf	(___flsub@a+1)& (0+255),f,b
  6688  00651C  0E00               	movlw	0
  6689  00651E  1B9B               	xorwf	(___flsub@a+2)& (0+255),f,b
  6690  006520  0E80               	movlw	128
  6691  006522  1B9C               	xorwf	(___flsub@a+3)& (0+255),f,b
  6692                           
  6693                           ; BSR set to: 1
  6694  006524  C195  F0A9         	movff	___flsub@b,___fladd@b
  6695  006528  C196  F0AA         	movff	___flsub@b+1,___fladd@b+1
  6696  00652C  C197  F0AB         	movff	___flsub@b+2,___fladd@b+2
  6697  006530  C198  F0AC         	movff	___flsub@b+3,___fladd@b+3
  6698  006534  C199  F0AD         	movff	___flsub@a,___fladd@a
  6699  006538  C19A  F0AE         	movff	___flsub@a+1,___fladd@a+1
  6700  00653C  C19B  F0AF         	movff	___flsub@a+2,___fladd@a+2
  6701  006540  C19C  F0B0         	movff	___flsub@a+3,___fladd@a+3
  6702  006544  EC85  F018         	call	___fladd	;wreg free
  6703  006548  C0A9  F195         	movff	?___fladd,?___flsub
  6704  00654C  C0AA  F196         	movff	?___fladd+1,?___flsub+1
  6705  006550  C0AB  F197         	movff	?___fladd+2,?___flsub+2
  6706  006554  C0AC  F198         	movff	?___fladd+3,?___flsub+3
  6707  006558  0012               	return	
  6708  00655A                     __end_of___flsub:
  6709                           	opt stack 0
  6710                           tblptru	equ	0xFF8
  6711                           tblptrh	equ	0xFF7
  6712                           tblptrl	equ	0xFF6
  6713                           tablat	equ	0xFF5
  6714                           postinc0	equ	0xFEE
  6715                           wreg	equ	0xFE8
  6716                           postdec1	equ	0xFE5
  6717                           fsr1l	equ	0xFE1
  6718                           indf2	equ	0xFDF
  6719                           postinc2	equ	0xFDE
  6720                           postdec2	equ	0xFDD
  6721                           fsr2h	equ	0xFDA
  6722                           fsr2l	equ	0xFD9
  6723                           status	equ	0xFD8
  6724                           
  6725 ;; *************** function _asin *****************
  6726 ;; Defined at:
  6727 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\asin.c"
  6728 ;; Parameters:    Size  Location     Type
  6729 ;;  x               4  117[BANK0 ] long 
  6730 ;; Auto vars:     Size  Location     Type
  6731 ;;  y               4   33[BANK1 ] long 
  6732 ;;  sgn             4   21[BANK1 ] long 
  6733 ;; Return value:  Size  Location     Type
  6734 ;;                  4  117[BANK0 ] long 
  6735 ;; Registers used:
  6736 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6737 ;; Tracked objects:
  6738 ;;		On entry : 0/0
  6739 ;;		On exit  : 0/0
  6740 ;;		Unchanged: 0/0
  6741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6742 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6743 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  6744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6745 ;;      Totals:         0       4      20       0       0       0       0       0       0       0       0       0       
      +0       0
  6746 ;;Total ram usage:       24 bytes
  6747 ;; Hardware stack levels used:    1
  6748 ;; Hardware stack levels required when called:    7
  6749 ;; This function calls:
  6750 ;;		___fladd
  6751 ;;		___fldiv
  6752 ;;		___flge
  6753 ;;		___flmul
  6754 ;;		___flneg
  6755 ;;		_atan
  6756 ;;		_fabs
  6757 ;;		_sqrt
  6758 ;; This function is called by:
  6759 ;;		_parallelo
  6760 ;;		_matematica
  6761 ;; This function uses a non-reentrant model
  6762 ;;
  6763                           
  6764                           	psect	text16
  6765  004D10                     __ptext16:
  6766                           	opt stack 0
  6767  004D10                     _asin:
  6768                           	opt stack 21
  6769                           
  6770                           ;incstack = 0
  6771  004D10  0E00               	movlw	0
  6772  004D12  0100               	movlb	0	; () banked
  6773  004D14  6FC5               	movwf	___flge@ff1& (0+255),b
  6774  004D16  0E00               	movlw	0
  6775  004D18  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  6776  004D1A  0E80               	movlw	128
  6777  004D1C  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  6778  004D1E  0E3F               	movlw	63
  6779  004D20  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  6780  004D22  C0D5  F0C1         	movff	asin@x,fabs@d
  6781  004D26  C0D6  F0C2         	movff	asin@x+1,fabs@d+1
  6782  004D2A  C0D7  F0C3         	movff	asin@x+2,fabs@d+2
  6783  004D2E  C0D8  F0C4         	movff	asin@x+3,fabs@d+3
  6784  004D32  ECAD  F032         	call	_fabs	;wreg free
  6785  004D36  C0C1  F0C9         	movff	?_fabs,___flge@ff2
  6786  004D3A  C0C2  F0CA         	movff	?_fabs+1,___flge@ff2+1
  6787  004D3E  C0C3  F0CB         	movff	?_fabs+2,___flge@ff2+2
  6788  004D42  C0C4  F0CC         	movff	?_fabs+3,___flge@ff2+3
  6789  004D46  EC26  F02D         	call	___flge	;wreg free
  6790  004D4A  0100               	movlb	0	; () banked
  6791  004D4C  B0D8               	btfsc	status,0,c
  6792  004D4E  D00F               	goto	l7854
  6793                           
  6794                           ; BSR set to: 0
  6795  004D50  0E00               	movlw	0
  6796  004D52  0100               	movlb	0	; () banked
  6797  004D54  6FE5               	movwf	(_errno+1)& (0+255),b
  6798  004D56  0E21               	movlw	33
  6799  004D58  6FE4               	movwf	_errno& (0+255),b
  6800  004D5A  0E00               	movlw	0
  6801  004D5C  0100               	movlb	0	; () banked
  6802  004D5E  6FD5               	movwf	?_asin& (0+255),b
  6803  004D60  0E00               	movlw	0
  6804  004D62  6FD6               	movwf	(?_asin+1)& (0+255),b
  6805  004D64  0E00               	movlw	0
  6806  004D66  6FD7               	movwf	(?_asin+2)& (0+255),b
  6807  004D68  0E00               	movlw	0
  6808  004D6A  6FD8               	movwf	(?_asin+3)& (0+255),b
  6809                           
  6810                           ; BSR set to: 0
  6811  004D6C  0012               	return	
  6812  004D6E                     l7854:
  6813                           
  6814                           ; BSR set to: 0
  6815  004D6E  0E00               	movlw	0
  6816  004D70  0101               	movlb	1	; () banked
  6817  004D72  6FA0               	movwf	asin@sgn& (0+255),b
  6818  004D74  0E00               	movlw	0
  6819  004D76  6FA1               	movwf	(asin@sgn+1)& (0+255),b
  6820  004D78  0E80               	movlw	128
  6821  004D7A  6FA2               	movwf	(asin@sgn+2)& (0+255),b
  6822  004D7C  0E3F               	movlw	63
  6823  004D7E  6FA3               	movwf	(asin@sgn+3)& (0+255),b
  6824                           
  6825                           ; BSR set to: 1
  6826  004D80  C0D5  F094         	movff	asin@x,___flmul@a
  6827  004D84  C0D6  F095         	movff	asin@x+1,___flmul@a+1
  6828  004D88  C0D7  F096         	movff	asin@x+2,___flmul@a+2
  6829  004D8C  C0D8  F097         	movff	asin@x+3,___flmul@a+3
  6830  004D90  C0D5  F090         	movff	asin@x,___flmul@b
  6831  004D94  C0D6  F091         	movff	asin@x+1,___flmul@b+1
  6832  004D98  C0D7  F092         	movff	asin@x+2,___flmul@b+2
  6833  004D9C  C0D8  F093         	movff	asin@x+3,___flmul@b+3
  6834  004DA0  ECD9  F01A         	call	___flmul	;wreg free
  6835  004DA4  C090  F0BD         	movff	?___flmul,___flneg@f1
  6836  004DA8  C091  F0BE         	movff	?___flmul+1,___flneg@f1+1
  6837  004DAC  C092  F0BF         	movff	?___flmul+2,___flneg@f1+2
  6838  004DB0  C093  F0C0         	movff	?___flmul+3,___flneg@f1+3
  6839  004DB4  ECE9  F032         	call	___flneg	;wreg free
  6840  004DB8  C0BD  F0A9         	movff	?___flneg,___fladd@b
  6841  004DBC  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  6842  004DC0  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  6843  004DC4  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  6844  004DC8  0E00               	movlw	0
  6845  004DCA  0100               	movlb	0	; () banked
  6846  004DCC  6FAD               	movwf	___fladd@a& (0+255),b
  6847  004DCE  0E00               	movlw	0
  6848  004DD0  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  6849  004DD2  0E80               	movlw	128
  6850  004DD4  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  6851  004DD6  0E3F               	movlw	63
  6852  004DD8  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  6853  004DDA  EC85  F018         	call	___fladd	;wreg free
  6854  004DDE  C0A9  F0C1         	movff	?___fladd,sqrt@a
  6855  004DE2  C0AA  F0C2         	movff	?___fladd+1,sqrt@a+1
  6856  004DE6  C0AB  F0C3         	movff	?___fladd+2,sqrt@a+2
  6857  004DEA  C0AC  F0C4         	movff	?___fladd+3,sqrt@a+3
  6858  004DEE  EC68  F01F         	call	_sqrt	;wreg free
  6859  004DF2  C0C1  F1AC         	movff	?_sqrt,asin@y
  6860  004DF6  C0C2  F1AD         	movff	?_sqrt+1,asin@y+1
  6861  004DFA  C0C3  F1AE         	movff	?_sqrt+2,asin@y+2
  6862  004DFE  C0C4  F1AF         	movff	?_sqrt+3,asin@y+3
  6863  004E02  C0D5  F0C1         	movff	asin@x,fabs@d
  6864  004E06  C0D6  F0C2         	movff	asin@x+1,fabs@d+1
  6865  004E0A  C0D7  F0C3         	movff	asin@x+2,fabs@d+2
  6866  004E0E  C0D8  F0C4         	movff	asin@x+3,fabs@d+3
  6867  004E12  ECAD  F032         	call	_fabs	;wreg free
  6868  004E16  C0C1  F0C5         	movff	?_fabs,___flge@ff1
  6869  004E1A  C0C2  F0C6         	movff	?_fabs+1,___flge@ff1+1
  6870  004E1E  C0C3  F0C7         	movff	?_fabs+2,___flge@ff1+2
  6871  004E22  C0C4  F0C8         	movff	?_fabs+3,___flge@ff1+3
  6872  004E26  0E8F               	movlw	143
  6873  004E28  0100               	movlb	0	; () banked
  6874  004E2A  6FC9               	movwf	___flge@ff2& (0+255),b
  6875  004E2C  0EC2               	movlw	194
  6876  004E2E  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
  6877  004E30  0E35               	movlw	53
  6878  004E32  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
  6879  004E34  0E3F               	movlw	63
  6880  004E36  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
  6881  004E38  EC26  F02D         	call	___flge	;wreg free
  6882  004E3C  0100               	movlb	0	; () banked
  6883  004E3E  B0D8               	btfsc	status,0,c
  6884  004E40  D02D               	goto	l7866
  6885                           
  6886                           ; BSR set to: 0
  6887  004E42  C0D5  F077         	movff	asin@x,___fldiv@b
  6888  004E46  C0D6  F078         	movff	asin@x+1,___fldiv@b+1
  6889  004E4A  C0D7  F079         	movff	asin@x+2,___fldiv@b+2
  6890  004E4E  C0D8  F07A         	movff	asin@x+3,___fldiv@b+3
  6891  004E52  C1AC  F07B         	movff	asin@y,___fldiv@a
  6892  004E56  C1AD  F07C         	movff	asin@y+1,___fldiv@a+1
  6893  004E5A  C1AE  F07D         	movff	asin@y+2,___fldiv@a+2
  6894  004E5E  C1AF  F07E         	movff	asin@y+3,___fldiv@a+3
  6895  004E62  EC4D  F021         	call	___fldiv	;wreg free
  6896  004E66  C077  F1B0         	movff	?___fldiv,_asin$3753
  6897  004E6A  C078  F1B1         	movff	?___fldiv+1,_asin$3753+1
  6898  004E6E  C079  F1B2         	movff	?___fldiv+2,_asin$3753+2
  6899  004E72  C07A  F1B3         	movff	?___fldiv+3,_asin$3753+3
  6900  004E76  C1B0  F0D1         	movff	_asin$3753,atan@f
  6901  004E7A  C1B1  F0D2         	movff	_asin$3753+1,atan@f+1
  6902  004E7E  C1B2  F0D3         	movff	_asin$3753+2,atan@f+2
  6903  004E82  C1B3  F0D4         	movff	_asin$3753+3,atan@f+3
  6904  004E86  EC53  F029         	call	_atan	;wreg free
  6905  004E8A  C0D1  F0D5         	movff	?_atan,?_asin
  6906  004E8E  C0D2  F0D6         	movff	?_atan+1,?_asin+1
  6907  004E92  C0D3  F0D7         	movff	?_atan+2,?_asin+2
  6908  004E96  C0D4  F0D8         	movff	?_atan+3,?_asin+3
  6909  004E9A  0012               	return	
  6910  004E9C                     l7866:
  6911  004E9C  0100               	movlb	0	; () banked
  6912  004E9E  AFD8               	btfss	(asin@x+3)& (0+255),7,b
  6913  004EA0  D06E               	goto	l7878
  6914                           
  6915                           ; BSR set to: 0
  6916  004EA2  C0D5  F07B         	movff	asin@x,___fldiv@a
  6917  004EA6  C0D6  F07C         	movff	asin@x+1,___fldiv@a+1
  6918  004EAA  C0D7  F07D         	movff	asin@x+2,___fldiv@a+2
  6919  004EAE  C0D8  F07E         	movff	asin@x+3,___fldiv@a+3
  6920  004EB2  C1AC  F0BD         	movff	asin@y,___flneg@f1
  6921  004EB6  C1AD  F0BE         	movff	asin@y+1,___flneg@f1+1
  6922  004EBA  C1AE  F0BF         	movff	asin@y+2,___flneg@f1+2
  6923  004EBE  C1AF  F0C0         	movff	asin@y+3,___flneg@f1+3
  6924  004EC2  ECE9  F032         	call	___flneg	;wreg free
  6925  004EC6  C0BD  F077         	movff	?___flneg,___fldiv@b
  6926  004ECA  C0BE  F078         	movff	?___flneg+1,___fldiv@b+1
  6927  004ECE  C0BF  F079         	movff	?___flneg+2,___fldiv@b+2
  6928  004ED2  C0C0  F07A         	movff	?___flneg+3,___fldiv@b+3
  6929  004ED6  EC4D  F021         	call	___fldiv	;wreg free
  6930  004EDA  C077  F1B0         	movff	?___fldiv,_asin$3753
  6931  004EDE  C078  F1B1         	movff	?___fldiv+1,_asin$3753+1
  6932  004EE2  C079  F1B2         	movff	?___fldiv+2,_asin$3753+2
  6933  004EE6  C07A  F1B3         	movff	?___fldiv+3,_asin$3753+3
  6934  004EEA  C1B0  F0D1         	movff	_asin$3753,atan@f
  6935  004EEE  C1B1  F0D2         	movff	_asin$3753+1,atan@f+1
  6936  004EF2  C1B2  F0D3         	movff	_asin$3753+2,atan@f+2
  6937  004EF6  C1B3  F0D4         	movff	_asin$3753+3,atan@f+3
  6938  004EFA  EC53  F029         	call	_atan	;wreg free
  6939  004EFE  C0D1  F1A8         	movff	?_atan,_asin$3754
  6940  004F02  C0D2  F1A9         	movff	?_atan+1,_asin$3754+1
  6941  004F06  C0D3  F1AA         	movff	?_atan+2,_asin$3754+2
  6942  004F0A  C0D4  F1AB         	movff	?_atan+3,_asin$3754+3
  6943  004F0E  0EDB               	movlw	219
  6944  004F10  0100               	movlb	0	; () banked
  6945  004F12  6FAD               	movwf	___fladd@a& (0+255),b
  6946  004F14  0E0F               	movlw	15
  6947  004F16  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  6948  004F18  0EC9               	movlw	201
  6949  004F1A  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  6950  004F1C  0E3F               	movlw	63
  6951  004F1E  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  6952  004F20  C1A8  F0BD         	movff	_asin$3754,___flneg@f1
  6953  004F24  C1A9  F0BE         	movff	_asin$3754+1,___flneg@f1+1
  6954  004F28  C1AA  F0BF         	movff	_asin$3754+2,___flneg@f1+2
  6955  004F2C  C1AB  F0C0         	movff	_asin$3754+3,___flneg@f1+3
  6956  004F30  ECE9  F032         	call	___flneg	;wreg free
  6957  004F34  C0BD  F0A9         	movff	?___flneg,___fladd@b
  6958  004F38  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  6959  004F3C  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  6960  004F40  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  6961  004F44  EC85  F018         	call	___fladd	;wreg free
  6962  004F48  C0A9  F1A4         	movff	?___fladd,_asin$3755
  6963  004F4C  C0AA  F1A5         	movff	?___fladd+1,_asin$3755+1
  6964  004F50  C0AB  F1A6         	movff	?___fladd+2,_asin$3755+2
  6965  004F54  C0AC  F1A7         	movff	?___fladd+3,_asin$3755+3
  6966  004F58  C1A4  F0BD         	movff	_asin$3755,___flneg@f1
  6967  004F5C  C1A5  F0BE         	movff	_asin$3755+1,___flneg@f1+1
  6968  004F60  C1A6  F0BF         	movff	_asin$3755+2,___flneg@f1+2
  6969  004F64  C1A7  F0C0         	movff	_asin$3755+3,___flneg@f1+3
  6970  004F68  ECE9  F032         	call	___flneg	;wreg free
  6971  004F6C  C0BD  F0D5         	movff	?___flneg,?_asin
  6972  004F70  C0BE  F0D6         	movff	?___flneg+1,?_asin+1
  6973  004F74  C0BF  F0D7         	movff	?___flneg+2,?_asin+2
  6974  004F78  C0C0  F0D8         	movff	?___flneg+3,?_asin+3
  6975  004F7C  0012               	return	
  6976  004F7E                     l7878:
  6977  004F7E  C0D5  F07B         	movff	asin@x,___fldiv@a
  6978  004F82  C0D6  F07C         	movff	asin@x+1,___fldiv@a+1
  6979  004F86  C0D7  F07D         	movff	asin@x+2,___fldiv@a+2
  6980  004F8A  C0D8  F07E         	movff	asin@x+3,___fldiv@a+3
  6981  004F8E  C1AC  F077         	movff	asin@y,___fldiv@b
  6982  004F92  C1AD  F078         	movff	asin@y+1,___fldiv@b+1
  6983  004F96  C1AE  F079         	movff	asin@y+2,___fldiv@b+2
  6984  004F9A  C1AF  F07A         	movff	asin@y+3,___fldiv@b+3
  6985  004F9E  EC4D  F021         	call	___fldiv	;wreg free
  6986  004FA2  C077  F1B0         	movff	?___fldiv,_asin$3753
  6987  004FA6  C078  F1B1         	movff	?___fldiv+1,_asin$3753+1
  6988  004FAA  C079  F1B2         	movff	?___fldiv+2,_asin$3753+2
  6989  004FAE  C07A  F1B3         	movff	?___fldiv+3,_asin$3753+3
  6990  004FB2  C1B0  F0D1         	movff	_asin$3753,atan@f
  6991  004FB6  C1B1  F0D2         	movff	_asin$3753+1,atan@f+1
  6992  004FBA  C1B2  F0D3         	movff	_asin$3753+2,atan@f+2
  6993  004FBE  C1B3  F0D4         	movff	_asin$3753+3,atan@f+3
  6994  004FC2  EC53  F029         	call	_atan	;wreg free
  6995  004FC6  C0D1  F1A8         	movff	?_atan,_asin$3754
  6996  004FCA  C0D2  F1A9         	movff	?_atan+1,_asin$3754+1
  6997  004FCE  C0D3  F1AA         	movff	?_atan+2,_asin$3754+2
  6998  004FD2  C0D4  F1AB         	movff	?_atan+3,_asin$3754+3
  6999  004FD6  C1A8  F0BD         	movff	_asin$3754,___flneg@f1
  7000  004FDA  C1A9  F0BE         	movff	_asin$3754+1,___flneg@f1+1
  7001  004FDE  C1AA  F0BF         	movff	_asin$3754+2,___flneg@f1+2
  7002  004FE2  C1AB  F0C0         	movff	_asin$3754+3,___flneg@f1+3
  7003  004FE6  ECE9  F032         	call	___flneg	;wreg free
  7004  004FEA  C0BD  F0A9         	movff	?___flneg,___fladd@b
  7005  004FEE  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  7006  004FF2  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  7007  004FF6  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  7008  004FFA  0EDB               	movlw	219
  7009  004FFC  0100               	movlb	0	; () banked
  7010  004FFE  6FAD               	movwf	___fladd@a& (0+255),b
  7011  005000  0E0F               	movlw	15
  7012  005002  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  7013  005004  0EC9               	movlw	201
  7014  005006  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  7015  005008  0E3F               	movlw	63
  7016  00500A  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  7017  00500C  EC85  F018         	call	___fladd	;wreg free
  7018  005010  C0A9  F0D5         	movff	?___fladd,?_asin
  7019  005014  C0AA  F0D6         	movff	?___fladd+1,?_asin+1
  7020  005018  C0AB  F0D7         	movff	?___fladd+2,?_asin+2
  7021  00501C  C0AC  F0D8         	movff	?___fladd+3,?_asin+3
  7022  005020  0012               	return	
  7023  005022                     __end_of_asin:
  7024                           	opt stack 0
  7025                           tblptru	equ	0xFF8
  7026                           tblptrh	equ	0xFF7
  7027                           tblptrl	equ	0xFF6
  7028                           tablat	equ	0xFF5
  7029                           postinc0	equ	0xFEE
  7030                           wreg	equ	0xFE8
  7031                           postdec1	equ	0xFE5
  7032                           fsr1l	equ	0xFE1
  7033                           indf2	equ	0xFDF
  7034                           postinc2	equ	0xFDE
  7035                           postdec2	equ	0xFDD
  7036                           fsr2h	equ	0xFDA
  7037                           fsr2l	equ	0xFD9
  7038                           status	equ	0xFD8
  7039                           
  7040 ;; *************** function _sqrt *****************
  7041 ;; Defined at:
  7042 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcsqrt.c"
  7043 ;; Parameters:    Size  Location     Type
  7044 ;;  a               4   97[BANK0 ] long 
  7045 ;; Auto vars:     Size  Location     Type
  7046 ;;  frac            4   17[BANK1 ] unsigned long 
  7047 ;;  root            4   13[BANK1 ] struct .
  7048 ;;  grs             4    7[BANK1 ] unsigned long 
  7049 ;;  tfrac           4    2[BANK1 ] unsigned long 
  7050 ;;  exp             2   11[BANK1 ] int 
  7051 ;;  p               1    6[BANK1 ] unsigned char 
  7052 ;;  i               1    1[BANK1 ] unsigned char 
  7053 ;;  sign            1    0[BANK1 ] unsigned char 
  7054 ;; Return value:  Size  Location     Type
  7055 ;;                  4   97[BANK0 ] unsigned char 
  7056 ;; Registers used:
  7057 ;;		wreg, status,2, status,0
  7058 ;; Tracked objects:
  7059 ;;		On entry : 0/0
  7060 ;;		On exit  : 0/0
  7061 ;;		Unchanged: 0/0
  7062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7063 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7064 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
  7065 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7066 ;;      Totals:         0       8      21       0       0       0       0       0       0       0       0       0       
      +0       0
  7067 ;;Total ram usage:       29 bytes
  7068 ;; Hardware stack levels used:    1
  7069 ;; Hardware stack levels required when called:    4
  7070 ;; This function calls:
  7071 ;;		Nothing
  7072 ;; This function is called by:
  7073 ;;		_parallelo
  7074 ;;		_asin
  7075 ;; This function uses a non-reentrant model
  7076 ;;
  7077                           
  7078                           	psect	text17
  7079  003ED0                     __ptext17:
  7080                           	opt stack 0
  7081  003ED0                     _sqrt:
  7082                           	opt stack 24
  7083                           
  7084                           ;incstack = 0
  7085  003ED0  0100               	movlb	0	; () banked
  7086  003ED2  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  7087  003ED4  0B80               	andlw	128
  7088  003ED6  0101               	movlb	1	; () banked
  7089  003ED8  6F8B               	movwf	sqrt@sign& (0+255),b
  7090  003EDA  0100               	movlb	0	; () banked
  7091  003EDC  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  7092  003EDE  25C4               	addwf	(sqrt@a+3)& (0+255),w,b
  7093  003EE0  0101               	movlb	1	; () banked
  7094  003EE2  6F91               	movwf	sqrt@p& (0+255),b
  7095                           
  7096                           ; BSR set to: 1
  7097  003EE4  0100               	movlb	0	; () banked
  7098  003EE6  AFC3               	btfss	(sqrt@a+2)& (0+255),7,b
  7099  003EE8  D002               	goto	l7636
  7100                           
  7101                           ; BSR set to: 0
  7102  003EEA  0101               	movlb	1	; () banked
  7103  003EEC  8191               	bsf	sqrt@p& (0+255),0,b
  7104  003EEE                     l7636:
  7105  003EEE  C191  F196         	movff	sqrt@p,sqrt@exp
  7106  003EF2  0101               	movlb	1	; () banked
  7107  003EF4  6B97               	clrf	(sqrt@exp+1)& (0+255),b
  7108                           
  7109                           ; BSR set to: 1
  7110  003EF6  0EFF               	movlw	255
  7111  003EF8  0100               	movlb	0	; () banked
  7112  003EFA  15C1               	andwf	sqrt@a& (0+255),w,b
  7113  003EFC  0101               	movlb	1	; () banked
  7114  003EFE  6F9C               	movwf	sqrt@frac& (0+255),b
  7115  003F00  0EFF               	movlw	255
  7116  003F02  0100               	movlb	0	; () banked
  7117  003F04  15C2               	andwf	(sqrt@a+1)& (0+255),w,b
  7118  003F06  0101               	movlb	1	; () banked
  7119  003F08  6F9D               	movwf	(sqrt@frac+1)& (0+255),b
  7120  003F0A  0E7F               	movlw	127
  7121  003F0C  0100               	movlb	0	; () banked
  7122  003F0E  15C3               	andwf	(sqrt@a+2)& (0+255),w,b
  7123  003F10  0101               	movlb	1	; () banked
  7124  003F12  6F9E               	movwf	(sqrt@frac+2)& (0+255),b
  7125  003F14  0E00               	movlw	0
  7126  003F16  0100               	movlb	0	; () banked
  7127  003F18  15C4               	andwf	(sqrt@a+3)& (0+255),w,b
  7128  003F1A  0101               	movlb	1	; () banked
  7129  003F1C  6F9F               	movwf	(sqrt@frac+3)& (0+255),b
  7130                           
  7131                           ; BSR set to: 1
  7132  003F1E  0101               	movlb	1	; () banked
  7133  003F20  5196               	movf	sqrt@exp& (0+255),w,b
  7134  003F22  0101               	movlb	1	; () banked
  7135  003F24  1197               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7136  003F26  B4D8               	btfsc	status,2,c
  7137  003F28  D008               	goto	l7648
  7138                           
  7139                           ; BSR set to: 1
  7140  003F2A  0101               	movlb	1	; () banked
  7141  003F2C  8F9E               	bsf	(sqrt@frac+2)& (0+255),7,b
  7142                           
  7143                           ; BSR set to: 1
  7144  003F2E  0101               	movlb	1	; () banked
  7145  003F30  2996               	incf	sqrt@exp& (0+255),w,b
  7146  003F32  0101               	movlb	1	; () banked
  7147  003F34  1197               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7148  003F36  A4D8               	btfss	status,2,c
  7149  003F38  D009               	goto	l7650
  7150  003F3A                     l7648:
  7151                           
  7152                           ; BSR set to: 1
  7153  003F3A  0E00               	movlw	0
  7154  003F3C  0101               	movlb	1	; () banked
  7155  003F3E  6F9C               	movwf	sqrt@frac& (0+255),b
  7156  003F40  0E00               	movlw	0
  7157  003F42  6F9D               	movwf	(sqrt@frac+1)& (0+255),b
  7158  003F44  0E00               	movlw	0
  7159  003F46  6F9E               	movwf	(sqrt@frac+2)& (0+255),b
  7160  003F48  0E00               	movlw	0
  7161  003F4A  6F9F               	movwf	(sqrt@frac+3)& (0+255),b
  7162  003F4C                     l7650:
  7163                           
  7164                           ; BSR set to: 1
  7165  003F4C  0101               	movlb	1	; () banked
  7166  003F4E  5196               	movf	sqrt@exp& (0+255),w,b
  7167  003F50  0101               	movlb	1	; () banked
  7168  003F52  1197               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7169  003F54  A4D8               	btfss	status,2,c
  7170  003F56  D00A               	goto	l7656
  7171                           
  7172                           ; BSR set to: 1
  7173  003F58  0E00               	movlw	0
  7174  003F5A  0100               	movlb	0	; () banked
  7175  003F5C  6FC1               	movwf	?_sqrt& (0+255),b
  7176  003F5E  0E00               	movlw	0
  7177  003F60  6FC2               	movwf	(?_sqrt+1)& (0+255),b
  7178  003F62  0E00               	movlw	0
  7179  003F64  6FC3               	movwf	(?_sqrt+2)& (0+255),b
  7180  003F66  0E00               	movlw	0
  7181  003F68  6FC4               	movwf	(?_sqrt+3)& (0+255),b
  7182                           
  7183                           ; BSR set to: 0
  7184  003F6A  0012               	return	
  7185  003F6C                     l7656:
  7186  003F6C  0101               	movlb	1	; () banked
  7187  003F6E  518B               	movf	sqrt@sign& (0+255),w,b
  7188  003F70  0101               	movlb	1	; () banked
  7189  003F72  B4D8               	btfsc	status,2,c
  7190  003F74  D01C               	goto	l7668
  7191                           
  7192                           ; BSR set to: 1
  7193  003F76  0E00               	movlw	0
  7194  003F78  0101               	movlb	1	; () banked
  7195  003F7A  6F98               	movwf	sqrt@root& (0+255),b
  7196  003F7C  0E00               	movlw	0
  7197  003F7E  6F99               	movwf	(sqrt@root+1)& (0+255),b
  7198  003F80  0E40               	movlw	64
  7199  003F82  6F9A               	movwf	(sqrt@root+2)& (0+255),b
  7200  003F84  0E00               	movlw	0
  7201  003F86  6F9B               	movwf	(sqrt@root+3)& (0+255),b
  7202                           
  7203                           ; BSR set to: 1
  7204  003F88  0101               	movlb	1	; () banked
  7205  003F8A  0E80               	movlw	128
  7206  003F8C  139A               	iorwf	(sqrt@root+2)& (0+255),f,b
  7207  003F8E  0EFF               	movlw	255
  7208  003F90  139B               	iorwf	(sqrt@root+3)& (0+255),f,b
  7209                           
  7210                           ; BSR set to: 1
  7211  003F92  0E00               	movlw	0
  7212  003F94  0100               	movlb	0	; () banked
  7213  003F96  6FE5               	movwf	(_errno+1)& (0+255),b
  7214  003F98  0E21               	movlw	33
  7215  003F9A  6FE4               	movwf	_errno& (0+255),b
  7216                           
  7217                           ; BSR set to: 0
  7218  003F9C  C198  F0C1         	movff	sqrt@root,?_sqrt
  7219  003FA0  C199  F0C2         	movff	sqrt@root+1,?_sqrt+1
  7220  003FA4  C19A  F0C3         	movff	sqrt@root+2,?_sqrt+2
  7221  003FA8  C19B  F0C4         	movff	sqrt@root+3,?_sqrt+3
  7222                           
  7223                           ; BSR set to: 0
  7224  003FAC  0012               	return	
  7225  003FAE                     l7668:
  7226  003FAE  0101               	movlb	1	; () banked
  7227  003FB0  2996               	incf	sqrt@exp& (0+255),w,b
  7228  003FB2  0101               	movlb	1	; () banked
  7229  003FB4  1197               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7230  003FB6  A4D8               	btfss	status,2,c
  7231  003FB8  D012               	goto	l7676
  7232                           
  7233                           ; BSR set to: 1
  7234  003FBA  0E00               	movlw	0
  7235  003FBC  0101               	movlb	1	; () banked
  7236  003FBE  6F98               	movwf	sqrt@root& (0+255),b
  7237  003FC0  0E00               	movlw	0
  7238  003FC2  6F99               	movwf	(sqrt@root+1)& (0+255),b
  7239  003FC4  0E80               	movlw	128
  7240  003FC6  6F9A               	movwf	(sqrt@root+2)& (0+255),b
  7241  003FC8  0E7F               	movlw	127
  7242  003FCA  6F9B               	movwf	(sqrt@root+3)& (0+255),b
  7243                           
  7244                           ; BSR set to: 1
  7245  003FCC  C198  F0C1         	movff	sqrt@root,?_sqrt
  7246  003FD0  C199  F0C2         	movff	sqrt@root+1,?_sqrt+1
  7247  003FD4  C19A  F0C3         	movff	sqrt@root+2,?_sqrt+2
  7248  003FD8  C19B  F0C4         	movff	sqrt@root+3,?_sqrt+3
  7249                           
  7250                           ; BSR set to: 1
  7251  003FDC  0012               	return	
  7252  003FDE                     l7676:
  7253                           
  7254                           ; BSR set to: 1
  7255  003FDE  0101               	movlb	1	; () banked
  7256  003FE0  0E81               	movlw	129
  7257  003FE2  2796               	addwf	sqrt@exp& (0+255),f,b
  7258  003FE4  0EFF               	movlw	255
  7259  003FE6  2397               	addwfc	(sqrt@exp+1)& (0+255),f,b
  7260  003FE8  0101               	movlb	1	; () banked
  7261  003FEA  5196               	movf	sqrt@exp& (0+255),w,b
  7262  003FEC  0B01               	andlw	1
  7263  003FEE  0101               	movlb	1	; () banked
  7264  003FF0  6F91               	movwf	sqrt@p& (0+255),b
  7265  003FF2  0101               	movlb	1	; () banked
  7266  003FF4  3597               	rlcf	(sqrt@exp+1)& (0+255),w,b
  7267  003FF6  3397               	rrcf	(sqrt@exp+1)& (0+255),f,b
  7268  003FF8  3396               	rrcf	sqrt@exp& (0+255),f,b
  7269  003FFA  0E7F               	movlw	127
  7270  003FFC  0101               	movlb	1	; () banked
  7271  003FFE  2796               	addwf	sqrt@exp& (0+255),f,b
  7272  004000  0E00               	movlw	0
  7273  004002  2397               	addwfc	(sqrt@exp+1)& (0+255),f,b
  7274  004004  90D8               	bcf	status,0,c
  7275  004006  0101               	movlb	1	; () banked
  7276  004008  359C               	rlcf	sqrt@frac& (0+255),w,b
  7277  00400A  0101               	movlb	1	; () banked
  7278  00400C  6F8D               	movwf	sqrt@tfrac& (0+255),b
  7279  00400E  0101               	movlb	1	; () banked
  7280  004010  359D               	rlcf	(sqrt@frac+1)& (0+255),w,b
  7281  004012  0101               	movlb	1	; () banked
  7282  004014  6F8E               	movwf	(sqrt@tfrac+1)& (0+255),b
  7283  004016  0101               	movlb	1	; () banked
  7284  004018  359E               	rlcf	(sqrt@frac+2)& (0+255),w,b
  7285  00401A  0101               	movlb	1	; () banked
  7286  00401C  6F8F               	movwf	(sqrt@tfrac+2)& (0+255),b
  7287  00401E  0101               	movlb	1	; () banked
  7288  004020  359F               	rlcf	(sqrt@frac+3)& (0+255),w,b
  7289  004022  0101               	movlb	1	; () banked
  7290  004024  6F90               	movwf	(sqrt@tfrac+3)& (0+255),b
  7291                           
  7292                           ; BSR set to: 1
  7293  004026  0E00               	movlw	0
  7294  004028  0101               	movlb	1	; () banked
  7295  00402A  6F9C               	movwf	sqrt@frac& (0+255),b
  7296  00402C  0E00               	movlw	0
  7297  00402E  6F9D               	movwf	(sqrt@frac+1)& (0+255),b
  7298  004030  0E00               	movlw	0
  7299  004032  6F9E               	movwf	(sqrt@frac+2)& (0+255),b
  7300  004034  0E00               	movlw	0
  7301  004036  6F9F               	movwf	(sqrt@frac+3)& (0+255),b
  7302                           
  7303                           ; BSR set to: 1
  7304  004038  0E00               	movlw	0
  7305  00403A  0101               	movlb	1	; () banked
  7306  00403C  6F92               	movwf	sqrt@grs& (0+255),b
  7307  00403E  0E00               	movlw	0
  7308  004040  6F93               	movwf	(sqrt@grs+1)& (0+255),b
  7309  004042  0E00               	movlw	0
  7310  004044  6F94               	movwf	(sqrt@grs+2)& (0+255),b
  7311  004046  0E01               	movlw	1
  7312  004048  6F95               	movwf	(sqrt@grs+3)& (0+255),b
  7313                           
  7314                           ; BSR set to: 1
  7315  00404A  0101               	movlb	1	; () banked
  7316  00404C  5191               	movf	sqrt@p& (0+255),w,b
  7317  00404E  0101               	movlb	1	; () banked
  7318  004050  B4D8               	btfsc	status,2,c
  7319  004052  D006               	goto	l7686
  7320                           
  7321                           ; BSR set to: 1
  7322  004054  0101               	movlb	1	; () banked
  7323  004056  90D8               	bcf	status,0,c
  7324  004058  378D               	rlcf	sqrt@tfrac& (0+255),f,b
  7325  00405A  378E               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  7326  00405C  378F               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  7327  00405E  3790               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  7328  004060                     l7686:
  7329                           
  7330                           ; BSR set to: 1
  7331  004060  0E00               	movlw	0
  7332  004062  0101               	movlb	1	; () banked
  7333  004064  6F8C               	movwf	sqrt@i& (0+255),b
  7334  004066  D07E               	goto	l7700
  7335  004068                     l7688:
  7336                           
  7337                           ; BSR set to: 1
  7338  004068  0101               	movlb	1	; () banked
  7339  00406A  5192               	movf	sqrt@grs& (0+255),w,b
  7340  00406C  0101               	movlb	1	; () banked
  7341  00406E  139C               	iorwf	sqrt@frac& (0+255),f,b
  7342  004070  0101               	movlb	1	; () banked
  7343  004072  5193               	movf	(sqrt@grs+1)& (0+255),w,b
  7344  004074  0101               	movlb	1	; () banked
  7345  004076  139D               	iorwf	(sqrt@frac+1)& (0+255),f,b
  7346  004078  0101               	movlb	1	; () banked
  7347  00407A  5194               	movf	(sqrt@grs+2)& (0+255),w,b
  7348  00407C  0101               	movlb	1	; () banked
  7349  00407E  139E               	iorwf	(sqrt@frac+2)& (0+255),f,b
  7350  004080  0101               	movlb	1	; () banked
  7351  004082  5195               	movf	(sqrt@grs+3)& (0+255),w,b
  7352  004084  0101               	movlb	1	; () banked
  7353  004086  139F               	iorwf	(sqrt@frac+3)& (0+255),f,b
  7354  004088  0101               	movlb	1	; () banked
  7355  00408A  519C               	movf	sqrt@frac& (0+255),w,b
  7356  00408C  0101               	movlb	1	; () banked
  7357  00408E  5D8D               	subwf	sqrt@tfrac& (0+255),w,b
  7358  004090  0101               	movlb	1	; () banked
  7359  004092  519D               	movf	(sqrt@frac+1)& (0+255),w,b
  7360  004094  0101               	movlb	1	; () banked
  7361  004096  598E               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
  7362  004098  0101               	movlb	1	; () banked
  7363  00409A  519E               	movf	(sqrt@frac+2)& (0+255),w,b
  7364  00409C  0101               	movlb	1	; () banked
  7365  00409E  598F               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
  7366  0040A0  0101               	movlb	1	; () banked
  7367  0040A2  519F               	movf	(sqrt@frac+3)& (0+255),w,b
  7368  0040A4  0101               	movlb	1	; () banked
  7369  0040A6  5990               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
  7370  0040A8  A0D8               	btfss	status,0,c
  7371  0040AA  D021               	goto	l7692
  7372                           
  7373                           ; BSR set to: 1
  7374  0040AC  0101               	movlb	1	; () banked
  7375  0040AE  519C               	movf	sqrt@frac& (0+255),w,b
  7376  0040B0  0101               	movlb	1	; () banked
  7377  0040B2  5F8D               	subwf	sqrt@tfrac& (0+255),f,b
  7378  0040B4  0101               	movlb	1	; () banked
  7379  0040B6  519D               	movf	(sqrt@frac+1)& (0+255),w,b
  7380  0040B8  0101               	movlb	1	; () banked
  7381  0040BA  5B8E               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
  7382  0040BC  0101               	movlb	1	; () banked
  7383  0040BE  519E               	movf	(sqrt@frac+2)& (0+255),w,b
  7384  0040C0  0101               	movlb	1	; () banked
  7385  0040C2  5B8F               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
  7386  0040C4  0101               	movlb	1	; () banked
  7387  0040C6  519F               	movf	(sqrt@frac+3)& (0+255),w,b
  7388  0040C8  0101               	movlb	1	; () banked
  7389  0040CA  5B90               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
  7390  0040CC  0101               	movlb	1	; () banked
  7391  0040CE  5192               	movf	sqrt@grs& (0+255),w,b
  7392  0040D0  0101               	movlb	1	; () banked
  7393  0040D2  279C               	addwf	sqrt@frac& (0+255),f,b
  7394  0040D4  0101               	movlb	1	; () banked
  7395  0040D6  5193               	movf	(sqrt@grs+1)& (0+255),w,b
  7396  0040D8  0101               	movlb	1	; () banked
  7397  0040DA  239D               	addwfc	(sqrt@frac+1)& (0+255),f,b
  7398  0040DC  0101               	movlb	1	; () banked
  7399  0040DE  5194               	movf	(sqrt@grs+2)& (0+255),w,b
  7400  0040E0  0101               	movlb	1	; () banked
  7401  0040E2  239E               	addwfc	(sqrt@frac+2)& (0+255),f,b
  7402  0040E4  0101               	movlb	1	; () banked
  7403  0040E6  5195               	movf	(sqrt@grs+3)& (0+255),w,b
  7404  0040E8  0101               	movlb	1	; () banked
  7405  0040EA  239F               	addwfc	(sqrt@frac+3)& (0+255),f,b
  7406  0040EC  D01D               	goto	l7694
  7407  0040EE                     l7692:
  7408                           
  7409                           ; BSR set to: 1
  7410  0040EE  C192  F0C5         	movff	sqrt@grs,??_sqrt
  7411  0040F2  C193  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  7412  0040F6  C194  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  7413  0040FA  C195  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  7414  0040FE  0100               	movlb	0	; () banked
  7415  004100  1FC5               	comf	??_sqrt& (0+255),f,b
  7416  004102  1FC6               	comf	(??_sqrt+1)& (0+255),f,b
  7417  004104  1FC7               	comf	(??_sqrt+2)& (0+255),f,b
  7418  004106  1FC8               	comf	(??_sqrt+3)& (0+255),f,b
  7419  004108  0100               	movlb	0	; () banked
  7420  00410A  51C5               	movf	??_sqrt& (0+255),w,b
  7421  00410C  0101               	movlb	1	; () banked
  7422  00410E  179C               	andwf	sqrt@frac& (0+255),f,b
  7423  004110  0100               	movlb	0	; () banked
  7424  004112  51C6               	movf	(??_sqrt+1)& (0+255),w,b
  7425  004114  0101               	movlb	1	; () banked
  7426  004116  179D               	andwf	(sqrt@frac+1)& (0+255),f,b
  7427  004118  0100               	movlb	0	; () banked
  7428  00411A  51C7               	movf	(??_sqrt+2)& (0+255),w,b
  7429  00411C  0101               	movlb	1	; () banked
  7430  00411E  179E               	andwf	(sqrt@frac+2)& (0+255),f,b
  7431  004120  0100               	movlb	0	; () banked
  7432  004122  51C8               	movf	(??_sqrt+3)& (0+255),w,b
  7433  004124  0101               	movlb	1	; () banked
  7434  004126  179F               	andwf	(sqrt@frac+3)& (0+255),f,b
  7435  004128                     l7694:
  7436                           
  7437                           ; BSR set to: 1
  7438  004128  C192  F0C5         	movff	sqrt@grs,??_sqrt
  7439  00412C  C193  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  7440  004130  C194  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  7441  004134  C195  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  7442  004138  0100               	movlb	0	; () banked
  7443  00413A  90D8               	bcf	status,0,c
  7444  00413C  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7445  00413E  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7446  004140  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7447  004142  33C5               	rrcf	??_sqrt& (0+255),f,b
  7448  004144  C0C5  F192         	movff	??_sqrt,sqrt@grs
  7449  004148  C0C6  F193         	movff	??_sqrt+1,sqrt@grs+1
  7450  00414C  C0C7  F194         	movff	??_sqrt+2,sqrt@grs+2
  7451  004150  C0C8  F195         	movff	??_sqrt+3,sqrt@grs+3
  7452                           
  7453                           ; BSR set to: 0
  7454  004154  0101               	movlb	1	; () banked
  7455  004156  90D8               	bcf	status,0,c
  7456  004158  378D               	rlcf	sqrt@tfrac& (0+255),f,b
  7457  00415A  378E               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  7458  00415C  378F               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  7459  00415E  3790               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  7460                           
  7461                           ; BSR set to: 1
  7462  004160  0101               	movlb	1	; () banked
  7463  004162  2B8C               	incf	sqrt@i& (0+255),f,b
  7464  004164                     l7700:
  7465                           
  7466                           ; BSR set to: 1
  7467  004164  0E18               	movlw	24
  7468  004166  0101               	movlb	1	; () banked
  7469  004168  658C               	cpfsgt	sqrt@i& (0+255),b
  7470  00416A  D77E               	goto	l7688
  7471                           
  7472                           ; BSR set to: 1
  7473                           
  7474                           ; BSR set to: 1
  7475  00416C  C19C  F0C5         	movff	sqrt@frac,??_sqrt
  7476  004170  C19D  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7477  004174  C19E  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7478  004178  C19F  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7479  00417C  0100               	movlb	0	; () banked
  7480  00417E  90D8               	bcf	status,0,c
  7481  004180  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7482  004182  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7483  004184  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7484  004186  33C5               	rrcf	??_sqrt& (0+255),f,b
  7485  004188  C0C5  F19C         	movff	??_sqrt,sqrt@frac
  7486  00418C  C0C6  F19D         	movff	??_sqrt+1,sqrt@frac+1
  7487  004190  C0C7  F19E         	movff	??_sqrt+2,sqrt@frac+2
  7488  004194  C0C8  F19F         	movff	??_sqrt+3,sqrt@frac+3
  7489                           
  7490                           ; BSR set to: 0
  7491  004198  0E01               	movlw	1
  7492  00419A  0101               	movlb	1	; () banked
  7493  00419C  159C               	andwf	sqrt@frac& (0+255),w,b
  7494  00419E  0101               	movlb	1	; () banked
  7495  0041A0  6F92               	movwf	sqrt@grs& (0+255),b
  7496  0041A2  0E00               	movlw	0
  7497  0041A4  0101               	movlb	1	; () banked
  7498  0041A6  159D               	andwf	(sqrt@frac+1)& (0+255),w,b
  7499  0041A8  0101               	movlb	1	; () banked
  7500  0041AA  6F93               	movwf	(sqrt@grs+1)& (0+255),b
  7501  0041AC  0E00               	movlw	0
  7502  0041AE  0101               	movlb	1	; () banked
  7503  0041B0  159E               	andwf	(sqrt@frac+2)& (0+255),w,b
  7504  0041B2  0101               	movlb	1	; () banked
  7505  0041B4  6F94               	movwf	(sqrt@grs+2)& (0+255),b
  7506  0041B6  0E00               	movlw	0
  7507  0041B8  0101               	movlb	1	; () banked
  7508  0041BA  159F               	andwf	(sqrt@frac+3)& (0+255),w,b
  7509  0041BC  0101               	movlb	1	; () banked
  7510  0041BE  6F95               	movwf	(sqrt@grs+3)& (0+255),b
  7511                           
  7512                           ; BSR set to: 1
  7513  0041C0  C19C  F0C5         	movff	sqrt@frac,??_sqrt
  7514  0041C4  C19D  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7515  0041C8  C19E  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7516  0041CC  C19F  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7517  0041D0  0100               	movlb	0	; () banked
  7518  0041D2  90D8               	bcf	status,0,c
  7519  0041D4  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7520  0041D6  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7521  0041D8  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7522  0041DA  33C5               	rrcf	??_sqrt& (0+255),f,b
  7523  0041DC  C0C5  F19C         	movff	??_sqrt,sqrt@frac
  7524  0041E0  C0C6  F19D         	movff	??_sqrt+1,sqrt@frac+1
  7525  0041E4  C0C7  F19E         	movff	??_sqrt+2,sqrt@frac+2
  7526  0041E8  C0C8  F19F         	movff	??_sqrt+3,sqrt@frac+3
  7527  0041EC  0101               	movlb	1	; () banked
  7528  0041EE  5192               	movf	sqrt@grs& (0+255),w,b
  7529  0041F0  0101               	movlb	1	; () banked
  7530  0041F2  279C               	addwf	sqrt@frac& (0+255),f,b
  7531  0041F4  0101               	movlb	1	; () banked
  7532  0041F6  5193               	movf	(sqrt@grs+1)& (0+255),w,b
  7533  0041F8  0101               	movlb	1	; () banked
  7534  0041FA  239D               	addwfc	(sqrt@frac+1)& (0+255),f,b
  7535  0041FC  0101               	movlb	1	; () banked
  7536  0041FE  5194               	movf	(sqrt@grs+2)& (0+255),w,b
  7537  004200  0101               	movlb	1	; () banked
  7538  004202  239E               	addwfc	(sqrt@frac+2)& (0+255),f,b
  7539  004204  0101               	movlb	1	; () banked
  7540  004206  5195               	movf	(sqrt@grs+3)& (0+255),w,b
  7541  004208  0101               	movlb	1	; () banked
  7542  00420A  239F               	addwfc	(sqrt@frac+3)& (0+255),f,b
  7543                           
  7544                           ; BSR set to: 1
  7545  00420C  0101               	movlb	1	; () banked
  7546  00420E  A19F               	btfss	(sqrt@frac+3)& (0+255),0,b
  7547  004210  D019               	goto	l7712
  7548                           
  7549                           ; BSR set to: 1
  7550  004212  C19C  F0C5         	movff	sqrt@frac,??_sqrt
  7551  004216  C19D  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7552  00421A  C19E  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7553  00421E  C19F  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7554  004222  0100               	movlb	0	; () banked
  7555  004224  90D8               	bcf	status,0,c
  7556  004226  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7557  004228  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7558  00422A  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7559  00422C  33C5               	rrcf	??_sqrt& (0+255),f,b
  7560  00422E  C0C5  F19C         	movff	??_sqrt,sqrt@frac
  7561  004232  C0C6  F19D         	movff	??_sqrt+1,sqrt@frac+1
  7562  004236  C0C7  F19E         	movff	??_sqrt+2,sqrt@frac+2
  7563  00423A  C0C8  F19F         	movff	??_sqrt+3,sqrt@frac+3
  7564  00423E  0101               	movlb	1	; () banked
  7565  004240  4B96               	infsnz	sqrt@exp& (0+255),f,b
  7566  004242  2B97               	incf	(sqrt@exp+1)& (0+255),f,b
  7567  004244                     l7712:
  7568                           
  7569                           ; BSR set to: 1
  7570  004244  0EFF               	movlw	255
  7571  004246  0101               	movlb	1	; () banked
  7572  004248  159C               	andwf	sqrt@frac& (0+255),w,b
  7573  00424A  0101               	movlb	1	; () banked
  7574  00424C  6F98               	movwf	sqrt@root& (0+255),b
  7575  00424E  0EFF               	movlw	255
  7576  004250  0101               	movlb	1	; () banked
  7577  004252  159D               	andwf	(sqrt@frac+1)& (0+255),w,b
  7578  004254  0101               	movlb	1	; () banked
  7579  004256  6F99               	movwf	(sqrt@root+1)& (0+255),b
  7580  004258  0E7F               	movlw	127
  7581  00425A  0101               	movlb	1	; () banked
  7582  00425C  159E               	andwf	(sqrt@frac+2)& (0+255),w,b
  7583  00425E  0101               	movlb	1	; () banked
  7584  004260  6F9A               	movwf	(sqrt@root+2)& (0+255),b
  7585  004262  0E00               	movlw	0
  7586  004264  0101               	movlb	1	; () banked
  7587  004266  159F               	andwf	(sqrt@frac+3)& (0+255),w,b
  7588  004268  0101               	movlb	1	; () banked
  7589  00426A  6F9B               	movwf	(sqrt@root+3)& (0+255),b
  7590                           
  7591                           ; BSR set to: 1
  7592  00426C  C196  F191         	movff	sqrt@exp,sqrt@p
  7593                           
  7594                           ; BSR set to: 1
  7595  004270  0101               	movlb	1	; () banked
  7596  004272  A191               	btfss	sqrt@p& (0+255),0,b
  7597  004274  D002               	goto	l7720
  7598                           
  7599                           ; BSR set to: 1
  7600  004276  0101               	movlb	1	; () banked
  7601  004278  8F9A               	bsf	(sqrt@root+2)& (0+255),7,b
  7602  00427A                     l7720:
  7603                           
  7604                           ; BSR set to: 1
  7605  00427A  0101               	movlb	1	; () banked
  7606  00427C  90D8               	bcf	status,0,c
  7607  00427E  3191               	rrcf	sqrt@p& (0+255),w,b
  7608  004280  0101               	movlb	1	; () banked
  7609  004282  6F9B               	movwf	(sqrt@root+3)& (0+255),b
  7610                           
  7611                           ; BSR set to: 1
  7612  004284  0101               	movlb	1	; () banked
  7613  004286  9F9B               	bcf	(sqrt@root+3)& (0+255),7,b
  7614                           
  7615                           ; BSR set to: 1
  7616  004288  C198  F0C1         	movff	sqrt@root,?_sqrt
  7617  00428C  C199  F0C2         	movff	sqrt@root+1,?_sqrt+1
  7618  004290  C19A  F0C3         	movff	sqrt@root+2,?_sqrt+2
  7619  004294  C19B  F0C4         	movff	sqrt@root+3,?_sqrt+3
  7620  004298  0012               	return	
  7621  00429A                     __end_of_sqrt:
  7622                           	opt stack 0
  7623                           tblptru	equ	0xFF8
  7624                           tblptrh	equ	0xFF7
  7625                           tblptrl	equ	0xFF6
  7626                           tablat	equ	0xFF5
  7627                           postinc0	equ	0xFEE
  7628                           wreg	equ	0xFE8
  7629                           postdec1	equ	0xFE5
  7630                           fsr1l	equ	0xFE1
  7631                           indf2	equ	0xFDF
  7632                           postinc2	equ	0xFDE
  7633                           postdec2	equ	0xFDD
  7634                           fsr2h	equ	0xFDA
  7635                           fsr2l	equ	0xFD9
  7636                           status	equ	0xFD8
  7637                           
  7638 ;; *************** function _atan *****************
  7639 ;; Defined at:
  7640 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atan.c"
  7641 ;; Parameters:    Size  Location     Type
  7642 ;;  f               4  113[BANK0 ] unsigned char 
  7643 ;; Auto vars:     Size  Location     Type
  7644 ;;  val             4   13[BANK1 ] unsigned char 
  7645 ;;  val_squared     4    9[BANK1 ] unsigned char 
  7646 ;;  x               4    4[BANK1 ] unsigned char 
  7647 ;;  y               4    0[BANK1 ] unsigned char 
  7648 ;;  recip           1    8[BANK1 ] unsigned char 
  7649 ;; Return value:  Size  Location     Type
  7650 ;;                  4  113[BANK0 ] unsigned char 
  7651 ;; Registers used:
  7652 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7653 ;; Tracked objects:
  7654 ;;		On entry : 0/0
  7655 ;;		On exit  : 0/0
  7656 ;;		Unchanged: 0/0
  7657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7658 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7659 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  7660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7661 ;;      Totals:         0       4      17       0       0       0       0       0       0       0       0       0       
      +0       0
  7662 ;;Total ram usage:       21 bytes
  7663 ;; Hardware stack levels used:    1
  7664 ;; Hardware stack levels required when called:    6
  7665 ;; This function calls:
  7666 ;;		___fladd
  7667 ;;		___fldiv
  7668 ;;		___flge
  7669 ;;		___flmul
  7670 ;;		___flneg
  7671 ;;		_eval_poly
  7672 ;;		_fabs
  7673 ;; This function is called by:
  7674 ;;		_asin
  7675 ;; This function uses a non-reentrant model
  7676 ;;
  7677                           
  7678                           	psect	text18
  7679  0052A6                     __ptext18:
  7680                           	opt stack 0
  7681  0052A6                     _atan:
  7682                           	opt stack 21
  7683                           
  7684                           ;incstack = 0
  7685  0052A6  C0D1  F0C1         	movff	atan@f,fabs@d
  7686  0052AA  C0D2  F0C2         	movff	atan@f+1,fabs@d+1
  7687  0052AE  C0D3  F0C3         	movff	atan@f+2,fabs@d+2
  7688  0052B2  C0D4  F0C4         	movff	atan@f+3,fabs@d+3
  7689  0052B6  ECAD  F032         	call	_fabs	;wreg free
  7690  0052BA  C0C1  F198         	movff	?_fabs,atan@val
  7691  0052BE  C0C2  F199         	movff	?_fabs+1,atan@val+1
  7692  0052C2  C0C3  F19A         	movff	?_fabs+2,atan@val+2
  7693  0052C6  C0C4  F19B         	movff	?_fabs+3,atan@val+3
  7694  0052CA  0101               	movlb	1	; () banked
  7695  0052CC  5198               	movf	atan@val& (0+255),w,b
  7696  0052CE  0101               	movlb	1	; () banked
  7697  0052D0  1199               	iorwf	(atan@val+1)& (0+255),w,b
  7698  0052D2  0101               	movlb	1	; () banked
  7699  0052D4  119A               	iorwf	(atan@val+2)& (0+255),w,b
  7700  0052D6  0101               	movlb	1	; () banked
  7701  0052D8  119B               	iorwf	(atan@val+3)& (0+255),w,b
  7702  0052DA  A4D8               	btfss	status,2,c
  7703  0052DC  D00A               	goto	l7740
  7704                           
  7705                           ; BSR set to: 1
  7706  0052DE  0E00               	movlw	0
  7707  0052E0  0100               	movlb	0	; () banked
  7708  0052E2  6FD1               	movwf	?_atan& (0+255),b
  7709  0052E4  0E00               	movlw	0
  7710  0052E6  6FD2               	movwf	(?_atan+1)& (0+255),b
  7711  0052E8  0E00               	movlw	0
  7712  0052EA  6FD3               	movwf	(?_atan+2)& (0+255),b
  7713  0052EC  0E00               	movlw	0
  7714  0052EE  6FD4               	movwf	(?_atan+3)& (0+255),b
  7715                           
  7716                           ; BSR set to: 0
  7717  0052F0  0012               	return	
  7718  0052F2                     l7740:
  7719  0052F2  0E00               	movlw	0
  7720  0052F4  0100               	movlb	0	; () banked
  7721  0052F6  6FC5               	movwf	___flge@ff1& (0+255),b
  7722  0052F8  0E00               	movlw	0
  7723  0052FA  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  7724  0052FC  0E80               	movlw	128
  7725  0052FE  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  7726  005300  0E3F               	movlw	63
  7727  005302  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  7728  005304  C198  F0C9         	movff	atan@val,___flge@ff2
  7729  005308  C199  F0CA         	movff	atan@val+1,___flge@ff2+1
  7730  00530C  C19A  F0CB         	movff	atan@val+2,___flge@ff2+2
  7731  005310  C19B  F0CC         	movff	atan@val+3,___flge@ff2+3
  7732  005314  EC26  F02D         	call	___flge	;wreg free
  7733  005318  0100               	movlb	0	; () banked
  7734  00531A  B0D8               	btfsc	status,0,c
  7735  00531C  D002               	goto	u10250
  7736  00531E  0E01               	movlw	1
  7737  005320  D001               	goto	u10260
  7738  005322                     u10250:
  7739  005322  0E00               	movlw	0
  7740  005324                     u10260:
  7741  005324  0101               	movlb	1	; () banked
  7742  005326  6F93               	movwf	atan@recip& (0+255),b
  7743  005328  0101               	movlb	1	; () banked
  7744  00532A  5193               	movf	atan@recip& (0+255),w,b
  7745  00532C  B4D8               	btfsc	status,2,c
  7746  00532E  D01B               	goto	l7744
  7747                           
  7748                           ; BSR set to: 1
  7749  005330  0E00               	movlw	0
  7750  005332  0100               	movlb	0	; () banked
  7751  005334  6F77               	movwf	___fldiv@b& (0+255),b
  7752  005336  0E00               	movlw	0
  7753  005338  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  7754  00533A  0E80               	movlw	128
  7755  00533C  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  7756  00533E  0E3F               	movlw	63
  7757  005340  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  7758  005342  C198  F07B         	movff	atan@val,___fldiv@a
  7759  005346  C199  F07C         	movff	atan@val+1,___fldiv@a+1
  7760  00534A  C19A  F07D         	movff	atan@val+2,___fldiv@a+2
  7761  00534E  C19B  F07E         	movff	atan@val+3,___fldiv@a+3
  7762  005352  EC4D  F021         	call	___fldiv	;wreg free
  7763  005356  C077  F198         	movff	?___fldiv,atan@val
  7764  00535A  C078  F199         	movff	?___fldiv+1,atan@val+1
  7765  00535E  C079  F19A         	movff	?___fldiv+2,atan@val+2
  7766  005362  C07A  F19B         	movff	?___fldiv+3,atan@val+3
  7767  005366                     l7744:
  7768  005366  C198  F090         	movff	atan@val,___flmul@b
  7769  00536A  C199  F091         	movff	atan@val+1,___flmul@b+1
  7770  00536E  C19A  F092         	movff	atan@val+2,___flmul@b+2
  7771  005372  C19B  F093         	movff	atan@val+3,___flmul@b+3
  7772  005376  C198  F094         	movff	atan@val,___flmul@a
  7773  00537A  C199  F095         	movff	atan@val+1,___flmul@a+1
  7774  00537E  C19A  F096         	movff	atan@val+2,___flmul@a+2
  7775  005382  C19B  F097         	movff	atan@val+3,___flmul@a+3
  7776  005386  ECD9  F01A         	call	___flmul	;wreg free
  7777  00538A  C090  F194         	movff	?___flmul,atan@val_squared
  7778  00538E  C091  F195         	movff	?___flmul+1,atan@val_squared+1
  7779  005392  C092  F196         	movff	?___flmul+2,atan@val_squared+2
  7780  005396  C093  F197         	movff	?___flmul+3,atan@val_squared+3
  7781  00539A  C194  F0BD         	movff	atan@val_squared,eval_poly@x
  7782  00539E  C195  F0BE         	movff	atan@val_squared+1,eval_poly@x+1
  7783  0053A2  C196  F0BF         	movff	atan@val_squared+2,eval_poly@x+2
  7784  0053A6  C197  F0C0         	movff	atan@val_squared+3,eval_poly@x+3
  7785  0053AA  0E19               	movlw	low atan@coeff_b
  7786  0053AC  0100               	movlb	0	; () banked
  7787  0053AE  6FC1               	movwf	eval_poly@d& (0+255),b
  7788  0053B0  0E0D               	movlw	high atan@coeff_b
  7789  0053B2  0100               	movlb	0	; () banked
  7790  0053B4  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  7791  0053B6  0E00               	movlw	0
  7792  0053B8  0100               	movlb	0	; () banked
  7793  0053BA  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  7794  0053BC  0E04               	movlw	4
  7795  0053BE  6FC3               	movwf	eval_poly@n& (0+255),b
  7796  0053C0  EC1A  F02F         	call	_eval_poly	;wreg free
  7797  0053C4  C0BD  F18B         	movff	?_eval_poly,atan@y
  7798  0053C8  C0BE  F18C         	movff	?_eval_poly+1,atan@y+1
  7799  0053CC  C0BF  F18D         	movff	?_eval_poly+2,atan@y+2
  7800  0053D0  C0C0  F18E         	movff	?_eval_poly+3,atan@y+3
  7801  0053D4  C194  F0BD         	movff	atan@val_squared,eval_poly@x
  7802  0053D8  C195  F0BE         	movff	atan@val_squared+1,eval_poly@x+1
  7803  0053DC  C196  F0BF         	movff	atan@val_squared+2,eval_poly@x+2
  7804  0053E0  C197  F0C0         	movff	atan@val_squared+3,eval_poly@x+3
  7805  0053E4  0E01               	movlw	low atan@coeff_a
  7806  0053E6  0100               	movlb	0	; () banked
  7807  0053E8  6FC1               	movwf	eval_poly@d& (0+255),b
  7808  0053EA  0E0D               	movlw	high atan@coeff_a
  7809  0053EC  0100               	movlb	0	; () banked
  7810  0053EE  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  7811  0053F0  0E00               	movlw	0
  7812  0053F2  0100               	movlb	0	; () banked
  7813  0053F4  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  7814  0053F6  0E05               	movlw	5
  7815  0053F8  6FC3               	movwf	eval_poly@n& (0+255),b
  7816  0053FA  EC1A  F02F         	call	_eval_poly	;wreg free
  7817  0053FE  C0BD  F18F         	movff	?_eval_poly,atan@x
  7818  005402  C0BE  F190         	movff	?_eval_poly+1,atan@x+1
  7819  005406  C0BF  F191         	movff	?_eval_poly+2,atan@x+2
  7820  00540A  C0C0  F192         	movff	?_eval_poly+3,atan@x+3
  7821  00540E  C198  F090         	movff	atan@val,___flmul@b
  7822  005412  C199  F091         	movff	atan@val+1,___flmul@b+1
  7823  005416  C19A  F092         	movff	atan@val+2,___flmul@b+2
  7824  00541A  C19B  F093         	movff	atan@val+3,___flmul@b+3
  7825  00541E  C18B  F07B         	movff	atan@y,___fldiv@a
  7826  005422  C18C  F07C         	movff	atan@y+1,___fldiv@a+1
  7827  005426  C18D  F07D         	movff	atan@y+2,___fldiv@a+2
  7828  00542A  C18E  F07E         	movff	atan@y+3,___fldiv@a+3
  7829  00542E  C18F  F077         	movff	atan@x,___fldiv@b
  7830  005432  C190  F078         	movff	atan@x+1,___fldiv@b+1
  7831  005436  C191  F079         	movff	atan@x+2,___fldiv@b+2
  7832  00543A  C192  F07A         	movff	atan@x+3,___fldiv@b+3
  7833  00543E  EC4D  F021         	call	___fldiv	;wreg free
  7834  005442  C077  F094         	movff	?___fldiv,___flmul@a
  7835  005446  C078  F095         	movff	?___fldiv+1,___flmul@a+1
  7836  00544A  C079  F096         	movff	?___fldiv+2,___flmul@a+2
  7837  00544E  C07A  F097         	movff	?___fldiv+3,___flmul@a+3
  7838  005452  ECD9  F01A         	call	___flmul	;wreg free
  7839  005456  C090  F198         	movff	?___flmul,atan@val
  7840  00545A  C091  F199         	movff	?___flmul+1,atan@val+1
  7841  00545E  C092  F19A         	movff	?___flmul+2,atan@val+2
  7842  005462  C093  F19B         	movff	?___flmul+3,atan@val+3
  7843  005466  0101               	movlb	1	; () banked
  7844  005468  5193               	movf	atan@recip& (0+255),w,b
  7845  00546A  0101               	movlb	1	; () banked
  7846  00546C  B4D8               	btfsc	status,2,c
  7847  00546E  D025               	goto	l7756
  7848                           
  7849                           ; BSR set to: 1
  7850  005470  C198  F0BD         	movff	atan@val,___flneg@f1
  7851  005474  C199  F0BE         	movff	atan@val+1,___flneg@f1+1
  7852  005478  C19A  F0BF         	movff	atan@val+2,___flneg@f1+2
  7853  00547C  C19B  F0C0         	movff	atan@val+3,___flneg@f1+3
  7854  005480  ECE9  F032         	call	___flneg	;wreg free
  7855  005484  C0BD  F0A9         	movff	?___flneg,___fladd@b
  7856  005488  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  7857  00548C  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  7858  005490  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  7859  005494  0EDB               	movlw	219
  7860  005496  0100               	movlb	0	; () banked
  7861  005498  6FAD               	movwf	___fladd@a& (0+255),b
  7862  00549A  0E0F               	movlw	15
  7863  00549C  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  7864  00549E  0EC9               	movlw	201
  7865  0054A0  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  7866  0054A2  0E3F               	movlw	63
  7867  0054A4  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  7868  0054A6  EC85  F018         	call	___fladd	;wreg free
  7869  0054AA  C0A9  F198         	movff	?___fladd,atan@val
  7870  0054AE  C0AA  F199         	movff	?___fladd+1,atan@val+1
  7871  0054B2  C0AB  F19A         	movff	?___fladd+2,atan@val+2
  7872  0054B6  C0AC  F19B         	movff	?___fladd+3,atan@val+3
  7873  0054BA                     l7756:
  7874  0054BA  0100               	movlb	0	; () banked
  7875  0054BC  BFD4               	btfsc	(atan@f+3)& (0+255),7,b
  7876  0054BE  D009               	goto	l7760
  7877                           
  7878                           ; BSR set to: 0
  7879  0054C0  C198  F0D1         	movff	atan@val,?_atan
  7880  0054C4  C199  F0D2         	movff	atan@val+1,?_atan+1
  7881  0054C8  C19A  F0D3         	movff	atan@val+2,?_atan+2
  7882  0054CC  C19B  F0D4         	movff	atan@val+3,?_atan+3
  7883  0054D0  0012               	return	
  7884  0054D2                     l7760:
  7885                           
  7886                           ; BSR set to: 0
  7887  0054D2  C198  F0BD         	movff	atan@val,___flneg@f1
  7888  0054D6  C199  F0BE         	movff	atan@val+1,___flneg@f1+1
  7889  0054DA  C19A  F0BF         	movff	atan@val+2,___flneg@f1+2
  7890  0054DE  C19B  F0C0         	movff	atan@val+3,___flneg@f1+3
  7891  0054E2  ECE9  F032         	call	___flneg	;wreg free
  7892  0054E6  C0BD  F0D1         	movff	?___flneg,?_atan
  7893  0054EA  C0BE  F0D2         	movff	?___flneg+1,?_atan+1
  7894  0054EE  C0BF  F0D3         	movff	?___flneg+2,?_atan+2
  7895  0054F2  C0C0  F0D4         	movff	?___flneg+3,?_atan+3
  7896  0054F6  0012               	return	
  7897  0054F8                     __end_of_atan:
  7898                           	opt stack 0
  7899                           tblptru	equ	0xFF8
  7900                           tblptrh	equ	0xFF7
  7901                           tblptrl	equ	0xFF6
  7902                           tablat	equ	0xFF5
  7903                           postinc0	equ	0xFEE
  7904                           wreg	equ	0xFE8
  7905                           postdec1	equ	0xFE5
  7906                           fsr1l	equ	0xFE1
  7907                           indf2	equ	0xFDF
  7908                           postinc2	equ	0xFDE
  7909                           postdec2	equ	0xFDD
  7910                           fsr2h	equ	0xFDA
  7911                           fsr2l	equ	0xFD9
  7912                           status	equ	0xFD8
  7913                           
  7914 ;; *************** function _fabs *****************
  7915 ;; Defined at:
  7916 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fabs.c"
  7917 ;; Parameters:    Size  Location     Type
  7918 ;;  d               4   97[BANK0 ] unsigned char 
  7919 ;; Auto vars:     Size  Location     Type
  7920 ;;		None
  7921 ;; Return value:  Size  Location     Type
  7922 ;;                  4   97[BANK0 ] unsigned char 
  7923 ;; Registers used:
  7924 ;;		wreg, status,2, status,0, cstack
  7925 ;; Tracked objects:
  7926 ;;		On entry : 0/0
  7927 ;;		On exit  : 0/0
  7928 ;;		Unchanged: 0/0
  7929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7930 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7933 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7934 ;;Total ram usage:        4 bytes
  7935 ;; Hardware stack levels used:    1
  7936 ;; Hardware stack levels required when called:    5
  7937 ;; This function calls:
  7938 ;;		___flneg
  7939 ;; This function is called by:
  7940 ;;		_asin
  7941 ;;		_atan
  7942 ;; This function uses a non-reentrant model
  7943 ;;
  7944                           
  7945                           	psect	text19
  7946  00655A                     __ptext19:
  7947                           	opt stack 0
  7948  00655A                     _fabs:
  7949                           	opt stack 22
  7950                           
  7951                           ;incstack = 0
  7952  00655A  0100               	movlb	0	; () banked
  7953  00655C  AFC4               	btfss	(fabs@d+3)& (0+255),7,b
  7954  00655E  D013               	goto	l1096
  7955                           
  7956                           ; BSR set to: 0
  7957  006560  C0C1  F0BD         	movff	fabs@d,___flneg@f1
  7958  006564  C0C2  F0BE         	movff	fabs@d+1,___flneg@f1+1
  7959  006568  C0C3  F0BF         	movff	fabs@d+2,___flneg@f1+2
  7960  00656C  C0C4  F0C0         	movff	fabs@d+3,___flneg@f1+3
  7961  006570  ECE9  F032         	call	___flneg	;wreg free
  7962  006574  C0BD  F0C1         	movff	?___flneg,?_fabs
  7963  006578  C0BE  F0C2         	movff	?___flneg+1,?_fabs+1
  7964  00657C  C0BF  F0C3         	movff	?___flneg+2,?_fabs+2
  7965  006580  C0C0  F0C4         	movff	?___flneg+3,?_fabs+3
  7966  006584  0012               	return	
  7967  006586                     l1096:
  7968                           
  7969                           ; BSR set to: 0
  7970  006586  C0C1  F0C1         	movff	fabs@d,?_fabs
  7971  00658A  C0C2  F0C2         	movff	fabs@d+1,?_fabs+1
  7972  00658E  C0C3  F0C3         	movff	fabs@d+2,?_fabs+2
  7973  006592  C0C4  F0C4         	movff	fabs@d+3,?_fabs+3
  7974  006596  0012               	return		;funcret
  7975  006598                     __end_of_fabs:
  7976                           	opt stack 0
  7977                           tblptru	equ	0xFF8
  7978                           tblptrh	equ	0xFF7
  7979                           tblptrl	equ	0xFF6
  7980                           tablat	equ	0xFF5
  7981                           postinc0	equ	0xFEE
  7982                           wreg	equ	0xFE8
  7983                           postdec1	equ	0xFE5
  7984                           fsr1l	equ	0xFE1
  7985                           indf2	equ	0xFDF
  7986                           postinc2	equ	0xFDE
  7987                           postdec2	equ	0xFDD
  7988                           fsr2h	equ	0xFDA
  7989                           fsr2l	equ	0xFD9
  7990                           status	equ	0xFD8
  7991                           
  7992 ;; *************** function ___flneg *****************
  7993 ;; Defined at:
  7994 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  7995 ;; Parameters:    Size  Location     Type
  7996 ;;  f1              4   93[BANK0 ] unsigned char 
  7997 ;; Auto vars:     Size  Location     Type
  7998 ;;		None
  7999 ;; Return value:  Size  Location     Type
  8000 ;;                  4   93[BANK0 ] unsigned char 
  8001 ;; Registers used:
  8002 ;;		wreg, status,2, status,0
  8003 ;; Tracked objects:
  8004 ;;		On entry : 0/0
  8005 ;;		On exit  : 0/0
  8006 ;;		Unchanged: 0/0
  8007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8008 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8011 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8012 ;;Total ram usage:        4 bytes
  8013 ;; Hardware stack levels used:    1
  8014 ;; Hardware stack levels required when called:    4
  8015 ;; This function calls:
  8016 ;;		Nothing
  8017 ;; This function is called by:
  8018 ;;		_park_routine
  8019 ;;		_matematica
  8020 ;;		_asin
  8021 ;;		_atan
  8022 ;;		_fabs
  8023 ;;		_sin
  8024 ;; This function uses a non-reentrant model
  8025 ;;
  8026                           
  8027                           	psect	text20
  8028  0065D2                     __ptext20:
  8029                           	opt stack 0
  8030  0065D2                     ___flneg:
  8031                           	opt stack 22
  8032                           
  8033                           ;incstack = 0
  8034  0065D2  0100               	movlb	0	; () banked
  8035  0065D4  51BD               	movf	___flneg@f1& (0+255),w,b
  8036  0065D6  0100               	movlb	0	; () banked
  8037  0065D8  11BE               	iorwf	(___flneg@f1+1)& (0+255),w,b
  8038  0065DA  0100               	movlb	0	; () banked
  8039  0065DC  11BF               	iorwf	(___flneg@f1+2)& (0+255),w,b
  8040  0065DE  0100               	movlb	0	; () banked
  8041  0065E0  11C0               	iorwf	(___flneg@f1+3)& (0+255),w,b
  8042  0065E2  B4D8               	btfsc	status,2,c
  8043  0065E4  D009               	goto	l7104
  8044                           
  8045                           ; BSR set to: 0
  8046  0065E6  0E00               	movlw	0
  8047  0065E8  0100               	movlb	0	; () banked
  8048  0065EA  1BBD               	xorwf	___flneg@f1& (0+255),f,b
  8049  0065EC  0E00               	movlw	0
  8050  0065EE  1BBE               	xorwf	(___flneg@f1+1)& (0+255),f,b
  8051  0065F0  0E00               	movlw	0
  8052  0065F2  1BBF               	xorwf	(___flneg@f1+2)& (0+255),f,b
  8053  0065F4  0E80               	movlw	128
  8054  0065F6  1BC0               	xorwf	(___flneg@f1+3)& (0+255),f,b
  8055  0065F8                     l7104:
  8056                           
  8057                           ; BSR set to: 0
  8058  0065F8  C0BD  F0BD         	movff	___flneg@f1,?___flneg
  8059  0065FC  C0BE  F0BE         	movff	___flneg@f1+1,?___flneg+1
  8060  006600  C0BF  F0BF         	movff	___flneg@f1+2,?___flneg+2
  8061  006604  C0C0  F0C0         	movff	___flneg@f1+3,?___flneg+3
  8062  006608  0012               	return	
  8063  00660A                     __end_of___flneg:
  8064                           	opt stack 0
  8065                           tblptru	equ	0xFF8
  8066                           tblptrh	equ	0xFF7
  8067                           tblptrl	equ	0xFF6
  8068                           tablat	equ	0xFF5
  8069                           postinc0	equ	0xFEE
  8070                           wreg	equ	0xFE8
  8071                           postdec1	equ	0xFE5
  8072                           fsr1l	equ	0xFE1
  8073                           indf2	equ	0xFDF
  8074                           postinc2	equ	0xFDE
  8075                           postdec2	equ	0xFDD
  8076                           fsr2h	equ	0xFDA
  8077                           fsr2l	equ	0xFD9
  8078                           status	equ	0xFD8
  8079                           
  8080 ;; *************** function _eval_poly *****************
  8081 ;; Defined at:
  8082 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\evalpoly.c"
  8083 ;; Parameters:    Size  Location     Type
  8084 ;;  x               4   93[BANK0 ] unsigned char 
  8085 ;;  d               2   97[BANK0 ] PTR const 
  8086 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), atan@coeff_a(24), atan@coeff_b(20), 
  8087 ;;  n               2   99[BANK0 ] int 
  8088 ;; Auto vars:     Size  Location     Type
  8089 ;;  res             4  105[BANK0 ] int 
  8090 ;; Return value:  Size  Location     Type
  8091 ;;                  4   93[BANK0 ] int 
  8092 ;; Registers used:
  8093 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8094 ;; Tracked objects:
  8095 ;;		On entry : 0/0
  8096 ;;		On exit  : 0/0
  8097 ;;		Unchanged: 0/0
  8098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8099 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8100 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8101 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8102 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8103 ;;Total ram usage:       16 bytes
  8104 ;; Hardware stack levels used:    1
  8105 ;; Hardware stack levels required when called:    5
  8106 ;; This function calls:
  8107 ;;		___fladd
  8108 ;;		___flmul
  8109 ;; This function is called by:
  8110 ;;		_atan
  8111 ;;		_sin
  8112 ;; This function uses a non-reentrant model
  8113 ;;
  8114                           
  8115                           	psect	text21
  8116  005E34                     __ptext21:
  8117                           	opt stack 0
  8118  005E34                     _eval_poly:
  8119                           	opt stack 21
  8120                           
  8121                           ; BSR set to: 0
  8122                           ;incstack = 0
  8123  005E34  C0C3  F0C5         	movff	eval_poly@n,??_eval_poly
  8124  005E38  C0C4  F0C6         	movff	eval_poly@n+1,??_eval_poly+1
  8125  005E3C  0100               	movlb	0	; () banked
  8126  005E3E  90D8               	bcf	status,0,c
  8127  005E40  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8128  005E42  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8129  005E44  0100               	movlb	0	; () banked
  8130  005E46  90D8               	bcf	status,0,c
  8131  005E48  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8132  005E4A  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8133  005E4C  C0C1  F0C7         	movff	eval_poly@d,??_eval_poly+2
  8134  005E50  C0C2  F0C8         	movff	eval_poly@d+1,??_eval_poly+3
  8135  005E54  0100               	movlb	0	; () banked
  8136  005E56  51C5               	movf	??_eval_poly& (0+255),w,b
  8137  005E58  0100               	movlb	0	; () banked
  8138  005E5A  27C7               	addwf	(??_eval_poly+2)& (0+255),f,b
  8139  005E5C  0100               	movlb	0	; () banked
  8140  005E5E  51C6               	movf	(??_eval_poly+1)& (0+255),w,b
  8141  005E60  0100               	movlb	0	; () banked
  8142  005E62  23C8               	addwfc	(??_eval_poly+3)& (0+255),f,b
  8143  005E64  C0C7  FFF6         	movff	??_eval_poly+2,tblptrl
  8144  005E68  C0C8  FFF7         	movff	??_eval_poly+3,tblptrh
  8145  005E6C                     	if	0	;tblptru may be non-zero
  8146  005E6C                     	endif
  8147  005E6C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8148  005E6C  0E00               	movlw	low (__mediumconst shr (0+16))
  8149  005E6E  6EF8               	movwf	tblptru,c
  8150  005E70                     	endif
  8151  005E70  0009               	tblrd		*+
  8152  005E72  CFF5 F0C9          	movff	tablat,eval_poly@res
  8153  005E76  0009               	tblrd		*+
  8154  005E78  CFF5 F0CA          	movff	tablat,eval_poly@res+1
  8155  005E7C  0009               	tblrd		*+
  8156  005E7E  CFF5 F0CB          	movff	tablat,eval_poly@res+2
  8157  005E82  000A               	tblrd		*-
  8158  005E84  CFF5 F0CC          	movff	tablat,eval_poly@res+3
  8159  005E88  D052               	goto	l7362
  8160  005E8A                     l7360:
  8161                           
  8162                           ; BSR set to: 0
  8163  005E8A  C0C9  F094         	movff	eval_poly@res,___flmul@a
  8164  005E8E  C0CA  F095         	movff	eval_poly@res+1,___flmul@a+1
  8165  005E92  C0CB  F096         	movff	eval_poly@res+2,___flmul@a+2
  8166  005E96  C0CC  F097         	movff	eval_poly@res+3,___flmul@a+3
  8167  005E9A  C0BD  F090         	movff	eval_poly@x,___flmul@b
  8168  005E9E  C0BE  F091         	movff	eval_poly@x+1,___flmul@b+1
  8169  005EA2  C0BF  F092         	movff	eval_poly@x+2,___flmul@b+2
  8170  005EA6  C0C0  F093         	movff	eval_poly@x+3,___flmul@b+3
  8171  005EAA  ECD9  F01A         	call	___flmul	;wreg free
  8172  005EAE  C090  F0A9         	movff	?___flmul,___fladd@b
  8173  005EB2  C091  F0AA         	movff	?___flmul+1,___fladd@b+1
  8174  005EB6  C092  F0AB         	movff	?___flmul+2,___fladd@b+2
  8175  005EBA  C093  F0AC         	movff	?___flmul+3,___fladd@b+3
  8176  005EBE  0100               	movlb	0	; () banked
  8177  005EC0  07C3               	decf	eval_poly@n& (0+255),f,b
  8178  005EC2  A0D8               	btfss	status,0,c
  8179  005EC4  07C4               	decf	(eval_poly@n+1)& (0+255),f,b
  8180  005EC6  C0C3  F0C5         	movff	eval_poly@n,??_eval_poly
  8181  005ECA  C0C4  F0C6         	movff	eval_poly@n+1,??_eval_poly+1
  8182  005ECE  0100               	movlb	0	; () banked
  8183  005ED0  90D8               	bcf	status,0,c
  8184  005ED2  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8185  005ED4  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8186  005ED6  0100               	movlb	0	; () banked
  8187  005ED8  90D8               	bcf	status,0,c
  8188  005EDA  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8189  005EDC  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8190  005EDE  C0C1  F0C7         	movff	eval_poly@d,??_eval_poly+2
  8191  005EE2  C0C2  F0C8         	movff	eval_poly@d+1,??_eval_poly+3
  8192  005EE6  0100               	movlb	0	; () banked
  8193  005EE8  51C5               	movf	??_eval_poly& (0+255),w,b
  8194  005EEA  0100               	movlb	0	; () banked
  8195  005EEC  27C7               	addwf	(??_eval_poly+2)& (0+255),f,b
  8196  005EEE  0100               	movlb	0	; () banked
  8197  005EF0  51C6               	movf	(??_eval_poly+1)& (0+255),w,b
  8198  005EF2  0100               	movlb	0	; () banked
  8199  005EF4  23C8               	addwfc	(??_eval_poly+3)& (0+255),f,b
  8200  005EF6  C0C7  FFF6         	movff	??_eval_poly+2,tblptrl
  8201  005EFA  C0C8  FFF7         	movff	??_eval_poly+3,tblptrh
  8202  005EFE                     	if	0	;tblptru may be non-zero
  8203  005EFE                     	endif
  8204  005EFE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8205  005EFE  0E00               	movlw	low (__mediumconst shr (0+16))
  8206  005F00  6EF8               	movwf	tblptru,c
  8207  005F02                     	endif
  8208  005F02  0009               	tblrd		*+
  8209  005F04  CFF5 F0AD          	movff	tablat,___fladd@a
  8210  005F08  0009               	tblrd		*+
  8211  005F0A  CFF5 F0AE          	movff	tablat,___fladd@a+1
  8212  005F0E  0009               	tblrd		*+
  8213  005F10  CFF5 F0AF          	movff	tablat,___fladd@a+2
  8214  005F14  000A               	tblrd		*-
  8215  005F16  CFF5 F0B0          	movff	tablat,___fladd@a+3
  8216  005F1A  EC85  F018         	call	___fladd	;wreg free
  8217  005F1E  C0A9  F0C9         	movff	?___fladd,eval_poly@res
  8218  005F22  C0AA  F0CA         	movff	?___fladd+1,eval_poly@res+1
  8219  005F26  C0AB  F0CB         	movff	?___fladd+2,eval_poly@res+2
  8220  005F2A  C0AC  F0CC         	movff	?___fladd+3,eval_poly@res+3
  8221  005F2E                     l7362:
  8222  005F2E  0100               	movlb	0	; () banked
  8223  005F30  51C3               	movf	eval_poly@n& (0+255),w,b
  8224  005F32  0100               	movlb	0	; () banked
  8225  005F34  11C4               	iorwf	(eval_poly@n+1)& (0+255),w,b
  8226  005F36  A4D8               	btfss	status,2,c
  8227  005F38  D7A8               	goto	l7360
  8228                           
  8229                           ; BSR set to: 0
  8230  005F3A  C0C9  F0BD         	movff	eval_poly@res,?_eval_poly
  8231  005F3E  C0CA  F0BE         	movff	eval_poly@res+1,?_eval_poly+1
  8232  005F42  C0CB  F0BF         	movff	eval_poly@res+2,?_eval_poly+2
  8233  005F46  C0CC  F0C0         	movff	eval_poly@res+3,?_eval_poly+3
  8234                           
  8235                           ; BSR set to: 0
  8236  005F4A  0012               	return		;funcret
  8237  005F4C                     __end_of_eval_poly:
  8238                           	opt stack 0
  8239                           tblptru	equ	0xFF8
  8240                           tblptrh	equ	0xFF7
  8241                           tblptrl	equ	0xFF6
  8242                           tablat	equ	0xFF5
  8243                           postinc0	equ	0xFEE
  8244                           wreg	equ	0xFE8
  8245                           postdec1	equ	0xFE5
  8246                           fsr1l	equ	0xFE1
  8247                           indf2	equ	0xFDF
  8248                           postinc2	equ	0xFDE
  8249                           postdec2	equ	0xFDD
  8250                           fsr2h	equ	0xFDA
  8251                           fsr2l	equ	0xFD9
  8252                           status	equ	0xFD8
  8253                           
  8254 ;; *************** function ___flmul *****************
  8255 ;; Defined at:
  8256 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  8257 ;; Parameters:    Size  Location     Type
  8258 ;;  b               4   48[BANK0 ] int 
  8259 ;;  a               4   52[BANK0 ] int 
  8260 ;; Auto vars:     Size  Location     Type
  8261 ;;  prod            4   67[BANK0 ] struct .
  8262 ;;  grs             4   62[BANK0 ] unsigned long 
  8263 ;;  temp            2   71[BANK0 ] struct .
  8264 ;;  bexp            1   66[BANK0 ] unsigned char 
  8265 ;;  aexp            1   61[BANK0 ] unsigned char 
  8266 ;;  sign            1   60[BANK0 ] unsigned char 
  8267 ;; Return value:  Size  Location     Type
  8268 ;;                  4   48[BANK0 ] unsigned char 
  8269 ;; Registers used:
  8270 ;;		wreg, status,2, status,0, prodl, prodh
  8271 ;; Tracked objects:
  8272 ;;		On entry : 0/0
  8273 ;;		On exit  : 0/0
  8274 ;;		Unchanged: 0/0
  8275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8276 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8277 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8278 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8279 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8280 ;;Total ram usage:       25 bytes
  8281 ;; Hardware stack levels used:    1
  8282 ;; Hardware stack levels required when called:    4
  8283 ;; This function calls:
  8284 ;;		Nothing
  8285 ;; This function is called by:
  8286 ;;		_parallelo
  8287 ;;		_matematica
  8288 ;;		_asin
  8289 ;;		_atan
  8290 ;;		_eval_poly
  8291 ;;		_sin
  8292 ;; This function uses a non-reentrant model
  8293 ;;
  8294                           
  8295                           	psect	text22
  8296  0035B2                     __ptext22:
  8297                           	opt stack 0
  8298  0035B2                     ___flmul:
  8299                           	opt stack 21
  8300                           
  8301                           ; BSR set to: 0
  8302                           ;incstack = 0
  8303  0035B2  0100               	movlb	0	; () banked
  8304  0035B4  5193               	movf	(___flmul@b+3)& (0+255),w,b
  8305  0035B6  0B80               	andlw	128
  8306  0035B8  0100               	movlb	0	; () banked
  8307  0035BA  6F9C               	movwf	___flmul@sign& (0+255),b
  8308  0035BC  0100               	movlb	0	; () banked
  8309  0035BE  5193               	movf	(___flmul@b+3)& (0+255),w,b
  8310  0035C0  2593               	addwf	(___flmul@b+3)& (0+255),w,b
  8311  0035C2  0100               	movlb	0	; () banked
  8312  0035C4  6FA2               	movwf	___flmul@bexp& (0+255),b
  8313                           
  8314                           ; BSR set to: 0
  8315  0035C6  0100               	movlb	0	; () banked
  8316  0035C8  AF92               	btfss	(___flmul@b+2)& (0+255),7,b
  8317  0035CA  D002               	goto	l6954
  8318                           
  8319                           ; BSR set to: 0
  8320  0035CC  0100               	movlb	0	; () banked
  8321  0035CE  81A2               	bsf	___flmul@bexp& (0+255),0,b
  8322  0035D0                     l6954:
  8323                           
  8324                           ; BSR set to: 0
  8325  0035D0  0100               	movlb	0	; () banked
  8326  0035D2  51A2               	movf	___flmul@bexp& (0+255),w,b
  8327  0035D4  0100               	movlb	0	; () banked
  8328  0035D6  B4D8               	btfsc	status,2,c
  8329  0035D8  D010               	goto	l6962
  8330                           
  8331                           ; BSR set to: 0
  8332  0035DA  0100               	movlb	0	; () banked
  8333  0035DC  29A2               	incf	___flmul@bexp& (0+255),w,b
  8334  0035DE  A4D8               	btfss	status,2,c
  8335  0035E0  D009               	goto	l6960
  8336                           
  8337                           ; BSR set to: 0
  8338  0035E2  0E00               	movlw	0
  8339  0035E4  0100               	movlb	0	; () banked
  8340  0035E6  6F90               	movwf	___flmul@b& (0+255),b
  8341  0035E8  0E00               	movlw	0
  8342  0035EA  6F91               	movwf	(___flmul@b+1)& (0+255),b
  8343  0035EC  0E00               	movlw	0
  8344  0035EE  6F92               	movwf	(___flmul@b+2)& (0+255),b
  8345  0035F0  0E00               	movlw	0
  8346  0035F2  6F93               	movwf	(___flmul@b+3)& (0+255),b
  8347  0035F4                     l6960:
  8348                           
  8349                           ; BSR set to: 0
  8350  0035F4  0100               	movlb	0	; () banked
  8351  0035F6  8F92               	bsf	(___flmul@b+2)& (0+255),7,b
  8352  0035F8  D009               	goto	l6964
  8353  0035FA                     l6962:
  8354                           
  8355                           ; BSR set to: 0
  8356  0035FA  0E00               	movlw	0
  8357  0035FC  0100               	movlb	0	; () banked
  8358  0035FE  6F90               	movwf	___flmul@b& (0+255),b
  8359  003600  0E00               	movlw	0
  8360  003602  6F91               	movwf	(___flmul@b+1)& (0+255),b
  8361  003604  0E00               	movlw	0
  8362  003606  6F92               	movwf	(___flmul@b+2)& (0+255),b
  8363  003608  0E00               	movlw	0
  8364  00360A  6F93               	movwf	(___flmul@b+3)& (0+255),b
  8365  00360C                     l6964:
  8366                           
  8367                           ; BSR set to: 0
  8368  00360C  0100               	movlb	0	; () banked
  8369  00360E  5197               	movf	(___flmul@a+3)& (0+255),w,b
  8370  003610  0B80               	andlw	128
  8371  003612  0100               	movlb	0	; () banked
  8372  003614  1B9C               	xorwf	___flmul@sign& (0+255),f,b
  8373                           
  8374                           ; BSR set to: 0
  8375  003616  0100               	movlb	0	; () banked
  8376  003618  5197               	movf	(___flmul@a+3)& (0+255),w,b
  8377  00361A  2597               	addwf	(___flmul@a+3)& (0+255),w,b
  8378  00361C  0100               	movlb	0	; () banked
  8379  00361E  6F9D               	movwf	___flmul@aexp& (0+255),b
  8380                           
  8381                           ; BSR set to: 0
  8382  003620  0100               	movlb	0	; () banked
  8383  003622  AF96               	btfss	(___flmul@a+2)& (0+255),7,b
  8384  003624  D002               	goto	l6972
  8385                           
  8386                           ; BSR set to: 0
  8387  003626  0100               	movlb	0	; () banked
  8388  003628  819D               	bsf	___flmul@aexp& (0+255),0,b
  8389  00362A                     l6972:
  8390                           
  8391                           ; BSR set to: 0
  8392  00362A  0100               	movlb	0	; () banked
  8393  00362C  519D               	movf	___flmul@aexp& (0+255),w,b
  8394  00362E  0100               	movlb	0	; () banked
  8395  003630  B4D8               	btfsc	status,2,c
  8396  003632  D010               	goto	l6980
  8397                           
  8398                           ; BSR set to: 0
  8399  003634  0100               	movlb	0	; () banked
  8400  003636  299D               	incf	___flmul@aexp& (0+255),w,b
  8401  003638  A4D8               	btfss	status,2,c
  8402  00363A  D009               	goto	l6978
  8403                           
  8404                           ; BSR set to: 0
  8405  00363C  0E00               	movlw	0
  8406  00363E  0100               	movlb	0	; () banked
  8407  003640  6F94               	movwf	___flmul@a& (0+255),b
  8408  003642  0E00               	movlw	0
  8409  003644  6F95               	movwf	(___flmul@a+1)& (0+255),b
  8410  003646  0E00               	movlw	0
  8411  003648  6F96               	movwf	(___flmul@a+2)& (0+255),b
  8412  00364A  0E00               	movlw	0
  8413  00364C  6F97               	movwf	(___flmul@a+3)& (0+255),b
  8414  00364E                     l6978:
  8415                           
  8416                           ; BSR set to: 0
  8417  00364E  0100               	movlb	0	; () banked
  8418  003650  8F96               	bsf	(___flmul@a+2)& (0+255),7,b
  8419  003652  D009               	goto	l1441
  8420  003654                     l6980:
  8421                           
  8422                           ; BSR set to: 0
  8423  003654  0E00               	movlw	0
  8424  003656  0100               	movlb	0	; () banked
  8425  003658  6F94               	movwf	___flmul@a& (0+255),b
  8426  00365A  0E00               	movlw	0
  8427  00365C  6F95               	movwf	(___flmul@a+1)& (0+255),b
  8428  00365E  0E00               	movlw	0
  8429  003660  6F96               	movwf	(___flmul@a+2)& (0+255),b
  8430  003662  0E00               	movlw	0
  8431  003664  6F97               	movwf	(___flmul@a+3)& (0+255),b
  8432  003666                     l1441:
  8433                           
  8434                           ; BSR set to: 0
  8435  003666  0100               	movlb	0	; () banked
  8436  003668  519D               	movf	___flmul@aexp& (0+255),w,b
  8437  00366A  0100               	movlb	0	; () banked
  8438  00366C  B4D8               	btfsc	status,2,c
  8439  00366E  D005               	goto	l6984
  8440                           
  8441                           ; BSR set to: 0
  8442  003670  0100               	movlb	0	; () banked
  8443  003672  51A2               	movf	___flmul@bexp& (0+255),w,b
  8444  003674  0100               	movlb	0	; () banked
  8445  003676  A4D8               	btfss	status,2,c
  8446  003678  D00A               	goto	l6988
  8447  00367A                     l6984:
  8448                           
  8449                           ; BSR set to: 0
  8450  00367A  0E00               	movlw	0
  8451  00367C  0100               	movlb	0	; () banked
  8452  00367E  6F90               	movwf	?___flmul& (0+255),b
  8453  003680  0E00               	movlw	0
  8454  003682  6F91               	movwf	(?___flmul+1)& (0+255),b
  8455  003684  0E00               	movlw	0
  8456  003686  6F92               	movwf	(?___flmul+2)& (0+255),b
  8457  003688  0E00               	movlw	0
  8458  00368A  6F93               	movwf	(?___flmul+3)& (0+255),b
  8459                           
  8460                           ; BSR set to: 0
  8461  00368C  0012               	return	
  8462  00368E                     l6988:
  8463                           
  8464                           ; BSR set to: 0
  8465  00368E  0100               	movlb	0	; () banked
  8466  003690  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8467  003692  0100               	movlb	0	; () banked
  8468  003694  0390               	mulwf	___flmul@b& (0+255),b
  8469  003696  CFF3 F0A7          	movff	prodl,___flmul@temp
  8470  00369A  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8471                           
  8472                           ; BSR set to: 0
  8473  00369E  0100               	movlb	0	; () banked
  8474  0036A0  51A7               	movf	___flmul@temp& (0+255),w,b
  8475  0036A2  0100               	movlb	0	; () banked
  8476  0036A4  6F9E               	movwf	___flmul@grs& (0+255),b
  8477  0036A6  6B9F               	clrf	(___flmul@grs+1)& (0+255),b
  8478  0036A8  6BA0               	clrf	(___flmul@grs+2)& (0+255),b
  8479  0036AA  6BA1               	clrf	(___flmul@grs+3)& (0+255),b
  8480                           
  8481                           ; BSR set to: 0
  8482  0036AC  0100               	movlb	0	; () banked
  8483  0036AE  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8484  0036B0  0100               	movlb	0	; () banked
  8485  0036B2  6FA3               	movwf	___flmul@prod& (0+255),b
  8486  0036B4  6BA4               	clrf	(___flmul@prod+1)& (0+255),b
  8487  0036B6  6BA5               	clrf	(___flmul@prod+2)& (0+255),b
  8488  0036B8  6BA6               	clrf	(___flmul@prod+3)& (0+255),b
  8489  0036BA  0100               	movlb	0	; () banked
  8490  0036BC  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8491  0036BE  0100               	movlb	0	; () banked
  8492  0036C0  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8493  0036C2  CFF3 F0A7          	movff	prodl,___flmul@temp
  8494  0036C6  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8495                           
  8496                           ; BSR set to: 0
  8497  0036CA  0100               	movlb	0	; () banked
  8498  0036CC  51A7               	movf	___flmul@temp& (0+255),w,b
  8499  0036CE  0100               	movlb	0	; () banked
  8500  0036D0  279E               	addwf	___flmul@grs& (0+255),f,b
  8501  0036D2  0E00               	movlw	0
  8502  0036D4  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8503  0036D6  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8504  0036D8  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8505                           
  8506                           ; BSR set to: 0
  8507  0036DA  0100               	movlb	0	; () banked
  8508  0036DC  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8509  0036DE  0100               	movlb	0	; () banked
  8510  0036E0  27A3               	addwf	___flmul@prod& (0+255),f,b
  8511  0036E2  0E00               	movlw	0
  8512  0036E4  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8513  0036E6  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8514  0036E8  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8515  0036EA  0100               	movlb	0	; () banked
  8516  0036EC  5194               	movf	___flmul@a& (0+255),w,b
  8517  0036EE  0100               	movlb	0	; () banked
  8518  0036F0  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8519  0036F2  CFF3 F0A7          	movff	prodl,___flmul@temp
  8520  0036F6  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8521                           
  8522                           ; BSR set to: 0
  8523  0036FA  0100               	movlb	0	; () banked
  8524  0036FC  51A7               	movf	___flmul@temp& (0+255),w,b
  8525  0036FE  0100               	movlb	0	; () banked
  8526  003700  279E               	addwf	___flmul@grs& (0+255),f,b
  8527  003702  0E00               	movlw	0
  8528  003704  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8529  003706  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8530  003708  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8531                           
  8532                           ; BSR set to: 0
  8533  00370A  0100               	movlb	0	; () banked
  8534  00370C  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8535  00370E  0100               	movlb	0	; () banked
  8536  003710  27A3               	addwf	___flmul@prod& (0+255),f,b
  8537  003712  0E00               	movlw	0
  8538  003714  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8539  003716  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8540  003718  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8541                           
  8542                           ; BSR set to: 0
  8543  00371A  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8544  00371E  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8545  003722  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8546  003726  0100               	movlb	0	; () banked
  8547  003728  6B9E               	clrf	___flmul@grs& (0+255),b
  8548                           
  8549                           ; BSR set to: 0
  8550  00372A  0100               	movlb	0	; () banked
  8551  00372C  5194               	movf	___flmul@a& (0+255),w,b
  8552  00372E  0100               	movlb	0	; () banked
  8553  003730  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8554  003732  CFF3 F0A7          	movff	prodl,___flmul@temp
  8555  003736  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8556                           
  8557                           ; BSR set to: 0
  8558  00373A  0100               	movlb	0	; () banked
  8559  00373C  51A7               	movf	___flmul@temp& (0+255),w,b
  8560  00373E  0100               	movlb	0	; () banked
  8561  003740  279E               	addwf	___flmul@grs& (0+255),f,b
  8562  003742  0100               	movlb	0	; () banked
  8563  003744  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8564  003746  0100               	movlb	0	; () banked
  8565  003748  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8566  00374A  0E00               	movlw	0
  8567  00374C  0100               	movlb	0	; () banked
  8568  00374E  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8569  003750  0E00               	movlw	0
  8570  003752  0100               	movlb	0	; () banked
  8571  003754  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8572                           
  8573                           ; BSR set to: 0
  8574  003756  0100               	movlb	0	; () banked
  8575  003758  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8576  00375A  0100               	movlb	0	; () banked
  8577  00375C  0390               	mulwf	___flmul@b& (0+255),b
  8578  00375E  CFF3 F0A7          	movff	prodl,___flmul@temp
  8579  003762  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8580                           
  8581                           ; BSR set to: 0
  8582  003766  0100               	movlb	0	; () banked
  8583  003768  51A7               	movf	___flmul@temp& (0+255),w,b
  8584  00376A  0100               	movlb	0	; () banked
  8585  00376C  279E               	addwf	___flmul@grs& (0+255),f,b
  8586  00376E  0100               	movlb	0	; () banked
  8587  003770  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8588  003772  0100               	movlb	0	; () banked
  8589  003774  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8590  003776  0E00               	movlw	0
  8591  003778  0100               	movlb	0	; () banked
  8592  00377A  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8593  00377C  0E00               	movlw	0
  8594  00377E  0100               	movlb	0	; () banked
  8595  003780  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8596                           
  8597                           ; BSR set to: 0
  8598  003782  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8599  003786  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8600  00378A  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8601  00378E  0100               	movlb	0	; () banked
  8602  003790  6B9E               	clrf	___flmul@grs& (0+255),b
  8603  003792  0100               	movlb	0	; () banked
  8604  003794  5194               	movf	___flmul@a& (0+255),w,b
  8605  003796  0100               	movlb	0	; () banked
  8606  003798  0390               	mulwf	___flmul@b& (0+255),b
  8607  00379A  CFF3 F0A7          	movff	prodl,___flmul@temp
  8608  00379E  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8609                           
  8610                           ; BSR set to: 0
  8611  0037A2  0100               	movlb	0	; () banked
  8612  0037A4  51A7               	movf	___flmul@temp& (0+255),w,b
  8613  0037A6  0100               	movlb	0	; () banked
  8614  0037A8  279E               	addwf	___flmul@grs& (0+255),f,b
  8615  0037AA  0100               	movlb	0	; () banked
  8616  0037AC  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8617  0037AE  0100               	movlb	0	; () banked
  8618  0037B0  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8619  0037B2  0E00               	movlw	0
  8620  0037B4  0100               	movlb	0	; () banked
  8621  0037B6  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8622  0037B8  0E00               	movlw	0
  8623  0037BA  0100               	movlb	0	; () banked
  8624  0037BC  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8625                           
  8626                           ; BSR set to: 0
  8627  0037BE  0100               	movlb	0	; () banked
  8628  0037C0  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8629  0037C2  0100               	movlb	0	; () banked
  8630  0037C4  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8631  0037C6  CFF3 F0A7          	movff	prodl,___flmul@temp
  8632  0037CA  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8633  0037CE  0100               	movlb	0	; () banked
  8634  0037D0  51A7               	movf	___flmul@temp& (0+255),w,b
  8635  0037D2  0100               	movlb	0	; () banked
  8636  0037D4  27A3               	addwf	___flmul@prod& (0+255),f,b
  8637  0037D6  0100               	movlb	0	; () banked
  8638  0037D8  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8639  0037DA  0100               	movlb	0	; () banked
  8640  0037DC  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8641  0037DE  0E00               	movlw	0
  8642  0037E0  0100               	movlb	0	; () banked
  8643  0037E2  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8644  0037E4  0E00               	movlw	0
  8645  0037E6  0100               	movlb	0	; () banked
  8646  0037E8  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8647                           
  8648                           ; BSR set to: 0
  8649  0037EA  0100               	movlb	0	; () banked
  8650  0037EC  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8651  0037EE  0100               	movlb	0	; () banked
  8652  0037F0  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8653  0037F2  CFF3 F0A7          	movff	prodl,___flmul@temp
  8654  0037F6  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8655                           
  8656                           ; BSR set to: 0
  8657  0037FA  0100               	movlb	0	; () banked
  8658  0037FC  51A7               	movf	___flmul@temp& (0+255),w,b
  8659  0037FE  0100               	movlb	0	; () banked
  8660  003800  27A3               	addwf	___flmul@prod& (0+255),f,b
  8661  003802  0100               	movlb	0	; () banked
  8662  003804  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8663  003806  0100               	movlb	0	; () banked
  8664  003808  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8665  00380A  0E00               	movlw	0
  8666  00380C  0100               	movlb	0	; () banked
  8667  00380E  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8668  003810  0E00               	movlw	0
  8669  003812  0100               	movlb	0	; () banked
  8670  003814  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8671  003816  0100               	movlb	0	; () banked
  8672  003818  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8673  00381A  0100               	movlb	0	; () banked
  8674  00381C  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8675  00381E  CFF3 F0A7          	movff	prodl,___flmul@temp
  8676  003822  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8677                           
  8678                           ; BSR set to: 0
  8679  003826  0100               	movlb	0	; () banked
  8680  003828  51A7               	movf	___flmul@temp& (0+255),w,b
  8681  00382A  0100               	movlb	0	; () banked
  8682  00382C  6F98               	movwf	??___flmul& (0+255),b
  8683  00382E  0100               	movlb	0	; () banked
  8684  003830  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8685  003832  0100               	movlb	0	; () banked
  8686  003834  6F99               	movwf	(??___flmul+1)& (0+255),b
  8687  003836  0100               	movlb	0	; () banked
  8688  003838  6B9A               	clrf	(??___flmul+2)& (0+255),b
  8689  00383A  0100               	movlb	0	; () banked
  8690  00383C  6B9B               	clrf	(??___flmul+3)& (0+255),b
  8691  00383E  C09A  F09B         	movff	??___flmul+2,??___flmul+3
  8692  003842  C099  F09A         	movff	??___flmul+1,??___flmul+2
  8693  003846  C098  F099         	movff	??___flmul,??___flmul+1
  8694  00384A  0100               	movlb	0	; () banked
  8695  00384C  6B98               	clrf	??___flmul& (0+255),b
  8696  00384E  0100               	movlb	0	; () banked
  8697  003850  5198               	movf	??___flmul& (0+255),w,b
  8698  003852  0100               	movlb	0	; () banked
  8699  003854  27A3               	addwf	___flmul@prod& (0+255),f,b
  8700  003856  0100               	movlb	0	; () banked
  8701  003858  5199               	movf	(??___flmul+1)& (0+255),w,b
  8702  00385A  0100               	movlb	0	; () banked
  8703  00385C  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8704  00385E  0100               	movlb	0	; () banked
  8705  003860  519A               	movf	(??___flmul+2)& (0+255),w,b
  8706  003862  0100               	movlb	0	; () banked
  8707  003864  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8708  003866  0100               	movlb	0	; () banked
  8709  003868  519B               	movf	(??___flmul+3)& (0+255),w,b
  8710  00386A  0100               	movlb	0	; () banked
  8711  00386C  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8712                           
  8713                           ; BSR set to: 0
  8714  00386E  C09E  F098         	movff	___flmul@grs,??___flmul
  8715  003872  C09F  F099         	movff	___flmul@grs+1,??___flmul+1
  8716  003876  C0A0  F09A         	movff	___flmul@grs+2,??___flmul+2
  8717  00387A  C0A1  F09B         	movff	___flmul@grs+3,??___flmul+3
  8718  00387E  0E19               	movlw	25
  8719  003880  D006               	goto	u9060
  8720  003882                     u9065:
  8721  003882  0100               	movlb	0	; () banked
  8722  003884  90D8               	bcf	status,0,c
  8723  003886  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  8724  003888  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  8725  00388A  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  8726  00388C  3398               	rrcf	??___flmul& (0+255),f,b
  8727  00388E                     u9060:
  8728  00388E  2EE8               	decfsz	wreg,f,c
  8729  003890  D7F8               	goto	u9065
  8730  003892  0100               	movlb	0	; () banked
  8731  003894  5198               	movf	??___flmul& (0+255),w,b
  8732  003896  0100               	movlb	0	; () banked
  8733  003898  27A3               	addwf	___flmul@prod& (0+255),f,b
  8734  00389A  0100               	movlb	0	; () banked
  8735  00389C  5199               	movf	(??___flmul+1)& (0+255),w,b
  8736  00389E  0100               	movlb	0	; () banked
  8737  0038A0  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8738  0038A2  0100               	movlb	0	; () banked
  8739  0038A4  519A               	movf	(??___flmul+2)& (0+255),w,b
  8740  0038A6  0100               	movlb	0	; () banked
  8741  0038A8  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8742  0038AA  0100               	movlb	0	; () banked
  8743  0038AC  519B               	movf	(??___flmul+3)& (0+255),w,b
  8744  0038AE  0100               	movlb	0	; () banked
  8745  0038B0  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8746                           
  8747                           ; BSR set to: 0
  8748  0038B2  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8749  0038B6  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8750  0038BA  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8751  0038BE  0100               	movlb	0	; () banked
  8752  0038C0  6B9E               	clrf	___flmul@grs& (0+255),b
  8753                           
  8754                           ; BSR set to: 0
  8755  0038C2  0100               	movlb	0	; () banked
  8756  0038C4  519D               	movf	___flmul@aexp& (0+255),w,b
  8757  0038C6  C0A2  F098         	movff	___flmul@bexp,??___flmul
  8758  0038CA  0100               	movlb	0	; () banked
  8759  0038CC  6B99               	clrf	(??___flmul+1)& (0+255),b
  8760  0038CE  0100               	movlb	0	; () banked
  8761  0038D0  2798               	addwf	??___flmul& (0+255),f,b
  8762  0038D2  0E00               	movlw	0
  8763  0038D4  2399               	addwfc	(??___flmul+1)& (0+255),f,b
  8764  0038D6  0E82               	movlw	130
  8765  0038D8  0100               	movlb	0	; () banked
  8766  0038DA  2598               	addwf	??___flmul& (0+255),w,b
  8767  0038DC  0100               	movlb	0	; () banked
  8768  0038DE  6FA7               	movwf	___flmul@temp& (0+255),b
  8769  0038E0  0EFF               	movlw	255
  8770  0038E2  0100               	movlb	0	; () banked
  8771  0038E4  2199               	addwfc	(??___flmul+1)& (0+255),w,b
  8772  0038E6  0100               	movlb	0	; () banked
  8773  0038E8  6FA8               	movwf	(___flmul@temp+1)& (0+255),b
  8774  0038EA  D015               	goto	l7036
  8775  0038EC                     l7030:
  8776                           
  8777                           ; BSR set to: 0
  8778  0038EC  0100               	movlb	0	; () banked
  8779  0038EE  90D8               	bcf	status,0,c
  8780  0038F0  37A3               	rlcf	___flmul@prod& (0+255),f,b
  8781  0038F2  37A4               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8782  0038F4  37A5               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8783  0038F6  37A6               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8784                           
  8785                           ; BSR set to: 0
  8786  0038F8  0100               	movlb	0	; () banked
  8787  0038FA  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  8788  0038FC  D002               	goto	l1448
  8789                           
  8790                           ; BSR set to: 0
  8791  0038FE  0100               	movlb	0	; () banked
  8792  003900  81A3               	bsf	___flmul@prod& (0+255),0,b
  8793  003902                     l1448:
  8794                           
  8795                           ; BSR set to: 0
  8796  003902  0100               	movlb	0	; () banked
  8797  003904  90D8               	bcf	status,0,c
  8798  003906  379E               	rlcf	___flmul@grs& (0+255),f,b
  8799  003908  379F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8800  00390A  37A0               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8801  00390C  37A1               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8802  00390E  0100               	movlb	0	; () banked
  8803  003910  07A7               	decf	___flmul@temp& (0+255),f,b
  8804  003912  A0D8               	btfss	status,0,c
  8805  003914  07A8               	decf	(___flmul@temp+1)& (0+255),f,b
  8806  003916                     l7036:
  8807                           
  8808                           ; BSR set to: 0
  8809  003916  0100               	movlb	0	; () banked
  8810  003918  AFA5               	btfss	(___flmul@prod+2)& (0+255),7,b
  8811  00391A  D7E8               	goto	l7030
  8812                           
  8813                           ; BSR set to: 0
  8814                           
  8815                           ; BSR set to: 0
  8816  00391C  0E00               	movlw	0
  8817  00391E  0100               	movlb	0	; () banked
  8818  003920  6F9D               	movwf	___flmul@aexp& (0+255),b
  8819                           
  8820                           ; BSR set to: 0
  8821  003922  0100               	movlb	0	; () banked
  8822  003924  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  8823  003926  D024               	goto	l1450
  8824                           
  8825                           ; BSR set to: 0
  8826  003928  0EFF               	movlw	255
  8827  00392A  0100               	movlb	0	; () banked
  8828  00392C  159E               	andwf	___flmul@grs& (0+255),w,b
  8829  00392E  0100               	movlb	0	; () banked
  8830  003930  6F98               	movwf	??___flmul& (0+255),b
  8831  003932  0EFF               	movlw	255
  8832  003934  0100               	movlb	0	; () banked
  8833  003936  159F               	andwf	(___flmul@grs+1)& (0+255),w,b
  8834  003938  0100               	movlb	0	; () banked
  8835  00393A  6F99               	movwf	(??___flmul+1)& (0+255),b
  8836  00393C  0EFF               	movlw	255
  8837  00393E  0100               	movlb	0	; () banked
  8838  003940  15A0               	andwf	(___flmul@grs+2)& (0+255),w,b
  8839  003942  0100               	movlb	0	; () banked
  8840  003944  6F9A               	movwf	(??___flmul+2)& (0+255),b
  8841  003946  0E7F               	movlw	127
  8842  003948  0100               	movlb	0	; () banked
  8843  00394A  15A1               	andwf	(___flmul@grs+3)& (0+255),w,b
  8844  00394C  0100               	movlb	0	; () banked
  8845  00394E  6F9B               	movwf	(??___flmul+3)& (0+255),b
  8846  003950  0100               	movlb	0	; () banked
  8847  003952  5198               	movf	??___flmul& (0+255),w,b
  8848  003954  0100               	movlb	0	; () banked
  8849  003956  1199               	iorwf	(??___flmul+1)& (0+255),w,b
  8850  003958  0100               	movlb	0	; () banked
  8851  00395A  119A               	iorwf	(??___flmul+2)& (0+255),w,b
  8852  00395C  0100               	movlb	0	; () banked
  8853  00395E  119B               	iorwf	(??___flmul+3)& (0+255),w,b
  8854  003960  A4D8               	btfss	status,2,c
  8855  003962  D003               	goto	l7046
  8856                           
  8857                           ; BSR set to: 0
  8858                           
  8859                           ; BSR set to: 0
  8860  003964  0100               	movlb	0	; () banked
  8861  003966  A1A3               	btfss	___flmul@prod& (0+255),0,b
  8862  003968  D003               	goto	l1450
  8863  00396A                     l7046:
  8864                           
  8865                           ; BSR set to: 0
  8866  00396A  0E01               	movlw	1
  8867  00396C  0100               	movlb	0	; () banked
  8868  00396E  6F9D               	movwf	___flmul@aexp& (0+255),b
  8869  003970                     l1450:
  8870                           
  8871                           ; BSR set to: 0
  8872  003970  0100               	movlb	0	; () banked
  8873  003972  519D               	movf	___flmul@aexp& (0+255),w,b
  8874  003974  0100               	movlb	0	; () banked
  8875  003976  B4D8               	btfsc	status,2,c
  8876  003978  D023               	goto	l7056
  8877                           
  8878                           ; BSR set to: 0
  8879  00397A  0E01               	movlw	1
  8880  00397C  0100               	movlb	0	; () banked
  8881  00397E  27A3               	addwf	___flmul@prod& (0+255),f,b
  8882  003980  0E00               	movlw	0
  8883  003982  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8884  003984  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8885  003986  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8886                           
  8887                           ; BSR set to: 0
  8888  003988  0100               	movlb	0	; () banked
  8889  00398A  A1A6               	btfss	(___flmul@prod+3)& (0+255),0,b
  8890  00398C  D019               	goto	l7056
  8891                           
  8892                           ; BSR set to: 0
  8893  00398E  C0A3  F098         	movff	___flmul@prod,??___flmul
  8894  003992  C0A4  F099         	movff	___flmul@prod+1,??___flmul+1
  8895  003996  C0A5  F09A         	movff	___flmul@prod+2,??___flmul+2
  8896  00399A  C0A6  F09B         	movff	___flmul@prod+3,??___flmul+3
  8897  00399E  0100               	movlb	0	; () banked
  8898  0039A0  359B               	rlcf	(??___flmul+3)& (0+255),w,b
  8899  0039A2  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  8900  0039A4  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  8901  0039A6  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  8902  0039A8  3398               	rrcf	??___flmul& (0+255),f,b
  8903  0039AA  C098  F0A3         	movff	??___flmul,___flmul@prod
  8904  0039AE  C099  F0A4         	movff	??___flmul+1,___flmul@prod+1
  8905  0039B2  C09A  F0A5         	movff	??___flmul+2,___flmul@prod+2
  8906  0039B6  C09B  F0A6         	movff	??___flmul+3,___flmul@prod+3
  8907                           
  8908                           ; BSR set to: 0
  8909  0039BA  0100               	movlb	0	; () banked
  8910  0039BC  4BA7               	infsnz	___flmul@temp& (0+255),f,b
  8911  0039BE  2BA8               	incf	(___flmul@temp+1)& (0+255),f,b
  8912  0039C0                     l7056:
  8913                           
  8914                           ; BSR set to: 0
  8915  0039C0  0100               	movlb	0	; () banked
  8916  0039C2  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8917  0039C4  D010               	goto	l7060
  8918  0039C6  0100               	movlb	0	; () banked
  8919  0039C8  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8920  0039CA  E104               	bnz	u9140
  8921  0039CC  0100               	movlb	0	; () banked
  8922  0039CE  29A7               	incf	___flmul@temp& (0+255),w,b
  8923  0039D0  A0D8               	btfss	status,0,c
  8924  0039D2  D009               	goto	l7060
  8925  0039D4                     u9140:
  8926                           
  8927                           ; BSR set to: 0
  8928  0039D4  0E00               	movlw	0
  8929  0039D6  0100               	movlb	0	; () banked
  8930  0039D8  6FA3               	movwf	___flmul@prod& (0+255),b
  8931  0039DA  0E00               	movlw	0
  8932  0039DC  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  8933  0039DE  0E80               	movlw	128
  8934  0039E0  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  8935  0039E2  0E7F               	movlw	127
  8936  0039E4  D02B               	goto	L2
  8937  0039E6                     l7060:
  8938                           
  8939                           ; BSR set to: 0
  8940  0039E6  0100               	movlb	0	; () banked
  8941  0039E8  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8942  0039EA  D007               	goto	l7062
  8943  0039EC  0100               	movlb	0	; () banked
  8944  0039EE  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8945  0039F0  E111               	bnz	l1458
  8946  0039F2  0100               	movlb	0	; () banked
  8947  0039F4  05A7               	decf	___flmul@temp& (0+255),w,b
  8948  0039F6  B0D8               	btfsc	status,0,c
  8949  0039F8  D00D               	goto	l1458
  8950  0039FA                     l7062:
  8951                           
  8952                           ; BSR set to: 0
  8953  0039FA  0E00               	movlw	0
  8954  0039FC  0100               	movlb	0	; () banked
  8955  0039FE  6FA3               	movwf	___flmul@prod& (0+255),b
  8956  003A00  0E00               	movlw	0
  8957  003A02  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  8958  003A04  0E00               	movlw	0
  8959  003A06  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  8960  003A08  0E00               	movlw	0
  8961  003A0A  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  8962  003A0C  0E00               	movlw	0
  8963  003A0E  0100               	movlb	0	; () banked
  8964  003A10  6F9C               	movwf	___flmul@sign& (0+255),b
  8965  003A12  D015               	goto	l7072
  8966  003A14                     l1458:
  8967                           
  8968                           ; BSR set to: 0
  8969  003A14  C0A7  F0A2         	movff	___flmul@temp,___flmul@bexp
  8970                           
  8971                           ; BSR set to: 0
  8972  003A18  0EFF               	movlw	255
  8973  003A1A  0100               	movlb	0	; () banked
  8974  003A1C  17A3               	andwf	___flmul@prod& (0+255),f,b
  8975  003A1E  0EFF               	movlw	255
  8976  003A20  17A4               	andwf	(___flmul@prod+1)& (0+255),f,b
  8977  003A22  0E7F               	movlw	127
  8978  003A24  17A5               	andwf	(___flmul@prod+2)& (0+255),f,b
  8979  003A26  0E00               	movlw	0
  8980  003A28  17A6               	andwf	(___flmul@prod+3)& (0+255),f,b
  8981                           
  8982                           ; BSR set to: 0
  8983  003A2A  0100               	movlb	0	; () banked
  8984  003A2C  A1A2               	btfss	___flmul@bexp& (0+255),0,b
  8985  003A2E  D002               	goto	l7070
  8986                           
  8987                           ; BSR set to: 0
  8988  003A30  0100               	movlb	0	; () banked
  8989  003A32  8FA5               	bsf	(___flmul@prod+2)& (0+255),7,b
  8990  003A34                     l7070:
  8991                           
  8992                           ; BSR set to: 0
  8993  003A34  0100               	movlb	0	; () banked
  8994  003A36  90D8               	bcf	status,0,c
  8995  003A38  31A2               	rrcf	___flmul@bexp& (0+255),w,b
  8996  003A3A  0100               	movlb	0	; () banked
  8997  003A3C                     L2:
  8998  003A3C  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  8999  003A3E                     l7072:
  9000                           
  9001                           ; BSR set to: 0
  9002  003A3E  0100               	movlb	0	; () banked
  9003  003A40  519C               	movf	___flmul@sign& (0+255),w,b
  9004  003A42  0100               	movlb	0	; () banked
  9005  003A44  13A6               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9006                           
  9007                           ; BSR set to: 0
  9008  003A46  C0A3  F090         	movff	___flmul@prod,?___flmul
  9009  003A4A  C0A4  F091         	movff	___flmul@prod+1,?___flmul+1
  9010  003A4E  C0A5  F092         	movff	___flmul@prod+2,?___flmul+2
  9011  003A52  C0A6  F093         	movff	___flmul@prod+3,?___flmul+3
  9012  003A56  0012               	return	
  9013  003A58                     __end_of___flmul:
  9014                           	opt stack 0
  9015                           tblptru	equ	0xFF8
  9016                           tblptrh	equ	0xFF7
  9017                           tblptrl	equ	0xFF6
  9018                           tablat	equ	0xFF5
  9019                           prodh	equ	0xFF4
  9020                           prodl	equ	0xFF3
  9021                           postinc0	equ	0xFEE
  9022                           wreg	equ	0xFE8
  9023                           postdec1	equ	0xFE5
  9024                           fsr1l	equ	0xFE1
  9025                           indf2	equ	0xFDF
  9026                           postinc2	equ	0xFDE
  9027                           postdec2	equ	0xFDD
  9028                           fsr2h	equ	0xFDA
  9029                           fsr2l	equ	0xFD9
  9030                           status	equ	0xFD8
  9031                           
  9032 ;; *************** function ___fladd *****************
  9033 ;; Defined at:
  9034 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  9035 ;; Parameters:    Size  Location     Type
  9036 ;;  b               4   73[BANK0 ] unsigned char 
  9037 ;;  a               4   77[BANK0 ] unsigned char 
  9038 ;; Auto vars:     Size  Location     Type
  9039 ;;  grs             1   92[BANK0 ] unsigned char 
  9040 ;;  bexp            1   91[BANK0 ] unsigned char 
  9041 ;;  aexp            1   90[BANK0 ] unsigned char 
  9042 ;;  signs           1   89[BANK0 ] unsigned char 
  9043 ;; Return value:  Size  Location     Type
  9044 ;;                  4   73[BANK0 ] unsigned char 
  9045 ;; Registers used:
  9046 ;;		wreg, status,2, status,0
  9047 ;; Tracked objects:
  9048 ;;		On entry : 0/0
  9049 ;;		On exit  : 0/0
  9050 ;;		Unchanged: 0/0
  9051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9052 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9053 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9054 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9055 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9056 ;;Total ram usage:       20 bytes
  9057 ;; Hardware stack levels used:    1
  9058 ;; Hardware stack levels required when called:    4
  9059 ;; This function calls:
  9060 ;;		Nothing
  9061 ;; This function is called by:
  9062 ;;		_park_routine
  9063 ;;		_parallelo
  9064 ;;		_matematica
  9065 ;;		_asin
  9066 ;;		_atan
  9067 ;;		_cos
  9068 ;;		_eval_poly
  9069 ;;		_sin
  9070 ;;		___flsub
  9071 ;;		_floor
  9072 ;; This function uses a non-reentrant model
  9073 ;;
  9074                           
  9075                           	psect	text23
  9076  00310A                     __ptext23:
  9077                           	opt stack 0
  9078  00310A                     ___fladd:
  9079                           	opt stack 21
  9080                           
  9081                           ; BSR set to: 0
  9082                           ;incstack = 0
  9083  00310A  0100               	movlb	0	; () banked
  9084  00310C  51AC               	movf	(___fladd@b+3)& (0+255),w,b
  9085  00310E  0B80               	andlw	128
  9086  003110  0100               	movlb	0	; () banked
  9087  003112  6FB9               	movwf	___fladd@signs& (0+255),b
  9088  003114  0100               	movlb	0	; () banked
  9089  003116  51AC               	movf	(___fladd@b+3)& (0+255),w,b
  9090  003118  25AC               	addwf	(___fladd@b+3)& (0+255),w,b
  9091  00311A  0100               	movlb	0	; () banked
  9092  00311C  6FBB               	movwf	___fladd@bexp& (0+255),b
  9093                           
  9094                           ; BSR set to: 0
  9095  00311E  0100               	movlb	0	; () banked
  9096  003120  AFAB               	btfss	(___fladd@b+2)& (0+255),7,b
  9097  003122  D002               	goto	l6752
  9098                           
  9099                           ; BSR set to: 0
  9100  003124  0100               	movlb	0	; () banked
  9101  003126  81BB               	bsf	___fladd@bexp& (0+255),0,b
  9102  003128                     l6752:
  9103                           
  9104                           ; BSR set to: 0
  9105  003128  0100               	movlb	0	; () banked
  9106  00312A  51BB               	movf	___fladd@bexp& (0+255),w,b
  9107  00312C  0100               	movlb	0	; () banked
  9108  00312E  B4D8               	btfsc	status,2,c
  9109  003130  D012               	goto	l6762
  9110                           
  9111                           ; BSR set to: 0
  9112  003132  0100               	movlb	0	; () banked
  9113  003134  29BB               	incf	___fladd@bexp& (0+255),w,b
  9114  003136  A4D8               	btfss	status,2,c
  9115  003138  D009               	goto	l6758
  9116                           
  9117                           ; BSR set to: 0
  9118  00313A  0E00               	movlw	0
  9119  00313C  0100               	movlb	0	; () banked
  9120  00313E  6FA9               	movwf	___fladd@b& (0+255),b
  9121  003140  0E00               	movlw	0
  9122  003142  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9123  003144  0E00               	movlw	0
  9124  003146  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9125  003148  0E00               	movlw	0
  9126  00314A  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9127  00314C                     l6758:
  9128                           
  9129                           ; BSR set to: 0
  9130  00314C  0100               	movlb	0	; () banked
  9131  00314E  8FAB               	bsf	(___fladd@b+2)& (0+255),7,b
  9132                           
  9133                           ; BSR set to: 0
  9134  003150  0E00               	movlw	0
  9135  003152  0100               	movlb	0	; () banked
  9136  003154  D008               	goto	L3
  9137  003156                     l6762:
  9138                           
  9139                           ; BSR set to: 0
  9140  003156  0E00               	movlw	0
  9141  003158  0100               	movlb	0	; () banked
  9142  00315A  6FA9               	movwf	___fladd@b& (0+255),b
  9143  00315C  0E00               	movlw	0
  9144  00315E  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9145  003160  0E00               	movlw	0
  9146  003162  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9147  003164  0E00               	movlw	0
  9148  003166                     L3:
  9149  003166  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9150                           
  9151                           ; BSR set to: 0
  9152                           
  9153                           ; BSR set to: 0
  9154  003168  0100               	movlb	0	; () banked
  9155  00316A  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9156  00316C  0B80               	andlw	128
  9157  00316E  0100               	movlb	0	; () banked
  9158  003170  6FBA               	movwf	___fladd@aexp& (0+255),b
  9159                           
  9160                           ; BSR set to: 0
  9161  003172  0100               	movlb	0	; () banked
  9162  003174  51B9               	movf	___fladd@signs& (0+255),w,b
  9163  003176  0100               	movlb	0	; () banked
  9164  003178  19BA               	xorwf	___fladd@aexp& (0+255),w,b
  9165  00317A  B4D8               	btfsc	status,2,c
  9166  00317C  D002               	goto	l6770
  9167                           
  9168                           ; BSR set to: 0
  9169  00317E  0100               	movlb	0	; () banked
  9170  003180  8DB9               	bsf	___fladd@signs& (0+255),6,b
  9171  003182                     l6770:
  9172                           
  9173                           ; BSR set to: 0
  9174  003182  0100               	movlb	0	; () banked
  9175  003184  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9176  003186  25B0               	addwf	(___fladd@a+3)& (0+255),w,b
  9177  003188  0100               	movlb	0	; () banked
  9178  00318A  6FBA               	movwf	___fladd@aexp& (0+255),b
  9179                           
  9180                           ; BSR set to: 0
  9181  00318C  0100               	movlb	0	; () banked
  9182  00318E  AFAF               	btfss	(___fladd@a+2)& (0+255),7,b
  9183  003190  D002               	goto	l6776
  9184                           
  9185                           ; BSR set to: 0
  9186  003192  0100               	movlb	0	; () banked
  9187  003194  81BA               	bsf	___fladd@aexp& (0+255),0,b
  9188  003196                     l6776:
  9189                           
  9190                           ; BSR set to: 0
  9191  003196  0100               	movlb	0	; () banked
  9192  003198  51BA               	movf	___fladd@aexp& (0+255),w,b
  9193  00319A  0100               	movlb	0	; () banked
  9194  00319C  B4D8               	btfsc	status,2,c
  9195  00319E  D012               	goto	l6786
  9196                           
  9197                           ; BSR set to: 0
  9198  0031A0  0100               	movlb	0	; () banked
  9199  0031A2  29BA               	incf	___fladd@aexp& (0+255),w,b
  9200  0031A4  A4D8               	btfss	status,2,c
  9201  0031A6  D009               	goto	l6782
  9202                           
  9203                           ; BSR set to: 0
  9204  0031A8  0E00               	movlw	0
  9205  0031AA  0100               	movlb	0	; () banked
  9206  0031AC  6FAD               	movwf	___fladd@a& (0+255),b
  9207  0031AE  0E00               	movlw	0
  9208  0031B0  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  9209  0031B2  0E00               	movlw	0
  9210  0031B4  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  9211  0031B6  0E00               	movlw	0
  9212  0031B8  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  9213  0031BA                     l6782:
  9214                           
  9215                           ; BSR set to: 0
  9216  0031BA  0100               	movlb	0	; () banked
  9217  0031BC  8FAF               	bsf	(___fladd@a+2)& (0+255),7,b
  9218                           
  9219                           ; BSR set to: 0
  9220  0031BE  0E00               	movlw	0
  9221  0031C0  0100               	movlb	0	; () banked
  9222  0031C2  D008               	goto	L4
  9223  0031C4                     l6786:
  9224                           
  9225                           ; BSR set to: 0
  9226  0031C4  0E00               	movlw	0
  9227  0031C6  0100               	movlb	0	; () banked
  9228  0031C8  6FAD               	movwf	___fladd@a& (0+255),b
  9229  0031CA  0E00               	movlw	0
  9230  0031CC  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  9231  0031CE  0E00               	movlw	0
  9232  0031D0  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  9233  0031D2  0E00               	movlw	0
  9234  0031D4                     L4:
  9235  0031D4  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  9236                           
  9237                           ; BSR set to: 0
  9238                           
  9239                           ; BSR set to: 0
  9240  0031D6  0100               	movlb	0	; () banked
  9241  0031D8  51BB               	movf	___fladd@bexp& (0+255),w,b
  9242  0031DA  0100               	movlb	0	; () banked
  9243  0031DC  5DBA               	subwf	___fladd@aexp& (0+255),w,b
  9244  0031DE  B0D8               	btfsc	status,0,c
  9245  0031E0  D024               	goto	l6824
  9246                           
  9247                           ; BSR set to: 0
  9248  0031E2  0100               	movlb	0	; () banked
  9249  0031E4  ADB9               	btfss	___fladd@signs& (0+255),6,b
  9250  0031E6  D003               	goto	l6794
  9251                           
  9252                           ; BSR set to: 0
  9253  0031E8  0E80               	movlw	128
  9254  0031EA  0100               	movlb	0	; () banked
  9255  0031EC  1BB9               	xorwf	___fladd@signs& (0+255),f,b
  9256  0031EE                     l6794:
  9257                           
  9258                           ; BSR set to: 0
  9259  0031EE  C0BB  F0BC         	movff	___fladd@bexp,___fladd@grs
  9260                           
  9261                           ; BSR set to: 0
  9262  0031F2  C0BA  F0BB         	movff	___fladd@aexp,___fladd@bexp
  9263                           
  9264                           ; BSR set to: 0
  9265  0031F6  C0BC  F0BA         	movff	___fladd@grs,___fladd@aexp
  9266                           
  9267                           ; BSR set to: 0
  9268  0031FA  C0A9  F0BC         	movff	___fladd@b,___fladd@grs
  9269                           
  9270                           ; BSR set to: 0
  9271  0031FE  C0AD  F0A9         	movff	___fladd@a,___fladd@b
  9272                           
  9273                           ; BSR set to: 0
  9274  003202  C0BC  F0AD         	movff	___fladd@grs,___fladd@a
  9275                           
  9276                           ; BSR set to: 0
  9277  003206  C0AA  F0BC         	movff	___fladd@b+1,___fladd@grs
  9278                           
  9279                           ; BSR set to: 0
  9280  00320A  C0AE  F0AA         	movff	___fladd@a+1,___fladd@b+1
  9281                           
  9282                           ; BSR set to: 0
  9283  00320E  C0BC  F0AE         	movff	___fladd@grs,___fladd@a+1
  9284                           
  9285                           ; BSR set to: 0
  9286  003212  C0AB  F0BC         	movff	___fladd@b+2,___fladd@grs
  9287                           
  9288                           ; BSR set to: 0
  9289  003216  C0AF  F0AB         	movff	___fladd@a+2,___fladd@b+2
  9290                           
  9291                           ; BSR set to: 0
  9292  00321A  C0BC  F0AF         	movff	___fladd@grs,___fladd@a+2
  9293                           
  9294                           ; BSR set to: 0
  9295  00321E  C0AC  F0BC         	movff	___fladd@b+3,___fladd@grs
  9296                           
  9297                           ; BSR set to: 0
  9298  003222  C0B0  F0AC         	movff	___fladd@a+3,___fladd@b+3
  9299                           
  9300                           ; BSR set to: 0
  9301  003226  C0BC  F0B0         	movff	___fladd@grs,___fladd@a+3
  9302  00322A                     l6824:
  9303                           
  9304                           ; BSR set to: 0
  9305  00322A  0E00               	movlw	0
  9306  00322C  0100               	movlb	0	; () banked
  9307  00322E  6FBC               	movwf	___fladd@grs& (0+255),b
  9308                           
  9309                           ; BSR set to: 0
  9310  003230  0100               	movlb	0	; () banked
  9311  003232  51BB               	movf	___fladd@bexp& (0+255),w,b
  9312  003234  0100               	movlb	0	; () banked
  9313  003236  6FB1               	movwf	??___fladd& (0+255),b
  9314  003238  6BB2               	clrf	(??___fladd+1)& (0+255),b
  9315  00323A  0100               	movlb	0	; () banked
  9316  00323C  1FB1               	comf	??___fladd& (0+255),f,b
  9317  00323E  1FB2               	comf	(??___fladd+1)& (0+255),f,b
  9318  003240  4BB1               	infsnz	??___fladd& (0+255),f,b
  9319  003242  2BB2               	incf	(??___fladd+1)& (0+255),f,b
  9320  003244  0100               	movlb	0	; () banked
  9321  003246  51BA               	movf	___fladd@aexp& (0+255),w,b
  9322  003248  0100               	movlb	0	; () banked
  9323  00324A  6FB3               	movwf	(??___fladd+2)& (0+255),b
  9324  00324C  6BB4               	clrf	(??___fladd+3)& (0+255),b
  9325  00324E  0100               	movlb	0	; () banked
  9326  003250  51B1               	movf	??___fladd& (0+255),w,b
  9327  003252  0100               	movlb	0	; () banked
  9328  003254  27B3               	addwf	(??___fladd+2)& (0+255),f,b
  9329  003256  0100               	movlb	0	; () banked
  9330  003258  51B2               	movf	(??___fladd+1)& (0+255),w,b
  9331  00325A  0100               	movlb	0	; () banked
  9332  00325C  23B4               	addwfc	(??___fladd+3)& (0+255),f,b
  9333  00325E  0100               	movlb	0	; () banked
  9334  003260  BFB4               	btfsc	(??___fladd+3)& (0+255),7,b
  9335  003262  D03D               	goto	l1356
  9336  003264  0100               	movlb	0	; () banked
  9337  003266  51B4               	movf	(??___fladd+3)& (0+255),w,b
  9338  003268  E105               	bnz	u8680
  9339  00326A  0E1A               	movlw	26
  9340  00326C  0100               	movlb	0	; () banked
  9341  00326E  5DB3               	subwf	(??___fladd+2)& (0+255),w,b
  9342  003270  A0D8               	btfss	status,0,c
  9343  003272  D035               	goto	l1356
  9344  003274                     u8680:
  9345                           
  9346                           ; BSR set to: 0
  9347  003274  0100               	movlb	0	; () banked
  9348  003276  51A9               	movf	___fladd@b& (0+255),w,b
  9349  003278  0100               	movlb	0	; () banked
  9350  00327A  11AA               	iorwf	(___fladd@b+1)& (0+255),w,b
  9351  00327C  0100               	movlb	0	; () banked
  9352  00327E  11AB               	iorwf	(___fladd@b+2)& (0+255),w,b
  9353  003280  0100               	movlb	0	; () banked
  9354  003282  11AC               	iorwf	(___fladd@b+3)& (0+255),w,b
  9355  003284  B4D8               	btfsc	status,2,c
  9356  003286  D002               	goto	u8690
  9357  003288  0E01               	movlw	1
  9358  00328A  D001               	goto	u8700
  9359  00328C                     u8690:
  9360  00328C  0E00               	movlw	0
  9361  00328E                     u8700:
  9362  00328E  0100               	movlb	0	; () banked
  9363  003290  6FBC               	movwf	___fladd@grs& (0+255),b
  9364                           
  9365                           ; BSR set to: 0
  9366  003292  0E00               	movlw	0
  9367  003294  0100               	movlb	0	; () banked
  9368  003296  6FA9               	movwf	___fladd@b& (0+255),b
  9369  003298  0E00               	movlw	0
  9370  00329A  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9371  00329C  0E00               	movlw	0
  9372  00329E  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9373  0032A0  0E00               	movlw	0
  9374  0032A2  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9375                           
  9376                           ; BSR set to: 0
  9377  0032A4  C0BA  F0BB         	movff	___fladd@aexp,___fladd@bexp
  9378  0032A8  D020               	goto	l1355
  9379  0032AA                     l1357:
  9380                           
  9381                           ; BSR set to: 0
  9382  0032AA  0100               	movlb	0	; () banked
  9383  0032AC  A1BC               	btfss	___fladd@grs& (0+255),0,b
  9384  0032AE  D007               	goto	l6836
  9385                           
  9386                           ; BSR set to: 0
  9387  0032B0  0100               	movlb	0	; () banked
  9388  0032B2  90D8               	bcf	status,0,c
  9389  0032B4  31BC               	rrcf	___fladd@grs& (0+255),w,b
  9390  0032B6  0901               	iorlw	1
  9391  0032B8  0100               	movlb	0	; () banked
  9392  0032BA  6FBC               	movwf	___fladd@grs& (0+255),b
  9393  0032BC  D003               	goto	l6838
  9394  0032BE                     l6836:
  9395                           
  9396                           ; BSR set to: 0
  9397  0032BE  0100               	movlb	0	; () banked
  9398  0032C0  90D8               	bcf	status,0,c
  9399  0032C2  33BC               	rrcf	___fladd@grs& (0+255),f,b
  9400  0032C4                     l6838:
  9401                           
  9402                           ; BSR set to: 0
  9403  0032C4  0100               	movlb	0	; () banked
  9404  0032C6  A1A9               	btfss	___fladd@b& (0+255),0,b
  9405  0032C8  D002               	goto	l6842
  9406                           
  9407                           ; BSR set to: 0
  9408  0032CA  0100               	movlb	0	; () banked
  9409  0032CC  8FBC               	bsf	___fladd@grs& (0+255),7,b
  9410  0032CE                     l6842:
  9411                           
  9412                           ; BSR set to: 0
  9413  0032CE  0100               	movlb	0	; () banked
  9414  0032D0  35AC               	rlcf	(___fladd@b+3)& (0+255),w,b
  9415  0032D2  33AC               	rrcf	(___fladd@b+3)& (0+255),f,b
  9416  0032D4  33AB               	rrcf	(___fladd@b+2)& (0+255),f,b
  9417  0032D6  33AA               	rrcf	(___fladd@b+1)& (0+255),f,b
  9418  0032D8  33A9               	rrcf	___fladd@b& (0+255),f,b
  9419                           
  9420                           ; BSR set to: 0
  9421  0032DA  0100               	movlb	0	; () banked
  9422  0032DC  2BBB               	incf	___fladd@bexp& (0+255),f,b
  9423  0032DE                     l1356:
  9424                           
  9425                           ; BSR set to: 0
  9426  0032DE  0100               	movlb	0	; () banked
  9427  0032E0  51BA               	movf	___fladd@aexp& (0+255),w,b
  9428  0032E2  0100               	movlb	0	; () banked
  9429  0032E4  5DBB               	subwf	___fladd@bexp& (0+255),w,b
  9430  0032E6  A0D8               	btfss	status,0,c
  9431  0032E8  D7E0               	goto	l1357
  9432  0032EA                     l1355:
  9433                           
  9434                           ; BSR set to: 0
  9435  0032EA  0100               	movlb	0	; () banked
  9436  0032EC  BDB9               	btfsc	___fladd@signs& (0+255),6,b
  9437  0032EE  D03F               	goto	l6870
  9438                           
  9439                           ; BSR set to: 0
  9440  0032F0  0100               	movlb	0	; () banked
  9441  0032F2  51BB               	movf	___fladd@bexp& (0+255),w,b
  9442  0032F4  0100               	movlb	0	; () banked
  9443  0032F6  A4D8               	btfss	status,2,c
  9444  0032F8  D00A               	goto	l6852
  9445                           
  9446                           ; BSR set to: 0
  9447  0032FA  0E00               	movlw	0
  9448  0032FC  0100               	movlb	0	; () banked
  9449  0032FE  6FA9               	movwf	?___fladd& (0+255),b
  9450  003300  0E00               	movlw	0
  9451  003302  6FAA               	movwf	(?___fladd+1)& (0+255),b
  9452  003304  0E00               	movlw	0
  9453  003306  6FAB               	movwf	(?___fladd+2)& (0+255),b
  9454  003308  0E00               	movlw	0
  9455  00330A  6FAC               	movwf	(?___fladd+3)& (0+255),b
  9456                           
  9457                           ; BSR set to: 0
  9458  00330C  0012               	return	
  9459  00330E                     l6852:
  9460                           
  9461                           ; BSR set to: 0
  9462  00330E  0100               	movlb	0	; () banked
  9463  003310  51AD               	movf	___fladd@a& (0+255),w,b
  9464  003312  0100               	movlb	0	; () banked
  9465  003314  27A9               	addwf	___fladd@b& (0+255),f,b
  9466  003316  0100               	movlb	0	; () banked
  9467  003318  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9468  00331A  0100               	movlb	0	; () banked
  9469  00331C  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
  9470  00331E  0100               	movlb	0	; () banked
  9471  003320  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9472  003322  0100               	movlb	0	; () banked
  9473  003324  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
  9474  003326  0100               	movlb	0	; () banked
  9475  003328  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9476  00332A  0100               	movlb	0	; () banked
  9477  00332C  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
  9478                           
  9479                           ; BSR set to: 0
  9480  00332E  0100               	movlb	0	; () banked
  9481  003330  A1AC               	btfss	(___fladd@b+3)& (0+255),0,b
  9482  003332  D0CC               	goto	l6906
  9483                           
  9484                           ; BSR set to: 0
  9485  003334  0100               	movlb	0	; () banked
  9486  003336  A1BC               	btfss	___fladd@grs& (0+255),0,b
  9487  003338  D009               	goto	l6860
  9488                           
  9489                           ; BSR set to: 0
  9490  00333A  0100               	movlb	0	; () banked
  9491  00333C  90D8               	bcf	status,0,c
  9492  00333E  33BC               	rrcf	___fladd@grs& (0+255),f,b
  9493  003340  0100               	movlb	0	; () banked
  9494  003342  51BC               	movf	___fladd@grs& (0+255),w,b
  9495  003344  0901               	iorlw	1
  9496  003346  0100               	movlb	0	; () banked
  9497  003348  6FBC               	movwf	___fladd@grs& (0+255),b
  9498  00334A  D003               	goto	l6862
  9499  00334C                     l6860:
  9500                           
  9501                           ; BSR set to: 0
  9502  00334C  0100               	movlb	0	; () banked
  9503  00334E  90D8               	bcf	status,0,c
  9504  003350  33BC               	rrcf	___fladd@grs& (0+255),f,b
  9505  003352                     l6862:
  9506                           
  9507                           ; BSR set to: 0
  9508  003352  0100               	movlb	0	; () banked
  9509  003354  A1A9               	btfss	___fladd@b& (0+255),0,b
  9510  003356  D002               	goto	l6866
  9511                           
  9512                           ; BSR set to: 0
  9513  003358  0100               	movlb	0	; () banked
  9514  00335A  8FBC               	bsf	___fladd@grs& (0+255),7,b
  9515  00335C                     l6866:
  9516                           
  9517                           ; BSR set to: 0
  9518  00335C  0100               	movlb	0	; () banked
  9519  00335E  35AC               	rlcf	(___fladd@b+3)& (0+255),w,b
  9520  003360  33AC               	rrcf	(___fladd@b+3)& (0+255),f,b
  9521  003362  33AB               	rrcf	(___fladd@b+2)& (0+255),f,b
  9522  003364  33AA               	rrcf	(___fladd@b+1)& (0+255),f,b
  9523  003366  33A9               	rrcf	___fladd@b& (0+255),f,b
  9524                           
  9525                           ; BSR set to: 0
  9526  003368  0100               	movlb	0	; () banked
  9527  00336A  2BBB               	incf	___fladd@bexp& (0+255),f,b
  9528                           
  9529                           ; BSR set to: 0
  9530  00336C  D0AF               	goto	l6906
  9531  00336E                     l6870:
  9532                           
  9533                           ; BSR set to: 0
  9534  00336E  0100               	movlb	0	; () banked
  9535  003370  51AD               	movf	___fladd@a& (0+255),w,b
  9536  003372  0100               	movlb	0	; () banked
  9537  003374  5DA9               	subwf	___fladd@b& (0+255),w,b
  9538  003376  0100               	movlb	0	; () banked
  9539  003378  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9540  00337A  0100               	movlb	0	; () banked
  9541  00337C  59AA               	subwfb	(___fladd@b+1)& (0+255),w,b
  9542  00337E  0100               	movlb	0	; () banked
  9543  003380  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9544  003382  0100               	movlb	0	; () banked
  9545  003384  59AB               	subwfb	(___fladd@b+2)& (0+255),w,b
  9546  003386  0100               	movlb	0	; () banked
  9547  003388  51AC               	movf	(___fladd@b+3)& (0+255),w,b
  9548  00338A  0A80               	xorlw	128
  9549  00338C  0100               	movlb	0	; () banked
  9550  00338E  6FB1               	movwf	??___fladd& (0+255),b
  9551  003390  0100               	movlb	0	; () banked
  9552  003392  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9553  003394  0A80               	xorlw	128
  9554  003396  0100               	movlb	0	; () banked
  9555  003398  59B1               	subwfb	??___fladd& (0+255),w,b
  9556  00339A  B0D8               	btfsc	status,0,c
  9557  00339C  D050               	goto	l6880
  9558                           
  9559                           ; BSR set to: 0
  9560  00339E  C0A9  F0B1         	movff	___fladd@b,??___fladd
  9561  0033A2  C0AA  F0B2         	movff	___fladd@b+1,??___fladd+1
  9562  0033A6  C0AB  F0B3         	movff	___fladd@b+2,??___fladd+2
  9563  0033AA  C0AC  F0B4         	movff	___fladd@b+3,??___fladd+3
  9564  0033AE  0100               	movlb	0	; () banked
  9565  0033B0  1FB1               	comf	??___fladd& (0+255),f,b
  9566  0033B2  1FB2               	comf	(??___fladd+1)& (0+255),f,b
  9567  0033B4  1FB3               	comf	(??___fladd+2)& (0+255),f,b
  9568  0033B6  1FB4               	comf	(??___fladd+3)& (0+255),f,b
  9569  0033B8  2BB1               	incf	??___fladd& (0+255),f,b
  9570  0033BA  0E00               	movlw	0
  9571  0033BC  23B2               	addwfc	(??___fladd+1)& (0+255),f,b
  9572  0033BE  23B3               	addwfc	(??___fladd+2)& (0+255),f,b
  9573  0033C0  23B4               	addwfc	(??___fladd+3)& (0+255),f,b
  9574  0033C2  0100               	movlb	0	; () banked
  9575  0033C4  51AD               	movf	___fladd@a& (0+255),w,b
  9576  0033C6  0100               	movlb	0	; () banked
  9577  0033C8  25B1               	addwf	??___fladd& (0+255),w,b
  9578  0033CA  0100               	movlb	0	; () banked
  9579  0033CC  6FB5               	movwf	(??___fladd+4)& (0+255),b
  9580  0033CE  0100               	movlb	0	; () banked
  9581  0033D0  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9582  0033D2  0100               	movlb	0	; () banked
  9583  0033D4  21B2               	addwfc	(??___fladd+1)& (0+255),w,b
  9584  0033D6  0100               	movlb	0	; () banked
  9585  0033D8  6FB6               	movwf	(??___fladd+5)& (0+255),b
  9586  0033DA  0100               	movlb	0	; () banked
  9587  0033DC  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9588  0033DE  0100               	movlb	0	; () banked
  9589  0033E0  21B3               	addwfc	(??___fladd+2)& (0+255),w,b
  9590  0033E2  0100               	movlb	0	; () banked
  9591  0033E4  6FB7               	movwf	(??___fladd+6)& (0+255),b
  9592  0033E6  0100               	movlb	0	; () banked
  9593  0033E8  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9594  0033EA  0100               	movlb	0	; () banked
  9595  0033EC  21B4               	addwfc	(??___fladd+3)& (0+255),w,b
  9596  0033EE  0100               	movlb	0	; () banked
  9597  0033F0  6FB8               	movwf	(??___fladd+7)& (0+255),b
  9598  0033F2  0EFF               	movlw	255
  9599  0033F4  0100               	movlb	0	; () banked
  9600  0033F6  25B5               	addwf	(??___fladd+4)& (0+255),w,b
  9601  0033F8  0100               	movlb	0	; () banked
  9602  0033FA  6FA9               	movwf	___fladd@b& (0+255),b
  9603  0033FC  0EFF               	movlw	255
  9604  0033FE  0100               	movlb	0	; () banked
  9605  003400  21B6               	addwfc	(??___fladd+5)& (0+255),w,b
  9606  003402  0100               	movlb	0	; () banked
  9607  003404  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9608  003406  0EFF               	movlw	255
  9609  003408  0100               	movlb	0	; () banked
  9610  00340A  21B7               	addwfc	(??___fladd+6)& (0+255),w,b
  9611  00340C  0100               	movlb	0	; () banked
  9612  00340E  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9613  003410  0EFF               	movlw	255
  9614  003412  0100               	movlb	0	; () banked
  9615  003414  21B8               	addwfc	(??___fladd+7)& (0+255),w,b
  9616  003416  0100               	movlb	0	; () banked
  9617  003418  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9618  00341A  0E80               	movlw	128
  9619  00341C  0100               	movlb	0	; () banked
  9620  00341E  1BB9               	xorwf	___fladd@signs& (0+255),f,b
  9621                           
  9622                           ; BSR set to: 0
  9623  003420  0100               	movlb	0	; () banked
  9624  003422  6DBC               	negf	___fladd@grs& (0+255),b
  9625                           
  9626                           ; BSR set to: 0
  9627  003424  0100               	movlb	0	; () banked
  9628  003426  51BC               	movf	___fladd@grs& (0+255),w,b
  9629  003428  0100               	movlb	0	; () banked
  9630  00342A  A4D8               	btfss	status,2,c
  9631  00342C  D018               	goto	l1372
  9632                           
  9633                           ; BSR set to: 0
  9634  00342E  0E01               	movlw	1
  9635  003430  0100               	movlb	0	; () banked
  9636  003432  27A9               	addwf	___fladd@b& (0+255),f,b
  9637  003434  0E00               	movlw	0
  9638  003436  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
  9639  003438  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
  9640  00343A  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
  9641                           
  9642                           ; BSR set to: 0
  9643  00343C  D010               	goto	l1372
  9644  00343E                     l6880:
  9645                           
  9646                           ; BSR set to: 0
  9647  00343E  0100               	movlb	0	; () banked
  9648  003440  51AD               	movf	___fladd@a& (0+255),w,b
  9649  003442  0100               	movlb	0	; () banked
  9650  003444  5FA9               	subwf	___fladd@b& (0+255),f,b
  9651  003446  0100               	movlb	0	; () banked
  9652  003448  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9653  00344A  0100               	movlb	0	; () banked
  9654  00344C  5BAA               	subwfb	(___fladd@b+1)& (0+255),f,b
  9655  00344E  0100               	movlb	0	; () banked
  9656  003450  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9657  003452  0100               	movlb	0	; () banked
  9658  003454  5BAB               	subwfb	(___fladd@b+2)& (0+255),f,b
  9659  003456  0100               	movlb	0	; () banked
  9660  003458  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9661  00345A  0100               	movlb	0	; () banked
  9662  00345C  5BAC               	subwfb	(___fladd@b+3)& (0+255),f,b
  9663  00345E                     l1372:
  9664                           
  9665                           ; BSR set to: 0
  9666  00345E  0100               	movlb	0	; () banked
  9667  003460  51A9               	movf	___fladd@b& (0+255),w,b
  9668  003462  0100               	movlb	0	; () banked
  9669  003464  11AA               	iorwf	(___fladd@b+1)& (0+255),w,b
  9670  003466  0100               	movlb	0	; () banked
  9671  003468  11AB               	iorwf	(___fladd@b+2)& (0+255),w,b
  9672  00346A  0100               	movlb	0	; () banked
  9673  00346C  11AC               	iorwf	(___fladd@b+3)& (0+255),w,b
  9674  00346E  A4D8               	btfss	status,2,c
  9675  003470  D02A               	goto	l6904
  9676                           
  9677                           ; BSR set to: 0
  9678  003472  0100               	movlb	0	; () banked
  9679  003474  51BC               	movf	___fladd@grs& (0+255),w,b
  9680  003476  0100               	movlb	0	; () banked
  9681  003478  A4D8               	btfss	status,2,c
  9682  00347A  D025               	goto	l6904
  9683                           
  9684                           ; BSR set to: 0
  9685  00347C  0E00               	movlw	0
  9686  00347E  0100               	movlb	0	; () banked
  9687  003480  6FA9               	movwf	?___fladd& (0+255),b
  9688  003482  0E00               	movlw	0
  9689  003484  6FAA               	movwf	(?___fladd+1)& (0+255),b
  9690  003486  0E00               	movlw	0
  9691  003488  6FAB               	movwf	(?___fladd+2)& (0+255),b
  9692  00348A  0E00               	movlw	0
  9693  00348C  6FAC               	movwf	(?___fladd+3)& (0+255),b
  9694                           
  9695                           ; BSR set to: 0
  9696  00348E  0012               	return	
  9697  003490                     l6888:
  9698                           
  9699                           ; BSR set to: 0
  9700  003490  0100               	movlb	0	; () banked
  9701  003492  90D8               	bcf	status,0,c
  9702  003494  37A9               	rlcf	___fladd@b& (0+255),f,b
  9703  003496  37AA               	rlcf	(___fladd@b+1)& (0+255),f,b
  9704  003498  37AB               	rlcf	(___fladd@b+2)& (0+255),f,b
  9705  00349A  37AC               	rlcf	(___fladd@b+3)& (0+255),f,b
  9706                           
  9707                           ; BSR set to: 0
  9708  00349C  0100               	movlb	0	; () banked
  9709  00349E  AFBC               	btfss	___fladd@grs& (0+255),7,b
  9710  0034A0  D002               	goto	l6894
  9711                           
  9712                           ; BSR set to: 0
  9713  0034A2  0100               	movlb	0	; () banked
  9714  0034A4  81A9               	bsf	___fladd@b& (0+255),0,b
  9715  0034A6                     l6894:
  9716                           
  9717                           ; BSR set to: 0
  9718  0034A6  0100               	movlb	0	; () banked
  9719  0034A8  A1BC               	btfss	___fladd@grs& (0+255),0,b
  9720  0034AA  D003               	goto	l6898
  9721                           
  9722                           ; BSR set to: 0
  9723  0034AC  80D8               	bsf	status,0,c
  9724  0034AE  0100               	movlb	0	; () banked
  9725  0034B0  D002               	goto	L5
  9726  0034B2                     l6898:
  9727                           
  9728                           ; BSR set to: 0
  9729  0034B2  0100               	movlb	0	; () banked
  9730  0034B4  90D8               	bcf	status,0,c
  9731  0034B6                     L5:
  9732  0034B6  37BC               	rlcf	___fladd@grs& (0+255),f,b
  9733                           
  9734                           ; BSR set to: 0
  9735                           
  9736                           ; BSR set to: 0
  9737  0034B8  0100               	movlb	0	; () banked
  9738  0034BA  51BB               	movf	___fladd@bexp& (0+255),w,b
  9739  0034BC  0100               	movlb	0	; () banked
  9740  0034BE  B4D8               	btfsc	status,2,c
  9741  0034C0  D002               	goto	l6904
  9742                           
  9743                           ; BSR set to: 0
  9744  0034C2  0100               	movlb	0	; () banked
  9745  0034C4  07BB               	decf	___fladd@bexp& (0+255),f,b
  9746  0034C6                     l6904:
  9747                           
  9748                           ; BSR set to: 0
  9749  0034C6  0100               	movlb	0	; () banked
  9750  0034C8  AFAB               	btfss	(___fladd@b+2)& (0+255),7,b
  9751  0034CA  D7E2               	goto	l6888
  9752  0034CC                     l6906:
  9753                           
  9754                           ; BSR set to: 0
  9755  0034CC  0E00               	movlw	0
  9756  0034CE  0100               	movlb	0	; () banked
  9757  0034D0  6FBA               	movwf	___fladd@aexp& (0+255),b
  9758                           
  9759                           ; BSR set to: 0
  9760  0034D2  0100               	movlb	0	; () banked
  9761  0034D4  AFBC               	btfss	___fladd@grs& (0+255),7,b
  9762  0034D6  D00D               	goto	l1381
  9763                           
  9764                           ; BSR set to: 0
  9765  0034D8  C0BC  F0B1         	movff	___fladd@grs,??___fladd
  9766  0034DC  0E7F               	movlw	127
  9767  0034DE  0100               	movlb	0	; () banked
  9768  0034E0  17B1               	andwf	??___fladd& (0+255),f,b
  9769  0034E2  A4D8               	btfss	status,2,c
  9770  0034E4  D003               	goto	l6914
  9771                           
  9772                           ; BSR set to: 0
  9773                           
  9774                           ; BSR set to: 0
  9775  0034E6  0100               	movlb	0	; () banked
  9776  0034E8  A1A9               	btfss	___fladd@b& (0+255),0,b
  9777  0034EA  D003               	goto	l1381
  9778  0034EC                     l6914:
  9779                           
  9780                           ; BSR set to: 0
  9781  0034EC  0E01               	movlw	1
  9782  0034EE  0100               	movlb	0	; () banked
  9783  0034F0  6FBA               	movwf	___fladd@aexp& (0+255),b
  9784  0034F2                     l1381:
  9785                           
  9786                           ; BSR set to: 0
  9787  0034F2  0100               	movlb	0	; () banked
  9788  0034F4  51BA               	movf	___fladd@aexp& (0+255),w,b
  9789  0034F6  0100               	movlb	0	; () banked
  9790  0034F8  B4D8               	btfsc	status,2,c
  9791  0034FA  D026               	goto	l6924
  9792                           
  9793                           ; BSR set to: 0
  9794  0034FC  0E01               	movlw	1
  9795  0034FE  0100               	movlb	0	; () banked
  9796  003500  27A9               	addwf	___fladd@b& (0+255),f,b
  9797  003502  0E00               	movlw	0
  9798  003504  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
  9799  003506  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
  9800  003508  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
  9801                           
  9802                           ; BSR set to: 0
  9803  00350A  0100               	movlb	0	; () banked
  9804  00350C  A1AC               	btfss	(___fladd@b+3)& (0+255),0,b
  9805  00350E  D01C               	goto	l6924
  9806                           
  9807                           ; BSR set to: 0
  9808  003510  C0A9  F0B1         	movff	___fladd@b,??___fladd
  9809  003514  C0AA  F0B2         	movff	___fladd@b+1,??___fladd+1
  9810  003518  C0AB  F0B3         	movff	___fladd@b+2,??___fladd+2
  9811  00351C  C0AC  F0B4         	movff	___fladd@b+3,??___fladd+3
  9812  003520  0100               	movlb	0	; () banked
  9813  003522  35B4               	rlcf	(??___fladd+3)& (0+255),w,b
  9814  003524  33B4               	rrcf	(??___fladd+3)& (0+255),f,b
  9815  003526  33B3               	rrcf	(??___fladd+2)& (0+255),f,b
  9816  003528  33B2               	rrcf	(??___fladd+1)& (0+255),f,b
  9817  00352A  33B1               	rrcf	??___fladd& (0+255),f,b
  9818  00352C  C0B1  F0A9         	movff	??___fladd,___fladd@b
  9819  003530  C0B2  F0AA         	movff	??___fladd+1,___fladd@b+1
  9820  003534  C0B3  F0AB         	movff	??___fladd+2,___fladd@b+2
  9821  003538  C0B4  F0AC         	movff	??___fladd+3,___fladd@b+3
  9822  00353C  0100               	movlb	0	; () banked
  9823  00353E  29BB               	incf	___fladd@bexp& (0+255),w,b
  9824  003540  B4D8               	btfsc	status,2,c
  9825  003542  D002               	goto	l6924
  9826                           
  9827                           ; BSR set to: 0
  9828  003544  0100               	movlb	0	; () banked
  9829  003546  2BBB               	incf	___fladd@bexp& (0+255),f,b
  9830  003548                     l6924:
  9831                           
  9832                           ; BSR set to: 0
  9833  003548  0100               	movlb	0	; () banked
  9834  00354A  29BB               	incf	___fladd@bexp& (0+255),w,b
  9835  00354C  B4D8               	btfsc	status,2,c
  9836  00354E  D005               	goto	l6928
  9837                           
  9838                           ; BSR set to: 0
  9839  003550  0100               	movlb	0	; () banked
  9840  003552  51BB               	movf	___fladd@bexp& (0+255),w,b
  9841  003554  0100               	movlb	0	; () banked
  9842  003556  A4D8               	btfss	status,2,c
  9843  003558  D011               	goto	l6932
  9844  00355A                     l6928:
  9845                           
  9846                           ; BSR set to: 0
  9847  00355A  0E00               	movlw	0
  9848  00355C  0100               	movlb	0	; () banked
  9849  00355E  6FA9               	movwf	___fladd@b& (0+255),b
  9850  003560  0E00               	movlw	0
  9851  003562  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9852  003564  0E00               	movlw	0
  9853  003566  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9854  003568  0E00               	movlw	0
  9855  00356A  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9856  00356C  0100               	movlb	0	; () banked
  9857  00356E  51BB               	movf	___fladd@bexp& (0+255),w,b
  9858  003570  0100               	movlb	0	; () banked
  9859  003572  A4D8               	btfss	status,2,c
  9860  003574  D003               	goto	l6932
  9861                           
  9862                           ; BSR set to: 0
  9863  003576  0E00               	movlw	0
  9864  003578  0100               	movlb	0	; () banked
  9865  00357A  6FB9               	movwf	___fladd@signs& (0+255),b
  9866  00357C                     l6932:
  9867                           
  9868                           ; BSR set to: 0
  9869  00357C  0100               	movlb	0	; () banked
  9870  00357E  A1BB               	btfss	___fladd@bexp& (0+255),0,b
  9871  003580  D003               	goto	l6936
  9872                           
  9873                           ; BSR set to: 0
  9874  003582  0100               	movlb	0	; () banked
  9875  003584  8FAB               	bsf	(___fladd@b+2)& (0+255),7,b
  9876  003586  D002               	goto	l6938
  9877  003588                     l6936:
  9878                           
  9879                           ; BSR set to: 0
  9880  003588  0100               	movlb	0	; () banked
  9881  00358A  9FAB               	bcf	(___fladd@b+2)& (0+255),7,b
  9882  00358C                     l6938:
  9883                           
  9884                           ; BSR set to: 0
  9885  00358C  0100               	movlb	0	; () banked
  9886  00358E  90D8               	bcf	status,0,c
  9887  003590  31BB               	rrcf	___fladd@bexp& (0+255),w,b
  9888  003592  0100               	movlb	0	; () banked
  9889  003594  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9890                           
  9891                           ; BSR set to: 0
  9892  003596  0100               	movlb	0	; () banked
  9893  003598  AFB9               	btfss	___fladd@signs& (0+255),7,b
  9894  00359A  D002               	goto	l6944
  9895                           
  9896                           ; BSR set to: 0
  9897  00359C  0100               	movlb	0	; () banked
  9898  00359E  8FAC               	bsf	(___fladd@b+3)& (0+255),7,b
  9899  0035A0                     l6944:
  9900                           
  9901                           ; BSR set to: 0
  9902  0035A0  C0A9  F0A9         	movff	___fladd@b,?___fladd
  9903  0035A4  C0AA  F0AA         	movff	___fladd@b+1,?___fladd+1
  9904  0035A8  C0AB  F0AB         	movff	___fladd@b+2,?___fladd+2
  9905  0035AC  C0AC  F0AC         	movff	___fladd@b+3,?___fladd+3
  9906  0035B0  0012               	return	
  9907  0035B2                     __end_of___fladd:
  9908                           	opt stack 0
  9909                           tblptru	equ	0xFF8
  9910                           tblptrh	equ	0xFF7
  9911                           tblptrl	equ	0xFF6
  9912                           tablat	equ	0xFF5
  9913                           prodh	equ	0xFF4
  9914                           prodl	equ	0xFF3
  9915                           postinc0	equ	0xFEE
  9916                           wreg	equ	0xFE8
  9917                           postdec1	equ	0xFE5
  9918                           fsr1l	equ	0xFE1
  9919                           indf2	equ	0xFDF
  9920                           postinc2	equ	0xFDE
  9921                           postdec2	equ	0xFDD
  9922                           fsr2h	equ	0xFDA
  9923                           fsr2l	equ	0xFD9
  9924                           status	equ	0xFD8
  9925                           
  9926 ;; *************** function ___flge *****************
  9927 ;; Defined at:
  9928 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  9929 ;; Parameters:    Size  Location     Type
  9930 ;;  ff1             4  101[BANK0 ] unsigned char 
  9931 ;;  ff2             4  105[BANK0 ] unsigned char 
  9932 ;; Auto vars:     Size  Location     Type
  9933 ;;		None
  9934 ;; Return value:  Size  Location     Type
  9935 ;;		None               void
  9936 ;; Registers used:
  9937 ;;		wreg, status,2, status,0
  9938 ;; Tracked objects:
  9939 ;;		On entry : 0/0
  9940 ;;		On exit  : 0/0
  9941 ;;		Unchanged: 0/0
  9942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9943 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9945 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9946 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9947 ;;Total ram usage:       12 bytes
  9948 ;; Hardware stack levels used:    1
  9949 ;; Hardware stack levels required when called:    4
  9950 ;; This function calls:
  9951 ;;		Nothing
  9952 ;; This function is called by:
  9953 ;;		_parallelo
  9954 ;;		_asin
  9955 ;;		_atan
  9956 ;;		_cos
  9957 ;;		_sin
  9958 ;;		_floor
  9959 ;; This function uses a non-reentrant model
  9960 ;;
  9961                           
  9962                           	psect	text24
  9963  005A4C                     __ptext24:
  9964                           	opt stack 0
  9965  005A4C                     ___flge:
  9966                           	opt stack 22
  9967                           
  9968                           ; BSR set to: 0
  9969                           ;incstack = 0
  9970  005A4C  0E00               	movlw	0
  9971  005A4E  0100               	movlb	0	; () banked
  9972  005A50  15C5               	andwf	___flge@ff1& (0+255),w,b
  9973  005A52  0100               	movlb	0	; () banked
  9974  005A54  6FCD               	movwf	??___flge& (0+255),b
  9975  005A56  0E00               	movlw	0
  9976  005A58  0100               	movlb	0	; () banked
  9977  005A5A  15C6               	andwf	(___flge@ff1+1)& (0+255),w,b
  9978  005A5C  0100               	movlb	0	; () banked
  9979  005A5E  6FCE               	movwf	(??___flge+1)& (0+255),b
  9980  005A60  0E80               	movlw	128
  9981  005A62  0100               	movlb	0	; () banked
  9982  005A64  15C7               	andwf	(___flge@ff1+2)& (0+255),w,b
  9983  005A66  0100               	movlb	0	; () banked
  9984  005A68  6FCF               	movwf	(??___flge+2)& (0+255),b
  9985  005A6A  0E7F               	movlw	127
  9986  005A6C  0100               	movlb	0	; () banked
  9987  005A6E  15C8               	andwf	(___flge@ff1+3)& (0+255),w,b
  9988  005A70  0100               	movlb	0	; () banked
  9989  005A72  6FD0               	movwf	(??___flge+3)& (0+255),b
  9990  005A74  0100               	movlb	0	; () banked
  9991  005A76  51CD               	movf	??___flge& (0+255),w,b
  9992  005A78  0100               	movlb	0	; () banked
  9993  005A7A  11CE               	iorwf	(??___flge+1)& (0+255),w,b
  9994  005A7C  0100               	movlb	0	; () banked
  9995  005A7E  11CF               	iorwf	(??___flge+2)& (0+255),w,b
  9996  005A80  0100               	movlb	0	; () banked
  9997  005A82  11D0               	iorwf	(??___flge+3)& (0+255),w,b
  9998  005A84  A4D8               	btfss	status,2,c
  9999  005A86  D009               	goto	l7082
 10000                           
 10001                           ; BSR set to: 0
 10002  005A88  0E00               	movlw	0
 10003  005A8A  0100               	movlb	0	; () banked
 10004  005A8C  6FC5               	movwf	___flge@ff1& (0+255),b
 10005  005A8E  0E00               	movlw	0
 10006  005A90  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
 10007  005A92  0E00               	movlw	0
 10008  005A94  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
 10009  005A96  0E00               	movlw	0
 10010  005A98  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
 10011  005A9A                     l7082:
 10012                           
 10013                           ; BSR set to: 0
 10014  005A9A  0E00               	movlw	0
 10015  005A9C  0100               	movlb	0	; () banked
 10016  005A9E  15C9               	andwf	___flge@ff2& (0+255),w,b
 10017  005AA0  0100               	movlb	0	; () banked
 10018  005AA2  6FCD               	movwf	??___flge& (0+255),b
 10019  005AA4  0E00               	movlw	0
 10020  005AA6  0100               	movlb	0	; () banked
 10021  005AA8  15CA               	andwf	(___flge@ff2+1)& (0+255),w,b
 10022  005AAA  0100               	movlb	0	; () banked
 10023  005AAC  6FCE               	movwf	(??___flge+1)& (0+255),b
 10024  005AAE  0E80               	movlw	128
 10025  005AB0  0100               	movlb	0	; () banked
 10026  005AB2  15CB               	andwf	(___flge@ff2+2)& (0+255),w,b
 10027  005AB4  0100               	movlb	0	; () banked
 10028  005AB6  6FCF               	movwf	(??___flge+2)& (0+255),b
 10029  005AB8  0E7F               	movlw	127
 10030  005ABA  0100               	movlb	0	; () banked
 10031  005ABC  15CC               	andwf	(___flge@ff2+3)& (0+255),w,b
 10032  005ABE  0100               	movlb	0	; () banked
 10033  005AC0  6FD0               	movwf	(??___flge+3)& (0+255),b
 10034  005AC2  0100               	movlb	0	; () banked
 10035  005AC4  51CD               	movf	??___flge& (0+255),w,b
 10036  005AC6  0100               	movlb	0	; () banked
 10037  005AC8  11CE               	iorwf	(??___flge+1)& (0+255),w,b
 10038  005ACA  0100               	movlb	0	; () banked
 10039  005ACC  11CF               	iorwf	(??___flge+2)& (0+255),w,b
 10040  005ACE  0100               	movlb	0	; () banked
 10041  005AD0  11D0               	iorwf	(??___flge+3)& (0+255),w,b
 10042  005AD2  A4D8               	btfss	status,2,c
 10043  005AD4  D009               	goto	l7086
 10044                           
 10045                           ; BSR set to: 0
 10046  005AD6  0E00               	movlw	0
 10047  005AD8  0100               	movlb	0	; () banked
 10048  005ADA  6FC9               	movwf	___flge@ff2& (0+255),b
 10049  005ADC  0E00               	movlw	0
 10050  005ADE  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
 10051  005AE0  0E00               	movlw	0
 10052  005AE2  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
 10053  005AE4  0E00               	movlw	0
 10054  005AE6  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
 10055  005AE8                     l7086:
 10056                           
 10057                           ; BSR set to: 0
 10058  005AE8  0100               	movlb	0	; () banked
 10059  005AEA  AFC8               	btfss	(___flge@ff1+3)& (0+255),7,b
 10060  005AEC  D026               	goto	l7090
 10061                           
 10062                           ; BSR set to: 0
 10063  005AEE  C0C5  F0CD         	movff	___flge@ff1,??___flge
 10064  005AF2  C0C6  F0CE         	movff	___flge@ff1+1,??___flge+1
 10065  005AF6  C0C7  F0CF         	movff	___flge@ff1+2,??___flge+2
 10066  005AFA  C0C8  F0D0         	movff	___flge@ff1+3,??___flge+3
 10067  005AFE  0100               	movlb	0	; () banked
 10068  005B00  1FCD               	comf	??___flge& (0+255),f,b
 10069  005B02  1FCE               	comf	(??___flge+1)& (0+255),f,b
 10070  005B04  1FCF               	comf	(??___flge+2)& (0+255),f,b
 10071  005B06  1FD0               	comf	(??___flge+3)& (0+255),f,b
 10072  005B08  2BCD               	incf	??___flge& (0+255),f,b
 10073  005B0A  0E00               	movlw	0
 10074  005B0C  23CE               	addwfc	(??___flge+1)& (0+255),f,b
 10075  005B0E  23CF               	addwfc	(??___flge+2)& (0+255),f,b
 10076  005B10  23D0               	addwfc	(??___flge+3)& (0+255),f,b
 10077  005B12  0E00               	movlw	0
 10078  005B14  0100               	movlb	0	; () banked
 10079  005B16  25CD               	addwf	??___flge& (0+255),w,b
 10080  005B18  0100               	movlb	0	; () banked
 10081  005B1A  6FC5               	movwf	___flge@ff1& (0+255),b
 10082  005B1C  0E00               	movlw	0
 10083  005B1E  0100               	movlb	0	; () banked
 10084  005B20  21CE               	addwfc	(??___flge+1)& (0+255),w,b
 10085  005B22  0100               	movlb	0	; () banked
 10086  005B24  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
 10087  005B26  0E00               	movlw	0
 10088  005B28  0100               	movlb	0	; () banked
 10089  005B2A  21CF               	addwfc	(??___flge+2)& (0+255),w,b
 10090  005B2C  0100               	movlb	0	; () banked
 10091  005B2E  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
 10092  005B30  0E80               	movlw	128
 10093  005B32  0100               	movlb	0	; () banked
 10094  005B34  21D0               	addwfc	(??___flge+3)& (0+255),w,b
 10095  005B36  0100               	movlb	0	; () banked
 10096  005B38  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
 10097  005B3A                     l7090:
 10098                           
 10099                           ; BSR set to: 0
 10100  005B3A  0100               	movlb	0	; () banked
 10101  005B3C  AFCC               	btfss	(___flge@ff2+3)& (0+255),7,b
 10102  005B3E  D026               	goto	l1103
 10103                           
 10104                           ; BSR set to: 0
 10105  005B40  C0C9  F0CD         	movff	___flge@ff2,??___flge
 10106  005B44  C0CA  F0CE         	movff	___flge@ff2+1,??___flge+1
 10107  005B48  C0CB  F0CF         	movff	___flge@ff2+2,??___flge+2
 10108  005B4C  C0CC  F0D0         	movff	___flge@ff2+3,??___flge+3
 10109  005B50  0100               	movlb	0	; () banked
 10110  005B52  1FCD               	comf	??___flge& (0+255),f,b
 10111  005B54  1FCE               	comf	(??___flge+1)& (0+255),f,b
 10112  005B56  1FCF               	comf	(??___flge+2)& (0+255),f,b
 10113  005B58  1FD0               	comf	(??___flge+3)& (0+255),f,b
 10114  005B5A  2BCD               	incf	??___flge& (0+255),f,b
 10115  005B5C  0E00               	movlw	0
 10116  005B5E  23CE               	addwfc	(??___flge+1)& (0+255),f,b
 10117  005B60  23CF               	addwfc	(??___flge+2)& (0+255),f,b
 10118  005B62  23D0               	addwfc	(??___flge+3)& (0+255),f,b
 10119  005B64  0E00               	movlw	0
 10120  005B66  0100               	movlb	0	; () banked
 10121  005B68  25CD               	addwf	??___flge& (0+255),w,b
 10122  005B6A  0100               	movlb	0	; () banked
 10123  005B6C  6FC9               	movwf	___flge@ff2& (0+255),b
 10124  005B6E  0E00               	movlw	0
 10125  005B70  0100               	movlb	0	; () banked
 10126  005B72  21CE               	addwfc	(??___flge+1)& (0+255),w,b
 10127  005B74  0100               	movlb	0	; () banked
 10128  005B76  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
 10129  005B78  0E00               	movlw	0
 10130  005B7A  0100               	movlb	0	; () banked
 10131  005B7C  21CF               	addwfc	(??___flge+2)& (0+255),w,b
 10132  005B7E  0100               	movlb	0	; () banked
 10133  005B80  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
 10134  005B82  0E80               	movlw	128
 10135  005B84  0100               	movlb	0	; () banked
 10136  005B86  21D0               	addwfc	(??___flge+3)& (0+255),w,b
 10137  005B88  0100               	movlb	0	; () banked
 10138  005B8A  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
 10139  005B8C                     l1103:
 10140                           
 10141                           ; BSR set to: 0
 10142  005B8C  0E00               	movlw	0
 10143  005B8E  0100               	movlb	0	; () banked
 10144  005B90  1BC5               	xorwf	___flge@ff1& (0+255),f,b
 10145  005B92  0E00               	movlw	0
 10146  005B94  1BC6               	xorwf	(___flge@ff1+1)& (0+255),f,b
 10147  005B96  0E00               	movlw	0
 10148  005B98  1BC7               	xorwf	(___flge@ff1+2)& (0+255),f,b
 10149  005B9A  0E80               	movlw	128
 10150  005B9C  1BC8               	xorwf	(___flge@ff1+3)& (0+255),f,b
 10151  005B9E  0E00               	movlw	0
 10152  005BA0  0100               	movlb	0	; () banked
 10153  005BA2  1BC9               	xorwf	___flge@ff2& (0+255),f,b
 10154  005BA4  0E00               	movlw	0
 10155  005BA6  1BCA               	xorwf	(___flge@ff2+1)& (0+255),f,b
 10156  005BA8  0E00               	movlw	0
 10157  005BAA  1BCB               	xorwf	(___flge@ff2+2)& (0+255),f,b
 10158  005BAC  0E80               	movlw	128
 10159  005BAE  1BCC               	xorwf	(___flge@ff2+3)& (0+255),f,b
 10160  005BB0  0100               	movlb	0	; () banked
 10161  005BB2  51C9               	movf	___flge@ff2& (0+255),w,b
 10162  005BB4  0100               	movlb	0	; () banked
 10163  005BB6  5DC5               	subwf	___flge@ff1& (0+255),w,b
 10164  005BB8  0100               	movlb	0	; () banked
 10165  005BBA  51CA               	movf	(___flge@ff2+1)& (0+255),w,b
 10166  005BBC  0100               	movlb	0	; () banked
 10167  005BBE  59C6               	subwfb	(___flge@ff1+1)& (0+255),w,b
 10168  005BC0  0100               	movlb	0	; () banked
 10169  005BC2  51CB               	movf	(___flge@ff2+2)& (0+255),w,b
 10170  005BC4  0100               	movlb	0	; () banked
 10171  005BC6  59C7               	subwfb	(___flge@ff1+2)& (0+255),w,b
 10172  005BC8  0100               	movlb	0	; () banked
 10173  005BCA  51CC               	movf	(___flge@ff2+3)& (0+255),w,b
 10174  005BCC  0100               	movlb	0	; () banked
 10175  005BCE  59C8               	subwfb	(___flge@ff1+3)& (0+255),w,b
 10176  005BD0  B0D8               	btfsc	status,0,c
 10177  005BD2  D002               	goto	l7096
 10178                           
 10179                           ; BSR set to: 0
 10180  005BD4  90D8               	bcf	status,0,c
 10181  005BD6  0012               	return	
 10182  005BD8                     l7096:
 10183                           
 10184                           ; BSR set to: 0
 10185  005BD8  80D8               	bsf	status,0,c
 10186                           
 10187                           ; BSR set to: 0
 10188  005BDA  0012               	return	
 10189  005BDC                     __end_of___flge:
 10190                           	opt stack 0
 10191                           tblptru	equ	0xFF8
 10192                           tblptrh	equ	0xFF7
 10193                           tblptrl	equ	0xFF6
 10194                           tablat	equ	0xFF5
 10195                           prodh	equ	0xFF4
 10196                           prodl	equ	0xFF3
 10197                           postinc0	equ	0xFEE
 10198                           wreg	equ	0xFE8
 10199                           postdec1	equ	0xFE5
 10200                           fsr1l	equ	0xFE1
 10201                           indf2	equ	0xFDF
 10202                           postinc2	equ	0xFDE
 10203                           postdec2	equ	0xFDD
 10204                           fsr2h	equ	0xFDA
 10205                           fsr2l	equ	0xFD9
 10206                           status	equ	0xFD8
 10207                           
 10208 ;; *************** function ___fldiv *****************
 10209 ;; Defined at:
 10210 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
 10211 ;; Parameters:    Size  Location     Type
 10212 ;;  b               4   23[BANK0 ] unsigned char 
 10213 ;;  a               4   27[BANK0 ] unsigned char 
 10214 ;; Auto vars:     Size  Location     Type
 10215 ;;  grs             4   42[BANK0 ] unsigned long 
 10216 ;;  rem             4   36[BANK0 ] unsigned long 
 10217 ;;  new_exp         2   40[BANK0 ] int 
 10218 ;;  aexp            1   47[BANK0 ] unsigned char 
 10219 ;;  bexp            1   46[BANK0 ] unsigned char 
 10220 ;;  sign            1   35[BANK0 ] unsigned char 
 10221 ;; Return value:  Size  Location     Type
 10222 ;;                  4   23[BANK0 ] unsigned char 
 10223 ;; Registers used:
 10224 ;;		wreg, status,2, status,0
 10225 ;; Tracked objects:
 10226 ;;		On entry : 0/0
 10227 ;;		On exit  : 0/0
 10228 ;;		Unchanged: 0/0
 10229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10230 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10231 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10232 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10233 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10234 ;;Total ram usage:       25 bytes
 10235 ;; Hardware stack levels used:    1
 10236 ;; Hardware stack levels required when called:    4
 10237 ;; This function calls:
 10238 ;;		Nothing
 10239 ;; This function is called by:
 10240 ;;		_parallelo
 10241 ;;		_matematica
 10242 ;;		_asin
 10243 ;;		_atan
 10244 ;;		_sin
 10245 ;; This function uses a non-reentrant model
 10246 ;;
 10247                           
 10248                           	psect	text25
 10249  00429A                     __ptext25:
 10250                           	opt stack 0
 10251  00429A                     ___fldiv:
 10252                           	opt stack 22
 10253                           
 10254                           ; BSR set to: 0
 10255                           ;incstack = 0
 10256  00429A  0100               	movlb	0	; () banked
 10257  00429C  517A               	movf	(___fldiv@b+3)& (0+255),w,b
 10258  00429E  0B80               	andlw	128
 10259  0042A0  0100               	movlb	0	; () banked
 10260  0042A2  6F83               	movwf	___fldiv@sign& (0+255),b
 10261  0042A4  0100               	movlb	0	; () banked
 10262  0042A6  517A               	movf	(___fldiv@b+3)& (0+255),w,b
 10263  0042A8  257A               	addwf	(___fldiv@b+3)& (0+255),w,b
 10264  0042AA  0100               	movlb	0	; () banked
 10265  0042AC  6F8E               	movwf	___fldiv@bexp& (0+255),b
 10266                           
 10267                           ; BSR set to: 0
 10268  0042AE  0100               	movlb	0	; () banked
 10269  0042B0  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
 10270  0042B2  D002               	goto	l7216
 10271                           
 10272                           ; BSR set to: 0
 10273  0042B4  0100               	movlb	0	; () banked
 10274  0042B6  818E               	bsf	___fldiv@bexp& (0+255),0,b
 10275  0042B8                     l7216:
 10276                           
 10277                           ; BSR set to: 0
 10278  0042B8  0100               	movlb	0	; () banked
 10279  0042BA  518E               	movf	___fldiv@bexp& (0+255),w,b
 10280  0042BC  0100               	movlb	0	; () banked
 10281  0042BE  B4D8               	btfsc	status,2,c
 10282  0042C0  D012               	goto	l7226
 10283                           
 10284                           ; BSR set to: 0
 10285  0042C2  0100               	movlb	0	; () banked
 10286  0042C4  298E               	incf	___fldiv@bexp& (0+255),w,b
 10287  0042C6  A4D8               	btfss	status,2,c
 10288  0042C8  D009               	goto	l7222
 10289                           
 10290                           ; BSR set to: 0
 10291  0042CA  0E00               	movlw	0
 10292  0042CC  0100               	movlb	0	; () banked
 10293  0042CE  6F77               	movwf	___fldiv@b& (0+255),b
 10294  0042D0  0E00               	movlw	0
 10295  0042D2  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10296  0042D4  0E00               	movlw	0
 10297  0042D6  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10298  0042D8  0E00               	movlw	0
 10299  0042DA  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10300  0042DC                     l7222:
 10301                           
 10302                           ; BSR set to: 0
 10303  0042DC  0100               	movlb	0	; () banked
 10304  0042DE  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
 10305                           
 10306                           ; BSR set to: 0
 10307  0042E0  0E00               	movlw	0
 10308  0042E2  0100               	movlb	0	; () banked
 10309  0042E4  D008               	goto	L6
 10310  0042E6                     l7226:
 10311                           
 10312                           ; BSR set to: 0
 10313  0042E6  0E00               	movlw	0
 10314  0042E8  0100               	movlb	0	; () banked
 10315  0042EA  6F77               	movwf	___fldiv@b& (0+255),b
 10316  0042EC  0E00               	movlw	0
 10317  0042EE  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10318  0042F0  0E00               	movlw	0
 10319  0042F2  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10320  0042F4  0E00               	movlw	0
 10321  0042F6                     L6:
 10322  0042F6  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10323                           
 10324                           ; BSR set to: 0
 10325                           
 10326                           ; BSR set to: 0
 10327  0042F8  0100               	movlb	0	; () banked
 10328  0042FA  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10329  0042FC  0B80               	andlw	128
 10330  0042FE  0100               	movlb	0	; () banked
 10331  004300  1B83               	xorwf	___fldiv@sign& (0+255),f,b
 10332                           
 10333                           ; BSR set to: 0
 10334  004302  0100               	movlb	0	; () banked
 10335  004304  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10336  004306  257E               	addwf	(___fldiv@a+3)& (0+255),w,b
 10337  004308  0100               	movlb	0	; () banked
 10338  00430A  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10339                           
 10340                           ; BSR set to: 0
 10341  00430C  0100               	movlb	0	; () banked
 10342  00430E  AF7D               	btfss	(___fldiv@a+2)& (0+255),7,b
 10343  004310  D002               	goto	l7236
 10344                           
 10345                           ; BSR set to: 0
 10346  004312  0100               	movlb	0	; () banked
 10347  004314  818F               	bsf	___fldiv@aexp& (0+255),0,b
 10348  004316                     l7236:
 10349                           
 10350                           ; BSR set to: 0
 10351  004316  0100               	movlb	0	; () banked
 10352  004318  518F               	movf	___fldiv@aexp& (0+255),w,b
 10353  00431A  0100               	movlb	0	; () banked
 10354  00431C  B4D8               	btfsc	status,2,c
 10355  00431E  D012               	goto	l7246
 10356                           
 10357                           ; BSR set to: 0
 10358  004320  0100               	movlb	0	; () banked
 10359  004322  298F               	incf	___fldiv@aexp& (0+255),w,b
 10360  004324  A4D8               	btfss	status,2,c
 10361  004326  D009               	goto	l7242
 10362                           
 10363                           ; BSR set to: 0
 10364  004328  0E00               	movlw	0
 10365  00432A  0100               	movlb	0	; () banked
 10366  00432C  6F7B               	movwf	___fldiv@a& (0+255),b
 10367  00432E  0E00               	movlw	0
 10368  004330  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
 10369  004332  0E00               	movlw	0
 10370  004334  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
 10371  004336  0E00               	movlw	0
 10372  004338  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
 10373  00433A                     l7242:
 10374                           
 10375                           ; BSR set to: 0
 10376  00433A  0100               	movlb	0	; () banked
 10377  00433C  8F7D               	bsf	(___fldiv@a+2)& (0+255),7,b
 10378                           
 10379                           ; BSR set to: 0
 10380  00433E  0E00               	movlw	0
 10381  004340  0100               	movlb	0	; () banked
 10382  004342  D008               	goto	L7
 10383  004344                     l7246:
 10384                           
 10385                           ; BSR set to: 0
 10386  004344  0E00               	movlw	0
 10387  004346  0100               	movlb	0	; () banked
 10388  004348  6F7B               	movwf	___fldiv@a& (0+255),b
 10389  00434A  0E00               	movlw	0
 10390  00434C  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
 10391  00434E  0E00               	movlw	0
 10392  004350  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
 10393  004352  0E00               	movlw	0
 10394  004354                     L7:
 10395  004354  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
 10396                           
 10397                           ; BSR set to: 0
 10398                           
 10399                           ; BSR set to: 0
 10400  004356  0100               	movlb	0	; () banked
 10401  004358  517B               	movf	___fldiv@a& (0+255),w,b
 10402  00435A  0100               	movlb	0	; () banked
 10403  00435C  117C               	iorwf	(___fldiv@a+1)& (0+255),w,b
 10404  00435E  0100               	movlb	0	; () banked
 10405  004360  117D               	iorwf	(___fldiv@a+2)& (0+255),w,b
 10406  004362  0100               	movlb	0	; () banked
 10407  004364  117E               	iorwf	(___fldiv@a+3)& (0+255),w,b
 10408  004366  A4D8               	btfss	status,2,c
 10409  004368  D017               	goto	l7258
 10410                           
 10411                           ; BSR set to: 0
 10412  00436A  0E00               	movlw	0
 10413  00436C  0100               	movlb	0	; () banked
 10414  00436E  6F77               	movwf	___fldiv@b& (0+255),b
 10415  004370  0E00               	movlw	0
 10416  004372  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10417  004374  0E00               	movlw	0
 10418  004376  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10419  004378  0E00               	movlw	0
 10420  00437A  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10421                           
 10422                           ; BSR set to: 0
 10423  00437C  0100               	movlb	0	; () banked
 10424  00437E  0E80               	movlw	128
 10425  004380  1379               	iorwf	(___fldiv@b+2)& (0+255),f,b
 10426  004382  0E7F               	movlw	127
 10427  004384  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10428                           
 10429                           ; BSR set to: 0
 10430  004386  C077  F077         	movff	___fldiv@b,?___fldiv
 10431  00438A  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10432  00438E  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10433  004392  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10434                           
 10435                           ; BSR set to: 0
 10436  004396  0012               	return	
 10437  004398                     l7258:
 10438                           
 10439                           ; BSR set to: 0
 10440  004398  0100               	movlb	0	; () banked
 10441  00439A  518E               	movf	___fldiv@bexp& (0+255),w,b
 10442  00439C  0100               	movlb	0	; () banked
 10443  00439E  A4D8               	btfss	status,2,c
 10444  0043A0  D012               	goto	l7266
 10445                           
 10446                           ; BSR set to: 0
 10447  0043A2  0E00               	movlw	0
 10448  0043A4  0100               	movlb	0	; () banked
 10449  0043A6  6F77               	movwf	___fldiv@b& (0+255),b
 10450  0043A8  0E00               	movlw	0
 10451  0043AA  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10452  0043AC  0E00               	movlw	0
 10453  0043AE  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10454  0043B0  0E00               	movlw	0
 10455  0043B2  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10456                           
 10457                           ; BSR set to: 0
 10458  0043B4  C077  F077         	movff	___fldiv@b,?___fldiv
 10459  0043B8  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10460  0043BC  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10461  0043C0  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10462                           
 10463                           ; BSR set to: 0
 10464  0043C4  0012               	return	
 10465  0043C6                     l7266:
 10466                           
 10467                           ; BSR set to: 0
 10468  0043C6  0100               	movlb	0	; () banked
 10469  0043C8  518F               	movf	___fldiv@aexp& (0+255),w,b
 10470  0043CA  0100               	movlb	0	; () banked
 10471  0043CC  6F7F               	movwf	??___fldiv& (0+255),b
 10472  0043CE  6B80               	clrf	(??___fldiv+1)& (0+255),b
 10473  0043D0  0100               	movlb	0	; () banked
 10474  0043D2  1F7F               	comf	??___fldiv& (0+255),f,b
 10475  0043D4  1F80               	comf	(??___fldiv+1)& (0+255),f,b
 10476  0043D6  4B7F               	infsnz	??___fldiv& (0+255),f,b
 10477  0043D8  2B80               	incf	(??___fldiv+1)& (0+255),f,b
 10478  0043DA  0100               	movlb	0	; () banked
 10479  0043DC  518E               	movf	___fldiv@bexp& (0+255),w,b
 10480  0043DE  0100               	movlb	0	; () banked
 10481  0043E0  6F81               	movwf	(??___fldiv+2)& (0+255),b
 10482  0043E2  6B82               	clrf	(??___fldiv+3)& (0+255),b
 10483  0043E4  0100               	movlb	0	; () banked
 10484  0043E6  517F               	movf	??___fldiv& (0+255),w,b
 10485  0043E8  0100               	movlb	0	; () banked
 10486  0043EA  2781               	addwf	(??___fldiv+2)& (0+255),f,b
 10487  0043EC  0100               	movlb	0	; () banked
 10488  0043EE  5180               	movf	(??___fldiv+1)& (0+255),w,b
 10489  0043F0  0100               	movlb	0	; () banked
 10490  0043F2  2382               	addwfc	(??___fldiv+3)& (0+255),f,b
 10491  0043F4  0E7F               	movlw	127
 10492  0043F6  0100               	movlb	0	; () banked
 10493  0043F8  2581               	addwf	(??___fldiv+2)& (0+255),w,b
 10494  0043FA  0100               	movlb	0	; () banked
 10495  0043FC  6F88               	movwf	___fldiv@new_exp& (0+255),b
 10496  0043FE  0E00               	movlw	0
 10497  004400  0100               	movlb	0	; () banked
 10498  004402  2182               	addwfc	(??___fldiv+3)& (0+255),w,b
 10499  004404  0100               	movlb	0	; () banked
 10500  004406  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10501                           
 10502                           ; BSR set to: 0
 10503  004408  C077  F084         	movff	___fldiv@b,___fldiv@rem
 10504  00440C  C078  F085         	movff	___fldiv@b+1,___fldiv@rem+1
 10505  004410  C079  F086         	movff	___fldiv@b+2,___fldiv@rem+2
 10506  004414  C07A  F087         	movff	___fldiv@b+3,___fldiv@rem+3
 10507                           
 10508                           ; BSR set to: 0
 10509  004418  0E00               	movlw	0
 10510  00441A  0100               	movlb	0	; () banked
 10511  00441C  6F77               	movwf	___fldiv@b& (0+255),b
 10512  00441E  0E00               	movlw	0
 10513  004420  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10514  004422  0E00               	movlw	0
 10515  004424  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10516  004426  0E00               	movlw	0
 10517  004428  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10518                           
 10519                           ; BSR set to: 0
 10520  00442A  0E00               	movlw	0
 10521  00442C  0100               	movlb	0	; () banked
 10522  00442E  6F8A               	movwf	___fldiv@grs& (0+255),b
 10523  004430  0E00               	movlw	0
 10524  004432  6F8B               	movwf	(___fldiv@grs+1)& (0+255),b
 10525  004434  0E00               	movlw	0
 10526  004436  6F8C               	movwf	(___fldiv@grs+2)& (0+255),b
 10527  004438  0E00               	movlw	0
 10528  00443A  6F8D               	movwf	(___fldiv@grs+3)& (0+255),b
 10529                           
 10530                           ; BSR set to: 0
 10531  00443C  0E00               	movlw	0
 10532  00443E  0100               	movlb	0	; () banked
 10533  004440  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10534  004442  D042               	goto	l1411
 10535  004444                     l7276:
 10536                           
 10537                           ; BSR set to: 0
 10538  004444  0100               	movlb	0	; () banked
 10539  004446  518F               	movf	___fldiv@aexp& (0+255),w,b
 10540  004448  0100               	movlb	0	; () banked
 10541  00444A  B4D8               	btfsc	status,2,c
 10542  00444C  D017               	goto	l7284
 10543                           
 10544                           ; BSR set to: 0
 10545  00444E  0100               	movlb	0	; () banked
 10546  004450  90D8               	bcf	status,0,c
 10547  004452  3784               	rlcf	___fldiv@rem& (0+255),f,b
 10548  004454  3785               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 10549  004456  3786               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 10550  004458  3787               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 10551  00445A  0100               	movlb	0	; () banked
 10552  00445C  90D8               	bcf	status,0,c
 10553  00445E  3777               	rlcf	___fldiv@b& (0+255),f,b
 10554  004460  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10555  004462  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10556  004464  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10557                           
 10558                           ; BSR set to: 0
 10559  004466  0100               	movlb	0	; () banked
 10560  004468  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10561  00446A  D002               	goto	l1414
 10562                           
 10563                           ; BSR set to: 0
 10564  00446C  0100               	movlb	0	; () banked
 10565  00446E  8177               	bsf	___fldiv@b& (0+255),0,b
 10566  004470                     l1414:
 10567                           
 10568                           ; BSR set to: 0
 10569  004470  0100               	movlb	0	; () banked
 10570  004472  90D8               	bcf	status,0,c
 10571  004474  378A               	rlcf	___fldiv@grs& (0+255),f,b
 10572  004476  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10573  004478  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10574  00447A  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10575  00447C                     l7284:
 10576                           
 10577                           ; BSR set to: 0
 10578  00447C  0100               	movlb	0	; () banked
 10579  00447E  517B               	movf	___fldiv@a& (0+255),w,b
 10580  004480  0100               	movlb	0	; () banked
 10581  004482  5D84               	subwf	___fldiv@rem& (0+255),w,b
 10582  004484  0100               	movlb	0	; () banked
 10583  004486  517C               	movf	(___fldiv@a+1)& (0+255),w,b
 10584  004488  0100               	movlb	0	; () banked
 10585  00448A  5985               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 10586  00448C  0100               	movlb	0	; () banked
 10587  00448E  517D               	movf	(___fldiv@a+2)& (0+255),w,b
 10588  004490  0100               	movlb	0	; () banked
 10589  004492  5986               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 10590  004494  0100               	movlb	0	; () banked
 10591  004496  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10592  004498  0100               	movlb	0	; () banked
 10593  00449A  5987               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 10594  00449C  A0D8               	btfss	status,0,c
 10595  00449E  D012               	goto	l7290
 10596                           
 10597                           ; BSR set to: 0
 10598  0044A0  0100               	movlb	0	; () banked
 10599  0044A2  8D8D               	bsf	(___fldiv@grs+3)& (0+255),6,b
 10600                           
 10601                           ; BSR set to: 0
 10602  0044A4  0100               	movlb	0	; () banked
 10603  0044A6  517B               	movf	___fldiv@a& (0+255),w,b
 10604  0044A8  0100               	movlb	0	; () banked
 10605  0044AA  5F84               	subwf	___fldiv@rem& (0+255),f,b
 10606  0044AC  0100               	movlb	0	; () banked
 10607  0044AE  517C               	movf	(___fldiv@a+1)& (0+255),w,b
 10608  0044B0  0100               	movlb	0	; () banked
 10609  0044B2  5B85               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 10610  0044B4  0100               	movlb	0	; () banked
 10611  0044B6  517D               	movf	(___fldiv@a+2)& (0+255),w,b
 10612  0044B8  0100               	movlb	0	; () banked
 10613  0044BA  5B86               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 10614  0044BC  0100               	movlb	0	; () banked
 10615  0044BE  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10616  0044C0  0100               	movlb	0	; () banked
 10617  0044C2  5B87               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 10618  0044C4                     l7290:
 10619                           
 10620                           ; BSR set to: 0
 10621  0044C4  0100               	movlb	0	; () banked
 10622  0044C6  2B8F               	incf	___fldiv@aexp& (0+255),f,b
 10623  0044C8                     l1411:
 10624                           
 10625                           ; BSR set to: 0
 10626  0044C8  0E19               	movlw	25
 10627  0044CA  0100               	movlb	0	; () banked
 10628  0044CC  658F               	cpfsgt	___fldiv@aexp& (0+255),b
 10629  0044CE  D7BA               	goto	l7276
 10630                           
 10631                           ; BSR set to: 0
 10632                           
 10633                           ; BSR set to: 0
 10634  0044D0  0100               	movlb	0	; () banked
 10635  0044D2  5184               	movf	___fldiv@rem& (0+255),w,b
 10636  0044D4  0100               	movlb	0	; () banked
 10637  0044D6  1185               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 10638  0044D8  0100               	movlb	0	; () banked
 10639  0044DA  1186               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 10640  0044DC  0100               	movlb	0	; () banked
 10641  0044DE  1187               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 10642  0044E0  B4D8               	btfsc	status,2,c
 10643  0044E2  D018               	goto	l7302
 10644                           
 10645                           ; BSR set to: 0
 10646  0044E4  0100               	movlb	0	; () banked
 10647  0044E6  818A               	bsf	___fldiv@grs& (0+255),0,b
 10648                           
 10649                           ; BSR set to: 0
 10650  0044E8  D015               	goto	l7302
 10651  0044EA                     l7296:
 10652                           
 10653                           ; BSR set to: 0
 10654  0044EA  0100               	movlb	0	; () banked
 10655  0044EC  90D8               	bcf	status,0,c
 10656  0044EE  3777               	rlcf	___fldiv@b& (0+255),f,b
 10657  0044F0  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10658  0044F2  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10659  0044F4  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10660                           
 10661                           ; BSR set to: 0
 10662  0044F6  0100               	movlb	0	; () banked
 10663  0044F8  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10664  0044FA  D002               	goto	l1420
 10665                           
 10666                           ; BSR set to: 0
 10667  0044FC  0100               	movlb	0	; () banked
 10668  0044FE  8177               	bsf	___fldiv@b& (0+255),0,b
 10669  004500                     l1420:
 10670                           
 10671                           ; BSR set to: 0
 10672  004500  0100               	movlb	0	; () banked
 10673  004502  90D8               	bcf	status,0,c
 10674  004504  378A               	rlcf	___fldiv@grs& (0+255),f,b
 10675  004506  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10676  004508  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10677  00450A  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10678  00450C  0100               	movlb	0	; () banked
 10679  00450E  0788               	decf	___fldiv@new_exp& (0+255),f,b
 10680  004510  A0D8               	btfss	status,0,c
 10681  004512  0789               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 10682  004514                     l7302:
 10683                           
 10684                           ; BSR set to: 0
 10685  004514  0100               	movlb	0	; () banked
 10686  004516  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
 10687  004518  D7E8               	goto	l7296
 10688                           
 10689                           ; BSR set to: 0
 10690                           
 10691                           ; BSR set to: 0
 10692  00451A  0E00               	movlw	0
 10693  00451C  0100               	movlb	0	; () banked
 10694  00451E  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10695                           
 10696                           ; BSR set to: 0
 10697  004520  0100               	movlb	0	; () banked
 10698  004522  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10699  004524  D024               	goto	l1422
 10700                           
 10701                           ; BSR set to: 0
 10702  004526  0EFF               	movlw	255
 10703  004528  0100               	movlb	0	; () banked
 10704  00452A  158A               	andwf	___fldiv@grs& (0+255),w,b
 10705  00452C  0100               	movlb	0	; () banked
 10706  00452E  6F7F               	movwf	??___fldiv& (0+255),b
 10707  004530  0EFF               	movlw	255
 10708  004532  0100               	movlb	0	; () banked
 10709  004534  158B               	andwf	(___fldiv@grs+1)& (0+255),w,b
 10710  004536  0100               	movlb	0	; () banked
 10711  004538  6F80               	movwf	(??___fldiv+1)& (0+255),b
 10712  00453A  0EFF               	movlw	255
 10713  00453C  0100               	movlb	0	; () banked
 10714  00453E  158C               	andwf	(___fldiv@grs+2)& (0+255),w,b
 10715  004540  0100               	movlb	0	; () banked
 10716  004542  6F81               	movwf	(??___fldiv+2)& (0+255),b
 10717  004544  0E7F               	movlw	127
 10718  004546  0100               	movlb	0	; () banked
 10719  004548  158D               	andwf	(___fldiv@grs+3)& (0+255),w,b
 10720  00454A  0100               	movlb	0	; () banked
 10721  00454C  6F82               	movwf	(??___fldiv+3)& (0+255),b
 10722  00454E  0100               	movlb	0	; () banked
 10723  004550  517F               	movf	??___fldiv& (0+255),w,b
 10724  004552  0100               	movlb	0	; () banked
 10725  004554  1180               	iorwf	(??___fldiv+1)& (0+255),w,b
 10726  004556  0100               	movlb	0	; () banked
 10727  004558  1181               	iorwf	(??___fldiv+2)& (0+255),w,b
 10728  00455A  0100               	movlb	0	; () banked
 10729  00455C  1182               	iorwf	(??___fldiv+3)& (0+255),w,b
 10730  00455E  A4D8               	btfss	status,2,c
 10731  004560  D003               	goto	l7312
 10732                           
 10733                           ; BSR set to: 0
 10734                           
 10735                           ; BSR set to: 0
 10736  004562  0100               	movlb	0	; () banked
 10737  004564  A177               	btfss	___fldiv@b& (0+255),0,b
 10738  004566  D003               	goto	l1422
 10739  004568                     l7312:
 10740                           
 10741                           ; BSR set to: 0
 10742  004568  0E01               	movlw	1
 10743  00456A  0100               	movlb	0	; () banked
 10744  00456C  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10745  00456E                     l1422:
 10746                           
 10747                           ; BSR set to: 0
 10748  00456E  0100               	movlb	0	; () banked
 10749  004570  518F               	movf	___fldiv@aexp& (0+255),w,b
 10750  004572  0100               	movlb	0	; () banked
 10751  004574  B4D8               	btfsc	status,2,c
 10752  004576  D023               	goto	l7322
 10753                           
 10754                           ; BSR set to: 0
 10755  004578  0E01               	movlw	1
 10756  00457A  0100               	movlb	0	; () banked
 10757  00457C  2777               	addwf	___fldiv@b& (0+255),f,b
 10758  00457E  0E00               	movlw	0
 10759  004580  2378               	addwfc	(___fldiv@b+1)& (0+255),f,b
 10760  004582  2379               	addwfc	(___fldiv@b+2)& (0+255),f,b
 10761  004584  237A               	addwfc	(___fldiv@b+3)& (0+255),f,b
 10762                           
 10763                           ; BSR set to: 0
 10764  004586  0100               	movlb	0	; () banked
 10765  004588  A17A               	btfss	(___fldiv@b+3)& (0+255),0,b
 10766  00458A  D019               	goto	l7322
 10767                           
 10768                           ; BSR set to: 0
 10769  00458C  C077  F07F         	movff	___fldiv@b,??___fldiv
 10770  004590  C078  F080         	movff	___fldiv@b+1,??___fldiv+1
 10771  004594  C079  F081         	movff	___fldiv@b+2,??___fldiv+2
 10772  004598  C07A  F082         	movff	___fldiv@b+3,??___fldiv+3
 10773  00459C  0100               	movlb	0	; () banked
 10774  00459E  3582               	rlcf	(??___fldiv+3)& (0+255),w,b
 10775  0045A0  3382               	rrcf	(??___fldiv+3)& (0+255),f,b
 10776  0045A2  3381               	rrcf	(??___fldiv+2)& (0+255),f,b
 10777  0045A4  3380               	rrcf	(??___fldiv+1)& (0+255),f,b
 10778  0045A6  337F               	rrcf	??___fldiv& (0+255),f,b
 10779  0045A8  C07F  F077         	movff	??___fldiv,___fldiv@b
 10780  0045AC  C080  F078         	movff	??___fldiv+1,___fldiv@b+1
 10781  0045B0  C081  F079         	movff	??___fldiv+2,___fldiv@b+2
 10782  0045B4  C082  F07A         	movff	??___fldiv+3,___fldiv@b+3
 10783                           
 10784                           ; BSR set to: 0
 10785  0045B8  0100               	movlb	0	; () banked
 10786  0045BA  4B88               	infsnz	___fldiv@new_exp& (0+255),f,b
 10787  0045BC  2B89               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 10788  0045BE                     l7322:
 10789                           
 10790                           ; BSR set to: 0
 10791  0045BE  0100               	movlb	0	; () banked
 10792  0045C0  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10793  0045C2  D014               	goto	l7326
 10794  0045C4  0100               	movlb	0	; () banked
 10795  0045C6  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10796  0045C8  E104               	bnz	u9620
 10797  0045CA  0100               	movlb	0	; () banked
 10798  0045CC  2988               	incf	___fldiv@new_exp& (0+255),w,b
 10799  0045CE  A0D8               	btfss	status,0,c
 10800  0045D0  D00D               	goto	l7326
 10801  0045D2                     u9620:
 10802                           
 10803                           ; BSR set to: 0
 10804  0045D2  0E00               	movlw	0
 10805  0045D4  0100               	movlb	0	; () banked
 10806  0045D6  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10807  0045D8  6988               	setf	___fldiv@new_exp& (0+255),b
 10808  0045DA  0E00               	movlw	0
 10809  0045DC  0100               	movlb	0	; () banked
 10810  0045DE  6F77               	movwf	___fldiv@b& (0+255),b
 10811  0045E0  0E00               	movlw	0
 10812  0045E2  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10813  0045E4  0E00               	movlw	0
 10814  0045E6  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10815  0045E8  0E00               	movlw	0
 10816  0045EA  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10817  0045EC                     l7326:
 10818                           
 10819                           ; BSR set to: 0
 10820  0045EC  0100               	movlb	0	; () banked
 10821  0045EE  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10822  0045F0  D007               	goto	l7328
 10823  0045F2  0100               	movlb	0	; () banked
 10824  0045F4  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10825  0045F6  E115               	bnz	l7330
 10826  0045F8  0100               	movlb	0	; () banked
 10827  0045FA  0588               	decf	___fldiv@new_exp& (0+255),w,b
 10828  0045FC  B0D8               	btfsc	status,0,c
 10829  0045FE  D011               	goto	l7330
 10830  004600                     l7328:
 10831                           
 10832                           ; BSR set to: 0
 10833  004600  0E00               	movlw	0
 10834  004602  0100               	movlb	0	; () banked
 10835  004604  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10836  004606  0E00               	movlw	0
 10837  004608  6F88               	movwf	___fldiv@new_exp& (0+255),b
 10838  00460A  0E00               	movlw	0
 10839  00460C  0100               	movlb	0	; () banked
 10840  00460E  6F77               	movwf	___fldiv@b& (0+255),b
 10841  004610  0E00               	movlw	0
 10842  004612  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10843  004614  0E00               	movlw	0
 10844  004616  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10845  004618  0E00               	movlw	0
 10846  00461A  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10847  00461C  0E00               	movlw	0
 10848  00461E  0100               	movlb	0	; () banked
 10849  004620  6F83               	movwf	___fldiv@sign& (0+255),b
 10850  004622                     l7330:
 10851                           
 10852                           ; BSR set to: 0
 10853  004622  C088  F08E         	movff	___fldiv@new_exp,___fldiv@bexp
 10854                           
 10855                           ; BSR set to: 0
 10856  004626  0100               	movlb	0	; () banked
 10857  004628  A18E               	btfss	___fldiv@bexp& (0+255),0,b
 10858  00462A  D003               	goto	l7336
 10859                           
 10860                           ; BSR set to: 0
 10861  00462C  0100               	movlb	0	; () banked
 10862  00462E  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
 10863  004630  D002               	goto	l7338
 10864  004632                     l7336:
 10865                           
 10866                           ; BSR set to: 0
 10867  004632  0100               	movlb	0	; () banked
 10868  004634  9F79               	bcf	(___fldiv@b+2)& (0+255),7,b
 10869  004636                     l7338:
 10870                           
 10871                           ; BSR set to: 0
 10872  004636  0100               	movlb	0	; () banked
 10873  004638  90D8               	bcf	status,0,c
 10874  00463A  318E               	rrcf	___fldiv@bexp& (0+255),w,b
 10875  00463C  0100               	movlb	0	; () banked
 10876  00463E  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10877                           
 10878                           ; BSR set to: 0
 10879  004640  0100               	movlb	0	; () banked
 10880  004642  5183               	movf	___fldiv@sign& (0+255),w,b
 10881  004644  0100               	movlb	0	; () banked
 10882  004646  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10883                           
 10884                           ; BSR set to: 0
 10885  004648  C077  F077         	movff	___fldiv@b,?___fldiv
 10886  00464C  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10887  004650  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10888  004654  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10889  004658  0012               	return	
 10890  00465A                     __end_of___fldiv:
 10891                           	opt stack 0
 10892                           tblptru	equ	0xFF8
 10893                           tblptrh	equ	0xFF7
 10894                           tblptrl	equ	0xFF6
 10895                           tablat	equ	0xFF5
 10896                           prodh	equ	0xFF4
 10897                           prodl	equ	0xFF3
 10898                           postinc0	equ	0xFEE
 10899                           wreg	equ	0xFE8
 10900                           postdec1	equ	0xFE5
 10901                           fsr1l	equ	0xFE1
 10902                           indf2	equ	0xFDF
 10903                           postinc2	equ	0xFDE
 10904                           postdec2	equ	0xFDD
 10905                           fsr2h	equ	0xFDA
 10906                           fsr2l	equ	0xFD9
 10907                           status	equ	0xFD8
 10908                           
 10909 ;; *************** function _delay_s *****************
 10910 ;; Defined at:
 10911 ;;		line 102 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/src\delay.c"
 10912 ;; Parameters:    Size  Location     Type
 10913 ;;  value_s         1    wreg     unsigned char 
 10914 ;; Auto vars:     Size  Location     Type
 10915 ;;  value_s         1   31[BANK0 ] unsigned char 
 10916 ;;  repeat_loop     1   32[BANK0 ] unsigned char 
 10917 ;; Return value:  Size  Location     Type
 10918 ;;		None               void
 10919 ;; Registers used:
 10920 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10921 ;; Tracked objects:
 10922 ;;		On entry : 0/0
 10923 ;;		On exit  : 0/0
 10924 ;;		Unchanged: 0/0
 10925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10927 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10929 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10930 ;;Total ram usage:        2 bytes
 10931 ;; Hardware stack levels used:    1
 10932 ;; Hardware stack levels required when called:    6
 10933 ;; This function calls:
 10934 ;;		_delay_ms
 10935 ;; This function is called by:
 10936 ;;		_park_routine
 10937 ;; This function uses a non-reentrant model
 10938 ;;
 10939                           
 10940                           	psect	text26
 10941  00666C                     __ptext26:
 10942                           	opt stack 0
 10943  00666C                     _delay_s:
 10944                           	opt stack 23
 10945                           
 10946                           ; BSR set to: 0
 10947                           ;incstack = 0
 10948                           ;delay_s@value_s stored from wreg
 10949  00666C  0100               	movlb	0	; () banked
 10950  00666E  6F7F               	movwf	delay_s@value_s& (0+255),b
 10951                           
 10952                           ;src\delay.c: 104: unsigned char repeat_loop;
 10953                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
 10954  006670  0E00               	movlw	0
 10955  006672  0100               	movlb	0	; () banked
 10956  006674  6F80               	movwf	delay_s@repeat_loop& (0+255),b
 10957  006676  D009               	goto	l7958
 10958  006678                     l7954:
 10959                           
 10960                           ; BSR set to: 0
 10961                           ;src\delay.c: 107: delay_ms (1000);
 10962  006678  0E03               	movlw	3
 10963  00667A  0100               	movlb	0	; () banked
 10964  00667C  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
 10965  00667E  0EE8               	movlw	232
 10966  006680  6F7D               	movwf	delay_ms@value_ms& (0+255),b
 10967  006682  ECCC  F032         	call	_delay_ms	;wreg free
 10968  006686  0100               	movlb	0	; () banked
 10969  006688  2B80               	incf	delay_s@repeat_loop& (0+255),f,b
 10970  00668A                     l7958:
 10971                           
 10972                           ; BSR set to: 0
 10973  00668A  0100               	movlb	0	; () banked
 10974  00668C  517F               	movf	delay_s@value_s& (0+255),w,b
 10975  00668E  0100               	movlb	0	; () banked
 10976  006690  5D80               	subwf	delay_s@repeat_loop& (0+255),w,b
 10977  006692  B0D8               	btfsc	status,0,c
 10978  006694  0012               	return	
 10979  006696  D7F0               	goto	l7954
 10980  006698                     __end_of_delay_s:
 10981                           	opt stack 0
 10982                           tblptru	equ	0xFF8
 10983                           tblptrh	equ	0xFF7
 10984                           tblptrl	equ	0xFF6
 10985                           tablat	equ	0xFF5
 10986                           prodh	equ	0xFF4
 10987                           prodl	equ	0xFF3
 10988                           postinc0	equ	0xFEE
 10989                           wreg	equ	0xFE8
 10990                           postdec1	equ	0xFE5
 10991                           fsr1l	equ	0xFE1
 10992                           indf2	equ	0xFDF
 10993                           postinc2	equ	0xFDE
 10994                           postdec2	equ	0xFDD
 10995                           fsr2h	equ	0xFDA
 10996                           fsr2l	equ	0xFD9
 10997                           status	equ	0xFD8
 10998                           
 10999 ;; *************** function _delay_ms *****************
 11000 ;; Defined at:
 11001 ;;		line 61 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/src\delay.c"
 11002 ;; Parameters:    Size  Location     Type
 11003 ;;  value_ms        2   29[BANK0 ] unsigned int 
 11004 ;; Auto vars:     Size  Location     Type
 11005 ;;		None
 11006 ;; Return value:  Size  Location     Type
 11007 ;;		None               void
 11008 ;; Registers used:
 11009 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11010 ;; Tracked objects:
 11011 ;;		On entry : 0/0
 11012 ;;		On exit  : 0/0
 11013 ;;		Unchanged: 0/0
 11014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11015 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11018 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11019 ;;Total ram usage:        2 bytes
 11020 ;; Hardware stack levels used:    1
 11021 ;; Hardware stack levels required when called:    5
 11022 ;; This function calls:
 11023 ;;		___wmul
 11024 ;; This function is called by:
 11025 ;;		_delay_s
 11026 ;;		_main
 11027 ;;		_park_routine
 11028 ;; This function uses a non-reentrant model
 11029 ;;
 11030                           
 11031                           	psect	text27
 11032  006598                     __ptext27:
 11033                           	opt stack 0
 11034  006598                     _delay_ms:
 11035                           	opt stack 23
 11036                           
 11037                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 11038                           
 11039                           ; BSR set to: 0
 11040                           ;incstack = 0
 11041  006598  C0E8  F077         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 11042  00659C  0100               	movlb	0	; () banked
 11043  00659E  6B78               	clrf	(___wmul@multiplier+1)& (0+255),b
 11044  0065A0  C07D  F079         	movff	delay_ms@value_ms,___wmul@multiplicand
 11045  0065A4  C07E  F07A         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 11046  0065A8  EC05  F033         	call	___wmul	;wreg free
 11047  0065AC  C077  F0E0         	movff	?___wmul,_clock_counter_reference	;volatile
 11048  0065B0  C078  F0E1         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 11049                           
 11050                           ;src\delay.c: 75: while (clock_counter_reference) {
 11051  0065B4  D007               	goto	l569
 11052  0065B6                     l7808:
 11053                           
 11054                           ;src\delay.c: 85: _delay(240);
 11055  0065B6  0E50               	movlw	80
 11056  0065B8                     u11647:
 11057  0065B8  2EE8               	decfsz	wreg,f,c
 11058  0065BA  D7FE               	goto	u11647
 11059                           
 11060                           ;src\delay.c: 88: clock_counter_reference--;
 11061  0065BC  0100               	movlb	0	; () banked
 11062  0065BE  07E0               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 11063  0065C0  A0D8               	btfss	status,0,c
 11064  0065C2  07E1               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 11065  0065C4                     l569:
 11066  0065C4  0100               	movlb	0	; () banked
 11067  0065C6  51E0               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 11068  0065C8  0100               	movlb	0	; () banked
 11069  0065CA  11E1               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 11070  0065CC  B4D8               	btfsc	status,2,c
 11071  0065CE  0012               	return	
 11072  0065D0  D7F2               	goto	l7808
 11073  0065D2                     __end_of_delay_ms:
 11074                           	opt stack 0
 11075                           tblptru	equ	0xFF8
 11076                           tblptrh	equ	0xFF7
 11077                           tblptrl	equ	0xFF6
 11078                           tablat	equ	0xFF5
 11079                           prodh	equ	0xFF4
 11080                           prodl	equ	0xFF3
 11081                           postinc0	equ	0xFEE
 11082                           wreg	equ	0xFE8
 11083                           postdec1	equ	0xFE5
 11084                           fsr1l	equ	0xFE1
 11085                           indf2	equ	0xFDF
 11086                           postinc2	equ	0xFDE
 11087                           postdec2	equ	0xFDD
 11088                           fsr2h	equ	0xFDA
 11089                           fsr2l	equ	0xFD9
 11090                           status	equ	0xFD8
 11091                           
 11092 ;; *************** function ___wmul *****************
 11093 ;; Defined at:
 11094 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 11095 ;; Parameters:    Size  Location     Type
 11096 ;;  multiplier      2   23[BANK0 ] unsigned int 
 11097 ;;  multiplicand    2   25[BANK0 ] unsigned int 
 11098 ;; Auto vars:     Size  Location     Type
 11099 ;;  product         2   27[BANK0 ] unsigned int 
 11100 ;; Return value:  Size  Location     Type
 11101 ;;                  2   23[BANK0 ] unsigned int 
 11102 ;; Registers used:
 11103 ;;		wreg, status,2, status,0, prodl, prodh
 11104 ;; Tracked objects:
 11105 ;;		On entry : 0/0
 11106 ;;		On exit  : 0/0
 11107 ;;		Unchanged: 0/0
 11108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11109 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11110 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11112 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11113 ;;Total ram usage:        6 bytes
 11114 ;; Hardware stack levels used:    1
 11115 ;; Hardware stack levels required when called:    4
 11116 ;; This function calls:
 11117 ;;		Nothing
 11118 ;; This function is called by:
 11119 ;;		_delay_ms
 11120 ;; This function uses a non-reentrant model
 11121 ;;
 11122                           
 11123                           	psect	text28
 11124  00660A                     __ptext28:
 11125                           	opt stack 0
 11126  00660A                     ___wmul:
 11127                           	opt stack 23
 11128                           
 11129                           ; BSR set to: 0
 11130                           ;incstack = 0
 11131  00660A  0100               	movlb	0	; () banked
 11132  00660C  5177               	movf	___wmul@multiplier& (0+255),w,b
 11133  00660E  0100               	movlb	0	; () banked
 11134  006610  0379               	mulwf	___wmul@multiplicand& (0+255),b
 11135  006612  CFF3 F07B          	movff	prodl,___wmul@product
 11136  006616  CFF4 F07C          	movff	prodh,___wmul@product+1
 11137  00661A  0100               	movlb	0	; () banked
 11138  00661C  5177               	movf	___wmul@multiplier& (0+255),w,b
 11139  00661E  0100               	movlb	0	; () banked
 11140  006620  037A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11141  006622  50F3               	movf	prodl,w,c
 11142  006624  0100               	movlb	0	; () banked
 11143  006626  277C               	addwf	(___wmul@product+1)& (0+255),f,b
 11144  006628  0100               	movlb	0	; () banked
 11145  00662A  5178               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11146  00662C  0100               	movlb	0	; () banked
 11147  00662E  0379               	mulwf	___wmul@multiplicand& (0+255),b
 11148  006630  50F3               	movf	prodl,w,c
 11149  006632  0100               	movlb	0	; () banked
 11150  006634  277C               	addwf	(___wmul@product+1)& (0+255),f,b
 11151                           
 11152                           ; BSR set to: 0
 11153  006636  C07B  F077         	movff	___wmul@product,?___wmul
 11154  00663A  C07C  F078         	movff	___wmul@product+1,?___wmul+1
 11155  00663E  0012               	return	
 11156  006640                     __end_of___wmul:
 11157                           	opt stack 0
 11158                           tblptru	equ	0xFF8
 11159                           tblptrh	equ	0xFF7
 11160                           tblptrl	equ	0xFF6
 11161                           tablat	equ	0xFF5
 11162                           prodh	equ	0xFF4
 11163                           prodl	equ	0xFF3
 11164                           postinc0	equ	0xFEE
 11165                           wreg	equ	0xFE8
 11166                           postdec1	equ	0xFE5
 11167                           fsr1l	equ	0xFE1
 11168                           indf2	equ	0xFDF
 11169                           postinc2	equ	0xFDE
 11170                           postdec2	equ	0xFDD
 11171                           fsr2h	equ	0xFDA
 11172                           fsr2l	equ	0xFD9
 11173                           status	equ	0xFD8
 11174                           
 11175 ;; *************** function _configurazione *****************
 11176 ;; Defined at:
 11177 ;;		line 479 in file "parcheggio.c"
 11178 ;; Parameters:    Size  Location     Type
 11179 ;;		None
 11180 ;; Auto vars:     Size  Location     Type
 11181 ;;		None
 11182 ;; Return value:  Size  Location     Type
 11183 ;;		None               void
 11184 ;; Registers used:
 11185 ;;		wreg, status,2, status,0, cstack
 11186 ;; Tracked objects:
 11187 ;;		On entry : 0/0
 11188 ;;		On exit  : 0/0
 11189 ;;		Unchanged: 0/0
 11190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11195 ;;Total ram usage:        0 bytes
 11196 ;; Hardware stack levels used:    1
 11197 ;; Hardware stack levels required when called:    6
 11198 ;; This function calls:
 11199 ;;		_CANInitialize
 11200 ;; This function is called by:
 11201 ;;		_main
 11202 ;; This function uses a non-reentrant model
 11203 ;;
 11204                           
 11205                           	psect	text29
 11206  006452                     __ptext29:
 11207                           	opt stack 0
 11208  006452                     _configurazione:
 11209                           	opt stack 24
 11210                           
 11211                           ;parcheggio.c: 480: LATA = 0x00;
 11212                           
 11213                           ; BSR set to: 0
 11214                           ;incstack = 0
 11215  006452  0E00               	movlw	0
 11216  006454  6E89               	movwf	3977,c	;volatile
 11217                           
 11218                           ;parcheggio.c: 481: TRISA = 0b11110000;
 11219  006456  0EF0               	movlw	240
 11220  006458  6E92               	movwf	3986,c	;volatile
 11221                           
 11222                           ;parcheggio.c: 483: LATB = 0x00;
 11223  00645A  0E00               	movlw	0
 11224  00645C  6E8A               	movwf	3978,c	;volatile
 11225                           
 11226                           ;parcheggio.c: 484: TRISB = 0b10001010;
 11227  00645E  0E8A               	movlw	138
 11228  006460  6E93               	movwf	3987,c	;volatile
 11229                           
 11230                           ;parcheggio.c: 486: LATC = 0x00;
 11231  006462  0E00               	movlw	0
 11232  006464  6E8B               	movwf	3979,c	;volatile
 11233                           
 11234                           ;parcheggio.c: 487: TRISC = 0b11111111;
 11235  006466  6894               	setf	3988,c	;volatile
 11236                           
 11237                           ;parcheggio.c: 489: ADCON1 = 0xFF;
 11238  006468  68C1               	setf	4033,c	;volatile
 11239                           
 11240                           ;parcheggio.c: 490: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG
      +                          _SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
 11241  00646A  0E06               	movlw	6
 11242  00646C  0100               	movlb	0	; () banked
 11243  00646E  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 11244  006470  0E05               	movlw	5
 11245  006472  0100               	movlb	0	; () banked
 11246  006474  6F86               	movwf	CANInitialize@phaseSeg2& (0+255),b
 11247  006476  0E01               	movlw	1
 11248  006478  0100               	movlb	0	; () banked
 11249  00647A  6F87               	movwf	CANInitialize@SJW& (0+255),b
 11250  00647C  0E03               	movlw	3
 11251  00647E  0100               	movlb	0	; () banked
 11252  006480  6F88               	movwf	CANInitialize@BRP& (0+255),b
 11253  006482  0E9D               	movlw	157
 11254  006484  0100               	movlb	0	; () banked
 11255  006486  6F89               	movwf	CANInitialize@flags& (0+255),b
 11256  006488  0E04               	movlw	4
 11257  00648A  EC63  F02B         	call	_CANInitialize
 11258                           
 11259                           ;parcheggio.c: 492: RCONbits.IPEN = 1;
 11260  00648E  8ED0               	bsf	4048,7,c	;volatile
 11261                           
 11262                           ;parcheggio.c: 493: PIR3bits.RXB1IF = 0;
 11263  006490  92A4               	bcf	4004,1,c	;volatile
 11264                           
 11265                           ;parcheggio.c: 494: PIR3bits.RXB0IF = 0;
 11266  006492  90A4               	bcf	4004,0,c	;volatile
 11267                           
 11268                           ;parcheggio.c: 495: IPR3bits.RXB1IP = 0;
 11269  006494  92A5               	bcf	4005,1,c	;volatile
 11270                           
 11271                           ;parcheggio.c: 496: IPR3bits.RXB0IP = 0;
 11272  006496  90A5               	bcf	4005,0,c	;volatile
 11273                           
 11274                           ;parcheggio.c: 497: PIE3bits.RXB1IE = 1;
 11275  006498  82A3               	bsf	4003,1,c	;volatile
 11276                           
 11277                           ;parcheggio.c: 498: PIE3bits.RXB0IE = 1;
 11278  00649A  80A3               	bsf	4003,0,c	;volatile
 11279                           
 11280                           ;parcheggio.c: 499: INTCON2bits.TMR0IP = 0;
 11281  00649C  94F1               	bcf	intcon2,2,c	;volatile
 11282                           
 11283                           ;parcheggio.c: 500: T0CON = 0x80;
 11284  00649E  0E80               	movlw	128
 11285  0064A0  6ED5               	movwf	4053,c	;volatile
 11286                           
 11287                           ;parcheggio.c: 501: T3CON = 0x11;
 11288  0064A2  0E11               	movlw	17
 11289  0064A4  6EB1               	movwf	4017,c	;volatile
 11290                           
 11291                           ;parcheggio.c: 502: TMR0H = 0x34;
 11292  0064A6  0E34               	movlw	52
 11293  0064A8  6ED7               	movwf	4055,c	;volatile
 11294                           
 11295                           ;parcheggio.c: 503: TMR0L = 0xE0;
 11296  0064AA  0EE0               	movlw	224
 11297  0064AC  6ED6               	movwf	4054,c	;volatile
 11298                           
 11299                           ;parcheggio.c: 504: INTCONbits.TMR0IF = 0;
 11300  0064AE  94F2               	bcf	intcon,2,c	;volatile
 11301                           
 11302                           ;parcheggio.c: 505: INTCONbits.TMR0IE = 1;
 11303  0064B0  8AF2               	bsf	intcon,5,c	;volatile
 11304                           
 11305                           ;parcheggio.c: 506: INTCON2bits.INTEDG0 = 1;
 11306  0064B2  8CF1               	bsf	intcon2,6,c	;volatile
 11307                           
 11308                           ;parcheggio.c: 507: INTCONbits.INT0IF = 0;
 11309  0064B4  92F2               	bcf	intcon,1,c	;volatile
 11310                           
 11311                           ;parcheggio.c: 508: INTCONbits.INT0IE = 0;
 11312  0064B6  98F2               	bcf	intcon,4,c	;volatile
 11313                           
 11314                           ;parcheggio.c: 509: INTCONbits.GIEL = 1;
 11315  0064B8  8CF2               	bsf	intcon,6,c	;volatile
 11316                           
 11317                           ;parcheggio.c: 510: INTCONbits.GIEH = 1;
 11318  0064BA  8EF2               	bsf	intcon,7,c	;volatile
 11319  0064BC  0012               	return		;funcret
 11320  0064BE                     __end_of_configurazione:
 11321                           	opt stack 0
 11322                           tblptru	equ	0xFF8
 11323                           tblptrh	equ	0xFF7
 11324                           tblptrl	equ	0xFF6
 11325                           tablat	equ	0xFF5
 11326                           prodh	equ	0xFF4
 11327                           prodl	equ	0xFF3
 11328                           intcon	equ	0xFF2
 11329                           intcon2	equ	0xFF1
 11330                           postinc0	equ	0xFEE
 11331                           wreg	equ	0xFE8
 11332                           postdec1	equ	0xFE5
 11333                           fsr1l	equ	0xFE1
 11334                           indf2	equ	0xFDF
 11335                           postinc2	equ	0xFDE
 11336                           postdec2	equ	0xFDD
 11337                           fsr2h	equ	0xFDA
 11338                           fsr2l	equ	0xFD9
 11339                           status	equ	0xFD8
 11340                           
 11341 ;; *************** function _CANInitialize *****************
 11342 ;; Defined at:
 11343 ;;		line 219 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 11344 ;; Parameters:    Size  Location     Type
 11345 ;;  propSeg         1    wreg     unsigned char 
 11346 ;;  phaseSeg1       1   37[BANK0 ] unsigned char 
 11347 ;;  phaseSeg2       1   38[BANK0 ] unsigned char 
 11348 ;;  SJW             1   39[BANK0 ] unsigned char 
 11349 ;;  BRP             1   40[BANK0 ] unsigned char 
 11350 ;;  flags           1   41[BANK0 ] enum E16313
 11351 ;; Auto vars:     Size  Location     Type
 11352 ;;  propSeg         1   46[BANK0 ] unsigned char 
 11353 ;;  FilterConfig    1   48[BANK0 ] unsigned char 
 11354 ;;  FilterConfig    1   47[BANK0 ] unsigned char 
 11355 ;; Return value:  Size  Location     Type
 11356 ;;		None               void
 11357 ;; Registers used:
 11358 ;;		wreg, status,2, status,0, cstack
 11359 ;; Tracked objects:
 11360 ;;		On entry : 0/0
 11361 ;;		On exit  : 0/0
 11362 ;;		Unchanged: 0/0
 11363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11364 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11365 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11366 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11367 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11368 ;;Total ram usage:       12 bytes
 11369 ;; Hardware stack levels used:    1
 11370 ;; Hardware stack levels required when called:    5
 11371 ;; This function calls:
 11372 ;;		_CANOperationMode
 11373 ;;		_CANSetFilter
 11374 ;;		_CANSetMask
 11375 ;; This function is called by:
 11376 ;;		_configurazione
 11377 ;; This function uses a non-reentrant model
 11378 ;;
 11379                           
 11380                           	psect	text30
 11381  0056C6                     __ptext30:
 11382                           	opt stack 0
 11383  0056C6                     _CANInitialize:
 11384                           	opt stack 24
 11385                           
 11386                           ;incstack = 0
 11387                           ;CANInitialize@propSeg stored from wreg
 11388  0056C6  0100               	movlb	0	; () banked
 11389  0056C8  6F8E               	movwf	CANInitialize@propSeg& (0+255),b
 11390                           
 11391                           ;inc\CANlib.h: 221: BYTE FilterConfig1;
 11392                           ;inc\CANlib.h: 222: BYTE FilterConfig2;
 11393                           ;inc\CANlib.h: 224: CANOperationMode(CAN_OP_MODE_CONFIG);
 11394  0056CA  0E80               	movlw	128
 11395  0056CC  EC6D  F033         	call	_CANOperationMode
 11396                           
 11397                           ;inc\CANlib.h: 226: BRGCON1 = 0x00;
 11398  0056D0  0E00               	movlw	0
 11399  0056D2  6E70               	movwf	3952,c	;volatile
 11400                           
 11401                           ;inc\CANlib.h: 227: BRGCON2 = 0x00;
 11402  0056D4  0E00               	movlw	0
 11403  0056D6  6E71               	movwf	3953,c	;volatile
 11404                           
 11405                           ;inc\CANlib.h: 228: BRGCON3 = 0x00;
 11406  0056D8  0E00               	movlw	0
 11407  0056DA  6E72               	movwf	3954,c	;volatile
 11408                           
 11409                           ;inc\CANlib.h: 230: SJW= SJW << 6;
 11410  0056DC  0100               	movlb	0	; () banked
 11411  0056DE  4187               	rrncf	CANInitialize@SJW& (0+255),w,b
 11412  0056E0  42E8               	rrncf	wreg,f,c
 11413  0056E2  0BC0               	andlw	192
 11414  0056E4  0100               	movlb	0	; () banked
 11415  0056E6  6F87               	movwf	CANInitialize@SJW& (0+255),b
 11416                           
 11417                           ; BSR set to: 0
 11418                           ;inc\CANlib.h: 231: BRGCON1 |= SJW;
 11419  0056E8  0100               	movlb	0	; () banked
 11420  0056EA  5187               	movf	CANInitialize@SJW& (0+255),w,b
 11421  0056EC  1270               	iorwf	3952,f,c	;volatile
 11422                           
 11423                           ; BSR set to: 0
 11424                           ;inc\CANlib.h: 232: BRGCON1 |= BRP;
 11425  0056EE  0100               	movlb	0	; () banked
 11426  0056F0  5188               	movf	CANInitialize@BRP& (0+255),w,b
 11427  0056F2  1270               	iorwf	3952,f,c	;volatile
 11428                           
 11429                           ; BSR set to: 0
 11430                           ;inc\CANlib.h: 234: BRGCON2 |= propSeg;
 11431  0056F4  0100               	movlb	0	; () banked
 11432  0056F6  518E               	movf	CANInitialize@propSeg& (0+255),w,b
 11433  0056F8  1271               	iorwf	3953,f,c	;volatile
 11434                           
 11435                           ; BSR set to: 0
 11436                           ;inc\CANlib.h: 235: phaseSeg1 = phaseSeg1 <<3;
 11437  0056FA  0100               	movlb	0	; () banked
 11438  0056FC  3985               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
 11439  0056FE  42E8               	rrncf	wreg,f,c
 11440  005700  0BF8               	andlw	248
 11441  005702  0100               	movlb	0	; () banked
 11442  005704  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 11443                           
 11444                           ; BSR set to: 0
 11445                           ;inc\CANlib.h: 236: BRGCON2 |= phaseSeg1;
 11446  005706  0100               	movlb	0	; () banked
 11447  005708  5185               	movf	CANInitialize@phaseSeg1& (0+255),w,b
 11448  00570A  1271               	iorwf	3953,f,c	;volatile
 11449                           
 11450                           ; BSR set to: 0
 11451                           ;inc\CANlib.h: 238: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
 11452  00570C  0100               	movlb	0	; () banked
 11453  00570E  A589               	btfss	CANInitialize@flags& (0+255),2,b
 11454                           
 11455                           ; BSR set to: 0
 11456                           ;inc\CANlib.h: 239: BRGCON2bits.SAM= 1;
 11457  005710  8C71               	bsf	3953,6,c	;volatile
 11458                           
 11459                           ; BSR set to: 0
 11460                           ;inc\CANlib.h: 241: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
 11461  005712  0100               	movlb	0	; () banked
 11462  005714  B189               	btfsc	CANInitialize@flags& (0+255),0,b
 11463                           
 11464                           ; BSR set to: 0
 11465                           ;inc\CANlib.h: 242: BRGCON2bits.SEG2PHTS = 1;
 11466  005716  8E71               	bsf	3953,7,c	;volatile
 11467                           
 11468                           ; BSR set to: 0
 11469                           ;inc\CANlib.h: 244: BRGCON3 |= phaseSeg2;
 11470                           
 11471                           ; BSR set to: 0
 11472  005718  0100               	movlb	0	; () banked
 11473  00571A  5186               	movf	CANInitialize@phaseSeg2& (0+255),w,b
 11474  00571C  1272               	iorwf	3954,f,c	;volatile
 11475                           
 11476                           ; BSR set to: 0
 11477                           ;inc\CANlib.h: 246: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
 11478  00571E  0100               	movlb	0	; () banked
 11479  005720  B389               	btfsc	CANInitialize@flags& (0+255),1,b
 11480                           
 11481                           ; BSR set to: 0
 11482                           ;inc\CANlib.h: 247: BRGCON3bits.WAKFIL = 1;
 11483  005722  8C72               	bsf	3954,6,c	;volatile
 11484                           
 11485                           ; BSR set to: 0
 11486                           ;inc\CANlib.h: 252: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
 11487                           
 11488                           ; BSR set to: 0
 11489  005724  0100               	movlb	0	; () banked
 11490  005726  5189               	movf	CANInitialize@flags& (0+255),w,b
 11491  005728  0B60               	andlw	96
 11492  00572A  6E60               	movwf	3936,c	;volatile
 11493                           
 11494                           ;inc\CANlib.h: 253: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
 11495  00572C  0100               	movlb	0	; () banked
 11496  00572E  5189               	movf	CANInitialize@flags& (0+255),w,b
 11497  005730  0B10               	andlw	16
 11498  005732  0AFF               	xorlw	255
 11499  005734  B4D8               	btfsc	status,2,c
 11500                           
 11501                           ; BSR set to: 0
 11502                           ;inc\CANlib.h: 254: RXB0CONbits.RXB0DBEN = 1;
 11503  005736  8460               	bsf	3936,2,c	;volatile
 11504                           
 11505                           ; BSR set to: 0
 11506                           ;inc\CANlib.h: 256: RXB1CON = RXB0CON;
 11507  005738  CF60 FF50          	movff	3936,3920	;volatile
 11508                           
 11509                           ; BSR set to: 0
 11510                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
 11511  00573C  0E00               	movlw	0
 11512  00573E  0100               	movlb	0	; () banked
 11513  005740  6F77               	movwf	CANSetMask@mask& (0+255),b
 11514  005742  0E00               	movlw	0
 11515  005744  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 11516  005746  0E00               	movlw	0
 11517  005748  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 11518  00574A  0E00               	movlw	0
 11519  00574C  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 11520  00574E  0EF7               	movlw	247
 11521  005750  0100               	movlb	0	; () banked
 11522  005752  6F7B               	movwf	CANSetMask@type& (0+255),b
 11523  005754  0E01               	movlw	1
 11524  005756  EC2D  F023         	call	_CANSetMask
 11525                           
 11526                           ;inc\CANlib.h: 261: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
 11527  00575A  0E00               	movlw	0
 11528  00575C  0100               	movlb	0	; () banked
 11529  00575E  6F77               	movwf	CANSetMask@mask& (0+255),b
 11530  005760  0E00               	movlw	0
 11531  005762  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 11532  005764  0E00               	movlw	0
 11533  005766  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 11534  005768  0E00               	movlw	0
 11535  00576A  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 11536  00576C  0EF7               	movlw	247
 11537  00576E  0100               	movlb	0	; () banked
 11538  005770  6F7B               	movwf	CANSetMask@type& (0+255),b
 11539  005772  0E02               	movlw	2
 11540  005774  EC2D  F023         	call	_CANSetMask
 11541                           
 11542                           ;inc\CANlib.h: 264: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
 11543  005778  D00F               	goto	l7944
 11544  00577A                     l7938:
 11545                           
 11546                           ;inc\CANlib.h: 267: FilterConfig1 = CAN_CONFIG_XTD_MSG;
 11547  00577A  0EF7               	movlw	247
 11548  00577C  0100               	movlb	0	; () banked
 11549  00577E  6F8F               	movwf	CANInitialize@FilterConfig1& (0+255),b
 11550  005780  D007               	goto	l7940
 11551  005782                     l358:
 11552                           
 11553                           ; BSR set to: 0
 11554                           ;inc\CANlib.h: 272: FilterConfig1 = CAN_CONFIG_STD_MSG;
 11555  005782  0100               	movlb	0	; () banked
 11556  005784  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 11557                           
 11558                           ;inc\CANlib.h: 273: FilterConfig2 = CAN_CONFIG_STD_MSG;
 11559  005786  0100               	movlb	0	; () banked
 11560  005788  6990               	setf	CANInitialize@FilterConfig2& (0+255),b
 11561                           
 11562                           ;inc\CANlib.h: 274: break;
 11563  00578A  D028               	goto	l7946
 11564  00578C                     l359:
 11565                           
 11566                           ; BSR set to: 0
 11567                           ;inc\CANlib.h: 276: FilterConfig1 = CAN_CONFIG_STD_MSG;
 11568  00578C  0100               	movlb	0	; () banked
 11569  00578E  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 11570  005790                     l7940:
 11571                           
 11572                           ; BSR set to: 0
 11573                           ;inc\CANlib.h: 277: FilterConfig2 = CAN_CONFIG_XTD_MSG;
 11574  005790  0EF7               	movlw	247
 11575  005792  0100               	movlb	0	; () banked
 11576  005794  6F90               	movwf	CANInitialize@FilterConfig2& (0+255),b
 11577                           
 11578                           ; BSR set to: 0
 11579                           ;inc\CANlib.h: 279: }
 11580                           
 11581                           ;inc\CANlib.h: 278: break;
 11582  005796  D022               	goto	l7946
 11583  005798                     l7944:
 11584  005798  0E9F               	movlw	159
 11585  00579A  0100               	movlb	0	; () banked
 11586  00579C  6F8A               	movwf	??_CANInitialize& (0+255),b
 11587  00579E  0EFF               	movlw	255
 11588  0057A0  0100               	movlb	0	; () banked
 11589  0057A2  6F8B               	movwf	(??_CANInitialize+1)& (0+255),b
 11590  0057A4  0100               	movlb	0	; () banked
 11591  0057A6  5189               	movf	CANInitialize@flags& (0+255),w,b
 11592  0057A8  0B60               	andlw	96
 11593  0057AA  0100               	movlb	0	; () banked
 11594  0057AC  6F8C               	movwf	(??_CANInitialize+2)& (0+255),b
 11595  0057AE  6B8D               	clrf	(??_CANInitialize+3)& (0+255),b
 11596  0057B0  0100               	movlb	0	; () banked
 11597  0057B2  518A               	movf	??_CANInitialize& (0+255),w,b
 11598  0057B4  0100               	movlb	0	; () banked
 11599  0057B6  138C               	iorwf	(??_CANInitialize+2)& (0+255),f,b
 11600  0057B8  0100               	movlb	0	; () banked
 11601  0057BA  518B               	movf	(??_CANInitialize+1)& (0+255),w,b
 11602  0057BC  0100               	movlb	0	; () banked
 11603  0057BE  138D               	iorwf	(??_CANInitialize+3)& (0+255),f,b
 11604                           
 11605                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11606                           ; Switch size 1, requested type "space"
 11607                           ; Number of cases is 1, Range of values is 0 to 0
 11608                           ; switch strategies available:
 11609                           ; Name         Instructions Cycles
 11610                           ; simple_byte            4     3 (average)
 11611                           ;	Chosen strategy is simple_byte
 11612  0057C0  0100               	movlb	0	; () banked
 11613  0057C2  518D               	movf	(??_CANInitialize+3)& (0+255),w,b
 11614  0057C4  0A00               	xorlw	0	; case 0
 11615  0057C6  A4D8               	btfss	status,2,c
 11616  0057C8  D7E1               	goto	l359
 11617                           
 11618                           ; BSR set to: 0
 11619                           ; Switch size 1, requested type "space"
 11620                           ; Number of cases is 2, Range of values is 191 to 223
 11621                           ; switch strategies available:
 11622                           ; Name         Instructions Cycles
 11623                           ; simple_byte            7     4 (average)
 11624                           ;	Chosen strategy is simple_byte
 11625  0057CA  0100               	movlb	0	; () banked
 11626  0057CC  518C               	movf	(??_CANInitialize+2)& (0+255),w,b
 11627  0057CE  0ABF               	xorlw	191	; case 191
 11628  0057D0  B4D8               	btfsc	status,2,c
 11629  0057D2  D7D7               	goto	l358
 11630  0057D4  0A60               	xorlw	96	; case 223
 11631  0057D6  B4D8               	btfsc	status,2,c
 11632  0057D8  D7D0               	goto	l7938
 11633  0057DA  D7D8               	goto	l359
 11634  0057DC                     l7946:
 11635                           
 11636                           ; BSR set to: 0
 11637                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
 11638  0057DC  0E00               	movlw	0
 11639  0057DE  0100               	movlb	0	; () banked
 11640  0057E0  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11641  0057E2  0E00               	movlw	0
 11642  0057E4  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11643  0057E6  0E00               	movlw	0
 11644  0057E8  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11645  0057EA  0E00               	movlw	0
 11646  0057EC  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11647  0057EE  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11648  0057F2  0E00               	movlw	0
 11649  0057F4  ECA9  F006         	call	_CANSetFilter
 11650                           
 11651                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
 11652  0057F8  0E00               	movlw	0
 11653  0057FA  0100               	movlb	0	; () banked
 11654  0057FC  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11655  0057FE  0E00               	movlw	0
 11656  005800  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11657  005802  0E00               	movlw	0
 11658  005804  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11659  005806  0E00               	movlw	0
 11660  005808  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11661  00580A  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11662  00580E  0E01               	movlw	1
 11663  005810  ECA9  F006         	call	_CANSetFilter
 11664                           
 11665                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
 11666  005814  0E00               	movlw	0
 11667  005816  0100               	movlb	0	; () banked
 11668  005818  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11669  00581A  0E00               	movlw	0
 11670  00581C  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11671  00581E  0E00               	movlw	0
 11672  005820  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11673  005822  0E00               	movlw	0
 11674  005824  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11675  005826  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11676  00582A  0E02               	movlw	2
 11677  00582C  ECA9  F006         	call	_CANSetFilter
 11678                           
 11679                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
 11680  005830  0E00               	movlw	0
 11681  005832  0100               	movlb	0	; () banked
 11682  005834  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11683  005836  0E00               	movlw	0
 11684  005838  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11685  00583A  0E00               	movlw	0
 11686  00583C  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11687  00583E  0E00               	movlw	0
 11688  005840  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11689  005842  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11690  005846  0E03               	movlw	3
 11691  005848  ECA9  F006         	call	_CANSetFilter
 11692                           
 11693                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
 11694  00584C  0E00               	movlw	0
 11695  00584E  0100               	movlb	0	; () banked
 11696  005850  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11697  005852  0E00               	movlw	0
 11698  005854  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11699  005856  0E00               	movlw	0
 11700  005858  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11701  00585A  0E00               	movlw	0
 11702  00585C  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11703  00585E  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11704  005862  0E04               	movlw	4
 11705  005864  ECA9  F006         	call	_CANSetFilter
 11706                           
 11707                           ;inc\CANlib.h: 286: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
 11708  005868  0E00               	movlw	0
 11709  00586A  0100               	movlb	0	; () banked
 11710  00586C  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11711  00586E  0E00               	movlw	0
 11712  005870  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11713  005872  0E00               	movlw	0
 11714  005874  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11715  005876  0E00               	movlw	0
 11716  005878  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11717  00587A  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11718  00587E  0E05               	movlw	5
 11719  005880  ECA9  F006         	call	_CANSetFilter
 11720                           
 11721                           ;inc\CANlib.h: 288: CANOperationMode(CAN_OP_MODE_NORMAL);
 11722  005884  0E00               	movlw	0
 11723  005886  EC6D  F033         	call	_CANOperationMode
 11724  00588A  0012               	return		;funcret
 11725  00588C                     __end_of_CANInitialize:
 11726                           	opt stack 0
 11727                           tblptru	equ	0xFF8
 11728                           tblptrh	equ	0xFF7
 11729                           tblptrl	equ	0xFF6
 11730                           tablat	equ	0xFF5
 11731                           prodh	equ	0xFF4
 11732                           prodl	equ	0xFF3
 11733                           intcon	equ	0xFF2
 11734                           intcon2	equ	0xFF1
 11735                           postinc0	equ	0xFEE
 11736                           wreg	equ	0xFE8
 11737                           postdec1	equ	0xFE5
 11738                           fsr1l	equ	0xFE1
 11739                           indf2	equ	0xFDF
 11740                           postinc2	equ	0xFDE
 11741                           postdec2	equ	0xFDD
 11742                           fsr2h	equ	0xFDA
 11743                           fsr2l	equ	0xFD9
 11744                           status	equ	0xFD8
 11745                           
 11746 ;; *************** function _CANSetMask *****************
 11747 ;; Defined at:
 11748 ;;		line 641 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 11749 ;; Parameters:    Size  Location     Type
 11750 ;;  numBuffer       1    wreg     enum E16347
 11751 ;;  mask            4   23[BANK0 ] unsigned long 
 11752 ;;  type            1   27[BANK0 ] enum E16313
 11753 ;; Auto vars:     Size  Location     Type
 11754 ;;  numBuffer       1   32[BANK0 ] enum E16347
 11755 ;;  tamp            4   33[BANK0 ] unsigned long 
 11756 ;; Return value:  Size  Location     Type
 11757 ;;		None               void
 11758 ;; Registers used:
 11759 ;;		wreg, status,2, status,0
 11760 ;; Tracked objects:
 11761 ;;		On entry : 0/0
 11762 ;;		On exit  : 0/0
 11763 ;;		Unchanged: 0/0
 11764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11765 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11766 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11767 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11768 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11769 ;;Total ram usage:       14 bytes
 11770 ;; Hardware stack levels used:    1
 11771 ;; Hardware stack levels required when called:    4
 11772 ;; This function calls:
 11773 ;;		Nothing
 11774 ;; This function is called by:
 11775 ;;		_CANInitialize
 11776 ;; This function uses a non-reentrant model
 11777 ;;
 11778                           
 11779                           	psect	text31
 11780  00465A                     __ptext31:
 11781                           	opt stack 0
 11782  00465A                     _CANSetMask:
 11783                           	opt stack 24
 11784                           
 11785                           ;incstack = 0
 11786                           ;CANSetMask@numBuffer stored from wreg
 11787  00465A  0100               	movlb	0	; () banked
 11788  00465C  6F80               	movwf	CANSetMask@numBuffer& (0+255),b
 11789                           
 11790                           ;inc\CANlib.h: 644: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
 11791  00465E  0100               	movlb	0	; () banked
 11792  004660  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 11793  004662  A4D8               	btfss	status,2,c
 11794  004664  D056               	goto	l5260
 11795                           
 11796                           ; BSR set to: 0
 11797  004666  0100               	movlb	0	; () banked
 11798  004668  297B               	incf	CANSetMask@type& (0+255),w,b
 11799  00466A  A4D8               	btfss	status,2,c
 11800  00466C  D052               	goto	l5260
 11801                           
 11802                           ; BSR set to: 0
 11803                           ;inc\CANlib.h: 645: {
 11804                           ;inc\CANlib.h: 646: tamp = (mask >> 3);
 11805  00466E  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11806  004672  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11807  004676  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11808  00467A  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11809  00467E  0E04               	movlw	4
 11810  004680  D006               	goto	u6110
 11811  004682                     u6115:
 11812  004682  0100               	movlb	0	; () banked
 11813  004684  90D8               	bcf	status,0,c
 11814  004686  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11815  004688  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11816  00468A  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11817  00468C  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11818  00468E                     u6110:
 11819  00468E  2EE8               	decfsz	wreg,f,c
 11820  004690  D7F8               	goto	u6115
 11821  004692  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11822  004696  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11823  00469A  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11824  00469E  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11825                           
 11826                           ; BSR set to: 0
 11827                           ;inc\CANlib.h: 647: tamp = tamp & 0x000000FF;
 11828  0046A2  0100               	movlb	0	; () banked
 11829  0046A4  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11830  0046A6  0100               	movlb	0	; () banked
 11831  0046A8  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11832  0046AA  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11833  0046AC  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11834  0046AE  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11835                           
 11836                           ; BSR set to: 0
 11837                           ;inc\CANlib.h: 648: RXM0SIDH = (unsigned char) tamp;
 11838  0046B0  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 11839                           
 11840                           ; BSR set to: 0
 11841                           ;inc\CANlib.h: 650: tamp = mask & 0x00000007;
 11842  0046B4  0E07               	movlw	7
 11843  0046B6  0100               	movlb	0	; () banked
 11844  0046B8  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11845  0046BA  0100               	movlb	0	; () banked
 11846  0046BC  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11847  0046BE  0E00               	movlw	0
 11848  0046C0  0100               	movlb	0	; () banked
 11849  0046C2  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11850  0046C4  0100               	movlb	0	; () banked
 11851  0046C6  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11852  0046C8  0E00               	movlw	0
 11853  0046CA  0100               	movlb	0	; () banked
 11854  0046CC  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11855  0046CE  0100               	movlb	0	; () banked
 11856  0046D0  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11857  0046D2  0E00               	movlw	0
 11858  0046D4  0100               	movlb	0	; () banked
 11859  0046D6  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11860  0046D8  0100               	movlb	0	; () banked
 11861  0046DA  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11862                           
 11863                           ; BSR set to: 0
 11864                           ;inc\CANlib.h: 651: tamp = tamp << 5;
 11865  0046DC  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11866  0046E0  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11867  0046E4  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11868  0046E8  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11869  0046EC  0E05               	movlw	5
 11870  0046EE                     u6125:
 11871  0046EE  90D8               	bcf	status,0,c
 11872  0046F0  0100               	movlb	0	; () banked
 11873  0046F2  377C               	rlcf	??_CANSetMask& (0+255),f,b
 11874  0046F4  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 11875  0046F6  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 11876  0046F8  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 11877  0046FA  2EE8               	decfsz	wreg,f,c
 11878  0046FC  D7F8               	goto	u6125
 11879  0046FE  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11880  004702  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11881  004706  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11882  00470A  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11883                           
 11884                           ; BSR set to: 0
 11885                           ;inc\CANlib.h: 652: RXM0SIDL = (unsigned char) tamp;
 11886  00470E  C081  FF19         	movff	CANSetMask@tamp,3865	;volatile
 11887  004712                     l5260:
 11888                           
 11889                           ; BSR set to: 0
 11890                           ;inc\CANlib.h: 653: }
 11891                           ;inc\CANlib.h: 655: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
 11892  004712  0E02               	movlw	2
 11893  004714  0100               	movlb	0	; () banked
 11894  004716  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 11895  004718  A4D8               	btfss	status,2,c
 11896  00471A  D056               	goto	l5276
 11897                           
 11898                           ; BSR set to: 0
 11899  00471C  0100               	movlb	0	; () banked
 11900  00471E  297B               	incf	CANSetMask@type& (0+255),w,b
 11901  004720  A4D8               	btfss	status,2,c
 11902  004722  D052               	goto	l5276
 11903                           
 11904                           ; BSR set to: 0
 11905                           ;inc\CANlib.h: 656: {
 11906                           ;inc\CANlib.h: 657: tamp = (mask >> 3);
 11907  004724  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11908  004728  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11909  00472C  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11910  004730  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11911  004734  0E04               	movlw	4
 11912  004736  D006               	goto	u6150
 11913  004738                     u6155:
 11914  004738  0100               	movlb	0	; () banked
 11915  00473A  90D8               	bcf	status,0,c
 11916  00473C  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11917  00473E  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11918  004740  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11919  004742  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11920  004744                     u6150:
 11921  004744  2EE8               	decfsz	wreg,f,c
 11922  004746  D7F8               	goto	u6155
 11923  004748  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11924  00474C  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11925  004750  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11926  004754  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11927                           
 11928                           ; BSR set to: 0
 11929                           ;inc\CANlib.h: 658: tamp = tamp & 0x000000FF;
 11930  004758  0100               	movlb	0	; () banked
 11931  00475A  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11932  00475C  0100               	movlb	0	; () banked
 11933  00475E  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11934  004760  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11935  004762  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11936  004764  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11937                           
 11938                           ; BSR set to: 0
 11939                           ;inc\CANlib.h: 659: RXM1SIDH = (unsigned char) tamp;
 11940  004766  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 11941                           
 11942                           ; BSR set to: 0
 11943                           ;inc\CANlib.h: 661: tamp = mask & 0x00000007;
 11944  00476A  0E07               	movlw	7
 11945  00476C  0100               	movlb	0	; () banked
 11946  00476E  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11947  004770  0100               	movlb	0	; () banked
 11948  004772  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11949  004774  0E00               	movlw	0
 11950  004776  0100               	movlb	0	; () banked
 11951  004778  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11952  00477A  0100               	movlb	0	; () banked
 11953  00477C  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11954  00477E  0E00               	movlw	0
 11955  004780  0100               	movlb	0	; () banked
 11956  004782  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11957  004784  0100               	movlb	0	; () banked
 11958  004786  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11959  004788  0E00               	movlw	0
 11960  00478A  0100               	movlb	0	; () banked
 11961  00478C  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11962  00478E  0100               	movlb	0	; () banked
 11963  004790  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11964                           
 11965                           ; BSR set to: 0
 11966                           ;inc\CANlib.h: 662: tamp = tamp << 5;
 11967  004792  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11968  004796  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11969  00479A  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11970  00479E  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11971  0047A2  0E05               	movlw	5
 11972  0047A4                     u6165:
 11973  0047A4  90D8               	bcf	status,0,c
 11974  0047A6  0100               	movlb	0	; () banked
 11975  0047A8  377C               	rlcf	??_CANSetMask& (0+255),f,b
 11976  0047AA  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 11977  0047AC  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 11978  0047AE  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 11979  0047B0  2EE8               	decfsz	wreg,f,c
 11980  0047B2  D7F8               	goto	u6165
 11981  0047B4  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11982  0047B8  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11983  0047BC  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11984  0047C0  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11985                           
 11986                           ; BSR set to: 0
 11987                           ;inc\CANlib.h: 663: RXM1SIDL = (unsigned char) tamp;
 11988  0047C4  C081  FF1D         	movff	CANSetMask@tamp,3869	;volatile
 11989  0047C8                     l5276:
 11990                           
 11991                           ; BSR set to: 0
 11992                           ;inc\CANlib.h: 664: }
 11993                           ;inc\CANlib.h: 666: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
 11994  0047C8  0100               	movlb	0	; () banked
 11995  0047CA  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 11996  0047CC  A4D8               	btfss	status,2,c
 11997  0047CE  D087               	goto	l5308
 11998                           
 11999                           ; BSR set to: 0
 12000  0047D0  0EF7               	movlw	247
 12001  0047D2  0100               	movlb	0	; () banked
 12002  0047D4  197B               	xorwf	CANSetMask@type& (0+255),w,b
 12003  0047D6  A4D8               	btfss	status,2,c
 12004  0047D8  D082               	goto	l5308
 12005                           
 12006                           ; BSR set to: 0
 12007                           ;inc\CANlib.h: 667: {
 12008                           ;inc\CANlib.h: 668: tamp = mask & 0x000000FF;
 12009  0047DA  0100               	movlb	0	; () banked
 12010  0047DC  5177               	movf	CANSetMask@mask& (0+255),w,b
 12011  0047DE  0100               	movlb	0	; () banked
 12012  0047E0  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12013  0047E2  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12014  0047E4  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12015  0047E6  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12016                           
 12017                           ; BSR set to: 0
 12018                           ;inc\CANlib.h: 669: RXM0EIDL = (unsigned char) tamp;
 12019  0047E8  C081  FF1B         	movff	CANSetMask@tamp,3867	;volatile
 12020                           
 12021                           ; BSR set to: 0
 12022                           ;inc\CANlib.h: 671: tamp = mask & 0x0000FF00;
 12023  0047EC  0E00               	movlw	0
 12024  0047EE  0100               	movlb	0	; () banked
 12025  0047F0  1577               	andwf	CANSetMask@mask& (0+255),w,b
 12026  0047F2  0100               	movlb	0	; () banked
 12027  0047F4  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12028  0047F6  0EFF               	movlw	255
 12029  0047F8  0100               	movlb	0	; () banked
 12030  0047FA  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 12031  0047FC  0100               	movlb	0	; () banked
 12032  0047FE  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 12033  004800  0E00               	movlw	0
 12034  004802  0100               	movlb	0	; () banked
 12035  004804  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 12036  004806  0100               	movlb	0	; () banked
 12037  004808  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 12038  00480A  0E00               	movlw	0
 12039  00480C  0100               	movlb	0	; () banked
 12040  00480E  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 12041  004810  0100               	movlb	0	; () banked
 12042  004812  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 12043                           
 12044                           ; BSR set to: 0
 12045                           ;inc\CANlib.h: 672: tamp = tamp >> 8;
 12046  004814  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 12047  004818  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 12048  00481C  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 12049  004820  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 12050  004824  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 12051  004828  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 12052  00482C  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 12053  004830  0100               	movlb	0	; () banked
 12054  004832  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 12055  004834  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12056  004838  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12057  00483C  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12058  004840  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12059                           
 12060                           ; BSR set to: 0
 12061                           ;inc\CANlib.h: 673: RXM0EIDH = (unsigned char) tamp;
 12062  004844  C081  FF1A         	movff	CANSetMask@tamp,3866	;volatile
 12063                           
 12064                           ; BSR set to: 0
 12065                           ;inc\CANlib.h: 675: if (mask & 0x00010000)
 12066  004848  0100               	movlb	0	; () banked
 12067  00484A  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 12068  00484C  D003               	goto	l432
 12069                           
 12070                           ; BSR set to: 0
 12071                           ;inc\CANlib.h: 676: RXM0SIDLbits.EID16 = 0x01;
 12072  00484E  010F               	movlb	15	; () banked
 12073  004850  8119               	bsf	25,0,b	;volatile
 12074  004852  D002               	goto	l433
 12075  004854                     l432:
 12076                           
 12077                           ; BSR set to: 0
 12078                           ;inc\CANlib.h: 677: else
 12079                           ;inc\CANlib.h: 678: RXM0SIDLbits.EID16 = 0x00;
 12080  004854  010F               	movlb	15	; () banked
 12081  004856  9119               	bcf	25,0,b	;volatile
 12082  004858                     l433:
 12083                           
 12084                           ; BSR set to: 15
 12085                           ;inc\CANlib.h: 680: if (mask & 0x00020000)
 12086  004858  0100               	movlb	0	; () banked
 12087  00485A  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 12088  00485C  D003               	goto	l434
 12089                           
 12090                           ; BSR set to: 0
 12091                           ;inc\CANlib.h: 681: RXM0SIDLbits.EID17 = 0x01;
 12092  00485E  010F               	movlb	15	; () banked
 12093  004860  8319               	bsf	25,1,b	;volatile
 12094  004862  D002               	goto	l435
 12095  004864                     l434:
 12096                           
 12097                           ; BSR set to: 0
 12098                           ;inc\CANlib.h: 682: else
 12099                           ;inc\CANlib.h: 683: RXM0SIDLbits.EID17 = 0x00;
 12100  004864  010F               	movlb	15	; () banked
 12101  004866  9319               	bcf	25,1,b	;volatile
 12102  004868                     l435:
 12103                           
 12104                           ; BSR set to: 15
 12105                           ;inc\CANlib.h: 685: if (mask & 0x00040000)
 12106  004868  0100               	movlb	0	; () banked
 12107  00486A  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 12108  00486C  D003               	goto	l436
 12109                           
 12110                           ; BSR set to: 0
 12111                           ;inc\CANlib.h: 686: RXM0SIDLbits.SID0 = 0x01;
 12112  00486E  010F               	movlb	15	; () banked
 12113  004870  8B19               	bsf	25,5,b	;volatile
 12114  004872  D002               	goto	l437
 12115  004874                     l436:
 12116                           
 12117                           ; BSR set to: 0
 12118                           ;inc\CANlib.h: 687: else
 12119                           ;inc\CANlib.h: 688: RXM0SIDLbits.SID0 = 0x00;
 12120  004874  010F               	movlb	15	; () banked
 12121  004876  9B19               	bcf	25,5,b	;volatile
 12122  004878                     l437:
 12123                           
 12124                           ; BSR set to: 15
 12125                           ;inc\CANlib.h: 690: if (mask & 0x00080000)
 12126  004878  0100               	movlb	0	; () banked
 12127  00487A  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 12128  00487C  D003               	goto	l438
 12129                           
 12130                           ; BSR set to: 0
 12131                           ;inc\CANlib.h: 691: RXM0SIDLbits.SID1 = 0x01;
 12132  00487E  010F               	movlb	15	; () banked
 12133  004880  8D19               	bsf	25,6,b	;volatile
 12134  004882  D002               	goto	l439
 12135  004884                     l438:
 12136                           
 12137                           ; BSR set to: 0
 12138                           ;inc\CANlib.h: 692: else
 12139                           ;inc\CANlib.h: 693: RXM0SIDLbits.SID1 = 0x00;
 12140  004884  010F               	movlb	15	; () banked
 12141  004886  9D19               	bcf	25,6,b	;volatile
 12142  004888                     l439:
 12143                           
 12144                           ; BSR set to: 15
 12145                           ;inc\CANlib.h: 695: if (mask & 0x00100000)
 12146  004888  0100               	movlb	0	; () banked
 12147  00488A  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 12148  00488C  D003               	goto	l440
 12149                           
 12150                           ; BSR set to: 0
 12151                           ;inc\CANlib.h: 696: RXM0SIDLbits.SID2 = 0x01 ;
 12152  00488E  010F               	movlb	15	; () banked
 12153  004890  8F19               	bsf	25,7,b	;volatile
 12154  004892  D002               	goto	l5302
 12155  004894                     l440:
 12156                           
 12157                           ; BSR set to: 0
 12158                           ;inc\CANlib.h: 697: else
 12159                           ;inc\CANlib.h: 698: RXM0SIDLbits.SID2 = 0x00 ;
 12160  004894  010F               	movlb	15	; () banked
 12161  004896  9F19               	bcf	25,7,b	;volatile
 12162  004898                     l5302:
 12163                           
 12164                           ; BSR set to: 15
 12165                           ;inc\CANlib.h: 700: tamp = (mask >> 21);
 12166  004898  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 12167  00489C  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 12168  0048A0  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 12169  0048A4  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 12170  0048A8  0E16               	movlw	22
 12171  0048AA  D006               	goto	u6240
 12172  0048AC                     u6245:
 12173  0048AC  0100               	movlb	0	; () banked
 12174  0048AE  90D8               	bcf	status,0,c
 12175  0048B0  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 12176  0048B2  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 12177  0048B4  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 12178  0048B6  337C               	rrcf	??_CANSetMask& (0+255),f,b
 12179  0048B8                     u6240:
 12180  0048B8  2EE8               	decfsz	wreg,f,c
 12181  0048BA  D7F8               	goto	u6245
 12182  0048BC  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12183  0048C0  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12184  0048C4  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12185  0048C8  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12186                           
 12187                           ; BSR set to: 0
 12188                           ;inc\CANlib.h: 701: tamp = tamp & 0x000000FF;
 12189  0048CC  0100               	movlb	0	; () banked
 12190  0048CE  5181               	movf	CANSetMask@tamp& (0+255),w,b
 12191  0048D0  0100               	movlb	0	; () banked
 12192  0048D2  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12193  0048D4  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12194  0048D6  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12195  0048D8  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12196                           
 12197                           ; BSR set to: 0
 12198                           ;inc\CANlib.h: 702: RXM0SIDH = (unsigned char) tamp;
 12199  0048DA  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 12200  0048DE                     l5308:
 12201                           
 12202                           ; BSR set to: 0
 12203                           ;inc\CANlib.h: 703: }
 12204                           ;inc\CANlib.h: 705: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
 12205  0048DE  0E02               	movlw	2
 12206  0048E0  0100               	movlb	0	; () banked
 12207  0048E2  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 12208  0048E4  A4D8               	btfss	status,2,c
 12209  0048E6  0012               	return	
 12210                           
 12211                           ; BSR set to: 0
 12212  0048E8  0EF7               	movlw	247
 12213  0048EA  0100               	movlb	0	; () banked
 12214  0048EC  197B               	xorwf	CANSetMask@type& (0+255),w,b
 12215  0048EE  A4D8               	btfss	status,2,c
 12216  0048F0  0012               	return	
 12217                           
 12218                           ; BSR set to: 0
 12219                           ;inc\CANlib.h: 706: {
 12220                           ;inc\CANlib.h: 707: tamp = mask & 0x000000FF;
 12221  0048F2  0100               	movlb	0	; () banked
 12222  0048F4  5177               	movf	CANSetMask@mask& (0+255),w,b
 12223  0048F6  0100               	movlb	0	; () banked
 12224  0048F8  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12225  0048FA  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12226  0048FC  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12227  0048FE  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12228                           
 12229                           ; BSR set to: 0
 12230                           ;inc\CANlib.h: 708: RXM1EIDL = (unsigned char) tamp;
 12231  004900  C081  FF1F         	movff	CANSetMask@tamp,3871	;volatile
 12232                           
 12233                           ; BSR set to: 0
 12234                           ;inc\CANlib.h: 710: tamp = mask & 0x0000FF00;
 12235  004904  0E00               	movlw	0
 12236  004906  0100               	movlb	0	; () banked
 12237  004908  1577               	andwf	CANSetMask@mask& (0+255),w,b
 12238  00490A  0100               	movlb	0	; () banked
 12239  00490C  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12240  00490E  0EFF               	movlw	255
 12241  004910  0100               	movlb	0	; () banked
 12242  004912  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 12243  004914  0100               	movlb	0	; () banked
 12244  004916  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 12245  004918  0E00               	movlw	0
 12246  00491A  0100               	movlb	0	; () banked
 12247  00491C  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 12248  00491E  0100               	movlb	0	; () banked
 12249  004920  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 12250  004922  0E00               	movlw	0
 12251  004924  0100               	movlb	0	; () banked
 12252  004926  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 12253  004928  0100               	movlb	0	; () banked
 12254  00492A  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 12255                           
 12256                           ; BSR set to: 0
 12257                           ;inc\CANlib.h: 711: tamp = tamp >> 8;
 12258  00492C  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 12259  004930  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 12260  004934  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 12261  004938  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 12262  00493C  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 12263  004940  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 12264  004944  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 12265  004948  0100               	movlb	0	; () banked
 12266  00494A  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 12267  00494C  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12268  004950  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12269  004954  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12270  004958  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12271                           
 12272                           ; BSR set to: 0
 12273                           ;inc\CANlib.h: 712: RXM1EIDH = (unsigned char) tamp;
 12274  00495C  C081  FF1E         	movff	CANSetMask@tamp,3870	;volatile
 12275                           
 12276                           ; BSR set to: 0
 12277                           ;inc\CANlib.h: 714: if (mask & 0x00010000)
 12278  004960  0100               	movlb	0	; () banked
 12279  004962  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 12280  004964  D003               	goto	l443
 12281                           
 12282                           ; BSR set to: 0
 12283                           ;inc\CANlib.h: 715: RXM1SIDLbits.EID16 = 0x01;
 12284  004966  010F               	movlb	15	; () banked
 12285  004968  811D               	bsf	29,0,b	;volatile
 12286  00496A  D002               	goto	l444
 12287  00496C                     l443:
 12288                           
 12289                           ; BSR set to: 0
 12290                           ;inc\CANlib.h: 716: else
 12291                           ;inc\CANlib.h: 717: RXM1SIDLbits.EID16 = 0x00;
 12292  00496C  010F               	movlb	15	; () banked
 12293  00496E  911D               	bcf	29,0,b	;volatile
 12294  004970                     l444:
 12295                           
 12296                           ; BSR set to: 15
 12297                           ;inc\CANlib.h: 719: if (mask & 0x00020000)
 12298  004970  0100               	movlb	0	; () banked
 12299  004972  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 12300  004974  D003               	goto	l445
 12301                           
 12302                           ; BSR set to: 0
 12303                           ;inc\CANlib.h: 720: RXM1SIDLbits.EID17 = 0x01;
 12304  004976  010F               	movlb	15	; () banked
 12305  004978  831D               	bsf	29,1,b	;volatile
 12306  00497A  D002               	goto	l446
 12307  00497C                     l445:
 12308                           
 12309                           ; BSR set to: 0
 12310                           ;inc\CANlib.h: 721: else
 12311                           ;inc\CANlib.h: 722: RXM1SIDLbits.EID17 = 0x00;
 12312  00497C  010F               	movlb	15	; () banked
 12313  00497E  931D               	bcf	29,1,b	;volatile
 12314  004980                     l446:
 12315                           
 12316                           ; BSR set to: 15
 12317                           ;inc\CANlib.h: 724: if (mask & 0x00040000)
 12318  004980  0100               	movlb	0	; () banked
 12319  004982  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 12320  004984  D003               	goto	l447
 12321                           
 12322                           ; BSR set to: 0
 12323                           ;inc\CANlib.h: 725: RXM1SIDLbits.SID0 = 0x01;
 12324  004986  010F               	movlb	15	; () banked
 12325  004988  8B1D               	bsf	29,5,b	;volatile
 12326  00498A  D002               	goto	l448
 12327  00498C                     l447:
 12328                           
 12329                           ; BSR set to: 0
 12330                           ;inc\CANlib.h: 726: else
 12331                           ;inc\CANlib.h: 727: RXM1SIDLbits.SID0 = 0x00;
 12332  00498C  010F               	movlb	15	; () banked
 12333  00498E  9B1D               	bcf	29,5,b	;volatile
 12334  004990                     l448:
 12335                           
 12336                           ; BSR set to: 15
 12337                           ;inc\CANlib.h: 729: if (mask & 0x00080000)
 12338  004990  0100               	movlb	0	; () banked
 12339  004992  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 12340  004994  D003               	goto	l449
 12341                           
 12342                           ; BSR set to: 0
 12343                           ;inc\CANlib.h: 730: RXM1SIDLbits.SID1 = 0x01;
 12344  004996  010F               	movlb	15	; () banked
 12345  004998  8D1D               	bsf	29,6,b	;volatile
 12346  00499A  D002               	goto	l450
 12347  00499C                     l449:
 12348                           
 12349                           ; BSR set to: 0
 12350                           ;inc\CANlib.h: 731: else
 12351                           ;inc\CANlib.h: 732: RXM1SIDLbits.SID1 = 0x00;
 12352  00499C  010F               	movlb	15	; () banked
 12353  00499E  9D1D               	bcf	29,6,b	;volatile
 12354  0049A0                     l450:
 12355                           
 12356                           ; BSR set to: 15
 12357                           ;inc\CANlib.h: 734: if (mask & 0x00100000)
 12358  0049A0  0100               	movlb	0	; () banked
 12359  0049A2  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 12360  0049A4  D003               	goto	l451
 12361                           
 12362                           ; BSR set to: 0
 12363                           ;inc\CANlib.h: 735: RXM1SIDLbits.SID2 = 0x01 ;
 12364  0049A6  010F               	movlb	15	; () banked
 12365  0049A8  8F1D               	bsf	29,7,b	;volatile
 12366  0049AA  D002               	goto	l5334
 12367  0049AC                     l451:
 12368                           
 12369                           ; BSR set to: 0
 12370                           ;inc\CANlib.h: 736: else
 12371                           ;inc\CANlib.h: 737: RXM1SIDLbits.SID2 = 0x00 ;
 12372  0049AC  010F               	movlb	15	; () banked
 12373  0049AE  9F1D               	bcf	29,7,b	;volatile
 12374  0049B0                     l5334:
 12375                           
 12376                           ; BSR set to: 15
 12377                           ;inc\CANlib.h: 739: tamp = (mask >> 21);
 12378  0049B0  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 12379  0049B4  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 12380  0049B8  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 12381  0049BC  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 12382  0049C0  0E16               	movlw	22
 12383  0049C2  D006               	goto	u6320
 12384  0049C4                     u6325:
 12385  0049C4  0100               	movlb	0	; () banked
 12386  0049C6  90D8               	bcf	status,0,c
 12387  0049C8  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 12388  0049CA  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 12389  0049CC  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 12390  0049CE  337C               	rrcf	??_CANSetMask& (0+255),f,b
 12391  0049D0                     u6320:
 12392  0049D0  2EE8               	decfsz	wreg,f,c
 12393  0049D2  D7F8               	goto	u6325
 12394  0049D4  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12395  0049D8  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12396  0049DC  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12397  0049E0  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12398                           
 12399                           ; BSR set to: 0
 12400                           ;inc\CANlib.h: 740: tamp = tamp & 0x000000FF;
 12401  0049E4  0100               	movlb	0	; () banked
 12402  0049E6  5181               	movf	CANSetMask@tamp& (0+255),w,b
 12403  0049E8  0100               	movlb	0	; () banked
 12404  0049EA  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12405  0049EC  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12406  0049EE  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12407  0049F0  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12408                           
 12409                           ; BSR set to: 0
 12410                           ;inc\CANlib.h: 741: RXM1SIDH = (unsigned char) tamp;
 12411  0049F2  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 12412  0049F6  0012               	return	
 12413  0049F8                     __end_of_CANSetMask:
 12414                           	opt stack 0
 12415                           tblptru	equ	0xFF8
 12416                           tblptrh	equ	0xFF7
 12417                           tblptrl	equ	0xFF6
 12418                           tablat	equ	0xFF5
 12419                           prodh	equ	0xFF4
 12420                           prodl	equ	0xFF3
 12421                           intcon	equ	0xFF2
 12422                           intcon2	equ	0xFF1
 12423                           postinc0	equ	0xFEE
 12424                           wreg	equ	0xFE8
 12425                           postdec1	equ	0xFE5
 12426                           fsr1l	equ	0xFE1
 12427                           indf2	equ	0xFDF
 12428                           postinc2	equ	0xFDE
 12429                           postdec2	equ	0xFDD
 12430                           fsr2h	equ	0xFDA
 12431                           fsr2l	equ	0xFD9
 12432                           status	equ	0xFD8
 12433                           
 12434 ;; *************** function _CANSetFilter *****************
 12435 ;; Defined at:
 12436 ;;		line 749 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 12437 ;; Parameters:    Size  Location     Type
 12438 ;;  numBuffer       1    wreg     enum E16350
 12439 ;;  filter          4   23[BANK0 ] unsigned long 
 12440 ;;  type            1   27[BANK0 ] enum E16313
 12441 ;; Auto vars:     Size  Location     Type
 12442 ;;  numBuffer       1   32[BANK0 ] enum E16350
 12443 ;;  tamp            4   33[BANK0 ] unsigned long 
 12444 ;; Return value:  Size  Location     Type
 12445 ;;		None               void
 12446 ;; Registers used:
 12447 ;;		wreg, status,2, status,0
 12448 ;; Tracked objects:
 12449 ;;		On entry : 0/0
 12450 ;;		On exit  : 0/0
 12451 ;;		Unchanged: 0/0
 12452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12453 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12454 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12455 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12456 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12457 ;;Total ram usage:       14 bytes
 12458 ;; Hardware stack levels used:    1
 12459 ;; Hardware stack levels required when called:    4
 12460 ;; This function calls:
 12461 ;;		Nothing
 12462 ;; This function is called by:
 12463 ;;		_CANInitialize
 12464 ;; This function uses a non-reentrant model
 12465 ;;
 12466                           
 12467                           	psect	text32
 12468  000D52                     __ptext32:
 12469                           	opt stack 0
 12470  000D52                     _CANSetFilter:
 12471                           	opt stack 24
 12472                           
 12473                           ; BSR set to: 0
 12474                           ;incstack = 0
 12475                           ;CANSetFilter@numBuffer stored from wreg
 12476  000D52  0100               	movlb	0	; () banked
 12477  000D54  6F80               	movwf	CANSetFilter@numBuffer& (0+255),b
 12478                           
 12479                           ;inc\CANlib.h: 751: unsigned long tamp;
 12480                           ;inc\CANlib.h: 753: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
 12481  000D56  0100               	movlb	0	; () banked
 12482  000D58  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 12483  000D5A  0100               	movlb	0	; () banked
 12484  000D5C  A4D8               	btfss	status,2,c
 12485  000D5E  D058               	goto	l5358
 12486                           
 12487                           ; BSR set to: 0
 12488  000D60  0100               	movlb	0	; () banked
 12489  000D62  297B               	incf	CANSetFilter@type& (0+255),w,b
 12490  000D64  A4D8               	btfss	status,2,c
 12491  000D66  D054               	goto	l5358
 12492                           
 12493                           ; BSR set to: 0
 12494                           ;inc\CANlib.h: 754: {
 12495                           ;inc\CANlib.h: 755: RXF0SIDLbits.EXIDEN = 0x00;
 12496  000D68  010F               	movlb	15	; () banked
 12497  000D6A  9701               	bcf	1,3,b	;volatile
 12498                           
 12499                           ; BSR set to: 15
 12500                           ;inc\CANlib.h: 757: tamp = (filter >> 3);
 12501  000D6C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12502  000D70  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12503  000D74  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12504  000D78  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12505  000D7C  0E04               	movlw	4
 12506  000D7E  D006               	goto	u6350
 12507  000D80                     u6355:
 12508  000D80  0100               	movlb	0	; () banked
 12509  000D82  90D8               	bcf	status,0,c
 12510  000D84  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12511  000D86  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12512  000D88  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12513  000D8A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12514  000D8C                     u6350:
 12515  000D8C  2EE8               	decfsz	wreg,f,c
 12516  000D8E  D7F8               	goto	u6355
 12517  000D90  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12518  000D94  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12519  000D98  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12520  000D9C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12521                           
 12522                           ; BSR set to: 0
 12523                           ;inc\CANlib.h: 758: tamp = tamp & 0x000000FF;
 12524  000DA0  0100               	movlb	0	; () banked
 12525  000DA2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12526  000DA4  0100               	movlb	0	; () banked
 12527  000DA6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12528  000DA8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12529  000DAA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12530  000DAC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12531                           
 12532                           ; BSR set to: 0
 12533                           ;inc\CANlib.h: 759: RXF0SIDH = (unsigned char) tamp;
 12534  000DAE  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 12535                           
 12536                           ; BSR set to: 0
 12537                           ;inc\CANlib.h: 761: tamp = filter & 0x00000007;
 12538  000DB2  0E07               	movlw	7
 12539  000DB4  0100               	movlb	0	; () banked
 12540  000DB6  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12541  000DB8  0100               	movlb	0	; () banked
 12542  000DBA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12543  000DBC  0E00               	movlw	0
 12544  000DBE  0100               	movlb	0	; () banked
 12545  000DC0  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12546  000DC2  0100               	movlb	0	; () banked
 12547  000DC4  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12548  000DC6  0E00               	movlw	0
 12549  000DC8  0100               	movlb	0	; () banked
 12550  000DCA  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12551  000DCC  0100               	movlb	0	; () banked
 12552  000DCE  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12553  000DD0  0E00               	movlw	0
 12554  000DD2  0100               	movlb	0	; () banked
 12555  000DD4  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12556  000DD6  0100               	movlb	0	; () banked
 12557  000DD8  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12558                           
 12559                           ; BSR set to: 0
 12560                           ;inc\CANlib.h: 762: tamp = tamp << 5;
 12561  000DDA  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12562  000DDE  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12563  000DE2  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12564  000DE6  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12565  000DEA  0E05               	movlw	5
 12566  000DEC                     u6365:
 12567  000DEC  90D8               	bcf	status,0,c
 12568  000DEE  0100               	movlb	0	; () banked
 12569  000DF0  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12570  000DF2  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12571  000DF4  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12572  000DF6  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12573  000DF8  2EE8               	decfsz	wreg,f,c
 12574  000DFA  D7F8               	goto	u6365
 12575  000DFC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12576  000E00  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12577  000E04  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12578  000E08  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12579                           
 12580                           ; BSR set to: 0
 12581                           ;inc\CANlib.h: 763: RXF0SIDL = (unsigned char) tamp;
 12582  000E0C  C081  FF01         	movff	CANSetFilter@tamp,3841	;volatile
 12583  000E10                     l5358:
 12584                           
 12585                           ; BSR set to: 0
 12586                           ;inc\CANlib.h: 764: }
 12587                           ;inc\CANlib.h: 766: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
 12588  000E10  0100               	movlb	0	; () banked
 12589  000E12  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 12590  000E14  A4D8               	btfss	status,2,c
 12591  000E16  D058               	goto	l5376
 12592                           
 12593                           ; BSR set to: 0
 12594  000E18  0100               	movlb	0	; () banked
 12595  000E1A  297B               	incf	CANSetFilter@type& (0+255),w,b
 12596  000E1C  A4D8               	btfss	status,2,c
 12597  000E1E  D054               	goto	l5376
 12598                           
 12599                           ; BSR set to: 0
 12600                           ;inc\CANlib.h: 767: {
 12601                           ;inc\CANlib.h: 768: RXF1SIDLbits.EXIDEN = 0x00;
 12602  000E20  010F               	movlb	15	; () banked
 12603  000E22  9705               	bcf	5,3,b	;volatile
 12604                           
 12605                           ; BSR set to: 15
 12606                           ;inc\CANlib.h: 770: tamp = (filter >> 3);
 12607  000E24  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12608  000E28  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12609  000E2C  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12610  000E30  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12611  000E34  0E04               	movlw	4
 12612  000E36  D006               	goto	u6390
 12613  000E38                     u6395:
 12614  000E38  0100               	movlb	0	; () banked
 12615  000E3A  90D8               	bcf	status,0,c
 12616  000E3C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12617  000E3E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12618  000E40  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12619  000E42  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12620  000E44                     u6390:
 12621  000E44  2EE8               	decfsz	wreg,f,c
 12622  000E46  D7F8               	goto	u6395
 12623  000E48  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12624  000E4C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12625  000E50  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12626  000E54  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12627                           
 12628                           ; BSR set to: 0
 12629                           ;inc\CANlib.h: 771: tamp = tamp & 0x000000FF;
 12630  000E58  0100               	movlb	0	; () banked
 12631  000E5A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12632  000E5C  0100               	movlb	0	; () banked
 12633  000E5E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12634  000E60  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12635  000E62  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12636  000E64  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12637                           
 12638                           ; BSR set to: 0
 12639                           ;inc\CANlib.h: 772: RXF1SIDH = (unsigned char) tamp;
 12640  000E66  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 12641                           
 12642                           ; BSR set to: 0
 12643                           ;inc\CANlib.h: 774: tamp = filter & 0x00000007;
 12644  000E6A  0E07               	movlw	7
 12645  000E6C  0100               	movlb	0	; () banked
 12646  000E6E  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12647  000E70  0100               	movlb	0	; () banked
 12648  000E72  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12649  000E74  0E00               	movlw	0
 12650  000E76  0100               	movlb	0	; () banked
 12651  000E78  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12652  000E7A  0100               	movlb	0	; () banked
 12653  000E7C  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12654  000E7E  0E00               	movlw	0
 12655  000E80  0100               	movlb	0	; () banked
 12656  000E82  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12657  000E84  0100               	movlb	0	; () banked
 12658  000E86  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12659  000E88  0E00               	movlw	0
 12660  000E8A  0100               	movlb	0	; () banked
 12661  000E8C  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12662  000E8E  0100               	movlb	0	; () banked
 12663  000E90  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12664                           
 12665                           ; BSR set to: 0
 12666                           ;inc\CANlib.h: 775: tamp = tamp << 5;
 12667  000E92  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12668  000E96  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12669  000E9A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12670  000E9E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12671  000EA2  0E05               	movlw	5
 12672  000EA4                     u6405:
 12673  000EA4  90D8               	bcf	status,0,c
 12674  000EA6  0100               	movlb	0	; () banked
 12675  000EA8  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12676  000EAA  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12677  000EAC  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12678  000EAE  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12679  000EB0  2EE8               	decfsz	wreg,f,c
 12680  000EB2  D7F8               	goto	u6405
 12681  000EB4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12682  000EB8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12683  000EBC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12684  000EC0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12685                           
 12686                           ; BSR set to: 0
 12687                           ;inc\CANlib.h: 776: RXF1SIDL = (unsigned char) tamp;
 12688  000EC4  C081  FF05         	movff	CANSetFilter@tamp,3845	;volatile
 12689  000EC8                     l5376:
 12690                           
 12691                           ; BSR set to: 0
 12692                           ;inc\CANlib.h: 777: }
 12693                           ;inc\CANlib.h: 779: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
 12694  000EC8  0E02               	movlw	2
 12695  000ECA  0100               	movlb	0	; () banked
 12696  000ECC  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12697  000ECE  A4D8               	btfss	status,2,c
 12698  000ED0  D058               	goto	l5394
 12699                           
 12700                           ; BSR set to: 0
 12701  000ED2  0100               	movlb	0	; () banked
 12702  000ED4  297B               	incf	CANSetFilter@type& (0+255),w,b
 12703  000ED6  A4D8               	btfss	status,2,c
 12704  000ED8  D054               	goto	l5394
 12705                           
 12706                           ; BSR set to: 0
 12707                           ;inc\CANlib.h: 780: {
 12708                           ;inc\CANlib.h: 781: RXF2SIDLbits.EXIDEN = 0x00;
 12709  000EDA  010F               	movlb	15	; () banked
 12710  000EDC  9709               	bcf	9,3,b	;volatile
 12711                           
 12712                           ; BSR set to: 15
 12713                           ;inc\CANlib.h: 783: tamp = (filter >> 3);
 12714  000EDE  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12715  000EE2  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12716  000EE6  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12717  000EEA  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12718  000EEE  0E04               	movlw	4
 12719  000EF0  D006               	goto	u6430
 12720  000EF2                     u6435:
 12721  000EF2  0100               	movlb	0	; () banked
 12722  000EF4  90D8               	bcf	status,0,c
 12723  000EF6  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12724  000EF8  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12725  000EFA  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12726  000EFC  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12727  000EFE                     u6430:
 12728  000EFE  2EE8               	decfsz	wreg,f,c
 12729  000F00  D7F8               	goto	u6435
 12730  000F02  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12731  000F06  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12732  000F0A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12733  000F0E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12734                           
 12735                           ; BSR set to: 0
 12736                           ;inc\CANlib.h: 784: tamp = tamp & 0x000000FF;
 12737  000F12  0100               	movlb	0	; () banked
 12738  000F14  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12739  000F16  0100               	movlb	0	; () banked
 12740  000F18  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12741  000F1A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12742  000F1C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12743  000F1E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12744                           
 12745                           ; BSR set to: 0
 12746                           ;inc\CANlib.h: 785: RXF2SIDH = (unsigned char) tamp;
 12747  000F20  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 12748                           
 12749                           ; BSR set to: 0
 12750                           ;inc\CANlib.h: 787: tamp = filter & 0x00000007;
 12751  000F24  0E07               	movlw	7
 12752  000F26  0100               	movlb	0	; () banked
 12753  000F28  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12754  000F2A  0100               	movlb	0	; () banked
 12755  000F2C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12756  000F2E  0E00               	movlw	0
 12757  000F30  0100               	movlb	0	; () banked
 12758  000F32  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12759  000F34  0100               	movlb	0	; () banked
 12760  000F36  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12761  000F38  0E00               	movlw	0
 12762  000F3A  0100               	movlb	0	; () banked
 12763  000F3C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12764  000F3E  0100               	movlb	0	; () banked
 12765  000F40  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12766  000F42  0E00               	movlw	0
 12767  000F44  0100               	movlb	0	; () banked
 12768  000F46  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12769  000F48  0100               	movlb	0	; () banked
 12770  000F4A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12771                           
 12772                           ; BSR set to: 0
 12773                           ;inc\CANlib.h: 788: tamp = tamp << 5;
 12774  000F4C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12775  000F50  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12776  000F54  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12777  000F58  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12778  000F5C  0E05               	movlw	5
 12779  000F5E                     u6445:
 12780  000F5E  90D8               	bcf	status,0,c
 12781  000F60  0100               	movlb	0	; () banked
 12782  000F62  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12783  000F64  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12784  000F66  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12785  000F68  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12786  000F6A  2EE8               	decfsz	wreg,f,c
 12787  000F6C  D7F8               	goto	u6445
 12788  000F6E  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12789  000F72  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12790  000F76  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12791  000F7A  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12792                           
 12793                           ; BSR set to: 0
 12794                           ;inc\CANlib.h: 789: RXF2SIDL = (unsigned char) tamp;
 12795  000F7E  C081  FF09         	movff	CANSetFilter@tamp,3849	;volatile
 12796  000F82                     l5394:
 12797                           
 12798                           ; BSR set to: 0
 12799                           ;inc\CANlib.h: 790: }
 12800                           ;inc\CANlib.h: 792: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
 12801  000F82  0E03               	movlw	3
 12802  000F84  0100               	movlb	0	; () banked
 12803  000F86  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12804  000F88  A4D8               	btfss	status,2,c
 12805  000F8A  D058               	goto	l5412
 12806                           
 12807                           ; BSR set to: 0
 12808  000F8C  0100               	movlb	0	; () banked
 12809  000F8E  297B               	incf	CANSetFilter@type& (0+255),w,b
 12810  000F90  A4D8               	btfss	status,2,c
 12811  000F92  D054               	goto	l5412
 12812                           
 12813                           ; BSR set to: 0
 12814                           ;inc\CANlib.h: 793: {
 12815                           ;inc\CANlib.h: 794: RXF3SIDLbits.EXIDEN = 0x00;
 12816  000F94  010F               	movlb	15	; () banked
 12817  000F96  970D               	bcf	13,3,b	;volatile
 12818                           
 12819                           ; BSR set to: 15
 12820                           ;inc\CANlib.h: 796: tamp = (filter >> 3);
 12821  000F98  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12822  000F9C  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12823  000FA0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12824  000FA4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12825  000FA8  0E04               	movlw	4
 12826  000FAA  D006               	goto	u6470
 12827  000FAC                     u6475:
 12828  000FAC  0100               	movlb	0	; () banked
 12829  000FAE  90D8               	bcf	status,0,c
 12830  000FB0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12831  000FB2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12832  000FB4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12833  000FB6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12834  000FB8                     u6470:
 12835  000FB8  2EE8               	decfsz	wreg,f,c
 12836  000FBA  D7F8               	goto	u6475
 12837  000FBC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12838  000FC0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12839  000FC4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12840  000FC8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12841                           
 12842                           ; BSR set to: 0
 12843                           ;inc\CANlib.h: 797: tamp = tamp & 0x000000FF;
 12844  000FCC  0100               	movlb	0	; () banked
 12845  000FCE  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12846  000FD0  0100               	movlb	0	; () banked
 12847  000FD2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12848  000FD4  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12849  000FD6  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12850  000FD8  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12851                           
 12852                           ; BSR set to: 0
 12853                           ;inc\CANlib.h: 798: RXF3SIDH = (unsigned char) tamp;
 12854  000FDA  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 12855                           
 12856                           ; BSR set to: 0
 12857                           ;inc\CANlib.h: 800: tamp = filter & 0x00000007;
 12858  000FDE  0E07               	movlw	7
 12859  000FE0  0100               	movlb	0	; () banked
 12860  000FE2  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12861  000FE4  0100               	movlb	0	; () banked
 12862  000FE6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12863  000FE8  0E00               	movlw	0
 12864  000FEA  0100               	movlb	0	; () banked
 12865  000FEC  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12866  000FEE  0100               	movlb	0	; () banked
 12867  000FF0  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12868  000FF2  0E00               	movlw	0
 12869  000FF4  0100               	movlb	0	; () banked
 12870  000FF6  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12871  000FF8  0100               	movlb	0	; () banked
 12872  000FFA  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12873  000FFC  0E00               	movlw	0
 12874  000FFE  0100               	movlb	0	; () banked
 12875  001000  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12876  001002  0100               	movlb	0	; () banked
 12877  001004  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12878                           
 12879                           ; BSR set to: 0
 12880                           ;inc\CANlib.h: 801: tamp = tamp << 5;
 12881  001006  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12882  00100A  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12883  00100E  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12884  001012  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12885  001016  0E05               	movlw	5
 12886  001018                     u6485:
 12887  001018  90D8               	bcf	status,0,c
 12888  00101A  0100               	movlb	0	; () banked
 12889  00101C  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12890  00101E  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12891  001020  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12892  001022  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12893  001024  2EE8               	decfsz	wreg,f,c
 12894  001026  D7F8               	goto	u6485
 12895  001028  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12896  00102C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12897  001030  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12898  001034  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12899                           
 12900                           ; BSR set to: 0
 12901                           ;inc\CANlib.h: 802: RXF3SIDL = (unsigned char) tamp;
 12902  001038  C081  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
 12903  00103C                     l5412:
 12904                           
 12905                           ; BSR set to: 0
 12906                           ;inc\CANlib.h: 803: }
 12907                           ;inc\CANlib.h: 805: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
 12908  00103C  0E04               	movlw	4
 12909  00103E  0100               	movlb	0	; () banked
 12910  001040  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12911  001042  A4D8               	btfss	status,2,c
 12912  001044  D058               	goto	l5430
 12913                           
 12914                           ; BSR set to: 0
 12915  001046  0100               	movlb	0	; () banked
 12916  001048  297B               	incf	CANSetFilter@type& (0+255),w,b
 12917  00104A  A4D8               	btfss	status,2,c
 12918  00104C  D054               	goto	l5430
 12919                           
 12920                           ; BSR set to: 0
 12921                           ;inc\CANlib.h: 806: {
 12922                           ;inc\CANlib.h: 807: RXF4SIDLbits.EXIDEN = 0x00;
 12923  00104E  010F               	movlb	15	; () banked
 12924  001050  9711               	bcf	17,3,b	;volatile
 12925                           
 12926                           ; BSR set to: 15
 12927                           ;inc\CANlib.h: 809: tamp = (filter >> 3);
 12928  001052  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12929  001056  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12930  00105A  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12931  00105E  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12932  001062  0E04               	movlw	4
 12933  001064  D006               	goto	u6510
 12934  001066                     u6515:
 12935  001066  0100               	movlb	0	; () banked
 12936  001068  90D8               	bcf	status,0,c
 12937  00106A  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12938  00106C  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12939  00106E  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12940  001070  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12941  001072                     u6510:
 12942  001072  2EE8               	decfsz	wreg,f,c
 12943  001074  D7F8               	goto	u6515
 12944  001076  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12945  00107A  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12946  00107E  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12947  001082  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12948                           
 12949                           ; BSR set to: 0
 12950                           ;inc\CANlib.h: 810: tamp = tamp & 0x000000FF;
 12951  001086  0100               	movlb	0	; () banked
 12952  001088  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12953  00108A  0100               	movlb	0	; () banked
 12954  00108C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12955  00108E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12956  001090  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12957  001092  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12958                           
 12959                           ; BSR set to: 0
 12960                           ;inc\CANlib.h: 811: RXF4SIDH = (unsigned char) tamp;
 12961  001094  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 12962                           
 12963                           ; BSR set to: 0
 12964                           ;inc\CANlib.h: 813: tamp = filter & 0x00000007;
 12965  001098  0E07               	movlw	7
 12966  00109A  0100               	movlb	0	; () banked
 12967  00109C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12968  00109E  0100               	movlb	0	; () banked
 12969  0010A0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12970  0010A2  0E00               	movlw	0
 12971  0010A4  0100               	movlb	0	; () banked
 12972  0010A6  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12973  0010A8  0100               	movlb	0	; () banked
 12974  0010AA  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12975  0010AC  0E00               	movlw	0
 12976  0010AE  0100               	movlb	0	; () banked
 12977  0010B0  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12978  0010B2  0100               	movlb	0	; () banked
 12979  0010B4  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12980  0010B6  0E00               	movlw	0
 12981  0010B8  0100               	movlb	0	; () banked
 12982  0010BA  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12983  0010BC  0100               	movlb	0	; () banked
 12984  0010BE  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12985                           
 12986                           ; BSR set to: 0
 12987                           ;inc\CANlib.h: 814: tamp = tamp << 5;
 12988  0010C0  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12989  0010C4  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12990  0010C8  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12991  0010CC  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12992  0010D0  0E05               	movlw	5
 12993  0010D2                     u6525:
 12994  0010D2  90D8               	bcf	status,0,c
 12995  0010D4  0100               	movlb	0	; () banked
 12996  0010D6  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12997  0010D8  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12998  0010DA  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12999  0010DC  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 13000  0010DE  2EE8               	decfsz	wreg,f,c
 13001  0010E0  D7F8               	goto	u6525
 13002  0010E2  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13003  0010E6  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13004  0010EA  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13005  0010EE  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13006                           
 13007                           ; BSR set to: 0
 13008                           ;inc\CANlib.h: 815: RXF4SIDL = (unsigned char) tamp;
 13009  0010F2  C081  FF11         	movff	CANSetFilter@tamp,3857	;volatile
 13010  0010F6                     l5430:
 13011                           
 13012                           ; BSR set to: 0
 13013                           ;inc\CANlib.h: 816: }
 13014                           ;inc\CANlib.h: 818: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
 13015  0010F6  0E05               	movlw	5
 13016  0010F8  0100               	movlb	0	; () banked
 13017  0010FA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13018  0010FC  A4D8               	btfss	status,2,c
 13019  0010FE  D058               	goto	l5448
 13020                           
 13021                           ; BSR set to: 0
 13022  001100  0100               	movlb	0	; () banked
 13023  001102  297B               	incf	CANSetFilter@type& (0+255),w,b
 13024  001104  A4D8               	btfss	status,2,c
 13025  001106  D054               	goto	l5448
 13026                           
 13027                           ; BSR set to: 0
 13028                           ;inc\CANlib.h: 819: {
 13029                           ;inc\CANlib.h: 820: RXF5SIDLbits.EXIDEN = 0x00;
 13030  001108  010F               	movlb	15	; () banked
 13031  00110A  9715               	bcf	21,3,b	;volatile
 13032                           
 13033                           ; BSR set to: 15
 13034                           ;inc\CANlib.h: 822: tamp = (filter >> 3);
 13035  00110C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13036  001110  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13037  001114  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13038  001118  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13039  00111C  0E04               	movlw	4
 13040  00111E  D006               	goto	u6550
 13041  001120                     u6555:
 13042  001120  0100               	movlb	0	; () banked
 13043  001122  90D8               	bcf	status,0,c
 13044  001124  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13045  001126  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13046  001128  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13047  00112A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13048  00112C                     u6550:
 13049  00112C  2EE8               	decfsz	wreg,f,c
 13050  00112E  D7F8               	goto	u6555
 13051  001130  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13052  001134  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13053  001138  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13054  00113C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13055                           
 13056                           ; BSR set to: 0
 13057                           ;inc\CANlib.h: 823: tamp = tamp & 0x000000FF;
 13058  001140  0100               	movlb	0	; () banked
 13059  001142  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13060  001144  0100               	movlb	0	; () banked
 13061  001146  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13062  001148  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13063  00114A  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13064  00114C  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13065                           
 13066                           ; BSR set to: 0
 13067                           ;inc\CANlib.h: 824: RXF5SIDH = (unsigned char) tamp;
 13068  00114E  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 13069                           
 13070                           ; BSR set to: 0
 13071                           ;inc\CANlib.h: 826: tamp = filter & 0x00000007;
 13072  001152  0E07               	movlw	7
 13073  001154  0100               	movlb	0	; () banked
 13074  001156  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13075  001158  0100               	movlb	0	; () banked
 13076  00115A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13077  00115C  0E00               	movlw	0
 13078  00115E  0100               	movlb	0	; () banked
 13079  001160  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13080  001162  0100               	movlb	0	; () banked
 13081  001164  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13082  001166  0E00               	movlw	0
 13083  001168  0100               	movlb	0	; () banked
 13084  00116A  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13085  00116C  0100               	movlb	0	; () banked
 13086  00116E  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13087  001170  0E00               	movlw	0
 13088  001172  0100               	movlb	0	; () banked
 13089  001174  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13090  001176  0100               	movlb	0	; () banked
 13091  001178  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13092                           
 13093                           ; BSR set to: 0
 13094                           ;inc\CANlib.h: 827: tamp = tamp << 5;
 13095  00117A  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13096  00117E  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13097  001182  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13098  001186  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13099  00118A  0E05               	movlw	5
 13100  00118C                     u6565:
 13101  00118C  90D8               	bcf	status,0,c
 13102  00118E  0100               	movlb	0	; () banked
 13103  001190  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 13104  001192  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 13105  001194  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 13106  001196  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 13107  001198  2EE8               	decfsz	wreg,f,c
 13108  00119A  D7F8               	goto	u6565
 13109  00119C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13110  0011A0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13111  0011A4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13112  0011A8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13113                           
 13114                           ; BSR set to: 0
 13115                           ;inc\CANlib.h: 828: RXF5SIDL = (unsigned char) tamp;
 13116  0011AC  C081  FF15         	movff	CANSetFilter@tamp,3861	;volatile
 13117  0011B0                     l5448:
 13118                           
 13119                           ; BSR set to: 0
 13120                           ;inc\CANlib.h: 829: }
 13121                           ;inc\CANlib.h: 832: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
 13122  0011B0  0100               	movlb	0	; () banked
 13123  0011B2  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 13124  0011B4  0100               	movlb	0	; () banked
 13125  0011B6  A4D8               	btfss	status,2,c
 13126  0011B8  D089               	goto	l5482
 13127                           
 13128                           ; BSR set to: 0
 13129  0011BA  0EF7               	movlw	247
 13130  0011BC  0100               	movlb	0	; () banked
 13131  0011BE  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13132  0011C0  A4D8               	btfss	status,2,c
 13133  0011C2  D084               	goto	l5482
 13134                           
 13135                           ; BSR set to: 0
 13136                           ;inc\CANlib.h: 833: {
 13137                           ;inc\CANlib.h: 834: RXF0SIDLbits.EXIDEN = 0x01;
 13138  0011C4  010F               	movlb	15	; () banked
 13139  0011C6  8701               	bsf	1,3,b	;volatile
 13140                           
 13141                           ; BSR set to: 15
 13142                           ;inc\CANlib.h: 836: tamp = filter & 0x000000FF;
 13143  0011C8  0100               	movlb	0	; () banked
 13144  0011CA  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13145  0011CC  0100               	movlb	0	; () banked
 13146  0011CE  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13147  0011D0  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13148  0011D2  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13149  0011D4  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13150                           
 13151                           ; BSR set to: 0
 13152                           ;inc\CANlib.h: 837: RXF0EIDL = (unsigned char) tamp;
 13153  0011D6  C081  FF03         	movff	CANSetFilter@tamp,3843	;volatile
 13154                           
 13155                           ; BSR set to: 0
 13156                           ;inc\CANlib.h: 839: tamp = filter & 0x0000FF00;
 13157  0011DA  0E00               	movlw	0
 13158  0011DC  0100               	movlb	0	; () banked
 13159  0011DE  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13160  0011E0  0100               	movlb	0	; () banked
 13161  0011E2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13162  0011E4  0EFF               	movlw	255
 13163  0011E6  0100               	movlb	0	; () banked
 13164  0011E8  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13165  0011EA  0100               	movlb	0	; () banked
 13166  0011EC  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13167  0011EE  0E00               	movlw	0
 13168  0011F0  0100               	movlb	0	; () banked
 13169  0011F2  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13170  0011F4  0100               	movlb	0	; () banked
 13171  0011F6  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13172  0011F8  0E00               	movlw	0
 13173  0011FA  0100               	movlb	0	; () banked
 13174  0011FC  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13175  0011FE  0100               	movlb	0	; () banked
 13176  001200  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13177                           
 13178                           ; BSR set to: 0
 13179                           ;inc\CANlib.h: 840: tamp = tamp >> 8;
 13180  001202  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13181  001206  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13182  00120A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13183  00120E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13184  001212  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13185  001216  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13186  00121A  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13187  00121E  0100               	movlb	0	; () banked
 13188  001220  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13189  001222  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13190  001226  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13191  00122A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13192  00122E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13193                           
 13194                           ; BSR set to: 0
 13195                           ;inc\CANlib.h: 841: RXF0EIDH = (unsigned char) tamp;
 13196  001232  C081  FF02         	movff	CANSetFilter@tamp,3842	;volatile
 13197                           
 13198                           ; BSR set to: 0
 13199                           ;inc\CANlib.h: 843: if (filter & 0x00010000)
 13200  001236  0100               	movlb	0	; () banked
 13201  001238  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13202  00123A  D003               	goto	l463
 13203                           
 13204                           ; BSR set to: 0
 13205                           ;inc\CANlib.h: 844: RXF0SIDLbits.EID16 = 0x01;
 13206  00123C  010F               	movlb	15	; () banked
 13207  00123E  8101               	bsf	1,0,b	;volatile
 13208  001240  D002               	goto	l464
 13209  001242                     l463:
 13210                           
 13211                           ; BSR set to: 0
 13212                           ;inc\CANlib.h: 845: else
 13213                           ;inc\CANlib.h: 846: RXF0SIDLbits.EID16 = 0x00;
 13214  001242  010F               	movlb	15	; () banked
 13215  001244  9101               	bcf	1,0,b	;volatile
 13216  001246                     l464:
 13217                           
 13218                           ; BSR set to: 15
 13219                           ;inc\CANlib.h: 848: if (filter & 0x00020000)
 13220  001246  0100               	movlb	0	; () banked
 13221  001248  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13222  00124A  D003               	goto	l465
 13223                           
 13224                           ; BSR set to: 0
 13225                           ;inc\CANlib.h: 849: RXF0SIDLbits.EID17 = 0x01;
 13226  00124C  010F               	movlb	15	; () banked
 13227  00124E  8301               	bsf	1,1,b	;volatile
 13228  001250  D002               	goto	l466
 13229  001252                     l465:
 13230                           
 13231                           ; BSR set to: 0
 13232                           ;inc\CANlib.h: 850: else
 13233                           ;inc\CANlib.h: 851: RXF0SIDLbits.EID17 = 0x00;
 13234  001252  010F               	movlb	15	; () banked
 13235  001254  9301               	bcf	1,1,b	;volatile
 13236  001256                     l466:
 13237                           
 13238                           ; BSR set to: 15
 13239                           ;inc\CANlib.h: 853: if (filter & 0x00040000)
 13240  001256  0100               	movlb	0	; () banked
 13241  001258  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13242  00125A  D003               	goto	l467
 13243                           
 13244                           ; BSR set to: 0
 13245                           ;inc\CANlib.h: 854: RXF0SIDLbits.SID0 = 0x01;
 13246  00125C  010F               	movlb	15	; () banked
 13247  00125E  8B01               	bsf	1,5,b	;volatile
 13248  001260  D002               	goto	l468
 13249  001262                     l467:
 13250                           
 13251                           ; BSR set to: 0
 13252                           ;inc\CANlib.h: 855: else
 13253                           ;inc\CANlib.h: 856: RXF0SIDLbits.SID0 = 0x00;
 13254  001262  010F               	movlb	15	; () banked
 13255  001264  9B01               	bcf	1,5,b	;volatile
 13256  001266                     l468:
 13257                           
 13258                           ; BSR set to: 15
 13259                           ;inc\CANlib.h: 858: if (filter & 0x00080000)
 13260  001266  0100               	movlb	0	; () banked
 13261  001268  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13262  00126A  D003               	goto	l469
 13263                           
 13264                           ; BSR set to: 0
 13265                           ;inc\CANlib.h: 859: RXF0SIDLbits.SID1 = 0x01;
 13266  00126C  010F               	movlb	15	; () banked
 13267  00126E  8D01               	bsf	1,6,b	;volatile
 13268  001270  D002               	goto	l470
 13269  001272                     l469:
 13270                           
 13271                           ; BSR set to: 0
 13272                           ;inc\CANlib.h: 860: else
 13273                           ;inc\CANlib.h: 861: RXF0SIDLbits.SID1 = 0x00;
 13274  001272  010F               	movlb	15	; () banked
 13275  001274  9D01               	bcf	1,6,b	;volatile
 13276  001276                     l470:
 13277                           
 13278                           ; BSR set to: 15
 13279                           ;inc\CANlib.h: 863: if (filter & 0x00100000)
 13280  001276  0100               	movlb	0	; () banked
 13281  001278  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13282  00127A  D003               	goto	l471
 13283                           
 13284                           ; BSR set to: 0
 13285                           ;inc\CANlib.h: 864: RXF0SIDLbits.SID2 = 0x01 ;
 13286  00127C  010F               	movlb	15	; () banked
 13287  00127E  8F01               	bsf	1,7,b	;volatile
 13288  001280  D002               	goto	l5476
 13289  001282                     l471:
 13290                           
 13291                           ; BSR set to: 0
 13292                           ;inc\CANlib.h: 865: else
 13293                           ;inc\CANlib.h: 866: RXF0SIDLbits.SID2 = 0x00 ;
 13294  001282  010F               	movlb	15	; () banked
 13295  001284  9F01               	bcf	1,7,b	;volatile
 13296  001286                     l5476:
 13297                           
 13298                           ; BSR set to: 15
 13299                           ;inc\CANlib.h: 868: tamp = (filter >> 21);
 13300  001286  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13301  00128A  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13302  00128E  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13303  001292  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13304  001296  0E16               	movlw	22
 13305  001298  D006               	goto	u6640
 13306  00129A                     u6645:
 13307  00129A  0100               	movlb	0	; () banked
 13308  00129C  90D8               	bcf	status,0,c
 13309  00129E  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13310  0012A0  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13311  0012A2  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13312  0012A4  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13313  0012A6                     u6640:
 13314  0012A6  2EE8               	decfsz	wreg,f,c
 13315  0012A8  D7F8               	goto	u6645
 13316  0012AA  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13317  0012AE  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13318  0012B2  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13319  0012B6  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13320                           
 13321                           ; BSR set to: 0
 13322                           ;inc\CANlib.h: 869: tamp = tamp & 0x000000FF;
 13323  0012BA  0100               	movlb	0	; () banked
 13324  0012BC  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13325  0012BE  0100               	movlb	0	; () banked
 13326  0012C0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13327  0012C2  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13328  0012C4  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13329  0012C6  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13330                           
 13331                           ; BSR set to: 0
 13332                           ;inc\CANlib.h: 870: RXF0SIDH = (unsigned char) tamp;
 13333  0012C8  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 13334  0012CC                     l5482:
 13335                           
 13336                           ; BSR set to: 0
 13337                           ;inc\CANlib.h: 871: }
 13338                           ;inc\CANlib.h: 873: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
 13339  0012CC  0100               	movlb	0	; () banked
 13340  0012CE  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 13341  0012D0  A4D8               	btfss	status,2,c
 13342  0012D2  D089               	goto	l5516
 13343                           
 13344                           ; BSR set to: 0
 13345  0012D4  0EF7               	movlw	247
 13346  0012D6  0100               	movlb	0	; () banked
 13347  0012D8  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13348  0012DA  A4D8               	btfss	status,2,c
 13349  0012DC  D084               	goto	l5516
 13350                           
 13351                           ; BSR set to: 0
 13352                           ;inc\CANlib.h: 874: {
 13353                           ;inc\CANlib.h: 875: RXF1SIDLbits.EXIDEN = 0x01;
 13354  0012DE  010F               	movlb	15	; () banked
 13355  0012E0  8705               	bsf	5,3,b	;volatile
 13356                           
 13357                           ; BSR set to: 15
 13358                           ;inc\CANlib.h: 877: tamp = filter & 0x000000FF;
 13359  0012E2  0100               	movlb	0	; () banked
 13360  0012E4  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13361  0012E6  0100               	movlb	0	; () banked
 13362  0012E8  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13363  0012EA  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13364  0012EC  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13365  0012EE  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13366                           
 13367                           ; BSR set to: 0
 13368                           ;inc\CANlib.h: 878: RXF1EIDL = (unsigned char) tamp;
 13369  0012F0  C081  FF07         	movff	CANSetFilter@tamp,3847	;volatile
 13370                           
 13371                           ; BSR set to: 0
 13372                           ;inc\CANlib.h: 880: tamp = filter & 0x0000FF00;
 13373  0012F4  0E00               	movlw	0
 13374  0012F6  0100               	movlb	0	; () banked
 13375  0012F8  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13376  0012FA  0100               	movlb	0	; () banked
 13377  0012FC  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13378  0012FE  0EFF               	movlw	255
 13379  001300  0100               	movlb	0	; () banked
 13380  001302  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13381  001304  0100               	movlb	0	; () banked
 13382  001306  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13383  001308  0E00               	movlw	0
 13384  00130A  0100               	movlb	0	; () banked
 13385  00130C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13386  00130E  0100               	movlb	0	; () banked
 13387  001310  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13388  001312  0E00               	movlw	0
 13389  001314  0100               	movlb	0	; () banked
 13390  001316  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13391  001318  0100               	movlb	0	; () banked
 13392  00131A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13393                           
 13394                           ; BSR set to: 0
 13395                           ;inc\CANlib.h: 881: tamp = tamp >> 8;
 13396  00131C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13397  001320  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13398  001324  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13399  001328  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13400  00132C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13401  001330  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13402  001334  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13403  001338  0100               	movlb	0	; () banked
 13404  00133A  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13405  00133C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13406  001340  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13407  001344  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13408  001348  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13409                           
 13410                           ; BSR set to: 0
 13411                           ;inc\CANlib.h: 882: RXF1EIDH = (unsigned char) tamp;
 13412  00134C  C081  FF06         	movff	CANSetFilter@tamp,3846	;volatile
 13413                           
 13414                           ; BSR set to: 0
 13415                           ;inc\CANlib.h: 884: if (filter & 0x00010000)
 13416  001350  0100               	movlb	0	; () banked
 13417  001352  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13418  001354  D003               	goto	l474
 13419                           
 13420                           ; BSR set to: 0
 13421                           ;inc\CANlib.h: 885: RXF1SIDLbits.EID16 = 0x01;
 13422  001356  010F               	movlb	15	; () banked
 13423  001358  8105               	bsf	5,0,b	;volatile
 13424  00135A  D002               	goto	l475
 13425  00135C                     l474:
 13426                           
 13427                           ; BSR set to: 0
 13428                           ;inc\CANlib.h: 886: else
 13429                           ;inc\CANlib.h: 887: RXF1SIDLbits.EID16 = 0x00;
 13430  00135C  010F               	movlb	15	; () banked
 13431  00135E  9105               	bcf	5,0,b	;volatile
 13432  001360                     l475:
 13433                           
 13434                           ; BSR set to: 15
 13435                           ;inc\CANlib.h: 889: if (filter & 0x00020000)
 13436  001360  0100               	movlb	0	; () banked
 13437  001362  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13438  001364  D003               	goto	l476
 13439                           
 13440                           ; BSR set to: 0
 13441                           ;inc\CANlib.h: 890: RXF1SIDLbits.EID17 = 0x01;
 13442  001366  010F               	movlb	15	; () banked
 13443  001368  8305               	bsf	5,1,b	;volatile
 13444  00136A  D002               	goto	l477
 13445  00136C                     l476:
 13446                           
 13447                           ; BSR set to: 0
 13448                           ;inc\CANlib.h: 891: else
 13449                           ;inc\CANlib.h: 892: RXF1SIDLbits.EID17 = 0x00;
 13450  00136C  010F               	movlb	15	; () banked
 13451  00136E  9305               	bcf	5,1,b	;volatile
 13452  001370                     l477:
 13453                           
 13454                           ; BSR set to: 15
 13455                           ;inc\CANlib.h: 894: if (filter & 0x00040000)
 13456  001370  0100               	movlb	0	; () banked
 13457  001372  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13458  001374  D003               	goto	l478
 13459                           
 13460                           ; BSR set to: 0
 13461                           ;inc\CANlib.h: 895: RXF1SIDLbits.SID0 = 0x01;
 13462  001376  010F               	movlb	15	; () banked
 13463  001378  8B05               	bsf	5,5,b	;volatile
 13464  00137A  D002               	goto	l479
 13465  00137C                     l478:
 13466                           
 13467                           ; BSR set to: 0
 13468                           ;inc\CANlib.h: 896: else
 13469                           ;inc\CANlib.h: 897: RXF1SIDLbits.SID0 = 0x00;
 13470  00137C  010F               	movlb	15	; () banked
 13471  00137E  9B05               	bcf	5,5,b	;volatile
 13472  001380                     l479:
 13473                           
 13474                           ; BSR set to: 15
 13475                           ;inc\CANlib.h: 899: if (filter & 0x00080000)
 13476  001380  0100               	movlb	0	; () banked
 13477  001382  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13478  001384  D003               	goto	l480
 13479                           
 13480                           ; BSR set to: 0
 13481                           ;inc\CANlib.h: 900: RXF1SIDLbits.SID1 = 0x01;
 13482  001386  010F               	movlb	15	; () banked
 13483  001388  8D05               	bsf	5,6,b	;volatile
 13484  00138A  D002               	goto	l481
 13485  00138C                     l480:
 13486                           
 13487                           ; BSR set to: 0
 13488                           ;inc\CANlib.h: 901: else
 13489                           ;inc\CANlib.h: 902: RXF1SIDLbits.SID1 = 0x00;
 13490  00138C  010F               	movlb	15	; () banked
 13491  00138E  9D05               	bcf	5,6,b	;volatile
 13492  001390                     l481:
 13493                           
 13494                           ; BSR set to: 15
 13495                           ;inc\CANlib.h: 904: if (filter & 0x00100000)
 13496  001390  0100               	movlb	0	; () banked
 13497  001392  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13498  001394  D003               	goto	l482
 13499                           
 13500                           ; BSR set to: 0
 13501                           ;inc\CANlib.h: 905: RXF1SIDLbits.SID2 = 0x01 ;
 13502  001396  010F               	movlb	15	; () banked
 13503  001398  8F05               	bsf	5,7,b	;volatile
 13504  00139A  D002               	goto	l5510
 13505  00139C                     l482:
 13506                           
 13507                           ; BSR set to: 0
 13508                           ;inc\CANlib.h: 906: else
 13509                           ;inc\CANlib.h: 907: RXF1SIDLbits.SID2 = 0x00 ;
 13510  00139C  010F               	movlb	15	; () banked
 13511  00139E  9F05               	bcf	5,7,b	;volatile
 13512  0013A0                     l5510:
 13513                           
 13514                           ; BSR set to: 15
 13515                           ;inc\CANlib.h: 909: tamp = (filter >> 21);
 13516  0013A0  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13517  0013A4  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13518  0013A8  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13519  0013AC  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13520  0013B0  0E16               	movlw	22
 13521  0013B2  D006               	goto	u6720
 13522  0013B4                     u6725:
 13523  0013B4  0100               	movlb	0	; () banked
 13524  0013B6  90D8               	bcf	status,0,c
 13525  0013B8  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13526  0013BA  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13527  0013BC  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13528  0013BE  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13529  0013C0                     u6720:
 13530  0013C0  2EE8               	decfsz	wreg,f,c
 13531  0013C2  D7F8               	goto	u6725
 13532  0013C4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13533  0013C8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13534  0013CC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13535  0013D0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13536                           
 13537                           ; BSR set to: 0
 13538                           ;inc\CANlib.h: 910: tamp = tamp & 0x000000FF;
 13539  0013D4  0100               	movlb	0	; () banked
 13540  0013D6  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13541  0013D8  0100               	movlb	0	; () banked
 13542  0013DA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13543  0013DC  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13544  0013DE  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13545  0013E0  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13546                           
 13547                           ; BSR set to: 0
 13548                           ;inc\CANlib.h: 911: RXF1SIDH = (unsigned char) tamp;
 13549  0013E2  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 13550  0013E6                     l5516:
 13551                           
 13552                           ; BSR set to: 0
 13553                           ;inc\CANlib.h: 912: }
 13554                           ;inc\CANlib.h: 915: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
 13555  0013E6  0E02               	movlw	2
 13556  0013E8  0100               	movlb	0	; () banked
 13557  0013EA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13558  0013EC  A4D8               	btfss	status,2,c
 13559  0013EE  D089               	goto	l5550
 13560                           
 13561                           ; BSR set to: 0
 13562  0013F0  0EF7               	movlw	247
 13563  0013F2  0100               	movlb	0	; () banked
 13564  0013F4  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13565  0013F6  A4D8               	btfss	status,2,c
 13566  0013F8  D084               	goto	l5550
 13567                           
 13568                           ; BSR set to: 0
 13569                           ;inc\CANlib.h: 916: {
 13570                           ;inc\CANlib.h: 917: RXF2SIDLbits.EXIDEN = 0x01;
 13571  0013FA  010F               	movlb	15	; () banked
 13572  0013FC  8709               	bsf	9,3,b	;volatile
 13573                           
 13574                           ; BSR set to: 15
 13575                           ;inc\CANlib.h: 919: tamp = filter & 0x000000FF;
 13576  0013FE  0100               	movlb	0	; () banked
 13577  001400  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13578  001402  0100               	movlb	0	; () banked
 13579  001404  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13580  001406  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13581  001408  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13582  00140A  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13583                           
 13584                           ; BSR set to: 0
 13585                           ;inc\CANlib.h: 920: RXF2EIDL = (unsigned char) tamp;
 13586  00140C  C081  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
 13587                           
 13588                           ; BSR set to: 0
 13589                           ;inc\CANlib.h: 922: tamp = filter & 0x0000FF00;
 13590  001410  0E00               	movlw	0
 13591  001412  0100               	movlb	0	; () banked
 13592  001414  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13593  001416  0100               	movlb	0	; () banked
 13594  001418  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13595  00141A  0EFF               	movlw	255
 13596  00141C  0100               	movlb	0	; () banked
 13597  00141E  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13598  001420  0100               	movlb	0	; () banked
 13599  001422  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13600  001424  0E00               	movlw	0
 13601  001426  0100               	movlb	0	; () banked
 13602  001428  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13603  00142A  0100               	movlb	0	; () banked
 13604  00142C  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13605  00142E  0E00               	movlw	0
 13606  001430  0100               	movlb	0	; () banked
 13607  001432  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13608  001434  0100               	movlb	0	; () banked
 13609  001436  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13610                           
 13611                           ; BSR set to: 0
 13612                           ;inc\CANlib.h: 923: tamp = tamp >> 8;
 13613  001438  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13614  00143C  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13615  001440  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13616  001444  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13617  001448  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13618  00144C  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13619  001450  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13620  001454  0100               	movlb	0	; () banked
 13621  001456  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13622  001458  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13623  00145C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13624  001460  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13625  001464  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13626                           
 13627                           ; BSR set to: 0
 13628                           ;inc\CANlib.h: 924: RXF2EIDH = (unsigned char) tamp;
 13629  001468  C081  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
 13630                           
 13631                           ; BSR set to: 0
 13632                           ;inc\CANlib.h: 926: if (filter & 0x00010000)
 13633  00146C  0100               	movlb	0	; () banked
 13634  00146E  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13635  001470  D003               	goto	l485
 13636                           
 13637                           ; BSR set to: 0
 13638                           ;inc\CANlib.h: 927: RXF2SIDLbits.EID16 = 0x01;
 13639  001472  010F               	movlb	15	; () banked
 13640  001474  8109               	bsf	9,0,b	;volatile
 13641  001476  D002               	goto	l486
 13642  001478                     l485:
 13643                           
 13644                           ; BSR set to: 0
 13645                           ;inc\CANlib.h: 928: else
 13646                           ;inc\CANlib.h: 929: RXF2SIDLbits.EID16 = 0x00;
 13647  001478  010F               	movlb	15	; () banked
 13648  00147A  9109               	bcf	9,0,b	;volatile
 13649  00147C                     l486:
 13650                           
 13651                           ; BSR set to: 15
 13652                           ;inc\CANlib.h: 931: if (filter & 0x00020000)
 13653  00147C  0100               	movlb	0	; () banked
 13654  00147E  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13655  001480  D003               	goto	l487
 13656                           
 13657                           ; BSR set to: 0
 13658                           ;inc\CANlib.h: 932: RXF2SIDLbits.EID17 = 0x01;
 13659  001482  010F               	movlb	15	; () banked
 13660  001484  8309               	bsf	9,1,b	;volatile
 13661  001486  D002               	goto	l488
 13662  001488                     l487:
 13663                           
 13664                           ; BSR set to: 0
 13665                           ;inc\CANlib.h: 933: else
 13666                           ;inc\CANlib.h: 934: RXF2SIDLbits.EID17 = 0x00;
 13667  001488  010F               	movlb	15	; () banked
 13668  00148A  9309               	bcf	9,1,b	;volatile
 13669  00148C                     l488:
 13670                           
 13671                           ; BSR set to: 15
 13672                           ;inc\CANlib.h: 936: if (filter & 0x00040000)
 13673  00148C  0100               	movlb	0	; () banked
 13674  00148E  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13675  001490  D003               	goto	l489
 13676                           
 13677                           ; BSR set to: 0
 13678                           ;inc\CANlib.h: 937: RXF2SIDLbits.SID0 = 0x01;
 13679  001492  010F               	movlb	15	; () banked
 13680  001494  8B09               	bsf	9,5,b	;volatile
 13681  001496  D002               	goto	l490
 13682  001498                     l489:
 13683                           
 13684                           ; BSR set to: 0
 13685                           ;inc\CANlib.h: 938: else
 13686                           ;inc\CANlib.h: 939: RXF2SIDLbits.SID0 = 0x00;
 13687  001498  010F               	movlb	15	; () banked
 13688  00149A  9B09               	bcf	9,5,b	;volatile
 13689  00149C                     l490:
 13690                           
 13691                           ; BSR set to: 15
 13692                           ;inc\CANlib.h: 941: if (filter & 0x00080000)
 13693  00149C  0100               	movlb	0	; () banked
 13694  00149E  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13695  0014A0  D003               	goto	l491
 13696                           
 13697                           ; BSR set to: 0
 13698                           ;inc\CANlib.h: 942: RXF2SIDLbits.SID1 = 0x01;
 13699  0014A2  010F               	movlb	15	; () banked
 13700  0014A4  8D09               	bsf	9,6,b	;volatile
 13701  0014A6  D002               	goto	l492
 13702  0014A8                     l491:
 13703                           
 13704                           ; BSR set to: 0
 13705                           ;inc\CANlib.h: 943: else
 13706                           ;inc\CANlib.h: 944: RXF2SIDLbits.SID1 = 0x00;
 13707  0014A8  010F               	movlb	15	; () banked
 13708  0014AA  9D09               	bcf	9,6,b	;volatile
 13709  0014AC                     l492:
 13710                           
 13711                           ; BSR set to: 15
 13712                           ;inc\CANlib.h: 946: if (filter & 0x00100000)
 13713  0014AC  0100               	movlb	0	; () banked
 13714  0014AE  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13715  0014B0  D003               	goto	l493
 13716                           
 13717                           ; BSR set to: 0
 13718                           ;inc\CANlib.h: 947: RXF2SIDLbits.SID2 = 0x01 ;
 13719  0014B2  010F               	movlb	15	; () banked
 13720  0014B4  8F09               	bsf	9,7,b	;volatile
 13721  0014B6  D002               	goto	l5544
 13722  0014B8                     l493:
 13723                           
 13724                           ; BSR set to: 0
 13725                           ;inc\CANlib.h: 948: else
 13726                           ;inc\CANlib.h: 949: RXF2SIDLbits.SID2 = 0x00 ;
 13727  0014B8  010F               	movlb	15	; () banked
 13728  0014BA  9F09               	bcf	9,7,b	;volatile
 13729  0014BC                     l5544:
 13730                           
 13731                           ; BSR set to: 15
 13732                           ;inc\CANlib.h: 951: tamp = (filter >> 21);
 13733  0014BC  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13734  0014C0  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13735  0014C4  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13736  0014C8  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13737  0014CC  0E16               	movlw	22
 13738  0014CE  D006               	goto	u6800
 13739  0014D0                     u6805:
 13740  0014D0  0100               	movlb	0	; () banked
 13741  0014D2  90D8               	bcf	status,0,c
 13742  0014D4  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13743  0014D6  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13744  0014D8  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13745  0014DA  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13746  0014DC                     u6800:
 13747  0014DC  2EE8               	decfsz	wreg,f,c
 13748  0014DE  D7F8               	goto	u6805
 13749  0014E0  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13750  0014E4  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13751  0014E8  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13752  0014EC  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13753                           
 13754                           ; BSR set to: 0
 13755                           ;inc\CANlib.h: 952: tamp = tamp & 0x000000FF;
 13756  0014F0  0100               	movlb	0	; () banked
 13757  0014F2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13758  0014F4  0100               	movlb	0	; () banked
 13759  0014F6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13760  0014F8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13761  0014FA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13762  0014FC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13763                           
 13764                           ; BSR set to: 0
 13765                           ;inc\CANlib.h: 953: RXF2SIDH = (unsigned char) tamp;
 13766  0014FE  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 13767  001502                     l5550:
 13768                           
 13769                           ; BSR set to: 0
 13770                           ;inc\CANlib.h: 954: }
 13771                           ;inc\CANlib.h: 956: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
 13772  001502  0E03               	movlw	3
 13773  001504  0100               	movlb	0	; () banked
 13774  001506  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13775  001508  A4D8               	btfss	status,2,c
 13776  00150A  D089               	goto	l5584
 13777                           
 13778                           ; BSR set to: 0
 13779  00150C  0EF7               	movlw	247
 13780  00150E  0100               	movlb	0	; () banked
 13781  001510  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13782  001512  A4D8               	btfss	status,2,c
 13783  001514  D084               	goto	l5584
 13784                           
 13785                           ; BSR set to: 0
 13786                           ;inc\CANlib.h: 957: {
 13787                           ;inc\CANlib.h: 958: RXF3SIDLbits.EXIDEN = 0x01;
 13788  001516  010F               	movlb	15	; () banked
 13789  001518  870D               	bsf	13,3,b	;volatile
 13790                           
 13791                           ; BSR set to: 15
 13792                           ;inc\CANlib.h: 960: tamp = filter & 0x000000FF;
 13793  00151A  0100               	movlb	0	; () banked
 13794  00151C  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13795  00151E  0100               	movlb	0	; () banked
 13796  001520  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13797  001522  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13798  001524  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13799  001526  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13800                           
 13801                           ; BSR set to: 0
 13802                           ;inc\CANlib.h: 961: RXF3EIDL = (unsigned char) tamp;
 13803  001528  C081  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
 13804                           
 13805                           ; BSR set to: 0
 13806                           ;inc\CANlib.h: 963: tamp = filter & 0x0000FF00;
 13807  00152C  0E00               	movlw	0
 13808  00152E  0100               	movlb	0	; () banked
 13809  001530  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13810  001532  0100               	movlb	0	; () banked
 13811  001534  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13812  001536  0EFF               	movlw	255
 13813  001538  0100               	movlb	0	; () banked
 13814  00153A  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13815  00153C  0100               	movlb	0	; () banked
 13816  00153E  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13817  001540  0E00               	movlw	0
 13818  001542  0100               	movlb	0	; () banked
 13819  001544  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13820  001546  0100               	movlb	0	; () banked
 13821  001548  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13822  00154A  0E00               	movlw	0
 13823  00154C  0100               	movlb	0	; () banked
 13824  00154E  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13825  001550  0100               	movlb	0	; () banked
 13826  001552  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13827                           
 13828                           ; BSR set to: 0
 13829                           ;inc\CANlib.h: 964: tamp = tamp >> 8;
 13830  001554  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13831  001558  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13832  00155C  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13833  001560  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13834  001564  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13835  001568  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13836  00156C  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13837  001570  0100               	movlb	0	; () banked
 13838  001572  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13839  001574  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13840  001578  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13841  00157C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13842  001580  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13843                           
 13844                           ; BSR set to: 0
 13845                           ;inc\CANlib.h: 965: RXF3EIDH = (unsigned char) tamp;
 13846  001584  C081  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
 13847                           
 13848                           ; BSR set to: 0
 13849                           ;inc\CANlib.h: 967: if (filter & 0x00010000)
 13850  001588  0100               	movlb	0	; () banked
 13851  00158A  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13852  00158C  D003               	goto	l496
 13853                           
 13854                           ; BSR set to: 0
 13855                           ;inc\CANlib.h: 968: RXF3SIDLbits.EID16 = 0x01;
 13856  00158E  010F               	movlb	15	; () banked
 13857  001590  810D               	bsf	13,0,b	;volatile
 13858  001592  D002               	goto	l497
 13859  001594                     l496:
 13860                           
 13861                           ; BSR set to: 0
 13862                           ;inc\CANlib.h: 969: else
 13863                           ;inc\CANlib.h: 970: RXF3SIDLbits.EID16 = 0x00;
 13864  001594  010F               	movlb	15	; () banked
 13865  001596  910D               	bcf	13,0,b	;volatile
 13866  001598                     l497:
 13867                           
 13868                           ; BSR set to: 15
 13869                           ;inc\CANlib.h: 972: if (filter & 0x00020000)
 13870  001598  0100               	movlb	0	; () banked
 13871  00159A  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13872  00159C  D003               	goto	l498
 13873                           
 13874                           ; BSR set to: 0
 13875                           ;inc\CANlib.h: 973: RXF3SIDLbits.EID17 = 0x01;
 13876  00159E  010F               	movlb	15	; () banked
 13877  0015A0  830D               	bsf	13,1,b	;volatile
 13878  0015A2  D002               	goto	l499
 13879  0015A4                     l498:
 13880                           
 13881                           ; BSR set to: 0
 13882                           ;inc\CANlib.h: 974: else
 13883                           ;inc\CANlib.h: 975: RXF3SIDLbits.EID17 = 0x00;
 13884  0015A4  010F               	movlb	15	; () banked
 13885  0015A6  930D               	bcf	13,1,b	;volatile
 13886  0015A8                     l499:
 13887                           
 13888                           ; BSR set to: 15
 13889                           ;inc\CANlib.h: 977: if (filter & 0x00040000)
 13890  0015A8  0100               	movlb	0	; () banked
 13891  0015AA  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13892  0015AC  D003               	goto	l500
 13893                           
 13894                           ; BSR set to: 0
 13895                           ;inc\CANlib.h: 978: RXF3SIDLbits.SID0 = 0x01;
 13896  0015AE  010F               	movlb	15	; () banked
 13897  0015B0  8B0D               	bsf	13,5,b	;volatile
 13898  0015B2  D002               	goto	l501
 13899  0015B4                     l500:
 13900                           
 13901                           ; BSR set to: 0
 13902                           ;inc\CANlib.h: 979: else
 13903                           ;inc\CANlib.h: 980: RXF3SIDLbits.SID0 = 0x00;
 13904  0015B4  010F               	movlb	15	; () banked
 13905  0015B6  9B0D               	bcf	13,5,b	;volatile
 13906  0015B8                     l501:
 13907                           
 13908                           ; BSR set to: 15
 13909                           ;inc\CANlib.h: 982: if (filter & 0x00080000)
 13910  0015B8  0100               	movlb	0	; () banked
 13911  0015BA  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13912  0015BC  D003               	goto	l502
 13913                           
 13914                           ; BSR set to: 0
 13915                           ;inc\CANlib.h: 983: RXF3SIDLbits.SID1 = 0x01;
 13916  0015BE  010F               	movlb	15	; () banked
 13917  0015C0  8D0D               	bsf	13,6,b	;volatile
 13918  0015C2  D002               	goto	l503
 13919  0015C4                     l502:
 13920                           
 13921                           ; BSR set to: 0
 13922                           ;inc\CANlib.h: 984: else
 13923                           ;inc\CANlib.h: 985: RXF3SIDLbits.SID1 = 0x00;
 13924  0015C4  010F               	movlb	15	; () banked
 13925  0015C6  9D0D               	bcf	13,6,b	;volatile
 13926  0015C8                     l503:
 13927                           
 13928                           ; BSR set to: 15
 13929                           ;inc\CANlib.h: 987: if (filter & 0x00100000)
 13930  0015C8  0100               	movlb	0	; () banked
 13931  0015CA  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13932  0015CC  D003               	goto	l504
 13933                           
 13934                           ; BSR set to: 0
 13935                           ;inc\CANlib.h: 988: RXF3SIDLbits.SID2 = 0x01 ;
 13936  0015CE  010F               	movlb	15	; () banked
 13937  0015D0  8F0D               	bsf	13,7,b	;volatile
 13938  0015D2  D002               	goto	l5578
 13939  0015D4                     l504:
 13940                           
 13941                           ; BSR set to: 0
 13942                           ;inc\CANlib.h: 989: else
 13943                           ;inc\CANlib.h: 990: RXF3SIDLbits.SID2 = 0x00 ;
 13944  0015D4  010F               	movlb	15	; () banked
 13945  0015D6  9F0D               	bcf	13,7,b	;volatile
 13946  0015D8                     l5578:
 13947                           
 13948                           ; BSR set to: 15
 13949                           ;inc\CANlib.h: 992: tamp = (filter >> 21);
 13950  0015D8  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13951  0015DC  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13952  0015E0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13953  0015E4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13954  0015E8  0E16               	movlw	22
 13955  0015EA  D006               	goto	u6880
 13956  0015EC                     u6885:
 13957  0015EC  0100               	movlb	0	; () banked
 13958  0015EE  90D8               	bcf	status,0,c
 13959  0015F0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13960  0015F2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13961  0015F4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13962  0015F6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13963  0015F8                     u6880:
 13964  0015F8  2EE8               	decfsz	wreg,f,c
 13965  0015FA  D7F8               	goto	u6885
 13966  0015FC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13967  001600  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13968  001604  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13969  001608  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13970                           
 13971                           ; BSR set to: 0
 13972                           ;inc\CANlib.h: 993: tamp = tamp & 0x000000FF;
 13973  00160C  0100               	movlb	0	; () banked
 13974  00160E  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13975  001610  0100               	movlb	0	; () banked
 13976  001612  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13977  001614  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13978  001616  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13979  001618  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13980                           
 13981                           ; BSR set to: 0
 13982                           ;inc\CANlib.h: 994: RXF3SIDH = (unsigned char) tamp;
 13983  00161A  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 13984  00161E                     l5584:
 13985                           
 13986                           ; BSR set to: 0
 13987                           ;inc\CANlib.h: 995: }
 13988                           ;inc\CANlib.h: 997: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
 13989  00161E  0E04               	movlw	4
 13990  001620  0100               	movlb	0	; () banked
 13991  001622  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13992  001624  A4D8               	btfss	status,2,c
 13993  001626  D089               	goto	l5618
 13994                           
 13995                           ; BSR set to: 0
 13996  001628  0EF7               	movlw	247
 13997  00162A  0100               	movlb	0	; () banked
 13998  00162C  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13999  00162E  A4D8               	btfss	status,2,c
 14000  001630  D084               	goto	l5618
 14001                           
 14002                           ; BSR set to: 0
 14003                           ;inc\CANlib.h: 998: {
 14004                           ;inc\CANlib.h: 999: RXF4SIDLbits.EXIDEN = 0x01;
 14005  001632  010F               	movlb	15	; () banked
 14006  001634  8711               	bsf	17,3,b	;volatile
 14007                           
 14008                           ; BSR set to: 15
 14009                           ;inc\CANlib.h: 1001: tamp = filter & 0x000000FF;
 14010  001636  0100               	movlb	0	; () banked
 14011  001638  5177               	movf	CANSetFilter@filter& (0+255),w,b
 14012  00163A  0100               	movlb	0	; () banked
 14013  00163C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14014  00163E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14015  001640  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14016  001642  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14017                           
 14018                           ; BSR set to: 0
 14019                           ;inc\CANlib.h: 1002: RXF4EIDL = (unsigned char) tamp;
 14020  001644  C081  FF13         	movff	CANSetFilter@tamp,3859	;volatile
 14021                           
 14022                           ; BSR set to: 0
 14023                           ;inc\CANlib.h: 1004: tamp = filter & 0x0000FF00;
 14024  001648  0E00               	movlw	0
 14025  00164A  0100               	movlb	0	; () banked
 14026  00164C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 14027  00164E  0100               	movlb	0	; () banked
 14028  001650  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14029  001652  0EFF               	movlw	255
 14030  001654  0100               	movlb	0	; () banked
 14031  001656  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 14032  001658  0100               	movlb	0	; () banked
 14033  00165A  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 14034  00165C  0E00               	movlw	0
 14035  00165E  0100               	movlb	0	; () banked
 14036  001660  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 14037  001662  0100               	movlb	0	; () banked
 14038  001664  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 14039  001666  0E00               	movlw	0
 14040  001668  0100               	movlb	0	; () banked
 14041  00166A  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 14042  00166C  0100               	movlb	0	; () banked
 14043  00166E  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 14044                           
 14045                           ; BSR set to: 0
 14046                           ;inc\CANlib.h: 1005: tamp = tamp >> 8;
 14047  001670  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 14048  001674  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 14049  001678  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 14050  00167C  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 14051  001680  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 14052  001684  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 14053  001688  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 14054  00168C  0100               	movlb	0	; () banked
 14055  00168E  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 14056  001690  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14057  001694  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14058  001698  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14059  00169C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14060                           
 14061                           ; BSR set to: 0
 14062                           ;inc\CANlib.h: 1006: RXF4EIDH = (unsigned char) tamp;
 14063  0016A0  C081  FF12         	movff	CANSetFilter@tamp,3858	;volatile
 14064                           
 14065                           ; BSR set to: 0
 14066                           ;inc\CANlib.h: 1008: if (filter & 0x00010000)
 14067  0016A4  0100               	movlb	0	; () banked
 14068  0016A6  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 14069  0016A8  D003               	goto	l507
 14070                           
 14071                           ; BSR set to: 0
 14072                           ;inc\CANlib.h: 1009: RXF4SIDLbits.EID16 = 0x01;
 14073  0016AA  010F               	movlb	15	; () banked
 14074  0016AC  8111               	bsf	17,0,b	;volatile
 14075  0016AE  D002               	goto	l508
 14076  0016B0                     l507:
 14077                           
 14078                           ; BSR set to: 0
 14079                           ;inc\CANlib.h: 1010: else
 14080                           ;inc\CANlib.h: 1011: RXF4SIDLbits.EID16 = 0x00;
 14081  0016B0  010F               	movlb	15	; () banked
 14082  0016B2  9111               	bcf	17,0,b	;volatile
 14083  0016B4                     l508:
 14084                           
 14085                           ; BSR set to: 15
 14086                           ;inc\CANlib.h: 1013: if (filter & 0x00020000)
 14087  0016B4  0100               	movlb	0	; () banked
 14088  0016B6  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 14089  0016B8  D003               	goto	l509
 14090                           
 14091                           ; BSR set to: 0
 14092                           ;inc\CANlib.h: 1014: RXF4SIDLbits.EID17 = 0x01;
 14093  0016BA  010F               	movlb	15	; () banked
 14094  0016BC  8311               	bsf	17,1,b	;volatile
 14095  0016BE  D002               	goto	l510
 14096  0016C0                     l509:
 14097                           
 14098                           ; BSR set to: 0
 14099                           ;inc\CANlib.h: 1015: else
 14100                           ;inc\CANlib.h: 1016: RXF4SIDLbits.EID17 = 0x00;
 14101  0016C0  010F               	movlb	15	; () banked
 14102  0016C2  9311               	bcf	17,1,b	;volatile
 14103  0016C4                     l510:
 14104                           
 14105                           ; BSR set to: 15
 14106                           ;inc\CANlib.h: 1018: if (filter & 0x00040000)
 14107  0016C4  0100               	movlb	0	; () banked
 14108  0016C6  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 14109  0016C8  D003               	goto	l511
 14110                           
 14111                           ; BSR set to: 0
 14112                           ;inc\CANlib.h: 1019: RXF4SIDLbits.SID0 = 0x01;
 14113  0016CA  010F               	movlb	15	; () banked
 14114  0016CC  8B11               	bsf	17,5,b	;volatile
 14115  0016CE  D002               	goto	l512
 14116  0016D0                     l511:
 14117                           
 14118                           ; BSR set to: 0
 14119                           ;inc\CANlib.h: 1020: else
 14120                           ;inc\CANlib.h: 1021: RXF4SIDLbits.SID0 = 0x00;
 14121  0016D0  010F               	movlb	15	; () banked
 14122  0016D2  9B11               	bcf	17,5,b	;volatile
 14123  0016D4                     l512:
 14124                           
 14125                           ; BSR set to: 15
 14126                           ;inc\CANlib.h: 1023: if (filter & 0x00080000)
 14127  0016D4  0100               	movlb	0	; () banked
 14128  0016D6  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 14129  0016D8  D003               	goto	l513
 14130                           
 14131                           ; BSR set to: 0
 14132                           ;inc\CANlib.h: 1024: RXF4SIDLbits.SID1 = 0x01;
 14133  0016DA  010F               	movlb	15	; () banked
 14134  0016DC  8D11               	bsf	17,6,b	;volatile
 14135  0016DE  D002               	goto	l514
 14136  0016E0                     l513:
 14137                           
 14138                           ; BSR set to: 0
 14139                           ;inc\CANlib.h: 1025: else
 14140                           ;inc\CANlib.h: 1026: RXF4SIDLbits.SID1 = 0x00;
 14141  0016E0  010F               	movlb	15	; () banked
 14142  0016E2  9D11               	bcf	17,6,b	;volatile
 14143  0016E4                     l514:
 14144                           
 14145                           ; BSR set to: 15
 14146                           ;inc\CANlib.h: 1028: if (filter & 0x00100000)
 14147  0016E4  0100               	movlb	0	; () banked
 14148  0016E6  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 14149  0016E8  D003               	goto	l515
 14150                           
 14151                           ; BSR set to: 0
 14152                           ;inc\CANlib.h: 1029: RXF4SIDLbits.SID2 = 0x01 ;
 14153  0016EA  010F               	movlb	15	; () banked
 14154  0016EC  8F11               	bsf	17,7,b	;volatile
 14155  0016EE  D002               	goto	l5612
 14156  0016F0                     l515:
 14157                           
 14158                           ; BSR set to: 0
 14159                           ;inc\CANlib.h: 1030: else
 14160                           ;inc\CANlib.h: 1031: RXF4SIDLbits.SID2 = 0x00 ;
 14161  0016F0  010F               	movlb	15	; () banked
 14162  0016F2  9F11               	bcf	17,7,b	;volatile
 14163  0016F4                     l5612:
 14164                           
 14165                           ; BSR set to: 15
 14166                           ;inc\CANlib.h: 1033: tamp = (filter >> 21);
 14167  0016F4  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 14168  0016F8  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 14169  0016FC  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 14170  001700  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 14171  001704  0E16               	movlw	22
 14172  001706  D006               	goto	u6960
 14173  001708                     u6965:
 14174  001708  0100               	movlb	0	; () banked
 14175  00170A  90D8               	bcf	status,0,c
 14176  00170C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 14177  00170E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 14178  001710  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 14179  001712  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 14180  001714                     u6960:
 14181  001714  2EE8               	decfsz	wreg,f,c
 14182  001716  D7F8               	goto	u6965
 14183  001718  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14184  00171C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14185  001720  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14186  001724  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14187                           
 14188                           ; BSR set to: 0
 14189                           ;inc\CANlib.h: 1034: tamp = tamp & 0x000000FF;
 14190  001728  0100               	movlb	0	; () banked
 14191  00172A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 14192  00172C  0100               	movlb	0	; () banked
 14193  00172E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14194  001730  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14195  001732  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14196  001734  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14197                           
 14198                           ; BSR set to: 0
 14199                           ;inc\CANlib.h: 1035: RXF4SIDH = (unsigned char) tamp;
 14200  001736  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 14201  00173A                     l5618:
 14202                           
 14203                           ; BSR set to: 0
 14204                           ;inc\CANlib.h: 1036: }
 14205                           ;inc\CANlib.h: 1038: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
 14206  00173A  0E05               	movlw	5
 14207  00173C  0100               	movlb	0	; () banked
 14208  00173E  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 14209  001740  A4D8               	btfss	status,2,c
 14210  001742  0012               	return	
 14211                           
 14212                           ; BSR set to: 0
 14213  001744  0EF7               	movlw	247
 14214  001746  0100               	movlb	0	; () banked
 14215  001748  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 14216  00174A  A4D8               	btfss	status,2,c
 14217  00174C  0012               	return	
 14218                           
 14219                           ; BSR set to: 0
 14220                           ;inc\CANlib.h: 1039: {
 14221                           ;inc\CANlib.h: 1040: RXF5SIDLbits.EXIDEN = 0x01;
 14222  00174E  010F               	movlb	15	; () banked
 14223  001750  8715               	bsf	21,3,b	;volatile
 14224                           
 14225                           ; BSR set to: 15
 14226                           ;inc\CANlib.h: 1042: tamp = filter & 0x000000FF;
 14227  001752  0100               	movlb	0	; () banked
 14228  001754  5177               	movf	CANSetFilter@filter& (0+255),w,b
 14229  001756  0100               	movlb	0	; () banked
 14230  001758  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14231  00175A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14232  00175C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14233  00175E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14234                           
 14235                           ; BSR set to: 0
 14236                           ;inc\CANlib.h: 1043: RXF5EIDL = (unsigned char) tamp;
 14237  001760  C081  FF17         	movff	CANSetFilter@tamp,3863	;volatile
 14238                           
 14239                           ; BSR set to: 0
 14240                           ;inc\CANlib.h: 1045: tamp = filter & 0x0000FF00;
 14241  001764  0E00               	movlw	0
 14242  001766  0100               	movlb	0	; () banked
 14243  001768  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 14244  00176A  0100               	movlb	0	; () banked
 14245  00176C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14246  00176E  0EFF               	movlw	255
 14247  001770  0100               	movlb	0	; () banked
 14248  001772  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 14249  001774  0100               	movlb	0	; () banked
 14250  001776  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 14251  001778  0E00               	movlw	0
 14252  00177A  0100               	movlb	0	; () banked
 14253  00177C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 14254  00177E  0100               	movlb	0	; () banked
 14255  001780  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 14256  001782  0E00               	movlw	0
 14257  001784  0100               	movlb	0	; () banked
 14258  001786  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 14259  001788  0100               	movlb	0	; () banked
 14260  00178A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 14261                           
 14262                           ; BSR set to: 0
 14263                           ;inc\CANlib.h: 1046: tamp = tamp >> 8;
 14264  00178C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 14265  001790  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 14266  001794  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 14267  001798  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 14268  00179C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 14269  0017A0  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 14270  0017A4  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 14271  0017A8  0100               	movlb	0	; () banked
 14272  0017AA  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 14273  0017AC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14274  0017B0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14275  0017B4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14276  0017B8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14277                           
 14278                           ; BSR set to: 0
 14279                           ;inc\CANlib.h: 1047: RXF5EIDH = (unsigned char) tamp;
 14280  0017BC  C081  FF16         	movff	CANSetFilter@tamp,3862	;volatile
 14281                           
 14282                           ; BSR set to: 0
 14283                           ;inc\CANlib.h: 1049: if (filter & 0x00010000)
 14284  0017C0  0100               	movlb	0	; () banked
 14285  0017C2  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 14286  0017C4  D003               	goto	l518
 14287                           
 14288                           ; BSR set to: 0
 14289                           ;inc\CANlib.h: 1050: RXF5SIDLbits.EID16 = 0x01;
 14290  0017C6  010F               	movlb	15	; () banked
 14291  0017C8  8115               	bsf	21,0,b	;volatile
 14292  0017CA  D002               	goto	l519
 14293  0017CC                     l518:
 14294                           
 14295                           ; BSR set to: 0
 14296                           ;inc\CANlib.h: 1051: else
 14297                           ;inc\CANlib.h: 1052: RXF5SIDLbits.EID16 = 0x00;
 14298  0017CC  010F               	movlb	15	; () banked
 14299  0017CE  9115               	bcf	21,0,b	;volatile
 14300  0017D0                     l519:
 14301                           
 14302                           ; BSR set to: 15
 14303                           ;inc\CANlib.h: 1054: if (filter & 0x00020000)
 14304  0017D0  0100               	movlb	0	; () banked
 14305  0017D2  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 14306  0017D4  D003               	goto	l520
 14307                           
 14308                           ; BSR set to: 0
 14309                           ;inc\CANlib.h: 1055: RXF5SIDLbits.EID17 = 0x01;
 14310  0017D6  010F               	movlb	15	; () banked
 14311  0017D8  8315               	bsf	21,1,b	;volatile
 14312  0017DA  D002               	goto	l521
 14313  0017DC                     l520:
 14314                           
 14315                           ; BSR set to: 0
 14316                           ;inc\CANlib.h: 1056: else
 14317                           ;inc\CANlib.h: 1057: RXF5SIDLbits.EID17 = 0x00;
 14318  0017DC  010F               	movlb	15	; () banked
 14319  0017DE  9315               	bcf	21,1,b	;volatile
 14320  0017E0                     l521:
 14321                           
 14322                           ; BSR set to: 15
 14323                           ;inc\CANlib.h: 1059: if (filter & 0x00040000)
 14324  0017E0  0100               	movlb	0	; () banked
 14325  0017E2  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 14326  0017E4  D003               	goto	l522
 14327                           
 14328                           ; BSR set to: 0
 14329                           ;inc\CANlib.h: 1060: RXF5SIDLbits.SID0 = 0x01;
 14330  0017E6  010F               	movlb	15	; () banked
 14331  0017E8  8B15               	bsf	21,5,b	;volatile
 14332  0017EA  D002               	goto	l523
 14333  0017EC                     l522:
 14334                           
 14335                           ; BSR set to: 0
 14336                           ;inc\CANlib.h: 1061: else
 14337                           ;inc\CANlib.h: 1062: RXF5SIDLbits.SID0 = 0x00;
 14338  0017EC  010F               	movlb	15	; () banked
 14339  0017EE  9B15               	bcf	21,5,b	;volatile
 14340  0017F0                     l523:
 14341                           
 14342                           ; BSR set to: 15
 14343                           ;inc\CANlib.h: 1064: if (filter & 0x00080000)
 14344  0017F0  0100               	movlb	0	; () banked
 14345  0017F2  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 14346  0017F4  D003               	goto	l524
 14347                           
 14348                           ; BSR set to: 0
 14349                           ;inc\CANlib.h: 1065: RXF5SIDLbits.SID1 = 0x01;
 14350  0017F6  010F               	movlb	15	; () banked
 14351  0017F8  8D15               	bsf	21,6,b	;volatile
 14352  0017FA  D002               	goto	l525
 14353  0017FC                     l524:
 14354                           
 14355                           ; BSR set to: 0
 14356                           ;inc\CANlib.h: 1066: else
 14357                           ;inc\CANlib.h: 1067: RXF5SIDLbits.SID1 = 0x00;
 14358  0017FC  010F               	movlb	15	; () banked
 14359  0017FE  9D15               	bcf	21,6,b	;volatile
 14360  001800                     l525:
 14361                           
 14362                           ; BSR set to: 15
 14363                           ;inc\CANlib.h: 1069: if (filter & 0x00100000)
 14364  001800  0100               	movlb	0	; () banked
 14365  001802  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 14366  001804  D003               	goto	l526
 14367                           
 14368                           ; BSR set to: 0
 14369                           ;inc\CANlib.h: 1070: RXF5SIDLbits.SID2 = 0x01 ;
 14370  001806  010F               	movlb	15	; () banked
 14371  001808  8F15               	bsf	21,7,b	;volatile
 14372  00180A  D002               	goto	l5646
 14373  00180C                     l526:
 14374                           
 14375                           ; BSR set to: 0
 14376                           ;inc\CANlib.h: 1071: else
 14377                           ;inc\CANlib.h: 1072: RXF5SIDLbits.SID2 = 0x00 ;
 14378  00180C  010F               	movlb	15	; () banked
 14379  00180E  9F15               	bcf	21,7,b	;volatile
 14380  001810                     l5646:
 14381                           
 14382                           ; BSR set to: 15
 14383                           ;inc\CANlib.h: 1074: tamp = (filter >> 21);
 14384  001810  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 14385  001814  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 14386  001818  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 14387  00181C  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 14388  001820  0E16               	movlw	22
 14389  001822  D006               	goto	u7040
 14390  001824                     u7045:
 14391  001824  0100               	movlb	0	; () banked
 14392  001826  90D8               	bcf	status,0,c
 14393  001828  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 14394  00182A  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 14395  00182C  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 14396  00182E  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 14397  001830                     u7040:
 14398  001830  2EE8               	decfsz	wreg,f,c
 14399  001832  D7F8               	goto	u7045
 14400  001834  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14401  001838  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14402  00183C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14403  001840  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14404                           
 14405                           ; BSR set to: 0
 14406                           ;inc\CANlib.h: 1075: tamp = tamp & 0x000000FF;
 14407  001844  0100               	movlb	0	; () banked
 14408  001846  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 14409  001848  0100               	movlb	0	; () banked
 14410  00184A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14411  00184C  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14412  00184E  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14413  001850  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14414                           
 14415                           ; BSR set to: 0
 14416                           ;inc\CANlib.h: 1076: RXF5SIDH = (unsigned char) tamp;
 14417  001852  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 14418  001856  0012               	return	
 14419  001858                     __end_of_CANSetFilter:
 14420                           	opt stack 0
 14421                           tblptru	equ	0xFF8
 14422                           tblptrh	equ	0xFF7
 14423                           tblptrl	equ	0xFF6
 14424                           tablat	equ	0xFF5
 14425                           prodh	equ	0xFF4
 14426                           prodl	equ	0xFF3
 14427                           intcon	equ	0xFF2
 14428                           intcon2	equ	0xFF1
 14429                           postinc0	equ	0xFEE
 14430                           wreg	equ	0xFE8
 14431                           postdec1	equ	0xFE5
 14432                           fsr1l	equ	0xFE1
 14433                           indf2	equ	0xFDF
 14434                           postinc2	equ	0xFDE
 14435                           postdec2	equ	0xFDD
 14436                           fsr2h	equ	0xFDA
 14437                           fsr2l	equ	0xFD9
 14438                           status	equ	0xFD8
 14439                           
 14440 ;; *************** function _CANOperationMode *****************
 14441 ;; Defined at:
 14442 ;;		line 207 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 14443 ;; Parameters:    Size  Location     Type
 14444 ;;  mode            1    wreg     enum E16307
 14445 ;; Auto vars:     Size  Location     Type
 14446 ;;  mode            1   23[BANK0 ] enum E16307
 14447 ;; Return value:  Size  Location     Type
 14448 ;;		None               void
 14449 ;; Registers used:
 14450 ;;		wreg, status,2, status,0
 14451 ;; Tracked objects:
 14452 ;;		On entry : 0/0
 14453 ;;		On exit  : 0/0
 14454 ;;		Unchanged: 0/0
 14455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14457 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14459 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14460 ;;Total ram usage:        1 bytes
 14461 ;; Hardware stack levels used:    1
 14462 ;; Hardware stack levels required when called:    4
 14463 ;; This function calls:
 14464 ;;		Nothing
 14465 ;; This function is called by:
 14466 ;;		_CANInitialize
 14467 ;; This function uses a non-reentrant model
 14468 ;;
 14469                           
 14470                           	psect	text33
 14471  0066DA                     __ptext33:
 14472                           	opt stack 0
 14473  0066DA                     _CANOperationMode:
 14474                           	opt stack 24
 14475                           
 14476                           ; BSR set to: 0
 14477                           ;incstack = 0
 14478                           ;CANOperationMode@mode stored from wreg
 14479  0066DA  0100               	movlb	0	; () banked
 14480  0066DC  6F77               	movwf	CANOperationMode@mode& (0+255),b
 14481                           
 14482                           ;inc\CANlib.h: 209: CANCON = mode;
 14483  0066DE  C077  FF6F         	movff	CANOperationMode@mode,3951	;volatile
 14484  0066E2                     l7804:
 14485  0066E2  506E               	movf	3950,w,c	;volatile
 14486  0066E4  0BE0               	andlw	224
 14487  0066E6  0100               	movlb	0	; () banked
 14488  0066E8  1977               	xorwf	CANOperationMode@mode& (0+255),w,b
 14489  0066EA  B4D8               	btfsc	status,2,c
 14490  0066EC  0012               	return	
 14491  0066EE  D7F9               	goto	l7804
 14492  0066F0                     __end_of_CANOperationMode:
 14493                           	opt stack 0
 14494                           tblptru	equ	0xFF8
 14495                           tblptrh	equ	0xFF7
 14496                           tblptrl	equ	0xFF6
 14497                           tablat	equ	0xFF5
 14498                           prodh	equ	0xFF4
 14499                           prodl	equ	0xFF3
 14500                           intcon	equ	0xFF2
 14501                           intcon2	equ	0xFF1
 14502                           postinc0	equ	0xFEE
 14503                           wreg	equ	0xFE8
 14504                           postdec1	equ	0xFE5
 14505                           fsr1l	equ	0xFE1
 14506                           indf2	equ	0xFDF
 14507                           postinc2	equ	0xFDE
 14508                           postdec2	equ	0xFDD
 14509                           fsr2h	equ	0xFDA
 14510                           fsr2l	equ	0xFD9
 14511                           status	equ	0xFD8
 14512                           
 14513 ;; *************** function _can_interpreter *****************
 14514 ;; Defined at:
 14515 ;;		line 471 in file "parcheggio.c"
 14516 ;; Parameters:    Size  Location     Type
 14517 ;;		None
 14518 ;; Auto vars:     Size  Location     Type
 14519 ;;		None
 14520 ;; Return value:  Size  Location     Type
 14521 ;;		None               void
 14522 ;; Registers used:
 14523 ;;		wreg, status,2, status,0
 14524 ;; Tracked objects:
 14525 ;;		On entry : 0/0
 14526 ;;		On exit  : 0/0
 14527 ;;		Unchanged: 0/0
 14528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14531 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14532 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14533 ;;Total ram usage:        4 bytes
 14534 ;; Hardware stack levels used:    1
 14535 ;; Hardware stack levels required when called:    4
 14536 ;; This function calls:
 14537 ;;		Nothing
 14538 ;; This function is called by:
 14539 ;;		_main
 14540 ;; This function uses a non-reentrant model
 14541 ;;
 14542                           
 14543                           	psect	text34
 14544  0064BE                     __ptext34:
 14545                           	opt stack 0
 14546  0064BE                     _can_interpreter:
 14547                           	opt stack 26
 14548                           
 14549                           ;parcheggio.c: 472: left_speed = data_speed_rx[1];
 14550                           
 14551                           ; BSR set to: 0
 14552                           ;incstack = 0
 14553  0064BE  C109  F01F         	movff	_data_speed_rx+1,_left_speed
 14554  0064C2  6A20               	clrf	_left_speed+1,c
 14555                           
 14556                           ;parcheggio.c: 473: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 14557  0064C4  501F               	movf	_left_speed,w,c
 14558  0064C6  0100               	movlb	0	; () banked
 14559  0064C8  6F77               	movwf	??_can_interpreter& (0+255),b
 14560  0064CA  0101               	movlb	1	; () banked
 14561  0064CC  5108               	movf	_data_speed_rx& (0+255),w,b
 14562  0064CE  6E1F               	movwf	_left_speed,c
 14563  0064D0  C077  F020         	movff	??_can_interpreter,_left_speed+1
 14564                           
 14565                           ; BSR set to: 1
 14566                           ;parcheggio.c: 474: right_speed = data_speed_rx[3];
 14567  0064D4  C10B  F023         	movff	_data_speed_rx+3,_right_speed
 14568  0064D8  6A24               	clrf	_right_speed+1,c
 14569                           
 14570                           ;parcheggio.c: 475: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 14571  0064DA  5023               	movf	_right_speed,w,c
 14572  0064DC  0100               	movlb	0	; () banked
 14573  0064DE  6F77               	movwf	??_can_interpreter& (0+255),b
 14574  0064E0  0101               	movlb	1	; () banked
 14575  0064E2  510A               	movf	(_data_speed_rx+2)& (0+255),w,b
 14576  0064E4  6E23               	movwf	_right_speed,c
 14577  0064E6  C077  F024         	movff	??_can_interpreter,_right_speed+1
 14578                           
 14579                           ; BSR set to: 1
 14580                           ;parcheggio.c: 476: actual_speed = (right_speed + left_speed) / 2;
 14581  0064EA  501F               	movf	_left_speed,w,c
 14582  0064EC  2423               	addwf	_right_speed,w,c
 14583  0064EE  0100               	movlb	0	; () banked
 14584  0064F0  6F77               	movwf	??_can_interpreter& (0+255),b
 14585  0064F2  5020               	movf	_left_speed+1,w,c
 14586  0064F4  2024               	addwfc	_right_speed+1,w,c
 14587  0064F6  0100               	movlb	0	; () banked
 14588  0064F8  6F78               	movwf	(??_can_interpreter+1)& (0+255),b
 14589  0064FA  90D8               	bcf	status,0,c
 14590  0064FC  0100               	movlb	0	; () banked
 14591  0064FE  3178               	rrcf	(??_can_interpreter+1)& (0+255),w,b
 14592  006500  0100               	movlb	0	; () banked
 14593  006502  6F79               	movwf	(??_can_interpreter+2)& (0+255),b
 14594  006504  0100               	movlb	0	; () banked
 14595  006506  3177               	rrcf	??_can_interpreter& (0+255),w,b
 14596  006508  0100               	movlb	0	; () banked
 14597  00650A  6FDE               	movwf	_actual_speed& (0+255),b
 14598  00650C  C079  F0DF         	movff	??_can_interpreter+2,_actual_speed+1
 14599                           
 14600                           ; BSR set to: 0
 14601  006510  0012               	return		;funcret
 14602  006512                     __end_of_can_interpreter:
 14603                           	opt stack 0
 14604                           tblptru	equ	0xFF8
 14605                           tblptrh	equ	0xFF7
 14606                           tblptrl	equ	0xFF6
 14607                           tablat	equ	0xFF5
 14608                           prodh	equ	0xFF4
 14609                           prodl	equ	0xFF3
 14610                           intcon	equ	0xFF2
 14611                           intcon2	equ	0xFF1
 14612                           postinc0	equ	0xFEE
 14613                           wreg	equ	0xFE8
 14614                           postdec1	equ	0xFE5
 14615                           fsr1l	equ	0xFE1
 14616                           indf2	equ	0xFDF
 14617                           postinc2	equ	0xFDE
 14618                           postdec2	equ	0xFDD
 14619                           fsr2h	equ	0xFDA
 14620                           fsr2l	equ	0xFD9
 14621                           status	equ	0xFD8
 14622                           
 14623 ;; *************** function _ISR_Bassa *****************
 14624 ;; Defined at:
 14625 ;;		line 115 in file "parcheggio.c"
 14626 ;; Parameters:    Size  Location     Type
 14627 ;;		None
 14628 ;; Auto vars:     Size  Location     Type
 14629 ;;  i               1   38[COMRAM] unsigned char 
 14630 ;;  gigi            1   37[COMRAM] unsigned char 
 14631 ;; Return value:  Size  Location     Type
 14632 ;;		None               void
 14633 ;; Registers used:
 14634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14635 ;; Tracked objects:
 14636 ;;		On entry : 0/0
 14637 ;;		On exit  : 0/0
 14638 ;;		Unchanged: 0/0
 14639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14641 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14642 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14643 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14644 ;;Total ram usage:       23 bytes
 14645 ;; Hardware stack levels used:    1
 14646 ;; Hardware stack levels required when called:    3
 14647 ;; This function calls:
 14648 ;;		_CANreceiveMessage
 14649 ;;		i1_CANisTxReady
 14650 ;;		i1_CANsendMessage
 14651 ;; This function is called by:
 14652 ;;		Interrupt level 1
 14653 ;; This function uses a non-reentrant model
 14654 ;;
 14655                           
 14656                           	psect	intcodelo
 14657  000018                     __pintcodelo:
 14658                           	opt stack 0
 14659  000018                     _ISR_Bassa:
 14660                           	opt stack 21
 14661                           
 14662                           ; BSR set to: 0
 14663                           ;incstack = 0
 14664  000018  8056               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 14665  00001A  CFD8 F041          	movff	status,??_ISR_Bassa+4
 14666  00001E  CFE8 F042          	movff	wreg,??_ISR_Bassa+5
 14667  000022  CFE0 F043          	movff	bsr,??_ISR_Bassa+6
 14668  000026  CFFA F044          	movff	pclath,??_ISR_Bassa+7
 14669  00002A  CFFB F045          	movff	pclatu,??_ISR_Bassa+8
 14670  00002E  CFE9 F046          	movff	fsr0l,??_ISR_Bassa+9
 14671  000032  CFEA F047          	movff	fsr0h,??_ISR_Bassa+10
 14672  000036  CFE1 F048          	movff	fsr1l,??_ISR_Bassa+11
 14673  00003A  CFE2 F049          	movff	fsr1h,??_ISR_Bassa+12
 14674  00003E  CFD9 F04A          	movff	fsr2l,??_ISR_Bassa+13
 14675  000042  CFDA F04B          	movff	fsr2h,??_ISR_Bassa+14
 14676  000046  CFF3 F04C          	movff	prodl,??_ISR_Bassa+15
 14677  00004A  CFF4 F04D          	movff	prodh,??_ISR_Bassa+16
 14678  00004E  CFF6 F04E          	movff	tblptrl,??_ISR_Bassa+17
 14679  000052  CFF7 F04F          	movff	tblptrh,??_ISR_Bassa+18
 14680  000056  CFF8 F050          	movff	tblptru,??_ISR_Bassa+19
 14681  00005A  CFF5 F051          	movff	tablat,??_ISR_Bassa+20
 14682                           
 14683                           ;parcheggio.c: 117: if (INTCONbits.TMR0IF == 1) {
 14684  00005E  A4F2               	btfss	intcon,2,c	;volatile
 14685  000060  D090               	goto	i1l8632
 14686                           
 14687                           ;parcheggio.c: 118: INTCONbits.INT0IE = 0;
 14688  000062  98F2               	bcf	intcon,4,c	;volatile
 14689                           
 14690                           ;parcheggio.c: 119: T0CONbits.TMR0ON = 0;
 14691  000064  9ED5               	bcf	4053,7,c	;volatile
 14692                           
 14693                           ;parcheggio.c: 120: TMR0H = 0x34;
 14694  000066  0E34               	movlw	52
 14695  000068  6ED7               	movwf	4055,c	;volatile
 14696                           
 14697                           ;parcheggio.c: 121: TMR0L = 0xE0;
 14698  00006A  0EE0               	movlw	224
 14699  00006C  6ED6               	movwf	4054,c	;volatile
 14700                           
 14701                           ;parcheggio.c: 122: T0CONbits.TMR0ON = 1;
 14702  00006E  8ED5               	bsf	4053,7,c	;volatile
 14703                           
 14704                           ;parcheggio.c: 123: if (distance_error == 1) {
 14705  000070  A854               	btfss	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14706  000072  D00C               	goto	i1l706
 14707                           
 14708                           ;parcheggio.c: 124: sensor_distance[MUX_index] = 5000;
 14709  000074  5029               	movf	_MUX_index,w,c	;volatile
 14710  000076  0D02               	mullw	2
 14711  000078  0E01               	movlw	low _sensor_distance
 14712  00007A  24F3               	addwf	prodl,w,c
 14713  00007C  6ED9               	movwf	fsr2l,c
 14714  00007E  0E00               	movlw	high _sensor_distance
 14715  000080  20F4               	addwfc	prodh,w,c
 14716  000082  6EDA               	movwf	fsr2h,c
 14717  000084  0E88               	movlw	136
 14718  000086  6EDE               	movwf	postinc2,c
 14719  000088  0E13               	movlw	19
 14720  00008A  6EDD               	movwf	postdec2,c
 14721  00008C                     i1l706:
 14722                           
 14723                           ;parcheggio.c: 125: }
 14724                           ;parcheggio.c: 126: if (sensor_distance[MUX_index] < 10) {
 14725  00008C  5029               	movf	_MUX_index,w,c	;volatile
 14726  00008E  0D02               	mullw	2
 14727  000090  0E01               	movlw	low _sensor_distance
 14728  000092  24F3               	addwf	prodl,w,c
 14729  000094  6ED9               	movwf	fsr2l,c
 14730  000096  0E00               	movlw	high _sensor_distance
 14731  000098  20F4               	addwfc	prodh,w,c
 14732  00009A  6EDA               	movwf	fsr2h,c
 14733  00009C  0E01               	movlw	1
 14734  00009E  50DB               	movf	plusw2,w,c
 14735  0000A0  E10E               	bnz	i1l8584
 14736  0000A2  0E0A               	movlw	10
 14737  0000A4  5CDE               	subwf	postinc2,w,c
 14738  0000A6  B0D8               	btfsc	status,0,c
 14739  0000A8  D00A               	goto	i1l8584
 14740                           
 14741                           ;parcheggio.c: 127: sensor_distance_short[MUX_index] = 1;
 14742  0000AA  5029               	movf	_MUX_index,w,c	;volatile
 14743  0000AC  0D01               	mullw	1
 14744  0000AE  0E83               	movlw	low _sensor_distance_short
 14745  0000B0  24F3               	addwf	prodl,w,c
 14746  0000B2  6ED9               	movwf	fsr2l,c
 14747  0000B4  0E01               	movlw	high _sensor_distance_short
 14748  0000B6  20F4               	addwfc	prodh,w,c
 14749  0000B8  6EDA               	movwf	fsr2h,c
 14750  0000BA  0E01               	movlw	1
 14751  0000BC  D040               	goto	L8
 14752  0000BE                     i1l8584:
 14753  0000BE  5029               	movf	_MUX_index,w,c	;volatile
 14754  0000C0  0D02               	mullw	2
 14755  0000C2  0E01               	movlw	low _sensor_distance
 14756  0000C4  24F3               	addwf	prodl,w,c
 14757  0000C6  6ED9               	movwf	fsr2l,c
 14758  0000C8  0E00               	movlw	high _sensor_distance
 14759  0000CA  20F4               	addwfc	prodh,w,c
 14760  0000CC  6EDA               	movwf	fsr2h,c
 14761  0000CE  0E01               	movlw	1
 14762  0000D0  50DB               	movf	plusw2,w,c
 14763  0000D2  E12C               	bnz	i1l8600
 14764  0000D4  0E03               	movlw	3
 14765  0000D6  5CDE               	subwf	postinc2,w,c
 14766  0000D8  A0D8               	btfss	status,0,c
 14767  0000DA  AC55               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 14768  0000DC  D027               	goto	i1l8600
 14769  0000DE  B454               	btfsc	_avvicinamento/(0+8),_avvicinamento& (0+7),c	;volatile
 14770  0000E0  D025               	goto	i1l8600
 14771                           
 14772                           ;parcheggio.c: 129: if ((MUX_index == 0) || (MUX_index == 1)) {
 14773  0000E2  5029               	movf	_MUX_index,w,c	;volatile
 14774  0000E4  B4D8               	btfsc	status,2,c
 14775  0000E6  D02C               	goto	i1l8602
 14776  0000E8  0429               	decf	_MUX_index,w,c	;volatile
 14777  0000EA  B4D8               	btfsc	status,2,c
 14778  0000EC  D029               	goto	i1l8602
 14779                           
 14780                           ;parcheggio.c: 132: data[1] = 0;
 14781                           
 14782                           ;parcheggio.c: 131: } else {
 14783  0000EE  0E00               	movlw	0
 14784  0000F0  0101               	movlb	1	; () banked
 14785  0000F2  6F54               	movwf	(_data+1)& (0+255),b
 14786                           
 14787                           ;parcheggio.c: 133: data[0] = 4;
 14788  0000F4  0E04               	movlw	4
 14789  0000F6  0101               	movlb	1	; () banked
 14790  0000F8  6F53               	movwf	_data& (0+255),b
 14791  0000FA                     i1l8596:
 14792  0000FA  EC5E  F033         	call	i1_CANisTxReady	;wreg free
 14793  0000FE  0900               	iorlw	0
 14794  000100  B4D8               	btfsc	status,2,c
 14795  000102  D7FB               	goto	i1l8596
 14796                           
 14797                           ;parcheggio.c: 135: CANsendMessage(0xAA, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_FRA
      +                          ME & CAN_TX_PRIORITY_0);
 14798  000104  0EAA               	movlw	170
 14799  000106  6E2D               	movwf	i1CANsendMessage@identifier,c
 14800  000108  0E00               	movlw	0
 14801  00010A  6E2E               	movwf	i1CANsendMessage@identifier+1,c
 14802  00010C  0E00               	movlw	0
 14803  00010E  6E2F               	movwf	i1CANsendMessage@identifier+2,c
 14804  000110  0E00               	movlw	0
 14805  000112  6E30               	movwf	i1CANsendMessage@identifier+3,c
 14806  000114  0E53               	movlw	low _data
 14807  000116  6E31               	movwf	i1CANsendMessage@data,c
 14808  000118  0E01               	movlw	high _data
 14809  00011A  6E32               	movwf	i1CANsendMessage@data+1,c
 14810  00011C  0E08               	movlw	8
 14811  00011E  6E33               	movwf	i1CANsendMessage@dataLength,c
 14812  000120  0EBC               	movlw	188
 14813  000122  6E34               	movwf	i1CANsendMessage@flags,c
 14814  000124  ECF2  F00F         	call	i1_CANsendMessage	;wreg free
 14815  000128  00FF               	reset		;# 
 14816                           
 14817                           ;parcheggio.c: 137: }
 14818                           ;parcheggio.c: 138: } else {
 14819  00012A  D00A               	goto	i1l8602
 14820  00012C                     i1l8600:
 14821                           
 14822                           ;parcheggio.c: 139: sensor_distance_short[MUX_index] = 0;
 14823  00012C  5029               	movf	_MUX_index,w,c	;volatile
 14824  00012E  0D01               	mullw	1
 14825  000130  0E83               	movlw	low _sensor_distance_short
 14826  000132  24F3               	addwf	prodl,w,c
 14827  000134  6ED9               	movwf	fsr2l,c
 14828  000136  0E01               	movlw	high _sensor_distance_short
 14829  000138  20F4               	addwfc	prodh,w,c
 14830  00013A  6EDA               	movwf	fsr2h,c
 14831  00013C  0E00               	movlw	0
 14832  00013E                     L8:
 14833  00013E  6EDF               	movwf	indf2,c
 14834  000140                     i1l8602:
 14835                           
 14836                           ;parcheggio.c: 140: }
 14837                           ;parcheggio.c: 141: MUX_index++;
 14838  000140  2A29               	incf	_MUX_index,f,c	;volatile
 14839                           
 14840                           ;parcheggio.c: 142: if (MUX_index == 8) {
 14841  000142  0E08               	movlw	8
 14842  000144  1829               	xorwf	_MUX_index,w,c	;volatile
 14843  000146  A4D8               	btfss	status,2,c
 14844  000148  D002               	goto	i1l718
 14845                           
 14846                           ;parcheggio.c: 143: MUX_index = 0;
 14847  00014A  0E00               	movlw	0
 14848  00014C  6E29               	movwf	_MUX_index,c	;volatile
 14849  00014E                     i1l718:
 14850                           
 14851                           ;parcheggio.c: 144: }
 14852                           ;parcheggio.c: 145: unsigned char gigi = 0;
 14853  00014E  0E00               	movlw	0
 14854  000150  6E52               	movwf	ISR_Bassa@gigi,c
 14855                           
 14856                           ;parcheggio.c: 146: gigi = MUX_select[MUX_index];
 14857  000152  5029               	movf	_MUX_index,w,c	;volatile
 14858  000154  0D01               	mullw	1
 14859  000156  0E00               	movlw	low _MUX_select
 14860  000158  24F3               	addwf	prodl,w,c
 14861  00015A  6ED9               	movwf	fsr2l,c
 14862  00015C  0E01               	movlw	high _MUX_select
 14863  00015E  20F4               	addwfc	prodh,w,c
 14864  000160  6EDA               	movwf	fsr2h,c
 14865  000162  50DF               	movf	indf2,w,c
 14866  000164  6E52               	movwf	ISR_Bassa@gigi,c
 14867                           
 14868                           ;parcheggio.c: 147: PORTA = gigi;
 14869  000166  C052  FF80         	movff	ISR_Bassa@gigi,3968	;volatile
 14870                           
 14871                           ;parcheggio.c: 148: TRISBbits.RB0 = 0;
 14872  00016A  9093               	bcf	3987,0,c	;volatile
 14873                           
 14874                           ;parcheggio.c: 149: LATBbits.LATB0 = 1;
 14875  00016C  808A               	bsf	3978,0,c	;volatile
 14876                           
 14877                           ;parcheggio.c: 150: _delay((unsigned long)((15)*(16000000/4000000.0)));
 14878  00016E  0E14               	movlw	20
 14879  000170                     i1u1165_27:
 14880  000170  2EE8               	decfsz	wreg,f,c
 14881  000172  D7FE               	goto	i1u1165_27
 14882                           
 14883                           ;parcheggio.c: 151: distance_error = 1;
 14884  000174  8854               	bsf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14885                           
 14886                           ;parcheggio.c: 152: LATBbits.LATB0 = 0;
 14887  000176  908A               	bcf	3978,0,c	;volatile
 14888                           
 14889                           ;parcheggio.c: 153: TRISBbits.RB0 = 1;
 14890  000178  8093               	bsf	3987,0,c	;volatile
 14891                           
 14892                           ;parcheggio.c: 154: INTCONbits.INT0IF = 0;
 14893  00017A  92F2               	bcf	intcon,1,c	;volatile
 14894                           
 14895                           ;parcheggio.c: 155: INTCONbits.INT0IE = 1;
 14896  00017C  88F2               	bsf	intcon,4,c	;volatile
 14897                           
 14898                           ;parcheggio.c: 156: INTCONbits.TMR0IF = 0;
 14899  00017E  94F2               	bcf	intcon,2,c	;volatile
 14900                           
 14901                           ;parcheggio.c: 157: INTCON2bits.INTEDG0 = 1;
 14902  000180  8CF1               	bsf	intcon2,6,c	;volatile
 14903  000182                     i1l8632:
 14904                           
 14905                           ;parcheggio.c: 158: }
 14906                           ;parcheggio.c: 160: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
 14907  000182  A0A4               	btfss	4004,0,c	;volatile
 14908  000184  B2A4               	btfsc	4004,1,c	;volatile
 14909  000186  D001               	goto	i1l8636
 14910  000188  D09B               	goto	i1l732
 14911  00018A                     i1l8636:
 14912                           
 14913                           ;parcheggio.c: 161: CANreceiveMessage(&msg);
 14914  00018A  0E44               	movlw	low _msg
 14915  00018C  6E2D               	movwf	CANreceiveMessage@msg,c
 14916  00018E  0E01               	movlw	high _msg
 14917  000190  6E2E               	movwf	CANreceiveMessage@msg+1,c
 14918  000192  ECFF  F015         	call	_CANreceiveMessage	;wreg free
 14919                           
 14920                           ;parcheggio.c: 162: if (msg.identifier == 0b00000001101) {
 14921  000196  0E0D               	movlw	13
 14922  000198  0101               	movlb	1	; () banked
 14923  00019A  1944               	xorwf	_msg& (0+255),w,b
 14924  00019C  0101               	movlb	1	; () banked
 14925  00019E  1145               	iorwf	(_msg+1)& (0+255),w,b
 14926  0001A0  0101               	movlb	1	; () banked
 14927  0001A2  1146               	iorwf	(_msg+2)& (0+255),w,b
 14928  0001A4  0101               	movlb	1	; () banked
 14929  0001A6  1147               	iorwf	(_msg+3)& (0+255),w,b
 14930  0001A8  B4D8               	btfsc	status,2,c
 14931                           
 14932                           ; BSR set to: 1
 14933                           ;parcheggio.c: 163: asd = 0;
 14934  0001AA  9254               	bcf	_asd/(0+8),_asd& (0+7),c	;volatile
 14935                           
 14936                           ; BSR set to: 1
 14937                           ;parcheggio.c: 164: }
 14938                           ;parcheggio.c: 165: if ((msg.identifier == 0b00000000111) && (msg.RTR != 1)) {
 14939                           
 14940                           ; BSR set to: 1
 14941  0001AC  0E07               	movlw	7
 14942  0001AE  0101               	movlb	1	; () banked
 14943  0001B0  1944               	xorwf	_msg& (0+255),w,b
 14944  0001B2  0101               	movlb	1	; () banked
 14945  0001B4  1145               	iorwf	(_msg+1)& (0+255),w,b
 14946  0001B6  0101               	movlb	1	; () banked
 14947  0001B8  1146               	iorwf	(_msg+2)& (0+255),w,b
 14948  0001BA  0101               	movlb	1	; () banked
 14949  0001BC  1147               	iorwf	(_msg+3)& (0+255),w,b
 14950  0001BE  A4D8               	btfss	status,2,c
 14951  0001C0  D02B               	goto	i1l8658
 14952                           
 14953                           ; BSR set to: 1
 14954  0001C2  0101               	movlb	1	; () banked
 14955  0001C4  0552               	decf	(_msg+14)& (0+255),w,b
 14956  0001C6  B4D8               	btfsc	status,2,c
 14957  0001C8  D027               	goto	i1l8658
 14958                           
 14959                           ; BSR set to: 1
 14960                           ;parcheggio.c: 166: distance_average = 0;
 14961  0001CA  0E00               	movlw	0
 14962  0001CC  6E1A               	movwf	_distance_average+1,c	;volatile
 14963  0001CE  0E00               	movlw	0
 14964  0001D0  6E19               	movwf	_distance_average,c	;volatile
 14965                           
 14966                           ; BSR set to: 1
 14967                           ;parcheggio.c: 167: distance_dx = msg.data[1];
 14968  0001D2  C149  F01B         	movff	_msg+5,_distance_dx	;volatile
 14969  0001D6  6A1C               	clrf	_distance_dx+1,c	;volatile
 14970                           
 14971                           ;parcheggio.c: 168: distance_dx = ((distance_dx << 8) | msg.data[0]);
 14972  0001D8  501B               	movf	_distance_dx,w,c	;volatile
 14973  0001DA  6E3D               	movwf	??_ISR_Bassa& (0+255),c
 14974  0001DC  0101               	movlb	1	; () banked
 14975  0001DE  5148               	movf	(_msg+4)& (0+255),w,b
 14976  0001E0  6E1B               	movwf	_distance_dx,c	;volatile
 14977  0001E2  C03D  F01C         	movff	??_ISR_Bassa,_distance_dx+1	;volatile
 14978                           
 14979                           ; BSR set to: 1
 14980                           ;parcheggio.c: 169: distance_sx = msg.data[3];
 14981  0001E6  C14B  F01D         	movff	_msg+7,_distance_sx	;volatile
 14982  0001EA  6A1E               	clrf	_distance_sx+1,c	;volatile
 14983                           
 14984                           ;parcheggio.c: 170: distance_sx = ((distance_sx << 8) | msg.data[2]);
 14985  0001EC  501D               	movf	_distance_sx,w,c	;volatile
 14986  0001EE  6E3D               	movwf	??_ISR_Bassa& (0+255),c
 14987  0001F0  0101               	movlb	1	; () banked
 14988  0001F2  514A               	movf	(_msg+6)& (0+255),w,b
 14989  0001F4  6E1D               	movwf	_distance_sx,c	;volatile
 14990  0001F6  C03D  F01E         	movff	??_ISR_Bassa,_distance_sx+1	;volatile
 14991                           
 14992                           ; BSR set to: 1
 14993                           ;parcheggio.c: 171: distance_average = (distance_sx + distance_dx) / 2;
 14994  0001FA  501B               	movf	_distance_dx,w,c	;volatile
 14995  0001FC  241D               	addwf	_distance_sx,w,c	;volatile
 14996  0001FE  6E3D               	movwf	??_ISR_Bassa& (0+255),c
 14997  000200  501C               	movf	_distance_dx+1,w,c	;volatile
 14998  000202  201E               	addwfc	_distance_sx+1,w,c	;volatile
 14999  000204  6E3E               	movwf	(??_ISR_Bassa+1)& (0+255),c
 15000  000206  90D8               	bcf	status,0,c
 15001  000208  303E               	rrcf	??_ISR_Bassa+1,w,c
 15002  00020A  6E3F               	movwf	(??_ISR_Bassa+2)& (0+255),c
 15003  00020C  303D               	rrcf	??_ISR_Bassa,w,c
 15004  00020E  6E19               	movwf	_distance_average,c	;volatile
 15005  000210  C03F  F01A         	movff	??_ISR_Bassa+2,_distance_average+1	;volatile
 15006                           
 15007                           ; BSR set to: 1
 15008                           ;parcheggio.c: 172: distance_received = 1;
 15009  000214  8A54               	bsf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
 15010                           
 15011                           ; BSR set to: 1
 15012                           ;parcheggio.c: 173: distance_received1 = 1;
 15013  000216  8C54               	bsf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
 15014  000218                     i1l8658:
 15015                           
 15016                           ; BSR set to: 1
 15017                           ;parcheggio.c: 174: }
 15018                           ;parcheggio.c: 175: if (msg.identifier == 0b00000001010) {
 15019  000218  0E0A               	movlw	10
 15020  00021A  0101               	movlb	1	; () banked
 15021  00021C  1944               	xorwf	_msg& (0+255),w,b
 15022  00021E  0101               	movlb	1	; () banked
 15023  000220  1145               	iorwf	(_msg+1)& (0+255),w,b
 15024  000222  0101               	movlb	1	; () banked
 15025  000224  1146               	iorwf	(_msg+2)& (0+255),w,b
 15026  000226  0101               	movlb	1	; () banked
 15027  000228  1147               	iorwf	(_msg+3)& (0+255),w,b
 15028  00022A  A4D8               	btfss	status,2,c
 15029  00022C  D00C               	goto	i1l8664
 15030                           
 15031                           ; BSR set to: 1
 15032                           ;parcheggio.c: 176: if (msg.data[0] == 1) {
 15033  00022E  0101               	movlb	1	; () banked
 15034  000230  0548               	decf	(_msg+4)& (0+255),w,b
 15035  000232  A4D8               	btfss	status,2,c
 15036  000234  D003               	goto	i1l725
 15037                           
 15038                           ; BSR set to: 1
 15039                           ;parcheggio.c: 177: activation = 1;
 15040  000236  8054               	bsf	_activation/(0+8),_activation& (0+7),c	;volatile
 15041                           
 15042                           ;parcheggio.c: 178: PORTBbits.RB6 = 1;
 15043  000238  8C81               	bsf	3969,6,c	;volatile
 15044                           
 15045                           ;parcheggio.c: 179: } else {
 15046  00023A  D005               	goto	i1l8664
 15047  00023C                     i1l725:
 15048                           
 15049                           ; BSR set to: 1
 15050                           ;parcheggio.c: 180: activation = 0;
 15051  00023C  9054               	bcf	_activation/(0+8),_activation& (0+7),c	;volatile
 15052                           
 15053                           ;parcheggio.c: 181: PORTBbits.RB4 = 0;
 15054  00023E  9881               	bcf	3969,4,c	;volatile
 15055                           
 15056                           ;parcheggio.c: 182: PORTBbits.RB5 = 0;
 15057  000240  9A81               	bcf	3969,5,c	;volatile
 15058                           
 15059                           ;parcheggio.c: 183: PORTBbits.RB6 = 0;
 15060  000242  9C81               	bcf	3969,6,c	;volatile
 15061                           
 15062                           ;parcheggio.c: 184: request_sent = 0;
 15063  000244  9855               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
 15064  000246                     i1l8664:
 15065                           
 15066                           ; BSR set to: 1
 15067                           ;parcheggio.c: 185: }
 15068                           ;parcheggio.c: 186: }
 15069                           ;parcheggio.c: 187: if (msg.identifier == 0b00000001100) {
 15070  000246  0E0C               	movlw	12
 15071  000248  0101               	movlb	1	; () banked
 15072  00024A  1944               	xorwf	_msg& (0+255),w,b
 15073  00024C  0101               	movlb	1	; () banked
 15074  00024E  1145               	iorwf	(_msg+1)& (0+255),w,b
 15075  000250  0101               	movlb	1	; () banked
 15076  000252  1146               	iorwf	(_msg+2)& (0+255),w,b
 15077  000254  0101               	movlb	1	; () banked
 15078  000256  1147               	iorwf	(_msg+3)& (0+255),w,b
 15079  000258  B4D8               	btfsc	status,2,c
 15080                           
 15081                           ; BSR set to: 1
 15082                           ;parcheggio.c: 188: start_operation = 1;
 15083  00025A  8C55               	bsf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 15084                           
 15085                           ; BSR set to: 1
 15086                           ;parcheggio.c: 189: }
 15087                           ;parcheggio.c: 190: if (msg.identifier == 0b00000000110) {
 15088                           
 15089                           ; BSR set to: 1
 15090  00025C  0E06               	movlw	6
 15091  00025E  0101               	movlb	1	; () banked
 15092  000260  1944               	xorwf	_msg& (0+255),w,b
 15093  000262  0101               	movlb	1	; () banked
 15094  000264  1145               	iorwf	(_msg+1)& (0+255),w,b
 15095  000266  0101               	movlb	1	; () banked
 15096  000268  1146               	iorwf	(_msg+2)& (0+255),w,b
 15097  00026A  0101               	movlb	1	; () banked
 15098  00026C  1147               	iorwf	(_msg+3)& (0+255),w,b
 15099  00026E  A4D8               	btfss	status,2,c
 15100  000270  D025               	goto	i1l728
 15101                           
 15102                           ; BSR set to: 1
 15103                           ;parcheggio.c: 191: for (unsigned char i = 0; i < 8; i++) {
 15104  000272  0E00               	movlw	0
 15105  000274  6E53               	movwf	ISR_Bassa@i,c
 15106  000276                     i1l8672:
 15107                           
 15108                           ; BSR set to: 1
 15109  000276  0E07               	movlw	7
 15110  000278  6453               	cpfsgt	ISR_Bassa@i,c
 15111  00027A  D001               	goto	i1l8676
 15112  00027C  D014               	goto	i1l8682
 15113  00027E                     i1l8676:
 15114                           
 15115                           ;parcheggio.c: 192: data_speed_rx[i] = msg.data[i];
 15116  00027E  5053               	movf	ISR_Bassa@i,w,c
 15117  000280  0D01               	mullw	1
 15118  000282  0E48               	movlw	low (_msg+4)
 15119  000284  24F3               	addwf	prodl,w,c
 15120  000286  6ED9               	movwf	fsr2l,c
 15121  000288  0E01               	movlw	high (_msg+4)
 15122  00028A  20F4               	addwfc	prodh,w,c
 15123  00028C  6EDA               	movwf	fsr2h,c
 15124  00028E  5053               	movf	ISR_Bassa@i,w,c
 15125  000290  0D01               	mullw	1
 15126  000292  0E08               	movlw	low _data_speed_rx
 15127  000294  24F3               	addwf	prodl,w,c
 15128  000296  6EE1               	movwf	fsr1l,c
 15129  000298  0E01               	movlw	high _data_speed_rx
 15130  00029A  20F4               	addwfc	prodh,w,c
 15131  00029C  6EE2               	movwf	fsr1h,c
 15132  00029E  CFDF FFE7          	movff	indf2,indf1
 15133  0002A2  2A53               	incf	ISR_Bassa@i,f,c
 15134  0002A4  D7E8               	goto	i1l8672
 15135  0002A6                     i1l8682:
 15136                           
 15137                           ;parcheggio.c: 193: }
 15138                           ;parcheggio.c: 194: if (msg.identifier == 0b00000001101) {
 15139  0002A6  0E0D               	movlw	13
 15140  0002A8  0101               	movlb	1	; () banked
 15141  0002AA  1944               	xorwf	_msg& (0+255),w,b
 15142  0002AC  0101               	movlb	1	; () banked
 15143  0002AE  1145               	iorwf	(_msg+1)& (0+255),w,b
 15144  0002B0  0101               	movlb	1	; () banked
 15145  0002B2  1146               	iorwf	(_msg+2)& (0+255),w,b
 15146  0002B4  0101               	movlb	1	; () banked
 15147  0002B6  1147               	iorwf	(_msg+3)& (0+255),w,b
 15148  0002B8  B4D8               	btfsc	status,2,c
 15149                           
 15150                           ; BSR set to: 1
 15151                           ;parcheggio.c: 195: distance_wait = 0;
 15152  0002BA  9E54               	bcf	_distance_wait/(0+8),_distance_wait& (0+7),c	;volatile
 15153  0002BC                     i1l728:
 15154                           
 15155                           ; BSR set to: 1
 15156                           ;parcheggio.c: 196: }
 15157                           ;parcheggio.c: 198: }
 15158                           ;parcheggio.c: 200: PIR3bits.RXB0IF = 0;
 15159  0002BC  90A4               	bcf	4004,0,c	;volatile
 15160                           
 15161                           ;parcheggio.c: 201: PIR3bits.RXB1IF = 0;
 15162  0002BE  92A4               	bcf	4004,1,c	;volatile
 15163  0002C0                     i1l732:
 15164  0002C0  C051  FFF5         	movff	??_ISR_Bassa+20,tablat
 15165  0002C4  C050  FFF8         	movff	??_ISR_Bassa+19,tblptru
 15166  0002C8  C04F  FFF7         	movff	??_ISR_Bassa+18,tblptrh
 15167  0002CC  C04E  FFF6         	movff	??_ISR_Bassa+17,tblptrl
 15168  0002D0  C04D  FFF4         	movff	??_ISR_Bassa+16,prodh
 15169  0002D4  C04C  FFF3         	movff	??_ISR_Bassa+15,prodl
 15170  0002D8  C04B  FFDA         	movff	??_ISR_Bassa+14,fsr2h
 15171  0002DC  C04A  FFD9         	movff	??_ISR_Bassa+13,fsr2l
 15172  0002E0  C049  FFE2         	movff	??_ISR_Bassa+12,fsr1h
 15173  0002E4  C048  FFE1         	movff	??_ISR_Bassa+11,fsr1l
 15174  0002E8  C047  FFEA         	movff	??_ISR_Bassa+10,fsr0h
 15175  0002EC  C046  FFE9         	movff	??_ISR_Bassa+9,fsr0l
 15176  0002F0  C045  FFFB         	movff	??_ISR_Bassa+8,pclatu
 15177  0002F4  C044  FFFA         	movff	??_ISR_Bassa+7,pclath
 15178  0002F8  C043  FFE0         	movff	??_ISR_Bassa+6,bsr
 15179  0002FC  C042  FFE8         	movff	??_ISR_Bassa+5,wreg
 15180  000300  C041  FFD8         	movff	??_ISR_Bassa+4,status
 15181  000304  9056               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 15182  000306  0010               	retfie	
 15183  000308                     __end_of_ISR_Bassa:
 15184                           	opt stack 0
 15185                           pclatu	equ	0xFFB
 15186                           pclath	equ	0xFFA
 15187                           tblptru	equ	0xFF8
 15188                           tblptrh	equ	0xFF7
 15189                           tblptrl	equ	0xFF6
 15190                           tablat	equ	0xFF5
 15191                           prodh	equ	0xFF4
 15192                           prodl	equ	0xFF3
 15193                           intcon	equ	0xFF2
 15194                           intcon2	equ	0xFF1
 15195                           postinc0	equ	0xFEE
 15196                           fsr0h	equ	0xFEA
 15197                           fsr0l	equ	0xFE9
 15198                           wreg	equ	0xFE8
 15199                           indf1	equ	0xFE7
 15200                           postdec1	equ	0xFE5
 15201                           fsr1h	equ	0xFE2
 15202                           fsr1l	equ	0xFE1
 15203                           bsr	equ	0xFE0
 15204                           indf2	equ	0xFDF
 15205                           postinc2	equ	0xFDE
 15206                           postdec2	equ	0xFDD
 15207                           plusw2	equ	0xFDB
 15208                           fsr2h	equ	0xFDA
 15209                           fsr2l	equ	0xFD9
 15210                           status	equ	0xFD8
 15211                           
 15212 ;; *************** function i1_CANsendMessage *****************
 15213 ;; Defined at:
 15214 ;;		line 295 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 15215 ;; Parameters:    Size  Location     Type
 15216 ;;  identifier      4    0[COMRAM] unsigned long 
 15217 ;;  data            2    4[COMRAM] PTR unsigned char 
 15218 ;;		 -> can_send@data_correction1(0), data_speed(8), data_brake(8), data_steering(8), 
 15219 ;;		 -> data_correction(8), data_test(8), data(8), sensor_distance_short(8), 
 15220 ;;  dataLength      1    6[COMRAM] unsigned char 
 15221 ;;  flags           1    7[COMRAM] enum E16335
 15222 ;; Auto vars:     Size  Location     Type
 15223 ;;  CANsendMessa    4   12[COMRAM] unsigned long 
 15224 ;; Return value:  Size  Location     Type
 15225 ;;		None               void
 15226 ;; Registers used:
 15227 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15228 ;; Tracked objects:
 15229 ;;		On entry : 0/0
 15230 ;;		On exit  : 0/0
 15231 ;;		Unchanged: 0/0
 15232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15233 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15234 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15235 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15236 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15237 ;;Total ram usage:       16 bytes
 15238 ;; Hardware stack levels used:    1
 15239 ;; Hardware stack levels required when called:    2
 15240 ;; This function calls:
 15241 ;;		Nothing
 15242 ;; This function is called by:
 15243 ;;		_ISR_Bassa
 15244 ;; This function uses a non-reentrant model
 15245 ;;
 15246                           
 15247                           	psect	text36
 15248  001FE4                     __ptext36:
 15249                           	opt stack 0
 15250  001FE4                     i1_CANsendMessage:
 15251                           	opt stack 21
 15252                           
 15253                           ;inc\CANlib.h: 297: unsigned long tamp;
 15254                           ;inc\CANlib.h: 299: if (TXB0CONbits.TXREQ == 0)
 15255                           
 15256                           ;incstack = 0
 15257  001FE4  010F               	movlb	15	; () banked
 15258  001FE6  B740               	btfsc	64,3,b	;volatile
 15259  001FE8  D115               	goto	i1l363
 15260                           
 15261                           ; BSR set to: 15
 15262                           ;inc\CANlib.h: 300: { TXB0DLC = dataLength;
 15263  001FEA  C033  FF45         	movff	i1CANsendMessage@dataLength,3909	;volatile
 15264                           
 15265                           ;inc\CANlib.h: 301: if (0b01000000 & flags)
 15266  001FEE  AC34               	btfss	i1CANsendMessage@flags,6,c
 15267  001FF0  D003               	goto	i1l364
 15268                           
 15269                           ; BSR set to: 15
 15270                           ;inc\CANlib.h: 302: TXB0DLCbits.TXRTR = 0x01;
 15271  001FF2  010F               	movlb	15	; () banked
 15272  001FF4  8D45               	bsf	69,6,b	;volatile
 15273  001FF6  D002               	goto	i1l365
 15274  001FF8                     i1l364:
 15275                           
 15276                           ; BSR set to: 15
 15277                           ;inc\CANlib.h: 303: else
 15278                           ;inc\CANlib.h: 304: TXB0DLCbits.TXRTR = 0x00;
 15279  001FF8  010F               	movlb	15	; () banked
 15280  001FFA  9D45               	bcf	69,6,b	;volatile
 15281  001FFC                     i1l365:
 15282                           
 15283                           ; BSR set to: 15
 15284                           ;inc\CANlib.h: 306: if (CAN_TX_FRAME_MASK & flags)
 15285  001FFC  A634               	btfss	i1CANsendMessage@flags,3,c
 15286  001FFE  D066               	goto	i1l366
 15287                           
 15288                           ; BSR set to: 15
 15289                           ;inc\CANlib.h: 307: {
 15290                           ;inc\CANlib.h: 309: tamp = identifier & 0x000000FF;
 15291  002000  502D               	movf	i1CANsendMessage@identifier,w,c
 15292  002002  6E39               	movwf	i1CANsendMessage@tamp,c
 15293  002004  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 15294  002006  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 15295  002008  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 15296                           
 15297                           ; BSR set to: 15
 15298                           ;inc\CANlib.h: 310: TXB0EIDL = (unsigned char) tamp;
 15299  00200A  C039  FF44         	movff	i1CANsendMessage@tamp,3908	;volatile
 15300                           
 15301                           ; BSR set to: 15
 15302                           ;inc\CANlib.h: 312: tamp = identifier & 0x0000FF00;
 15303  00200E  0E00               	movlw	0
 15304  002010  142D               	andwf	i1CANsendMessage@identifier,w,c
 15305  002012  6E39               	movwf	i1CANsendMessage@tamp,c
 15306  002014  0EFF               	movlw	255
 15307  002016  142E               	andwf	i1CANsendMessage@identifier+1,w,c
 15308  002018  6E3A               	movwf	i1CANsendMessage@tamp+1,c
 15309  00201A  0E00               	movlw	0
 15310  00201C  142F               	andwf	i1CANsendMessage@identifier+2,w,c
 15311  00201E  6E3B               	movwf	i1CANsendMessage@tamp+2,c
 15312  002020  0E00               	movlw	0
 15313  002022  1430               	andwf	i1CANsendMessage@identifier+3,w,c
 15314  002024  6E3C               	movwf	i1CANsendMessage@tamp+3,c
 15315                           
 15316                           ; BSR set to: 15
 15317                           ;inc\CANlib.h: 313: tamp = tamp >> 8;
 15318  002026  C039  F035         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 15319  00202A  C03A  F036         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 15320  00202E  C03B  F037         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 15321  002032  C03C  F038         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 15322  002036  C036  F035         	movff	??i1_CANsendMessage+1,??i1_CANsendMessage
 15323  00203A  C037  F036         	movff	??i1_CANsendMessage+2,??i1_CANsendMessage+1
 15324  00203E  C038  F037         	movff	??i1_CANsendMessage+3,??i1_CANsendMessage+2
 15325  002042  6A38               	clrf	??i1_CANsendMessage+3,c
 15326  002044  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15327  002048  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15328  00204C  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15329  002050  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15330                           
 15331                           ; BSR set to: 15
 15332                           ;inc\CANlib.h: 314: TXB0EIDH = (unsigned char) tamp;
 15333  002054  C039  FF43         	movff	i1CANsendMessage@tamp,3907	;volatile
 15334                           
 15335                           ; BSR set to: 15
 15336                           ;inc\CANlib.h: 316: TXB0SIDL = 0x00;
 15337  002058  0E00               	movlw	0
 15338  00205A  010F               	movlb	15	; () banked
 15339  00205C  6F42               	movwf	66,b	;volatile
 15340                           
 15341                           ; BSR set to: 15
 15342                           ;inc\CANlib.h: 317: TXB0SIDLbits.EXIDE = 0x01;
 15343  00205E  010F               	movlb	15	; () banked
 15344  002060  8742               	bsf	66,3,b	;volatile
 15345                           
 15346                           ; BSR set to: 15
 15347                           ;inc\CANlib.h: 319: if (identifier & 0x00010000)
 15348  002062  A02F               	btfss	i1CANsendMessage@identifier+2,0,c
 15349  002064  D002               	goto	i1l367
 15350                           
 15351                           ; BSR set to: 15
 15352                           ;inc\CANlib.h: 320: TXB0SIDLbits.EID16 = 0x01;
 15353  002066  010F               	movlb	15	; () banked
 15354  002068  8142               	bsf	66,0,b	;volatile
 15355  00206A                     i1l367:
 15356                           
 15357                           ; BSR set to: 15
 15358                           ;inc\CANlib.h: 321: if (identifier & 0x00020000)
 15359  00206A  A22F               	btfss	i1CANsendMessage@identifier+2,1,c
 15360  00206C  D002               	goto	i1l368
 15361                           
 15362                           ; BSR set to: 15
 15363                           ;inc\CANlib.h: 322: TXB0SIDLbits.EID17 = 0x01;
 15364  00206E  010F               	movlb	15	; () banked
 15365  002070  8342               	bsf	66,1,b	;volatile
 15366  002072                     i1l368:
 15367                           
 15368                           ; BSR set to: 15
 15369                           ;inc\CANlib.h: 323: if (identifier & 0x00040000)
 15370  002072  A42F               	btfss	i1CANsendMessage@identifier+2,2,c
 15371  002074  D002               	goto	i1l369
 15372                           
 15373                           ; BSR set to: 15
 15374                           ;inc\CANlib.h: 324: TXB0SIDLbits.SID0 = 0x01;
 15375  002076  010F               	movlb	15	; () banked
 15376  002078  8B42               	bsf	66,5,b	;volatile
 15377  00207A                     i1l369:
 15378                           
 15379                           ; BSR set to: 15
 15380                           ;inc\CANlib.h: 325: if (identifier & 0x00080000)
 15381  00207A  A62F               	btfss	i1CANsendMessage@identifier+2,3,c
 15382  00207C  D002               	goto	i1l370
 15383                           
 15384                           ; BSR set to: 15
 15385                           ;inc\CANlib.h: 326: TXB0SIDLbits.SID1 = 0x01;
 15386  00207E  010F               	movlb	15	; () banked
 15387  002080  8D42               	bsf	66,6,b	;volatile
 15388  002082                     i1l370:
 15389                           
 15390                           ; BSR set to: 15
 15391                           ;inc\CANlib.h: 327: if (identifier & 0x00100000)
 15392  002082  A82F               	btfss	i1CANsendMessage@identifier+2,4,c
 15393  002084  D002               	goto	i1l8354
 15394                           
 15395                           ; BSR set to: 15
 15396                           ;inc\CANlib.h: 328: TXB0SIDLbits.SID2 = 0x01;
 15397  002086  010F               	movlb	15	; () banked
 15398  002088  8F42               	bsf	66,7,b	;volatile
 15399  00208A                     i1l8354:
 15400                           
 15401                           ; BSR set to: 15
 15402                           ;inc\CANlib.h: 330: tamp = (identifier >> 21);
 15403  00208A  C02D  F035         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 15404  00208E  C02E  F036         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 15405  002092  C02F  F037         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 15406  002096  C030  F038         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 15407  00209A  0E16               	movlw	22
 15408  00209C  D005               	goto	i1u1107_20
 15409  00209E                     i1u1107_25:
 15410  00209E  90D8               	bcf	status,0,c
 15411  0020A0  3238               	rrcf	??i1_CANsendMessage+3,f,c
 15412  0020A2  3237               	rrcf	??i1_CANsendMessage+2,f,c
 15413  0020A4  3236               	rrcf	??i1_CANsendMessage+1,f,c
 15414  0020A6  3235               	rrcf	??i1_CANsendMessage,f,c
 15415  0020A8                     i1u1107_20:
 15416  0020A8  2EE8               	decfsz	wreg,f,c
 15417  0020AA  D7F9               	goto	i1u1107_25
 15418  0020AC  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15419  0020B0  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15420  0020B4  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15421  0020B8  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15422                           
 15423                           ; BSR set to: 15
 15424                           ;inc\CANlib.h: 331: tamp = tamp & 0x000000FF;
 15425  0020BC  5039               	movf	i1CANsendMessage@tamp,w,c
 15426  0020BE  6E39               	movwf	i1CANsendMessage@tamp,c
 15427  0020C0  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 15428  0020C2  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 15429  0020C4  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 15430                           
 15431                           ; BSR set to: 15
 15432                           ;inc\CANlib.h: 332: TXB0SIDH = (unsigned char) tamp;
 15433  0020C6  C039  FF41         	movff	i1CANsendMessage@tamp,3905	;volatile
 15434                           
 15435                           ;inc\CANlib.h: 333: }
 15436  0020CA  D04D               	goto	i1l8374
 15437  0020CC                     i1l366:
 15438                           
 15439                           ; BSR set to: 15
 15440                           ;inc\CANlib.h: 335: else
 15441                           ;inc\CANlib.h: 337: {
 15442                           ;inc\CANlib.h: 338: TXB0SIDLbits.EXIDE = 0x00;
 15443  0020CC  010F               	movlb	15	; () banked
 15444  0020CE  9742               	bcf	66,3,b	;volatile
 15445                           
 15446                           ; BSR set to: 15
 15447                           ;inc\CANlib.h: 340: tamp = (identifier >> 3);
 15448  0020D0  C02D  F035         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 15449  0020D4  C02E  F036         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 15450  0020D8  C02F  F037         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 15451  0020DC  C030  F038         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 15452  0020E0  0E04               	movlw	4
 15453  0020E2  D005               	goto	i1u1108_20
 15454  0020E4                     i1u1108_25:
 15455  0020E4  90D8               	bcf	status,0,c
 15456  0020E6  3238               	rrcf	??i1_CANsendMessage+3,f,c
 15457  0020E8  3237               	rrcf	??i1_CANsendMessage+2,f,c
 15458  0020EA  3236               	rrcf	??i1_CANsendMessage+1,f,c
 15459  0020EC  3235               	rrcf	??i1_CANsendMessage,f,c
 15460  0020EE                     i1u1108_20:
 15461  0020EE  2EE8               	decfsz	wreg,f,c
 15462  0020F0  D7F9               	goto	i1u1108_25
 15463  0020F2  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15464  0020F6  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15465  0020FA  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15466  0020FE  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15467                           
 15468                           ; BSR set to: 15
 15469                           ;inc\CANlib.h: 341: tamp = tamp & 0x000000FF;
 15470  002102  5039               	movf	i1CANsendMessage@tamp,w,c
 15471  002104  6E39               	movwf	i1CANsendMessage@tamp,c
 15472  002106  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 15473  002108  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 15474  00210A  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 15475                           
 15476                           ; BSR set to: 15
 15477                           ;inc\CANlib.h: 342: TXB0SIDH = (unsigned char) tamp;
 15478  00210C  C039  FF41         	movff	i1CANsendMessage@tamp,3905	;volatile
 15479                           
 15480                           ; BSR set to: 15
 15481                           ;inc\CANlib.h: 344: tamp = identifier & 0x00000007;
 15482  002110  0E07               	movlw	7
 15483  002112  142D               	andwf	i1CANsendMessage@identifier,w,c
 15484  002114  6E39               	movwf	i1CANsendMessage@tamp,c
 15485  002116  0E00               	movlw	0
 15486  002118  142E               	andwf	i1CANsendMessage@identifier+1,w,c
 15487  00211A  6E3A               	movwf	i1CANsendMessage@tamp+1,c
 15488  00211C  0E00               	movlw	0
 15489  00211E  142F               	andwf	i1CANsendMessage@identifier+2,w,c
 15490  002120  6E3B               	movwf	i1CANsendMessage@tamp+2,c
 15491  002122  0E00               	movlw	0
 15492  002124  1430               	andwf	i1CANsendMessage@identifier+3,w,c
 15493  002126  6E3C               	movwf	i1CANsendMessage@tamp+3,c
 15494                           
 15495                           ; BSR set to: 15
 15496                           ;inc\CANlib.h: 345: tamp = tamp << 5;
 15497  002128  C039  F035         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 15498  00212C  C03A  F036         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 15499  002130  C03B  F037         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 15500  002134  C03C  F038         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 15501  002138  0E05               	movlw	5
 15502  00213A                     i1u1109_25:
 15503  00213A  90D8               	bcf	status,0,c
 15504  00213C  3635               	rlcf	??i1_CANsendMessage,f,c
 15505  00213E  3636               	rlcf	??i1_CANsendMessage+1,f,c
 15506  002140  3637               	rlcf	??i1_CANsendMessage+2,f,c
 15507  002142  3638               	rlcf	??i1_CANsendMessage+3,f,c
 15508  002144  2EE8               	decfsz	wreg,f,c
 15509  002146  D7F9               	goto	i1u1109_25
 15510  002148  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15511  00214C  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15512  002150  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15513  002154  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15514                           
 15515                           ; BSR set to: 15
 15516                           ;inc\CANlib.h: 346: TXB0SIDL = TXB0SIDL & 0b00011111;
 15517  002158  010F               	movlb	15	; () banked
 15518  00215A  5142               	movf	66,w,b	;volatile
 15519  00215C  0B1F               	andlw	31
 15520  00215E  010F               	movlb	15	; () banked
 15521  002160  6F42               	movwf	66,b	;volatile
 15522                           
 15523                           ; BSR set to: 15
 15524                           ;inc\CANlib.h: 347: TXB0SIDL = (unsigned char) tamp;
 15525  002162  C039  FF42         	movff	i1CANsendMessage@tamp,3906	;volatile
 15526  002166                     i1l8374:
 15527                           
 15528                           ; BSR set to: 15
 15529                           ;inc\CANlib.h: 348: }
 15530                           ;inc\CANlib.h: 350: if (0b00000001 & flags)
 15531  002166  A034               	btfss	i1CANsendMessage@flags,0,c
 15532  002168  D003               	goto	i1l373
 15533                           
 15534                           ; BSR set to: 15
 15535                           ;inc\CANlib.h: 351: TXB0CONbits.TXPRI0 = 0x01;
 15536  00216A  010F               	movlb	15	; () banked
 15537  00216C  8140               	bsf	64,0,b	;volatile
 15538  00216E  D002               	goto	i1l374
 15539  002170                     i1l373:
 15540                           
 15541                           ; BSR set to: 15
 15542                           ;inc\CANlib.h: 352: else
 15543                           ;inc\CANlib.h: 353: TXB0CONbits.TXPRI0 = 0x00;
 15544  002170  010F               	movlb	15	; () banked
 15545  002172  9140               	bcf	64,0,b	;volatile
 15546  002174                     i1l374:
 15547                           
 15548                           ; BSR set to: 15
 15549                           ;inc\CANlib.h: 354: if (0b00000010 & flags)
 15550  002174  A234               	btfss	i1CANsendMessage@flags,1,c
 15551  002176  D003               	goto	i1l375
 15552                           
 15553                           ; BSR set to: 15
 15554                           ;inc\CANlib.h: 355: TXB0CONbits.TXPRI1 = 0x01;
 15555  002178  010F               	movlb	15	; () banked
 15556  00217A  8340               	bsf	64,1,b	;volatile
 15557  00217C  D002               	goto	i1l8380
 15558  00217E                     i1l375:
 15559                           
 15560                           ; BSR set to: 15
 15561                           ;inc\CANlib.h: 356: else
 15562                           ;inc\CANlib.h: 357: TXB0CONbits.TXPRI1 = 0x00;
 15563  00217E  010F               	movlb	15	; () banked
 15564  002180  9340               	bcf	64,1,b	;volatile
 15565  002182                     i1l8380:
 15566                           
 15567                           ; BSR set to: 15
 15568                           ;inc\CANlib.h: 359: TXB0D0 = data[0];
 15569  002182  C031  FFD9         	movff	i1CANsendMessage@data,fsr2l
 15570  002186  C032  FFDA         	movff	i1CANsendMessage@data+1,fsr2h
 15571  00218A  50DF               	movf	indf2,w,c
 15572  00218C  010F               	movlb	15	; () banked
 15573  00218E  6F46               	movwf	70,b	;volatile
 15574                           
 15575                           ; BSR set to: 15
 15576                           ;inc\CANlib.h: 360: TXB0D1 = data[1];
 15577  002190  EE20 F001          	lfsr	2,1
 15578  002194  5031               	movf	i1CANsendMessage@data,w,c
 15579  002196  26D9               	addwf	fsr2l,f,c
 15580  002198  5032               	movf	i1CANsendMessage@data+1,w,c
 15581  00219A  22DA               	addwfc	fsr2h,f,c
 15582  00219C  50DF               	movf	indf2,w,c
 15583  00219E  010F               	movlb	15	; () banked
 15584  0021A0  6F47               	movwf	71,b	;volatile
 15585                           
 15586                           ; BSR set to: 15
 15587                           ;inc\CANlib.h: 361: TXB0D2 = data[2];
 15588  0021A2  EE20 F002          	lfsr	2,2
 15589  0021A6  5031               	movf	i1CANsendMessage@data,w,c
 15590  0021A8  26D9               	addwf	fsr2l,f,c
 15591  0021AA  5032               	movf	i1CANsendMessage@data+1,w,c
 15592  0021AC  22DA               	addwfc	fsr2h,f,c
 15593  0021AE  50DF               	movf	indf2,w,c
 15594  0021B0  010F               	movlb	15	; () banked
 15595  0021B2  6F48               	movwf	72,b	;volatile
 15596                           
 15597                           ; BSR set to: 15
 15598                           ;inc\CANlib.h: 362: TXB0D3 = data[3];
 15599  0021B4  EE20 F003          	lfsr	2,3
 15600  0021B8  5031               	movf	i1CANsendMessage@data,w,c
 15601  0021BA  26D9               	addwf	fsr2l,f,c
 15602  0021BC  5032               	movf	i1CANsendMessage@data+1,w,c
 15603  0021BE  22DA               	addwfc	fsr2h,f,c
 15604  0021C0  50DF               	movf	indf2,w,c
 15605  0021C2  010F               	movlb	15	; () banked
 15606  0021C4  6F49               	movwf	73,b	;volatile
 15607                           
 15608                           ; BSR set to: 15
 15609                           ;inc\CANlib.h: 363: TXB0D4 = data[4];
 15610  0021C6  EE20 F004          	lfsr	2,4
 15611  0021CA  5031               	movf	i1CANsendMessage@data,w,c
 15612  0021CC  26D9               	addwf	fsr2l,f,c
 15613  0021CE  5032               	movf	i1CANsendMessage@data+1,w,c
 15614  0021D0  22DA               	addwfc	fsr2h,f,c
 15615  0021D2  50DF               	movf	indf2,w,c
 15616  0021D4  010F               	movlb	15	; () banked
 15617  0021D6  6F4A               	movwf	74,b	;volatile
 15618                           
 15619                           ; BSR set to: 15
 15620                           ;inc\CANlib.h: 364: TXB0D5 = data[5];
 15621  0021D8  EE20 F005          	lfsr	2,5
 15622  0021DC  5031               	movf	i1CANsendMessage@data,w,c
 15623  0021DE  26D9               	addwf	fsr2l,f,c
 15624  0021E0  5032               	movf	i1CANsendMessage@data+1,w,c
 15625  0021E2  22DA               	addwfc	fsr2h,f,c
 15626  0021E4  50DF               	movf	indf2,w,c
 15627  0021E6  010F               	movlb	15	; () banked
 15628  0021E8  6F4B               	movwf	75,b	;volatile
 15629                           
 15630                           ; BSR set to: 15
 15631                           ;inc\CANlib.h: 365: TXB0D6 = data[6];
 15632  0021EA  EE20 F006          	lfsr	2,6
 15633  0021EE  5031               	movf	i1CANsendMessage@data,w,c
 15634  0021F0  26D9               	addwf	fsr2l,f,c
 15635  0021F2  5032               	movf	i1CANsendMessage@data+1,w,c
 15636  0021F4  22DA               	addwfc	fsr2h,f,c
 15637  0021F6  50DF               	movf	indf2,w,c
 15638  0021F8  010F               	movlb	15	; () banked
 15639  0021FA  6F4C               	movwf	76,b	;volatile
 15640                           
 15641                           ; BSR set to: 15
 15642                           ;inc\CANlib.h: 366: TXB0D7 = data[7];
 15643  0021FC  EE20 F007          	lfsr	2,7
 15644  002200  5031               	movf	i1CANsendMessage@data,w,c
 15645  002202  26D9               	addwf	fsr2l,f,c
 15646  002204  5032               	movf	i1CANsendMessage@data+1,w,c
 15647  002206  22DA               	addwfc	fsr2h,f,c
 15648  002208  50DF               	movf	indf2,w,c
 15649  00220A  010F               	movlb	15	; () banked
 15650  00220C  6F4D               	movwf	77,b	;volatile
 15651                           
 15652                           ; BSR set to: 15
 15653                           ;inc\CANlib.h: 368: TXB0CONbits.TXREQ = 0x01;
 15654  00220E  010F               	movlb	15	; () banked
 15655  002210  8740               	bsf	64,3,b	;volatile
 15656                           
 15657                           ; BSR set to: 15
 15658                           ;inc\CANlib.h: 369: return;
 15659  002212  0012               	return	
 15660  002214                     i1l363:
 15661                           
 15662                           ; BSR set to: 15
 15663                           ;inc\CANlib.h: 370: }
 15664                           ;inc\CANlib.h: 374: if (TXB1CONbits.TXREQ == 0)
 15665  002214  010F               	movlb	15	; () banked
 15666  002216  B730               	btfsc	48,3,b	;volatile
 15667  002218  D115               	goto	i1l378
 15668                           
 15669                           ; BSR set to: 15
 15670                           ;inc\CANlib.h: 375: { TXB1DLC = dataLength;
 15671  00221A  C033  FF35         	movff	i1CANsendMessage@dataLength,3893	;volatile
 15672                           
 15673                           ;inc\CANlib.h: 377: if (0b01000000 & flags)
 15674  00221E  AC34               	btfss	i1CANsendMessage@flags,6,c
 15675  002220  D003               	goto	i1l379
 15676                           
 15677                           ; BSR set to: 15
 15678                           ;inc\CANlib.h: 378: TXB1DLCbits.TXRTR = 0x01;
 15679  002222  010F               	movlb	15	; () banked
 15680  002224  8D35               	bsf	53,6,b	;volatile
 15681  002226  D002               	goto	i1l380
 15682  002228                     i1l379:
 15683                           
 15684                           ; BSR set to: 15
 15685                           ;inc\CANlib.h: 379: else
 15686                           ;inc\CANlib.h: 380: TXB1DLCbits.TXRTR = 0x00;
 15687  002228  010F               	movlb	15	; () banked
 15688  00222A  9D35               	bcf	53,6,b	;volatile
 15689  00222C                     i1l380:
 15690                           
 15691                           ; BSR set to: 15
 15692                           ;inc\CANlib.h: 382: if (CAN_TX_FRAME_MASK & flags)
 15693  00222C  A634               	btfss	i1CANsendMessage@flags,3,c
 15694  00222E  D066               	goto	i1l381
 15695                           
 15696                           ; BSR set to: 15
 15697                           ;inc\CANlib.h: 383: {
 15698                           ;inc\CANlib.h: 384: tamp = identifier & 0x000000FF;
 15699  002230  502D               	movf	i1CANsendMessage@identifier,w,c
 15700  002232  6E39               	movwf	i1CANsendMessage@tamp,c
 15701  002234  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 15702  002236  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 15703  002238  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 15704                           
 15705                           ; BSR set to: 15
 15706                           ;inc\CANlib.h: 385: TXB1EIDL = (unsigned char) tamp;
 15707  00223A  C039  FF34         	movff	i1CANsendMessage@tamp,3892	;volatile
 15708                           
 15709                           ; BSR set to: 15
 15710                           ;inc\CANlib.h: 387: tamp = identifier & 0x0000FF00;
 15711  00223E  0E00               	movlw	0
 15712  002240  142D               	andwf	i1CANsendMessage@identifier,w,c
 15713  002242  6E39               	movwf	i1CANsendMessage@tamp,c
 15714  002244  0EFF               	movlw	255
 15715  002246  142E               	andwf	i1CANsendMessage@identifier+1,w,c
 15716  002248  6E3A               	movwf	i1CANsendMessage@tamp+1,c
 15717  00224A  0E00               	movlw	0
 15718  00224C  142F               	andwf	i1CANsendMessage@identifier+2,w,c
 15719  00224E  6E3B               	movwf	i1CANsendMessage@tamp+2,c
 15720  002250  0E00               	movlw	0
 15721  002252  1430               	andwf	i1CANsendMessage@identifier+3,w,c
 15722  002254  6E3C               	movwf	i1CANsendMessage@tamp+3,c
 15723                           
 15724                           ; BSR set to: 15
 15725                           ;inc\CANlib.h: 388: tamp = tamp >> 8;
 15726  002256  C039  F035         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 15727  00225A  C03A  F036         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 15728  00225E  C03B  F037         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 15729  002262  C03C  F038         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 15730  002266  C036  F035         	movff	??i1_CANsendMessage+1,??i1_CANsendMessage
 15731  00226A  C037  F036         	movff	??i1_CANsendMessage+2,??i1_CANsendMessage+1
 15732  00226E  C038  F037         	movff	??i1_CANsendMessage+3,??i1_CANsendMessage+2
 15733  002272  6A38               	clrf	??i1_CANsendMessage+3,c
 15734  002274  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15735  002278  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15736  00227C  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15737  002280  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15738                           
 15739                           ; BSR set to: 15
 15740                           ;inc\CANlib.h: 389: TXB1EIDH = (unsigned char) tamp;
 15741  002284  C039  FF33         	movff	i1CANsendMessage@tamp,3891	;volatile
 15742                           
 15743                           ; BSR set to: 15
 15744                           ;inc\CANlib.h: 391: TXB1SIDL = 0x00;
 15745  002288  0E00               	movlw	0
 15746  00228A  010F               	movlb	15	; () banked
 15747  00228C  6F32               	movwf	50,b	;volatile
 15748                           
 15749                           ; BSR set to: 15
 15750                           ;inc\CANlib.h: 392: TXB1SIDLbits.EXIDE = 0x01;
 15751  00228E  010F               	movlb	15	; () banked
 15752  002290  8732               	bsf	50,3,b	;volatile
 15753                           
 15754                           ; BSR set to: 15
 15755                           ;inc\CANlib.h: 394: if (identifier & 0x00010000)
 15756  002292  A02F               	btfss	i1CANsendMessage@identifier+2,0,c
 15757  002294  D002               	goto	i1l382
 15758                           
 15759                           ; BSR set to: 15
 15760                           ;inc\CANlib.h: 395: TXB1SIDLbits.EID16 = 0x01;
 15761  002296  010F               	movlb	15	; () banked
 15762  002298  8132               	bsf	50,0,b	;volatile
 15763  00229A                     i1l382:
 15764                           
 15765                           ; BSR set to: 15
 15766                           ;inc\CANlib.h: 396: if (identifier & 0x00020000)
 15767  00229A  A22F               	btfss	i1CANsendMessage@identifier+2,1,c
 15768  00229C  D002               	goto	i1l383
 15769                           
 15770                           ; BSR set to: 15
 15771                           ;inc\CANlib.h: 397: TXB1SIDLbits.EID17 = 0x01;
 15772  00229E  010F               	movlb	15	; () banked
 15773  0022A0  8332               	bsf	50,1,b	;volatile
 15774  0022A2                     i1l383:
 15775                           
 15776                           ; BSR set to: 15
 15777                           ;inc\CANlib.h: 398: if (identifier & 0x00040000)
 15778  0022A2  A42F               	btfss	i1CANsendMessage@identifier+2,2,c
 15779  0022A4  D002               	goto	i1l384
 15780                           
 15781                           ; BSR set to: 15
 15782                           ;inc\CANlib.h: 399: TXB1SIDLbits.SID0 = 0x01;
 15783  0022A6  010F               	movlb	15	; () banked
 15784  0022A8  8B32               	bsf	50,5,b	;volatile
 15785  0022AA                     i1l384:
 15786                           
 15787                           ; BSR set to: 15
 15788                           ;inc\CANlib.h: 400: if (identifier & 0x00080000)
 15789  0022AA  A62F               	btfss	i1CANsendMessage@identifier+2,3,c
 15790  0022AC  D002               	goto	i1l385
 15791                           
 15792                           ; BSR set to: 15
 15793                           ;inc\CANlib.h: 401: TXB1SIDLbits.SID1 = 0x01;
 15794  0022AE  010F               	movlb	15	; () banked
 15795  0022B0  8D32               	bsf	50,6,b	;volatile
 15796  0022B2                     i1l385:
 15797                           
 15798                           ; BSR set to: 15
 15799                           ;inc\CANlib.h: 402: if (identifier & 0x00100000)
 15800  0022B2  A82F               	btfss	i1CANsendMessage@identifier+2,4,c
 15801  0022B4  D002               	goto	i1l8430
 15802                           
 15803                           ; BSR set to: 15
 15804                           ;inc\CANlib.h: 403: TXB1SIDLbits.SID2 = 0x01;
 15805  0022B6  010F               	movlb	15	; () banked
 15806  0022B8  8F32               	bsf	50,7,b	;volatile
 15807  0022BA                     i1l8430:
 15808                           
 15809                           ; BSR set to: 15
 15810                           ;inc\CANlib.h: 405: tamp = (identifier >> 21);
 15811  0022BA  C02D  F035         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 15812  0022BE  C02E  F036         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 15813  0022C2  C02F  F037         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 15814  0022C6  C030  F038         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 15815  0022CA  0E16               	movlw	22
 15816  0022CC  D005               	goto	i1u1120_20
 15817  0022CE                     i1u1120_25:
 15818  0022CE  90D8               	bcf	status,0,c
 15819  0022D0  3238               	rrcf	??i1_CANsendMessage+3,f,c
 15820  0022D2  3237               	rrcf	??i1_CANsendMessage+2,f,c
 15821  0022D4  3236               	rrcf	??i1_CANsendMessage+1,f,c
 15822  0022D6  3235               	rrcf	??i1_CANsendMessage,f,c
 15823  0022D8                     i1u1120_20:
 15824  0022D8  2EE8               	decfsz	wreg,f,c
 15825  0022DA  D7F9               	goto	i1u1120_25
 15826  0022DC  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15827  0022E0  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15828  0022E4  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15829  0022E8  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15830                           
 15831                           ; BSR set to: 15
 15832                           ;inc\CANlib.h: 406: tamp = tamp & 0x000000FF;
 15833  0022EC  5039               	movf	i1CANsendMessage@tamp,w,c
 15834  0022EE  6E39               	movwf	i1CANsendMessage@tamp,c
 15835  0022F0  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 15836  0022F2  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 15837  0022F4  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 15838                           
 15839                           ; BSR set to: 15
 15840                           ;inc\CANlib.h: 407: TXB1SIDH = (unsigned char) tamp;
 15841  0022F6  C039  FF31         	movff	i1CANsendMessage@tamp,3889	;volatile
 15842                           
 15843                           ;inc\CANlib.h: 408: }
 15844  0022FA  D04D               	goto	i1l8450
 15845  0022FC                     i1l381:
 15846                           
 15847                           ; BSR set to: 15
 15848                           ;inc\CANlib.h: 410: else
 15849                           ;inc\CANlib.h: 412: {
 15850                           ;inc\CANlib.h: 413: TXB1SIDLbits.EXIDE = 0x00;
 15851  0022FC  010F               	movlb	15	; () banked
 15852  0022FE  9732               	bcf	50,3,b	;volatile
 15853                           
 15854                           ; BSR set to: 15
 15855                           ;inc\CANlib.h: 415: tamp = (identifier >> 3);
 15856  002300  C02D  F035         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 15857  002304  C02E  F036         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 15858  002308  C02F  F037         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 15859  00230C  C030  F038         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 15860  002310  0E04               	movlw	4
 15861  002312  D005               	goto	i1u1121_20
 15862  002314                     i1u1121_25:
 15863  002314  90D8               	bcf	status,0,c
 15864  002316  3238               	rrcf	??i1_CANsendMessage+3,f,c
 15865  002318  3237               	rrcf	??i1_CANsendMessage+2,f,c
 15866  00231A  3236               	rrcf	??i1_CANsendMessage+1,f,c
 15867  00231C  3235               	rrcf	??i1_CANsendMessage,f,c
 15868  00231E                     i1u1121_20:
 15869  00231E  2EE8               	decfsz	wreg,f,c
 15870  002320  D7F9               	goto	i1u1121_25
 15871  002322  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15872  002326  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15873  00232A  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15874  00232E  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15875                           
 15876                           ; BSR set to: 15
 15877                           ;inc\CANlib.h: 416: tamp = tamp & 0x000000FF;
 15878  002332  5039               	movf	i1CANsendMessage@tamp,w,c
 15879  002334  6E39               	movwf	i1CANsendMessage@tamp,c
 15880  002336  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 15881  002338  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 15882  00233A  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 15883                           
 15884                           ; BSR set to: 15
 15885                           ;inc\CANlib.h: 417: TXB1SIDH = (unsigned char) tamp;
 15886  00233C  C039  FF31         	movff	i1CANsendMessage@tamp,3889	;volatile
 15887                           
 15888                           ; BSR set to: 15
 15889                           ;inc\CANlib.h: 419: tamp = identifier & 0x00000007;
 15890  002340  0E07               	movlw	7
 15891  002342  142D               	andwf	i1CANsendMessage@identifier,w,c
 15892  002344  6E39               	movwf	i1CANsendMessage@tamp,c
 15893  002346  0E00               	movlw	0
 15894  002348  142E               	andwf	i1CANsendMessage@identifier+1,w,c
 15895  00234A  6E3A               	movwf	i1CANsendMessage@tamp+1,c
 15896  00234C  0E00               	movlw	0
 15897  00234E  142F               	andwf	i1CANsendMessage@identifier+2,w,c
 15898  002350  6E3B               	movwf	i1CANsendMessage@tamp+2,c
 15899  002352  0E00               	movlw	0
 15900  002354  1430               	andwf	i1CANsendMessage@identifier+3,w,c
 15901  002356  6E3C               	movwf	i1CANsendMessage@tamp+3,c
 15902                           
 15903                           ; BSR set to: 15
 15904                           ;inc\CANlib.h: 420: tamp = tamp << 5;
 15905  002358  C039  F035         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 15906  00235C  C03A  F036         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 15907  002360  C03B  F037         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 15908  002364  C03C  F038         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 15909  002368  0E05               	movlw	5
 15910  00236A                     i1u1122_25:
 15911  00236A  90D8               	bcf	status,0,c
 15912  00236C  3635               	rlcf	??i1_CANsendMessage,f,c
 15913  00236E  3636               	rlcf	??i1_CANsendMessage+1,f,c
 15914  002370  3637               	rlcf	??i1_CANsendMessage+2,f,c
 15915  002372  3638               	rlcf	??i1_CANsendMessage+3,f,c
 15916  002374  2EE8               	decfsz	wreg,f,c
 15917  002376  D7F9               	goto	i1u1122_25
 15918  002378  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15919  00237C  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15920  002380  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15921  002384  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15922                           
 15923                           ; BSR set to: 15
 15924                           ;inc\CANlib.h: 421: TXB1SIDL = TXB1SIDL & 0b00011111;
 15925  002388  010F               	movlb	15	; () banked
 15926  00238A  5132               	movf	50,w,b	;volatile
 15927  00238C  0B1F               	andlw	31
 15928  00238E  010F               	movlb	15	; () banked
 15929  002390  6F32               	movwf	50,b	;volatile
 15930                           
 15931                           ; BSR set to: 15
 15932                           ;inc\CANlib.h: 422: TXB1SIDL = (unsigned char) tamp;
 15933  002392  C039  FF32         	movff	i1CANsendMessage@tamp,3890	;volatile
 15934  002396                     i1l8450:
 15935                           
 15936                           ; BSR set to: 15
 15937                           ;inc\CANlib.h: 423: }
 15938                           ;inc\CANlib.h: 425: if (0b00000001 & flags)
 15939  002396  A034               	btfss	i1CANsendMessage@flags,0,c
 15940  002398  D003               	goto	i1l388
 15941                           
 15942                           ; BSR set to: 15
 15943                           ;inc\CANlib.h: 426: TXB1CONbits.TXPRI0 = 0x01;
 15944  00239A  010F               	movlb	15	; () banked
 15945  00239C  8130               	bsf	48,0,b	;volatile
 15946  00239E  D002               	goto	i1l389
 15947  0023A0                     i1l388:
 15948                           
 15949                           ; BSR set to: 15
 15950                           ;inc\CANlib.h: 427: else
 15951                           ;inc\CANlib.h: 428: TXB1CONbits.TXPRI0 = 0x00;
 15952  0023A0  010F               	movlb	15	; () banked
 15953  0023A2  9130               	bcf	48,0,b	;volatile
 15954  0023A4                     i1l389:
 15955                           
 15956                           ; BSR set to: 15
 15957                           ;inc\CANlib.h: 429: if (0b00000010 & flags)
 15958  0023A4  A234               	btfss	i1CANsendMessage@flags,1,c
 15959  0023A6  D003               	goto	i1l390
 15960                           
 15961                           ; BSR set to: 15
 15962                           ;inc\CANlib.h: 430: TXB1CONbits.TXPRI1 = 0x01;
 15963  0023A8  010F               	movlb	15	; () banked
 15964  0023AA  8330               	bsf	48,1,b	;volatile
 15965  0023AC  D002               	goto	i1l8456
 15966  0023AE                     i1l390:
 15967                           
 15968                           ; BSR set to: 15
 15969                           ;inc\CANlib.h: 431: else
 15970                           ;inc\CANlib.h: 432: TXB1CONbits.TXPRI1 = 0x00;
 15971  0023AE  010F               	movlb	15	; () banked
 15972  0023B0  9330               	bcf	48,1,b	;volatile
 15973  0023B2                     i1l8456:
 15974                           
 15975                           ; BSR set to: 15
 15976                           ;inc\CANlib.h: 434: TXB1D0 = data[0];
 15977  0023B2  C031  FFD9         	movff	i1CANsendMessage@data,fsr2l
 15978  0023B6  C032  FFDA         	movff	i1CANsendMessage@data+1,fsr2h
 15979  0023BA  50DF               	movf	indf2,w,c
 15980  0023BC  010F               	movlb	15	; () banked
 15981  0023BE  6F36               	movwf	54,b	;volatile
 15982                           
 15983                           ; BSR set to: 15
 15984                           ;inc\CANlib.h: 435: TXB1D1 = data[1];
 15985  0023C0  EE20 F001          	lfsr	2,1
 15986  0023C4  5031               	movf	i1CANsendMessage@data,w,c
 15987  0023C6  26D9               	addwf	fsr2l,f,c
 15988  0023C8  5032               	movf	i1CANsendMessage@data+1,w,c
 15989  0023CA  22DA               	addwfc	fsr2h,f,c
 15990  0023CC  50DF               	movf	indf2,w,c
 15991  0023CE  010F               	movlb	15	; () banked
 15992  0023D0  6F37               	movwf	55,b	;volatile
 15993                           
 15994                           ; BSR set to: 15
 15995                           ;inc\CANlib.h: 436: TXB1D2 = data[2];
 15996  0023D2  EE20 F002          	lfsr	2,2
 15997  0023D6  5031               	movf	i1CANsendMessage@data,w,c
 15998  0023D8  26D9               	addwf	fsr2l,f,c
 15999  0023DA  5032               	movf	i1CANsendMessage@data+1,w,c
 16000  0023DC  22DA               	addwfc	fsr2h,f,c
 16001  0023DE  50DF               	movf	indf2,w,c
 16002  0023E0  010F               	movlb	15	; () banked
 16003  0023E2  6F38               	movwf	56,b	;volatile
 16004                           
 16005                           ; BSR set to: 15
 16006                           ;inc\CANlib.h: 437: TXB1D3 = data[3];
 16007  0023E4  EE20 F003          	lfsr	2,3
 16008  0023E8  5031               	movf	i1CANsendMessage@data,w,c
 16009  0023EA  26D9               	addwf	fsr2l,f,c
 16010  0023EC  5032               	movf	i1CANsendMessage@data+1,w,c
 16011  0023EE  22DA               	addwfc	fsr2h,f,c
 16012  0023F0  50DF               	movf	indf2,w,c
 16013  0023F2  010F               	movlb	15	; () banked
 16014  0023F4  6F39               	movwf	57,b	;volatile
 16015                           
 16016                           ; BSR set to: 15
 16017                           ;inc\CANlib.h: 438: TXB1D4 = data[4];
 16018  0023F6  EE20 F004          	lfsr	2,4
 16019  0023FA  5031               	movf	i1CANsendMessage@data,w,c
 16020  0023FC  26D9               	addwf	fsr2l,f,c
 16021  0023FE  5032               	movf	i1CANsendMessage@data+1,w,c
 16022  002400  22DA               	addwfc	fsr2h,f,c
 16023  002402  50DF               	movf	indf2,w,c
 16024  002404  010F               	movlb	15	; () banked
 16025  002406  6F3A               	movwf	58,b	;volatile
 16026                           
 16027                           ; BSR set to: 15
 16028                           ;inc\CANlib.h: 439: TXB1D5 = data[5];
 16029  002408  EE20 F005          	lfsr	2,5
 16030  00240C  5031               	movf	i1CANsendMessage@data,w,c
 16031  00240E  26D9               	addwf	fsr2l,f,c
 16032  002410  5032               	movf	i1CANsendMessage@data+1,w,c
 16033  002412  22DA               	addwfc	fsr2h,f,c
 16034  002414  50DF               	movf	indf2,w,c
 16035  002416  010F               	movlb	15	; () banked
 16036  002418  6F3B               	movwf	59,b	;volatile
 16037                           
 16038                           ; BSR set to: 15
 16039                           ;inc\CANlib.h: 440: TXB1D6 = data[6];
 16040  00241A  EE20 F006          	lfsr	2,6
 16041  00241E  5031               	movf	i1CANsendMessage@data,w,c
 16042  002420  26D9               	addwf	fsr2l,f,c
 16043  002422  5032               	movf	i1CANsendMessage@data+1,w,c
 16044  002424  22DA               	addwfc	fsr2h,f,c
 16045  002426  50DF               	movf	indf2,w,c
 16046  002428  010F               	movlb	15	; () banked
 16047  00242A  6F3C               	movwf	60,b	;volatile
 16048                           
 16049                           ; BSR set to: 15
 16050                           ;inc\CANlib.h: 441: TXB1D7 = data[7];
 16051  00242C  EE20 F007          	lfsr	2,7
 16052  002430  5031               	movf	i1CANsendMessage@data,w,c
 16053  002432  26D9               	addwf	fsr2l,f,c
 16054  002434  5032               	movf	i1CANsendMessage@data+1,w,c
 16055  002436  22DA               	addwfc	fsr2h,f,c
 16056  002438  50DF               	movf	indf2,w,c
 16057  00243A  010F               	movlb	15	; () banked
 16058  00243C  6F3D               	movwf	61,b	;volatile
 16059                           
 16060                           ; BSR set to: 15
 16061                           ;inc\CANlib.h: 443: TXB1CONbits.TXREQ = 0x01;
 16062  00243E  010F               	movlb	15	; () banked
 16063  002440  8730               	bsf	48,3,b	;volatile
 16064                           
 16065                           ; BSR set to: 15
 16066                           ;inc\CANlib.h: 445: return;
 16067  002442  0012               	return	
 16068  002444                     i1l378:
 16069                           
 16070                           ; BSR set to: 15
 16071                           ;inc\CANlib.h: 446: }
 16072                           ;inc\CANlib.h: 450: if (TXB2CONbits.TXREQ == 0)
 16073  002444  010F               	movlb	15	; () banked
 16074  002446  B720               	btfsc	32,3,b	;volatile
 16075  002448  0012               	return	
 16076                           
 16077                           ; BSR set to: 15
 16078                           ;inc\CANlib.h: 451: { TXB2DLC = dataLength;
 16079  00244A  C033  FF25         	movff	i1CANsendMessage@dataLength,3877	;volatile
 16080                           
 16081                           ;inc\CANlib.h: 453: if (0b01000000 & flags)
 16082  00244E  AC34               	btfss	i1CANsendMessage@flags,6,c
 16083  002450  D003               	goto	i1l393
 16084                           
 16085                           ; BSR set to: 15
 16086                           ;inc\CANlib.h: 454: TXB2DLCbits.TXRTR = 0x01;
 16087  002452  010F               	movlb	15	; () banked
 16088  002454  8D25               	bsf	37,6,b	;volatile
 16089  002456  D002               	goto	i1l394
 16090  002458                     i1l393:
 16091                           
 16092                           ; BSR set to: 15
 16093                           ;inc\CANlib.h: 455: else
 16094                           ;inc\CANlib.h: 456: TXB2DLCbits.TXRTR = 0x00;
 16095  002458  010F               	movlb	15	; () banked
 16096  00245A  9D25               	bcf	37,6,b	;volatile
 16097  00245C                     i1l394:
 16098                           
 16099                           ; BSR set to: 15
 16100                           ;inc\CANlib.h: 458: if (CAN_TX_FRAME_MASK & flags)
 16101  00245C  A634               	btfss	i1CANsendMessage@flags,3,c
 16102  00245E  D066               	goto	i1l395
 16103                           
 16104                           ; BSR set to: 15
 16105                           ;inc\CANlib.h: 459: {
 16106                           ;inc\CANlib.h: 460: tamp = identifier & 0x000000FF;
 16107  002460  502D               	movf	i1CANsendMessage@identifier,w,c
 16108  002462  6E39               	movwf	i1CANsendMessage@tamp,c
 16109  002464  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 16110  002466  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 16111  002468  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 16112                           
 16113                           ; BSR set to: 15
 16114                           ;inc\CANlib.h: 461: TXB2EIDL = (unsigned char) tamp;
 16115  00246A  C039  FF24         	movff	i1CANsendMessage@tamp,3876	;volatile
 16116                           
 16117                           ; BSR set to: 15
 16118                           ;inc\CANlib.h: 463: tamp = identifier & 0x0000FF00;
 16119  00246E  0E00               	movlw	0
 16120  002470  142D               	andwf	i1CANsendMessage@identifier,w,c
 16121  002472  6E39               	movwf	i1CANsendMessage@tamp,c
 16122  002474  0EFF               	movlw	255
 16123  002476  142E               	andwf	i1CANsendMessage@identifier+1,w,c
 16124  002478  6E3A               	movwf	i1CANsendMessage@tamp+1,c
 16125  00247A  0E00               	movlw	0
 16126  00247C  142F               	andwf	i1CANsendMessage@identifier+2,w,c
 16127  00247E  6E3B               	movwf	i1CANsendMessage@tamp+2,c
 16128  002480  0E00               	movlw	0
 16129  002482  1430               	andwf	i1CANsendMessage@identifier+3,w,c
 16130  002484  6E3C               	movwf	i1CANsendMessage@tamp+3,c
 16131                           
 16132                           ; BSR set to: 15
 16133                           ;inc\CANlib.h: 464: tamp = tamp >> 8;
 16134  002486  C039  F035         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 16135  00248A  C03A  F036         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 16136  00248E  C03B  F037         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 16137  002492  C03C  F038         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 16138  002496  C036  F035         	movff	??i1_CANsendMessage+1,??i1_CANsendMessage
 16139  00249A  C037  F036         	movff	??i1_CANsendMessage+2,??i1_CANsendMessage+1
 16140  00249E  C038  F037         	movff	??i1_CANsendMessage+3,??i1_CANsendMessage+2
 16141  0024A2  6A38               	clrf	??i1_CANsendMessage+3,c
 16142  0024A4  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 16143  0024A8  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 16144  0024AC  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 16145  0024B0  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 16146                           
 16147                           ; BSR set to: 15
 16148                           ;inc\CANlib.h: 465: TXB2EIDH = (unsigned char) tamp;
 16149  0024B4  C039  FF23         	movff	i1CANsendMessage@tamp,3875	;volatile
 16150                           
 16151                           ; BSR set to: 15
 16152                           ;inc\CANlib.h: 467: TXB2SIDL = 0x00;
 16153  0024B8  0E00               	movlw	0
 16154  0024BA  010F               	movlb	15	; () banked
 16155  0024BC  6F22               	movwf	34,b	;volatile
 16156                           
 16157                           ; BSR set to: 15
 16158                           ;inc\CANlib.h: 468: TXB2SIDLbits.EXIDE = 0x01;
 16159  0024BE  010F               	movlb	15	; () banked
 16160  0024C0  8722               	bsf	34,3,b	;volatile
 16161                           
 16162                           ; BSR set to: 15
 16163                           ;inc\CANlib.h: 470: if (identifier & 0x00010000)
 16164  0024C2  A02F               	btfss	i1CANsendMessage@identifier+2,0,c
 16165  0024C4  D002               	goto	i1l396
 16166                           
 16167                           ; BSR set to: 15
 16168                           ;inc\CANlib.h: 471: TXB2SIDLbits.EID16 = 0x01;
 16169  0024C6  010F               	movlb	15	; () banked
 16170  0024C8  8122               	bsf	34,0,b	;volatile
 16171  0024CA                     i1l396:
 16172                           
 16173                           ; BSR set to: 15
 16174                           ;inc\CANlib.h: 472: if (identifier & 0x00020000)
 16175  0024CA  A22F               	btfss	i1CANsendMessage@identifier+2,1,c
 16176  0024CC  D002               	goto	i1l397
 16177                           
 16178                           ; BSR set to: 15
 16179                           ;inc\CANlib.h: 473: TXB2SIDLbits.EID17 = 0x01;
 16180  0024CE  010F               	movlb	15	; () banked
 16181  0024D0  8322               	bsf	34,1,b	;volatile
 16182  0024D2                     i1l397:
 16183                           
 16184                           ; BSR set to: 15
 16185                           ;inc\CANlib.h: 474: if (identifier & 0x00040000)
 16186  0024D2  A42F               	btfss	i1CANsendMessage@identifier+2,2,c
 16187  0024D4  D002               	goto	i1l398
 16188                           
 16189                           ; BSR set to: 15
 16190                           ;inc\CANlib.h: 475: TXB2SIDLbits.SID0 = 0x01;
 16191  0024D6  010F               	movlb	15	; () banked
 16192  0024D8  8B22               	bsf	34,5,b	;volatile
 16193  0024DA                     i1l398:
 16194                           
 16195                           ; BSR set to: 15
 16196                           ;inc\CANlib.h: 476: if (identifier & 0x00080000)
 16197  0024DA  A62F               	btfss	i1CANsendMessage@identifier+2,3,c
 16198  0024DC  D002               	goto	i1l399
 16199                           
 16200                           ; BSR set to: 15
 16201                           ;inc\CANlib.h: 477: TXB2SIDLbits.SID1 = 0x01;
 16202  0024DE  010F               	movlb	15	; () banked
 16203  0024E0  8D22               	bsf	34,6,b	;volatile
 16204  0024E2                     i1l399:
 16205                           
 16206                           ; BSR set to: 15
 16207                           ;inc\CANlib.h: 478: if (identifier & 0x00100000)
 16208  0024E2  A82F               	btfss	i1CANsendMessage@identifier+2,4,c
 16209  0024E4  D002               	goto	i1l8506
 16210                           
 16211                           ; BSR set to: 15
 16212                           ;inc\CANlib.h: 479: TXB2SIDLbits.SID2 = 0x01;
 16213  0024E6  010F               	movlb	15	; () banked
 16214  0024E8  8F22               	bsf	34,7,b	;volatile
 16215  0024EA                     i1l8506:
 16216                           
 16217                           ; BSR set to: 15
 16218                           ;inc\CANlib.h: 481: tamp = (identifier >> 21);
 16219  0024EA  C02D  F035         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 16220  0024EE  C02E  F036         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 16221  0024F2  C02F  F037         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 16222  0024F6  C030  F038         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 16223  0024FA  0E16               	movlw	22
 16224  0024FC  D005               	goto	i1u1133_20
 16225  0024FE                     i1u1133_25:
 16226  0024FE  90D8               	bcf	status,0,c
 16227  002500  3238               	rrcf	??i1_CANsendMessage+3,f,c
 16228  002502  3237               	rrcf	??i1_CANsendMessage+2,f,c
 16229  002504  3236               	rrcf	??i1_CANsendMessage+1,f,c
 16230  002506  3235               	rrcf	??i1_CANsendMessage,f,c
 16231  002508                     i1u1133_20:
 16232  002508  2EE8               	decfsz	wreg,f,c
 16233  00250A  D7F9               	goto	i1u1133_25
 16234  00250C  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 16235  002510  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 16236  002514  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 16237  002518  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 16238                           
 16239                           ; BSR set to: 15
 16240                           ;inc\CANlib.h: 482: tamp = tamp & 0x000000FF;
 16241  00251C  5039               	movf	i1CANsendMessage@tamp,w,c
 16242  00251E  6E39               	movwf	i1CANsendMessage@tamp,c
 16243  002520  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 16244  002522  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 16245  002524  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 16246                           
 16247                           ; BSR set to: 15
 16248                           ;inc\CANlib.h: 483: TXB2SIDH = (unsigned char) tamp;
 16249  002526  C039  FF21         	movff	i1CANsendMessage@tamp,3873	;volatile
 16250                           
 16251                           ;inc\CANlib.h: 484: }
 16252  00252A  D04D               	goto	i1l8526
 16253  00252C                     i1l395:
 16254                           
 16255                           ; BSR set to: 15
 16256                           ;inc\CANlib.h: 486: else
 16257                           ;inc\CANlib.h: 488: {
 16258                           ;inc\CANlib.h: 489: TXB2SIDLbits.EXIDE = 0x00;
 16259  00252C  010F               	movlb	15	; () banked
 16260  00252E  9722               	bcf	34,3,b	;volatile
 16261                           
 16262                           ; BSR set to: 15
 16263                           ;inc\CANlib.h: 491: tamp = (identifier >> 3);
 16264  002530  C02D  F035         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 16265  002534  C02E  F036         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 16266  002538  C02F  F037         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 16267  00253C  C030  F038         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 16268  002540  0E04               	movlw	4
 16269  002542  D005               	goto	i1u1134_20
 16270  002544                     i1u1134_25:
 16271  002544  90D8               	bcf	status,0,c
 16272  002546  3238               	rrcf	??i1_CANsendMessage+3,f,c
 16273  002548  3237               	rrcf	??i1_CANsendMessage+2,f,c
 16274  00254A  3236               	rrcf	??i1_CANsendMessage+1,f,c
 16275  00254C  3235               	rrcf	??i1_CANsendMessage,f,c
 16276  00254E                     i1u1134_20:
 16277  00254E  2EE8               	decfsz	wreg,f,c
 16278  002550  D7F9               	goto	i1u1134_25
 16279  002552  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 16280  002556  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 16281  00255A  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 16282  00255E  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 16283                           
 16284                           ; BSR set to: 15
 16285                           ;inc\CANlib.h: 492: tamp = tamp & 0x000000FF;
 16286  002562  5039               	movf	i1CANsendMessage@tamp,w,c
 16287  002564  6E39               	movwf	i1CANsendMessage@tamp,c
 16288  002566  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 16289  002568  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 16290  00256A  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 16291                           
 16292                           ; BSR set to: 15
 16293                           ;inc\CANlib.h: 493: TXB2SIDH = (unsigned char) tamp;
 16294  00256C  C039  FF21         	movff	i1CANsendMessage@tamp,3873	;volatile
 16295                           
 16296                           ; BSR set to: 15
 16297                           ;inc\CANlib.h: 495: tamp = identifier & 0x00000007;
 16298  002570  0E07               	movlw	7
 16299  002572  142D               	andwf	i1CANsendMessage@identifier,w,c
 16300  002574  6E39               	movwf	i1CANsendMessage@tamp,c
 16301  002576  0E00               	movlw	0
 16302  002578  142E               	andwf	i1CANsendMessage@identifier+1,w,c
 16303  00257A  6E3A               	movwf	i1CANsendMessage@tamp+1,c
 16304  00257C  0E00               	movlw	0
 16305  00257E  142F               	andwf	i1CANsendMessage@identifier+2,w,c
 16306  002580  6E3B               	movwf	i1CANsendMessage@tamp+2,c
 16307  002582  0E00               	movlw	0
 16308  002584  1430               	andwf	i1CANsendMessage@identifier+3,w,c
 16309  002586  6E3C               	movwf	i1CANsendMessage@tamp+3,c
 16310                           
 16311                           ; BSR set to: 15
 16312                           ;inc\CANlib.h: 496: tamp = tamp << 5;
 16313  002588  C039  F035         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 16314  00258C  C03A  F036         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 16315  002590  C03B  F037         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 16316  002594  C03C  F038         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 16317  002598  0E05               	movlw	5
 16318  00259A                     i1u1135_25:
 16319  00259A  90D8               	bcf	status,0,c
 16320  00259C  3635               	rlcf	??i1_CANsendMessage,f,c
 16321  00259E  3636               	rlcf	??i1_CANsendMessage+1,f,c
 16322  0025A0  3637               	rlcf	??i1_CANsendMessage+2,f,c
 16323  0025A2  3638               	rlcf	??i1_CANsendMessage+3,f,c
 16324  0025A4  2EE8               	decfsz	wreg,f,c
 16325  0025A6  D7F9               	goto	i1u1135_25
 16326  0025A8  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 16327  0025AC  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 16328  0025B0  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 16329  0025B4  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 16330                           
 16331                           ; BSR set to: 15
 16332                           ;inc\CANlib.h: 497: TXB2SIDL = TXB2SIDL & 0b00011111;
 16333  0025B8  010F               	movlb	15	; () banked
 16334  0025BA  5122               	movf	34,w,b	;volatile
 16335  0025BC  0B1F               	andlw	31
 16336  0025BE  010F               	movlb	15	; () banked
 16337  0025C0  6F22               	movwf	34,b	;volatile
 16338                           
 16339                           ; BSR set to: 15
 16340                           ;inc\CANlib.h: 498: TXB2SIDL = (unsigned char) tamp;
 16341  0025C2  C039  FF22         	movff	i1CANsendMessage@tamp,3874	;volatile
 16342  0025C6                     i1l8526:
 16343                           
 16344                           ; BSR set to: 15
 16345                           ;inc\CANlib.h: 499: }
 16346                           ;inc\CANlib.h: 501: if (0b00000001 & flags)
 16347  0025C6  A034               	btfss	i1CANsendMessage@flags,0,c
 16348  0025C8  D003               	goto	i1l402
 16349                           
 16350                           ; BSR set to: 15
 16351                           ;inc\CANlib.h: 502: TXB2CONbits.TXPRI0 = 0x01;
 16352  0025CA  010F               	movlb	15	; () banked
 16353  0025CC  8120               	bsf	32,0,b	;volatile
 16354  0025CE  D002               	goto	i1l403
 16355  0025D0                     i1l402:
 16356                           
 16357                           ; BSR set to: 15
 16358                           ;inc\CANlib.h: 503: else
 16359                           ;inc\CANlib.h: 504: TXB2CONbits.TXPRI0 = 0x00;
 16360  0025D0  010F               	movlb	15	; () banked
 16361  0025D2  9120               	bcf	32,0,b	;volatile
 16362  0025D4                     i1l403:
 16363                           
 16364                           ; BSR set to: 15
 16365                           ;inc\CANlib.h: 505: if (0b00000010 & flags)
 16366  0025D4  A234               	btfss	i1CANsendMessage@flags,1,c
 16367  0025D6  D003               	goto	i1l404
 16368                           
 16369                           ; BSR set to: 15
 16370                           ;inc\CANlib.h: 506: TXB2CONbits.TXPRI1 = 0x01;
 16371  0025D8  010F               	movlb	15	; () banked
 16372  0025DA  8320               	bsf	32,1,b	;volatile
 16373  0025DC  D002               	goto	i1l8532
 16374  0025DE                     i1l404:
 16375                           
 16376                           ; BSR set to: 15
 16377                           ;inc\CANlib.h: 507: else
 16378                           ;inc\CANlib.h: 508: TXB2CONbits.TXPRI1 = 0x00;
 16379  0025DE  010F               	movlb	15	; () banked
 16380  0025E0  9320               	bcf	32,1,b	;volatile
 16381  0025E2                     i1l8532:
 16382                           
 16383                           ; BSR set to: 15
 16384                           ;inc\CANlib.h: 510: TXB2D0 = data[0];
 16385  0025E2  C031  FFD9         	movff	i1CANsendMessage@data,fsr2l
 16386  0025E6  C032  FFDA         	movff	i1CANsendMessage@data+1,fsr2h
 16387  0025EA  50DF               	movf	indf2,w,c
 16388  0025EC  010F               	movlb	15	; () banked
 16389  0025EE  6F26               	movwf	38,b	;volatile
 16390                           
 16391                           ; BSR set to: 15
 16392                           ;inc\CANlib.h: 511: TXB2D1 = data[1];
 16393  0025F0  EE20 F001          	lfsr	2,1
 16394  0025F4  5031               	movf	i1CANsendMessage@data,w,c
 16395  0025F6  26D9               	addwf	fsr2l,f,c
 16396  0025F8  5032               	movf	i1CANsendMessage@data+1,w,c
 16397  0025FA  22DA               	addwfc	fsr2h,f,c
 16398  0025FC  50DF               	movf	indf2,w,c
 16399  0025FE  010F               	movlb	15	; () banked
 16400  002600  6F27               	movwf	39,b	;volatile
 16401                           
 16402                           ; BSR set to: 15
 16403                           ;inc\CANlib.h: 512: TXB2D2 = data[2];
 16404  002602  EE20 F002          	lfsr	2,2
 16405  002606  5031               	movf	i1CANsendMessage@data,w,c
 16406  002608  26D9               	addwf	fsr2l,f,c
 16407  00260A  5032               	movf	i1CANsendMessage@data+1,w,c
 16408  00260C  22DA               	addwfc	fsr2h,f,c
 16409  00260E  50DF               	movf	indf2,w,c
 16410  002610  010F               	movlb	15	; () banked
 16411  002612  6F28               	movwf	40,b	;volatile
 16412                           
 16413                           ; BSR set to: 15
 16414                           ;inc\CANlib.h: 513: TXB2D3 = data[3];
 16415  002614  EE20 F003          	lfsr	2,3
 16416  002618  5031               	movf	i1CANsendMessage@data,w,c
 16417  00261A  26D9               	addwf	fsr2l,f,c
 16418  00261C  5032               	movf	i1CANsendMessage@data+1,w,c
 16419  00261E  22DA               	addwfc	fsr2h,f,c
 16420  002620  50DF               	movf	indf2,w,c
 16421  002622  010F               	movlb	15	; () banked
 16422  002624  6F29               	movwf	41,b	;volatile
 16423                           
 16424                           ; BSR set to: 15
 16425                           ;inc\CANlib.h: 514: TXB2D4 = data[4];
 16426  002626  EE20 F004          	lfsr	2,4
 16427  00262A  5031               	movf	i1CANsendMessage@data,w,c
 16428  00262C  26D9               	addwf	fsr2l,f,c
 16429  00262E  5032               	movf	i1CANsendMessage@data+1,w,c
 16430  002630  22DA               	addwfc	fsr2h,f,c
 16431  002632  50DF               	movf	indf2,w,c
 16432  002634  010F               	movlb	15	; () banked
 16433  002636  6F2A               	movwf	42,b	;volatile
 16434                           
 16435                           ; BSR set to: 15
 16436                           ;inc\CANlib.h: 515: TXB2D5 = data[5];
 16437  002638  EE20 F005          	lfsr	2,5
 16438  00263C  5031               	movf	i1CANsendMessage@data,w,c
 16439  00263E  26D9               	addwf	fsr2l,f,c
 16440  002640  5032               	movf	i1CANsendMessage@data+1,w,c
 16441  002642  22DA               	addwfc	fsr2h,f,c
 16442  002644  50DF               	movf	indf2,w,c
 16443  002646  010F               	movlb	15	; () banked
 16444  002648  6F2B               	movwf	43,b	;volatile
 16445                           
 16446                           ; BSR set to: 15
 16447                           ;inc\CANlib.h: 516: TXB2D6 = data[6];
 16448  00264A  EE20 F006          	lfsr	2,6
 16449  00264E  5031               	movf	i1CANsendMessage@data,w,c
 16450  002650  26D9               	addwf	fsr2l,f,c
 16451  002652  5032               	movf	i1CANsendMessage@data+1,w,c
 16452  002654  22DA               	addwfc	fsr2h,f,c
 16453  002656  50DF               	movf	indf2,w,c
 16454  002658  010F               	movlb	15	; () banked
 16455  00265A  6F2C               	movwf	44,b	;volatile
 16456                           
 16457                           ; BSR set to: 15
 16458                           ;inc\CANlib.h: 517: TXB2D7 = data[7];
 16459  00265C  EE20 F007          	lfsr	2,7
 16460  002660  5031               	movf	i1CANsendMessage@data,w,c
 16461  002662  26D9               	addwf	fsr2l,f,c
 16462  002664  5032               	movf	i1CANsendMessage@data+1,w,c
 16463  002666  22DA               	addwfc	fsr2h,f,c
 16464  002668  50DF               	movf	indf2,w,c
 16465  00266A  010F               	movlb	15	; () banked
 16466  00266C  6F2D               	movwf	45,b	;volatile
 16467                           
 16468                           ; BSR set to: 15
 16469                           ;inc\CANlib.h: 519: TXB2CONbits.TXREQ = 0x01;
 16470  00266E  010F               	movlb	15	; () banked
 16471  002670  8720               	bsf	32,3,b	;volatile
 16472                           
 16473                           ; BSR set to: 15
 16474                           ;inc\CANlib.h: 521: return;
 16475  002672  0012               	return	
 16476  002674                     __end_ofi1_CANsendMessage:
 16477                           	opt stack 0
 16478                           pclatu	equ	0xFFB
 16479                           pclath	equ	0xFFA
 16480                           tblptru	equ	0xFF8
 16481                           tblptrh	equ	0xFF7
 16482                           tblptrl	equ	0xFF6
 16483                           tablat	equ	0xFF5
 16484                           prodh	equ	0xFF4
 16485                           prodl	equ	0xFF3
 16486                           intcon	equ	0xFF2
 16487                           intcon2	equ	0xFF1
 16488                           postinc0	equ	0xFEE
 16489                           fsr0h	equ	0xFEA
 16490                           fsr0l	equ	0xFE9
 16491                           wreg	equ	0xFE8
 16492                           indf1	equ	0xFE7
 16493                           postdec1	equ	0xFE5
 16494                           fsr1h	equ	0xFE2
 16495                           fsr1l	equ	0xFE1
 16496                           bsr	equ	0xFE0
 16497                           indf2	equ	0xFDF
 16498                           postinc2	equ	0xFDE
 16499                           postdec2	equ	0xFDD
 16500                           plusw2	equ	0xFDB
 16501                           fsr2h	equ	0xFDA
 16502                           fsr2l	equ	0xFD9
 16503                           status	equ	0xFD8
 16504                           
 16505 ;; *************** function i1_CANisTxReady *****************
 16506 ;; Defined at:
 16507 ;;		line 1155 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 16508 ;; Parameters:    Size  Location     Type
 16509 ;;		None
 16510 ;; Auto vars:     Size  Location     Type
 16511 ;;		None
 16512 ;; Return value:  Size  Location     Type
 16513 ;;                  1    wreg      unsigned char 
 16514 ;; Registers used:
 16515 ;;		wreg, status,2
 16516 ;; Tracked objects:
 16517 ;;		On entry : 0/0
 16518 ;;		On exit  : 0/0
 16519 ;;		Unchanged: 0/0
 16520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16522 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16524 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16525 ;;Total ram usage:        1 bytes
 16526 ;; Hardware stack levels used:    1
 16527 ;; Hardware stack levels required when called:    2
 16528 ;; This function calls:
 16529 ;;		Nothing
 16530 ;; This function is called by:
 16531 ;;		_ISR_Bassa
 16532 ;; This function uses a non-reentrant model
 16533 ;;
 16534                           
 16535                           	psect	text37
 16536  0066BC                     __ptext37:
 16537                           	opt stack 0
 16538  0066BC                     i1_CANisTxReady:
 16539                           	opt stack 21
 16540                           
 16541                           ;inc\CANlib.h: 1157: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 16542                           
 16543                           ; BSR set to: 15
 16544                           ;incstack = 0
 16545  0066BC  0E01               	movlw	1
 16546  0066BE  6E2D               	movwf	i1_CANisTxReady$2845,c
 16547  0066C0  010F               	movlb	15	; () banked
 16548  0066C2  A740               	btfss	64,3,b	;volatile
 16549  0066C4  D008               	goto	i1l556
 16550                           
 16551                           ; BSR set to: 15
 16552  0066C6  010F               	movlb	15	; () banked
 16553  0066C8  A730               	btfss	48,3,b	;volatile
 16554  0066CA  D005               	goto	i1l556
 16555                           
 16556                           ; BSR set to: 15
 16557  0066CC  010F               	movlb	15	; () banked
 16558  0066CE  A720               	btfss	32,3,b	;volatile
 16559  0066D0  D002               	goto	i1l556
 16560                           
 16561                           ; BSR set to: 15
 16562  0066D2  0E00               	movlw	0
 16563  0066D4  6E2D               	movwf	i1_CANisTxReady$2845,c
 16564  0066D6                     i1l556:
 16565                           
 16566                           ; BSR set to: 15
 16567  0066D6  502D               	movf	i1_CANisTxReady$2845,w,c
 16568  0066D8  0012               	return	
 16569  0066DA                     __end_ofi1_CANisTxReady:
 16570                           	opt stack 0
 16571                           pclatu	equ	0xFFB
 16572                           pclath	equ	0xFFA
 16573                           tblptru	equ	0xFF8
 16574                           tblptrh	equ	0xFF7
 16575                           tblptrl	equ	0xFF6
 16576                           tablat	equ	0xFF5
 16577                           prodh	equ	0xFF4
 16578                           prodl	equ	0xFF3
 16579                           intcon	equ	0xFF2
 16580                           intcon2	equ	0xFF1
 16581                           postinc0	equ	0xFEE
 16582                           fsr0h	equ	0xFEA
 16583                           fsr0l	equ	0xFE9
 16584                           wreg	equ	0xFE8
 16585                           indf1	equ	0xFE7
 16586                           postdec1	equ	0xFE5
 16587                           fsr1h	equ	0xFE2
 16588                           fsr1l	equ	0xFE1
 16589                           bsr	equ	0xFE0
 16590                           indf2	equ	0xFDF
 16591                           postinc2	equ	0xFDE
 16592                           postdec2	equ	0xFDD
 16593                           plusw2	equ	0xFDB
 16594                           fsr2h	equ	0xFDA
 16595                           fsr2l	equ	0xFD9
 16596                           status	equ	0xFD8
 16597                           
 16598 ;; *************** function _CANreceiveMessage *****************
 16599 ;; Defined at:
 16600 ;;		line 529 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 16601 ;; Parameters:    Size  Location     Type
 16602 ;;  msg             2    0[COMRAM] PTR struct .
 16603 ;;		 -> msg(15), 
 16604 ;; Auto vars:     Size  Location     Type
 16605 ;;  tamp            1   11[COMRAM] unsigned char 
 16606 ;;  error           1   10[COMRAM] unsigned char 
 16607 ;; Return value:  Size  Location     Type
 16608 ;;                  1    wreg      unsigned char 
 16609 ;; Registers used:
 16610 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16611 ;; Tracked objects:
 16612 ;;		On entry : 0/0
 16613 ;;		On exit  : 0/0
 16614 ;;		Unchanged: 0/0
 16615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16616 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16617 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16618 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16619 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16620 ;;Total ram usage:       12 bytes
 16621 ;; Hardware stack levels used:    1
 16622 ;; Hardware stack levels required when called:    2
 16623 ;; This function calls:
 16624 ;;		Nothing
 16625 ;; This function is called by:
 16626 ;;		_ISR_Bassa
 16627 ;; This function uses a non-reentrant model
 16628 ;;
 16629                           
 16630                           	psect	text38
 16631  002BFE                     __ptext38:
 16632                           	opt stack 0
 16633  002BFE                     _CANreceiveMessage:
 16634                           	opt stack 21
 16635                           
 16636                           ;inc\CANlib.h: 531: BYTE tamp;
 16637                           ;inc\CANlib.h: 532: BYTE error = 0;
 16638                           
 16639                           ; BSR set to: 15
 16640                           ;incstack = 0
 16641  002BFE  0E00               	movlw	0
 16642  002C00  6E37               	movwf	CANreceiveMessage@error,c
 16643                           
 16644                           ;inc\CANlib.h: 534: if (COMSTATbits.RXB0OVFL == 0x01)
 16645  002C02  BE74               	btfsc	3956,7,c	;volatile
 16646                           
 16647                           ;inc\CANlib.h: 535: error |= CAN_RX_BUFFER_1_OVFL;
 16648  002C04  8037               	bsf	CANreceiveMessage@error,0,c
 16649                           
 16650                           ;inc\CANlib.h: 537: if (COMSTATbits.RXB1OVFL == 0x01)
 16651  002C06  BC74               	btfsc	3956,6,c	;volatile
 16652                           
 16653                           ;inc\CANlib.h: 538: error |= CAN_RX_BUFFER_2_OVFL;
 16654  002C08  8237               	bsf	CANreceiveMessage@error,1,c
 16655                           
 16656                           ;inc\CANlib.h: 541: if (RXB1CONbits.RXFUL ==0x01)
 16657  002C0A  010F               	movlb	15	; () banked
 16658  002C0C  AF50               	btfss	80,7,b	;volatile
 16659  002C0E  D143               	goto	i1l410
 16660                           
 16661                           ; BSR set to: 15
 16662                           ;inc\CANlib.h: 542: {
 16663                           ;inc\CANlib.h: 543: msg->identifier = 0;
 16664  002C10  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16665  002C14  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16666  002C18  6ADE               	clrf	postinc2,c
 16667  002C1A  6ADE               	clrf	postinc2,c
 16668  002C1C  6ADE               	clrf	postinc2,c
 16669  002C1E  6ADD               	clrf	postdec2,c
 16670                           
 16671                           ; BSR set to: 15
 16672                           ;inc\CANlib.h: 544: msg->data[0] =RXB1D0;
 16673  002C20  EE20 F004          	lfsr	2,4
 16674  002C24  502D               	movf	CANreceiveMessage@msg,w,c
 16675  002C26  26D9               	addwf	fsr2l,f,c
 16676  002C28  502E               	movf	CANreceiveMessage@msg+1,w,c
 16677  002C2A  22DA               	addwfc	fsr2h,f,c
 16678  002C2C  CF56 FFDF          	movff	3926,indf2	;volatile
 16679                           
 16680                           ; BSR set to: 15
 16681                           ;inc\CANlib.h: 545: msg->data[1] =RXB1D1;
 16682  002C30  EE20 F005          	lfsr	2,5
 16683  002C34  502D               	movf	CANreceiveMessage@msg,w,c
 16684  002C36  26D9               	addwf	fsr2l,f,c
 16685  002C38  502E               	movf	CANreceiveMessage@msg+1,w,c
 16686  002C3A  22DA               	addwfc	fsr2h,f,c
 16687  002C3C  CF57 FFDF          	movff	3927,indf2	;volatile
 16688                           
 16689                           ; BSR set to: 15
 16690                           ;inc\CANlib.h: 546: msg->data[2] =RXB1D2;
 16691  002C40  EE20 F006          	lfsr	2,6
 16692  002C44  502D               	movf	CANreceiveMessage@msg,w,c
 16693  002C46  26D9               	addwf	fsr2l,f,c
 16694  002C48  502E               	movf	CANreceiveMessage@msg+1,w,c
 16695  002C4A  22DA               	addwfc	fsr2h,f,c
 16696  002C4C  CF58 FFDF          	movff	3928,indf2	;volatile
 16697                           
 16698                           ; BSR set to: 15
 16699                           ;inc\CANlib.h: 547: msg->data[3] =RXB1D3;
 16700  002C50  EE20 F007          	lfsr	2,7
 16701  002C54  502D               	movf	CANreceiveMessage@msg,w,c
 16702  002C56  26D9               	addwf	fsr2l,f,c
 16703  002C58  502E               	movf	CANreceiveMessage@msg+1,w,c
 16704  002C5A  22DA               	addwfc	fsr2h,f,c
 16705  002C5C  CF59 FFDF          	movff	3929,indf2	;volatile
 16706                           
 16707                           ; BSR set to: 15
 16708                           ;inc\CANlib.h: 548: msg->data[4] =RXB1D4;
 16709  002C60  EE20 F008          	lfsr	2,8
 16710  002C64  502D               	movf	CANreceiveMessage@msg,w,c
 16711  002C66  26D9               	addwf	fsr2l,f,c
 16712  002C68  502E               	movf	CANreceiveMessage@msg+1,w,c
 16713  002C6A  22DA               	addwfc	fsr2h,f,c
 16714  002C6C  CF5A FFDF          	movff	3930,indf2	;volatile
 16715                           
 16716                           ; BSR set to: 15
 16717                           ;inc\CANlib.h: 549: msg->data[5] =RXB1D5;
 16718  002C70  EE20 F009          	lfsr	2,9
 16719  002C74  502D               	movf	CANreceiveMessage@msg,w,c
 16720  002C76  26D9               	addwf	fsr2l,f,c
 16721  002C78  502E               	movf	CANreceiveMessage@msg+1,w,c
 16722  002C7A  22DA               	addwfc	fsr2h,f,c
 16723  002C7C  CF5B FFDF          	movff	3931,indf2	;volatile
 16724                           
 16725                           ; BSR set to: 15
 16726                           ;inc\CANlib.h: 550: msg->data[6] =RXB1D6;
 16727  002C80  EE20 F00A          	lfsr	2,10
 16728  002C84  502D               	movf	CANreceiveMessage@msg,w,c
 16729  002C86  26D9               	addwf	fsr2l,f,c
 16730  002C88  502E               	movf	CANreceiveMessage@msg+1,w,c
 16731  002C8A  22DA               	addwfc	fsr2h,f,c
 16732  002C8C  CF5C FFDF          	movff	3932,indf2	;volatile
 16733                           
 16734                           ; BSR set to: 15
 16735                           ;inc\CANlib.h: 551: msg->data[7] =RXB1D7;
 16736  002C90  EE20 F00B          	lfsr	2,11
 16737  002C94  502D               	movf	CANreceiveMessage@msg,w,c
 16738  002C96  26D9               	addwf	fsr2l,f,c
 16739  002C98  502E               	movf	CANreceiveMessage@msg+1,w,c
 16740  002C9A  22DA               	addwfc	fsr2h,f,c
 16741  002C9C  CF5D FFDF          	movff	3933,indf2	;volatile
 16742                           
 16743                           ; BSR set to: 15
 16744                           ;inc\CANlib.h: 553: msg->RTR = RXB1DLCbits.RXRTR;
 16745  002CA0  EE20 F00E          	lfsr	2,14
 16746  002CA4  502D               	movf	CANreceiveMessage@msg,w,c
 16747  002CA6  26D9               	addwf	fsr2l,f,c
 16748  002CA8  502E               	movf	CANreceiveMessage@msg+1,w,c
 16749  002CAA  22DA               	addwfc	fsr2h,f,c
 16750  002CAC  010F               	movlb	15	; () banked
 16751  002CAE  AD55               	btfss	85,6,b	;volatile
 16752  002CB0  D002               	goto	i1u733_20
 16753  002CB2  0E01               	movlw	1
 16754  002CB4  D001               	goto	i1u733_26
 16755  002CB6                     i1u733_20:
 16756  002CB6  0E00               	movlw	0
 16757  002CB8                     i1u733_26:
 16758  002CB8  6EDF               	movwf	indf2,c
 16759                           
 16760                           ; BSR set to: 15
 16761                           ;inc\CANlib.h: 555: msg->length = RXB1DLC & 0x0F;
 16762  002CBA  EE20 F00D          	lfsr	2,13
 16763  002CBE  502D               	movf	CANreceiveMessage@msg,w,c
 16764  002CC0  26D9               	addwf	fsr2l,f,c
 16765  002CC2  502E               	movf	CANreceiveMessage@msg+1,w,c
 16766  002CC4  22DA               	addwfc	fsr2h,f,c
 16767  002CC6  010F               	movlb	15	; () banked
 16768  002CC8  5155               	movf	85,w,b	;volatile
 16769  002CCA  0B0F               	andlw	15
 16770  002CCC  6EDF               	movwf	indf2,c
 16771                           
 16772                           ; BSR set to: 15
 16773                           ;inc\CANlib.h: 557: msg->type = RXB1SIDLbits.EXID;
 16774  002CCE  EE20 F00C          	lfsr	2,12
 16775  002CD2  502D               	movf	CANreceiveMessage@msg,w,c
 16776  002CD4  26D9               	addwf	fsr2l,f,c
 16777  002CD6  502E               	movf	CANreceiveMessage@msg+1,w,c
 16778  002CD8  22DA               	addwfc	fsr2h,f,c
 16779  002CDA  010F               	movlb	15	; () banked
 16780  002CDC  A752               	btfss	82,3,b	;volatile
 16781  002CDE  D002               	goto	i1u734_20
 16782  002CE0  0E01               	movlw	1
 16783  002CE2  D001               	goto	i1u734_26
 16784  002CE4                     i1u734_20:
 16785  002CE4  0E00               	movlw	0
 16786  002CE6                     i1u734_26:
 16787  002CE6  6EDF               	movwf	indf2,c
 16788                           
 16789                           ; BSR set to: 15
 16790                           ;inc\CANlib.h: 559: if (RXB1SIDLbits.EXID == 0)
 16791  002CE8  010F               	movlb	15	; () banked
 16792  002CEA  B752               	btfsc	82,3,b	;volatile
 16793  002CEC  D044               	goto	i1l5930
 16794                           
 16795                           ; BSR set to: 15
 16796                           ;inc\CANlib.h: 560: {
 16797                           ;inc\CANlib.h: 561: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 16798  002CEE  CF51 F02F          	movff	3921,??_CANreceiveMessage	;volatile
 16799  002CF2  6A30               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16800  002CF4  6A31               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 16801  002CF6  6A32               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 16802  002CF8  0E03               	movlw	3
 16803  002CFA                     i1u736_25:
 16804  002CFA  90D8               	bcf	status,0,c
 16805  002CFC  362F               	rlcf	??_CANreceiveMessage,f,c
 16806  002CFE  3630               	rlcf	??_CANreceiveMessage+1,f,c
 16807  002D00  3631               	rlcf	??_CANreceiveMessage+2,f,c
 16808  002D02  3632               	rlcf	??_CANreceiveMessage+3,f,c
 16809  002D04  2EE8               	decfsz	wreg,f,c
 16810  002D06  D7F9               	goto	i1u736_25
 16811  002D08  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16812  002D0C  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16813  002D10  C02F  FFDE         	movff	??_CANreceiveMessage,postinc2
 16814  002D14  C030  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 16815  002D18  C031  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 16816  002D1C  C032  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 16817                           
 16818                           ; BSR set to: 15
 16819                           ;inc\CANlib.h: 562: tamp = (RXB1SIDL >> 5 ) & 0x07;
 16820  002D20  010F               	movlb	15	; () banked
 16821  002D22  3952               	swapf	82,w,b	;volatile
 16822  002D24  42E8               	rrncf	wreg,f,c
 16823  002D26  0B07               	andlw	7
 16824  002D28  0B07               	andlw	7
 16825  002D2A  6E38               	movwf	CANreceiveMessage@tamp,c
 16826                           
 16827                           ; BSR set to: 15
 16828                           ;inc\CANlib.h: 563: msg->identifier = msg->identifier + tamp;
 16829  002D2C  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16830  002D30  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16831  002D34  CFDE F02F          	movff	postinc2,??_CANreceiveMessage
 16832  002D38  CFDE F030          	movff	postinc2,??_CANreceiveMessage+1
 16833  002D3C  CFDE F031          	movff	postinc2,??_CANreceiveMessage+2
 16834  002D40  CFDE F032          	movff	postinc2,??_CANreceiveMessage+3
 16835  002D44  5038               	movf	CANreceiveMessage@tamp,w,c
 16836  002D46  242F               	addwf	??_CANreceiveMessage,w,c
 16837  002D48  6E33               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 16838  002D4A  0E00               	movlw	0
 16839  002D4C  2030               	addwfc	??_CANreceiveMessage+1,w,c
 16840  002D4E  6E34               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 16841  002D50  0E00               	movlw	0
 16842  002D52  2031               	addwfc	??_CANreceiveMessage+2,w,c
 16843  002D54  6E35               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 16844  002D56  0E00               	movlw	0
 16845  002D58  2032               	addwfc	??_CANreceiveMessage+3,w,c
 16846  002D5A  6E36               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 16847  002D5C  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16848  002D60  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16849  002D64  C033  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 16850  002D68  C034  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 16851  002D6C  C035  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 16852  002D70  C036  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 16853                           
 16854                           ;inc\CANlib.h: 564: }
 16855  002D74  D08D               	goto	i1l5956
 16856  002D76                     i1l5930:
 16857                           
 16858                           ; BSR set to: 15
 16859                           ;inc\CANlib.h: 565: else
 16860                           ;inc\CANlib.h: 566: {
 16861                           ;inc\CANlib.h: 567: msg->identifier = (unsigned long) RXB1EIDL;
 16862  002D76  CF54 F02F          	movff	3924,??_CANreceiveMessage	;volatile
 16863  002D7A  6A30               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16864  002D7C  6A31               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 16865  002D7E  6A32               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 16866  002D80  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16867  002D84  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16868  002D88  C02F  FFDE         	movff	??_CANreceiveMessage,postinc2
 16869  002D8C  C030  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 16870  002D90  C031  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 16871  002D94  C032  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 16872                           
 16873                           ; BSR set to: 15
 16874                           ;inc\CANlib.h: 568: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 16875  002D98  CF53 F02F          	movff	3923,??_CANreceiveMessage	;volatile
 16876  002D9C  6A30               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16877  002D9E  6A31               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 16878  002DA0  6A32               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 16879  002DA2  C031  F032         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 16880  002DA6  C030  F031         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 16881  002DAA  C02F  F030         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 16882  002DAE  6A2F               	clrf	??_CANreceiveMessage,c
 16883  002DB0  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16884  002DB4  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16885  002DB8  502F               	movf	??_CANreceiveMessage,w,c
 16886  002DBA  26DE               	addwf	postinc2,f,c
 16887  002DBC  5030               	movf	??_CANreceiveMessage+1,w,c
 16888  002DBE  22DE               	addwfc	postinc2,f,c
 16889  002DC0  5031               	movf	??_CANreceiveMessage+2,w,c
 16890  002DC2  22DE               	addwfc	postinc2,f,c
 16891  002DC4  5032               	movf	??_CANreceiveMessage+3,w,c
 16892  002DC6  22DE               	addwfc	postinc2,f,c
 16893                           
 16894                           ; BSR set to: 15
 16895                           ;inc\CANlib.h: 570: if (RXB1SIDLbits.EID16)
 16896  002DC8  010F               	movlb	15	; () banked
 16897  002DCA  A152               	btfss	82,0,b	;volatile
 16898  002DCC  D00C               	goto	i1l5938
 16899                           
 16900                           ; BSR set to: 15
 16901                           ;inc\CANlib.h: 571: msg->identifier |= 0x00010000;
 16902  002DCE  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16903  002DD2  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16904  002DD6  0E00               	movlw	0
 16905  002DD8  12DE               	iorwf	postinc2,f,c
 16906  002DDA  0E00               	movlw	0
 16907  002DDC  12DE               	iorwf	postinc2,f,c
 16908  002DDE  0E01               	movlw	1
 16909  002DE0  12DE               	iorwf	postinc2,f,c
 16910  002DE2  0E00               	movlw	0
 16911  002DE4  12DE               	iorwf	postinc2,f,c
 16912  002DE6                     i1l5938:
 16913                           
 16914                           ; BSR set to: 15
 16915                           ;inc\CANlib.h: 572: if (RXB1SIDLbits.EID17)
 16916  002DE6  010F               	movlb	15	; () banked
 16917  002DE8  A352               	btfss	82,1,b	;volatile
 16918  002DEA  D00C               	goto	i1l5942
 16919                           
 16920                           ; BSR set to: 15
 16921                           ;inc\CANlib.h: 573: msg->identifier |= 0x00020000;
 16922  002DEC  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16923  002DF0  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16924  002DF4  0E00               	movlw	0
 16925  002DF6  12DE               	iorwf	postinc2,f,c
 16926  002DF8  0E00               	movlw	0
 16927  002DFA  12DE               	iorwf	postinc2,f,c
 16928  002DFC  0E02               	movlw	2
 16929  002DFE  12DE               	iorwf	postinc2,f,c
 16930  002E00  0E00               	movlw	0
 16931  002E02  12DE               	iorwf	postinc2,f,c
 16932  002E04                     i1l5942:
 16933                           
 16934                           ; BSR set to: 15
 16935                           ;inc\CANlib.h: 574: if (RXB1SIDLbits.SID0)
 16936  002E04  010F               	movlb	15	; () banked
 16937  002E06  AB52               	btfss	82,5,b	;volatile
 16938  002E08  D00C               	goto	i1l5946
 16939                           
 16940                           ; BSR set to: 15
 16941                           ;inc\CANlib.h: 575: msg->identifier |= 0x00040000;
 16942  002E0A  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16943  002E0E  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16944  002E12  0E00               	movlw	0
 16945  002E14  12DE               	iorwf	postinc2,f,c
 16946  002E16  0E00               	movlw	0
 16947  002E18  12DE               	iorwf	postinc2,f,c
 16948  002E1A  0E04               	movlw	4
 16949  002E1C  12DE               	iorwf	postinc2,f,c
 16950  002E1E  0E00               	movlw	0
 16951  002E20  12DE               	iorwf	postinc2,f,c
 16952  002E22                     i1l5946:
 16953                           
 16954                           ; BSR set to: 15
 16955                           ;inc\CANlib.h: 576: if (RXB1SIDLbits.SID1)
 16956  002E22  010F               	movlb	15	; () banked
 16957  002E24  AD52               	btfss	82,6,b	;volatile
 16958  002E26  D00C               	goto	i1l5950
 16959                           
 16960                           ; BSR set to: 15
 16961                           ;inc\CANlib.h: 577: msg->identifier |= 0x00080000;
 16962  002E28  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16963  002E2C  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16964  002E30  0E00               	movlw	0
 16965  002E32  12DE               	iorwf	postinc2,f,c
 16966  002E34  0E00               	movlw	0
 16967  002E36  12DE               	iorwf	postinc2,f,c
 16968  002E38  0E08               	movlw	8
 16969  002E3A  12DE               	iorwf	postinc2,f,c
 16970  002E3C  0E00               	movlw	0
 16971  002E3E  12DE               	iorwf	postinc2,f,c
 16972  002E40                     i1l5950:
 16973                           
 16974                           ; BSR set to: 15
 16975                           ;inc\CANlib.h: 578: if (RXB1SIDLbits.SID2)
 16976  002E40  010F               	movlb	15	; () banked
 16977  002E42  AF52               	btfss	82,7,b	;volatile
 16978  002E44  D00C               	goto	i1l5954
 16979                           
 16980                           ; BSR set to: 15
 16981                           ;inc\CANlib.h: 579: msg->identifier |= 0x00100000;
 16982  002E46  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16983  002E4A  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16984  002E4E  0E00               	movlw	0
 16985  002E50  12DE               	iorwf	postinc2,f,c
 16986  002E52  0E00               	movlw	0
 16987  002E54  12DE               	iorwf	postinc2,f,c
 16988  002E56  0E10               	movlw	16
 16989  002E58  12DE               	iorwf	postinc2,f,c
 16990  002E5A  0E00               	movlw	0
 16991  002E5C  12DE               	iorwf	postinc2,f,c
 16992  002E5E                     i1l5954:
 16993                           
 16994                           ; BSR set to: 15
 16995                           ;inc\CANlib.h: 581: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 16996  002E5E  CF51 F02F          	movff	3921,??_CANreceiveMessage	;volatile
 16997  002E62  6A30               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16998  002E64  6A31               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 16999  002E66  6A32               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17000  002E68  0E15               	movlw	21
 17001  002E6A                     i1u742_25:
 17002  002E6A  90D8               	bcf	status,0,c
 17003  002E6C  362F               	rlcf	??_CANreceiveMessage,f,c
 17004  002E6E  3630               	rlcf	??_CANreceiveMessage+1,f,c
 17005  002E70  3631               	rlcf	??_CANreceiveMessage+2,f,c
 17006  002E72  3632               	rlcf	??_CANreceiveMessage+3,f,c
 17007  002E74  2EE8               	decfsz	wreg,f,c
 17008  002E76  D7F9               	goto	i1u742_25
 17009  002E78  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17010  002E7C  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17011  002E80  502F               	movf	??_CANreceiveMessage,w,c
 17012  002E82  12DE               	iorwf	postinc2,f,c
 17013  002E84  5030               	movf	??_CANreceiveMessage+1,w,c
 17014  002E86  12DE               	iorwf	postinc2,f,c
 17015  002E88  5031               	movf	??_CANreceiveMessage+2,w,c
 17016  002E8A  12DE               	iorwf	postinc2,f,c
 17017  002E8C  5032               	movf	??_CANreceiveMessage+3,w,c
 17018  002E8E  12DE               	iorwf	postinc2,f,c
 17019  002E90                     i1l5956:
 17020                           
 17021                           ; BSR set to: 15
 17022                           ;inc\CANlib.h: 582: }
 17023                           ;inc\CANlib.h: 584: RXB1CONbits.RXFUL = 0x00;
 17024  002E90  010F               	movlb	15	; () banked
 17025  002E92  9F50               	bcf	80,7,b	;volatile
 17026                           
 17027                           ; BSR set to: 15
 17028                           ;inc\CANlib.h: 585: return (error);
 17029                           ;	Return value of _CANreceiveMessage is never used
 17030  002E94  0012               	return	
 17031  002E96                     i1l410:
 17032                           
 17033                           ; BSR set to: 15
 17034                           ;inc\CANlib.h: 586: }
 17035                           ;inc\CANlib.h: 588: if (RXB0CONbits.RXFUL ==0x01)
 17036  002E96  AE60               	btfss	3936,7,c	;volatile
 17037  002E98  0012               	return	
 17038                           
 17039                           ; BSR set to: 15
 17040                           ;inc\CANlib.h: 589: {
 17041                           ;inc\CANlib.h: 590: msg->identifier = 0;
 17042  002E9A  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17043  002E9E  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17044  002EA2  6ADE               	clrf	postinc2,c
 17045  002EA4  6ADE               	clrf	postinc2,c
 17046  002EA6  6ADE               	clrf	postinc2,c
 17047  002EA8  6ADD               	clrf	postdec2,c
 17048                           
 17049                           ; BSR set to: 15
 17050                           ;inc\CANlib.h: 591: msg->data[0] =RXB0D0;
 17051  002EAA  EE20 F004          	lfsr	2,4
 17052  002EAE  502D               	movf	CANreceiveMessage@msg,w,c
 17053  002EB0  26D9               	addwf	fsr2l,f,c
 17054  002EB2  502E               	movf	CANreceiveMessage@msg+1,w,c
 17055  002EB4  22DA               	addwfc	fsr2h,f,c
 17056  002EB6  CF66 FFDF          	movff	3942,indf2	;volatile
 17057                           
 17058                           ; BSR set to: 15
 17059                           ;inc\CANlib.h: 592: msg->data[1] =RXB0D1;
 17060  002EBA  EE20 F005          	lfsr	2,5
 17061  002EBE  502D               	movf	CANreceiveMessage@msg,w,c
 17062  002EC0  26D9               	addwf	fsr2l,f,c
 17063  002EC2  502E               	movf	CANreceiveMessage@msg+1,w,c
 17064  002EC4  22DA               	addwfc	fsr2h,f,c
 17065  002EC6  CF67 FFDF          	movff	3943,indf2	;volatile
 17066                           
 17067                           ; BSR set to: 15
 17068                           ;inc\CANlib.h: 593: msg->data[2] =RXB0D2;
 17069  002ECA  EE20 F006          	lfsr	2,6
 17070  002ECE  502D               	movf	CANreceiveMessage@msg,w,c
 17071  002ED0  26D9               	addwf	fsr2l,f,c
 17072  002ED2  502E               	movf	CANreceiveMessage@msg+1,w,c
 17073  002ED4  22DA               	addwfc	fsr2h,f,c
 17074  002ED6  CF68 FFDF          	movff	3944,indf2	;volatile
 17075                           
 17076                           ; BSR set to: 15
 17077                           ;inc\CANlib.h: 594: msg->data[3] =RXB0D3;
 17078  002EDA  EE20 F007          	lfsr	2,7
 17079  002EDE  502D               	movf	CANreceiveMessage@msg,w,c
 17080  002EE0  26D9               	addwf	fsr2l,f,c
 17081  002EE2  502E               	movf	CANreceiveMessage@msg+1,w,c
 17082  002EE4  22DA               	addwfc	fsr2h,f,c
 17083  002EE6  CF69 FFDF          	movff	3945,indf2	;volatile
 17084                           
 17085                           ; BSR set to: 15
 17086                           ;inc\CANlib.h: 595: msg->data[4] =RXB0D4;
 17087  002EEA  EE20 F008          	lfsr	2,8
 17088  002EEE  502D               	movf	CANreceiveMessage@msg,w,c
 17089  002EF0  26D9               	addwf	fsr2l,f,c
 17090  002EF2  502E               	movf	CANreceiveMessage@msg+1,w,c
 17091  002EF4  22DA               	addwfc	fsr2h,f,c
 17092  002EF6  CF6A FFDF          	movff	3946,indf2	;volatile
 17093                           
 17094                           ; BSR set to: 15
 17095                           ;inc\CANlib.h: 596: msg->data[5] =RXB0D5;
 17096  002EFA  EE20 F009          	lfsr	2,9
 17097  002EFE  502D               	movf	CANreceiveMessage@msg,w,c
 17098  002F00  26D9               	addwf	fsr2l,f,c
 17099  002F02  502E               	movf	CANreceiveMessage@msg+1,w,c
 17100  002F04  22DA               	addwfc	fsr2h,f,c
 17101  002F06  CF6B FFDF          	movff	3947,indf2	;volatile
 17102                           
 17103                           ; BSR set to: 15
 17104                           ;inc\CANlib.h: 597: msg->data[6] =RXB0D6;
 17105  002F0A  EE20 F00A          	lfsr	2,10
 17106  002F0E  502D               	movf	CANreceiveMessage@msg,w,c
 17107  002F10  26D9               	addwf	fsr2l,f,c
 17108  002F12  502E               	movf	CANreceiveMessage@msg+1,w,c
 17109  002F14  22DA               	addwfc	fsr2h,f,c
 17110  002F16  CF6C FFDF          	movff	3948,indf2	;volatile
 17111                           
 17112                           ; BSR set to: 15
 17113                           ;inc\CANlib.h: 598: msg->data[7] =RXB0D7;
 17114  002F1A  EE20 F00B          	lfsr	2,11
 17115  002F1E  502D               	movf	CANreceiveMessage@msg,w,c
 17116  002F20  26D9               	addwf	fsr2l,f,c
 17117  002F22  502E               	movf	CANreceiveMessage@msg+1,w,c
 17118  002F24  22DA               	addwfc	fsr2h,f,c
 17119  002F26  CF6D FFDF          	movff	3949,indf2	;volatile
 17120                           
 17121                           ; BSR set to: 15
 17122                           ;inc\CANlib.h: 600: msg->RTR = RXB0DLCbits.RXRTR;
 17123  002F2A  EE20 F00E          	lfsr	2,14
 17124  002F2E  502D               	movf	CANreceiveMessage@msg,w,c
 17125  002F30  26D9               	addwf	fsr2l,f,c
 17126  002F32  502E               	movf	CANreceiveMessage@msg+1,w,c
 17127  002F34  22DA               	addwfc	fsr2h,f,c
 17128  002F36  AC65               	btfss	3941,6,c	;volatile
 17129  002F38  D002               	goto	i1u744_20
 17130  002F3A  0E01               	movlw	1
 17131  002F3C  D001               	goto	i1u744_26
 17132  002F3E                     i1u744_20:
 17133  002F3E  0E00               	movlw	0
 17134  002F40                     i1u744_26:
 17135  002F40  6EDF               	movwf	indf2,c
 17136                           
 17137                           ; BSR set to: 15
 17138                           ;inc\CANlib.h: 602: msg->length = RXB0DLC & 0x0F;
 17139  002F42  EE20 F00D          	lfsr	2,13
 17140  002F46  502D               	movf	CANreceiveMessage@msg,w,c
 17141  002F48  26D9               	addwf	fsr2l,f,c
 17142  002F4A  502E               	movf	CANreceiveMessage@msg+1,w,c
 17143  002F4C  22DA               	addwfc	fsr2h,f,c
 17144  002F4E  5065               	movf	3941,w,c	;volatile
 17145  002F50  0B0F               	andlw	15
 17146  002F52  6EDF               	movwf	indf2,c
 17147                           
 17148                           ; BSR set to: 15
 17149                           ;inc\CANlib.h: 604: msg->type = RXB0SIDLbits.EXID;
 17150  002F54  EE20 F00C          	lfsr	2,12
 17151  002F58  502D               	movf	CANreceiveMessage@msg,w,c
 17152  002F5A  26D9               	addwf	fsr2l,f,c
 17153  002F5C  502E               	movf	CANreceiveMessage@msg+1,w,c
 17154  002F5E  22DA               	addwfc	fsr2h,f,c
 17155  002F60  A662               	btfss	3938,3,c	;volatile
 17156  002F62  D002               	goto	i1u745_20
 17157  002F64  0E01               	movlw	1
 17158  002F66  D001               	goto	i1u745_26
 17159  002F68                     i1u745_20:
 17160  002F68  0E00               	movlw	0
 17161  002F6A                     i1u745_26:
 17162  002F6A  6EDF               	movwf	indf2,c
 17163                           
 17164                           ; BSR set to: 15
 17165                           ;inc\CANlib.h: 606: if (RXB0SIDLbits.EXID == 0)
 17166  002F6C  B662               	btfsc	3938,3,c	;volatile
 17167  002F6E  D043               	goto	i1l5992
 17168                           
 17169                           ; BSR set to: 15
 17170                           ;inc\CANlib.h: 607: {
 17171                           ;inc\CANlib.h: 608: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 17172  002F70  CF61 F02F          	movff	3937,??_CANreceiveMessage	;volatile
 17173  002F74  6A30               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17174  002F76  6A31               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17175  002F78  6A32               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17176  002F7A  0E03               	movlw	3
 17177  002F7C                     i1u747_25:
 17178  002F7C  90D8               	bcf	status,0,c
 17179  002F7E  362F               	rlcf	??_CANreceiveMessage,f,c
 17180  002F80  3630               	rlcf	??_CANreceiveMessage+1,f,c
 17181  002F82  3631               	rlcf	??_CANreceiveMessage+2,f,c
 17182  002F84  3632               	rlcf	??_CANreceiveMessage+3,f,c
 17183  002F86  2EE8               	decfsz	wreg,f,c
 17184  002F88  D7F9               	goto	i1u747_25
 17185  002F8A  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17186  002F8E  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17187  002F92  C02F  FFDE         	movff	??_CANreceiveMessage,postinc2
 17188  002F96  C030  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 17189  002F9A  C031  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 17190  002F9E  C032  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 17191                           
 17192                           ; BSR set to: 15
 17193                           ;inc\CANlib.h: 609: tamp = (RXB0SIDL >> 5 ) & 0x07;
 17194  002FA2  3862               	swapf	3938,w,c	;volatile
 17195  002FA4  42E8               	rrncf	wreg,f,c
 17196  002FA6  0B07               	andlw	7
 17197  002FA8  0B07               	andlw	7
 17198  002FAA  6E38               	movwf	CANreceiveMessage@tamp,c
 17199                           
 17200                           ; BSR set to: 15
 17201                           ;inc\CANlib.h: 610: msg->identifier = msg->identifier + tamp;
 17202  002FAC  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17203  002FB0  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17204  002FB4  CFDE F02F          	movff	postinc2,??_CANreceiveMessage
 17205  002FB8  CFDE F030          	movff	postinc2,??_CANreceiveMessage+1
 17206  002FBC  CFDE F031          	movff	postinc2,??_CANreceiveMessage+2
 17207  002FC0  CFDE F032          	movff	postinc2,??_CANreceiveMessage+3
 17208  002FC4  5038               	movf	CANreceiveMessage@tamp,w,c
 17209  002FC6  242F               	addwf	??_CANreceiveMessage,w,c
 17210  002FC8  6E33               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 17211  002FCA  0E00               	movlw	0
 17212  002FCC  2030               	addwfc	??_CANreceiveMessage+1,w,c
 17213  002FCE  6E34               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 17214  002FD0  0E00               	movlw	0
 17215  002FD2  2031               	addwfc	??_CANreceiveMessage+2,w,c
 17216  002FD4  6E35               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 17217  002FD6  0E00               	movlw	0
 17218  002FD8  2032               	addwfc	??_CANreceiveMessage+3,w,c
 17219  002FDA  6E36               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 17220  002FDC  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17221  002FE0  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17222  002FE4  C033  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 17223  002FE8  C034  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 17224  002FEC  C035  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 17225  002FF0  C036  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 17226                           
 17227                           ;inc\CANlib.h: 611: }
 17228  002FF4  D088               	goto	i1l6018
 17229  002FF6                     i1l5992:
 17230                           
 17231                           ; BSR set to: 15
 17232                           ;inc\CANlib.h: 612: else
 17233                           ;inc\CANlib.h: 613: {
 17234                           ;inc\CANlib.h: 614: msg->identifier = (unsigned long) RXB0EIDL;
 17235  002FF6  CF64 F02F          	movff	3940,??_CANreceiveMessage	;volatile
 17236  002FFA  6A30               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17237  002FFC  6A31               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17238  002FFE  6A32               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17239  003000  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17240  003004  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17241  003008  C02F  FFDE         	movff	??_CANreceiveMessage,postinc2
 17242  00300C  C030  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 17243  003010  C031  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 17244  003014  C032  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 17245                           
 17246                           ; BSR set to: 15
 17247                           ;inc\CANlib.h: 615: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 17248  003018  CF63 F02F          	movff	3939,??_CANreceiveMessage	;volatile
 17249  00301C  6A30               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17250  00301E  6A31               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17251  003020  6A32               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17252  003022  C031  F032         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 17253  003026  C030  F031         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 17254  00302A  C02F  F030         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 17255  00302E  6A2F               	clrf	??_CANreceiveMessage,c
 17256  003030  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17257  003034  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17258  003038  502F               	movf	??_CANreceiveMessage,w,c
 17259  00303A  26DE               	addwf	postinc2,f,c
 17260  00303C  5030               	movf	??_CANreceiveMessage+1,w,c
 17261  00303E  22DE               	addwfc	postinc2,f,c
 17262  003040  5031               	movf	??_CANreceiveMessage+2,w,c
 17263  003042  22DE               	addwfc	postinc2,f,c
 17264  003044  5032               	movf	??_CANreceiveMessage+3,w,c
 17265  003046  22DE               	addwfc	postinc2,f,c
 17266                           
 17267                           ; BSR set to: 15
 17268                           ;inc\CANlib.h: 617: if (RXB0SIDLbits.EID16)
 17269  003048  A062               	btfss	3938,0,c	;volatile
 17270  00304A  D00C               	goto	i1l6000
 17271                           
 17272                           ; BSR set to: 15
 17273                           ;inc\CANlib.h: 618: msg->identifier |= 0x00010000;
 17274  00304C  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17275  003050  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17276  003054  0E00               	movlw	0
 17277  003056  12DE               	iorwf	postinc2,f,c
 17278  003058  0E00               	movlw	0
 17279  00305A  12DE               	iorwf	postinc2,f,c
 17280  00305C  0E01               	movlw	1
 17281  00305E  12DE               	iorwf	postinc2,f,c
 17282  003060  0E00               	movlw	0
 17283  003062  12DE               	iorwf	postinc2,f,c
 17284  003064                     i1l6000:
 17285                           
 17286                           ; BSR set to: 15
 17287                           ;inc\CANlib.h: 619: if (RXB0SIDLbits.EID17)
 17288  003064  A262               	btfss	3938,1,c	;volatile
 17289  003066  D00C               	goto	i1l6004
 17290                           
 17291                           ; BSR set to: 15
 17292                           ;inc\CANlib.h: 620: msg->identifier |= 0x00020000;
 17293  003068  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17294  00306C  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17295  003070  0E00               	movlw	0
 17296  003072  12DE               	iorwf	postinc2,f,c
 17297  003074  0E00               	movlw	0
 17298  003076  12DE               	iorwf	postinc2,f,c
 17299  003078  0E02               	movlw	2
 17300  00307A  12DE               	iorwf	postinc2,f,c
 17301  00307C  0E00               	movlw	0
 17302  00307E  12DE               	iorwf	postinc2,f,c
 17303  003080                     i1l6004:
 17304                           
 17305                           ; BSR set to: 15
 17306                           ;inc\CANlib.h: 621: if (RXB0SIDLbits.SID0)
 17307  003080  AA62               	btfss	3938,5,c	;volatile
 17308  003082  D00C               	goto	i1l6008
 17309                           
 17310                           ; BSR set to: 15
 17311                           ;inc\CANlib.h: 622: msg->identifier |= 0x00040000;
 17312  003084  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17313  003088  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17314  00308C  0E00               	movlw	0
 17315  00308E  12DE               	iorwf	postinc2,f,c
 17316  003090  0E00               	movlw	0
 17317  003092  12DE               	iorwf	postinc2,f,c
 17318  003094  0E04               	movlw	4
 17319  003096  12DE               	iorwf	postinc2,f,c
 17320  003098  0E00               	movlw	0
 17321  00309A  12DE               	iorwf	postinc2,f,c
 17322  00309C                     i1l6008:
 17323                           
 17324                           ; BSR set to: 15
 17325                           ;inc\CANlib.h: 623: if (RXB0SIDLbits.SID1)
 17326  00309C  AC62               	btfss	3938,6,c	;volatile
 17327  00309E  D00C               	goto	i1l6012
 17328                           
 17329                           ; BSR set to: 15
 17330                           ;inc\CANlib.h: 624: msg->identifier |= 0x00080000;
 17331  0030A0  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17332  0030A4  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17333  0030A8  0E00               	movlw	0
 17334  0030AA  12DE               	iorwf	postinc2,f,c
 17335  0030AC  0E00               	movlw	0
 17336  0030AE  12DE               	iorwf	postinc2,f,c
 17337  0030B0  0E08               	movlw	8
 17338  0030B2  12DE               	iorwf	postinc2,f,c
 17339  0030B4  0E00               	movlw	0
 17340  0030B6  12DE               	iorwf	postinc2,f,c
 17341  0030B8                     i1l6012:
 17342                           
 17343                           ; BSR set to: 15
 17344                           ;inc\CANlib.h: 625: if (RXB0SIDLbits.SID2)
 17345  0030B8  AE62               	btfss	3938,7,c	;volatile
 17346  0030BA  D00C               	goto	i1l6016
 17347                           
 17348                           ; BSR set to: 15
 17349                           ;inc\CANlib.h: 626: msg->identifier |= 0x00100000;
 17350  0030BC  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17351  0030C0  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17352  0030C4  0E00               	movlw	0
 17353  0030C6  12DE               	iorwf	postinc2,f,c
 17354  0030C8  0E00               	movlw	0
 17355  0030CA  12DE               	iorwf	postinc2,f,c
 17356  0030CC  0E10               	movlw	16
 17357  0030CE  12DE               	iorwf	postinc2,f,c
 17358  0030D0  0E00               	movlw	0
 17359  0030D2  12DE               	iorwf	postinc2,f,c
 17360  0030D4                     i1l6016:
 17361                           
 17362                           ; BSR set to: 15
 17363                           ;inc\CANlib.h: 628: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 17364  0030D4  CF61 F02F          	movff	3937,??_CANreceiveMessage	;volatile
 17365  0030D8  6A30               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17366  0030DA  6A31               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17367  0030DC  6A32               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17368  0030DE  0E15               	movlw	21
 17369  0030E0                     i1u753_25:
 17370  0030E0  90D8               	bcf	status,0,c
 17371  0030E2  362F               	rlcf	??_CANreceiveMessage,f,c
 17372  0030E4  3630               	rlcf	??_CANreceiveMessage+1,f,c
 17373  0030E6  3631               	rlcf	??_CANreceiveMessage+2,f,c
 17374  0030E8  3632               	rlcf	??_CANreceiveMessage+3,f,c
 17375  0030EA  2EE8               	decfsz	wreg,f,c
 17376  0030EC  D7F9               	goto	i1u753_25
 17377  0030EE  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17378  0030F2  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17379  0030F6  502F               	movf	??_CANreceiveMessage,w,c
 17380  0030F8  12DE               	iorwf	postinc2,f,c
 17381  0030FA  5030               	movf	??_CANreceiveMessage+1,w,c
 17382  0030FC  12DE               	iorwf	postinc2,f,c
 17383  0030FE  5031               	movf	??_CANreceiveMessage+2,w,c
 17384  003100  12DE               	iorwf	postinc2,f,c
 17385  003102  5032               	movf	??_CANreceiveMessage+3,w,c
 17386  003104  12DE               	iorwf	postinc2,f,c
 17387  003106                     i1l6018:
 17388                           
 17389                           ; BSR set to: 15
 17390                           ;inc\CANlib.h: 630: }
 17391                           ;inc\CANlib.h: 631: RXB0CONbits.RXFUL = 0x00;
 17392  003106  9E60               	bcf	3936,7,c	;volatile
 17393                           
 17394                           ; BSR set to: 15
 17395                           ;inc\CANlib.h: 633: return (error);
 17396                           ;	Return value of _CANreceiveMessage is never used
 17397  003108  0012               	return	
 17398  00310A                     __end_of_CANreceiveMessage:
 17399                           	opt stack 0
 17400                           pclatu	equ	0xFFB
 17401                           pclath	equ	0xFFA
 17402                           tblptru	equ	0xFF8
 17403                           tblptrh	equ	0xFF7
 17404                           tblptrl	equ	0xFF6
 17405                           tablat	equ	0xFF5
 17406                           prodh	equ	0xFF4
 17407                           prodl	equ	0xFF3
 17408                           intcon	equ	0xFF2
 17409                           intcon2	equ	0xFF1
 17410                           postinc0	equ	0xFEE
 17411                           fsr0h	equ	0xFEA
 17412                           fsr0l	equ	0xFE9
 17413                           wreg	equ	0xFE8
 17414                           indf1	equ	0xFE7
 17415                           postdec1	equ	0xFE5
 17416                           fsr1h	equ	0xFE2
 17417                           fsr1l	equ	0xFE1
 17418                           bsr	equ	0xFE0
 17419                           indf2	equ	0xFDF
 17420                           postinc2	equ	0xFDE
 17421                           postdec2	equ	0xFDD
 17422                           plusw2	equ	0xFDB
 17423                           fsr2h	equ	0xFDA
 17424                           fsr2l	equ	0xFD9
 17425                           status	equ	0xFD8
 17426                           
 17427 ;; *************** function _ISR_Alta *****************
 17428 ;; Defined at:
 17429 ;;		line 97 in file "parcheggio.c"
 17430 ;; Parameters:    Size  Location     Type
 17431 ;;		None
 17432 ;; Auto vars:     Size  Location     Type
 17433 ;;		None
 17434 ;; Return value:  Size  Location     Type
 17435 ;;		None               void
 17436 ;; Registers used:
 17437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17438 ;; Tracked objects:
 17439 ;;		On entry : 0/0
 17440 ;;		On exit  : 0/0
 17441 ;;		Unchanged: 0/0
 17442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17445 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17446 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17447 ;;Total ram usage:       16 bytes
 17448 ;; Hardware stack levels used:    1
 17449 ;; Hardware stack levels required when called:    1
 17450 ;; This function calls:
 17451 ;;		___lwdiv
 17452 ;; This function is called by:
 17453 ;;		Interrupt level 2
 17454 ;; This function uses a non-reentrant model
 17455 ;;
 17456                           
 17457                           	psect	intcode
 17458  000008                     __pintcode:
 17459                           	opt stack 0
 17460  000008                     _ISR_Alta:
 17461                           	opt stack 21
 17462                           
 17463                           ; BSR set to: 15
 17464                           ;incstack = 0
 17465  000008  8256               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 17466  00000A  CFFA F069          	movff	pclath,??_ISR_Alta+2
 17467  00000E  CFFB F06A          	movff	pclatu,??_ISR_Alta+3
 17468  000012  EF9E  F030         	goto	int_func
 17469                           pclatu	equ	0xFFB
 17470                           pclath	equ	0xFFA
 17471                           tblptru	equ	0xFF8
 17472                           tblptrh	equ	0xFF7
 17473                           tblptrl	equ	0xFF6
 17474                           tablat	equ	0xFF5
 17475                           prodh	equ	0xFF4
 17476                           prodl	equ	0xFF3
 17477                           intcon	equ	0xFF2
 17478                           intcon2	equ	0xFF1
 17479                           postinc0	equ	0xFEE
 17480                           fsr0h	equ	0xFEA
 17481                           fsr0l	equ	0xFE9
 17482                           wreg	equ	0xFE8
 17483                           indf1	equ	0xFE7
 17484                           postdec1	equ	0xFE5
 17485                           fsr1h	equ	0xFE2
 17486                           fsr1l	equ	0xFE1
 17487                           bsr	equ	0xFE0
 17488                           indf2	equ	0xFDF
 17489                           postinc2	equ	0xFDE
 17490                           postdec2	equ	0xFDD
 17491                           plusw2	equ	0xFDB
 17492                           fsr2h	equ	0xFDA
 17493                           fsr2l	equ	0xFD9
 17494                           status	equ	0xFD8
 17495                           
 17496                           	psect	intcode_body
 17497  00613C                     __pintcode_body:
 17498                           	opt stack 21
 17499  00613C                     int_func:
 17500                           	opt stack 21
 17501  00613C  CFE9 F06B          	movff	fsr0l,??_ISR_Alta+4
 17502  006140  CFEA F06C          	movff	fsr0h,??_ISR_Alta+5
 17503  006144  CFE1 F06D          	movff	fsr1l,??_ISR_Alta+6
 17504  006148  CFE2 F06E          	movff	fsr1h,??_ISR_Alta+7
 17505  00614C  CFD9 F06F          	movff	fsr2l,??_ISR_Alta+8
 17506  006150  CFDA F070          	movff	fsr2h,??_ISR_Alta+9
 17507  006154  CFF3 F071          	movff	prodl,??_ISR_Alta+10
 17508  006158  CFF4 F072          	movff	prodh,??_ISR_Alta+11
 17509  00615C  CFF6 F073          	movff	tblptrl,??_ISR_Alta+12
 17510  006160  CFF7 F074          	movff	tblptrh,??_ISR_Alta+13
 17511  006164  CFF8 F075          	movff	tblptru,??_ISR_Alta+14
 17512  006168  CFF5 F076          	movff	tablat,??_ISR_Alta+15
 17513                           
 17514                           ;parcheggio.c: 98: if (INTCON2bits.INTEDG0 == 1) {
 17515  00616C  ACF1               	btfss	intcon2,6,c	;volatile
 17516  00616E  D007               	goto	i2l700
 17517                           
 17518                           ;parcheggio.c: 99: INTCON2bits.INTEDG0 = 0;
 17519  006170  9CF1               	bcf	intcon2,6,c	;volatile
 17520                           
 17521                           ;parcheggio.c: 100: TMR3H = 0;
 17522  006172  0E00               	movlw	0
 17523  006174  6EB3               	movwf	4019,c	;volatile
 17524                           
 17525                           ;parcheggio.c: 101: TMR3L = 0;
 17526  006176  0E00               	movlw	0
 17527  006178  6EB2               	movwf	4018,c	;volatile
 17528                           
 17529                           ;parcheggio.c: 102: distance_error = 0;
 17530  00617A  9854               	bcf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 17531                           
 17532                           ;parcheggio.c: 103: } else {
 17533  00617C  D030               	goto	i2l8568
 17534  00617E                     i2l700:
 17535                           
 17536                           ;parcheggio.c: 104: gianni = TMR3H;
 17537  00617E  CFB3 F02B          	movff	4019,_gianni	;volatile
 17538                           
 17539                           ;parcheggio.c: 105: asus = TMR3L;
 17540  006182  CFB2 F02A          	movff	4018,_asus	;volatile
 17541                           
 17542                           ;parcheggio.c: 106: timerValue2 = gianni;
 17543  006186  C02B  F027         	movff	_gianni,_timerValue2	;volatile
 17544  00618A  6A28               	clrf	_timerValue2+1,c	;volatile
 17545                           
 17546                           ;parcheggio.c: 107: timerValue2 = ((timerValue2 << 8) | (asus));
 17547  00618C  5027               	movf	_timerValue2,w,c	;volatile
 17548  00618E  0100               	movlb	0	; () banked
 17549  006190  6F67               	movwf	??_ISR_Alta& (0+255),b
 17550  006192  502A               	movf	_asus,w,c	;volatile
 17551  006194  6E27               	movwf	_timerValue2,c	;volatile
 17552  006196  C067  F028         	movff	??_ISR_Alta,_timerValue2+1	;volatile
 17553                           
 17554                           ; BSR set to: 0
 17555                           ;parcheggio.c: 108: pulse_time = timerValue2 / 2;
 17556  00619A  90D8               	bcf	status,0,c
 17557  00619C  3028               	rrcf	_timerValue2+1,w,c	;volatile
 17558  00619E  0100               	movlb	0	; () banked
 17559  0061A0  6F67               	movwf	??_ISR_Alta& (0+255),b
 17560  0061A2  3027               	rrcf	_timerValue2,w,c	;volatile
 17561  0061A4  6E21               	movwf	_pulse_time,c	;volatile
 17562  0061A6  C067  F022         	movff	??_ISR_Alta,_pulse_time+1	;volatile
 17563                           
 17564                           ; BSR set to: 0
 17565                           ;parcheggio.c: 109: sensor_distance[MUX_index] = pulse_time / 58;
 17566  0061AA  C021  F060         	movff	_pulse_time,___lwdiv@dividend	;volatile
 17567  0061AE  C022  F061         	movff	_pulse_time+1,___lwdiv@dividend+1	;volatile
 17568  0061B2  0E00               	movlw	0
 17569  0061B4  0100               	movlb	0	; () banked
 17570  0061B6  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 17571  0061B8  0E3A               	movlw	58
 17572  0061BA  6F62               	movwf	___lwdiv@divisor& (0+255),b
 17573  0061BC  ECB5  F031         	call	___lwdiv	;wreg free
 17574  0061C0  5029               	movf	_MUX_index,w,c	;volatile
 17575  0061C2  0D02               	mullw	2
 17576  0061C4  0E01               	movlw	low _sensor_distance
 17577  0061C6  24F3               	addwf	prodl,w,c
 17578  0061C8  6ED9               	movwf	fsr2l,c
 17579  0061CA  0E00               	movlw	high _sensor_distance
 17580  0061CC  20F4               	addwfc	prodh,w,c
 17581  0061CE  6EDA               	movwf	fsr2h,c
 17582  0061D0  0100               	movlb	0	; () banked
 17583  0061D2  C060  FFDE         	movff	?___lwdiv,postinc2
 17584  0061D6  0100               	movlb	0	; () banked
 17585  0061D8  C061  FFDD         	movff	?___lwdiv+1,postdec2
 17586                           
 17587                           ; BSR set to: 0
 17588                           ;parcheggio.c: 110: INTCON2bits.INTEDG0 = 1;
 17589  0061DC  8CF1               	bsf	intcon2,6,c	;volatile
 17590  0061DE                     i2l8568:
 17591                           
 17592                           ;parcheggio.c: 111: }
 17593                           ;parcheggio.c: 112: INTCONbits.INT0IF = 0;
 17594  0061DE  92F2               	bcf	intcon,1,c	;volatile
 17595  0061E0  C076  FFF5         	movff	??_ISR_Alta+15,tablat
 17596  0061E4  C075  FFF8         	movff	??_ISR_Alta+14,tblptru
 17597  0061E8  C074  FFF7         	movff	??_ISR_Alta+13,tblptrh
 17598  0061EC  C073  FFF6         	movff	??_ISR_Alta+12,tblptrl
 17599  0061F0  C072  FFF4         	movff	??_ISR_Alta+11,prodh
 17600  0061F4  C071  FFF3         	movff	??_ISR_Alta+10,prodl
 17601  0061F8  C070  FFDA         	movff	??_ISR_Alta+9,fsr2h
 17602  0061FC  C06F  FFD9         	movff	??_ISR_Alta+8,fsr2l
 17603  006200  C06E  FFE2         	movff	??_ISR_Alta+7,fsr1h
 17604  006204  C06D  FFE1         	movff	??_ISR_Alta+6,fsr1l
 17605  006208  C06C  FFEA         	movff	??_ISR_Alta+5,fsr0h
 17606  00620C  C06B  FFE9         	movff	??_ISR_Alta+4,fsr0l
 17607  006210  C06A  FFFB         	movff	??_ISR_Alta+3,pclatu
 17608  006214  C069  FFFA         	movff	??_ISR_Alta+2,pclath
 17609  006218  9256               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 17610  00621A  0011               	retfie		f
 17611  00621C                     __end_of_ISR_Alta:
 17612                           	opt stack 0
 17613                           pclatu	equ	0xFFB
 17614                           pclath	equ	0xFFA
 17615                           tblptru	equ	0xFF8
 17616                           tblptrh	equ	0xFF7
 17617                           tblptrl	equ	0xFF6
 17618                           tablat	equ	0xFF5
 17619                           prodh	equ	0xFF4
 17620                           prodl	equ	0xFF3
 17621                           intcon	equ	0xFF2
 17622                           intcon2	equ	0xFF1
 17623                           postinc0	equ	0xFEE
 17624                           fsr0h	equ	0xFEA
 17625                           fsr0l	equ	0xFE9
 17626                           wreg	equ	0xFE8
 17627                           indf1	equ	0xFE7
 17628                           postdec1	equ	0xFE5
 17629                           fsr1h	equ	0xFE2
 17630                           fsr1l	equ	0xFE1
 17631                           bsr	equ	0xFE0
 17632                           indf2	equ	0xFDF
 17633                           postinc2	equ	0xFDE
 17634                           postdec2	equ	0xFDD
 17635                           plusw2	equ	0xFDB
 17636                           fsr2h	equ	0xFDA
 17637                           fsr2l	equ	0xFD9
 17638                           status	equ	0xFD8
 17639                           
 17640 ;; *************** function ___lwdiv *****************
 17641 ;; Defined at:
 17642 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 17643 ;; Parameters:    Size  Location     Type
 17644 ;;  dividend        2    0[BANK0 ] unsigned int 
 17645 ;;  divisor         2    2[BANK0 ] unsigned int 
 17646 ;; Auto vars:     Size  Location     Type
 17647 ;;  quotient        2    5[BANK0 ] unsigned int 
 17648 ;;  counter         1    4[BANK0 ] unsigned char 
 17649 ;; Return value:  Size  Location     Type
 17650 ;;                  2    0[BANK0 ] unsigned int 
 17651 ;; Registers used:
 17652 ;;		wreg, status,2, status,0
 17653 ;; Tracked objects:
 17654 ;;		On entry : 0/0
 17655 ;;		On exit  : 0/0
 17656 ;;		Unchanged: 0/0
 17657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17658 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17659 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17661 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17662 ;;Total ram usage:        7 bytes
 17663 ;; Hardware stack levels used:    1
 17664 ;; This function calls:
 17665 ;;		Nothing
 17666 ;; This function is called by:
 17667 ;;		_ISR_Alta
 17668 ;; This function uses a non-reentrant model
 17669 ;;
 17670                           
 17671                           	psect	text40
 17672  00636A                     __ptext40:
 17673                           	opt stack 0
 17674  00636A                     ___lwdiv:
 17675                           	opt stack 21
 17676                           
 17677                           ;incstack = 0
 17678  00636A  0E00               	movlw	0
 17679  00636C  0100               	movlb	0	; () banked
 17680  00636E  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 17681  006370  0E00               	movlw	0
 17682  006372  6F65               	movwf	___lwdiv@quotient& (0+255),b
 17683                           
 17684                           ; BSR set to: 0
 17685  006374  0100               	movlb	0	; () banked
 17686  006376  5162               	movf	___lwdiv@divisor& (0+255),w,b
 17687  006378  0100               	movlb	0	; () banked
 17688  00637A  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 17689  00637C  B4D8               	btfsc	status,2,c
 17690  00637E  D02C               	goto	i2l1303
 17691                           
 17692                           ; BSR set to: 0
 17693  006380  0E01               	movlw	1
 17694  006382  0100               	movlb	0	; () banked
 17695  006384  6F64               	movwf	___lwdiv@counter& (0+255),b
 17696  006386  D006               	goto	i2l8308
 17697  006388                     i2l8306:
 17698                           
 17699                           ; BSR set to: 0
 17700  006388  0100               	movlb	0	; () banked
 17701  00638A  90D8               	bcf	status,0,c
 17702  00638C  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 17703  00638E  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 17704  006390  0100               	movlb	0	; () banked
 17705  006392  2B64               	incf	___lwdiv@counter& (0+255),f,b
 17706  006394                     i2l8308:
 17707                           
 17708                           ; BSR set to: 0
 17709  006394  0100               	movlb	0	; () banked
 17710  006396  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 17711  006398  D7F7               	goto	i2l8306
 17712  00639A                     i2l8310:
 17713                           
 17714                           ; BSR set to: 0
 17715  00639A  0100               	movlb	0	; () banked
 17716  00639C  90D8               	bcf	status,0,c
 17717  00639E  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 17718  0063A0  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 17719                           
 17720                           ; BSR set to: 0
 17721  0063A2  0100               	movlb	0	; () banked
 17722  0063A4  5162               	movf	___lwdiv@divisor& (0+255),w,b
 17723  0063A6  0100               	movlb	0	; () banked
 17724  0063A8  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 17725  0063AA  0100               	movlb	0	; () banked
 17726  0063AC  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 17727  0063AE  0100               	movlb	0	; () banked
 17728  0063B0  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 17729  0063B2  A0D8               	btfss	status,0,c
 17730  0063B4  D00A               	goto	i2l8318
 17731                           
 17732                           ; BSR set to: 0
 17733  0063B6  0100               	movlb	0	; () banked
 17734  0063B8  5162               	movf	___lwdiv@divisor& (0+255),w,b
 17735  0063BA  0100               	movlb	0	; () banked
 17736  0063BC  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 17737  0063BE  0100               	movlb	0	; () banked
 17738  0063C0  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 17739  0063C2  0100               	movlb	0	; () banked
 17740  0063C4  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 17741                           
 17742                           ; BSR set to: 0
 17743  0063C6  0100               	movlb	0	; () banked
 17744  0063C8  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 17745  0063CA                     i2l8318:
 17746                           
 17747                           ; BSR set to: 0
 17748  0063CA  0100               	movlb	0	; () banked
 17749  0063CC  90D8               	bcf	status,0,c
 17750  0063CE  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 17751  0063D0  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 17752                           
 17753                           ; BSR set to: 0
 17754  0063D2  0100               	movlb	0	; () banked
 17755  0063D4  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 17756  0063D6  D7E1               	goto	i2l8310
 17757  0063D8                     i2l1303:
 17758                           
 17759                           ; BSR set to: 0
 17760  0063D8  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 17761  0063DC  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 17762                           
 17763                           ; BSR set to: 0
 17764  0063E0  0012               	return		;funcret
 17765  0063E2                     __end_of___lwdiv:
 17766                           	opt stack 0
 17767                           pclatu	equ	0xFFB
 17768                           pclath	equ	0xFFA
 17769                           tblptru	equ	0xFF8
 17770                           tblptrh	equ	0xFF7
 17771                           tblptrl	equ	0xFF6
 17772                           tablat	equ	0xFF5
 17773                           prodh	equ	0xFF4
 17774                           prodl	equ	0xFF3
 17775                           intcon	equ	0xFF2
 17776                           intcon2	equ	0xFF1
 17777                           postinc0	equ	0xFEE
 17778                           fsr0h	equ	0xFEA
 17779                           fsr0l	equ	0xFE9
 17780                           wreg	equ	0xFE8
 17781                           indf1	equ	0xFE7
 17782                           postdec1	equ	0xFE5
 17783                           fsr1h	equ	0xFE2
 17784                           fsr1l	equ	0xFE1
 17785                           bsr	equ	0xFE0
 17786                           indf2	equ	0xFDF
 17787                           postinc2	equ	0xFDE
 17788                           postdec2	equ	0xFDD
 17789                           plusw2	equ	0xFDB
 17790                           fsr2h	equ	0xFDA
 17791                           fsr2l	equ	0xFD9
 17792                           status	equ	0xFD8
 17793                           pclatu	equ	0xFFB
 17794                           pclath	equ	0xFFA
 17795                           tblptru	equ	0xFF8
 17796                           tblptrh	equ	0xFF7
 17797                           tblptrl	equ	0xFF6
 17798                           tablat	equ	0xFF5
 17799                           prodh	equ	0xFF4
 17800                           prodl	equ	0xFF3
 17801                           intcon	equ	0xFF2
 17802                           intcon2	equ	0xFF1
 17803                           postinc0	equ	0xFEE
 17804                           fsr0h	equ	0xFEA
 17805                           fsr0l	equ	0xFE9
 17806                           wreg	equ	0xFE8
 17807                           indf1	equ	0xFE7
 17808                           postdec1	equ	0xFE5
 17809                           fsr1h	equ	0xFE2
 17810                           fsr1l	equ	0xFE1
 17811                           bsr	equ	0xFE0
 17812                           indf2	equ	0xFDF
 17813                           postinc2	equ	0xFDE
 17814                           postdec2	equ	0xFDD
 17815                           plusw2	equ	0xFDB
 17816                           fsr2h	equ	0xFDA
 17817                           fsr2l	equ	0xFD9
 17818                           status	equ	0xFD8
 17819                           
 17820                           	psect	param0
 17821  0000                     pclatu	equ	0xFFB
 17822                           pclath	equ	0xFFA
 17823                           tblptru	equ	0xFF8
 17824                           tblptrh	equ	0xFF7
 17825                           tblptrl	equ	0xFF6
 17826                           tablat	equ	0xFF5
 17827                           prodh	equ	0xFF4
 17828                           prodl	equ	0xFF3
 17829                           intcon	equ	0xFF2
 17830                           intcon2	equ	0xFF1
 17831                           postinc0	equ	0xFEE
 17832                           fsr0h	equ	0xFEA
 17833                           fsr0l	equ	0xFE9
 17834                           wreg	equ	0xFE8
 17835                           indf1	equ	0xFE7
 17836                           postdec1	equ	0xFE5
 17837                           fsr1h	equ	0xFE2
 17838                           fsr1l	equ	0xFE1
 17839                           bsr	equ	0xFE0
 17840                           indf2	equ	0xFDF
 17841                           postinc2	equ	0xFDE
 17842                           postdec2	equ	0xFDD
 17843                           plusw2	equ	0xFDB
 17844                           fsr2h	equ	0xFDA
 17845                           fsr2l	equ	0xFD9
 17846                           status	equ	0xFD8
 17847                           
 17848                           	psect	temp
 17849  000056                     btemp:
 17850                           	opt stack 0
 17851  000056                     	ds	1
 17852  0000                     int$flags	set	btemp
 17853                           pclatu	equ	0xFFB
 17854                           pclath	equ	0xFFA
 17855                           tblptru	equ	0xFF8
 17856                           tblptrh	equ	0xFF7
 17857                           tblptrl	equ	0xFF6
 17858                           tablat	equ	0xFF5
 17859                           prodh	equ	0xFF4
 17860                           prodl	equ	0xFF3
 17861                           intcon	equ	0xFF2
 17862                           intcon2	equ	0xFF1
 17863                           postinc0	equ	0xFEE
 17864                           fsr0h	equ	0xFEA
 17865                           fsr0l	equ	0xFE9
 17866                           wreg	equ	0xFE8
 17867                           indf1	equ	0xFE7
 17868                           postdec1	equ	0xFE5
 17869                           fsr1h	equ	0xFE2
 17870                           fsr1l	equ	0xFE1
 17871                           bsr	equ	0xFE0
 17872                           indf2	equ	0xFDF
 17873                           postinc2	equ	0xFDE
 17874                           postdec2	equ	0xFDD
 17875                           plusw2	equ	0xFDB
 17876                           fsr2h	equ	0xFDA
 17877                           fsr2l	equ	0xFD9
 17878                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    80
    Data        11
    BSS         195
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      85
    BANK0           160    122     137
    BANK1           256     89     236
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK1[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> can_send@data_correction1(BANK0[0]), data_speed(BANK1[8]), data_brake(BANK1[8]), data_steering(BANK1[8]), 
		 -> data_correction(BANK1[8]), data_test(BANK1[8]), data(BANK1[8]), sensor_distance_short(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    None.

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->i1_CANsendMessage

Critical Paths under _main in BANK0

    _park_search->___xxtofl
    _park_routine->___xxtofl
    _parallelo->___xxtofl
    _parallelo->_asin
    _can_send->_CANsendMessage
    _matematica->_asin
    _cos->_asin
    _floor->___xxtofl
    ___xxtofl->___fltol
    ___fltol->___flneg
    _asin->_atan
    _sqrt->___flneg
    _atan->___flge
    _fabs->___flneg
    ___flneg->___fladd
    _eval_poly->___fladd
    ___flmul->___fldiv
    ___fladd->___flmul
    ___flge->_fabs
    _delay_s->_delay_ms
    _delay_ms->___wmul
    _configurazione->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask

Critical Paths under _ISR_Alta in BANK0

    _ISR_Alta->___lwdiv

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_park_routine
    _park_search->_parallelo
    _park_routine->_matematica
    _parallelo->_asin
    _matematica->_cos
    _cos->_asin
    _sin->___flsub
    ___flsub->_floor
    _asin->_sqrt

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Alta in BANK3

    None.

Critical Paths under _ISR_Bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Alta in BANK4

    None.

Critical Paths under _ISR_Bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Alta in BANK5

    None.

Critical Paths under _ISR_Bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Alta in BANK6

    None.

Critical Paths under _ISR_Bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Alta in BANK7

    None.

Critical Paths under _ISR_Bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Alta in BANK8

    None.

Critical Paths under _ISR_Bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Alta in BANK9

    None.

Critical Paths under _ISR_Bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Alta in BANK10

    None.

Critical Paths under _ISR_Bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Alta in BANK11

    None.

Critical Paths under _ISR_Bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Alta in BANK12

    None.

Critical Paths under _ISR_Bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  358310
                                            121 BANK0      1     1      0
                       _CANisTxReady
                     _CANsendMessage
                    _can_interpreter
                     _configurazione
                           _delay_ms
                       _park_routine
                        _park_search
 ---------------------------------------------------------------------------------
 (1) _park_search                                          2     2      0   95960
                                             43 BANK1      2     2      0
                       _CANisTxReady
                     _CANsendMessage
                           ___xxtofl
                                _abs
                          _parallelo
 ---------------------------------------------------------------------------------
 (1) _park_routine                                        12    12      0  247231
                                             77 BANK1     12    12      0
                       _CANisTxReady
                     _CANsendMessage
                            ___fladd
                            ___flneg
                            ___fltol
                           ___xxtofl
                           _can_send
                           _delay_ms
                            _delay_s
                         _matematica
                          _parallelo
 ---------------------------------------------------------------------------------
 (2) _parallelo                                            2     2      0   86739
                                             41 BANK1      2     2      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _abs
                               _asin
                           _can_send
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _can_send                                             0     0      0    8405
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (4) _CANsendMessage                                      16     8      8    8153
                                             23 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (4) _CANisTxReady                                         1     1      0      37
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     247
                                             23 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _matematica                                          32    32      0  133218
                                             49 BANK1     28    28      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                               _asin
                                _cos
 ---------------------------------------------------------------------------------
 (3) _cos                                                 12     8      4   57965
                                             41 BANK1      8     4      4
                            ___fladd
                             ___flge
                               _asin (ARG)
                                _sin
 ---------------------------------------------------------------------------------
 (4) _sin                                                 17    13      4   49794
                                             18 BANK1     17    13      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                          _eval_poly
                              _floor
 ---------------------------------------------------------------------------------
 (5) _floor                                               10     6      4   10191
                                              0 BANK1     10     6      4
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (6) _frexp                                                8     2      6     452
                                             23 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     784
                                            107 BANK0     14    10      4
                            ___fltol (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     722
                                             97 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    6777
                                             10 BANK1      8     0      8
                            ___fladd
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (3) _asin                                                36    32      4   57438
                                            117 BANK0      4     0      4
                                             21 BANK1     20    20      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                               _atan
                               _fabs
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _sqrt                                                29    25      4    1467
                                             97 BANK0      8     4      4
                                              0 BANK1     21    21      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (4) _atan                                                21    17      4   34323
                                            113 BANK0      4     0      4
                                              0 BANK1     17    17      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                          _eval_poly
                               _fabs
 ---------------------------------------------------------------------------------
 (4) _fabs                                                 4     0      4    1621
                                             97 BANK0      4     0      4
                            ___flneg
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4    1297
                                             93 BANK0      4     0      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           16     8      8   13009
                                             93 BANK0     16     8      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    5541
                                             48 BANK0     25    17      8
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    6290
                                             73 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1498
                                            101 BANK0     12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4347
                                             23 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (2) _delay_s                                              2     2      0     793
                                             31 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             2     0      2     725
                                             29 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     386
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _configurazione                                       0     0      0    6204
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    6204
                                             37 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      4     4      0       0
                                             23 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_Bassa                                           23    23      0    4525
                                             16 COMRAM    23    23      0
                  _CANreceiveMessage
                     i1_CANisTxReady
                   i1_CANsendMessage
 ---------------------------------------------------------------------------------
 (8) i1_CANsendMessage                                    16     8      8    3197
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (8) i1_CANisTxReady                                       1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_Alta                                            16    16      0     395
                                              7 BANK0     16    16      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (10) ___lwdiv                                             7     3      4     395
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisTxReady
   _CANsendMessage
   _can_interpreter
   _configurazione
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _delay_ms
     ___wmul
   _park_routine
     _CANisTxReady
     _CANsendMessage
     ___fladd
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
     ___flneg
       ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___flneg (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
     ___xxtofl
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       _abs (ARG)
     _can_send
       _CANisTxReady
       _CANsendMessage
     _delay_ms
       ___wmul
     _delay_s
       _delay_ms
         ___wmul
     _matematica
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flmul
         ___fldiv (ARG)
       ___flneg
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _cos
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _asin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _atan
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___flmul
               ___fldiv (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _eval_poly
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _fabs
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           _sqrt
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _sin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flsub
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _floor (ARG)
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___flge
                 _fabs (ARG)
                   ___flneg
                     ___fladd (ARG)
                       ___fldiv (ARG)
                       ___flmul (ARG)
                         ___fldiv (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
               ___xxtofl
                 ___fltol (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___flneg (ARG)
                     ___fladd (ARG)
                       ___fldiv (ARG)
                       ___flmul (ARG)
                         ___fldiv (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                 _abs (ARG)
               _frexp
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _floor
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___flneg (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___xxtofl
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
               _abs (ARG)
             _frexp
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___flmul
         ___fldiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _abs (ARG)
       _abs
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
   _park_search
     _CANisTxReady
     _CANsendMessage
     ___xxtofl
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       _abs (ARG)
     _abs
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___flmul
         ___fldiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _abs (ARG)
       _abs
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)

 _ISR_Bassa (ROOT)
   _CANreceiveMessage
   i1_CANisTxReady
   i1_CANsendMessage

 _ISR_Alta (ROOT)
   ___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     59      EC       7       92.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7A      89       5       85.6%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     27      55       1       90.4%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1CA      20        0.0%
DATA                 0      0     1CA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun May 22 18:01:21 2016

                ___fldiv@aexp 008F                  ___fldiv@bexp 008E                             _n 0138  
                           _x 00DA                             _z 0015          __end_of_CANSetFilter 1858  
                ___fldiv@sign 0083            delay_s@repeat_loop 0080                            bsr 000FE0  
         ___wmul@multiplicand 0079                   __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                 __CFG_OSC$HS 000000                    _MUX_select 0100                           l402 1F30  
                         l403 1F34                           l500 15B4                           l404 1F40  
                         l501 15B8                           l510 16C4                           l502 15C4  
                         l511 16D0                           l503 15C8                           l520 17DC  
                         l512 16D4                           l504 15D4                           l440 4894  
                         l432 4854                           l521 17E0                           l513 16E0  
                         l433 4858                           l522 17EC                           l514 16E4  
                         l450 49A0                           l434 4864                           l370 1918  
                         l523 17F0                           l515 16F0                           l507 16B0  
                         l451 49AC                           l443 496C                           l435 4868  
                         l363 1ADC                           l524 17FC                           l508 16B4  
                         l444 4970                           l436 4874                           l380 1AF6  
                         l364 186E                           l525 1800                           l509 16C0  
                         l445 497C                           l437 4878                           l381 1BEE  
                         l373 1A28                           l365 1872                           l526 180C  
                         l518 17CC                           l470 1276                           l446 4980  
                         l438 4884                           l358 5782                           l390 1CBC  
                         l382 1B7E                           l374 1A2C                           l366 196A  
                         l519 17D0                           l471 1282                           l463 1242  
                         l447 498C                           l439 4888                           l359 578C  
                         l383 1B88                           l375 1A38                           l367 18FA  
                         l480 138C                           l464 1246                           l448 4990  
                         l384 1B92                           l368 1904                           l481 1390  
                         l465 1252                           l449 499C                           l393 1D76  
                         l385 1B9C                           l369 190E                           l490 149C  
                         l482 139C                           l474 135C                           l466 1256  
                         l394 1D7A                           l378 1D60                           l491 14A8  
                         l475 1360                           l467 1262                           l395 1E72  
                         l379 1AF2                           l492 14AC                           l476 136C  
                         l468 1266                           l556 66B6                           l396 1E02  
                         l388 1CAC                           l493 14B8                           l485 1478  
                         l477 1370                           l469 1272                           l397 1E0C  
                         l389 1CB0                           l486 147C                           l478 137C  
                         l398 1E16                           l487 1488                           l479 1380  
                         l399 1E20                           l496 1594                           l488 148C  
                         l832 5256                           l760 5A3E                           l497 1598  
                         l489 1498                           l569 65C4                           l498 15A4  
                         l826 5294                           l499 15A8                           l747 5A42  
                         l780 3AE6                           l749 58F0                           l790 3CD0  
                         l783 3B24                           l793 3D64                           l796 3DEC  
                         l789 3B50                           l896 6662                  __CFG_CPB$OFF 000000  
                __CFG_CPD$OFF 000000                           _abs 6640                           _asd 02A1  
                         _dir 02A3                           _cos 6058                           _jjj 0130  
                         _kkk 0134                           _msg 0144                           _sin 49F8  
                         prod 000FF3                           wreg 000FE8                  ___flmul@aexp 009D  
                ___flmul@bexp 00A2               ?_configurazione 002D                  ___flmul@sign 009C  
                ___flmul@temp 00A7                  ___flmul@prod 00A3                  __CFG_LVP$OFF 000000  
                ___fltol@exp1 00CA                  __CFG_WDT$OFF 000000                          l1103 5B8C  
                        ?_abs 0077                          l1411 44C8                          l1420 4500  
                        l1422 456E                          l1414 4470                          l1096 6586  
                        l1441 3666                          l1450 3970                          l1355 32EA  
                        l1339 4CFE                          l1372 345E                          l1356 32DE  
                        l1508 5E22                          l1381 34F2                          l1357 32AA  
                        l1448 3902                          l1458 3A14                          l1490 55EE  
                        l1483 5542                          l1497 564A                          l1498 5662  
                        ?_cos 01B4                          l5302 4898                          l5412 103C  
                        l5308 48DE                          l5260 4712                          l5510 13A0  
                        l5430 10F6                          l5334 49B0                          l7030 38EC  
                        l7104 65F8                          l7200 62FC                          l7130 5FE0  
                        l7114 5F72                          l5612 16F4                          l5516 13E6  
                        l5276 47C8                          l7060 39E6                          l7036 3916  
                        l7140 6010                          l5550 1502                          l5358 0E10  
                        l7302 4514                          l7222 42DC                          l7070 3A34  
                        l7062 39FA                          l7046 396A                          l7142 6020  
                        l7134 5FF4                          l5544 14BC                          l5448 11B0  
                        l5376 0EC8                          l7312 4568                          l7216 42B8  
                        l7072 3A3E                          l7056 39C0                          l7144 602A  
                        l8120 59A2                          l5618 173A                          l5482 12CC  
                        l5394 0F82                          l7330 4622                          l7322 45BE  
                        l7242 433A                          l7226 42E6                          l7090 5B3A  
                        l7082 5A9A                          l7170 55D0                          l5476 1286  
                        l7236 4316                          l7148 6046                          l7164 557A  
                        l7420 1922                          l8116 596A                          l8108 594E  
                        l5646 1810                          l7326 45EC                          l7246 4344  
                        l7086 5AE8                          l7190 56B4                          l7166 5582  
                        l7158 5552                          l8150 3A60                          l5584 161E  
                        l7336 4632                          l7328 4600                          l7096 5BD8  
                        l7360 5E8A                          l7176 562C                          l7168 5592  
                        l7440 1A1C                          l8160 3AA4                          l5578 15D8  
                        l7338 4636                          l7290 44C4                          l7266 43C6  
                        l7258 4398                          l7362 5F2E                          l7178 563C  
                        l7522 1CC0                          l8138 5A00                          l7284 447C  
                        l7276 4444                          l7700 4164                          l7516 1CA0  
                        l8164 3ADC                          l7382 5D86                          l7374 5D50  
                        l7446 1A3C                          l7296 44EA                          l6904 34C6  
                        l6824 322A                          l6752 3128                          l7720 427A  
                        l7712 4244                          l8184 3B48                          l8096 58A2  
                        l8088 588E                          l6914 34EC                          l6906 34CC  
                        l6842 32CE                          l6770 3182                          l6762 3156  
                        l7650 3F4C                          l7378 5D64                          l7804 66E2  
                        l6932 357C                          l6924 3548                          l6860 334C  
                        l6852 330E                          l6836 32BE                          l7740 52F2  
                        l7636 3EEE                          l7572 1E2A                          l7820 5BE0  
                        l8276 3E42                          l6862 3352                          l6870 336E  
                        l6838 32C4                          l6782 31BA                          l6758 314C  
                        l7830 5C2C                          l8278 3E4E                          l8294 3EC2  
                        l8702 625E                          l8710 62C4                          l7808 65B6  
                        l6944 35A0                          l6936 3588                          l6928 355A  
                        l6880 343E                          l6776 3196                          l6960 35F4  
                        l7760 54D2                          l7744 5366                          l7656 3F6C  
                        l7648 3F3A                          l7592 1F24                          l7496 1BA6  
                        l7840 5CA4                          l8288 3E7A                          l6938 358C  
                        l6866 335C                          l6794 31EE                          l6786 31C4  
                        l6962 35FA                          l6954 35D0                          l7834 5C64  
                        l7940 5790                          l6980 3654                          l6972 362A  
                        l6964 360C                          l7756 54BA                          l7692 40EE  
                        l7676 3FDE                          l7668 3FAE                          l7772 4A2E  
                        ?_sin 019D                          l6894 34A6                          l7694 4128  
                        l7686 4060                          l7854 4D6E                          l7598 1F44  
                        l7944 5798                          l6888 3490                          l6984 367A  
                        l7688 4068                          l7784 4B58                          l7946 57DC  
                        l7938 577A                          l7954 6678                          l6898 34B2  
                        l6978 364E                          l7866 4E9C                          l6988 368E  
                        l7788 4BCE                          l7958 668A                          l7878 4F7E  
                        l7894 60E0                          l7990 5272                          l7984 5220  
                        l7992 5278                          _LATA 000F89                          _LATB 000F8A  
                        _LATC 000F8B                          u6110 468E                          u6115 4682  
                        u6125 46EE                          u6150 4744                          u7040 1830  
                        u6320 49D0                          u6240 48B8                          u6155 4738  
                        u7045 1824                          u6405 0EA4                          u6325 49C4  
                        u6245 48AC                          u6165 47A4                          u6510 1072  
                        u6430 0EFE                          u6350 0D8C                          u6515 1066  
                        u6435 0EF2                          u6355 0D80                          u6525 10D2  
                        u6445 0F5E                          u6365 0DEC                          u6550 112C  
                        u6470 0FB8                          u6390 0E44                          u6800 14DC  
                        u6720 13C0                          u6640 12A6                          u6555 1120  
                        u6475 0FAC                          u6395 0E38                          u9140 39D4  
                        u9060 388E                          u6805 14D0                          u6725 13B4  
                        u6645 129A                          u6565 118C                          u6485 1018  
                        u9240 5F92                          u9065 3882                          u9410 632E  
                        u8700 328E                          u9245 5F86                          u6960 1714  
                        u6880 15F8                          u9418 6332                          u9620 45D2  
                        u6965 1708                          u6885 15EC                          u8680 3274  
                        u9800 198E                          u8690 328C                          u9805 1982  
                        u9815 19EE                          u9920 1BC6                          u9690 5D74  
                        u9930 1C12                          u9925 1BBA                          u9790 1942  
                        u9935 1C06                          u9945 1C72                          u9795 1936  
    __end_ofi1_CANsendMessage 2674           __size_of_CANSetMask 039E                          abs@a 0077  
                        _alfa 0124                          _fabs 655A                          _data 0153  
                        _beta 0128                          _atan 52A6                          _asin 4D10  
                        _main 621C                          _asus 002A                          cos@f 01B4  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr0l 000FE9  
                        fsr2h 000FDA                          indf1 000FE7                          fsr1l 000FE1  
                        indf2 000FDF                          fsr2l 000FD9                          btemp 0056  
                        _sqrt 3ED0                          pclat 000FFA                          sin@f 019D  
                        sin@y 01A1                          prodh 000FF4                          prodl 000FF3  
                        start 0308                 __CFG_IESO$OFF 000000               ___fldiv@new_exp 0088  
              delay_s@value_s 007F                 __CFG_MCLRE$ON 000000                  ___param_bank 000000  
            _CANOperationMode 66DA                         ??_abs 0079                         ??_cos 00D9  
                       ??_sin 00D9    __size_of_CANreceiveMessage 050C                         ?_fabs 00C1  
               ___fltol@sign1 00C9                         ?_atan 00D1                         ?_asin 00D5  
             __end_of___fladd 35B2                         ?_main 002D               __end_of___fldiv 465A  
             __end_of___flneg 660A               __end_of___flmul 3A58               __end_of___flsub 655A  
             __end_of___fltol 6058                         ?_sqrt 00C1                         u10050 1E4A  
                       u10060 1E96                         u10055 1E3E                         u10320 4B52  
                       u10065 1E8A                         u10250 5322                         u10330 4B54  
                       u10075 1EF6                         u10260 5324                         _T0CON 000FD5  
                       u10531 50B4                         u10700 59B2                         u10620 589E  
                       u10541 50C0                         u10580 5270                         u10900 3E22  
                       u11620 6270                         u10760 3A76                         u11626 6272  
                       u10766 3A78                         u11647 65B8                         _T3CON 000FB1  
          __size_of_ISR_Bassa 02F0               __end_of___lwdiv 63E2                         i1l410 2E96  
                       i1l402 25D0                         i1l403 25D4                         i1l404 25DE  
                       i1l370 2082                         i1l363 2214                         i1l380 222C  
                       i1l364 1FF8                         i1l381 22FC                         i1l373 2170  
                       i1l365 1FFC                         i1l390 23AE                         i1l382 229A  
                       i1l374 2174                         i1l366 20CC                         i1l383 22A2  
                       i1l375 217E                         i1l367 206A                         i1l384 22AA  
                       i1l368 2072                         i1l393 2458                         i1l385 22B2  
                       i1l369 207A                         i1l394 245C                         i1l378 2444  
                       i1l706 008C                         i1l395 252C                         i1l379 2228  
                       i1l556 66D6                         i1l396 24CA                         i1l388 23A0  
                       i1l732 02C0                         i1l397 24D2                         i1l389 23A4  
                       i1l725 023C                         i1l398 24DA                         i1l718 014E  
                       i1l399 24E2                         i1l728 02BC                         i2l700 617E  
                       _TMR0H 000FD7                         _TMR0L 000FD6                         _TMR3H 000FB3  
                       _TMR3L 000FB2                         _PORTA 000F80                         _TRISA 000F92  
                       _TRISB 000F93                         _TRISC 000F94            __end_ofsin@coeff_a 0D41  
          __end_ofsin@coeff_b 0D51                 __CFG_PWRT$OFF 000000              __end_of_ISR_Alta 621C  
             __end_of_delay_s 6698                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000            CANInitialize@flags 0089  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
                       _bordo 012C                         fabs@d 00C1                         _first 02A9  
                       _floor 5D10                         _frexp 62D6                         _errno 00E4  
                       atan@f 00D1                         atan@x 018F                         atan@y 018B  
                       asin@x 00D5                         asin@y 01AC      can_send@data_correction1 0087  
              __pbitbssCOMRAM 02A0                         sin@x2 01A9                         tablat 000FF5  
        __end_of_CANisTxReady 66BC                         plusw2 000FDB                         sqrt@a 00C1  
                       sqrt@i 018C                         sqrt@p 0191                         status 000FD8  
                ?_park_search 002D               __initialization 63E2                  __end_of_fabs 6598  
                __end_of_atan 54F8                  __end_of_asin 5022                  __end_of_main 62D6  
                __end_of_sqrt 429A                        ??_fabs 00C5                        ??_atan 00D5  
                      ??_asin 00D9                        ??_main 00D9             _park_routine$3744 01DC  
           _park_routine$3745 01E0                        ??_sqrt 00C5                 __activetblptr 000003  
           _CANisTxReady$2845 0077                        _ADCON1 000FC1                        ?_floor 018B  
                      ?_frexp 0077                        _CANCON 000F6F            _distance_received1 02A6  
             __CFG_BBSIZ$1024 000000             _spazio_parcheggio 00E6                 _avvicinamento 02A2  
                      i1l6000 3064                        i1l6012 30B8                        i1l6004 3080  
                      i2l1303 63D8                        i1l6016 30D4                        i1l6008 309C  
                      i1l6018 3106                        i1l5930 2D76                        i1l5950 2E40  
                      i1l5942 2E04                        i1l8430 22BA                        i1l8600 012C  
                      i1l5954 2E5E                        i1l5946 2E22                        i1l5938 2DE6  
                      i1l8506 24EA                        i1l8450 2396                        i1l8354 208A  
                      i1l8602 0140                        i1l5956 2E90                        i1l8532 25E2  
                      i1l8380 2182                        i1l8526 25C6                        i1l8374 2166  
                      i1l5992 2FF6                        i1l8456 23B2                        i1l8632 0182  
                      i1l8636 018A                        i1l8672 0276                        i1l8664 0246  
                      i1l8584 00BE                        i1l8682 02A6                        i1l8658 0218  
                      i1l8676 027E                        i1l8596 00FA                        i2l8310 639A  
                      i2l8306 6388                        i2l8308 6394                        i2l8318 63CA  
                      i2l8568 61DE                        _RXB0D0 000F66                        _RXB0D1 000F67  
                      _RXB0D2 000F68                        _RXB0D3 000F69                        _RXB0D4 000F6A  
                      _RXB1D0 000F56                        _RXB0D5 000F6B                        _RXB1D1 000F57  
                      _RXB0D6 000F6C                        _RXB1D2 000F58                        _RXB0D7 000F6D  
                      _RXB1D3 000F59                        _RXB1D4 000F5A                        _RXB1D5 000F5B  
                      _RXB1D6 000F5C                        _RXB1D7 000F5D                        _TXB0D0 000F46  
                      _TXB0D1 000F47                        _TXB0D2 000F48                        _TXB0D3 000F49  
                      _TXB1D0 000F36                        _TXB0D4 000F4A                        _TXB1D1 000F37  
                      _TXB0D5 000F4B                        _TXB1D2 000F38                        _TXB0D6 000F4C  
                      _TXB1D3 000F39                        _TXB0D7 000F4D                        _TXB2D0 000F26  
                      _TXB1D4 000F3A                        _TXB2D1 000F27                        _TXB1D5 000F3B  
                      _TXB2D2 000F28                        _TXB1D6 000F3C                        _TXB2D3 000F29  
                      _TXB1D7 000F3D                        _TXB2D4 000F2A                        _TXB2D5 000F2B  
                      _TXB2D6 000F2C                        _TXB2D7 000F2D            CANsendMessage@data 007B  
            __end_of_can_send 5D10            CANsendMessage@tamp 0083              __end_of___xxtofl 56C6  
           __end_of_ISR_Bassa 0308              __end_of_delay_ms 65D2         __size_of_CANSetFilter 0B06  
              __CFG_XINST$OFF 000000                        ___flge 5A4C               _data_correction 0163  
                   ??___fladd 00B1                        ___wmul 660A                     ??___fldiv 007F  
                   ??___flneg 00C1                __CFG_STVREN$ON 000000                     ??___flmul 0098  
                   ??___flsub 00D9                     ??___fltol 00C5                     ??___lwdiv 0064  
                ??_CANSetMask 007C                        _gianni 002B                        _raggio 01E8  
                      clear_0 63E8                        clear_1 63F4                        clear_2 6404  
                   ??_delay_s 007F                        floor@i 018F                        floor@x 018B  
             __CFG_BOREN$BOHW 000000       __size_ofi1_CANisTxReady 001E                        sin@sgn 01AD  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                  _CANSetFilter 0D52                    ___flge@ff1 00C5  
                  ___flge@ff2 00C9                  ___xxtofl@arg 00D5                  ___xxtofl@exp 00D4  
                ___xxtofl@val 00CB                    __accesstop 0060       __end_of__initialization 6448  
          __end_of_CANSetMask 49F8               __CFG_PBADEN$OFF 000000                    ___flneg@f1 00BD  
               ?_park_routine 002D                  eval_poly@res 00C9                 ___rparam_used 000000  
                  ___fltol@f1 00C1                __pcstackCOMRAM 002D                     ?_ISR_Alta 002D  
                __pidataBANK0 66F8                  __pidataBANK1 66F0                 __end_of_floor 5E34  
               __end_of_frexp 636A              ??_configurazione 0091         CANSetFilter@numBuffer 0080  
                _actual_speed 00DE         __size_of_CANisTxReady 0024                       ??_floor 00D9  
                     ??_frexp 007D      __end_of_CANOperationMode 66F0                    __pbssBANK0 00DA  
                  __pbssBANK1 0100               _sensor_distance 0001            __size_of_eval_poly 0118  
           ?i1_CANsendMessage 002D                    _data_brake 015B                ??_park_routine 01D8  
               ISR_Bassa@gigi 0052       __size_of_CANsendMessage 078C                    _data_speed 016B  
                  _activation 02A0            ??i1_CANsendMessage 0035      __size_of_can_interpreter 0054  
          __size_of_parallelo 0284          __size_of_park_search 01C0             _old_alignment_gap 013C  
                  ??_ISR_Alta 0067                       ?___flge 00C5                       ?___wmul 0077  
                     _CANSTAT 000F6E                  _CANisTxReady 6698                       _BRGCON1 000F70  
                     _BRGCON2 000F71                       _BRGCON3 000F72                     ?_can_send 002D  
                   ?___xxtofl 00CB        __size_of_CANInitialize 01C6                     ?_delay_ms 007D  
                     _RXB0DLC 000F65                       _RXB1DLC 000F55                       _RXB0CON 000F60  
                     _RXB1CON 000F50                       _TXB0DLC 000F45                       _TXB1DLC 000F35  
                     _TXB2DLC 000F25           CANsendMessage@flags 007E                       __Hparam 0000  
                  _left_speed 001F                       __Lparam 0000              delay_ms@value_ms 007D  
                     _Pminimo 0120               __size_of___flge 0190                    _matematica 2674  
                     ___fladd 310A                       ___fldiv 429A                       ___flneg 65D2  
                     ___flmul 35B2                       ___flsub 6512                       ___fltol 5F4C  
             __size_of___wmul 0036                       ___lwdiv 636A                  __psmallconst 0D00  
        CANInitialize@propSeg 008E                       __pcinit 63E2             __end_of_eval_poly 5F4C  
                     _delay_s 666C                       __ramtop 0D00                       __ptext0 621C  
                     __ptext1 588C                       __ptext2 3A58                       __ptext3 5022  
                     __ptext4 5BDC                       __ptext5 1858                       __ptext6 6698  
                     __ptext7 6640                       __ptext8 2674                       __ptext9 6058  
                   _T0CONbits 000FD5                i1_CANisTxReady 66BC                    ??_can_send 0087  
                __size_of_abs 002C                  __size_of_cos 00E4               atan@val_squared 0194  
                __size_of_sin 0318                    ??___xxtofl 00CF                       atan@val 0198  
           __end_of_parallelo 52A6                    ??_delay_ms 007F                       asin@sgn 01A0  
      CANreceiveMessage@error 0037               _start_operation 02AE                __pintcode_body 613C  
        end_of_initialization 6448                     i1u1120_20 22D8                     i1u1120_25 22CE  
                   i1u1121_20 231E                     i1u1121_25 2314                     i1u1122_25 236A  
                   i1u1107_20 20A8                     i1u1107_25 209E                     i1u1108_20 20EE  
                   i1u1108_25 20E4                     i1u1133_20 2508                     i1u1133_25 24FE  
                   i1u1109_25 213A                     i1u1134_20 254E                     i1u1134_25 2544  
                   i1u1135_25 259A                     i1u1165_27 0170                       int_func 613C  
               _CANInitialize 56C6                     _ISR_Bassa 0018                       postdec1 000FE5  
                     postdec2 000FDD                       postinc0 000FEE                       postinc2 000FDE  
                     sqrt@grs 0192                       sqrt@exp 0196             ??_can_interpreter 0077  
      __end_ofi1_CANisTxReady 66DA       _steering_correction_dir 02AF                     _PORTBbits 000F81  
              CANSetMask@mask 0077                CANSetMask@tamp 0081                  _distance_set 0110  
              CANSetMask@type 007B          __end_of_park_routine 3ED0                   ___fladd@grs 00BC  
               ___xxtofl@sign 00D3                     _TRISBbits 000F93                   ___fldiv@grs 008A  
                 ___fldiv@rem 0084                     _MUX_index 0029                    _pulse_time 0021  
     _clock_counter_reference 00E0                   ___flmul@grs 009E                _CANsendMessage 1858  
            CANInitialize@BRP 0088              CANInitialize@SJW 0087                ?_CANInitialize 0085  
         i1_CANisTxReady$2845 002D                    ?_ISR_Bassa 002D                   ?_matematica 002D  
              __end_of___flge 5BDC             __size_of_ISR_Alta 6214                __end_of___wmul 6640  
             ?i1_CANisTxReady 002D                    floor@expon 0193           start_initialization 63E2  
                  eval_poly@d 00C1                    eval_poly@n 00C3                    eval_poly@x 00BD  
                 __end_of_abs 666C                   __end_of_cos 613C                   __end_of_sin 4D10  
         CANSetMask@numBuffer 0080                 _data_speed_rx 0108        __end_of_CANsendMessage 1FE4  
           ?_CANOperationMode 002D                 _data_steering 0173                    frexp@value 0077  
          ??_CANOperationMode 0077             _distance_received 02A5    CANInitialize@FilterConfig1 008F  
  CANInitialize@FilterConfig2 0090           _steering_correction 002C                      ??___flge 00CD  
                    ??___wmul 007B                   __pdataBANK0 00E6                   __pdataBANK1 01E4  
            __CFG_LPT1OSC$OFF 000000     __size_ofi1_CANsendMessage 0690                     ___fladd@a 00AD  
                   ___fladd@b 00A9        CANInitialize@phaseSeg1 0085        CANInitialize@phaseSeg2 0086  
                   ___fldiv@a 007B                     ___fldiv@b 0077                     ___flmul@a 0094  
                   ___flmul@b 0090                   __pbssCOMRAM 0001                     ___flsub@a 0199  
                   ___flsub@b 0195                 __pcstackBANK0 0060                 __pcstackBANK1 018B  
                 _BRGCON2bits 000F71                   _BRGCON3bits 000F72             __size_of_can_send 0134  
           __size_of___xxtofl 01CE             __size_of_delay_ms 003A               ?_CANsendMessage 0077  
         __size_of_matematica 058A               ??_CANInitialize 008A                     _asin$3753 01B0  
                   _asin$3754 01A8                     _asin$3755 01A4                    sin@coeff_a 0D2D  
                  sin@coeff_b 0D41                 ??_park_search 01B6                 _alignment_gap 0011  
          CANSetFilter@filter 0077                     _data_test 017B              ___lwdiv@dividend 0060  
                  ISR_Bassa@i 0053                   ??_ISR_Bassa 003D                     __pintcode 0008  
                    ?___fladd 00A9                      ?___fldiv 0077                      ?___flneg 00BD  
                    ?___flmul 0090                      ?___flsub 0195                      ?___fltol 00C1  
       __size_of_park_routine 0478                      ?___lwdiv 0060                   __pintcodelo 0018  
                    ?_delay_s 002D                     _emergency 02A8                   __smallconst 0D00  
                 _COMSTATbits 000F74                     _eval_poly 5E34                     _larghezza 01E4  
            ___lwdiv@quotient 0065                __size_of_floor 0124                __size_of_frexp 0094  
     __size_of_configurazione 006C                     _parallelo 5022                  _new_distance 02AA  
       CANreceiveMessage@tamp 0038                _prima_sterzata 0140                ___wmul@product 007B  
                    _LATBbits 000F8A               _can_interpreter 64BE                     atan@recip 0193  
                _park_routine 3A58  _delay_quartz_frequency_value 00E8                      _IPR3bits 000FA5  
                    _PIE3bits 000FA3                      i1u733_20 2CB6                      i1u733_26 2CB8  
                    i1u734_20 2CE4                      i1u742_25 2E6A                      i1u734_26 2CE6  
                    i1u744_20 2F3E                      i1u736_25 2CFA                      i1u744_26 2F40  
                    i1u745_20 2F68                      i1u753_25 30E0                      i1u745_26 2F6A  
                    i1u747_25 2F7C                      _PIR3bits 000FA4                      _RXB0EIDH 000F63  
                    _RXB0EIDL 000F64                      _RXB1EIDH 000F53                      _RXB1EIDL 000F54  
                    _ISR_Alta 0008                     _set_speed 0025                      _RCONbits 000FD0  
            __CFG_WDTPS$32768 000000                      _RXB0SIDH 000F61                      _RXB0SIDL 000F62  
                    _RXF0EIDH 000F02                      _RXB1SIDH 000F51                      _RXF0EIDL 000F03  
                    _RXB1SIDL 000F52                      _RXF1EIDH 000F06                      _RXF1EIDL 000F07  
                    _RXF2EIDH 000F0A                      _RXF2EIDL 000F0B                      _RXF3EIDH 000F0E  
                    _RXF3EIDL 000F0F                      _RXF4EIDH 000F12                      _RXF4EIDL 000F13  
                    _RXF5EIDH 000F16                      _RXF5EIDL 000F17                      _RXF0SIDH 000F00  
                    _RXF0SIDL 000F01           __end_of_park_search 5A4C                      _TXB0EIDH 000F43  
                    _RXF1SIDH 000F04                      _TXB0EIDL 000F44                      _RXF1SIDL 000F05  
                    _TXB1EIDH 000F33                      _RXF2SIDH 000F08                      _TXB1EIDL 000F34  
                    _RXF2SIDL 000F09                      _TXB2EIDH 000F23                      _RXF3SIDH 000F0C  
                    _TXB2EIDL 000F24                      _RXF3SIDL 000F0D                      _RXF4SIDH 000F10  
                    _RXF4SIDL 000F11                      _RXF5SIDH 000F14                      _RXF5SIDL 000F15  
                    _RXM0EIDH 000F1A                      _RXM0EIDL 000F1B                      _TXB0SIDH 000F41  
                    _RXM1EIDH 000F1E                      _TXB0SIDL 000F42                      _RXM1EIDL 000F1F  
                    _TXB1SIDH 000F31                      _TXB1SIDL 000F32                      _TXB2SIDH 000F21  
                    _TXB2SIDL 000F22                      _RXM0SIDH 000F18                      _RXM0SIDL 000F19  
                    _RXM1SIDH 000F1C                      _RXM1SIDL 000F1D                   _distance_dx 001B  
                 _distance_sx 001D                      _RXERRCNT 000F75                      _TXERRCNT 000F76  
           ___wmul@multiplier 0077                    ?_eval_poly 00BD           __end_ofatan@coeff_a 0D19  
         __end_ofatan@coeff_b 0D2D                 ?_CANSetFilter 0077                   _INTCON2bits 000FF1  
                   copy_data0 641E                    _CANCONbits 000F6F                    ?_parallelo 002D  
            _distance_average 0019                     frexp@eptr 007B                      __Hparam0 0000  
                    __Lparam0 0000                  _RXB0SIDLbits 000F62                  _RXB1SIDLbits 000F52  
            ??i1_CANisTxReady 002D                  ??_matematica 00D9                 _request_sent1 02AD  
            __size_of___fladd 04A8                    _CANSetMask 465A              __size_of___fldiv 03C0  
            __size_of___flneg 0038              __size_of___flmul 04A6              __size_of___flsub 0048  
            __size_of___fltol 010C              i1_CANsendMessage 1FE4                      _cos$3756 01B8  
            __size_of___lwdiv 0078              __size_of_delay_s 002C                      _can_send 5BDC  
                    ___xxtofl 54F8                  _RXF0SIDLbits 000F01                      _delay_ms 6598  
             ___lwdiv@divisor 0062                  _RXF1SIDLbits 000F05               ___lwdiv@counter 0064  
       i1CANsendMessage@flags 0034                ??_CANSetFilter 007C                      __ptext10 49F8  
                    __ptext11 5D10                      __ptext20 65D2                      __ptext12 62D6  
                    __ptext21 5E34                      __ptext13 54F8                      __ptext30 56C6  
                    __ptext22 35B2                      __ptext14 5F4C                      __ptext31 465A  
                    __ptext23 310A                      __ptext15 6512                      __ptext40 636A  
                    __ptext32 0D52                      __ptext24 5A4C                      __ptext16 4D10  
                    __ptext33 66DA                      __ptext25 429A                      __ptext17 3ED0  
                    __ptext34 64BE                      __ptext26 666C                      __ptext18 52A6  
                    __ptext27 6598                      __ptext19 655A                      __ptext36 1FE4  
                    __ptext28 660A                      __ptext37 66BC                      __ptext29 6452  
                    __ptext38 2BFE                  _RXF2SIDLbits 000F09                      _sin$3757 01A5  
     __end_of_can_interpreter 6512                  _RXF3SIDLbits 000F0D                      _distance 00E2  
          __end_of_matematica 2BFE                  _RXF4SIDLbits 000F11                  _RXF5SIDLbits 000F15  
    CANsendMessage@dataLength 007D                 __size_of_fabs 003E                 __size_of_atan 0252  
               __size_of_asin 0312                 __size_of_main 00BA                 __size_of_sqrt 03CA  
                 _park_search 588C          CANreceiveMessage@msg 002D                  _TXB0SIDLbits 000F42  
                _TXB1SIDLbits 000F32                  _TXB2SIDLbits 000F22                      int$flags 0056  
   __size_of_CANOperationMode 0016                 ?_CANisTxReady 002D                   atan@coeff_a 0D01  
                 atan@coeff_b 0D19                   _RXB0DLCbits 000F65                   _RXB1DLCbits 000F55  
                _RXM0SIDLbits 000F19                   _RXB0CONbits 000F60                   _RXB1CONbits 000F50  
           _CANreceiveMessage 2BFE                  _RXM1SIDLbits 000F1D                    _INTCONbits 000FF2  
                 ??_eval_poly 00C5              ??_CANsendMessage 007F    i1CANsendMessage@dataLength 0033  
          ?_CANreceiveMessage 002D                  _request_sent 02AC                     sqrt@tfrac 018D  
              _configurazione 6452      CANsendMessage@identifier 0077                   ??_parallelo 01B4  
                    intlevel1 0000                      intlevel2 0000              CANSetFilter@tamp 0081  
            CANSetFilter@type 007B           ??_CANreceiveMessage 002F          i1CANsendMessage@data 0031  
         _old_data_correction 02AB          i1CANsendMessage@tamp 0039                   _TXB0DLCbits 000F45  
                 _right_speed 0023                   _TXB1DLCbits 000F35                   _TXB0CONbits 000F40  
                 _TXB2DLCbits 000F25                   _TXB1CONbits 000F30                   _TXB2CONbits 000F20  
        CANOperationMode@mode 0077                   ?_CANSetMask 0077                ??_CANisTxReady 0077  
              _distance_error 02A4               _matematica$3750 01D4               _matematica$3751 01CC  
             _matematica$3752 01D0               _matematica$3746 01BC               _matematica$3747 01C0  
             _matematica$3748 01C4               _matematica$3749 01C8     __end_of_CANreceiveMessage 310A  
                    sqrt@frac 019C                      sqrt@sign 018B                      sqrt@root 0198  
  i1CANsendMessage@identifier 002D                   _timerValue2 0027        __end_of_configurazione 64BE  
               ___fladd@signs 00B9                 _distance_wait 02A7              ?_can_interpreter 002D  
                ___fladd@aexp 00BA                  ___fladd@bexp 00BB         __end_of_CANInitialize 588C  
       _sensor_distance_short 0183           _sensor_distance_old 0118  
