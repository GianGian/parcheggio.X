

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun May 01 18:57:09 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2685
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    61                           	psect	param0,global,class=BANK0,space=1,delta=1
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    63  0000                     
    64                           	psect	idataCOMRAM
    65  005D8A                     __pidataCOMRAM:
    66                           	opt stack 0
    67                           
    68                           ;initializer for _spazio_parcheggio
    69  005D8A  0064               	dw	100
    70                           
    71                           	psect	idataBANK0
    72  005D8C                     __pidataBANK0:
    73                           	opt stack 0
    74                           
    75                           ;initializer for _delay_quartz_frequency_value
    76  005D8C  10                 	db	16
    77                           
    78                           	psect	idataBANK1
    79  005D82                     __pidataBANK1:
    80                           	opt stack 0
    81                           
    82                           ;initializer for _larghezza
    83  005D82  0000               	dw	0
    84  005D84  4200               	dw	16896
    85                           
    86                           ;initializer for _raggio
    87  005D86  0000               	dw	0
    88  005D88  4296               	dw	17046
    89                           
    90                           	psect	smallconst
    91  000D00                     __psmallconst:
    92                           	opt stack 0
    93  000D00  00                 	db	0
    94  000D01                     atan@coeff_a:
    95                           	opt stack 0
    96  000D01  3C06               	dw	15366
    97  000D03  4204               	dw	16900
    98  000D05  9F7D               	dw	40829
    99  000D07  426A               	dw	17002
   100  000D09  905C               	dw	36956
   101  000D0B  4201               	dw	16897
   102  000D0D  4D60               	dw	19808
   103  000D0F  40BB               	dw	16571
   104  000D11  EC51               	dw	60497
   105  000D13  3E47               	dw	15943
   106  000D15  8DDE               	dw	36318
   107  000D17  BB1F               	dw	47903
   108  000D19                     __end_ofatan@coeff_a:
   109                           	opt stack 0
   110  000D19                     atan@coeff_b:
   111                           	opt stack 0
   112  000D19  3C06               	dw	15366
   113  000D1B  4204               	dw	16900
   114  000D1D  59C0               	dw	22976
   115  000D1F  428B               	dw	17035
   116  000D21  0474               	dw	1140
   117  000D23  4244               	dw	16964
   118  000D25  9BF9               	dw	39929
   119  000D27  414F               	dw	16719
   120  000D29  0000               	dw	0
   121  000D2B  3F80               	dw	16256
   122  000D2D                     __end_ofatan@coeff_b:
   123                           	opt stack 0
   124  000D2D                     sin@coeff_a:
   125                           	opt stack 0
   126  000D2D  F3EC               	dw	62444
   127  000D2F  484A               	dw	18506
   128  000D31  9535               	dw	38197
   129  000D33  C795               	dw	51093
   130  000D35  C117               	dw	49431
   131  000D37  45DC               	dw	17884
   132  000D39  DBFD               	dw	56317
   133  000D3B  C36D               	dw	50029
   134  000D3D  B372               	dw	45938
   135  000D3F  4033               	dw	16435
   136  000D41                     __end_ofsin@coeff_a:
   137                           	opt stack 0
   138  000D41                     sin@coeff_b:
   139                           	opt stack 0
   140  000D41  342B               	dw	13355
   141  000D43  4801               	dw	18433
   142  000D45  9D7F               	dw	40319
   143  000D47  45B0               	dw	17840
   144  000D49  FFE7               	dw	65511
   145  000D4B  42D9               	dw	17113
   146  000D4D  0000               	dw	0
   147  000D4F  3F80               	dw	16256
   148  000D51                     __end_ofsin@coeff_b:
   149                           	opt stack 0
   150  0000                     _RXB1CON	set	3920
   151  0000                     _RXB1CONbits	set	3920
   152  0000                     _RXB1D0	set	3926
   153  0000                     _RXB1D1	set	3927
   154  0000                     _RXB1D2	set	3928
   155  0000                     _RXB1D3	set	3929
   156  0000                     _RXB1D4	set	3930
   157  0000                     _RXB1D5	set	3931
   158  0000                     _RXB1D6	set	3932
   159  0000                     _RXB1D7	set	3933
   160  0000                     _RXB1DLC	set	3925
   161  0000                     _RXB1DLCbits	set	3925
   162  0000                     _RXB1EIDH	set	3923
   163  0000                     _RXB1EIDL	set	3924
   164  0000                     _RXB1SIDH	set	3921
   165  0000                     _RXB1SIDL	set	3922
   166  0000                     _RXB1SIDLbits	set	3922
   167  0000                     _RXF0EIDH	set	3842
   168  0000                     _RXF0EIDL	set	3843
   169  0000                     _RXF0SIDH	set	3840
   170  0000                     _RXF0SIDL	set	3841
   171  0000                     _RXF0SIDLbits	set	3841
   172  0000                     _RXF1EIDH	set	3846
   173  0000                     _RXF1EIDL	set	3847
   174  0000                     _RXF1SIDH	set	3844
   175  0000                     _RXF1SIDL	set	3845
   176  0000                     _RXF1SIDLbits	set	3845
   177  0000                     _RXF2EIDH	set	3850
   178  0000                     _RXF2EIDL	set	3851
   179  0000                     _RXF2SIDH	set	3848
   180  0000                     _RXF2SIDL	set	3849
   181  0000                     _RXF2SIDLbits	set	3849
   182  0000                     _RXF3EIDH	set	3854
   183  0000                     _RXF3EIDL	set	3855
   184  0000                     _RXF3SIDH	set	3852
   185  0000                     _RXF3SIDL	set	3853
   186  0000                     _RXF3SIDLbits	set	3853
   187  0000                     _RXF4EIDH	set	3858
   188  0000                     _RXF4EIDL	set	3859
   189  0000                     _RXF4SIDH	set	3856
   190  0000                     _RXF4SIDL	set	3857
   191  0000                     _RXF4SIDLbits	set	3857
   192  0000                     _RXF5EIDH	set	3862
   193  0000                     _RXF5EIDL	set	3863
   194  0000                     _RXF5SIDH	set	3860
   195  0000                     _RXF5SIDL	set	3861
   196  0000                     _RXF5SIDLbits	set	3861
   197  0000                     _RXM0EIDH	set	3866
   198  0000                     _RXM0EIDL	set	3867
   199  0000                     _RXM0SIDH	set	3864
   200  0000                     _RXM0SIDL	set	3865
   201  0000                     _RXM0SIDLbits	set	3865
   202  0000                     _RXM1EIDH	set	3870
   203  0000                     _RXM1EIDL	set	3871
   204  0000                     _RXM1SIDH	set	3868
   205  0000                     _RXM1SIDL	set	3869
   206  0000                     _RXM1SIDLbits	set	3869
   207  0000                     _TXB0CONbits	set	3904
   208  0000                     _TXB0D0	set	3910
   209  0000                     _TXB0D1	set	3911
   210  0000                     _TXB0D2	set	3912
   211  0000                     _TXB0D3	set	3913
   212  0000                     _TXB0D4	set	3914
   213  0000                     _TXB0D5	set	3915
   214  0000                     _TXB0D6	set	3916
   215  0000                     _TXB0D7	set	3917
   216  0000                     _TXB0DLC	set	3909
   217  0000                     _TXB0DLCbits	set	3909
   218  0000                     _TXB0EIDH	set	3907
   219  0000                     _TXB0EIDL	set	3908
   220  0000                     _TXB0SIDH	set	3905
   221  0000                     _TXB0SIDL	set	3906
   222  0000                     _TXB0SIDLbits	set	3906
   223  0000                     _TXB1CONbits	set	3888
   224  0000                     _TXB1D0	set	3894
   225  0000                     _TXB1D1	set	3895
   226  0000                     _TXB1D2	set	3896
   227  0000                     _TXB1D3	set	3897
   228  0000                     _TXB1D4	set	3898
   229  0000                     _TXB1D5	set	3899
   230  0000                     _TXB1D6	set	3900
   231  0000                     _TXB1D7	set	3901
   232  0000                     _TXB1DLC	set	3893
   233  0000                     _TXB1DLCbits	set	3893
   234  0000                     _TXB1EIDH	set	3891
   235  0000                     _TXB1EIDL	set	3892
   236  0000                     _TXB1SIDH	set	3889
   237  0000                     _TXB1SIDL	set	3890
   238  0000                     _TXB1SIDLbits	set	3890
   239  0000                     _TXB2CONbits	set	3872
   240  0000                     _TXB2D0	set	3878
   241  0000                     _TXB2D1	set	3879
   242  0000                     _TXB2D2	set	3880
   243  0000                     _TXB2D3	set	3881
   244  0000                     _TXB2D4	set	3882
   245  0000                     _TXB2D5	set	3883
   246  0000                     _TXB2D6	set	3884
   247  0000                     _TXB2D7	set	3885
   248  0000                     _TXB2DLC	set	3877
   249  0000                     _TXB2DLCbits	set	3877
   250  0000                     _TXB2EIDH	set	3875
   251  0000                     _TXB2EIDL	set	3876
   252  0000                     _TXB2SIDH	set	3873
   253  0000                     _TXB2SIDL	set	3874
   254  0000                     _TXB2SIDLbits	set	3874
   255  0000                     _ADCON1	set	4033
   256  0000                     _BRGCON1	set	3952
   257  0000                     _BRGCON2	set	3953
   258  0000                     _BRGCON2bits	set	3953
   259  0000                     _BRGCON3	set	3954
   260  0000                     _BRGCON3bits	set	3954
   261  0000                     _CANCON	set	3951
   262  0000                     _CANCONbits	set	3951
   263  0000                     _CANSTAT	set	3950
   264  0000                     _COMSTATbits	set	3956
   265  0000                     _INTCON2bits	set	4081
   266  0000                     _INTCONbits	set	4082
   267  0000                     _IPR3bits	set	4005
   268  0000                     _LATA	set	3977
   269  0000                     _LATB	set	3978
   270  0000                     _LATBbits	set	3978
   271  0000                     _LATC	set	3979
   272  0000                     _PIE3bits	set	4003
   273  0000                     _PIR3bits	set	4004
   274  0000                     _PORTA	set	3968
   275  0000                     _PORTBbits	set	3969
   276  0000                     _RCONbits	set	4048
   277  0000                     _RXB0CON	set	3936
   278  0000                     _RXB0CONbits	set	3936
   279  0000                     _RXB0D0	set	3942
   280  0000                     _RXB0D1	set	3943
   281  0000                     _RXB0D2	set	3944
   282  0000                     _RXB0D3	set	3945
   283  0000                     _RXB0D4	set	3946
   284  0000                     _RXB0D5	set	3947
   285  0000                     _RXB0D6	set	3948
   286  0000                     _RXB0D7	set	3949
   287  0000                     _RXB0DLC	set	3941
   288  0000                     _RXB0DLCbits	set	3941
   289  0000                     _RXB0EIDH	set	3939
   290  0000                     _RXB0EIDL	set	3940
   291  0000                     _RXB0SIDH	set	3937
   292  0000                     _RXB0SIDL	set	3938
   293  0000                     _RXB0SIDLbits	set	3938
   294  0000                     _RXERRCNT	set	3957
   295  0000                     _T0CON	set	4053
   296  0000                     _T0CONbits	set	4053
   297  0000                     _T3CON	set	4017
   298  0000                     _TMR0H	set	4055
   299  0000                     _TMR0L	set	4054
   300  0000                     _TMR3H	set	4019
   301  0000                     _TMR3L	set	4018
   302  0000                     _TRISA	set	3986
   303  0000                     _TRISB	set	3987
   304  0000                     _TRISBbits	set	3987
   305  0000                     _TRISC	set	3988
   306  0000                     _TXERRCNT	set	3958
   307                           
   308                           ; #config settings
   309  000D51  00                 	db	0	; dummy byte at the end
   310  0000                     
   311                           	psect	cinit
   312  0059C2                     __pcinit:
   313                           	opt stack 0
   314  0059C2                     start_initialization:
   315                           	opt stack 0
   316  0059C2                     __initialization:
   317                           	opt stack 0
   318                           
   319                           ; Clear objects allocated to BANK1 (131 bytes)
   320  0059C2  EE01  F000         	lfsr	0,__pbssBANK1
   321  0059C6  0E83               	movlw	131
   322  0059C8                     clear_0:
   323  0059C8  6AEE               	clrf	postinc0,c
   324  0059CA  06E8               	decf	wreg,f,c
   325  0059CC  E1FD               	bnz	clear_0
   326                           
   327                           ; Clear objects allocated to BANK0 (16 bytes)
   328  0059CE  EE00  F0D7         	lfsr	0,__pbssBANK0
   329  0059D2  0E10               	movlw	16
   330  0059D4                     clear_1:
   331  0059D4  6AEE               	clrf	postinc0,c
   332  0059D6  06E8               	decf	wreg,f,c
   333  0059D8  E1FD               	bnz	clear_1
   334                           
   335                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   336  0059DA  6A45               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   337  0059DC  6A44               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   338                           
   339                           ; Clear objects allocated to COMRAM (32 bytes)
   340  0059DE  EE00  F024         	lfsr	0,__pbssCOMRAM
   341  0059E2  0E20               	movlw	32
   342  0059E4                     clear_2:
   343  0059E4  6AEE               	clrf	postinc0,c
   344  0059E6  06E8               	decf	wreg,f,c
   345  0059E8  E1FD               	bnz	clear_2
   346                           
   347                           ; Initialize objects allocated to BANK1 (8 bytes)
   348                           ; load TBLPTR registers with __pidataBANK1
   349  0059EA  0E82               	movlw	low __pidataBANK1
   350  0059EC  6EF6               	movwf	tblptrl,c
   351  0059EE  0E5D               	movlw	high __pidataBANK1
   352  0059F0  6EF7               	movwf	tblptrh,c
   353  0059F2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   354  0059F4  6EF8               	movwf	tblptru,c
   355  0059F6  EE01  F0D8         	lfsr	0,__pdataBANK1
   356  0059FA  EE10 F008          	lfsr	1,8
   357  0059FE                     copy_data0:
   358  0059FE  0009               	tblrd		*+
   359  005A00  CFF5 FFEE          	movff	tablat,postinc0
   360  005A04  50E5               	movf	postdec1,w,c
   361  005A06  50E1               	movf	fsr1l,w,c
   362  005A08  E1FA               	bnz	copy_data0
   363                           
   364                           ; Initialize objects allocated to BANK0 (1 bytes)
   365                           ; load TBLPTR registers with __pidataBANK0
   366  005A0A  0E8C               	movlw	low __pidataBANK0
   367  005A0C  6EF6               	movwf	tblptrl,c
   368  005A0E  0E5D               	movlw	high __pidataBANK0
   369  005A10  6EF7               	movwf	tblptrh,c
   370  005A12  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   371  005A14  6EF8               	movwf	tblptru,c
   372  005A16  0009               	tblrd		*+	;fetch initializer
   373  005A18  CFF5 F0E7          	movff	tablat,__pdataBANK0
   374                           
   375                           ; Initialize objects allocated to COMRAM (2 bytes)
   376                           ; load TBLPTR registers with __pidataCOMRAM
   377  005A1C  0E8A               	movlw	low __pidataCOMRAM
   378  005A1E  6EF6               	movwf	tblptrl,c
   379  005A20  0E5D               	movlw	high __pidataCOMRAM
   380  005A22  6EF7               	movwf	tblptrh,c
   381  005A24  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   382  005A26  6EF8               	movwf	tblptru,c
   383  005A28  0009               	tblrd		*+	;fetch initializer
   384  005A2A  CFF5 F046          	movff	tablat,__pdataCOMRAM
   385  005A2E  0009               	tblrd		*+	;fetch initializer
   386  005A30  CFF5 F047          	movff	tablat,__pdataCOMRAM+1
   387  005A34                     end_of_initialization:
   388                           	opt stack 0
   389  005A34                     __end_of__initialization:
   390                           	opt stack 0
   391  005A34  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   392  005A36  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   393  005A38  0100               	movlb	0
   394  005A3A  EFBB  F02D         	goto	_main	;jump to C main() function
   395                           tblptru	equ	0xFF8
   396                           tblptrh	equ	0xFF7
   397                           tblptrl	equ	0xFF6
   398                           tablat	equ	0xFF5
   399                           postinc0	equ	0xFEE
   400                           wreg	equ	0xFE8
   401                           postdec1	equ	0xFE5
   402                           fsr1l	equ	0xFE1
   403                           
   404                           	psect	bitbssCOMRAM
   405  000220                     __pbitbssCOMRAM:
   406                           	opt stack 0
   407  000220                     _activation:
   408                           	opt stack 0
   409  000220                     	ds	1
   410  000221                     _asd:
   411                           	opt stack 0
   412  000221                     	ds	1
   413  000222                     _dir:
   414                           	opt stack 0
   415  000222                     	ds	1
   416  000223                     _distance_error:
   417                           	opt stack 0
   418  000223                     	ds	1
   419  000224                     _distance_received:
   420                           	opt stack 0
   421  000224                     	ds	1
   422  000225                     _distance_received1:
   423                           	opt stack 0
   424  000225                     	ds	1
   425  000226                     _distance_wait:
   426                           	opt stack 0
   427  000226                     	ds	1
   428  000227                     _old_data_correction:
   429                           	opt stack 0
   430  000227                     	ds	1
   431  000228                     _request_sent:
   432                           	opt stack 0
   433  000228                     	ds	1
   434  000229                     _request_sent1:
   435                           	opt stack 0
   436  000229                     	ds	1
   437  00022A                     _start_operation:
   438                           	opt stack 0
   439  00022A                     	ds	1
   440  00022B                     _steering_correction_dir:
   441                           	opt stack 0
   442  00022B                     	ds	1
   443                           tblptru	equ	0xFF8
   444                           tblptrh	equ	0xFF7
   445                           tblptrl	equ	0xFF6
   446                           tablat	equ	0xFF5
   447                           postinc0	equ	0xFEE
   448                           wreg	equ	0xFE8
   449                           postdec1	equ	0xFE5
   450                           fsr1l	equ	0xFE1
   451                           
   452                           	psect	bssCOMRAM
   453  000024                     __pbssCOMRAM:
   454                           	opt stack 0
   455  000024                     _sensor_distance:
   456                           	opt stack 0
   457  000024                     	ds	16
   458  000034                     _distance_dx:
   459                           	opt stack 0
   460  000034                     	ds	2
   461  000036                     _distance_sx:
   462                           	opt stack 0
   463  000036                     	ds	2
   464  000038                     _left_speed:
   465                           	opt stack 0
   466  000038                     	ds	2
   467  00003A                     _pulse_time:
   468                           	opt stack 0
   469  00003A                     	ds	2
   470  00003C                     _right_speed:
   471                           	opt stack 0
   472  00003C                     	ds	2
   473  00003E                     _timerValue2:
   474                           	opt stack 0
   475  00003E                     	ds	2
   476  000040                     _MUX_index:
   477                           	opt stack 0
   478  000040                     	ds	1
   479  000041                     _asus:
   480                           	opt stack 0
   481  000041                     	ds	1
   482  000042                     _gianni:
   483                           	opt stack 0
   484  000042                     	ds	1
   485  000043                     _steering_correction:
   486                           	opt stack 0
   487  000043                     	ds	1
   488                           tblptru	equ	0xFF8
   489                           tblptrh	equ	0xFF7
   490                           tblptrl	equ	0xFF6
   491                           tablat	equ	0xFF5
   492                           postinc0	equ	0xFEE
   493                           wreg	equ	0xFE8
   494                           postdec1	equ	0xFE5
   495                           fsr1l	equ	0xFE1
   496                           
   497                           	psect	dataCOMRAM
   498  000046                     __pdataCOMRAM:
   499                           	opt stack 0
   500  000046                     _spazio_parcheggio:
   501                           	opt stack 0
   502  000046                     	ds	2
   503                           tblptru	equ	0xFF8
   504                           tblptrh	equ	0xFF7
   505                           tblptrl	equ	0xFF6
   506                           tablat	equ	0xFF5
   507                           postinc0	equ	0xFEE
   508                           wreg	equ	0xFE8
   509                           postdec1	equ	0xFE5
   510                           fsr1l	equ	0xFE1
   511                           
   512                           	psect	bssBANK0
   513  0000D7                     __pbssBANK0:
   514                           	opt stack 0
   515  0000D7                     _alignment_gap:
   516                           	opt stack 0
   517  0000D7                     	ds	4
   518  0000DB                     _z:
   519                           	opt stack 0
   520  0000DB                     	ds	4
   521  0000DF                     _actual_speed:
   522                           	opt stack 0
   523  0000DF                     	ds	2
   524  0000E1                     _clock_counter_reference:
   525                           	opt stack 0
   526  0000E1                     	ds	2
   527  0000E3                     _distance_average:
   528                           	opt stack 0
   529  0000E3                     	ds	2
   530  0000E5                     _set_speed:
   531                           	opt stack 0
   532  0000E5                     	ds	2
   533                           tblptru	equ	0xFF8
   534                           tblptrh	equ	0xFF7
   535                           tblptrl	equ	0xFF6
   536                           tablat	equ	0xFF5
   537                           postinc0	equ	0xFEE
   538                           wreg	equ	0xFE8
   539                           postdec1	equ	0xFE5
   540                           fsr1l	equ	0xFE1
   541                           
   542                           	psect	dataBANK0
   543  0000E7                     __pdataBANK0:
   544                           	opt stack 0
   545  0000E7                     _delay_quartz_frequency_value:
   546                           	opt stack 0
   547  0000E7                     	ds	1
   548                           tblptru	equ	0xFF8
   549                           tblptrh	equ	0xFF7
   550                           tblptrl	equ	0xFF6
   551                           tablat	equ	0xFF5
   552                           postinc0	equ	0xFEE
   553                           wreg	equ	0xFE8
   554                           postdec1	equ	0xFE5
   555                           fsr1l	equ	0xFE1
   556                           
   557                           	psect	bssBANK1
   558  000100                     __pbssBANK1:
   559                           	opt stack 0
   560  000100                     _MUX_select:
   561                           	opt stack 0
   562  000100                     	ds	8
   563  000108                     _data_speed_rx:
   564                           	opt stack 0
   565  000108                     	ds	8
   566  000110                     _distance_set:
   567                           	opt stack 0
   568  000110                     	ds	8
   569  000118                     _Pminimo:
   570                           	opt stack 0
   571  000118                     	ds	4
   572  00011C                     _alfa:
   573                           	opt stack 0
   574  00011C                     	ds	4
   575  000120                     _beta:
   576                           	opt stack 0
   577  000120                     	ds	4
   578  000124                     _bordo:
   579                           	opt stack 0
   580  000124                     	ds	4
   581  000128                     _jjj:
   582                           	opt stack 0
   583  000128                     	ds	4
   584  00012C                     _kkk:
   585                           	opt stack 0
   586  00012C                     	ds	4
   587  000130                     _n:
   588                           	opt stack 0
   589  000130                     	ds	4
   590  000134                     _old_alignment_gap:
   591                           	opt stack 0
   592  000134                     	ds	4
   593  000138                     _prima_sterzata:
   594                           	opt stack 0
   595  000138                     	ds	4
   596  00013C                     _x:
   597                           	opt stack 0
   598  00013C                     	ds	4
   599  000140                     _distance:
   600                           	opt stack 0
   601  000140                     	ds	2
   602  000142                     _errno:
   603                           	opt stack 0
   604  000142                     	ds	2
   605  000144                     _msg:
   606                           	opt stack 0
   607  000144                     	ds	15
   608  000153                     _data:
   609                           	opt stack 0
   610  000153                     	ds	8
   611  00015B                     _data_brake:
   612                           	opt stack 0
   613  00015B                     	ds	8
   614  000163                     _data_correction:
   615                           	opt stack 0
   616  000163                     	ds	8
   617  00016B                     _data_speed:
   618                           	opt stack 0
   619  00016B                     	ds	8
   620  000173                     _data_steering:
   621                           	opt stack 0
   622  000173                     	ds	8
   623  00017B                     _data_test:
   624                           	opt stack 0
   625  00017B                     	ds	8
   626                           tblptru	equ	0xFF8
   627                           tblptrh	equ	0xFF7
   628                           tblptrl	equ	0xFF6
   629                           tablat	equ	0xFF5
   630                           postinc0	equ	0xFEE
   631                           wreg	equ	0xFE8
   632                           postdec1	equ	0xFE5
   633                           fsr1l	equ	0xFE1
   634                           
   635                           	psect	dataBANK1
   636  0001D8                     __pdataBANK1:
   637                           	opt stack 0
   638  0001D8                     _larghezza:
   639                           	opt stack 0
   640  0001D8                     	ds	4
   641  0001DC                     _raggio:
   642                           	opt stack 0
   643  0001DC                     	ds	4
   644                           tblptru	equ	0xFF8
   645                           tblptrh	equ	0xFF7
   646                           tblptrl	equ	0xFF6
   647                           tablat	equ	0xFF5
   648                           postinc0	equ	0xFEE
   649                           wreg	equ	0xFE8
   650                           postdec1	equ	0xFE5
   651                           fsr1l	equ	0xFE1
   652                           
   653                           	psect	cstackBANK1
   654  000183                     __pcstackBANK1:
   655                           	opt stack 0
   656  000183                     sqrt@sign:
   657                           	opt stack 0
   658  000183                     ___xxtofl@sign:
   659                           	opt stack 0
   660  000183                     atan@y:
   661                           	opt stack 0
   662                           
   663                           ; 4 bytes @ 0x0
   664  000183                     	ds	1
   665  000184                     sqrt@i:
   666                           	opt stack 0
   667  000184                     ___xxtofl@exp:
   668                           	opt stack 0
   669                           
   670                           ; 1 bytes @ 0x1
   671  000184                     	ds	1
   672  000185                     sqrt@tfrac:
   673                           	opt stack 0
   674  000185                     ___xxtofl@arg:
   675                           	opt stack 0
   676                           
   677                           ; 4 bytes @ 0x2
   678  000185                     	ds	2
   679  000187                     atan@x:
   680                           	opt stack 0
   681                           
   682                           ; 4 bytes @ 0x4
   683  000187                     	ds	2
   684  000189                     sqrt@p:
   685                           	opt stack 0
   686  000189                     floor@i:
   687                           	opt stack 0
   688                           
   689                           ; 4 bytes @ 0x6
   690  000189                     	ds	1
   691  00018A                     sqrt@grs:
   692                           	opt stack 0
   693                           
   694                           ; 4 bytes @ 0x7
   695  00018A                     	ds	1
   696  00018B                     atan@recip:
   697                           	opt stack 0
   698                           
   699                           ; 1 bytes @ 0x8
   700  00018B                     	ds	1
   701  00018C                     atan@val_squared:
   702                           	opt stack 0
   703                           
   704                           ; 4 bytes @ 0x9
   705  00018C                     	ds	1
   706  00018D                     floor@expon:
   707                           	opt stack 0
   708                           
   709                           ; 2 bytes @ 0xA
   710  00018D                     	ds	1
   711  00018E                     sqrt@exp:
   712                           	opt stack 0
   713                           
   714                           ; 2 bytes @ 0xB
   715  00018E                     	ds	1
   716  00018F                     ?___flsub:
   717                           	opt stack 0
   718  00018F                     ___flsub@b:
   719                           	opt stack 0
   720                           
   721                           ; 4 bytes @ 0xC
   722  00018F                     	ds	1
   723  000190                     atan@val:
   724                           	opt stack 0
   725  000190                     sqrt@root:
   726                           	opt stack 0
   727                           
   728                           ; 4 bytes @ 0xD
   729  000190                     	ds	3
   730  000193                     ___flsub@a:
   731                           	opt stack 0
   732                           
   733                           ; 4 bytes @ 0x10
   734  000193                     	ds	1
   735  000194                     sqrt@frac:
   736                           	opt stack 0
   737                           
   738                           ; 4 bytes @ 0x11
   739  000194                     	ds	3
   740  000197                     ?_sin:
   741                           	opt stack 0
   742  000197                     sin@f:
   743                           	opt stack 0
   744                           
   745                           ; 4 bytes @ 0x14
   746  000197                     	ds	1
   747  000198                     ?_asin:
   748                           	opt stack 0
   749  000198                     asin@x:
   750                           	opt stack 0
   751                           
   752                           ; 4 bytes @ 0x15
   753  000198                     	ds	3
   754  00019B                     sin@y:
   755                           	opt stack 0
   756                           
   757                           ; 4 bytes @ 0x18
   758  00019B                     	ds	1
   759  00019C                     asin@sgn:
   760                           	opt stack 0
   761                           
   762                           ; 4 bytes @ 0x19
   763  00019C                     	ds	3
   764  00019F                     _sin$3750:
   765                           	opt stack 0
   766                           
   767                           ; 4 bytes @ 0x1C
   768  00019F                     	ds	1
   769  0001A0                     _asin$3748:
   770                           	opt stack 0
   771                           
   772                           ; 4 bytes @ 0x1D
   773  0001A0                     	ds	3
   774  0001A3                     sin@x2:
   775                           	opt stack 0
   776                           
   777                           ; 4 bytes @ 0x20
   778  0001A3                     	ds	1
   779  0001A4                     _asin$3747:
   780                           	opt stack 0
   781                           
   782                           ; 4 bytes @ 0x21
   783  0001A4                     	ds	3
   784  0001A7                     sin@sgn:
   785                           	opt stack 0
   786                           
   787                           ; 1 bytes @ 0x24
   788  0001A7                     	ds	1
   789  0001A8                     asin@y:
   790                           	opt stack 0
   791                           
   792                           ; 4 bytes @ 0x25
   793  0001A8                     	ds	4
   794  0001AC                     _asin$3746:
   795                           	opt stack 0
   796                           
   797                           ; 4 bytes @ 0x29
   798  0001AC                     	ds	4
   799  0001B0                     ??_park_search:
   800  0001B0                     ?_cos:
   801                           	opt stack 0
   802  0001B0                     cos@f:
   803                           	opt stack 0
   804                           
   805                           ; 4 bytes @ 0x2D
   806  0001B0                     	ds	4
   807  0001B4                     _cos$3749:
   808                           	opt stack 0
   809                           
   810                           ; 4 bytes @ 0x31
   811  0001B4                     	ds	4
   812  0001B8                     _matematica$3738:
   813                           	opt stack 0
   814                           
   815                           ; 4 bytes @ 0x35
   816  0001B8                     	ds	4
   817  0001BC                     _matematica$3739:
   818                           	opt stack 0
   819                           
   820                           ; 4 bytes @ 0x39
   821  0001BC                     	ds	4
   822  0001C0                     _matematica$3740:
   823                           	opt stack 0
   824                           
   825                           ; 4 bytes @ 0x3D
   826  0001C0                     	ds	4
   827  0001C4                     _matematica$3741:
   828                           	opt stack 0
   829                           
   830                           ; 4 bytes @ 0x41
   831  0001C4                     	ds	4
   832  0001C8                     _matematica$3742:
   833                           	opt stack 0
   834                           
   835                           ; 4 bytes @ 0x45
   836  0001C8                     	ds	4
   837  0001CC                     _matematica$3743:
   838                           	opt stack 0
   839                           
   840                           ; 4 bytes @ 0x49
   841  0001CC                     	ds	4
   842  0001D0                     _matematica$3744:
   843                           	opt stack 0
   844                           
   845                           ; 4 bytes @ 0x4D
   846  0001D0                     	ds	4
   847  0001D4                     _matematica$3745:
   848                           	opt stack 0
   849                           
   850                           ; 4 bytes @ 0x51
   851  0001D4                     	ds	4
   852                           tblptru	equ	0xFF8
   853                           tblptrh	equ	0xFF7
   854                           tblptrl	equ	0xFF6
   855                           tablat	equ	0xFF5
   856                           postinc0	equ	0xFEE
   857                           wreg	equ	0xFE8
   858                           postdec1	equ	0xFE5
   859                           fsr1l	equ	0xFE1
   860                           
   861                           	psect	cstackBANK0
   862  000060                     __pcstackBANK0:
   863                           	opt stack 0
   864  000060                     ?___lwdiv:
   865                           	opt stack 0
   866  000060                     ___lwdiv@dividend:
   867                           	opt stack 0
   868                           
   869                           ; 2 bytes @ 0x0
   870  000060                     	ds	2
   871  000062                     ___lwdiv@divisor:
   872                           	opt stack 0
   873                           
   874                           ; 2 bytes @ 0x2
   875  000062                     	ds	2
   876  000064                     ___lwdiv@counter:
   877                           	opt stack 0
   878                           
   879                           ; 1 bytes @ 0x4
   880  000064                     	ds	1
   881  000065                     ___lwdiv@quotient:
   882                           	opt stack 0
   883                           
   884                           ; 2 bytes @ 0x5
   885  000065                     	ds	2
   886  000067                     ??_ISR_Alta:
   887                           
   888                           ; 0 bytes @ 0x7
   889  000067                     	ds	16
   890  000077                     ??_can_interpreter:
   891  000077                     ?_abs:
   892                           	opt stack 0
   893  000077                     ?___wmul:
   894                           	opt stack 0
   895  000077                     ?___fldiv:
   896                           	opt stack 0
   897  000077                     CANOperationMode@mode:
   898                           	opt stack 0
   899  000077                     _CANisTxReady$2845:
   900                           	opt stack 0
   901  000077                     ___wmul@multiplier:
   902                           	opt stack 0
   903  000077                     abs@a:
   904                           	opt stack 0
   905  000077                     CANsendMessage@identifier:
   906                           	opt stack 0
   907  000077                     CANSetMask@mask:
   908                           	opt stack 0
   909  000077                     CANSetFilter@filter:
   910                           	opt stack 0
   911  000077                     ___fldiv@b:
   912                           	opt stack 0
   913  000077                     frexp@value:
   914                           	opt stack 0
   915                           
   916                           ; 4 bytes @ 0x17
   917  000077                     	ds	2
   918  000079                     ??_abs:
   919  000079                     ___wmul@multiplicand:
   920                           	opt stack 0
   921                           
   922                           ; 2 bytes @ 0x19
   923  000079                     	ds	2
   924  00007B                     CANSetMask@type:
   925                           	opt stack 0
   926  00007B                     CANSetFilter@type:
   927                           	opt stack 0
   928  00007B                     CANsendMessage@data:
   929                           	opt stack 0
   930  00007B                     ___wmul@product:
   931                           	opt stack 0
   932  00007B                     frexp@eptr:
   933                           	opt stack 0
   934  00007B                     ___fldiv@a:
   935                           	opt stack 0
   936                           
   937                           ; 4 bytes @ 0x1B
   938  00007B                     	ds	1
   939  00007C                     ??_CANSetMask:
   940  00007C                     ??_CANSetFilter:
   941                           
   942                           ; 0 bytes @ 0x1C
   943  00007C                     	ds	1
   944  00007D                     ??_frexp:
   945  00007D                     CANsendMessage@dataLength:
   946                           	opt stack 0
   947  00007D                     delay_ms@value_ms:
   948                           	opt stack 0
   949                           
   950                           ; 2 bytes @ 0x1D
   951  00007D                     	ds	1
   952  00007E                     CANsendMessage@flags:
   953                           	opt stack 0
   954                           
   955                           ; 1 bytes @ 0x1E
   956  00007E                     	ds	1
   957  00007F                     ??___fldiv:
   958  00007F                     ??_CANsendMessage:
   959  00007F                     delay_s@value_s:
   960                           	opt stack 0
   961                           
   962                           ; 1 bytes @ 0x1F
   963  00007F                     	ds	1
   964  000080                     CANSetMask@numBuffer:
   965                           	opt stack 0
   966  000080                     CANSetFilter@numBuffer:
   967                           	opt stack 0
   968  000080                     delay_s@repeat_loop:
   969                           	opt stack 0
   970                           
   971                           ; 1 bytes @ 0x20
   972  000080                     	ds	1
   973  000081                     CANSetMask@tamp:
   974                           	opt stack 0
   975  000081                     CANSetFilter@tamp:
   976                           	opt stack 0
   977                           
   978                           ; 4 bytes @ 0x21
   979  000081                     	ds	2
   980  000083                     ___fldiv@sign:
   981                           	opt stack 0
   982  000083                     CANsendMessage@tamp:
   983                           	opt stack 0
   984                           
   985                           ; 4 bytes @ 0x23
   986  000083                     	ds	1
   987  000084                     ___fldiv@rem:
   988                           	opt stack 0
   989                           
   990                           ; 4 bytes @ 0x24
   991  000084                     	ds	1
   992  000085                     CANInitialize@phaseSeg1:
   993                           	opt stack 0
   994                           
   995                           ; 1 bytes @ 0x25
   996  000085                     	ds	1
   997  000086                     CANInitialize@phaseSeg2:
   998                           	opt stack 0
   999                           
  1000                           ; 1 bytes @ 0x26
  1001  000086                     	ds	1
  1002  000087                     can_send@data_correction1:
  1003                           	opt stack 0
  1004  000087                     CANInitialize@SJW:
  1005                           	opt stack 0
  1006                           
  1007                           ; 1 bytes @ 0x27
  1008  000087                     	ds	1
  1009  000088                     CANInitialize@BRP:
  1010                           	opt stack 0
  1011  000088                     ___fldiv@new_exp:
  1012                           	opt stack 0
  1013                           
  1014                           ; 2 bytes @ 0x28
  1015  000088                     	ds	1
  1016  000089                     CANInitialize@flags:
  1017                           	opt stack 0
  1018                           
  1019                           ; 1 bytes @ 0x29
  1020  000089                     	ds	1
  1021  00008A                     ??_CANInitialize:
  1022  00008A                     ___fldiv@grs:
  1023                           	opt stack 0
  1024                           
  1025                           ; 4 bytes @ 0x2A
  1026  00008A                     	ds	4
  1027  00008E                     CANInitialize@propSeg:
  1028                           	opt stack 0
  1029  00008E                     ___fldiv@bexp:
  1030                           	opt stack 0
  1031                           
  1032                           ; 1 bytes @ 0x2E
  1033  00008E                     	ds	1
  1034  00008F                     CANInitialize@FilterConfig1:
  1035                           	opt stack 0
  1036  00008F                     ___fldiv@aexp:
  1037                           	opt stack 0
  1038                           
  1039                           ; 1 bytes @ 0x2F
  1040  00008F                     	ds	1
  1041  000090                     ?___flmul:
  1042                           	opt stack 0
  1043  000090                     CANInitialize@FilterConfig2:
  1044                           	opt stack 0
  1045  000090                     ___flmul@b:
  1046                           	opt stack 0
  1047                           
  1048                           ; 4 bytes @ 0x30
  1049  000090                     	ds	1
  1050  000091                     
  1051                           ; 0 bytes @ 0x31
  1052  000091                     	ds	3
  1053  000094                     ___flmul@a:
  1054                           	opt stack 0
  1055                           
  1056                           ; 4 bytes @ 0x34
  1057  000094                     	ds	4
  1058  000098                     ??___flmul:
  1059                           
  1060                           ; 0 bytes @ 0x38
  1061  000098                     	ds	4
  1062  00009C                     ___flmul@sign:
  1063                           	opt stack 0
  1064                           
  1065                           ; 1 bytes @ 0x3C
  1066  00009C                     	ds	1
  1067  00009D                     ___flmul@aexp:
  1068                           	opt stack 0
  1069                           
  1070                           ; 1 bytes @ 0x3D
  1071  00009D                     	ds	1
  1072  00009E                     ___flmul@grs:
  1073                           	opt stack 0
  1074                           
  1075                           ; 4 bytes @ 0x3E
  1076  00009E                     	ds	4
  1077  0000A2                     ___flmul@bexp:
  1078                           	opt stack 0
  1079                           
  1080                           ; 1 bytes @ 0x42
  1081  0000A2                     	ds	1
  1082  0000A3                     ___flmul@prod:
  1083                           	opt stack 0
  1084                           
  1085                           ; 4 bytes @ 0x43
  1086  0000A3                     	ds	4
  1087  0000A7                     ___flmul@temp:
  1088                           	opt stack 0
  1089                           
  1090                           ; 2 bytes @ 0x47
  1091  0000A7                     	ds	2
  1092  0000A9                     ?___flneg:
  1093                           	opt stack 0
  1094  0000A9                     ___flneg@f1:
  1095                           	opt stack 0
  1096                           
  1097                           ; 4 bytes @ 0x49
  1098  0000A9                     	ds	4
  1099  0000AD                     ?___fladd:
  1100                           	opt stack 0
  1101  0000AD                     ?_fabs:
  1102                           	opt stack 0
  1103  0000AD                     fabs@d:
  1104                           	opt stack 0
  1105  0000AD                     ___fladd@b:
  1106                           	opt stack 0
  1107                           
  1108                           ; 4 bytes @ 0x4D
  1109  0000AD                     	ds	4
  1110  0000B1                     ___flge@ff1:
  1111                           	opt stack 0
  1112  0000B1                     ___fladd@a:
  1113                           	opt stack 0
  1114                           
  1115                           ; 4 bytes @ 0x51
  1116  0000B1                     	ds	4
  1117  0000B5                     ??___fladd:
  1118  0000B5                     ___flge@ff2:
  1119                           	opt stack 0
  1120                           
  1121                           ; 4 bytes @ 0x55
  1122  0000B5                     	ds	4
  1123  0000B9                     ??___flge:
  1124                           
  1125                           ; 0 bytes @ 0x59
  1126  0000B9                     	ds	4
  1127  0000BD                     ___fladd@signs:
  1128                           	opt stack 0
  1129                           
  1130                           ; 1 bytes @ 0x5D
  1131  0000BD                     	ds	1
  1132  0000BE                     ___fladd@aexp:
  1133                           	opt stack 0
  1134                           
  1135                           ; 1 bytes @ 0x5E
  1136  0000BE                     	ds	1
  1137  0000BF                     ___fladd@bexp:
  1138                           	opt stack 0
  1139                           
  1140                           ; 1 bytes @ 0x5F
  1141  0000BF                     	ds	1
  1142  0000C0                     ___fladd@grs:
  1143                           	opt stack 0
  1144                           
  1145                           ; 1 bytes @ 0x60
  1146  0000C0                     	ds	1
  1147  0000C1                     ?_sqrt:
  1148                           	opt stack 0
  1149  0000C1                     ?_eval_poly:
  1150                           	opt stack 0
  1151  0000C1                     ?___fltol:
  1152                           	opt stack 0
  1153  0000C1                     eval_poly@x:
  1154                           	opt stack 0
  1155  0000C1                     ___fltol@f1:
  1156                           	opt stack 0
  1157  0000C1                     sqrt@a:
  1158                           	opt stack 0
  1159                           
  1160                           ; 4 bytes @ 0x61
  1161  0000C1                     	ds	4
  1162  0000C5                     ??_sqrt:
  1163  0000C5                     ??___fltol:
  1164  0000C5                     eval_poly@d:
  1165                           	opt stack 0
  1166                           
  1167                           ; 2 bytes @ 0x65
  1168  0000C5                     	ds	2
  1169  0000C7                     eval_poly@n:
  1170                           	opt stack 0
  1171                           
  1172                           ; 2 bytes @ 0x67
  1173  0000C7                     	ds	2
  1174  0000C9                     ??_eval_poly:
  1175  0000C9                     ___fltol@sign1:
  1176                           	opt stack 0
  1177                           
  1178                           ; 1 bytes @ 0x69
  1179  0000C9                     	ds	1
  1180  0000CA                     ___fltol@exp1:
  1181                           	opt stack 0
  1182                           
  1183                           ; 1 bytes @ 0x6A
  1184  0000CA                     	ds	1
  1185  0000CB                     ?___xxtofl:
  1186                           	opt stack 0
  1187  0000CB                     ___xxtofl@val:
  1188                           	opt stack 0
  1189                           
  1190                           ; 4 bytes @ 0x6B
  1191  0000CB                     	ds	2
  1192  0000CD                     eval_poly@res:
  1193                           	opt stack 0
  1194                           
  1195                           ; 4 bytes @ 0x6D
  1196  0000CD                     	ds	2
  1197  0000CF                     ??___xxtofl:
  1198                           
  1199                           ; 0 bytes @ 0x6F
  1200  0000CF                     	ds	2
  1201  0000D1                     ?_atan:
  1202                           	opt stack 0
  1203  0000D1                     atan@f:
  1204                           	opt stack 0
  1205                           
  1206                           ; 4 bytes @ 0x71
  1207  0000D1                     	ds	2
  1208  0000D3                     ?_floor:
  1209                           	opt stack 0
  1210  0000D3                     floor@x:
  1211                           	opt stack 0
  1212                           
  1213                           ; 4 bytes @ 0x73
  1214  0000D3                     	ds	2
  1215  0000D5                     ??_parallelo:
  1216  0000D5                     
  1217                           ; 0 bytes @ 0x75
  1218  0000D5                     	ds	2
  1219  0000D7                     tblptru	equ	0xFF8
  1220                           tblptrh	equ	0xFF7
  1221                           tblptrl	equ	0xFF6
  1222                           tablat	equ	0xFF5
  1223                           postinc0	equ	0xFEE
  1224                           wreg	equ	0xFE8
  1225                           postdec1	equ	0xFE5
  1226                           fsr1l	equ	0xFE1
  1227                           
  1228                           ; 0 bytes @ 0x77
  1229                           
  1230                           	psect	cstackCOMRAM
  1231  000001                     __pcstackCOMRAM:
  1232                           	opt stack 0
  1233  000001                     CANreceiveMessage@msg:
  1234                           	opt stack 0
  1235                           
  1236                           ; 2 bytes @ 0x0
  1237  000001                     	ds	2
  1238  000003                     ??_CANreceiveMessage:
  1239                           
  1240                           ; 0 bytes @ 0x2
  1241  000003                     	ds	8
  1242  00000B                     CANreceiveMessage@error:
  1243                           	opt stack 0
  1244                           
  1245                           ; 1 bytes @ 0xA
  1246  00000B                     	ds	1
  1247  00000C                     CANreceiveMessage@tamp:
  1248                           	opt stack 0
  1249                           
  1250                           ; 1 bytes @ 0xB
  1251  00000C                     	ds	1
  1252  00000D                     ??_ISR_Bassa:
  1253                           
  1254                           ; 0 bytes @ 0xC
  1255  00000D                     	ds	21
  1256  000022                     ISR_Bassa@gigi:
  1257                           	opt stack 0
  1258                           
  1259                           ; 1 bytes @ 0x21
  1260  000022                     	ds	1
  1261  000023                     ISR_Bassa@i:
  1262                           	opt stack 0
  1263                           
  1264                           ; 1 bytes @ 0x22
  1265  000023                     	ds	1
  1266                           tblptru	equ	0xFF8
  1267                           tblptrh	equ	0xFF7
  1268                           tblptrl	equ	0xFF6
  1269                           tablat	equ	0xFF5
  1270                           postinc0	equ	0xFEE
  1271                           wreg	equ	0xFE8
  1272                           postdec1	equ	0xFE5
  1273                           fsr1l	equ	0xFE1
  1274                           
  1275 ;;
  1276 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1277 ;;
  1278 ;; *************** function _main *****************
  1279 ;; Defined at:
  1280 ;;		line 186 in file "parcheggio.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;		None
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;		None
  1285 ;; Return value:  Size  Location     Type
  1286 ;;		None               void
  1287 ;; Registers used:
  1288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1298 ;;Total ram usage:        0 bytes
  1299 ;; Hardware stack levels required when called:   10
  1300 ;; This function calls:
  1301 ;;		_can_interpreter
  1302 ;;		_configurazione
  1303 ;;		_park_routine
  1304 ;;		_park_search
  1305 ;; This function is called by:
  1306 ;;		Startup code after reset
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           	psect	text0
  1311  005B76                     __ptext0:
  1312                           	opt stack 0
  1313  005B76                     _main:
  1314                           	opt stack 21
  1315                           
  1316                           ;parcheggio.c: 187: MUX_select[0] = 0b00000000;
  1317                           
  1318                           ; BSR set to: 15
  1319                           ;incstack = 0
  1320  005B76  0E00               	movlw	0
  1321  005B78  0101               	movlb	1	; () banked
  1322  005B7A  6F00               	movwf	_MUX_select& (0+255),b
  1323                           
  1324                           ;parcheggio.c: 188: MUX_select[1] = 0b00000001;
  1325  005B7C  0E01               	movlw	1
  1326  005B7E  0101               	movlb	1	; () banked
  1327  005B80  6F01               	movwf	(_MUX_select+1)& (0+255),b
  1328                           
  1329                           ;parcheggio.c: 189: MUX_select[2] = 0b00000010;
  1330  005B82  0E02               	movlw	2
  1331  005B84  0101               	movlb	1	; () banked
  1332  005B86  6F02               	movwf	(_MUX_select+2)& (0+255),b
  1333                           
  1334                           ;parcheggio.c: 190: MUX_select[3] = 0b00000011;
  1335  005B88  0E03               	movlw	3
  1336  005B8A  0101               	movlb	1	; () banked
  1337  005B8C  6F03               	movwf	(_MUX_select+3)& (0+255),b
  1338                           
  1339                           ;parcheggio.c: 191: MUX_select[4] = 0b00000100;
  1340  005B8E  0E04               	movlw	4
  1341  005B90  0101               	movlb	1	; () banked
  1342  005B92  6F04               	movwf	(_MUX_select+4)& (0+255),b
  1343                           
  1344                           ;parcheggio.c: 192: MUX_select[5] = 0b00000101;
  1345  005B94  0E05               	movlw	5
  1346  005B96  0101               	movlb	1	; () banked
  1347  005B98  6F05               	movwf	(_MUX_select+5)& (0+255),b
  1348                           
  1349                           ;parcheggio.c: 193: MUX_select[6] = 0b00000110;
  1350  005B9A  0E06               	movlw	6
  1351  005B9C  0101               	movlb	1	; () banked
  1352  005B9E  6F06               	movwf	(_MUX_select+6)& (0+255),b
  1353                           
  1354                           ;parcheggio.c: 194: MUX_select[7] = 0b00000111;
  1355  005BA0  0E07               	movlw	7
  1356  005BA2  0101               	movlb	1	; () banked
  1357  005BA4  6F07               	movwf	(_MUX_select+7)& (0+255),b
  1358                           
  1359                           ; BSR set to: 1
  1360                           ;parcheggio.c: 195: configurazione();
  1361  005BA6  EC5B  F02D         	call	_configurazione	;wreg free
  1362                           
  1363                           ;parcheggio.c: 196: PORTBbits.RB4 = 0;
  1364  005BAA  9881               	bcf	3969,4,c	;volatile
  1365                           
  1366                           ;parcheggio.c: 197: PORTBbits.RB5 = 0;
  1367  005BAC  9A81               	bcf	3969,5,c	;volatile
  1368                           
  1369                           ;parcheggio.c: 198: PORTBbits.RB6 = 0;
  1370  005BAE  9C81               	bcf	3969,6,c	;volatile
  1371                           
  1372                           ;parcheggio.c: 199: request_sent = 0;
  1373  005BB0  9045               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1374                           
  1375                           ;parcheggio.c: 200: start_operation = 0;
  1376  005BB2  9445               	bcf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  1377  005BB4                     l7197:
  1378                           
  1379                           ;parcheggio.c: 216: park_search();
  1380  005BB4  ECDA  F027         	call	_park_search	;wreg free
  1381                           
  1382                           ;parcheggio.c: 217: can_interpreter();
  1383  005BB8  EC91  F02D         	call	_can_interpreter	;wreg free
  1384                           
  1385                           ;parcheggio.c: 218: park_routine();
  1386  005BBC  EC32  F022         	call	_park_routine	;wreg free
  1387  005BC0  D7F9               	goto	l7197
  1388  005BC2                     __end_of_main:
  1389                           	opt stack 0
  1390                           tblptru	equ	0xFF8
  1391                           tblptrh	equ	0xFF7
  1392                           tblptrl	equ	0xFF6
  1393                           tablat	equ	0xFF5
  1394                           postinc0	equ	0xFEE
  1395                           wreg	equ	0xFE8
  1396                           postdec1	equ	0xFE5
  1397                           fsr1l	equ	0xFE1
  1398                           
  1399 ;; *************** function _park_search *****************
  1400 ;; Defined at:
  1401 ;;		line 222 in file "parcheggio.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;		None
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;		None
  1406 ;; Return value:  Size  Location     Type
  1407 ;;		None               void
  1408 ;; Registers used:
  1409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1417 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1418 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1419 ;;Total ram usage:        2 bytes
  1420 ;; Hardware stack levels used:    1
  1421 ;; Hardware stack levels required when called:    9
  1422 ;; This function calls:
  1423 ;;		_CANisTxReady
  1424 ;;		_CANsendMessage
  1425 ;;		___xxtofl
  1426 ;;		_abs
  1427 ;;		_parallelo
  1428 ;; This function is called by:
  1429 ;;		_main
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432                           
  1433                           	psect	text1
  1434  004FB4                     __ptext1:
  1435                           	opt stack 0
  1436  004FB4                     _park_search:
  1437                           	opt stack 21
  1438                           
  1439                           ;parcheggio.c: 223: while ((activation == 1) && (PORTBbits.RB5 == 0)) {
  1440                           
  1441                           ;incstack = 0
  1442  004FB4  D0CE               	goto	l718
  1443  004FB6                     l6983:
  1444                           
  1445                           ;parcheggio.c: 224: parallelo();
  1446  004FB6  ECA1  F023         	call	_parallelo	;wreg free
  1447                           
  1448                           ;parcheggio.c: 225: if (sensor_distance[0] > 50) {
  1449  004FBA  5025               	movf	_sensor_distance+1,w,c	;volatile
  1450  004FBC  E104               	bnz	u8800
  1451  004FBE  0E33               	movlw	51
  1452  004FC0  5C24               	subwf	_sensor_distance,w,c	;volatile
  1453  004FC2  A0D8               	btfss	status,0,c
  1454  004FC4  D02A               	goto	l720
  1455  004FC6                     u8800:
  1456                           
  1457                           ;parcheggio.c: 226: if (request_sent == 0) {
  1458  004FC6  B045               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1459  004FC8  D057               	goto	l7003
  1460  004FCA                     l6991:
  1461  004FCA  ECA4  F02E         	call	_CANisTxReady	;wreg free
  1462  004FCE  0900               	iorlw	0
  1463  004FD0  B4D8               	btfsc	status,2,c
  1464  004FD2  D7FB               	goto	l6991
  1465                           
  1466                           ;parcheggio.c: 228: CANsendMessage(0b00000001000, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1467  004FD4  0E08               	movlw	8
  1468  004FD6  0100               	movlb	0	; () banked
  1469  004FD8  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1470  004FDA  0E00               	movlw	0
  1471  004FDC  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1472  004FDE  0E00               	movlw	0
  1473  004FE0  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1474  004FE2  0E00               	movlw	0
  1475  004FE4  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1476  004FE6  0E53               	movlw	low _data
  1477  004FE8  0100               	movlb	0	; () banked
  1478  004FEA  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1479  004FEC  0E01               	movlw	high _data
  1480  004FEE  0100               	movlb	0	; () banked
  1481  004FF0  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1482  004FF2  0E08               	movlw	8
  1483  004FF4  0100               	movlb	0	; () banked
  1484  004FF6  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1485  004FF8  0EFC               	movlw	252
  1486  004FFA  0100               	movlb	0	; () banked
  1487  004FFC  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1488  004FFE  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1489                           
  1490                           ;parcheggio.c: 229: request_sent = 1;
  1491  005002  8045               	bsf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1492                           
  1493                           ;parcheggio.c: 230: alignment_gap = 0;
  1494  005004  0E00               	movlw	0
  1495  005006  0100               	movlb	0	; () banked
  1496  005008  6FD7               	movwf	_alignment_gap& (0+255),b
  1497  00500A  0E00               	movlw	0
  1498  00500C  6FD8               	movwf	(_alignment_gap+1)& (0+255),b
  1499  00500E  0E00               	movlw	0
  1500  005010  6FD9               	movwf	(_alignment_gap+2)& (0+255),b
  1501  005012  0E00               	movlw	0
  1502  005014  6FDA               	movwf	(_alignment_gap+3)& (0+255),b
  1503                           
  1504                           ; BSR set to: 0
  1505                           ;parcheggio.c: 231: LATBbits.LATB4 = 1;
  1506  005016  888A               	bsf	3978,4,c	;volatile
  1507                           
  1508                           ; BSR set to: 0
  1509                           ;parcheggio.c: 232: }
  1510                           ;parcheggio.c: 233: } else {
  1511  005018  D02F               	goto	l7003
  1512  00501A                     l720:
  1513                           
  1514                           ;parcheggio.c: 234: LATBbits.LATB4 = 0;
  1515  00501A  988A               	bcf	3978,4,c	;volatile
  1516                           
  1517                           ;parcheggio.c: 235: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  1518  00501C  EE20  F026         	lfsr	2,_sensor_distance+2	;volatile
  1519  005020  CFDE F1B0          	movff	postinc2,??_park_search
  1520  005024  CFDD F1B1          	movff	postdec2,??_park_search+1
  1521  005028  0101               	movlb	1	; () banked
  1522  00502A  1FB0               	comf	??_park_search& (0+255),f,b
  1523  00502C  1FB1               	comf	(??_park_search+1)& (0+255),f,b
  1524  00502E  4BB0               	infsnz	??_park_search& (0+255),f,b
  1525  005030  2BB1               	incf	(??_park_search+1)& (0+255),f,b
  1526  005032  5024               	movf	_sensor_distance,w,c	;volatile
  1527  005034  0101               	movlb	1	; () banked
  1528  005036  25B0               	addwf	??_park_search& (0+255),w,b
  1529  005038  0100               	movlb	0	; () banked
  1530  00503A  6F77               	movwf	abs@a& (0+255),b
  1531  00503C  5025               	movf	_sensor_distance+1,w,c	;volatile
  1532  00503E  0101               	movlb	1	; () banked
  1533  005040  21B1               	addwfc	(??_park_search+1)& (0+255),w,b
  1534  005042  0100               	movlb	0	; () banked
  1535  005044  6F78               	movwf	(abs@a+1)& (0+255),b
  1536  005046  EC78  F02E         	call	_abs	;wreg free
  1537  00504A  0100               	movlb	0	; () banked
  1538  00504C  C077  F0CB         	movff	?_abs,___xxtofl@val
  1539  005050  0100               	movlb	0	; () banked
  1540  005052  C078  F0CC         	movff	?_abs+1,___xxtofl@val+1
  1541  005056  0100               	movlb	0	; () banked
  1542  005058  0E00               	movlw	0
  1543  00505A  BFCC               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1544  00505C  0EFF               	movlw	-1
  1545  00505E  6FCD               	movwf	(___xxtofl@val+2)& (0+255),b
  1546  005060  6FCE               	movwf	(___xxtofl@val+3)& (0+255),b
  1547  005062  0E01               	movlw	1
  1548  005064  EC10  F026         	call	___xxtofl
  1549  005068  C0CB  F0D7         	movff	?___xxtofl,_alignment_gap
  1550  00506C  C0CC  F0D8         	movff	?___xxtofl+1,_alignment_gap+1
  1551  005070  C0CD  F0D9         	movff	?___xxtofl+2,_alignment_gap+2
  1552  005074  C0CE  F0DA         	movff	?___xxtofl+3,_alignment_gap+3
  1553  005078                     l7003:
  1554                           
  1555                           ;parcheggio.c: 236: }
  1556                           ;parcheggio.c: 237: if ((sensor_distance[0] < 50) && (request_sent == 1)) {
  1557  005078  5025               	movf	_sensor_distance+1,w,c	;volatile
  1558  00507A  E122               	bnz	l7013
  1559  00507C  0E32               	movlw	50
  1560  00507E  5C24               	subwf	_sensor_distance,w,c	;volatile
  1561  005080  A0D8               	btfss	status,0,c
  1562  005082  A045               	btfss	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1563  005084  D01D               	goto	l7013
  1564                           
  1565                           ;parcheggio.c: 238: request_sent = 0;
  1566  005086  9045               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1567  005088                     l7009:
  1568  005088  ECA4  F02E         	call	_CANisTxReady	;wreg free
  1569  00508C  0900               	iorlw	0
  1570  00508E  B4D8               	btfsc	status,2,c
  1571  005090  D7FB               	goto	l7009
  1572                           
  1573                           ;parcheggio.c: 240: CANsendMessage(0b00000000111, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1574  005092  0E07               	movlw	7
  1575  005094  0100               	movlb	0	; () banked
  1576  005096  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1577  005098  0E00               	movlw	0
  1578  00509A  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1579  00509C  0E00               	movlw	0
  1580  00509E  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1581  0050A0  0E00               	movlw	0
  1582  0050A2  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1583  0050A4  0E53               	movlw	low _data
  1584  0050A6  0100               	movlb	0	; () banked
  1585  0050A8  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1586  0050AA  0E01               	movlw	high _data
  1587  0050AC  0100               	movlb	0	; () banked
  1588  0050AE  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1589  0050B0  0E08               	movlw	8
  1590  0050B2  0100               	movlb	0	; () banked
  1591  0050B4  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1592  0050B6  0EFC               	movlw	252
  1593  0050B8  0100               	movlb	0	; () banked
  1594  0050BA  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1595  0050BC  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1596  0050C0                     l7013:
  1597                           
  1598                           ;parcheggio.c: 241: }
  1599                           ;parcheggio.c: 242: if (distance_received == 1) {
  1600  0050C0  A844               	btfss	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1601  0050C2  D047               	goto	l718
  1602                           
  1603                           ;parcheggio.c: 243: if (distance_average > 55) {
  1604  0050C4  0100               	movlb	0	; () banked
  1605  0050C6  51E4               	movf	(_distance_average+1)& (0+255),w,b	;volatile
  1606  0050C8  E105               	bnz	u8870
  1607  0050CA  0E38               	movlw	56
  1608  0050CC  0100               	movlb	0	; () banked
  1609  0050CE  5DE3               	subwf	_distance_average& (0+255),w,b	;volatile
  1610  0050D0  A0D8               	btfss	status,0,c
  1611  0050D2  D03D               	goto	l731
  1612  0050D4                     u8870:
  1613                           
  1614                           ; BSR set to: 0
  1615                           ;parcheggio.c: 244: PORTBbits.RB5 = 1;
  1616  0050D4  8A81               	bsf	3969,5,c	;volatile
  1617                           
  1618                           ; BSR set to: 0
  1619                           ;parcheggio.c: 245: data[0] = 1;
  1620  0050D6  0E01               	movlw	1
  1621  0050D8  0101               	movlb	1	; () banked
  1622  0050DA  6F53               	movwf	_data& (0+255),b
  1623                           
  1624                           ; BSR set to: 1
  1625                           ;parcheggio.c: 246: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  1626  0050DC  0E0B               	movlw	11
  1627  0050DE  0100               	movlb	0	; () banked
  1628  0050E0  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1629  0050E2  0E00               	movlw	0
  1630  0050E4  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1631  0050E6  0E00               	movlw	0
  1632  0050E8  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1633  0050EA  0E00               	movlw	0
  1634  0050EC  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1635  0050EE  0E53               	movlw	low _data
  1636  0050F0  0100               	movlb	0	; () banked
  1637  0050F2  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1638  0050F4  0E01               	movlw	high _data
  1639  0050F6  0100               	movlb	0	; () banked
  1640  0050F8  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1641  0050FA  0E01               	movlw	1
  1642  0050FC  0100               	movlb	0	; () banked
  1643  0050FE  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1644  005100  0EBC               	movlw	188
  1645  005102  0100               	movlb	0	; () banked
  1646  005104  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1647  005106  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1648                           
  1649                           ;parcheggio.c: 247: if ((request_sent1 == 0)&&(sensor_distance[0] < 40)) {
  1650  00510A  B245               	btfsc	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1651  00510C  D022               	goto	l718
  1652  00510E  5025               	movf	_sensor_distance+1,w,c	;volatile
  1653  005110  E120               	bnz	l718
  1654  005112  0E28               	movlw	40
  1655  005114  5C24               	subwf	_sensor_distance,w,c	;volatile
  1656  005116  B0D8               	btfsc	status,0,c
  1657  005118  D01C               	goto	l718
  1658                           
  1659                           ;parcheggio.c: 248: CANsendMessage(0b00000001000, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1660  00511A  0E08               	movlw	8
  1661  00511C  0100               	movlb	0	; () banked
  1662  00511E  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1663  005120  0E00               	movlw	0
  1664  005122  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1665  005124  0E00               	movlw	0
  1666  005126  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1667  005128  0E00               	movlw	0
  1668  00512A  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1669  00512C  0E53               	movlw	low _data
  1670  00512E  0100               	movlb	0	; () banked
  1671  005130  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1672  005132  0E01               	movlw	high _data
  1673  005134  0100               	movlb	0	; () banked
  1674  005136  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1675  005138  0E08               	movlw	8
  1676  00513A  0100               	movlb	0	; () banked
  1677  00513C  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1678  00513E  0EFC               	movlw	252
  1679  005140  0100               	movlb	0	; () banked
  1680  005142  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1681  005144  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1682                           
  1683                           ;parcheggio.c: 249: distance_received1 = 0;
  1684  005148  9A44               	bcf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
  1685                           
  1686                           ;parcheggio.c: 250: request_sent1 = 1;
  1687  00514A  8245               	bsf	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1688                           
  1689                           ;parcheggio.c: 251: }
  1690                           ;parcheggio.c: 252: } else {
  1691  00514C  D002               	goto	l718
  1692  00514E                     l731:
  1693                           
  1694                           ; BSR set to: 0
  1695                           ;parcheggio.c: 253: distance_received = 0;
  1696  00514E  9844               	bcf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1697                           
  1698                           ;parcheggio.c: 254: PORTBbits.RB5 = 0;
  1699  005150  9A81               	bcf	3969,5,c	;volatile
  1700  005152                     l718:
  1701  005152  A044               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1702  005154  0012               	return	
  1703  005156  BA81               	btfsc	3969,5,c	;volatile
  1704  005158  0012               	return	
  1705  00515A  D72D               	goto	l6983
  1706  00515C                     __end_of_park_search:
  1707                           	opt stack 0
  1708                           tblptru	equ	0xFF8
  1709                           tblptrh	equ	0xFF7
  1710                           tblptrl	equ	0xFF6
  1711                           tablat	equ	0xFF5
  1712                           postinc0	equ	0xFEE
  1713                           wreg	equ	0xFE8
  1714                           postdec1	equ	0xFE5
  1715                           fsr1l	equ	0xFE1
  1716                           postinc2	equ	0xFDE
  1717                           postdec2	equ	0xFDD
  1718                           status	equ	0xFD8
  1719                           
  1720 ;; *************** function _parallelo *****************
  1721 ;; Defined at:
  1722 ;;		line 358 in file "parcheggio.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;		None
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;		None
  1727 ;; Return value:  Size  Location     Type
  1728 ;;		None               void
  1729 ;; Registers used:
  1730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1738 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1739 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1740 ;;Total ram usage:        2 bytes
  1741 ;; Hardware stack levels used:    1
  1742 ;; Hardware stack levels required when called:    8
  1743 ;; This function calls:
  1744 ;;		___fladd
  1745 ;;		___fldiv
  1746 ;;		___flge
  1747 ;;		___flmul
  1748 ;;		___fltol
  1749 ;;		___xxtofl
  1750 ;;		_abs
  1751 ;;		_asin
  1752 ;;		_can_send
  1753 ;;		_sqrt
  1754 ;; This function is called by:
  1755 ;;		_park_search
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           	psect	text2
  1760  004742                     __ptext2:
  1761                           	opt stack 0
  1762  004742                     _parallelo:
  1763                           	opt stack 21
  1764                           
  1765                           ;parcheggio.c: 359: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  1766                           
  1767                           ;incstack = 0
  1768  004742  EE20  F026         	lfsr	2,_sensor_distance+2	;volatile
  1769  004746  CFDE F0D5          	movff	postinc2,??_parallelo
  1770  00474A  CFDD F0D6          	movff	postdec2,??_parallelo+1
  1771  00474E  0100               	movlb	0	; () banked
  1772  004750  1FD5               	comf	??_parallelo& (0+255),f,b
  1773  004752  1FD6               	comf	(??_parallelo+1)& (0+255),f,b
  1774  004754  4BD5               	infsnz	??_parallelo& (0+255),f,b
  1775  004756  2BD6               	incf	(??_parallelo+1)& (0+255),f,b
  1776  004758  5024               	movf	_sensor_distance,w,c	;volatile
  1777  00475A  0100               	movlb	0	; () banked
  1778  00475C  25D5               	addwf	??_parallelo& (0+255),w,b
  1779  00475E  0100               	movlb	0	; () banked
  1780  004760  6F77               	movwf	abs@a& (0+255),b
  1781  004762  5025               	movf	_sensor_distance+1,w,c	;volatile
  1782  004764  0100               	movlb	0	; () banked
  1783  004766  21D6               	addwfc	(??_parallelo+1)& (0+255),w,b
  1784  004768  0100               	movlb	0	; () banked
  1785  00476A  6F78               	movwf	(abs@a+1)& (0+255),b
  1786  00476C  EC78  F02E         	call	_abs	;wreg free
  1787  004770  0100               	movlb	0	; () banked
  1788  004772  C077  F0CB         	movff	?_abs,___xxtofl@val
  1789  004776  0100               	movlb	0	; () banked
  1790  004778  C078  F0CC         	movff	?_abs+1,___xxtofl@val+1
  1791  00477C  0100               	movlb	0	; () banked
  1792  00477E  0E00               	movlw	0
  1793  004780  BFCC               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1794  004782  0EFF               	movlw	-1
  1795  004784  6FCD               	movwf	(___xxtofl@val+2)& (0+255),b
  1796  004786  6FCE               	movwf	(___xxtofl@val+3)& (0+255),b
  1797  004788  0E01               	movlw	1
  1798  00478A  EC10  F026         	call	___xxtofl
  1799  00478E  C0CB  F0D7         	movff	?___xxtofl,_alignment_gap
  1800  004792  C0CC  F0D8         	movff	?___xxtofl+1,_alignment_gap+1
  1801  004796  C0CD  F0D9         	movff	?___xxtofl+2,_alignment_gap+2
  1802  00479A  C0CE  F0DA         	movff	?___xxtofl+3,_alignment_gap+3
  1803                           
  1804                           ;parcheggio.c: 361: if (alignment_gap < 30) {
  1805  00479E  C0D7  F0B1         	movff	_alignment_gap,___flge@ff1
  1806  0047A2  C0D8  F0B2         	movff	_alignment_gap+1,___flge@ff1+1
  1807  0047A6  C0D9  F0B3         	movff	_alignment_gap+2,___flge@ff1+2
  1808  0047AA  C0DA  F0B4         	movff	_alignment_gap+3,___flge@ff1+3
  1809  0047AE  0E00               	movlw	0
  1810  0047B0  0100               	movlb	0	; () banked
  1811  0047B2  6FB5               	movwf	___flge@ff2& (0+255),b
  1812  0047B4  0E00               	movlw	0
  1813  0047B6  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  1814  0047B8  0EF0               	movlw	240
  1815  0047BA  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  1816  0047BC  0E41               	movlw	65
  1817  0047BE  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  1818  0047C0  ECAE  F028         	call	___flge	;wreg free
  1819  0047C4  0100               	movlb	0	; () banked
  1820  0047C6  B0D8               	btfsc	status,0,c
  1821  0047C8  D0F9               	goto	l779
  1822                           
  1823                           ; BSR set to: 0
  1824                           ;parcheggio.c: 362: if ((sensor_distance[0] < 40) && (sensor_distance[1] < 40)) {
  1825  0047CA  5025               	movf	_sensor_distance+1,w,c	;volatile
  1826  0047CC  E103               	bnz	u8711
  1827  0047CE  0E28               	movlw	40
  1828  0047D0  5C24               	subwf	_sensor_distance,w,c	;volatile
  1829  0047D2  B0D8               	btfsc	status,0,c
  1830  0047D4                     u8711:
  1831  0047D4  D0E5               	goto	l6935
  1832                           
  1833                           ; BSR set to: 0
  1834  0047D6  5027               	movf	_sensor_distance+3,w,c	;volatile
  1835  0047D8  E103               	bnz	u8721
  1836  0047DA  0E28               	movlw	40
  1837  0047DC  5C26               	subwf	_sensor_distance+2,w,c	;volatile
  1838  0047DE  B0D8               	btfsc	status,0,c
  1839  0047E0                     u8721:
  1840  0047E0  D0DF               	goto	l6935
  1841                           
  1842                           ; BSR set to: 0
  1843                           ;parcheggio.c: 366: x = ((100) + (alignment_gap * alignment_gap));
  1844  0047E2  C0D7  F094         	movff	_alignment_gap,___flmul@a
  1845  0047E6  C0D8  F095         	movff	_alignment_gap+1,___flmul@a+1
  1846  0047EA  C0D9  F096         	movff	_alignment_gap+2,___flmul@a+2
  1847  0047EE  C0DA  F097         	movff	_alignment_gap+3,___flmul@a+3
  1848  0047F2  C0D7  F090         	movff	_alignment_gap,___flmul@b
  1849  0047F6  C0D8  F091         	movff	_alignment_gap+1,___flmul@b+1
  1850  0047FA  C0D9  F092         	movff	_alignment_gap+2,___flmul@b+2
  1851  0047FE  C0DA  F093         	movff	_alignment_gap+3,___flmul@b+3
  1852  004802  EC36  F017         	call	___flmul	;wreg free
  1853  004806  C090  F0AD         	movff	?___flmul,___fladd@b
  1854  00480A  C091  F0AE         	movff	?___flmul+1,___fladd@b+1
  1855  00480E  C092  F0AF         	movff	?___flmul+2,___fladd@b+2
  1856  004812  C093  F0B0         	movff	?___flmul+3,___fladd@b+3
  1857  004816  0E00               	movlw	0
  1858  004818  0100               	movlb	0	; () banked
  1859  00481A  6FB1               	movwf	___fladd@a& (0+255),b
  1860  00481C  0E00               	movlw	0
  1861  00481E  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  1862  004820  0EC8               	movlw	200
  1863  004822  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  1864  004824  0E42               	movlw	66
  1865  004826  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  1866  004828  ECE2  F014         	call	___fladd	;wreg free
  1867  00482C  C0AD  F13C         	movff	?___fladd,_x
  1868  004830  C0AE  F13D         	movff	?___fladd+1,_x+1
  1869  004834  C0AF  F13E         	movff	?___fladd+2,_x+2
  1870  004838  C0B0  F13F         	movff	?___fladd+3,_x+3
  1871                           
  1872                           ;parcheggio.c: 367: x = sqrt(x);
  1873  00483C  C13C  F0C1         	movff	_x,sqrt@a
  1874  004840  C13D  F0C2         	movff	_x+1,sqrt@a+1
  1875  004844  C13E  F0C3         	movff	_x+2,sqrt@a+2
  1876  004848  C13F  F0C4         	movff	_x+3,sqrt@a+3
  1877  00484C  EC89  F019         	call	_sqrt	;wreg free
  1878  004850  C0C1  F13C         	movff	?_sqrt,_x
  1879  004854  C0C2  F13D         	movff	?_sqrt+1,_x+1
  1880  004858  C0C3  F13E         	movff	?_sqrt+2,_x+2
  1881  00485C  C0C4  F13F         	movff	?_sqrt+3,_x+3
  1882                           
  1883                           ;parcheggio.c: 368: z = alignment_gap / x;
  1884  004860  C0D7  F077         	movff	_alignment_gap,___fldiv@b
  1885  004864  C0D8  F078         	movff	_alignment_gap+1,___fldiv@b+1
  1886  004868  C0D9  F079         	movff	_alignment_gap+2,___fldiv@b+2
  1887  00486C  C0DA  F07A         	movff	_alignment_gap+3,___fldiv@b+3
  1888  004870  C13C  F07B         	movff	_x,___fldiv@a
  1889  004874  C13D  F07C         	movff	_x+1,___fldiv@a+1
  1890  004878  C13E  F07D         	movff	_x+2,___fldiv@a+2
  1891  00487C  C13F  F07E         	movff	_x+3,___fldiv@a+3
  1892  004880  EC6E  F01B         	call	___fldiv	;wreg free
  1893  004884  C077  F0DB         	movff	?___fldiv,_z
  1894  004888  C078  F0DC         	movff	?___fldiv+1,_z+1
  1895  00488C  C079  F0DD         	movff	?___fldiv+2,_z+2
  1896  004890  C07A  F0DE         	movff	?___fldiv+3,_z+3
  1897                           
  1898                           ;parcheggio.c: 369: z = asin(z);
  1899  004894  C0DB  F198         	movff	_z,asin@x
  1900  004898  C0DC  F199         	movff	_z+1,asin@x+1
  1901  00489C  C0DD  F19A         	movff	_z+2,asin@x+2
  1902  0048A0  C0DE  F19B         	movff	_z+3,asin@x+3
  1903  0048A4  ECA9  F020         	call	_asin	;wreg free
  1904  0048A8  C198  F0DB         	movff	?_asin,_z
  1905  0048AC  C199  F0DC         	movff	?_asin+1,_z+1
  1906  0048B0  C19A  F0DD         	movff	?_asin+2,_z+2
  1907  0048B4  C19B  F0DE         	movff	?_asin+3,_z+3
  1908                           
  1909                           ;parcheggio.c: 370: z = z / 3.14159265358979323846 * 180;
  1910  0048B8  0EDB               	movlw	219
  1911  0048BA  0100               	movlb	0	; () banked
  1912  0048BC  6F7B               	movwf	___fldiv@a& (0+255),b
  1913  0048BE  0E0F               	movlw	15
  1914  0048C0  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  1915  0048C2  0E49               	movlw	73
  1916  0048C4  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  1917  0048C6  0E40               	movlw	64
  1918  0048C8  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  1919  0048CA  C0DB  F077         	movff	_z,___fldiv@b
  1920  0048CE  C0DC  F078         	movff	_z+1,___fldiv@b+1
  1921  0048D2  C0DD  F079         	movff	_z+2,___fldiv@b+2
  1922  0048D6  C0DE  F07A         	movff	_z+3,___fldiv@b+3
  1923  0048DA  EC6E  F01B         	call	___fldiv	;wreg free
  1924  0048DE  C077  F090         	movff	?___fldiv,___flmul@b
  1925  0048E2  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  1926  0048E6  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  1927  0048EA  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  1928  0048EE  0E00               	movlw	0
  1929  0048F0  0100               	movlb	0	; () banked
  1930  0048F2  6F94               	movwf	___flmul@a& (0+255),b
  1931  0048F4  0E00               	movlw	0
  1932  0048F6  6F95               	movwf	(___flmul@a+1)& (0+255),b
  1933  0048F8  0E34               	movlw	52
  1934  0048FA  6F96               	movwf	(___flmul@a+2)& (0+255),b
  1935  0048FC  0E43               	movlw	67
  1936  0048FE  6F97               	movwf	(___flmul@a+3)& (0+255),b
  1937  004900  EC36  F017         	call	___flmul	;wreg free
  1938  004904  C090  F0DB         	movff	?___flmul,_z
  1939  004908  C091  F0DC         	movff	?___flmul+1,_z+1
  1940  00490C  C092  F0DD         	movff	?___flmul+2,_z+2
  1941  004910  C093  F0DE         	movff	?___flmul+3,_z+3
  1942                           
  1943                           ;parcheggio.c: 371: data_correction[0] = z;
  1944  004914  C0DB  F0C1         	movff	_z,___fltol@f1
  1945  004918  C0DC  F0C2         	movff	_z+1,___fltol@f1+1
  1946  00491C  C0DD  F0C3         	movff	_z+2,___fltol@f1+2
  1947  004920  C0DE  F0C4         	movff	_z+3,___fltol@f1+3
  1948  004924  EC2F  F02B         	call	___fltol	;wreg free
  1949  004928  0100               	movlb	0	; () banked
  1950  00492A  51C1               	movf	?___fltol& (0+255),w,b
  1951  00492C  0101               	movlb	1	; () banked
  1952  00492E  6F63               	movwf	_data_correction& (0+255),b
  1953                           
  1954                           ; BSR set to: 1
  1955                           ;parcheggio.c: 373: if (sensor_distance[0] < sensor_distance[1]) {
  1956  004930  5026               	movf	_sensor_distance+2,w,c	;volatile
  1957  004932  5C24               	subwf	_sensor_distance,w,c	;volatile
  1958  004934  5027               	movf	_sensor_distance+3,w,c	;volatile
  1959  004936  5825               	subwfb	_sensor_distance+1,w,c	;volatile
  1960  004938  B0D8               	btfsc	status,0,c
  1961  00493A  D002               	goto	l6927
  1962                           
  1963                           ; BSR set to: 1
  1964                           ;parcheggio.c: 374: data_correction[1] = 0;
  1965  00493C  0E00               	movlw	0
  1966  00493E  D001               	goto	L1
  1967  004940                     l6927:
  1968                           
  1969                           ; BSR set to: 1
  1970                           ;parcheggio.c: 376: data_correction[1] = 1;
  1971  004940  0E01               	movlw	1
  1972  004942                     L1:
  1973  004942  0101               	movlb	1	; () banked
  1974  004944  6F64               	movwf	(_data_correction+1)& (0+255),b
  1975                           
  1976                           ; BSR set to: 1
  1977                           ;parcheggio.c: 377: }
  1978                           ;parcheggio.c: 378: if ((old_alignment_gap != alignment_gap) || (old_data_correction != 
      +                          data_correction[1])) {
  1979                           
  1980                           ; BSR set to: 1
  1981  004946  0100               	movlb	0	; () banked
  1982  004948  51D7               	movf	_alignment_gap& (0+255),w,b
  1983  00494A  0101               	movlb	1	; () banked
  1984  00494C  1934               	xorwf	_old_alignment_gap& (0+255),w,b
  1985  00494E  E117               	bnz	l785
  1986  004950  0100               	movlb	0	; () banked
  1987  004952  51D8               	movf	(_alignment_gap+1)& (0+255),w,b
  1988  004954  0101               	movlb	1	; () banked
  1989  004956  1935               	xorwf	(_old_alignment_gap+1)& (0+255),w,b
  1990  004958  E112               	bnz	l785
  1991  00495A  0100               	movlb	0	; () banked
  1992  00495C  51D9               	movf	(_alignment_gap+2)& (0+255),w,b
  1993  00495E  0101               	movlb	1	; () banked
  1994  004960  1936               	xorwf	(_old_alignment_gap+2)& (0+255),w,b
  1995  004962  E10D               	bnz	l785
  1996  004964  0100               	movlb	0	; () banked
  1997  004966  51DA               	movf	(_alignment_gap+3)& (0+255),w,b
  1998  004968  0101               	movlb	1	; () banked
  1999  00496A  1937               	xorwf	(_old_alignment_gap+3)& (0+255),w,b
  2000  00496C  A4D8               	btfss	status,2,c
  2001  00496E  D007               	goto	l785
  2002                           
  2003                           ; BSR set to: 1
  2004  004970  0E00               	movlw	0
  2005  004972  BE44               	btfsc	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2006  004974  0E01               	movlw	1
  2007  004976  0101               	movlb	1	; () banked
  2008  004978  1964               	xorwf	(_data_correction+1)& (0+255),w,b
  2009  00497A  B4D8               	btfsc	status,2,c
  2010  00497C  0012               	return	
  2011  00497E                     l785:
  2012                           
  2013                           ; BSR set to: 1
  2014                           ;parcheggio.c: 379: old_alignment_gap = alignment_gap;
  2015  00497E  C0D7  F134         	movff	_alignment_gap,_old_alignment_gap
  2016  004982  C0D8  F135         	movff	_alignment_gap+1,_old_alignment_gap+1
  2017  004986  C0D9  F136         	movff	_alignment_gap+2,_old_alignment_gap+2
  2018  00498A  C0DA  F137         	movff	_alignment_gap+3,_old_alignment_gap+3
  2019                           
  2020                           ;parcheggio.c: 380: old_data_correction = data_correction[1];
  2021  00498E  0101               	movlb	1	; () banked
  2022  004990  A164               	btfss	(_data_correction+1)& (0+255),0,b
  2023  004992  D002               	goto	u8760
  2024  004994  8E44               	bsf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2025  004996  D001               	goto	l6933
  2026  004998                     u8760:
  2027  004998  9E44               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2028  00499A                     l6933:
  2029                           
  2030                           ;parcheggio.c: 381: can_send();
  2031  00499A  EC76  F029         	call	_can_send	;wreg free
  2032                           
  2033                           ;parcheggio.c: 382: }
  2034                           ;parcheggio.c: 383: } else if (data_correction[0] != old_data_correction) {
  2035  00499E  0012               	return	
  2036  0049A0                     l6935:
  2037  0049A0  0E00               	movlw	0
  2038  0049A2  BE44               	btfsc	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2039  0049A4  0E01               	movlw	1
  2040  0049A6  0101               	movlb	1	; () banked
  2041  0049A8  1963               	xorwf	_data_correction& (0+255),w,b
  2042  0049AA  B4D8               	btfsc	status,2,c
  2043  0049AC  0012               	return	
  2044                           
  2045                           ; BSR set to: 1
  2046                           ;parcheggio.c: 384: data_correction[0] = 0;
  2047  0049AE  0E00               	movlw	0
  2048  0049B0  0101               	movlb	1	; () banked
  2049  0049B2  6F63               	movwf	_data_correction& (0+255),b
  2050                           
  2051                           ; BSR set to: 1
  2052                           ;parcheggio.c: 385: old_data_correction = 0;
  2053  0049B4  9E44               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2054                           
  2055                           ; BSR set to: 1
  2056                           ;parcheggio.c: 386: can_send();
  2057  0049B6  EC76  F029         	call	_can_send	;wreg free
  2058                           
  2059                           ;parcheggio.c: 387: }
  2060                           ;parcheggio.c: 388: } else {
  2061  0049BA  0012               	return	
  2062  0049BC                     l779:
  2063                           
  2064                           ; BSR set to: 0
  2065                           ;parcheggio.c: 389: if (old_data_correction != 0) {
  2066  0049BC  AE44               	btfss	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2067  0049BE  0012               	return	
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;parcheggio.c: 390: data_correction[0] = 0;
  2071  0049C0  0E00               	movlw	0
  2072  0049C2  0101               	movlb	1	; () banked
  2073  0049C4  6F63               	movwf	_data_correction& (0+255),b
  2074                           
  2075                           ; BSR set to: 1
  2076                           ;parcheggio.c: 391: old_data_correction = 0;
  2077  0049C6  9E44               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2078                           
  2079                           ; BSR set to: 1
  2080                           ;parcheggio.c: 392: can_send();
  2081  0049C8  EC76  F029         	call	_can_send	;wreg free
  2082  0049CC  0012               	return	
  2083  0049CE                     __end_of_parallelo:
  2084                           	opt stack 0
  2085                           tblptru	equ	0xFF8
  2086                           tblptrh	equ	0xFF7
  2087                           tblptrl	equ	0xFF6
  2088                           tablat	equ	0xFF5
  2089                           postinc0	equ	0xFEE
  2090                           wreg	equ	0xFE8
  2091                           postdec1	equ	0xFE5
  2092                           fsr1l	equ	0xFE1
  2093                           postinc2	equ	0xFDE
  2094                           postdec2	equ	0xFDD
  2095                           status	equ	0xFD8
  2096                           
  2097 ;; *************** function _abs *****************
  2098 ;; Defined at:
  2099 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;  a               2   23[BANK0 ] int 
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;		None
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  2   23[BANK0 ] int 
  2106 ;; Registers used:
  2107 ;;		wreg, status,2, status,0
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2113 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2115 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2116 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2117 ;;Total ram usage:        4 bytes
  2118 ;; Hardware stack levels used:    1
  2119 ;; Hardware stack levels required when called:    4
  2120 ;; This function calls:
  2121 ;;		Nothing
  2122 ;; This function is called by:
  2123 ;;		_park_search
  2124 ;;		_parallelo
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text3
  2129  005CF0                     __ptext3:
  2130                           	opt stack 0
  2131  005CF0                     _abs:
  2132                           	opt stack 24
  2133                           
  2134                           ;incstack = 0
  2135  005CF0  0100               	movlb	0	; () banked
  2136  005CF2  AF78               	btfss	(abs@a+1)& (0+255),7,b
  2137  005CF4  D00E               	goto	l849
  2138                           
  2139                           ; BSR set to: 0
  2140  005CF6  C077  F079         	movff	abs@a,??_abs
  2141  005CFA  C078  F07A         	movff	abs@a+1,??_abs+1
  2142  005CFE  0100               	movlb	0	; () banked
  2143  005D00  1F79               	comf	??_abs& (0+255),f,b
  2144  005D02  1F7A               	comf	(??_abs+1)& (0+255),f,b
  2145  005D04  4B79               	infsnz	??_abs& (0+255),f,b
  2146  005D06  2B7A               	incf	(??_abs+1)& (0+255),f,b
  2147  005D08  C079  F077         	movff	??_abs,?_abs
  2148  005D0C  C07A  F078         	movff	??_abs+1,?_abs+1
  2149  005D10  0012               	return	
  2150  005D12                     l849:
  2151                           
  2152                           ; BSR set to: 0
  2153  005D12  C077  F077         	movff	abs@a,?_abs
  2154  005D16  C078  F078         	movff	abs@a+1,?_abs+1
  2155                           
  2156                           ; BSR set to: 0
  2157  005D1A  0012               	return		;funcret
  2158  005D1C                     __end_of_abs:
  2159                           	opt stack 0
  2160                           tblptru	equ	0xFF8
  2161                           tblptrh	equ	0xFF7
  2162                           tblptrl	equ	0xFF6
  2163                           tablat	equ	0xFF5
  2164                           postinc0	equ	0xFEE
  2165                           wreg	equ	0xFE8
  2166                           postdec1	equ	0xFE5
  2167                           fsr1l	equ	0xFE1
  2168                           postinc2	equ	0xFDE
  2169                           postdec2	equ	0xFDD
  2170                           status	equ	0xFD8
  2171                           
  2172 ;; *************** function _park_routine *****************
  2173 ;; Defined at:
  2174 ;;		line 260 in file "parcheggio.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;		None
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;		None
  2179 ;; Return value:  Size  Location     Type
  2180 ;;		None               void
  2181 ;; Registers used:
  2182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2192 ;;Total ram usage:        0 bytes
  2193 ;; Hardware stack levels used:    1
  2194 ;; Hardware stack levels required when called:    9
  2195 ;; This function calls:
  2196 ;;		_CANsendMessage
  2197 ;;		___fladd
  2198 ;;		___fltol
  2199 ;;		___xxtofl
  2200 ;;		_can_send
  2201 ;;		_delay_s
  2202 ;;		_matematica
  2203 ;; This function is called by:
  2204 ;;		_main
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           	psect	text4
  2209  004464                     __ptext4:
  2210                           	opt stack 0
  2211  004464                     _park_routine:
  2212                           	opt stack 21
  2213                           
  2214                           ;parcheggio.c: 261: while ((PORTBbits.RB5 == 1) && (activation == 1)&&(start_operation =
      +                          = 1)) {
  2215                           
  2216                           ; BSR set to: 0
  2217                           ;incstack = 0
  2218  004464  D167               	goto	l7137
  2219  004466                     l7037:
  2220                           
  2221                           ;parcheggio.c: 262: CANsendMessage(0b00000000111, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  2222  004466  0E07               	movlw	7
  2223  004468  0100               	movlb	0	; () banked
  2224  00446A  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2225  00446C  0E00               	movlw	0
  2226  00446E  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2227  004470  0E00               	movlw	0
  2228  004472  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2229  004474  0E00               	movlw	0
  2230  004476  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2231  004478  0E53               	movlw	low _data
  2232  00447A  0100               	movlb	0	; () banked
  2233  00447C  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2234  00447E  0E01               	movlw	high _data
  2235  004480  0100               	movlb	0	; () banked
  2236  004482  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2237  004484  0E08               	movlw	8
  2238  004486  0100               	movlb	0	; () banked
  2239  004488  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2240  00448A  0EFC               	movlw	252
  2241  00448C  0100               	movlb	0	; () banked
  2242  00448E  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2243  004490  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2244                           
  2245                           ;parcheggio.c: 263: bordo = sensor_distance[0];
  2246  004494  C024  F0CB         	movff	_sensor_distance,___xxtofl@val	;volatile
  2247  004498  C025  F0CC         	movff	_sensor_distance+1,___xxtofl@val+1	;volatile
  2248  00449C  0100               	movlb	0	; () banked
  2249  00449E  6BCD               	clrf	(___xxtofl@val+2)& (0+255),b
  2250  0044A0  6BCE               	clrf	(___xxtofl@val+3)& (0+255),b
  2251  0044A2  0E00               	movlw	0
  2252  0044A4  EC10  F026         	call	___xxtofl
  2253  0044A8  C0CB  F124         	movff	?___xxtofl,_bordo	;volatile
  2254  0044AC  C0CC  F125         	movff	?___xxtofl+1,_bordo+1	;volatile
  2255  0044B0  C0CD  F126         	movff	?___xxtofl+2,_bordo+2	;volatile
  2256  0044B4  C0CE  F127         	movff	?___xxtofl+3,_bordo+3	;volatile
  2257                           
  2258                           ;parcheggio.c: 264: matematica();
  2259  0044B8  EC78  F012         	call	_matematica	;wreg free
  2260                           
  2261                           ;parcheggio.c: 265: set_speed = 0;
  2262  0044BC  0E00               	movlw	0
  2263  0044BE  0100               	movlb	0	; () banked
  2264  0044C0  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2265  0044C2  0E00               	movlw	0
  2266  0044C4  6FE5               	movwf	_set_speed& (0+255),b
  2267                           
  2268                           ; BSR set to: 0
  2269                           ;parcheggio.c: 266: data_steering[0] = 90;
  2270  0044C6  0E5A               	movlw	90
  2271  0044C8  0101               	movlb	1	; () banked
  2272  0044CA  6F73               	movwf	_data_steering& (0+255),b
  2273                           
  2274                           ; BSR set to: 1
  2275                           ;parcheggio.c: 267: data_brake [0] = 0;
  2276  0044CC  0E00               	movlw	0
  2277  0044CE  0101               	movlb	1	; () banked
  2278  0044D0  6F5B               	movwf	_data_brake& (0+255),b
  2279                           
  2280                           ; BSR set to: 1
  2281                           ;parcheggio.c: 268: data_brake [1] = 1;
  2282  0044D2  0E01               	movlw	1
  2283  0044D4  0101               	movlb	1	; () banked
  2284  0044D6  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2285                           
  2286                           ; BSR set to: 1
  2287                           ;parcheggio.c: 269: can_send();
  2288  0044D8  EC76  F029         	call	_can_send	;wreg free
  2289                           
  2290                           ;parcheggio.c: 270: delay_s(1);
  2291  0044DC  0E01               	movlw	1
  2292  0044DE  EC8E  F02E         	call	_delay_s
  2293                           
  2294                           ;parcheggio.c: 271: data_brake [0] = 3;
  2295  0044E2  0E03               	movlw	3
  2296  0044E4  0101               	movlb	1	; () banked
  2297  0044E6  6F5B               	movwf	_data_brake& (0+255),b
  2298                           
  2299                           ; BSR set to: 1
  2300                           ;parcheggio.c: 272: data_brake [1] = 1;
  2301  0044E8  0E01               	movlw	1
  2302  0044EA  0101               	movlb	1	; () banked
  2303  0044EC  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2304  0044EE                     l742:
  2305  0044EE  AA44               	btfss	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
  2306  0044F0  D7FE               	goto	l742
  2307                           
  2308                           ;parcheggio.c: 274: if (distance_average > 55) {
  2309  0044F2  0100               	movlb	0	; () banked
  2310  0044F4  51E4               	movf	(_distance_average+1)& (0+255),w,b	;volatile
  2311  0044F6  E105               	bnz	u8930
  2312  0044F8  0E38               	movlw	56
  2313  0044FA  0100               	movlb	0	; () banked
  2314  0044FC  5DE3               	subwf	_distance_average& (0+255),w,b	;volatile
  2315  0044FE  A0D8               	btfss	status,0,c
  2316  004500  D02A               	goto	l7073
  2317  004502                     u8930:
  2318                           
  2319                           ; BSR set to: 0
  2320                           ;parcheggio.c: 275: set_speed = 1000;
  2321  004502  0E03               	movlw	3
  2322  004504  0100               	movlb	0	; () banked
  2323  004506  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2324  004508  0EE8               	movlw	232
  2325  00450A  6FE5               	movwf	_set_speed& (0+255),b
  2326                           
  2327                           ; BSR set to: 0
  2328                           ;parcheggio.c: 276: dir = 0;
  2329  00450C  9444               	bcf	_dir/(0+8),_dir& (0+7),c
  2330                           
  2331                           ;parcheggio.c: 277: data_steering[0] = 90;
  2332  00450E  0E5A               	movlw	90
  2333  004510  0101               	movlb	1	; () banked
  2334  004512  6F73               	movwf	_data_steering& (0+255),b
  2335                           
  2336                           ; BSR set to: 1
  2337                           ;parcheggio.c: 278: data_test[0] = (distance_average - 54);
  2338  004514  0100               	movlb	0	; () banked
  2339  004516  51E3               	movf	_distance_average& (0+255),w,b	;volatile
  2340  004518  0FCA               	addlw	202
  2341  00451A  0101               	movlb	1	; () banked
  2342  00451C  6F7B               	movwf	_data_test& (0+255),b
  2343                           
  2344                           ; BSR set to: 1
  2345                           ;parcheggio.c: 279: asd = 1;
  2346  00451E  8244               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2347                           
  2348                           ; BSR set to: 1
  2349                           ;parcheggio.c: 280: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2350  004520  0E0D               	movlw	13
  2351  004522  0100               	movlb	0	; () banked
  2352  004524  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2353  004526  0E00               	movlw	0
  2354  004528  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2355  00452A  0E00               	movlw	0
  2356  00452C  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2357  00452E  0E00               	movlw	0
  2358  004530  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2359  004532  0E7B               	movlw	low _data_test
  2360  004534  0100               	movlb	0	; () banked
  2361  004536  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2362  004538  0E01               	movlw	high _data_test
  2363  00453A  0100               	movlb	0	; () banked
  2364  00453C  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2365  00453E  0E08               	movlw	8
  2366  004540  0100               	movlb	0	; () banked
  2367  004542  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2368  004544  0EBC               	movlw	188
  2369  004546  0100               	movlb	0	; () banked
  2370  004548  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2371  00454A  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2372                           
  2373                           ;parcheggio.c: 281: can_send();
  2374  00454E  EC76  F029         	call	_can_send	;wreg free
  2375  004552                     l746:
  2376  004552  B244               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2377  004554  D7FE               	goto	l746
  2378  004556                     l7073:
  2379                           
  2380                           ;parcheggio.c: 283: }
  2381                           ;parcheggio.c: 284: set_speed = 0;
  2382  004556  0E00               	movlw	0
  2383  004558  0100               	movlb	0	; () banked
  2384  00455A  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2385  00455C  0E00               	movlw	0
  2386  00455E  6FE5               	movwf	_set_speed& (0+255),b
  2387                           
  2388                           ;parcheggio.c: 285: data_steering[0] = 90;
  2389  004560  0E5A               	movlw	90
  2390  004562  0101               	movlb	1	; () banked
  2391  004564  6F73               	movwf	_data_steering& (0+255),b
  2392                           
  2393                           ;parcheggio.c: 286: data_brake [0] = 0;
  2394  004566  0E00               	movlw	0
  2395  004568  0101               	movlb	1	; () banked
  2396  00456A  6F5B               	movwf	_data_brake& (0+255),b
  2397                           
  2398                           ;parcheggio.c: 287: data_brake [1] = 1;
  2399  00456C  0E01               	movlw	1
  2400  00456E  0101               	movlb	1	; () banked
  2401  004570  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2402                           
  2403                           ; BSR set to: 1
  2404                           ;parcheggio.c: 288: can_send();
  2405  004572  EC76  F029         	call	_can_send	;wreg free
  2406                           
  2407                           ;parcheggio.c: 289: delay_s(1);
  2408  004576  0E01               	movlw	1
  2409  004578  EC8E  F02E         	call	_delay_s
  2410                           
  2411                           ;parcheggio.c: 290: data_brake [0] = 3;
  2412  00457C  0E03               	movlw	3
  2413  00457E  0101               	movlb	1	; () banked
  2414  004580  6F5B               	movwf	_data_brake& (0+255),b
  2415                           
  2416                           ; BSR set to: 1
  2417                           ;parcheggio.c: 291: data_brake [1] = 1;
  2418  004582  0E01               	movlw	1
  2419  004584  0101               	movlb	1	; () banked
  2420  004586  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2421                           
  2422                           ; BSR set to: 1
  2423                           ;parcheggio.c: 292: set_speed = 1000;
  2424  004588  0E03               	movlw	3
  2425  00458A  0100               	movlb	0	; () banked
  2426  00458C  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2427  00458E  0EE8               	movlw	232
  2428  004590  6FE5               	movwf	_set_speed& (0+255),b
  2429                           
  2430                           ; BSR set to: 0
  2431                           ;parcheggio.c: 293: dir = 0;
  2432  004592  9444               	bcf	_dir/(0+8),_dir& (0+7),c
  2433                           
  2434                           ; BSR set to: 0
  2435                           ;parcheggio.c: 294: data_steering[0] = 180;
  2436  004594  0EB4               	movlw	180
  2437  004596  0101               	movlb	1	; () banked
  2438  004598  6F73               	movwf	_data_steering& (0+255),b
  2439                           
  2440                           ; BSR set to: 1
  2441                           ;parcheggio.c: 295: data_test[0] = prima_sterzata;
  2442  00459A  C138  F0C1         	movff	_prima_sterzata,___fltol@f1
  2443  00459E  C139  F0C2         	movff	_prima_sterzata+1,___fltol@f1+1
  2444  0045A2  C13A  F0C3         	movff	_prima_sterzata+2,___fltol@f1+2
  2445  0045A6  C13B  F0C4         	movff	_prima_sterzata+3,___fltol@f1+3
  2446  0045AA  EC2F  F02B         	call	___fltol	;wreg free
  2447  0045AE  0100               	movlb	0	; () banked
  2448  0045B0  51C1               	movf	?___fltol& (0+255),w,b
  2449  0045B2  0101               	movlb	1	; () banked
  2450  0045B4  6F7B               	movwf	_data_test& (0+255),b
  2451                           
  2452                           ; BSR set to: 1
  2453                           ;parcheggio.c: 296: asd = 1;
  2454  0045B6  8244               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2455                           
  2456                           ; BSR set to: 1
  2457                           ;parcheggio.c: 297: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2458  0045B8  0E0D               	movlw	13
  2459  0045BA  0100               	movlb	0	; () banked
  2460  0045BC  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2461  0045BE  0E00               	movlw	0
  2462  0045C0  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2463  0045C2  0E00               	movlw	0
  2464  0045C4  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2465  0045C6  0E00               	movlw	0
  2466  0045C8  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2467  0045CA  0E7B               	movlw	low _data_test
  2468  0045CC  0100               	movlb	0	; () banked
  2469  0045CE  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2470  0045D0  0E01               	movlw	high _data_test
  2471  0045D2  0100               	movlb	0	; () banked
  2472  0045D4  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2473  0045D6  0E08               	movlw	8
  2474  0045D8  0100               	movlb	0	; () banked
  2475  0045DA  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2476  0045DC  0EBC               	movlw	188
  2477  0045DE  0100               	movlb	0	; () banked
  2478  0045E0  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2479  0045E2  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2480                           
  2481                           ;parcheggio.c: 298: can_send();
  2482  0045E6  EC76  F029         	call	_can_send	;wreg free
  2483  0045EA                     l749:
  2484  0045EA  B244               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2485  0045EC  D7FE               	goto	l749
  2486                           
  2487                           ;parcheggio.c: 300: set_speed = 1000;
  2488  0045EE  0E03               	movlw	3
  2489  0045F0  0100               	movlb	0	; () banked
  2490  0045F2  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2491  0045F4  0EE8               	movlw	232
  2492  0045F6  6FE5               	movwf	_set_speed& (0+255),b
  2493                           
  2494                           ;parcheggio.c: 301: data_steering[0] = 0;
  2495  0045F8  0E00               	movlw	0
  2496  0045FA  0101               	movlb	1	; () banked
  2497  0045FC  6F73               	movwf	_data_steering& (0+255),b
  2498                           
  2499                           ; BSR set to: 1
  2500                           ;parcheggio.c: 302: asd = 1;
  2501  0045FE  8244               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2502                           
  2503                           ; BSR set to: 1
  2504                           ;parcheggio.c: 303: data_test[0] = prima_sterzata + 15;
  2505  004600  0E00               	movlw	0
  2506  004602  0100               	movlb	0	; () banked
  2507  004604  6FB1               	movwf	___fladd@a& (0+255),b
  2508  004606  0E00               	movlw	0
  2509  004608  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  2510  00460A  0E70               	movlw	112
  2511  00460C  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  2512  00460E  0E41               	movlw	65
  2513  004610  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  2514  004612  C138  F0AD         	movff	_prima_sterzata,___fladd@b
  2515  004616  C139  F0AE         	movff	_prima_sterzata+1,___fladd@b+1
  2516  00461A  C13A  F0AF         	movff	_prima_sterzata+2,___fladd@b+2
  2517  00461E  C13B  F0B0         	movff	_prima_sterzata+3,___fladd@b+3
  2518  004622  ECE2  F014         	call	___fladd	;wreg free
  2519  004626  C0AD  F0C1         	movff	?___fladd,___fltol@f1
  2520  00462A  C0AE  F0C2         	movff	?___fladd+1,___fltol@f1+1
  2521  00462E  C0AF  F0C3         	movff	?___fladd+2,___fltol@f1+2
  2522  004632  C0B0  F0C4         	movff	?___fladd+3,___fltol@f1+3
  2523  004636  EC2F  F02B         	call	___fltol	;wreg free
  2524  00463A  0100               	movlb	0	; () banked
  2525  00463C  51C1               	movf	?___fltol& (0+255),w,b
  2526  00463E  0101               	movlb	1	; () banked
  2527  004640  6F7B               	movwf	_data_test& (0+255),b
  2528                           
  2529                           ; BSR set to: 1
  2530                           ;parcheggio.c: 304: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2531  004642  0E0D               	movlw	13
  2532  004644  0100               	movlb	0	; () banked
  2533  004646  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2534  004648  0E00               	movlw	0
  2535  00464A  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2536  00464C  0E00               	movlw	0
  2537  00464E  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2538  004650  0E00               	movlw	0
  2539  004652  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2540  004654  0E7B               	movlw	low _data_test
  2541  004656  0100               	movlb	0	; () banked
  2542  004658  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2543  00465A  0E01               	movlw	high _data_test
  2544  00465C  0100               	movlb	0	; () banked
  2545  00465E  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2546  004660  0E08               	movlw	8
  2547  004662  0100               	movlb	0	; () banked
  2548  004664  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2549  004666  0EBC               	movlw	188
  2550  004668  0100               	movlb	0	; () banked
  2551  00466A  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2552  00466C  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2553                           
  2554                           ;parcheggio.c: 305: can_send();
  2555  004670  EC76  F029         	call	_can_send	;wreg free
  2556  004674                     l752:
  2557  004674  B244               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2558  004676  D7FE               	goto	l752
  2559                           
  2560                           ;parcheggio.c: 307: data_brake [0] = 0;
  2561  004678  0E00               	movlw	0
  2562  00467A  0101               	movlb	1	; () banked
  2563  00467C  6F5B               	movwf	_data_brake& (0+255),b
  2564                           
  2565                           ;parcheggio.c: 308: data_brake [1] = 1;
  2566  00467E  0E01               	movlw	1
  2567  004680  0101               	movlb	1	; () banked
  2568  004682  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2569                           
  2570                           ;parcheggio.c: 309: set_speed = 0;
  2571  004684  0E00               	movlw	0
  2572  004686  0100               	movlb	0	; () banked
  2573  004688  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2574  00468A  0E00               	movlw	0
  2575  00468C  6FE5               	movwf	_set_speed& (0+255),b
  2576                           
  2577                           ;parcheggio.c: 310: data_steering[0] = 90;
  2578  00468E  0E5A               	movlw	90
  2579  004690  0101               	movlb	1	; () banked
  2580  004692  6F73               	movwf	_data_steering& (0+255),b
  2581                           
  2582                           ; BSR set to: 1
  2583                           ;parcheggio.c: 311: can_send();
  2584  004694  EC76  F029         	call	_can_send	;wreg free
  2585                           
  2586                           ;parcheggio.c: 312: delay_s(1);
  2587  004698  0E01               	movlw	1
  2588  00469A  EC8E  F02E         	call	_delay_s
  2589                           
  2590                           ;parcheggio.c: 313: if (sensor_distance [2] > 20) {
  2591  00469E  5029               	movf	_sensor_distance+5,w,c	;volatile
  2592  0046A0  E104               	bnz	u8970
  2593  0046A2  0E15               	movlw	21
  2594  0046A4  5C28               	subwf	_sensor_distance+4,w,c	;volatile
  2595  0046A6  A0D8               	btfss	status,0,c
  2596  0046A8  D017               	goto	l7123
  2597  0046AA                     u8970:
  2598                           
  2599                           ;parcheggio.c: 314: data_brake [0] = 3;
  2600  0046AA  0E03               	movlw	3
  2601  0046AC  0101               	movlb	1	; () banked
  2602  0046AE  6F5B               	movwf	_data_brake& (0+255),b
  2603                           
  2604                           ;parcheggio.c: 315: data_brake [1] = 1;
  2605  0046B0  0E01               	movlw	1
  2606  0046B2  0101               	movlb	1	; () banked
  2607  0046B4  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2608                           
  2609                           ;parcheggio.c: 316: set_speed = 1000;
  2610  0046B6  0E03               	movlw	3
  2611  0046B8  0100               	movlb	0	; () banked
  2612  0046BA  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2613  0046BC  0EE8               	movlw	232
  2614  0046BE  6FE5               	movwf	_set_speed& (0+255),b
  2615                           
  2616                           ;parcheggio.c: 317: data_steering[0] = 90;
  2617  0046C0  0E5A               	movlw	90
  2618  0046C2  0101               	movlb	1	; () banked
  2619  0046C4  6F73               	movwf	_data_steering& (0+255),b
  2620                           
  2621                           ; BSR set to: 1
  2622                           ;parcheggio.c: 318: dir = 1;
  2623  0046C6  8444               	bsf	_dir/(0+8),_dir& (0+7),c
  2624                           
  2625                           ; BSR set to: 1
  2626                           ;parcheggio.c: 319: can_send();
  2627  0046C8  EC76  F029         	call	_can_send	;wreg free
  2628  0046CC                     l7121:
  2629  0046CC  5029               	movf	_sensor_distance+5,w,c	;volatile
  2630  0046CE  E1FE               	bnz	l7121
  2631  0046D0  0E15               	movlw	21
  2632  0046D2  5C28               	subwf	_sensor_distance+4,w,c	;volatile
  2633  0046D4  B0D8               	btfsc	status,0,c
  2634  0046D6  D7FA               	goto	l7121
  2635  0046D8                     l7123:
  2636                           
  2637                           ;parcheggio.c: 321: }
  2638                           ;parcheggio.c: 322: data_brake [0] = 0;
  2639  0046D8  0E00               	movlw	0
  2640  0046DA  0101               	movlb	1	; () banked
  2641  0046DC  6F5B               	movwf	_data_brake& (0+255),b
  2642                           
  2643                           ;parcheggio.c: 323: data_brake [1] = 1;
  2644  0046DE  0E01               	movlw	1
  2645  0046E0  0101               	movlb	1	; () banked
  2646  0046E2  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2647                           
  2648                           ;parcheggio.c: 324: set_speed = 0;
  2649  0046E4  0E00               	movlw	0
  2650  0046E6  0100               	movlb	0	; () banked
  2651  0046E8  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2652  0046EA  0E00               	movlw	0
  2653  0046EC  6FE5               	movwf	_set_speed& (0+255),b
  2654                           
  2655                           ;parcheggio.c: 325: data_steering[0] = 90;
  2656  0046EE  0E5A               	movlw	90
  2657  0046F0  0101               	movlb	1	; () banked
  2658  0046F2  6F73               	movwf	_data_steering& (0+255),b
  2659                           
  2660                           ; BSR set to: 1
  2661                           ;parcheggio.c: 326: dir = 0;
  2662  0046F4  9444               	bcf	_dir/(0+8),_dir& (0+7),c
  2663                           
  2664                           ; BSR set to: 1
  2665                           ;parcheggio.c: 327: activation = 0;
  2666  0046F6  9044               	bcf	_activation/(0+8),_activation& (0+7),c	;volatile
  2667                           
  2668                           ; BSR set to: 1
  2669                           ;parcheggio.c: 328: can_send();
  2670  0046F8  EC76  F029         	call	_can_send	;wreg free
  2671                           
  2672                           ;parcheggio.c: 329: PORTBbits.RB5 = 0;
  2673  0046FC  9A81               	bcf	3969,5,c	;volatile
  2674                           
  2675                           ;parcheggio.c: 330: start_operation = 0;
  2676  0046FE  9445               	bcf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2677                           
  2678                           ;parcheggio.c: 331: data[0] = 3;
  2679  004700  0E03               	movlw	3
  2680  004702  0101               	movlb	1	; () banked
  2681  004704  6F53               	movwf	_data& (0+255),b
  2682                           
  2683                           ;parcheggio.c: 332: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  2684  004706  0E0B               	movlw	11
  2685  004708  0100               	movlb	0	; () banked
  2686  00470A  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2687  00470C  0E00               	movlw	0
  2688  00470E  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2689  004710  0E00               	movlw	0
  2690  004712  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2691  004714  0E00               	movlw	0
  2692  004716  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2693  004718  0E53               	movlw	low _data
  2694  00471A  0100               	movlb	0	; () banked
  2695  00471C  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2696  00471E  0E01               	movlw	high _data
  2697  004720  0100               	movlb	0	; () banked
  2698  004722  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2699  004724  0E01               	movlw	1
  2700  004726  0100               	movlb	0	; () banked
  2701  004728  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2702  00472A  0EBC               	movlw	188
  2703  00472C  0100               	movlb	0	; () banked
  2704  00472E  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2705  004730  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2706  004734                     l7137:
  2707  004734  AA81               	btfss	3969,5,c	;volatile
  2708  004736  0012               	return	
  2709  004738  A044               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  2710  00473A  0012               	return	
  2711  00473C  A445               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2712  00473E  0012               	return	
  2713  004740  D692               	goto	l7037
  2714  004742                     __end_of_park_routine:
  2715                           	opt stack 0
  2716                           tblptru	equ	0xFF8
  2717                           tblptrh	equ	0xFF7
  2718                           tblptrl	equ	0xFF6
  2719                           tablat	equ	0xFF5
  2720                           postinc0	equ	0xFEE
  2721                           wreg	equ	0xFE8
  2722                           postdec1	equ	0xFE5
  2723                           fsr1l	equ	0xFE1
  2724                           postinc2	equ	0xFDE
  2725                           postdec2	equ	0xFDD
  2726                           status	equ	0xFD8
  2727                           
  2728 ;; *************** function _matematica *****************
  2729 ;; Defined at:
  2730 ;;		line 398 in file "parcheggio.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;		None
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;		None
  2735 ;; Return value:  Size  Location     Type
  2736 ;;		None               void
  2737 ;; Registers used:
  2738 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2739 ;; Tracked objects:
  2740 ;;		On entry : 0/0
  2741 ;;		On exit  : 0/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2745 ;;      Locals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0
  2746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2747 ;;      Totals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0
  2748 ;;Total ram usage:       32 bytes
  2749 ;; Hardware stack levels used:    1
  2750 ;; Hardware stack levels required when called:    8
  2751 ;; This function calls:
  2752 ;;		___fladd
  2753 ;;		___fldiv
  2754 ;;		___flmul
  2755 ;;		___flneg
  2756 ;;		_asin
  2757 ;;		_cos
  2758 ;; This function is called by:
  2759 ;;		_park_routine
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763                           	psect	text5
  2764  0024F0                     __ptext5:
  2765                           	opt stack 0
  2766  0024F0                     _matematica:
  2767                           	opt stack 21
  2768                           
  2769                           ;parcheggio.c: 400: alfa = asin(((2 * raggio)-(larghezza / 2) - bordo) / (2 * raggio));
  2770                           
  2771                           ;incstack = 0
  2772  0024F0  C124  F0A9         	movff	_bordo,___flneg@f1	;volatile
  2773  0024F4  C125  F0AA         	movff	_bordo+1,___flneg@f1+1	;volatile
  2774  0024F8  C126  F0AB         	movff	_bordo+2,___flneg@f1+2	;volatile
  2775  0024FC  C127  F0AC         	movff	_bordo+3,___flneg@f1+3	;volatile
  2776  002500  EC41  F02E         	call	___flneg	;wreg free
  2777  002504  C0A9  F0B1         	movff	?___flneg,___fladd@a
  2778  002508  C0AA  F0B2         	movff	?___flneg+1,___fladd@a+1
  2779  00250C  C0AB  F0B3         	movff	?___flneg+2,___fladd@a+2
  2780  002510  C0AC  F0B4         	movff	?___flneg+3,___fladd@a+3
  2781  002514  0E00               	movlw	0
  2782  002516  0100               	movlb	0	; () banked
  2783  002518  6F94               	movwf	___flmul@a& (0+255),b
  2784  00251A  0E00               	movlw	0
  2785  00251C  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2786  00251E  0E00               	movlw	0
  2787  002520  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2788  002522  0E40               	movlw	64
  2789  002524  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2790  002526  C1DC  F090         	movff	_raggio,___flmul@b
  2791  00252A  C1DD  F091         	movff	_raggio+1,___flmul@b+1
  2792  00252E  C1DE  F092         	movff	_raggio+2,___flmul@b+2
  2793  002532  C1DF  F093         	movff	_raggio+3,___flmul@b+3
  2794  002536  EC36  F017         	call	___flmul	;wreg free
  2795  00253A  C090  F0AD         	movff	?___flmul,___fladd@b
  2796  00253E  C091  F0AE         	movff	?___flmul+1,___fladd@b+1
  2797  002542  C092  F0AF         	movff	?___flmul+2,___fladd@b+2
  2798  002546  C093  F0B0         	movff	?___flmul+3,___fladd@b+3
  2799  00254A  ECE2  F014         	call	___fladd	;wreg free
  2800  00254E  C0AD  F1B8         	movff	?___fladd,_matematica$3738
  2801  002552  C0AE  F1B9         	movff	?___fladd+1,_matematica$3738+1
  2802  002556  C0AF  F1BA         	movff	?___fladd+2,_matematica$3738+2
  2803  00255A  C0B0  F1BB         	movff	?___fladd+3,_matematica$3738+3
  2804                           
  2805                           ;parcheggio.c: 400: alfa = asin(((2 * raggio)-(larghezza / 2) - bordo) / (2 * raggio));
  2806  00255E  0E00               	movlw	0
  2807  002560  0100               	movlb	0	; () banked
  2808  002562  6F7B               	movwf	___fldiv@a& (0+255),b
  2809  002564  0E00               	movlw	0
  2810  002566  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  2811  002568  0E00               	movlw	0
  2812  00256A  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  2813  00256C  0E40               	movlw	64
  2814  00256E  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  2815  002570  C1D8  F077         	movff	_larghezza,___fldiv@b
  2816  002574  C1D9  F078         	movff	_larghezza+1,___fldiv@b+1
  2817  002578  C1DA  F079         	movff	_larghezza+2,___fldiv@b+2
  2818  00257C  C1DB  F07A         	movff	_larghezza+3,___fldiv@b+3
  2819  002580  EC6E  F01B         	call	___fldiv	;wreg free
  2820  002584  C077  F0A9         	movff	?___fldiv,___flneg@f1
  2821  002588  C078  F0AA         	movff	?___fldiv+1,___flneg@f1+1
  2822  00258C  C079  F0AB         	movff	?___fldiv+2,___flneg@f1+2
  2823  002590  C07A  F0AC         	movff	?___fldiv+3,___flneg@f1+3
  2824  002594  EC41  F02E         	call	___flneg	;wreg free
  2825  002598  C0A9  F0B1         	movff	?___flneg,___fladd@a
  2826  00259C  C0AA  F0B2         	movff	?___flneg+1,___fladd@a+1
  2827  0025A0  C0AB  F0B3         	movff	?___flneg+2,___fladd@a+2
  2828  0025A4  C0AC  F0B4         	movff	?___flneg+3,___fladd@a+3
  2829  0025A8  C1B8  F0AD         	movff	_matematica$3738,___fladd@b
  2830  0025AC  C1B9  F0AE         	movff	_matematica$3738+1,___fladd@b+1
  2831  0025B0  C1BA  F0AF         	movff	_matematica$3738+2,___fladd@b+2
  2832  0025B4  C1BB  F0B0         	movff	_matematica$3738+3,___fladd@b+3
  2833  0025B8  ECE2  F014         	call	___fladd	;wreg free
  2834  0025BC  C0AD  F1BC         	movff	?___fladd,_matematica$3739
  2835  0025C0  C0AE  F1BD         	movff	?___fladd+1,_matematica$3739+1
  2836  0025C4  C0AF  F1BE         	movff	?___fladd+2,_matematica$3739+2
  2837  0025C8  C0B0  F1BF         	movff	?___fladd+3,_matematica$3739+3
  2838                           
  2839                           ;parcheggio.c: 400: alfa = asin(((2 * raggio)-(larghezza / 2) - bordo) / (2 * raggio));
  2840  0025CC  C1BC  F077         	movff	_matematica$3739,___fldiv@b
  2841  0025D0  C1BD  F078         	movff	_matematica$3739+1,___fldiv@b+1
  2842  0025D4  C1BE  F079         	movff	_matematica$3739+2,___fldiv@b+2
  2843  0025D8  C1BF  F07A         	movff	_matematica$3739+3,___fldiv@b+3
  2844  0025DC  0E00               	movlw	0
  2845  0025DE  0100               	movlb	0	; () banked
  2846  0025E0  6F94               	movwf	___flmul@a& (0+255),b
  2847  0025E2  0E00               	movlw	0
  2848  0025E4  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2849  0025E6  0E00               	movlw	0
  2850  0025E8  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2851  0025EA  0E40               	movlw	64
  2852  0025EC  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2853  0025EE  C1DC  F090         	movff	_raggio,___flmul@b
  2854  0025F2  C1DD  F091         	movff	_raggio+1,___flmul@b+1
  2855  0025F6  C1DE  F092         	movff	_raggio+2,___flmul@b+2
  2856  0025FA  C1DF  F093         	movff	_raggio+3,___flmul@b+3
  2857  0025FE  EC36  F017         	call	___flmul	;wreg free
  2858  002602  C090  F07B         	movff	?___flmul,___fldiv@a
  2859  002606  C091  F07C         	movff	?___flmul+1,___fldiv@a+1
  2860  00260A  C092  F07D         	movff	?___flmul+2,___fldiv@a+2
  2861  00260E  C093  F07E         	movff	?___flmul+3,___fldiv@a+3
  2862  002612  EC6E  F01B         	call	___fldiv	;wreg free
  2863  002616  C077  F1C0         	movff	?___fldiv,_matematica$3740
  2864  00261A  C078  F1C1         	movff	?___fldiv+1,_matematica$3740+1
  2865  00261E  C079  F1C2         	movff	?___fldiv+2,_matematica$3740+2
  2866  002622  C07A  F1C3         	movff	?___fldiv+3,_matematica$3740+3
  2867                           
  2868                           ;parcheggio.c: 400: alfa = asin(((2 * raggio)-(larghezza / 2) - bordo) / (2 * raggio));
  2869  002626  C1C0  F198         	movff	_matematica$3740,asin@x
  2870  00262A  C1C1  F199         	movff	_matematica$3740+1,asin@x+1
  2871  00262E  C1C2  F19A         	movff	_matematica$3740+2,asin@x+2
  2872  002632  C1C3  F19B         	movff	_matematica$3740+3,asin@x+3
  2873  002636  ECA9  F020         	call	_asin	;wreg free
  2874  00263A  C198  F11C         	movff	?_asin,_alfa
  2875  00263E  C199  F11D         	movff	?_asin+1,_alfa+1
  2876  002642  C19A  F11E         	movff	?_asin+2,_alfa+2
  2877  002646  C19B  F11F         	movff	?_asin+3,_alfa+3
  2878                           
  2879                           ;parcheggio.c: 401: alfa = alfa / 3.14159265358979323846 * 180;
  2880  00264A  0EDB               	movlw	219
  2881  00264C  0100               	movlb	0	; () banked
  2882  00264E  6F7B               	movwf	___fldiv@a& (0+255),b
  2883  002650  0E0F               	movlw	15
  2884  002652  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  2885  002654  0E49               	movlw	73
  2886  002656  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  2887  002658  0E40               	movlw	64
  2888  00265A  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  2889  00265C  C11C  F077         	movff	_alfa,___fldiv@b
  2890  002660  C11D  F078         	movff	_alfa+1,___fldiv@b+1
  2891  002664  C11E  F079         	movff	_alfa+2,___fldiv@b+2
  2892  002668  C11F  F07A         	movff	_alfa+3,___fldiv@b+3
  2893  00266C  EC6E  F01B         	call	___fldiv	;wreg free
  2894  002670  C077  F090         	movff	?___fldiv,___flmul@b
  2895  002674  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  2896  002678  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  2897  00267C  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  2898  002680  0E00               	movlw	0
  2899  002682  0100               	movlb	0	; () banked
  2900  002684  6F94               	movwf	___flmul@a& (0+255),b
  2901  002686  0E00               	movlw	0
  2902  002688  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2903  00268A  0E34               	movlw	52
  2904  00268C  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2905  00268E  0E43               	movlw	67
  2906  002690  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2907  002692  EC36  F017         	call	___flmul	;wreg free
  2908  002696  C090  F11C         	movff	?___flmul,_alfa
  2909  00269A  C091  F11D         	movff	?___flmul+1,_alfa+1
  2910  00269E  C092  F11E         	movff	?___flmul+2,_alfa+2
  2911  0026A2  C093  F11F         	movff	?___flmul+3,_alfa+3
  2912                           
  2913                           ;parcheggio.c: 402: beta = 90 - alfa;
  2914  0026A6  C11C  F0A9         	movff	_alfa,___flneg@f1
  2915  0026AA  C11D  F0AA         	movff	_alfa+1,___flneg@f1+1
  2916  0026AE  C11E  F0AB         	movff	_alfa+2,___flneg@f1+2
  2917  0026B2  C11F  F0AC         	movff	_alfa+3,___flneg@f1+3
  2918  0026B6  EC41  F02E         	call	___flneg	;wreg free
  2919  0026BA  C0A9  F0AD         	movff	?___flneg,___fladd@b
  2920  0026BE  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  2921  0026C2  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  2922  0026C6  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  2923  0026CA  0E00               	movlw	0
  2924  0026CC  0100               	movlb	0	; () banked
  2925  0026CE  6FB1               	movwf	___fladd@a& (0+255),b
  2926  0026D0  0E00               	movlw	0
  2927  0026D2  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  2928  0026D4  0EB4               	movlw	180
  2929  0026D6  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  2930  0026D8  0E42               	movlw	66
  2931  0026DA  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  2932  0026DC  ECE2  F014         	call	___fladd	;wreg free
  2933  0026E0  C0AD  F120         	movff	?___fladd,_beta
  2934  0026E4  C0AE  F121         	movff	?___fladd+1,_beta+1
  2935  0026E8  C0AF  F122         	movff	?___fladd+2,_beta+2
  2936  0026EC  C0B0  F123         	movff	?___fladd+3,_beta+3
  2937                           
  2938                           ;parcheggio.c: 403: n = 2 * raggio * cos(alfa);
  2939  0026F0  C11C  F1B0         	movff	_alfa,cos@f
  2940  0026F4  C11D  F1B1         	movff	_alfa+1,cos@f+1
  2941  0026F8  C11E  F1B2         	movff	_alfa+2,cos@f+2
  2942  0026FC  C11F  F1B3         	movff	_alfa+3,cos@f+3
  2943  002700  ECB5  F02B         	call	_cos	;wreg free
  2944  002704  C1B0  F1C4         	movff	?_cos,_matematica$3741
  2945  002708  C1B1  F1C5         	movff	?_cos+1,_matematica$3741+1
  2946  00270C  C1B2  F1C6         	movff	?_cos+2,_matematica$3741+2
  2947  002710  C1B3  F1C7         	movff	?_cos+3,_matematica$3741+3
  2948                           
  2949                           ;parcheggio.c: 403: n = 2 * raggio * cos(alfa);
  2950  002714  C1DC  F094         	movff	_raggio,___flmul@a
  2951  002718  C1DD  F095         	movff	_raggio+1,___flmul@a+1
  2952  00271C  C1DE  F096         	movff	_raggio+2,___flmul@a+2
  2953  002720  C1DF  F097         	movff	_raggio+3,___flmul@a+3
  2954  002724  C1C4  F090         	movff	_matematica$3741,___flmul@b
  2955  002728  C1C5  F091         	movff	_matematica$3741+1,___flmul@b+1
  2956  00272C  C1C6  F092         	movff	_matematica$3741+2,___flmul@b+2
  2957  002730  C1C7  F093         	movff	_matematica$3741+3,___flmul@b+3
  2958  002734  EC36  F017         	call	___flmul	;wreg free
  2959  002738  C090  F1C8         	movff	?___flmul,_matematica$3742
  2960  00273C  C091  F1C9         	movff	?___flmul+1,_matematica$3742+1
  2961  002740  C092  F1CA         	movff	?___flmul+2,_matematica$3742+2
  2962  002744  C093  F1CB         	movff	?___flmul+3,_matematica$3742+3
  2963                           
  2964                           ;parcheggio.c: 403: n = 2 * raggio * cos(alfa);
  2965  002748  C1C8  F090         	movff	_matematica$3742,___flmul@b
  2966  00274C  C1C9  F091         	movff	_matematica$3742+1,___flmul@b+1
  2967  002750  C1CA  F092         	movff	_matematica$3742+2,___flmul@b+2
  2968  002754  C1CB  F093         	movff	_matematica$3742+3,___flmul@b+3
  2969  002758  0E00               	movlw	0
  2970  00275A  0100               	movlb	0	; () banked
  2971  00275C  6F94               	movwf	___flmul@a& (0+255),b
  2972  00275E  0E00               	movlw	0
  2973  002760  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2974  002762  0E00               	movlw	0
  2975  002764  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2976  002766  0E40               	movlw	64
  2977  002768  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2978  00276A  EC36  F017         	call	___flmul	;wreg free
  2979  00276E  C090  F130         	movff	?___flmul,_n
  2980  002772  C091  F131         	movff	?___flmul+1,_n+1
  2981  002776  C092  F132         	movff	?___flmul+2,_n+2
  2982  00277A  C093  F133         	movff	?___flmul+3,_n+3
  2983                           
  2984                           ;parcheggio.c: 404: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  2985  00277E  C120  F094         	movff	_beta,___flmul@a
  2986  002782  C121  F095         	movff	_beta+1,___flmul@a+1
  2987  002786  C122  F096         	movff	_beta+2,___flmul@a+2
  2988  00278A  C123  F097         	movff	_beta+3,___flmul@a+3
  2989  00278E  C1DC  F090         	movff	_raggio,___flmul@b
  2990  002792  C1DD  F091         	movff	_raggio+1,___flmul@b+1
  2991  002796  C1DE  F092         	movff	_raggio+2,___flmul@b+2
  2992  00279A  C1DF  F093         	movff	_raggio+3,___flmul@b+3
  2993  00279E  EC36  F017         	call	___flmul	;wreg free
  2994  0027A2  C090  F1CC         	movff	?___flmul,_matematica$3743
  2995  0027A6  C091  F1CD         	movff	?___flmul+1,_matematica$3743+1
  2996  0027AA  C092  F1CE         	movff	?___flmul+2,_matematica$3743+2
  2997  0027AE  C093  F1CF         	movff	?___flmul+3,_matematica$3743+3
  2998                           
  2999                           ;parcheggio.c: 404: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  3000  0027B2  0EDB               	movlw	219
  3001  0027B4  0100               	movlb	0	; () banked
  3002  0027B6  6F94               	movwf	___flmul@a& (0+255),b
  3003  0027B8  0E0F               	movlw	15
  3004  0027BA  6F95               	movwf	(___flmul@a+1)& (0+255),b
  3005  0027BC  0EC9               	movlw	201
  3006  0027BE  6F96               	movwf	(___flmul@a+2)& (0+255),b
  3007  0027C0  0E40               	movlw	64
  3008  0027C2  6F97               	movwf	(___flmul@a+3)& (0+255),b
  3009  0027C4  C1CC  F090         	movff	_matematica$3743,___flmul@b
  3010  0027C8  C1CD  F091         	movff	_matematica$3743+1,___flmul@b+1
  3011  0027CC  C1CE  F092         	movff	_matematica$3743+2,___flmul@b+2
  3012  0027D0  C1CF  F093         	movff	_matematica$3743+3,___flmul@b+3
  3013  0027D4  EC36  F017         	call	___flmul	;wreg free
  3014  0027D8  C090  F077         	movff	?___flmul,___fldiv@b
  3015  0027DC  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  3016  0027E0  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  3017  0027E4  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  3018  0027E8  0E00               	movlw	0
  3019  0027EA  0100               	movlb	0	; () banked
  3020  0027EC  6F7B               	movwf	___fldiv@a& (0+255),b
  3021  0027EE  0E00               	movlw	0
  3022  0027F0  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  3023  0027F2  0EB4               	movlw	180
  3024  0027F4  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  3025  0027F6  0E43               	movlw	67
  3026  0027F8  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  3027  0027FA  EC6E  F01B         	call	___fldiv	;wreg free
  3028  0027FE  C077  F138         	movff	?___fldiv,_prima_sterzata
  3029  002802  C078  F139         	movff	?___fldiv+1,_prima_sterzata+1
  3030  002806  C079  F13A         	movff	?___fldiv+2,_prima_sterzata+2
  3031  00280A  C07A  F13B         	movff	?___fldiv+3,_prima_sterzata+3
  3032                           
  3033                           ;parcheggio.c: 405: kkk = raggio + (2 * larghezza / 3);
  3034  00280E  0E00               	movlw	0
  3035  002810  0100               	movlb	0	; () banked
  3036  002812  6F7B               	movwf	___fldiv@a& (0+255),b
  3037  002814  0E00               	movlw	0
  3038  002816  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  3039  002818  0E40               	movlw	64
  3040  00281A  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  3041  00281C  0E40               	movlw	64
  3042  00281E  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  3043  002820  0E00               	movlw	0
  3044  002822  0100               	movlb	0	; () banked
  3045  002824  6F94               	movwf	___flmul@a& (0+255),b
  3046  002826  0E00               	movlw	0
  3047  002828  6F95               	movwf	(___flmul@a+1)& (0+255),b
  3048  00282A  0E00               	movlw	0
  3049  00282C  6F96               	movwf	(___flmul@a+2)& (0+255),b
  3050  00282E  0E40               	movlw	64
  3051  002830  6F97               	movwf	(___flmul@a+3)& (0+255),b
  3052  002832  C1D8  F090         	movff	_larghezza,___flmul@b
  3053  002836  C1D9  F091         	movff	_larghezza+1,___flmul@b+1
  3054  00283A  C1DA  F092         	movff	_larghezza+2,___flmul@b+2
  3055  00283E  C1DB  F093         	movff	_larghezza+3,___flmul@b+3
  3056  002842  EC36  F017         	call	___flmul	;wreg free
  3057  002846  C090  F077         	movff	?___flmul,___fldiv@b
  3058  00284A  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  3059  00284E  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  3060  002852  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  3061  002856  EC6E  F01B         	call	___fldiv	;wreg free
  3062  00285A  C077  F0AD         	movff	?___fldiv,___fladd@b
  3063  00285E  C078  F0AE         	movff	?___fldiv+1,___fladd@b+1
  3064  002862  C079  F0AF         	movff	?___fldiv+2,___fladd@b+2
  3065  002866  C07A  F0B0         	movff	?___fldiv+3,___fladd@b+3
  3066  00286A  C1DC  F0B1         	movff	_raggio,___fladd@a
  3067  00286E  C1DD  F0B2         	movff	_raggio+1,___fladd@a+1
  3068  002872  C1DE  F0B3         	movff	_raggio+2,___fladd@a+2
  3069  002876  C1DF  F0B4         	movff	_raggio+3,___fladd@a+3
  3070  00287A  ECE2  F014         	call	___fladd	;wreg free
  3071  00287E  C0AD  F12C         	movff	?___fladd,_kkk
  3072  002882  C0AE  F12D         	movff	?___fladd+1,_kkk+1
  3073  002886  C0AF  F12E         	movff	?___fladd+2,_kkk+2
  3074  00288A  C0B0  F12F         	movff	?___fladd+3,_kkk+3
  3075                           
  3076                           ;parcheggio.c: 406: jjj = raggio - (2 * larghezza / 3);
  3077  00288E  0E00               	movlw	0
  3078  002890  0100               	movlb	0	; () banked
  3079  002892  6F7B               	movwf	___fldiv@a& (0+255),b
  3080  002894  0E00               	movlw	0
  3081  002896  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  3082  002898  0E40               	movlw	64
  3083  00289A  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  3084  00289C  0E40               	movlw	64
  3085  00289E  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  3086  0028A0  0E00               	movlw	0
  3087  0028A2  0100               	movlb	0	; () banked
  3088  0028A4  6F94               	movwf	___flmul@a& (0+255),b
  3089  0028A6  0E00               	movlw	0
  3090  0028A8  6F95               	movwf	(___flmul@a+1)& (0+255),b
  3091  0028AA  0E00               	movlw	0
  3092  0028AC  6F96               	movwf	(___flmul@a+2)& (0+255),b
  3093  0028AE  0E40               	movlw	64
  3094  0028B0  6F97               	movwf	(___flmul@a+3)& (0+255),b
  3095  0028B2  C1D8  F090         	movff	_larghezza,___flmul@b
  3096  0028B6  C1D9  F091         	movff	_larghezza+1,___flmul@b+1
  3097  0028BA  C1DA  F092         	movff	_larghezza+2,___flmul@b+2
  3098  0028BE  C1DB  F093         	movff	_larghezza+3,___flmul@b+3
  3099  0028C2  EC36  F017         	call	___flmul	;wreg free
  3100  0028C6  C090  F077         	movff	?___flmul,___fldiv@b
  3101  0028CA  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  3102  0028CE  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  3103  0028D2  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  3104  0028D6  EC6E  F01B         	call	___fldiv	;wreg free
  3105  0028DA  C077  F0A9         	movff	?___fldiv,___flneg@f1
  3106  0028DE  C078  F0AA         	movff	?___fldiv+1,___flneg@f1+1
  3107  0028E2  C079  F0AB         	movff	?___fldiv+2,___flneg@f1+2
  3108  0028E6  C07A  F0AC         	movff	?___fldiv+3,___flneg@f1+3
  3109  0028EA  EC41  F02E         	call	___flneg	;wreg free
  3110  0028EE  C0A9  F0AD         	movff	?___flneg,___fladd@b
  3111  0028F2  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  3112  0028F6  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  3113  0028FA  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  3114  0028FE  C1DC  F0B1         	movff	_raggio,___fladd@a
  3115  002902  C1DD  F0B2         	movff	_raggio+1,___fladd@a+1
  3116  002906  C1DE  F0B3         	movff	_raggio+2,___fladd@a+2
  3117  00290A  C1DF  F0B4         	movff	_raggio+3,___fladd@a+3
  3118  00290E  ECE2  F014         	call	___fladd	;wreg free
  3119  002912  C0AD  F128         	movff	?___fladd,_jjj
  3120  002916  C0AE  F129         	movff	?___fladd+1,_jjj+1
  3121  00291A  C0AF  F12A         	movff	?___fladd+2,_jjj+2
  3122  00291E  C0B0  F12B         	movff	?___fladd+3,_jjj+3
  3123                           
  3124                           ;parcheggio.c: 407: Pminimo = kkk * cos(asin((jjj / kkk)));
  3125  002922  C12C  F07B         	movff	_kkk,___fldiv@a
  3126  002926  C12D  F07C         	movff	_kkk+1,___fldiv@a+1
  3127  00292A  C12E  F07D         	movff	_kkk+2,___fldiv@a+2
  3128  00292E  C12F  F07E         	movff	_kkk+3,___fldiv@a+3
  3129  002932  C128  F077         	movff	_jjj,___fldiv@b
  3130  002936  C129  F078         	movff	_jjj+1,___fldiv@b+1
  3131  00293A  C12A  F079         	movff	_jjj+2,___fldiv@b+2
  3132  00293E  C12B  F07A         	movff	_jjj+3,___fldiv@b+3
  3133  002942  EC6E  F01B         	call	___fldiv	;wreg free
  3134  002946  C077  F1D0         	movff	?___fldiv,_matematica$3744
  3135  00294A  C078  F1D1         	movff	?___fldiv+1,_matematica$3744+1
  3136  00294E  C079  F1D2         	movff	?___fldiv+2,_matematica$3744+2
  3137  002952  C07A  F1D3         	movff	?___fldiv+3,_matematica$3744+3
  3138                           
  3139                           ;parcheggio.c: 407: Pminimo = kkk * cos(asin((jjj / kkk)));
  3140  002956  C1D0  F198         	movff	_matematica$3744,asin@x
  3141  00295A  C1D1  F199         	movff	_matematica$3744+1,asin@x+1
  3142  00295E  C1D2  F19A         	movff	_matematica$3744+2,asin@x+2
  3143  002962  C1D3  F19B         	movff	_matematica$3744+3,asin@x+3
  3144  002966  ECA9  F020         	call	_asin	;wreg free
  3145  00296A  C198  F1B0         	movff	?_asin,cos@f
  3146  00296E  C199  F1B1         	movff	?_asin+1,cos@f+1
  3147  002972  C19A  F1B2         	movff	?_asin+2,cos@f+2
  3148  002976  C19B  F1B3         	movff	?_asin+3,cos@f+3
  3149  00297A  ECB5  F02B         	call	_cos	;wreg free
  3150  00297E  C1B0  F1D4         	movff	?_cos,_matematica$3745
  3151  002982  C1B1  F1D5         	movff	?_cos+1,_matematica$3745+1
  3152  002986  C1B2  F1D6         	movff	?_cos+2,_matematica$3745+2
  3153  00298A  C1B3  F1D7         	movff	?_cos+3,_matematica$3745+3
  3154                           
  3155                           ;parcheggio.c: 407: Pminimo = kkk * cos(asin((jjj / kkk)));
  3156  00298E  C1D4  F090         	movff	_matematica$3745,___flmul@b
  3157  002992  C1D5  F091         	movff	_matematica$3745+1,___flmul@b+1
  3158  002996  C1D6  F092         	movff	_matematica$3745+2,___flmul@b+2
  3159  00299A  C1D7  F093         	movff	_matematica$3745+3,___flmul@b+3
  3160  00299E  C12C  F094         	movff	_kkk,___flmul@a
  3161  0029A2  C12D  F095         	movff	_kkk+1,___flmul@a+1
  3162  0029A6  C12E  F096         	movff	_kkk+2,___flmul@a+2
  3163  0029AA  C12F  F097         	movff	_kkk+3,___flmul@a+3
  3164  0029AE  EC36  F017         	call	___flmul	;wreg free
  3165  0029B2  C090  F118         	movff	?___flmul,_Pminimo
  3166  0029B6  C091  F119         	movff	?___flmul+1,_Pminimo+1
  3167  0029BA  C092  F11A         	movff	?___flmul+2,_Pminimo+2
  3168  0029BE  C093  F11B         	movff	?___flmul+3,_Pminimo+3
  3169  0029C2  0012               	return		;funcret
  3170  0029C4                     __end_of_matematica:
  3171                           	opt stack 0
  3172                           tblptru	equ	0xFF8
  3173                           tblptrh	equ	0xFF7
  3174                           tblptrl	equ	0xFF6
  3175                           tablat	equ	0xFF5
  3176                           postinc0	equ	0xFEE
  3177                           wreg	equ	0xFE8
  3178                           postdec1	equ	0xFE5
  3179                           fsr1l	equ	0xFE1
  3180                           postinc2	equ	0xFDE
  3181                           postdec2	equ	0xFDD
  3182                           status	equ	0xFD8
  3183                           
  3184 ;; *************** function _cos *****************
  3185 ;; Defined at:
  3186 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\cos.c"
  3187 ;; Parameters:    Size  Location     Type
  3188 ;;  f               4   45[BANK1 ] int 
  3189 ;; Auto vars:     Size  Location     Type
  3190 ;;		None
  3191 ;; Return value:  Size  Location     Type
  3192 ;;                  4   45[BANK1 ] int 
  3193 ;; Registers used:
  3194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3195 ;; Tracked objects:
  3196 ;;		On entry : 0/0
  3197 ;;		On exit  : 0/0
  3198 ;;		Unchanged: 0/0
  3199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3200 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3201 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3203 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  3204 ;;Total ram usage:        8 bytes
  3205 ;; Hardware stack levels used:    1
  3206 ;; Hardware stack levels required when called:    7
  3207 ;; This function calls:
  3208 ;;		___fladd
  3209 ;;		___flge
  3210 ;;		_sin
  3211 ;; This function is called by:
  3212 ;;		_matematica
  3213 ;; This function uses a non-reentrant model
  3214 ;;
  3215                           
  3216                           	psect	text6
  3217  00576A                     __ptext6:
  3218                           	opt stack 0
  3219  00576A                     _cos:
  3220                           	opt stack 21
  3221                           
  3222                           ;incstack = 0
  3223  00576A  0EDB               	movlw	219
  3224  00576C  0100               	movlb	0	; () banked
  3225  00576E  6FB1               	movwf	___flge@ff1& (0+255),b
  3226  005770  0E0F               	movlw	15
  3227  005772  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  3228  005774  0E49               	movlw	73
  3229  005776  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  3230  005778  0E40               	movlw	64
  3231  00577A  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  3232  00577C  C1B0  F0B5         	movff	cos@f,___flge@ff2
  3233  005780  C1B1  F0B6         	movff	cos@f+1,___flge@ff2+1
  3234  005784  C1B2  F0B7         	movff	cos@f+2,___flge@ff2+2
  3235  005788  C1B3  F0B8         	movff	cos@f+3,___flge@ff2+3
  3236  00578C  ECAE  F028         	call	___flge	;wreg free
  3237  005790  0100               	movlb	0	; () banked
  3238  005792  B0D8               	btfsc	status,0,c
  3239  005794  D02E               	goto	l6897
  3240                           
  3241                           ; BSR set to: 0
  3242  005796  C1B0  F0AD         	movff	cos@f,___fladd@b
  3243  00579A  C1B1  F0AE         	movff	cos@f+1,___fladd@b+1
  3244  00579E  C1B2  F0AF         	movff	cos@f+2,___fladd@b+2
  3245  0057A2  C1B3  F0B0         	movff	cos@f+3,___fladd@b+3
  3246  0057A6  0EE4               	movlw	228
  3247  0057A8  0100               	movlb	0	; () banked
  3248  0057AA  6FB1               	movwf	___fladd@a& (0+255),b
  3249  0057AC  0ECB               	movlw	203
  3250  0057AE  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  3251  0057B0  0E96               	movlw	150
  3252  0057B2  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  3253  0057B4  0EC0               	movlw	192
  3254  0057B6  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  3255  0057B8  ECE2  F014         	call	___fladd	;wreg free
  3256  0057BC  C0AD  F1B4         	movff	?___fladd,_cos$3749
  3257  0057C0  C0AE  F1B5         	movff	?___fladd+1,_cos$3749+1
  3258  0057C4  C0AF  F1B6         	movff	?___fladd+2,_cos$3749+2
  3259  0057C8  C0B0  F1B7         	movff	?___fladd+3,_cos$3749+3
  3260  0057CC  C1B4  F197         	movff	_cos$3749,sin@f
  3261  0057D0  C1B5  F198         	movff	_cos$3749+1,sin@f+1
  3262  0057D4  C1B6  F199         	movff	_cos$3749+2,sin@f+2
  3263  0057D8  C1B7  F19A         	movff	_cos$3749+3,sin@f+3
  3264  0057DC  EC1D  F01F         	call	_sin	;wreg free
  3265  0057E0  C197  F1B0         	movff	?_sin,?_cos
  3266  0057E4  C198  F1B1         	movff	?_sin+1,?_cos+1
  3267  0057E8  C199  F1B2         	movff	?_sin+2,?_cos+2
  3268  0057EC  C19A  F1B3         	movff	?_sin+3,?_cos+3
  3269  0057F0  0012               	return	
  3270  0057F2                     l6897:
  3271  0057F2  C1B0  F0AD         	movff	cos@f,___fladd@b
  3272  0057F6  C1B1  F0AE         	movff	cos@f+1,___fladd@b+1
  3273  0057FA  C1B2  F0AF         	movff	cos@f+2,___fladd@b+2
  3274  0057FE  C1B3  F0B0         	movff	cos@f+3,___fladd@b+3
  3275  005802  0EDB               	movlw	219
  3276  005804  0100               	movlb	0	; () banked
  3277  005806  6FB1               	movwf	___fladd@a& (0+255),b
  3278  005808  0E0F               	movlw	15
  3279  00580A  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  3280  00580C  0EC9               	movlw	201
  3281  00580E  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  3282  005810  0E3F               	movlw	63
  3283  005812  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  3284  005814  ECE2  F014         	call	___fladd	;wreg free
  3285  005818  C0AD  F1B4         	movff	?___fladd,_cos$3749
  3286  00581C  C0AE  F1B5         	movff	?___fladd+1,_cos$3749+1
  3287  005820  C0AF  F1B6         	movff	?___fladd+2,_cos$3749+2
  3288  005824  C0B0  F1B7         	movff	?___fladd+3,_cos$3749+3
  3289  005828  C1B4  F197         	movff	_cos$3749,sin@f
  3290  00582C  C1B5  F198         	movff	_cos$3749+1,sin@f+1
  3291  005830  C1B6  F199         	movff	_cos$3749+2,sin@f+2
  3292  005834  C1B7  F19A         	movff	_cos$3749+3,sin@f+3
  3293  005838  EC1D  F01F         	call	_sin	;wreg free
  3294  00583C  C197  F1B0         	movff	?_sin,?_cos
  3295  005840  C198  F1B1         	movff	?_sin+1,?_cos+1
  3296  005844  C199  F1B2         	movff	?_sin+2,?_cos+2
  3297  005848  C19A  F1B3         	movff	?_sin+3,?_cos+3
  3298  00584C  0012               	return	
  3299  00584E                     __end_of_cos:
  3300                           	opt stack 0
  3301                           tblptru	equ	0xFF8
  3302                           tblptrh	equ	0xFF7
  3303                           tblptrl	equ	0xFF6
  3304                           tablat	equ	0xFF5
  3305                           postinc0	equ	0xFEE
  3306                           wreg	equ	0xFE8
  3307                           postdec1	equ	0xFE5
  3308                           fsr1l	equ	0xFE1
  3309                           postinc2	equ	0xFDE
  3310                           postdec2	equ	0xFDD
  3311                           status	equ	0xFD8
  3312                           
  3313 ;; *************** function _sin *****************
  3314 ;; Defined at:
  3315 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sin.c"
  3316 ;; Parameters:    Size  Location     Type
  3317 ;;  f               4   20[BANK1 ] int 
  3318 ;; Auto vars:     Size  Location     Type
  3319 ;;  x2              4   32[BANK1 ] int 
  3320 ;;  y               4   24[BANK1 ] int 
  3321 ;;  sgn             1   36[BANK1 ] unsigned char 
  3322 ;; Return value:  Size  Location     Type
  3323 ;;                  4   20[BANK1 ] unsigned char 
  3324 ;; Registers used:
  3325 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3326 ;; Tracked objects:
  3327 ;;		On entry : 0/0
  3328 ;;		On exit  : 0/0
  3329 ;;		Unchanged: 0/0
  3330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3331 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3332 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  3333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3334 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  3335 ;;Total ram usage:       17 bytes
  3336 ;; Hardware stack levels used:    1
  3337 ;; Hardware stack levels required when called:    6
  3338 ;; This function calls:
  3339 ;;		___fladd
  3340 ;;		___fldiv
  3341 ;;		___flge
  3342 ;;		___flmul
  3343 ;;		___flneg
  3344 ;;		___flsub
  3345 ;;		_eval_poly
  3346 ;;		_floor
  3347 ;; This function is called by:
  3348 ;;		_cos
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           	psect	text7
  3353  003E3A                     __ptext7:
  3354                           	opt stack 0
  3355  003E3A                     _sin:
  3356                           	opt stack 21
  3357                           
  3358                           ;incstack = 0
  3359  003E3A  0E00               	movlw	0
  3360  003E3C  0101               	movlb	1	; () banked
  3361  003E3E  6FA7               	movwf	sin@sgn& (0+255),b
  3362                           
  3363                           ; BSR set to: 1
  3364  003E40  0101               	movlb	1	; () banked
  3365  003E42  AF9A               	btfss	(sin@f+3)& (0+255),7,b
  3366  003E44  D015               	goto	l6821
  3367                           
  3368                           ; BSR set to: 1
  3369  003E46  C197  F0A9         	movff	sin@f,___flneg@f1
  3370  003E4A  C198  F0AA         	movff	sin@f+1,___flneg@f1+1
  3371  003E4E  C199  F0AB         	movff	sin@f+2,___flneg@f1+2
  3372  003E52  C19A  F0AC         	movff	sin@f+3,___flneg@f1+3
  3373  003E56  EC41  F02E         	call	___flneg	;wreg free
  3374  003E5A  C0A9  F197         	movff	?___flneg,sin@f
  3375  003E5E  C0AA  F198         	movff	?___flneg+1,sin@f+1
  3376  003E62  C0AB  F199         	movff	?___flneg+2,sin@f+2
  3377  003E66  C0AC  F19A         	movff	?___flneg+3,sin@f+3
  3378  003E6A  0E01               	movlw	1
  3379  003E6C  0101               	movlb	1	; () banked
  3380  003E6E  6FA7               	movwf	sin@sgn& (0+255),b
  3381  003E70                     l6821:
  3382                           
  3383                           ; BSR set to: 1
  3384  003E70  C197  F090         	movff	sin@f,___flmul@b
  3385  003E74  C198  F091         	movff	sin@f+1,___flmul@b+1
  3386  003E78  C199  F092         	movff	sin@f+2,___flmul@b+2
  3387  003E7C  C19A  F093         	movff	sin@f+3,___flmul@b+3
  3388  003E80  0E83               	movlw	131
  3389  003E82  0100               	movlb	0	; () banked
  3390  003E84  6F94               	movwf	___flmul@a& (0+255),b
  3391  003E86  0EF9               	movlw	249
  3392  003E88  6F95               	movwf	(___flmul@a+1)& (0+255),b
  3393  003E8A  0E22               	movlw	34
  3394  003E8C  6F96               	movwf	(___flmul@a+2)& (0+255),b
  3395  003E8E  0E3E               	movlw	62
  3396  003E90  6F97               	movwf	(___flmul@a+3)& (0+255),b
  3397  003E92  EC36  F017         	call	___flmul	;wreg free
  3398  003E96  C090  F197         	movff	?___flmul,sin@f
  3399  003E9A  C091  F198         	movff	?___flmul+1,sin@f+1
  3400  003E9E  C092  F199         	movff	?___flmul+2,sin@f+2
  3401  003EA2  C093  F19A         	movff	?___flmul+3,sin@f+3
  3402  003EA6  C197  F18F         	movff	sin@f,___flsub@b
  3403  003EAA  C198  F190         	movff	sin@f+1,___flsub@b+1
  3404  003EAE  C199  F191         	movff	sin@f+2,___flsub@b+2
  3405  003EB2  C19A  F192         	movff	sin@f+3,___flsub@b+3
  3406  003EB6  C197  F0D3         	movff	sin@f,floor@x
  3407  003EBA  C198  F0D4         	movff	sin@f+1,floor@x+1
  3408  003EBE  C199  F0D5         	movff	sin@f+2,floor@x+2
  3409  003EC2  C19A  F0D6         	movff	sin@f+3,floor@x+3
  3410  003EC6  EC11  F02A         	call	_floor	;wreg free
  3411  003ECA  C0D3  F193         	movff	?_floor,___flsub@a
  3412  003ECE  C0D4  F194         	movff	?_floor+1,___flsub@a+1
  3413  003ED2  C0D5  F195         	movff	?_floor+2,___flsub@a+2
  3414  003ED6  C0D6  F196         	movff	?_floor+3,___flsub@a+3
  3415  003EDA  ECE1  F02D         	call	___flsub	;wreg free
  3416  003EDE  C18F  F197         	movff	?___flsub,sin@f
  3417  003EE2  C190  F198         	movff	?___flsub+1,sin@f+1
  3418  003EE6  C191  F199         	movff	?___flsub+2,sin@f+2
  3419  003EEA  C192  F19A         	movff	?___flsub+3,sin@f+3
  3420  003EEE  C197  F090         	movff	sin@f,___flmul@b
  3421  003EF2  C198  F091         	movff	sin@f+1,___flmul@b+1
  3422  003EF6  C199  F092         	movff	sin@f+2,___flmul@b+2
  3423  003EFA  C19A  F093         	movff	sin@f+3,___flmul@b+3
  3424  003EFE  0E00               	movlw	0
  3425  003F00  0100               	movlb	0	; () banked
  3426  003F02  6F94               	movwf	___flmul@a& (0+255),b
  3427  003F04  0E00               	movlw	0
  3428  003F06  6F95               	movwf	(___flmul@a+1)& (0+255),b
  3429  003F08  0E80               	movlw	128
  3430  003F0A  6F96               	movwf	(___flmul@a+2)& (0+255),b
  3431  003F0C  0E40               	movlw	64
  3432  003F0E  6F97               	movwf	(___flmul@a+3)& (0+255),b
  3433  003F10  EC36  F017         	call	___flmul	;wreg free
  3434  003F14  C090  F197         	movff	?___flmul,sin@f
  3435  003F18  C091  F198         	movff	?___flmul+1,sin@f+1
  3436  003F1C  C092  F199         	movff	?___flmul+2,sin@f+2
  3437  003F20  C093  F19A         	movff	?___flmul+3,sin@f+3
  3438  003F24  0E00               	movlw	0
  3439  003F26  0100               	movlb	0	; () banked
  3440  003F28  6FB1               	movwf	___flge@ff1& (0+255),b
  3441  003F2A  0E00               	movlw	0
  3442  003F2C  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  3443  003F2E  0E00               	movlw	0
  3444  003F30  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  3445  003F32  0E40               	movlw	64
  3446  003F34  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  3447  003F36  C197  F0B5         	movff	sin@f,___flge@ff2
  3448  003F3A  C198  F0B6         	movff	sin@f+1,___flge@ff2+1
  3449  003F3E  C199  F0B7         	movff	sin@f+2,___flge@ff2+2
  3450  003F42  C19A  F0B8         	movff	sin@f+3,___flge@ff2+3
  3451  003F46  ECAE  F028         	call	___flge	;wreg free
  3452  003F4A  0100               	movlb	0	; () banked
  3453  003F4C  B0D8               	btfsc	status,0,c
  3454  003F4E  D025               	goto	l6833
  3455                           
  3456                           ; BSR set to: 0
  3457  003F50  C197  F18F         	movff	sin@f,___flsub@b
  3458  003F54  C198  F190         	movff	sin@f+1,___flsub@b+1
  3459  003F58  C199  F191         	movff	sin@f+2,___flsub@b+2
  3460  003F5C  C19A  F192         	movff	sin@f+3,___flsub@b+3
  3461  003F60  0E00               	movlw	0
  3462  003F62  0101               	movlb	1	; () banked
  3463  003F64  6F93               	movwf	___flsub@a& (0+255),b
  3464  003F66  0E00               	movlw	0
  3465  003F68  6F94               	movwf	(___flsub@a+1)& (0+255),b
  3466  003F6A  0E00               	movlw	0
  3467  003F6C  6F95               	movwf	(___flsub@a+2)& (0+255),b
  3468  003F6E  0E40               	movlw	64
  3469  003F70  6F96               	movwf	(___flsub@a+3)& (0+255),b
  3470  003F72  ECE1  F02D         	call	___flsub	;wreg free
  3471  003F76  C18F  F197         	movff	?___flsub,sin@f
  3472  003F7A  C190  F198         	movff	?___flsub+1,sin@f+1
  3473  003F7E  C191  F199         	movff	?___flsub+2,sin@f+2
  3474  003F82  C192  F19A         	movff	?___flsub+3,sin@f+3
  3475  003F86  0101               	movlb	1	; () banked
  3476  003F88  51A7               	movf	sin@sgn& (0+255),w,b
  3477  003F8A  0101               	movlb	1	; () banked
  3478  003F8C  A4D8               	btfss	status,2,c
  3479  003F8E  D002               	goto	u8620
  3480  003F90  0E01               	movlw	1
  3481  003F92  D001               	goto	u8630
  3482  003F94                     u8620:
  3483  003F94  0E00               	movlw	0
  3484  003F96                     u8630:
  3485  003F96  0101               	movlb	1	; () banked
  3486  003F98  6FA7               	movwf	sin@sgn& (0+255),b
  3487  003F9A                     l6833:
  3488  003F9A  0E00               	movlw	0
  3489  003F9C  0100               	movlb	0	; () banked
  3490  003F9E  6FB1               	movwf	___flge@ff1& (0+255),b
  3491  003FA0  0E00               	movlw	0
  3492  003FA2  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  3493  003FA4  0E80               	movlw	128
  3494  003FA6  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  3495  003FA8  0E3F               	movlw	63
  3496  003FAA  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  3497  003FAC  C197  F0B5         	movff	sin@f,___flge@ff2
  3498  003FB0  C198  F0B6         	movff	sin@f+1,___flge@ff2+1
  3499  003FB4  C199  F0B7         	movff	sin@f+2,___flge@ff2+2
  3500  003FB8  C19A  F0B8         	movff	sin@f+3,___flge@ff2+3
  3501  003FBC  ECAE  F028         	call	___flge	;wreg free
  3502  003FC0  0100               	movlb	0	; () banked
  3503  003FC2  B0D8               	btfsc	status,0,c
  3504  003FC4  D025               	goto	l6837
  3505                           
  3506                           ; BSR set to: 0
  3507  003FC6  C197  F0A9         	movff	sin@f,___flneg@f1
  3508  003FCA  C198  F0AA         	movff	sin@f+1,___flneg@f1+1
  3509  003FCE  C199  F0AB         	movff	sin@f+2,___flneg@f1+2
  3510  003FD2  C19A  F0AC         	movff	sin@f+3,___flneg@f1+3
  3511  003FD6  EC41  F02E         	call	___flneg	;wreg free
  3512  003FDA  C0A9  F0AD         	movff	?___flneg,___fladd@b
  3513  003FDE  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  3514  003FE2  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  3515  003FE6  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  3516  003FEA  0E00               	movlw	0
  3517  003FEC  0100               	movlb	0	; () banked
  3518  003FEE  6FB1               	movwf	___fladd@a& (0+255),b
  3519  003FF0  0E00               	movlw	0
  3520  003FF2  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  3521  003FF4  0E00               	movlw	0
  3522  003FF6  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  3523  003FF8  0E40               	movlw	64
  3524  003FFA  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  3525  003FFC  ECE2  F014         	call	___fladd	;wreg free
  3526  004000  C0AD  F197         	movff	?___fladd,sin@f
  3527  004004  C0AE  F198         	movff	?___fladd+1,sin@f+1
  3528  004008  C0AF  F199         	movff	?___fladd+2,sin@f+2
  3529  00400C  C0B0  F19A         	movff	?___fladd+3,sin@f+3
  3530  004010                     l6837:
  3531  004010  C197  F090         	movff	sin@f,___flmul@b
  3532  004014  C198  F091         	movff	sin@f+1,___flmul@b+1
  3533  004018  C199  F092         	movff	sin@f+2,___flmul@b+2
  3534  00401C  C19A  F093         	movff	sin@f+3,___flmul@b+3
  3535  004020  C197  F094         	movff	sin@f,___flmul@a
  3536  004024  C198  F095         	movff	sin@f+1,___flmul@a+1
  3537  004028  C199  F096         	movff	sin@f+2,___flmul@a+2
  3538  00402C  C19A  F097         	movff	sin@f+3,___flmul@a+3
  3539  004030  EC36  F017         	call	___flmul	;wreg free
  3540  004034  C090  F1A3         	movff	?___flmul,sin@x2
  3541  004038  C091  F1A4         	movff	?___flmul+1,sin@x2+1
  3542  00403C  C092  F1A5         	movff	?___flmul+2,sin@x2+2
  3543  004040  C093  F1A6         	movff	?___flmul+3,sin@x2+3
  3544  004044  C1A3  F0C1         	movff	sin@x2,eval_poly@x
  3545  004048  C1A4  F0C2         	movff	sin@x2+1,eval_poly@x+1
  3546  00404C  C1A5  F0C3         	movff	sin@x2+2,eval_poly@x+2
  3547  004050  C1A6  F0C4         	movff	sin@x2+3,eval_poly@x+3
  3548  004054  0E41               	movlw	low sin@coeff_b
  3549  004056  0100               	movlb	0	; () banked
  3550  004058  6FC5               	movwf	eval_poly@d& (0+255),b
  3551  00405A  0E0D               	movlw	high sin@coeff_b
  3552  00405C  0100               	movlb	0	; () banked
  3553  00405E  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  3554  004060  0E00               	movlw	0
  3555  004062  0100               	movlb	0	; () banked
  3556  004064  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  3557  004066  0E03               	movlw	3
  3558  004068  6FC7               	movwf	eval_poly@n& (0+255),b
  3559  00406A  ECA3  F02A         	call	_eval_poly	;wreg free
  3560  00406E  C0C1  F19B         	movff	?_eval_poly,sin@y
  3561  004072  C0C2  F19C         	movff	?_eval_poly+1,sin@y+1
  3562  004076  C0C3  F19D         	movff	?_eval_poly+2,sin@y+2
  3563  00407A  C0C4  F19E         	movff	?_eval_poly+3,sin@y+3
  3564  00407E  C19B  F07B         	movff	sin@y,___fldiv@a
  3565  004082  C19C  F07C         	movff	sin@y+1,___fldiv@a+1
  3566  004086  C19D  F07D         	movff	sin@y+2,___fldiv@a+2
  3567  00408A  C19E  F07E         	movff	sin@y+3,___fldiv@a+3
  3568  00408E  0E00               	movlw	0
  3569  004090  0100               	movlb	0	; () banked
  3570  004092  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  3571  004094  0E04               	movlw	4
  3572  004096  6FC7               	movwf	eval_poly@n& (0+255),b
  3573  004098  0E2D               	movlw	low sin@coeff_a
  3574  00409A  0100               	movlb	0	; () banked
  3575  00409C  6FC5               	movwf	eval_poly@d& (0+255),b
  3576  00409E  0E0D               	movlw	high sin@coeff_a
  3577  0040A0  0100               	movlb	0	; () banked
  3578  0040A2  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  3579  0040A4  C1A3  F0C1         	movff	sin@x2,eval_poly@x
  3580  0040A8  C1A4  F0C2         	movff	sin@x2+1,eval_poly@x+1
  3581  0040AC  C1A5  F0C3         	movff	sin@x2+2,eval_poly@x+2
  3582  0040B0  C1A6  F0C4         	movff	sin@x2+3,eval_poly@x+3
  3583  0040B4  ECA3  F02A         	call	_eval_poly	;wreg free
  3584  0040B8  C0C1  F077         	movff	?_eval_poly,___fldiv@b
  3585  0040BC  C0C2  F078         	movff	?_eval_poly+1,___fldiv@b+1
  3586  0040C0  C0C3  F079         	movff	?_eval_poly+2,___fldiv@b+2
  3587  0040C4  C0C4  F07A         	movff	?_eval_poly+3,___fldiv@b+3
  3588  0040C8  EC6E  F01B         	call	___fldiv	;wreg free
  3589  0040CC  C077  F19F         	movff	?___fldiv,_sin$3750
  3590  0040D0  C078  F1A0         	movff	?___fldiv+1,_sin$3750+1
  3591  0040D4  C079  F1A1         	movff	?___fldiv+2,_sin$3750+2
  3592  0040D8  C07A  F1A2         	movff	?___fldiv+3,_sin$3750+3
  3593  0040DC  C197  F090         	movff	sin@f,___flmul@b
  3594  0040E0  C198  F091         	movff	sin@f+1,___flmul@b+1
  3595  0040E4  C199  F092         	movff	sin@f+2,___flmul@b+2
  3596  0040E8  C19A  F093         	movff	sin@f+3,___flmul@b+3
  3597  0040EC  C19F  F094         	movff	_sin$3750,___flmul@a
  3598  0040F0  C1A0  F095         	movff	_sin$3750+1,___flmul@a+1
  3599  0040F4  C1A1  F096         	movff	_sin$3750+2,___flmul@a+2
  3600  0040F8  C1A2  F097         	movff	_sin$3750+3,___flmul@a+3
  3601  0040FC  EC36  F017         	call	___flmul	;wreg free
  3602  004100  C090  F197         	movff	?___flmul,sin@f
  3603  004104  C091  F198         	movff	?___flmul+1,sin@f+1
  3604  004108  C092  F199         	movff	?___flmul+2,sin@f+2
  3605  00410C  C093  F19A         	movff	?___flmul+3,sin@f+3
  3606  004110  0101               	movlb	1	; () banked
  3607  004112  51A7               	movf	sin@sgn& (0+255),w,b
  3608  004114  0101               	movlb	1	; () banked
  3609  004116  B4D8               	btfsc	status,2,c
  3610  004118  D013               	goto	l1292
  3611                           
  3612                           ; BSR set to: 1
  3613  00411A  C197  F0A9         	movff	sin@f,___flneg@f1
  3614  00411E  C198  F0AA         	movff	sin@f+1,___flneg@f1+1
  3615  004122  C199  F0AB         	movff	sin@f+2,___flneg@f1+2
  3616  004126  C19A  F0AC         	movff	sin@f+3,___flneg@f1+3
  3617  00412A  EC41  F02E         	call	___flneg	;wreg free
  3618  00412E  C0A9  F197         	movff	?___flneg,?_sin
  3619  004132  C0AA  F198         	movff	?___flneg+1,?_sin+1
  3620  004136  C0AB  F199         	movff	?___flneg+2,?_sin+2
  3621  00413A  C0AC  F19A         	movff	?___flneg+3,?_sin+3
  3622  00413E  0012               	return	
  3623  004140                     l1292:
  3624                           
  3625                           ; BSR set to: 1
  3626  004140  C197  F197         	movff	sin@f,?_sin
  3627  004144  C198  F198         	movff	sin@f+1,?_sin+1
  3628  004148  C199  F199         	movff	sin@f+2,?_sin+2
  3629  00414C  C19A  F19A         	movff	sin@f+3,?_sin+3
  3630  004150  0012               	return		;funcret
  3631  004152                     __end_of_sin:
  3632                           	opt stack 0
  3633                           tblptru	equ	0xFF8
  3634                           tblptrh	equ	0xFF7
  3635                           tblptrl	equ	0xFF6
  3636                           tablat	equ	0xFF5
  3637                           postinc0	equ	0xFEE
  3638                           wreg	equ	0xFE8
  3639                           postdec1	equ	0xFE5
  3640                           fsr1l	equ	0xFE1
  3641                           postinc2	equ	0xFDE
  3642                           postdec2	equ	0xFDD
  3643                           status	equ	0xFD8
  3644                           
  3645 ;; *************** function _floor *****************
  3646 ;; Defined at:
  3647 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\floor.c"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;  x               4  115[BANK0 ] unsigned char 
  3650 ;; Auto vars:     Size  Location     Type
  3651 ;;  i               4    6[BANK1 ] unsigned char 
  3652 ;;  expon           2   10[BANK1 ] int 
  3653 ;; Return value:  Size  Location     Type
  3654 ;;                  4  115[BANK0 ] int 
  3655 ;; Registers used:
  3656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3657 ;; Tracked objects:
  3658 ;;		On entry : 0/0
  3659 ;;		On exit  : 0/0
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3662 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3663 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3665 ;;      Totals:         0       4       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3666 ;;Total ram usage:       10 bytes
  3667 ;; Hardware stack levels used:    1
  3668 ;; Hardware stack levels required when called:    5
  3669 ;; This function calls:
  3670 ;;		___fladd
  3671 ;;		___flge
  3672 ;;		___fltol
  3673 ;;		___xxtofl
  3674 ;;		_frexp
  3675 ;; This function is called by:
  3676 ;;		_sin
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680                           	psect	text8
  3681  005422                     __ptext8:
  3682                           	opt stack 0
  3683  005422                     _floor:
  3684                           	opt stack 21
  3685                           
  3686                           ;incstack = 0
  3687  005422  C0D3  F077         	movff	floor@x,frexp@value
  3688  005426  C0D4  F078         	movff	floor@x+1,frexp@value+1
  3689  00542A  C0D5  F079         	movff	floor@x+2,frexp@value+2
  3690  00542E  C0D6  F07A         	movff	floor@x+3,frexp@value+3
  3691  005432  0E8D               	movlw	low floor@expon
  3692  005434  0100               	movlb	0	; () banked
  3693  005436  6F7B               	movwf	frexp@eptr& (0+255),b
  3694  005438  0E01               	movlw	high floor@expon
  3695  00543A  0100               	movlb	0	; () banked
  3696  00543C  6F7C               	movwf	(frexp@eptr+1)& (0+255),b
  3697  00543E  EC97  F02C         	call	_frexp	;wreg free
  3698  005442  0101               	movlb	1	; () banked
  3699  005444  AF8E               	btfss	(floor@expon+1)& (0+255),7,b
  3700  005446  D017               	goto	l6675
  3701                           
  3702                           ; BSR set to: 1
  3703  005448  0100               	movlb	0	; () banked
  3704  00544A  AFD6               	btfss	(floor@x+3)& (0+255),7,b
  3705  00544C  D00A               	goto	l6671
  3706                           
  3707                           ; BSR set to: 0
  3708  00544E  0E00               	movlw	0
  3709  005450  0100               	movlb	0	; () banked
  3710  005452  6FD3               	movwf	?_floor& (0+255),b
  3711  005454  0E00               	movlw	0
  3712  005456  6FD4               	movwf	(?_floor+1)& (0+255),b
  3713  005458  0E80               	movlw	128
  3714  00545A  6FD5               	movwf	(?_floor+2)& (0+255),b
  3715  00545C  0EBF               	movlw	191
  3716  00545E  6FD6               	movwf	(?_floor+3)& (0+255),b
  3717                           
  3718                           ; BSR set to: 0
  3719  005460  0012               	return	
  3720  005462                     l6671:
  3721                           
  3722                           ; BSR set to: 0
  3723  005462  0E00               	movlw	0
  3724  005464  0100               	movlb	0	; () banked
  3725  005466  6FD3               	movwf	?_floor& (0+255),b
  3726  005468  0E00               	movlw	0
  3727  00546A  6FD4               	movwf	(?_floor+1)& (0+255),b
  3728  00546C  0E00               	movlw	0
  3729  00546E  6FD5               	movwf	(?_floor+2)& (0+255),b
  3730  005470  0E00               	movlw	0
  3731  005472  6FD6               	movwf	(?_floor+3)& (0+255),b
  3732                           
  3733                           ; BSR set to: 0
  3734  005474  0012               	return	
  3735  005476                     l6675:
  3736  005476  0101               	movlb	1	; () banked
  3737  005478  518E               	movf	(floor@expon+1)& (0+255),w,b
  3738  00547A  E105               	bnz	u8410
  3739  00547C  0E1D               	movlw	29
  3740  00547E  0101               	movlb	1	; () banked
  3741  005480  5D8D               	subwf	floor@expon& (0+255),w,b
  3742  005482  A0D8               	btfss	status,0,c
  3743  005484  D009               	goto	l6679
  3744  005486                     u8410:
  3745                           
  3746                           ; BSR set to: 1
  3747  005486  C0D3  F0D3         	movff	floor@x,?_floor
  3748  00548A  C0D4  F0D4         	movff	floor@x+1,?_floor+1
  3749  00548E  C0D5  F0D5         	movff	floor@x+2,?_floor+2
  3750  005492  C0D6  F0D6         	movff	floor@x+3,?_floor+3
  3751  005496  0012               	return	
  3752  005498                     l6679:
  3753                           
  3754                           ; BSR set to: 1
  3755  005498  C0D3  F0C1         	movff	floor@x,___fltol@f1
  3756  00549C  C0D4  F0C2         	movff	floor@x+1,___fltol@f1+1
  3757  0054A0  C0D5  F0C3         	movff	floor@x+2,___fltol@f1+2
  3758  0054A4  C0D6  F0C4         	movff	floor@x+3,___fltol@f1+3
  3759  0054A8  EC2F  F02B         	call	___fltol	;wreg free
  3760  0054AC  C0C1  F0CB         	movff	?___fltol,___xxtofl@val
  3761  0054B0  C0C2  F0CC         	movff	?___fltol+1,___xxtofl@val+1
  3762  0054B4  C0C3  F0CD         	movff	?___fltol+2,___xxtofl@val+2
  3763  0054B8  C0C4  F0CE         	movff	?___fltol+3,___xxtofl@val+3
  3764  0054BC  0E01               	movlw	1
  3765  0054BE  EC10  F026         	call	___xxtofl
  3766  0054C2  C0CB  F189         	movff	?___xxtofl,floor@i
  3767  0054C6  C0CC  F18A         	movff	?___xxtofl+1,floor@i+1
  3768  0054CA  C0CD  F18B         	movff	?___xxtofl+2,floor@i+2
  3769  0054CE  C0CE  F18C         	movff	?___xxtofl+3,floor@i+3
  3770  0054D2  C0D3  F0B1         	movff	floor@x,___flge@ff1
  3771  0054D6  C0D4  F0B2         	movff	floor@x+1,___flge@ff1+1
  3772  0054DA  C0D5  F0B3         	movff	floor@x+2,___flge@ff1+2
  3773  0054DE  C0D6  F0B4         	movff	floor@x+3,___flge@ff1+3
  3774  0054E2  C189  F0B5         	movff	floor@i,___flge@ff2
  3775  0054E6  C18A  F0B6         	movff	floor@i+1,___flge@ff2+1
  3776  0054EA  C18B  F0B7         	movff	floor@i+2,___flge@ff2+2
  3777  0054EE  C18C  F0B8         	movff	floor@i+3,___flge@ff2+3
  3778  0054F2  ECAE  F028         	call	___flge	;wreg free
  3779  0054F6  0100               	movlb	0	; () banked
  3780  0054F8  B0D8               	btfsc	status,0,c
  3781  0054FA  D01C               	goto	l1461
  3782                           
  3783                           ; BSR set to: 0
  3784  0054FC  C189  F0AD         	movff	floor@i,___fladd@b
  3785  005500  C18A  F0AE         	movff	floor@i+1,___fladd@b+1
  3786  005504  C18B  F0AF         	movff	floor@i+2,___fladd@b+2
  3787  005508  C18C  F0B0         	movff	floor@i+3,___fladd@b+3
  3788  00550C  0E00               	movlw	0
  3789  00550E  0100               	movlb	0	; () banked
  3790  005510  6FB1               	movwf	___fladd@a& (0+255),b
  3791  005512  0E00               	movlw	0
  3792  005514  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  3793  005516  0E80               	movlw	128
  3794  005518  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  3795  00551A  0EBF               	movlw	191
  3796  00551C  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  3797  00551E  ECE2  F014         	call	___fladd	;wreg free
  3798  005522  C0AD  F0D3         	movff	?___fladd,?_floor
  3799  005526  C0AE  F0D4         	movff	?___fladd+1,?_floor+1
  3800  00552A  C0AF  F0D5         	movff	?___fladd+2,?_floor+2
  3801  00552E  C0B0  F0D6         	movff	?___fladd+3,?_floor+3
  3802  005532  0012               	return	
  3803  005534                     l1461:
  3804                           
  3805                           ; BSR set to: 0
  3806  005534  C189  F0D3         	movff	floor@i,?_floor
  3807  005538  C18A  F0D4         	movff	floor@i+1,?_floor+1
  3808  00553C  C18B  F0D5         	movff	floor@i+2,?_floor+2
  3809  005540  C18C  F0D6         	movff	floor@i+3,?_floor+3
  3810  005544  0012               	return		;funcret
  3811  005546                     __end_of_floor:
  3812                           	opt stack 0
  3813                           tblptru	equ	0xFF8
  3814                           tblptrh	equ	0xFF7
  3815                           tblptrl	equ	0xFF6
  3816                           tablat	equ	0xFF5
  3817                           postinc0	equ	0xFEE
  3818                           wreg	equ	0xFE8
  3819                           postdec1	equ	0xFE5
  3820                           fsr1l	equ	0xFE1
  3821                           postinc2	equ	0xFDE
  3822                           postdec2	equ	0xFDD
  3823                           status	equ	0xFD8
  3824                           
  3825 ;; *************** function _frexp *****************
  3826 ;; Defined at:
  3827 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\frexp.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;  value           4   23[BANK0 ] int 
  3830 ;;  eptr            2   27[BANK0 ] PTR int 
  3831 ;;		 -> floor@expon(2), 
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;		None
  3834 ;; Return value:  Size  Location     Type
  3835 ;;                  4   23[BANK0 ] PTR int 
  3836 ;; Registers used:
  3837 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3838 ;; Tracked objects:
  3839 ;;		On entry : 0/0
  3840 ;;		On exit  : 0/0
  3841 ;;		Unchanged: 0/0
  3842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3843 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3845 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3846 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3847 ;;Total ram usage:        8 bytes
  3848 ;; Hardware stack levels used:    1
  3849 ;; Hardware stack levels required when called:    4
  3850 ;; This function calls:
  3851 ;;		Nothing
  3852 ;; This function is called by:
  3853 ;;		_floor
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           	psect	text9
  3858  00592E                     __ptext9:
  3859                           	opt stack 0
  3860  00592E                     _frexp:
  3861                           	opt stack 21
  3862                           
  3863                           ;incstack = 0
  3864  00592E  0100               	movlb	0	; () banked
  3865  005930  5177               	movf	frexp@value& (0+255),w,b
  3866  005932  0100               	movlb	0	; () banked
  3867  005934  1178               	iorwf	(frexp@value+1)& (0+255),w,b
  3868  005936  0100               	movlb	0	; () banked
  3869  005938  1179               	iorwf	(frexp@value+2)& (0+255),w,b
  3870  00593A  0100               	movlb	0	; () banked
  3871  00593C  117A               	iorwf	(frexp@value+3)& (0+255),w,b
  3872  00593E  A4D8               	btfss	status,2,c
  3873  005940  D009               	goto	l6497
  3874                           
  3875                           ; BSR set to: 0
  3876  005942  C07B  FFD9         	movff	frexp@eptr,fsr2l
  3877  005946  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  3878  00594A  0E00               	movlw	0
  3879  00594C  6EDE               	movwf	postinc2,c
  3880  00594E  0E00               	movlw	0
  3881  005950  6EDD               	movwf	postdec2,c
  3882                           
  3883                           ; BSR set to: 0
  3884                           ;	Return value of _frexp is never used
  3885  005952  0012               	return	
  3886  005954                     l6497:
  3887                           
  3888                           ; BSR set to: 0
  3889  005954  0100               	movlb	0	; () banked
  3890  005956  517A               	movf	(frexp@value+3)& (0+255),w,b
  3891  005958  0B7F               	andlw	127
  3892  00595A  0100               	movlb	0	; () banked
  3893  00595C  6F7D               	movwf	??_frexp& (0+255),b
  3894  00595E  6B7E               	clrf	(??_frexp+1)& (0+255),b
  3895  005960  90D8               	bcf	status,0,c
  3896  005962  0100               	movlb	0	; () banked
  3897  005964  377D               	rlcf	??_frexp& (0+255),f,b
  3898  005966  377E               	rlcf	(??_frexp+1)& (0+255),f,b
  3899  005968  C07B  FFD9         	movff	frexp@eptr,fsr2l
  3900  00596C  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  3901  005970  C07D  FFDE         	movff	??_frexp,postinc2
  3902  005974  C07E  FFDD         	movff	??_frexp+1,postdec2
  3903  005978  0100               	movlb	0	; () banked
  3904  00597A  AF79               	btfss	(frexp@value+2)& (0+255),7,b
  3905  00597C  D004               	goto	u8130
  3906  00597E  0100               	movlb	0	; () banked
  3907  005980  6B7D               	clrf	??_frexp& (0+255),b
  3908  005982  2B7D               	incf	??_frexp& (0+255),f,b
  3909  005984  D002               	goto	u8138
  3910  005986                     u8130:
  3911  005986  0100               	movlb	0	; () banked
  3912  005988  6B7D               	clrf	??_frexp& (0+255),b
  3913  00598A                     u8138:
  3914  00598A  0100               	movlb	0	; () banked
  3915  00598C  517D               	movf	??_frexp& (0+255),w,b
  3916  00598E  C07B  FFD9         	movff	frexp@eptr,fsr2l
  3917  005992  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  3918  005996  12DE               	iorwf	postinc2,f,c
  3919  005998  0E00               	movlw	0
  3920  00599A  12DD               	iorwf	postdec2,f,c
  3921                           
  3922                           ; BSR set to: 0
  3923  00599C  C07B  FFD9         	movff	frexp@eptr,fsr2l
  3924  0059A0  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  3925  0059A4  0E82               	movlw	130
  3926  0059A6  26DE               	addwf	postinc2,f,c
  3927  0059A8  0EFF               	movlw	255
  3928  0059AA  22DD               	addwfc	postdec2,f,c
  3929                           
  3930                           ; BSR set to: 0
  3931  0059AC  0100               	movlb	0	; () banked
  3932  0059AE  817A               	bsf	(frexp@value+3)& (0+255),0,b
  3933  0059B0  837A               	bsf	(frexp@value+3)& (0+255),1,b
  3934  0059B2  857A               	bsf	(frexp@value+3)& (0+255),2,b
  3935  0059B4  877A               	bsf	(frexp@value+3)& (0+255),3,b
  3936  0059B6  897A               	bsf	(frexp@value+3)& (0+255),4,b
  3937  0059B8  8B7A               	bsf	(frexp@value+3)& (0+255),5,b
  3938  0059BA  9D7A               	bcf	(frexp@value+3)& (0+255),6,b
  3939                           
  3940                           ; BSR set to: 0
  3941  0059BC  0100               	movlb	0	; () banked
  3942  0059BE  9F79               	bcf	(frexp@value+2)& (0+255),7,b
  3943  0059C0  0012               	return	
  3944  0059C2                     __end_of_frexp:
  3945                           	opt stack 0
  3946                           tblptru	equ	0xFF8
  3947                           tblptrh	equ	0xFF7
  3948                           tblptrl	equ	0xFF6
  3949                           tablat	equ	0xFF5
  3950                           postinc0	equ	0xFEE
  3951                           wreg	equ	0xFE8
  3952                           postdec1	equ	0xFE5
  3953                           fsr1l	equ	0xFE1
  3954                           postinc2	equ	0xFDE
  3955                           postdec2	equ	0xFDD
  3956                           fsr2h	equ	0xFDA
  3957                           fsr2l	equ	0xFD9
  3958                           status	equ	0xFD8
  3959                           
  3960 ;; *************** function ___xxtofl *****************
  3961 ;; Defined at:
  3962 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;  sign            1    wreg     unsigned char 
  3965 ;;  val             4  107[BANK0 ] long 
  3966 ;; Auto vars:     Size  Location     Type
  3967 ;;  sign            1    0[BANK1 ] unsigned char 
  3968 ;;  arg             4    2[BANK1 ] unsigned long 
  3969 ;;  exp             1    1[BANK1 ] unsigned char 
  3970 ;; Return value:  Size  Location     Type
  3971 ;;                  4  107[BANK0 ] unsigned char 
  3972 ;; Registers used:
  3973 ;;		wreg, status,2, status,0
  3974 ;; Tracked objects:
  3975 ;;		On entry : 0/0
  3976 ;;		On exit  : 0/0
  3977 ;;		Unchanged: 0/0
  3978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3979 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3980 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3981 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3982 ;;      Totals:         0       8       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3983 ;;Total ram usage:       14 bytes
  3984 ;; Hardware stack levels used:    1
  3985 ;; Hardware stack levels required when called:    4
  3986 ;; This function calls:
  3987 ;;		Nothing
  3988 ;; This function is called by:
  3989 ;;		_park_search
  3990 ;;		_park_routine
  3991 ;;		_parallelo
  3992 ;;		_floor
  3993 ;; This function uses a non-reentrant model
  3994 ;;
  3995                           
  3996                           	psect	text10
  3997  004C20                     __ptext10:
  3998                           	opt stack 0
  3999  004C20                     ___xxtofl:
  4000                           	opt stack 24
  4001                           
  4002                           ; BSR set to: 0
  4003                           ;incstack = 0
  4004                           ;___xxtofl@sign stored from wreg
  4005  004C20  0101               	movlb	1	; () banked
  4006  004C22  6F83               	movwf	___xxtofl@sign& (0+255),b
  4007  004C24  0101               	movlb	1	; () banked
  4008  004C26  5183               	movf	___xxtofl@sign& (0+255),w,b
  4009  004C28  0101               	movlb	1	; () banked
  4010  004C2A  B4D8               	btfsc	status,2,c
  4011  004C2C  D01E               	goto	l1436
  4012                           
  4013                           ; BSR set to: 1
  4014  004C2E  0100               	movlb	0	; () banked
  4015  004C30  AFCE               	btfss	(___xxtofl@val+3)& (0+255),7,b
  4016  004C32  D01B               	goto	l1436
  4017                           
  4018                           ; BSR set to: 0
  4019  004C34  C0CB  F0CF         	movff	___xxtofl@val,??___xxtofl
  4020  004C38  C0CC  F0D0         	movff	___xxtofl@val+1,??___xxtofl+1
  4021  004C3C  C0CD  F0D1         	movff	___xxtofl@val+2,??___xxtofl+2
  4022  004C40  C0CE  F0D2         	movff	___xxtofl@val+3,??___xxtofl+3
  4023  004C44  0100               	movlb	0	; () banked
  4024  004C46  1FCF               	comf	??___xxtofl& (0+255),f,b
  4025  004C48  1FD0               	comf	(??___xxtofl+1)& (0+255),f,b
  4026  004C4A  1FD1               	comf	(??___xxtofl+2)& (0+255),f,b
  4027  004C4C  1FD2               	comf	(??___xxtofl+3)& (0+255),f,b
  4028  004C4E  2BCF               	incf	??___xxtofl& (0+255),f,b
  4029  004C50  0E00               	movlw	0
  4030  004C52  23D0               	addwfc	(??___xxtofl+1)& (0+255),f,b
  4031  004C54  23D1               	addwfc	(??___xxtofl+2)& (0+255),f,b
  4032  004C56  23D2               	addwfc	(??___xxtofl+3)& (0+255),f,b
  4033  004C58  C0CF  F185         	movff	??___xxtofl,___xxtofl@arg
  4034  004C5C  C0D0  F186         	movff	??___xxtofl+1,___xxtofl@arg+1
  4035  004C60  C0D1  F187         	movff	??___xxtofl+2,___xxtofl@arg+2
  4036  004C64  C0D2  F188         	movff	??___xxtofl+3,___xxtofl@arg+3
  4037  004C68  D008               	goto	l6455
  4038  004C6A                     l1436:
  4039  004C6A  C0CB  F185         	movff	___xxtofl@val,___xxtofl@arg
  4040  004C6E  C0CC  F186         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4041  004C72  C0CD  F187         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4042  004C76  C0CE  F188         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4043  004C7A                     l6455:
  4044  004C7A  0100               	movlb	0	; () banked
  4045  004C7C  51CB               	movf	___xxtofl@val& (0+255),w,b
  4046  004C7E  0100               	movlb	0	; () banked
  4047  004C80  11CC               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  4048  004C82  0100               	movlb	0	; () banked
  4049  004C84  11CD               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  4050  004C86  0100               	movlb	0	; () banked
  4051  004C88  11CE               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  4052  004C8A  A4D8               	btfss	status,2,c
  4053  004C8C  D00A               	goto	l6461
  4054                           
  4055                           ; BSR set to: 0
  4056  004C8E  0E00               	movlw	0
  4057  004C90  0100               	movlb	0	; () banked
  4058  004C92  6FCB               	movwf	?___xxtofl& (0+255),b
  4059  004C94  0E00               	movlw	0
  4060  004C96  6FCC               	movwf	(?___xxtofl+1)& (0+255),b
  4061  004C98  0E00               	movlw	0
  4062  004C9A  6FCD               	movwf	(?___xxtofl+2)& (0+255),b
  4063  004C9C  0E00               	movlw	0
  4064  004C9E  6FCE               	movwf	(?___xxtofl+3)& (0+255),b
  4065                           
  4066                           ; BSR set to: 0
  4067  004CA0  0012               	return	
  4068  004CA2                     l6461:
  4069                           
  4070                           ; BSR set to: 0
  4071  004CA2  0E96               	movlw	150
  4072  004CA4  0101               	movlb	1	; () banked
  4073  004CA6  6F84               	movwf	___xxtofl@exp& (0+255),b
  4074  004CA8  D008               	goto	l6465
  4075  004CAA                     l6463:
  4076  004CAA  0101               	movlb	1	; () banked
  4077  004CAC  2B84               	incf	___xxtofl@exp& (0+255),f,b
  4078  004CAE  0101               	movlb	1	; () banked
  4079  004CB0  90D8               	bcf	status,0,c
  4080  004CB2  3388               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  4081  004CB4  3387               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  4082  004CB6  3386               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  4083  004CB8  3385               	rrcf	___xxtofl@arg& (0+255),f,b
  4084  004CBA                     l6465:
  4085                           
  4086                           ; BSR set to: 1
  4087  004CBA  0E00               	movlw	0
  4088  004CBC  0101               	movlb	1	; () banked
  4089  004CBE  1585               	andwf	___xxtofl@arg& (0+255),w,b
  4090  004CC0  0100               	movlb	0	; () banked
  4091  004CC2  6FCF               	movwf	??___xxtofl& (0+255),b
  4092  004CC4  0E00               	movlw	0
  4093  004CC6  0101               	movlb	1	; () banked
  4094  004CC8  1586               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  4095  004CCA  0100               	movlb	0	; () banked
  4096  004CCC  6FD0               	movwf	(??___xxtofl+1)& (0+255),b
  4097  004CCE  0E00               	movlw	0
  4098  004CD0  0101               	movlb	1	; () banked
  4099  004CD2  1587               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  4100  004CD4  0100               	movlb	0	; () banked
  4101  004CD6  6FD1               	movwf	(??___xxtofl+2)& (0+255),b
  4102  004CD8  0EFE               	movlw	254
  4103  004CDA  0101               	movlb	1	; () banked
  4104  004CDC  1588               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  4105  004CDE  0100               	movlb	0	; () banked
  4106  004CE0  6FD2               	movwf	(??___xxtofl+3)& (0+255),b
  4107  004CE2  0100               	movlb	0	; () banked
  4108  004CE4  51CF               	movf	??___xxtofl& (0+255),w,b
  4109  004CE6  0100               	movlb	0	; () banked
  4110  004CE8  11D0               	iorwf	(??___xxtofl+1)& (0+255),w,b
  4111  004CEA  0100               	movlb	0	; () banked
  4112  004CEC  11D1               	iorwf	(??___xxtofl+2)& (0+255),w,b
  4113  004CEE  0100               	movlb	0	; () banked
  4114  004CF0  11D2               	iorwf	(??___xxtofl+3)& (0+255),w,b
  4115  004CF2  B4D8               	btfsc	status,2,c
  4116  004CF4  D010               	goto	l1443
  4117  004CF6  D7D9               	goto	l6463
  4118  004CF8                     l6467:
  4119                           
  4120                           ; BSR set to: 0
  4121  004CF8  0101               	movlb	1	; () banked
  4122  004CFA  2B84               	incf	___xxtofl@exp& (0+255),f,b
  4123                           
  4124                           ; BSR set to: 1
  4125  004CFC  0E01               	movlw	1
  4126  004CFE  0101               	movlb	1	; () banked
  4127  004D00  2785               	addwf	___xxtofl@arg& (0+255),f,b
  4128  004D02  0E00               	movlw	0
  4129  004D04  2386               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  4130  004D06  2387               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  4131  004D08  2388               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  4132                           
  4133                           ; BSR set to: 1
  4134  004D0A  0101               	movlb	1	; () banked
  4135  004D0C  90D8               	bcf	status,0,c
  4136  004D0E  3388               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  4137  004D10  3387               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  4138  004D12  3386               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  4139  004D14  3385               	rrcf	___xxtofl@arg& (0+255),f,b
  4140  004D16                     l1443:
  4141  004D16  0E00               	movlw	0
  4142  004D18  0101               	movlb	1	; () banked
  4143  004D1A  1585               	andwf	___xxtofl@arg& (0+255),w,b
  4144  004D1C  0100               	movlb	0	; () banked
  4145  004D1E  6FCF               	movwf	??___xxtofl& (0+255),b
  4146  004D20  0E00               	movlw	0
  4147  004D22  0101               	movlb	1	; () banked
  4148  004D24  1586               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  4149  004D26  0100               	movlb	0	; () banked
  4150  004D28  6FD0               	movwf	(??___xxtofl+1)& (0+255),b
  4151  004D2A  0E00               	movlw	0
  4152  004D2C  0101               	movlb	1	; () banked
  4153  004D2E  1587               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  4154  004D30  0100               	movlb	0	; () banked
  4155  004D32  6FD1               	movwf	(??___xxtofl+2)& (0+255),b
  4156  004D34  0EFF               	movlw	255
  4157  004D36  0101               	movlb	1	; () banked
  4158  004D38  1588               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  4159  004D3A  0100               	movlb	0	; () banked
  4160  004D3C  6FD2               	movwf	(??___xxtofl+3)& (0+255),b
  4161  004D3E  0100               	movlb	0	; () banked
  4162  004D40  51CF               	movf	??___xxtofl& (0+255),w,b
  4163  004D42  0100               	movlb	0	; () banked
  4164  004D44  11D0               	iorwf	(??___xxtofl+1)& (0+255),w,b
  4165  004D46  0100               	movlb	0	; () banked
  4166  004D48  11D1               	iorwf	(??___xxtofl+2)& (0+255),w,b
  4167  004D4A  0100               	movlb	0	; () banked
  4168  004D4C  11D2               	iorwf	(??___xxtofl+3)& (0+255),w,b
  4169  004D4E  B4D8               	btfsc	status,2,c
  4170  004D50  D009               	goto	l6475
  4171  004D52  D7D2               	goto	l6467
  4172  004D54                     l6473:
  4173  004D54  0101               	movlb	1	; () banked
  4174  004D56  0784               	decf	___xxtofl@exp& (0+255),f,b
  4175  004D58  0101               	movlb	1	; () banked
  4176  004D5A  90D8               	bcf	status,0,c
  4177  004D5C  3785               	rlcf	___xxtofl@arg& (0+255),f,b
  4178  004D5E  3786               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  4179  004D60  3787               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  4180  004D62  3788               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  4181  004D64                     l6475:
  4182  004D64  0101               	movlb	1	; () banked
  4183  004D66  BF87               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  4184  004D68  D004               	goto	l1450
  4185                           
  4186                           ; BSR set to: 1
  4187  004D6A  0E02               	movlw	2
  4188  004D6C  0101               	movlb	1	; () banked
  4189  004D6E  6184               	cpfslt	___xxtofl@exp& (0+255),b
  4190  004D70  D7F1               	goto	l6473
  4191  004D72                     l1450:
  4192                           
  4193                           ; BSR set to: 1
  4194  004D72  0101               	movlb	1	; () banked
  4195  004D74  B184               	btfsc	___xxtofl@exp& (0+255),0,b
  4196  004D76  D009               	goto	l1451
  4197                           
  4198                           ; BSR set to: 1
  4199  004D78  0EFF               	movlw	255
  4200  004D7A  0101               	movlb	1	; () banked
  4201  004D7C  1785               	andwf	___xxtofl@arg& (0+255),f,b
  4202  004D7E  0EFF               	movlw	255
  4203  004D80  1786               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  4204  004D82  0E7F               	movlw	127
  4205  004D84  1787               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  4206  004D86  0EFF               	movlw	255
  4207  004D88  1788               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  4208  004D8A                     l1451:
  4209                           
  4210                           ; BSR set to: 1
  4211  004D8A  0101               	movlb	1	; () banked
  4212  004D8C  90D8               	bcf	status,0,c
  4213  004D8E  3384               	rrcf	___xxtofl@exp& (0+255),f,b
  4214  004D90  C184  F0CF         	movff	___xxtofl@exp,??___xxtofl
  4215  004D94  0100               	movlb	0	; () banked
  4216  004D96  6BD0               	clrf	(??___xxtofl+1)& (0+255),b
  4217  004D98  6BD1               	clrf	(??___xxtofl+2)& (0+255),b
  4218  004D9A  6BD2               	clrf	(??___xxtofl+3)& (0+255),b
  4219  004D9C  C0CF  F0D2         	movff	??___xxtofl,??___xxtofl+3
  4220  004DA0  0100               	movlb	0	; () banked
  4221  004DA2  6BD1               	clrf	(??___xxtofl+2)& (0+255),b
  4222  004DA4  6BD0               	clrf	(??___xxtofl+1)& (0+255),b
  4223  004DA6  6BCF               	clrf	??___xxtofl& (0+255),b
  4224  004DA8  0100               	movlb	0	; () banked
  4225  004DAA  51CF               	movf	??___xxtofl& (0+255),w,b
  4226  004DAC  0101               	movlb	1	; () banked
  4227  004DAE  1385               	iorwf	___xxtofl@arg& (0+255),f,b
  4228  004DB0  0100               	movlb	0	; () banked
  4229  004DB2  51D0               	movf	(??___xxtofl+1)& (0+255),w,b
  4230  004DB4  0101               	movlb	1	; () banked
  4231  004DB6  1386               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  4232  004DB8  0100               	movlb	0	; () banked
  4233  004DBA  51D1               	movf	(??___xxtofl+2)& (0+255),w,b
  4234  004DBC  0101               	movlb	1	; () banked
  4235  004DBE  1387               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  4236  004DC0  0100               	movlb	0	; () banked
  4237  004DC2  51D2               	movf	(??___xxtofl+3)& (0+255),w,b
  4238  004DC4  0101               	movlb	1	; () banked
  4239  004DC6  1388               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  4240                           
  4241                           ; BSR set to: 1
  4242  004DC8  0101               	movlb	1	; () banked
  4243  004DCA  5183               	movf	___xxtofl@sign& (0+255),w,b
  4244  004DCC  0101               	movlb	1	; () banked
  4245  004DCE  B4D8               	btfsc	status,2,c
  4246  004DD0  D005               	goto	l6487
  4247                           
  4248                           ; BSR set to: 1
  4249  004DD2  0100               	movlb	0	; () banked
  4250  004DD4  AFCE               	btfss	(___xxtofl@val+3)& (0+255),7,b
  4251  004DD6  D002               	goto	l6487
  4252                           
  4253                           ; BSR set to: 0
  4254  004DD8  0101               	movlb	1	; () banked
  4255  004DDA  8F88               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  4256  004DDC                     l6487:
  4257  004DDC  C185  F0CB         	movff	___xxtofl@arg,?___xxtofl
  4258  004DE0  C186  F0CC         	movff	___xxtofl@arg+1,?___xxtofl+1
  4259  004DE4  C187  F0CD         	movff	___xxtofl@arg+2,?___xxtofl+2
  4260  004DE8  C188  F0CE         	movff	___xxtofl@arg+3,?___xxtofl+3
  4261  004DEC  0012               	return	
  4262  004DEE                     __end_of___xxtofl:
  4263                           	opt stack 0
  4264                           tblptru	equ	0xFF8
  4265                           tblptrh	equ	0xFF7
  4266                           tblptrl	equ	0xFF6
  4267                           tablat	equ	0xFF5
  4268                           postinc0	equ	0xFEE
  4269                           wreg	equ	0xFE8
  4270                           postdec1	equ	0xFE5
  4271                           fsr1l	equ	0xFE1
  4272                           postinc2	equ	0xFDE
  4273                           postdec2	equ	0xFDD
  4274                           fsr2h	equ	0xFDA
  4275                           fsr2l	equ	0xFD9
  4276                           status	equ	0xFD8
  4277                           
  4278 ;; *************** function ___fltol *****************
  4279 ;; Defined at:
  4280 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  4281 ;; Parameters:    Size  Location     Type
  4282 ;;  f1              4   97[BANK0 ] unsigned char 
  4283 ;; Auto vars:     Size  Location     Type
  4284 ;;  exp1            1  106[BANK0 ] unsigned char 
  4285 ;;  sign1           1  105[BANK0 ] unsigned char 
  4286 ;; Return value:  Size  Location     Type
  4287 ;;                  4   97[BANK0 ] long 
  4288 ;; Registers used:
  4289 ;;		wreg, status,2, status,0
  4290 ;; Tracked objects:
  4291 ;;		On entry : 0/0
  4292 ;;		On exit  : 0/0
  4293 ;;		Unchanged: 0/0
  4294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4295 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4296 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4297 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4298 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4299 ;;Total ram usage:       10 bytes
  4300 ;; Hardware stack levels used:    1
  4301 ;; Hardware stack levels required when called:    4
  4302 ;; This function calls:
  4303 ;;		Nothing
  4304 ;; This function is called by:
  4305 ;;		_park_routine
  4306 ;;		_parallelo
  4307 ;;		_floor
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           
  4311                           	psect	text11
  4312  00565E                     __ptext11:
  4313                           	opt stack 0
  4314  00565E                     ___fltol:
  4315                           	opt stack 24
  4316                           
  4317                           ;incstack = 0
  4318  00565E  0100               	movlb	0	; () banked
  4319  005660  35C3               	rlcf	(___fltol@f1+2)& (0+255),w,b
  4320  005662  35C4               	rlcf	(___fltol@f1+3)& (0+255),w,b
  4321  005664  0100               	movlb	0	; () banked
  4322  005666  6FCA               	movwf	___fltol@exp1& (0+255),b
  4323  005668  0100               	movlb	0	; () banked
  4324  00566A  51CA               	movf	___fltol@exp1& (0+255),w,b
  4325  00566C  A4D8               	btfss	status,2,c
  4326  00566E  D00A               	goto	l6411
  4327                           
  4328                           ; BSR set to: 0
  4329  005670  0E00               	movlw	0
  4330  005672  0100               	movlb	0	; () banked
  4331  005674  6FC1               	movwf	?___fltol& (0+255),b
  4332  005676  0E00               	movlw	0
  4333  005678  6FC2               	movwf	(?___fltol+1)& (0+255),b
  4334  00567A  0E00               	movlw	0
  4335  00567C  6FC3               	movwf	(?___fltol+2)& (0+255),b
  4336  00567E  0E00               	movlw	0
  4337  005680  6FC4               	movwf	(?___fltol+3)& (0+255),b
  4338                           
  4339                           ; BSR set to: 0
  4340  005682  0012               	return	
  4341  005684                     l6411:
  4342                           
  4343                           ; BSR set to: 0
  4344  005684  C0C1  F0C5         	movff	___fltol@f1,??___fltol
  4345  005688  C0C2  F0C6         	movff	___fltol@f1+1,??___fltol+1
  4346  00568C  C0C3  F0C7         	movff	___fltol@f1+2,??___fltol+2
  4347  005690  C0C4  F0C8         	movff	___fltol@f1+3,??___fltol+3
  4348  005694  0E20               	movlw	32
  4349  005696  D006               	goto	u7960
  4350  005698                     u7965:
  4351  005698  0100               	movlb	0	; () banked
  4352  00569A  90D8               	bcf	status,0,c
  4353  00569C  33C8               	rrcf	(??___fltol+3)& (0+255),f,b
  4354  00569E  33C7               	rrcf	(??___fltol+2)& (0+255),f,b
  4355  0056A0  33C6               	rrcf	(??___fltol+1)& (0+255),f,b
  4356  0056A2  33C5               	rrcf	??___fltol& (0+255),f,b
  4357  0056A4                     u7960:
  4358  0056A4  2EE8               	decfsz	wreg,f,c
  4359  0056A6  D7F8               	goto	u7965
  4360  0056A8  0100               	movlb	0	; () banked
  4361  0056AA  51C5               	movf	??___fltol& (0+255),w,b
  4362  0056AC  0100               	movlb	0	; () banked
  4363  0056AE  6FC9               	movwf	___fltol@sign1& (0+255),b
  4364                           
  4365                           ; BSR set to: 0
  4366  0056B0  0100               	movlb	0	; () banked
  4367  0056B2  8FC3               	bsf	(___fltol@f1+2)& (0+255),7,b
  4368                           
  4369                           ; BSR set to: 0
  4370  0056B4  0EFF               	movlw	255
  4371  0056B6  0100               	movlb	0	; () banked
  4372  0056B8  17C1               	andwf	___fltol@f1& (0+255),f,b
  4373  0056BA  0EFF               	movlw	255
  4374  0056BC  17C2               	andwf	(___fltol@f1+1)& (0+255),f,b
  4375  0056BE  0EFF               	movlw	255
  4376  0056C0  17C3               	andwf	(___fltol@f1+2)& (0+255),f,b
  4377  0056C2  0E00               	movlw	0
  4378  0056C4  17C4               	andwf	(___fltol@f1+3)& (0+255),f,b
  4379                           
  4380                           ; BSR set to: 0
  4381  0056C6  0E96               	movlw	150
  4382  0056C8  0100               	movlb	0	; () banked
  4383  0056CA  5FCA               	subwf	___fltol@exp1& (0+255),f,b
  4384                           
  4385                           ; BSR set to: 0
  4386  0056CC  0100               	movlb	0	; () banked
  4387  0056CE  AFCA               	btfss	___fltol@exp1& (0+255),7,b
  4388  0056D0  D01A               	goto	l6431
  4389                           
  4390                           ; BSR set to: 0
  4391  0056D2  0100               	movlb	0	; () banked
  4392  0056D4  51CA               	movf	___fltol@exp1& (0+255),w,b
  4393  0056D6  0A80               	xorlw	128
  4394  0056D8  0F97               	addlw	151
  4395  0056DA  B0D8               	btfsc	status,0,c
  4396  0056DC  D00A               	goto	l6427
  4397                           
  4398                           ; BSR set to: 0
  4399  0056DE  0E00               	movlw	0
  4400  0056E0  0100               	movlb	0	; () banked
  4401  0056E2  6FC1               	movwf	?___fltol& (0+255),b
  4402  0056E4  0E00               	movlw	0
  4403  0056E6  6FC2               	movwf	(?___fltol+1)& (0+255),b
  4404  0056E8  0E00               	movlw	0
  4405  0056EA  6FC3               	movwf	(?___fltol+2)& (0+255),b
  4406  0056EC  0E00               	movlw	0
  4407  0056EE  6FC4               	movwf	(?___fltol+3)& (0+255),b
  4408                           
  4409                           ; BSR set to: 0
  4410  0056F0  0012               	return	
  4411  0056F2                     l6427:
  4412                           
  4413                           ; BSR set to: 0
  4414  0056F2  0100               	movlb	0	; () banked
  4415  0056F4  90D8               	bcf	status,0,c
  4416  0056F6  33C4               	rrcf	(___fltol@f1+3)& (0+255),f,b
  4417  0056F8  33C3               	rrcf	(___fltol@f1+2)& (0+255),f,b
  4418  0056FA  33C2               	rrcf	(___fltol@f1+1)& (0+255),f,b
  4419  0056FC  33C1               	rrcf	___fltol@f1& (0+255),f,b
  4420                           
  4421                           ; BSR set to: 0
  4422  0056FE  0100               	movlb	0	; () banked
  4423  005700  3FCA               	incfsz	___fltol@exp1& (0+255),f,b
  4424  005702  D7F7               	goto	l6427
  4425                           
  4426                           ; BSR set to: 0
  4427  005704  D01B               	goto	l6441
  4428  005706                     l6431:
  4429                           
  4430                           ; BSR set to: 0
  4431  005706  0E1F               	movlw	31
  4432  005708  0100               	movlb	0	; () banked
  4433  00570A  65CA               	cpfsgt	___fltol@exp1& (0+255),b
  4434  00570C  D012               	goto	l6439
  4435                           
  4436                           ; BSR set to: 0
  4437  00570E  0E00               	movlw	0
  4438  005710  0100               	movlb	0	; () banked
  4439  005712  6FC1               	movwf	?___fltol& (0+255),b
  4440  005714  0E00               	movlw	0
  4441  005716  6FC2               	movwf	(?___fltol+1)& (0+255),b
  4442  005718  0E00               	movlw	0
  4443  00571A  6FC3               	movwf	(?___fltol+2)& (0+255),b
  4444  00571C  0E00               	movlw	0
  4445  00571E  6FC4               	movwf	(?___fltol+3)& (0+255),b
  4446                           
  4447                           ; BSR set to: 0
  4448  005720  0012               	return	
  4449  005722                     l6437:
  4450                           
  4451                           ; BSR set to: 0
  4452  005722  0100               	movlb	0	; () banked
  4453  005724  90D8               	bcf	status,0,c
  4454  005726  37C1               	rlcf	___fltol@f1& (0+255),f,b
  4455  005728  37C2               	rlcf	(___fltol@f1+1)& (0+255),f,b
  4456  00572A  37C3               	rlcf	(___fltol@f1+2)& (0+255),f,b
  4457  00572C  37C4               	rlcf	(___fltol@f1+3)& (0+255),f,b
  4458  00572E  0100               	movlb	0	; () banked
  4459  005730  07CA               	decf	___fltol@exp1& (0+255),f,b
  4460  005732                     l6439:
  4461                           
  4462                           ; BSR set to: 0
  4463  005732  0100               	movlb	0	; () banked
  4464  005734  51CA               	movf	___fltol@exp1& (0+255),w,b
  4465  005736  0100               	movlb	0	; () banked
  4466  005738  A4D8               	btfss	status,2,c
  4467  00573A  D7F3               	goto	l6437
  4468  00573C                     l6441:
  4469                           
  4470                           ; BSR set to: 0
  4471  00573C  0100               	movlb	0	; () banked
  4472  00573E  51C9               	movf	___fltol@sign1& (0+255),w,b
  4473  005740  0100               	movlb	0	; () banked
  4474  005742  B4D8               	btfsc	status,2,c
  4475  005744  D009               	goto	l6445
  4476                           
  4477                           ; BSR set to: 0
  4478  005746  0100               	movlb	0	; () banked
  4479  005748  1FC4               	comf	(___fltol@f1+3)& (0+255),f,b
  4480  00574A  1FC3               	comf	(___fltol@f1+2)& (0+255),f,b
  4481  00574C  1FC2               	comf	(___fltol@f1+1)& (0+255),f,b
  4482  00574E  6DC1               	negf	___fltol@f1& (0+255),b
  4483  005750  0E00               	movlw	0
  4484  005752  23C2               	addwfc	(___fltol@f1+1)& (0+255),f,b
  4485  005754  23C3               	addwfc	(___fltol@f1+2)& (0+255),f,b
  4486  005756  23C4               	addwfc	(___fltol@f1+3)& (0+255),f,b
  4487  005758                     l6445:
  4488                           
  4489                           ; BSR set to: 0
  4490  005758  C0C1  F0C1         	movff	___fltol@f1,?___fltol
  4491  00575C  C0C2  F0C2         	movff	___fltol@f1+1,?___fltol+1
  4492  005760  C0C3  F0C3         	movff	___fltol@f1+2,?___fltol+2
  4493  005764  C0C4  F0C4         	movff	___fltol@f1+3,?___fltol+3
  4494  005768  0012               	return	
  4495  00576A                     __end_of___fltol:
  4496                           	opt stack 0
  4497                           tblptru	equ	0xFF8
  4498                           tblptrh	equ	0xFF7
  4499                           tblptrl	equ	0xFF6
  4500                           tablat	equ	0xFF5
  4501                           postinc0	equ	0xFEE
  4502                           wreg	equ	0xFE8
  4503                           postdec1	equ	0xFE5
  4504                           fsr1l	equ	0xFE1
  4505                           postinc2	equ	0xFDE
  4506                           postdec2	equ	0xFDD
  4507                           fsr2h	equ	0xFDA
  4508                           fsr2l	equ	0xFD9
  4509                           status	equ	0xFD8
  4510                           
  4511 ;; *************** function ___flsub *****************
  4512 ;; Defined at:
  4513 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  4514 ;; Parameters:    Size  Location     Type
  4515 ;;  b               4   12[BANK1 ] long 
  4516 ;;  a               4   16[BANK1 ] long 
  4517 ;; Auto vars:     Size  Location     Type
  4518 ;;		None
  4519 ;; Return value:  Size  Location     Type
  4520 ;;                  4   12[BANK1 ] long 
  4521 ;; Registers used:
  4522 ;;		wreg, status,2, status,0, cstack
  4523 ;; Tracked objects:
  4524 ;;		On entry : 0/0
  4525 ;;		On exit  : 0/0
  4526 ;;		Unchanged: 0/0
  4527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4528 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  4529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4531 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  4532 ;;Total ram usage:        8 bytes
  4533 ;; Hardware stack levels used:    1
  4534 ;; Hardware stack levels required when called:    5
  4535 ;; This function calls:
  4536 ;;		___fladd
  4537 ;; This function is called by:
  4538 ;;		_sin
  4539 ;; This function uses a non-reentrant model
  4540 ;;
  4541                           
  4542                           	psect	text12
  4543  005BC2                     __ptext12:
  4544                           	opt stack 0
  4545  005BC2                     ___flsub:
  4546                           	opt stack 21
  4547                           
  4548                           ; BSR set to: 0
  4549                           ;incstack = 0
  4550  005BC2  0E00               	movlw	0
  4551  005BC4  0101               	movlb	1	; () banked
  4552  005BC6  1B93               	xorwf	___flsub@a& (0+255),f,b
  4553  005BC8  0E00               	movlw	0
  4554  005BCA  1B94               	xorwf	(___flsub@a+1)& (0+255),f,b
  4555  005BCC  0E00               	movlw	0
  4556  005BCE  1B95               	xorwf	(___flsub@a+2)& (0+255),f,b
  4557  005BD0  0E80               	movlw	128
  4558  005BD2  1B96               	xorwf	(___flsub@a+3)& (0+255),f,b
  4559                           
  4560                           ; BSR set to: 1
  4561  005BD4  C18F  F0AD         	movff	___flsub@b,___fladd@b
  4562  005BD8  C190  F0AE         	movff	___flsub@b+1,___fladd@b+1
  4563  005BDC  C191  F0AF         	movff	___flsub@b+2,___fladd@b+2
  4564  005BE0  C192  F0B0         	movff	___flsub@b+3,___fladd@b+3
  4565  005BE4  C193  F0B1         	movff	___flsub@a,___fladd@a
  4566  005BE8  C194  F0B2         	movff	___flsub@a+1,___fladd@a+1
  4567  005BEC  C195  F0B3         	movff	___flsub@a+2,___fladd@a+2
  4568  005BF0  C196  F0B4         	movff	___flsub@a+3,___fladd@a+3
  4569  005BF4  ECE2  F014         	call	___fladd	;wreg free
  4570  005BF8  C0AD  F18F         	movff	?___fladd,?___flsub
  4571  005BFC  C0AE  F190         	movff	?___fladd+1,?___flsub+1
  4572  005C00  C0AF  F191         	movff	?___fladd+2,?___flsub+2
  4573  005C04  C0B0  F192         	movff	?___fladd+3,?___flsub+3
  4574  005C08  0012               	return	
  4575  005C0A                     __end_of___flsub:
  4576                           	opt stack 0
  4577                           tblptru	equ	0xFF8
  4578                           tblptrh	equ	0xFF7
  4579                           tblptrl	equ	0xFF6
  4580                           tablat	equ	0xFF5
  4581                           postinc0	equ	0xFEE
  4582                           wreg	equ	0xFE8
  4583                           postdec1	equ	0xFE5
  4584                           fsr1l	equ	0xFE1
  4585                           postinc2	equ	0xFDE
  4586                           postdec2	equ	0xFDD
  4587                           fsr2h	equ	0xFDA
  4588                           fsr2l	equ	0xFD9
  4589                           status	equ	0xFD8
  4590                           
  4591 ;; *************** function _asin *****************
  4592 ;; Defined at:
  4593 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\asin.c"
  4594 ;; Parameters:    Size  Location     Type
  4595 ;;  x               4   21[BANK1 ] long 
  4596 ;; Auto vars:     Size  Location     Type
  4597 ;;  y               4   37[BANK1 ] long 
  4598 ;;  sgn             4   25[BANK1 ] long 
  4599 ;; Return value:  Size  Location     Type
  4600 ;;                  4   21[BANK1 ] long 
  4601 ;; Registers used:
  4602 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4603 ;; Tracked objects:
  4604 ;;		On entry : 0/0
  4605 ;;		On exit  : 0/0
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4608 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4609 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  4610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4611 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0
  4612 ;;Total ram usage:       24 bytes
  4613 ;; Hardware stack levels used:    1
  4614 ;; Hardware stack levels required when called:    7
  4615 ;; This function calls:
  4616 ;;		___fladd
  4617 ;;		___fldiv
  4618 ;;		___flge
  4619 ;;		___flmul
  4620 ;;		___flneg
  4621 ;;		_atan
  4622 ;;		_fabs
  4623 ;;		_sqrt
  4624 ;; This function is called by:
  4625 ;;		_parallelo
  4626 ;;		_matematica
  4627 ;; This function uses a non-reentrant model
  4628 ;;
  4629                           
  4630                           	psect	text13
  4631  004152                     __ptext13:
  4632                           	opt stack 0
  4633  004152                     _asin:
  4634                           	opt stack 21
  4635                           
  4636                           ;incstack = 0
  4637  004152  0E00               	movlw	0
  4638  004154  0100               	movlb	0	; () banked
  4639  004156  6FB1               	movwf	___flge@ff1& (0+255),b
  4640  004158  0E00               	movlw	0
  4641  00415A  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  4642  00415C  0E80               	movlw	128
  4643  00415E  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  4644  004160  0E3F               	movlw	63
  4645  004162  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  4646  004164  C198  F0AD         	movff	asin@x,fabs@d
  4647  004168  C199  F0AE         	movff	asin@x+1,fabs@d+1
  4648  00416C  C19A  F0AF         	movff	asin@x+2,fabs@d+2
  4649  004170  C19B  F0B0         	movff	asin@x+3,fabs@d+3
  4650  004174  EC05  F02E         	call	_fabs	;wreg free
  4651  004178  C0AD  F0B5         	movff	?_fabs,___flge@ff2
  4652  00417C  C0AE  F0B6         	movff	?_fabs+1,___flge@ff2+1
  4653  004180  C0AF  F0B7         	movff	?_fabs+2,___flge@ff2+2
  4654  004184  C0B0  F0B8         	movff	?_fabs+3,___flge@ff2+3
  4655  004188  ECAE  F028         	call	___flge	;wreg free
  4656  00418C  0100               	movlb	0	; () banked
  4657  00418E  B0D8               	btfsc	status,0,c
  4658  004190  D00F               	goto	l6857
  4659                           
  4660                           ; BSR set to: 0
  4661  004192  0E00               	movlw	0
  4662  004194  0101               	movlb	1	; () banked
  4663  004196  6F43               	movwf	(_errno+1)& (0+255),b
  4664  004198  0E21               	movlw	33
  4665  00419A  6F42               	movwf	_errno& (0+255),b
  4666  00419C  0E00               	movlw	0
  4667  00419E  0101               	movlb	1	; () banked
  4668  0041A0  6F98               	movwf	?_asin& (0+255),b
  4669  0041A2  0E00               	movlw	0
  4670  0041A4  6F99               	movwf	(?_asin+1)& (0+255),b
  4671  0041A6  0E00               	movlw	0
  4672  0041A8  6F9A               	movwf	(?_asin+2)& (0+255),b
  4673  0041AA  0E00               	movlw	0
  4674  0041AC  6F9B               	movwf	(?_asin+3)& (0+255),b
  4675                           
  4676                           ; BSR set to: 1
  4677  0041AE  0012               	return	
  4678  0041B0                     l6857:
  4679  0041B0  0E00               	movlw	0
  4680  0041B2  0101               	movlb	1	; () banked
  4681  0041B4  6F9C               	movwf	asin@sgn& (0+255),b
  4682  0041B6  0E00               	movlw	0
  4683  0041B8  6F9D               	movwf	(asin@sgn+1)& (0+255),b
  4684  0041BA  0E80               	movlw	128
  4685  0041BC  6F9E               	movwf	(asin@sgn+2)& (0+255),b
  4686  0041BE  0E3F               	movlw	63
  4687  0041C0  6F9F               	movwf	(asin@sgn+3)& (0+255),b
  4688                           
  4689                           ; BSR set to: 1
  4690  0041C2  C198  F094         	movff	asin@x,___flmul@a
  4691  0041C6  C199  F095         	movff	asin@x+1,___flmul@a+1
  4692  0041CA  C19A  F096         	movff	asin@x+2,___flmul@a+2
  4693  0041CE  C19B  F097         	movff	asin@x+3,___flmul@a+3
  4694  0041D2  C198  F090         	movff	asin@x,___flmul@b
  4695  0041D6  C199  F091         	movff	asin@x+1,___flmul@b+1
  4696  0041DA  C19A  F092         	movff	asin@x+2,___flmul@b+2
  4697  0041DE  C19B  F093         	movff	asin@x+3,___flmul@b+3
  4698  0041E2  EC36  F017         	call	___flmul	;wreg free
  4699  0041E6  C090  F0A9         	movff	?___flmul,___flneg@f1
  4700  0041EA  C091  F0AA         	movff	?___flmul+1,___flneg@f1+1
  4701  0041EE  C092  F0AB         	movff	?___flmul+2,___flneg@f1+2
  4702  0041F2  C093  F0AC         	movff	?___flmul+3,___flneg@f1+3
  4703  0041F6  EC41  F02E         	call	___flneg	;wreg free
  4704  0041FA  C0A9  F0AD         	movff	?___flneg,___fladd@b
  4705  0041FE  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  4706  004202  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  4707  004206  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  4708  00420A  0E00               	movlw	0
  4709  00420C  0100               	movlb	0	; () banked
  4710  00420E  6FB1               	movwf	___fladd@a& (0+255),b
  4711  004210  0E00               	movlw	0
  4712  004212  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  4713  004214  0E80               	movlw	128
  4714  004216  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  4715  004218  0E3F               	movlw	63
  4716  00421A  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  4717  00421C  ECE2  F014         	call	___fladd	;wreg free
  4718  004220  C0AD  F0C1         	movff	?___fladd,sqrt@a
  4719  004224  C0AE  F0C2         	movff	?___fladd+1,sqrt@a+1
  4720  004228  C0AF  F0C3         	movff	?___fladd+2,sqrt@a+2
  4721  00422C  C0B0  F0C4         	movff	?___fladd+3,sqrt@a+3
  4722  004230  EC89  F019         	call	_sqrt	;wreg free
  4723  004234  C0C1  F1A8         	movff	?_sqrt,asin@y
  4724  004238  C0C2  F1A9         	movff	?_sqrt+1,asin@y+1
  4725  00423C  C0C3  F1AA         	movff	?_sqrt+2,asin@y+2
  4726  004240  C0C4  F1AB         	movff	?_sqrt+3,asin@y+3
  4727  004244  C198  F0AD         	movff	asin@x,fabs@d
  4728  004248  C199  F0AE         	movff	asin@x+1,fabs@d+1
  4729  00424C  C19A  F0AF         	movff	asin@x+2,fabs@d+2
  4730  004250  C19B  F0B0         	movff	asin@x+3,fabs@d+3
  4731  004254  EC05  F02E         	call	_fabs	;wreg free
  4732  004258  C0AD  F0B1         	movff	?_fabs,___flge@ff1
  4733  00425C  C0AE  F0B2         	movff	?_fabs+1,___flge@ff1+1
  4734  004260  C0AF  F0B3         	movff	?_fabs+2,___flge@ff1+2
  4735  004264  C0B0  F0B4         	movff	?_fabs+3,___flge@ff1+3
  4736  004268  0E8F               	movlw	143
  4737  00426A  0100               	movlb	0	; () banked
  4738  00426C  6FB5               	movwf	___flge@ff2& (0+255),b
  4739  00426E  0EC2               	movlw	194
  4740  004270  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  4741  004272  0E35               	movlw	53
  4742  004274  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  4743  004276  0E3F               	movlw	63
  4744  004278  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  4745  00427A  ECAE  F028         	call	___flge	;wreg free
  4746  00427E  0100               	movlb	0	; () banked
  4747  004280  B0D8               	btfsc	status,0,c
  4748  004282  D02D               	goto	l6869
  4749                           
  4750                           ; BSR set to: 0
  4751  004284  C198  F077         	movff	asin@x,___fldiv@b
  4752  004288  C199  F078         	movff	asin@x+1,___fldiv@b+1
  4753  00428C  C19A  F079         	movff	asin@x+2,___fldiv@b+2
  4754  004290  C19B  F07A         	movff	asin@x+3,___fldiv@b+3
  4755  004294  C1A8  F07B         	movff	asin@y,___fldiv@a
  4756  004298  C1A9  F07C         	movff	asin@y+1,___fldiv@a+1
  4757  00429C  C1AA  F07D         	movff	asin@y+2,___fldiv@a+2
  4758  0042A0  C1AB  F07E         	movff	asin@y+3,___fldiv@a+3
  4759  0042A4  EC6E  F01B         	call	___fldiv	;wreg free
  4760  0042A8  C077  F1AC         	movff	?___fldiv,_asin$3746
  4761  0042AC  C078  F1AD         	movff	?___fldiv+1,_asin$3746+1
  4762  0042B0  C079  F1AE         	movff	?___fldiv+2,_asin$3746+2
  4763  0042B4  C07A  F1AF         	movff	?___fldiv+3,_asin$3746+3
  4764  0042B8  C1AC  F0D1         	movff	_asin$3746,atan@f
  4765  0042BC  C1AD  F0D2         	movff	_asin$3746+1,atan@f+1
  4766  0042C0  C1AE  F0D3         	movff	_asin$3746+2,atan@f+2
  4767  0042C4  C1AF  F0D4         	movff	_asin$3746+3,atan@f+3
  4768  0042C8  ECE7  F024         	call	_atan	;wreg free
  4769  0042CC  C0D1  F198         	movff	?_atan,?_asin
  4770  0042D0  C0D2  F199         	movff	?_atan+1,?_asin+1
  4771  0042D4  C0D3  F19A         	movff	?_atan+2,?_asin+2
  4772  0042D8  C0D4  F19B         	movff	?_atan+3,?_asin+3
  4773  0042DC  0012               	return	
  4774  0042DE                     l6869:
  4775  0042DE  0101               	movlb	1	; () banked
  4776  0042E0  AF9B               	btfss	(asin@x+3)& (0+255),7,b
  4777  0042E2  D06E               	goto	l6881
  4778                           
  4779                           ; BSR set to: 1
  4780  0042E4  C198  F07B         	movff	asin@x,___fldiv@a
  4781  0042E8  C199  F07C         	movff	asin@x+1,___fldiv@a+1
  4782  0042EC  C19A  F07D         	movff	asin@x+2,___fldiv@a+2
  4783  0042F0  C19B  F07E         	movff	asin@x+3,___fldiv@a+3
  4784  0042F4  C1A8  F0A9         	movff	asin@y,___flneg@f1
  4785  0042F8  C1A9  F0AA         	movff	asin@y+1,___flneg@f1+1
  4786  0042FC  C1AA  F0AB         	movff	asin@y+2,___flneg@f1+2
  4787  004300  C1AB  F0AC         	movff	asin@y+3,___flneg@f1+3
  4788  004304  EC41  F02E         	call	___flneg	;wreg free
  4789  004308  C0A9  F077         	movff	?___flneg,___fldiv@b
  4790  00430C  C0AA  F078         	movff	?___flneg+1,___fldiv@b+1
  4791  004310  C0AB  F079         	movff	?___flneg+2,___fldiv@b+2
  4792  004314  C0AC  F07A         	movff	?___flneg+3,___fldiv@b+3
  4793  004318  EC6E  F01B         	call	___fldiv	;wreg free
  4794  00431C  C077  F1AC         	movff	?___fldiv,_asin$3746
  4795  004320  C078  F1AD         	movff	?___fldiv+1,_asin$3746+1
  4796  004324  C079  F1AE         	movff	?___fldiv+2,_asin$3746+2
  4797  004328  C07A  F1AF         	movff	?___fldiv+3,_asin$3746+3
  4798  00432C  C1AC  F0D1         	movff	_asin$3746,atan@f
  4799  004330  C1AD  F0D2         	movff	_asin$3746+1,atan@f+1
  4800  004334  C1AE  F0D3         	movff	_asin$3746+2,atan@f+2
  4801  004338  C1AF  F0D4         	movff	_asin$3746+3,atan@f+3
  4802  00433C  ECE7  F024         	call	_atan	;wreg free
  4803  004340  C0D1  F1A4         	movff	?_atan,_asin$3747
  4804  004344  C0D2  F1A5         	movff	?_atan+1,_asin$3747+1
  4805  004348  C0D3  F1A6         	movff	?_atan+2,_asin$3747+2
  4806  00434C  C0D4  F1A7         	movff	?_atan+3,_asin$3747+3
  4807  004350  0EDB               	movlw	219
  4808  004352  0100               	movlb	0	; () banked
  4809  004354  6FB1               	movwf	___fladd@a& (0+255),b
  4810  004356  0E0F               	movlw	15
  4811  004358  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  4812  00435A  0EC9               	movlw	201
  4813  00435C  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  4814  00435E  0E3F               	movlw	63
  4815  004360  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  4816  004362  C1A4  F0A9         	movff	_asin$3747,___flneg@f1
  4817  004366  C1A5  F0AA         	movff	_asin$3747+1,___flneg@f1+1
  4818  00436A  C1A6  F0AB         	movff	_asin$3747+2,___flneg@f1+2
  4819  00436E  C1A7  F0AC         	movff	_asin$3747+3,___flneg@f1+3
  4820  004372  EC41  F02E         	call	___flneg	;wreg free
  4821  004376  C0A9  F0AD         	movff	?___flneg,___fladd@b
  4822  00437A  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  4823  00437E  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  4824  004382  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  4825  004386  ECE2  F014         	call	___fladd	;wreg free
  4826  00438A  C0AD  F1A0         	movff	?___fladd,_asin$3748
  4827  00438E  C0AE  F1A1         	movff	?___fladd+1,_asin$3748+1
  4828  004392  C0AF  F1A2         	movff	?___fladd+2,_asin$3748+2
  4829  004396  C0B0  F1A3         	movff	?___fladd+3,_asin$3748+3
  4830  00439A  C1A0  F0A9         	movff	_asin$3748,___flneg@f1
  4831  00439E  C1A1  F0AA         	movff	_asin$3748+1,___flneg@f1+1
  4832  0043A2  C1A2  F0AB         	movff	_asin$3748+2,___flneg@f1+2
  4833  0043A6  C1A3  F0AC         	movff	_asin$3748+3,___flneg@f1+3
  4834  0043AA  EC41  F02E         	call	___flneg	;wreg free
  4835  0043AE  C0A9  F198         	movff	?___flneg,?_asin
  4836  0043B2  C0AA  F199         	movff	?___flneg+1,?_asin+1
  4837  0043B6  C0AB  F19A         	movff	?___flneg+2,?_asin+2
  4838  0043BA  C0AC  F19B         	movff	?___flneg+3,?_asin+3
  4839  0043BE  0012               	return	
  4840  0043C0                     l6881:
  4841  0043C0  C198  F07B         	movff	asin@x,___fldiv@a
  4842  0043C4  C199  F07C         	movff	asin@x+1,___fldiv@a+1
  4843  0043C8  C19A  F07D         	movff	asin@x+2,___fldiv@a+2
  4844  0043CC  C19B  F07E         	movff	asin@x+3,___fldiv@a+3
  4845  0043D0  C1A8  F077         	movff	asin@y,___fldiv@b
  4846  0043D4  C1A9  F078         	movff	asin@y+1,___fldiv@b+1
  4847  0043D8  C1AA  F079         	movff	asin@y+2,___fldiv@b+2
  4848  0043DC  C1AB  F07A         	movff	asin@y+3,___fldiv@b+3
  4849  0043E0  EC6E  F01B         	call	___fldiv	;wreg free
  4850  0043E4  C077  F1AC         	movff	?___fldiv,_asin$3746
  4851  0043E8  C078  F1AD         	movff	?___fldiv+1,_asin$3746+1
  4852  0043EC  C079  F1AE         	movff	?___fldiv+2,_asin$3746+2
  4853  0043F0  C07A  F1AF         	movff	?___fldiv+3,_asin$3746+3
  4854  0043F4  C1AC  F0D1         	movff	_asin$3746,atan@f
  4855  0043F8  C1AD  F0D2         	movff	_asin$3746+1,atan@f+1
  4856  0043FC  C1AE  F0D3         	movff	_asin$3746+2,atan@f+2
  4857  004400  C1AF  F0D4         	movff	_asin$3746+3,atan@f+3
  4858  004404  ECE7  F024         	call	_atan	;wreg free
  4859  004408  C0D1  F1A4         	movff	?_atan,_asin$3747
  4860  00440C  C0D2  F1A5         	movff	?_atan+1,_asin$3747+1
  4861  004410  C0D3  F1A6         	movff	?_atan+2,_asin$3747+2
  4862  004414  C0D4  F1A7         	movff	?_atan+3,_asin$3747+3
  4863  004418  C1A4  F0A9         	movff	_asin$3747,___flneg@f1
  4864  00441C  C1A5  F0AA         	movff	_asin$3747+1,___flneg@f1+1
  4865  004420  C1A6  F0AB         	movff	_asin$3747+2,___flneg@f1+2
  4866  004424  C1A7  F0AC         	movff	_asin$3747+3,___flneg@f1+3
  4867  004428  EC41  F02E         	call	___flneg	;wreg free
  4868  00442C  C0A9  F0AD         	movff	?___flneg,___fladd@b
  4869  004430  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  4870  004434  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  4871  004438  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  4872  00443C  0EDB               	movlw	219
  4873  00443E  0100               	movlb	0	; () banked
  4874  004440  6FB1               	movwf	___fladd@a& (0+255),b
  4875  004442  0E0F               	movlw	15
  4876  004444  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  4877  004446  0EC9               	movlw	201
  4878  004448  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  4879  00444A  0E3F               	movlw	63
  4880  00444C  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  4881  00444E  ECE2  F014         	call	___fladd	;wreg free
  4882  004452  C0AD  F198         	movff	?___fladd,?_asin
  4883  004456  C0AE  F199         	movff	?___fladd+1,?_asin+1
  4884  00445A  C0AF  F19A         	movff	?___fladd+2,?_asin+2
  4885  00445E  C0B0  F19B         	movff	?___fladd+3,?_asin+3
  4886  004462  0012               	return	
  4887  004464                     __end_of_asin:
  4888                           	opt stack 0
  4889                           tblptru	equ	0xFF8
  4890                           tblptrh	equ	0xFF7
  4891                           tblptrl	equ	0xFF6
  4892                           tablat	equ	0xFF5
  4893                           postinc0	equ	0xFEE
  4894                           wreg	equ	0xFE8
  4895                           postdec1	equ	0xFE5
  4896                           fsr1l	equ	0xFE1
  4897                           postinc2	equ	0xFDE
  4898                           postdec2	equ	0xFDD
  4899                           fsr2h	equ	0xFDA
  4900                           fsr2l	equ	0xFD9
  4901                           status	equ	0xFD8
  4902                           
  4903 ;; *************** function _sqrt *****************
  4904 ;; Defined at:
  4905 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcsqrt.c"
  4906 ;; Parameters:    Size  Location     Type
  4907 ;;  a               4   97[BANK0 ] long 
  4908 ;; Auto vars:     Size  Location     Type
  4909 ;;  frac            4   17[BANK1 ] unsigned long 
  4910 ;;  root            4   13[BANK1 ] struct .
  4911 ;;  grs             4    7[BANK1 ] unsigned long 
  4912 ;;  tfrac           4    2[BANK1 ] unsigned long 
  4913 ;;  exp             2   11[BANK1 ] int 
  4914 ;;  p               1    6[BANK1 ] unsigned char 
  4915 ;;  i               1    1[BANK1 ] unsigned char 
  4916 ;;  sign            1    0[BANK1 ] unsigned char 
  4917 ;; Return value:  Size  Location     Type
  4918 ;;                  4   97[BANK0 ] unsigned char 
  4919 ;; Registers used:
  4920 ;;		wreg, status,2, status,0
  4921 ;; Tracked objects:
  4922 ;;		On entry : 0/0
  4923 ;;		On exit  : 0/0
  4924 ;;		Unchanged: 0/0
  4925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4926 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4927 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
  4928 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4929 ;;      Totals:         0       8      21       0       0       0       0       0       0       0       0       0       
      +0       0
  4930 ;;Total ram usage:       29 bytes
  4931 ;; Hardware stack levels used:    1
  4932 ;; Hardware stack levels required when called:    4
  4933 ;; This function calls:
  4934 ;;		Nothing
  4935 ;; This function is called by:
  4936 ;;		_parallelo
  4937 ;;		_asin
  4938 ;; This function uses a non-reentrant model
  4939 ;;
  4940                           
  4941                           	psect	text14
  4942  003312                     __ptext14:
  4943                           	opt stack 0
  4944  003312                     _sqrt:
  4945                           	opt stack 24
  4946                           
  4947                           ;incstack = 0
  4948  003312  0100               	movlb	0	; () banked
  4949  003314  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  4950  003316  0B80               	andlw	128
  4951  003318  0101               	movlb	1	; () banked
  4952  00331A  6F83               	movwf	sqrt@sign& (0+255),b
  4953  00331C  0100               	movlb	0	; () banked
  4954  00331E  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  4955  003320  25C4               	addwf	(sqrt@a+3)& (0+255),w,b
  4956  003322  0101               	movlb	1	; () banked
  4957  003324  6F89               	movwf	sqrt@p& (0+255),b
  4958                           
  4959                           ; BSR set to: 1
  4960  003326  0100               	movlb	0	; () banked
  4961  003328  AFC3               	btfss	(sqrt@a+2)& (0+255),7,b
  4962  00332A  D002               	goto	l6691
  4963                           
  4964                           ; BSR set to: 0
  4965  00332C  0101               	movlb	1	; () banked
  4966  00332E  8189               	bsf	sqrt@p& (0+255),0,b
  4967  003330                     l6691:
  4968  003330  C189  F18E         	movff	sqrt@p,sqrt@exp
  4969  003334  0101               	movlb	1	; () banked
  4970  003336  6B8F               	clrf	(sqrt@exp+1)& (0+255),b
  4971                           
  4972                           ; BSR set to: 1
  4973  003338  0EFF               	movlw	255
  4974  00333A  0100               	movlb	0	; () banked
  4975  00333C  15C1               	andwf	sqrt@a& (0+255),w,b
  4976  00333E  0101               	movlb	1	; () banked
  4977  003340  6F94               	movwf	sqrt@frac& (0+255),b
  4978  003342  0EFF               	movlw	255
  4979  003344  0100               	movlb	0	; () banked
  4980  003346  15C2               	andwf	(sqrt@a+1)& (0+255),w,b
  4981  003348  0101               	movlb	1	; () banked
  4982  00334A  6F95               	movwf	(sqrt@frac+1)& (0+255),b
  4983  00334C  0E7F               	movlw	127
  4984  00334E  0100               	movlb	0	; () banked
  4985  003350  15C3               	andwf	(sqrt@a+2)& (0+255),w,b
  4986  003352  0101               	movlb	1	; () banked
  4987  003354  6F96               	movwf	(sqrt@frac+2)& (0+255),b
  4988  003356  0E00               	movlw	0
  4989  003358  0100               	movlb	0	; () banked
  4990  00335A  15C4               	andwf	(sqrt@a+3)& (0+255),w,b
  4991  00335C  0101               	movlb	1	; () banked
  4992  00335E  6F97               	movwf	(sqrt@frac+3)& (0+255),b
  4993                           
  4994                           ; BSR set to: 1
  4995  003360  0101               	movlb	1	; () banked
  4996  003362  518E               	movf	sqrt@exp& (0+255),w,b
  4997  003364  0101               	movlb	1	; () banked
  4998  003366  118F               	iorwf	(sqrt@exp+1)& (0+255),w,b
  4999  003368  B4D8               	btfsc	status,2,c
  5000  00336A  D008               	goto	l6703
  5001                           
  5002                           ; BSR set to: 1
  5003  00336C  0101               	movlb	1	; () banked
  5004  00336E  8F96               	bsf	(sqrt@frac+2)& (0+255),7,b
  5005                           
  5006                           ; BSR set to: 1
  5007  003370  0101               	movlb	1	; () banked
  5008  003372  298E               	incf	sqrt@exp& (0+255),w,b
  5009  003374  0101               	movlb	1	; () banked
  5010  003376  118F               	iorwf	(sqrt@exp+1)& (0+255),w,b
  5011  003378  A4D8               	btfss	status,2,c
  5012  00337A  D009               	goto	l6705
  5013  00337C                     l6703:
  5014                           
  5015                           ; BSR set to: 1
  5016  00337C  0E00               	movlw	0
  5017  00337E  0101               	movlb	1	; () banked
  5018  003380  6F94               	movwf	sqrt@frac& (0+255),b
  5019  003382  0E00               	movlw	0
  5020  003384  6F95               	movwf	(sqrt@frac+1)& (0+255),b
  5021  003386  0E00               	movlw	0
  5022  003388  6F96               	movwf	(sqrt@frac+2)& (0+255),b
  5023  00338A  0E00               	movlw	0
  5024  00338C  6F97               	movwf	(sqrt@frac+3)& (0+255),b
  5025  00338E                     l6705:
  5026                           
  5027                           ; BSR set to: 1
  5028  00338E  0101               	movlb	1	; () banked
  5029  003390  518E               	movf	sqrt@exp& (0+255),w,b
  5030  003392  0101               	movlb	1	; () banked
  5031  003394  118F               	iorwf	(sqrt@exp+1)& (0+255),w,b
  5032  003396  A4D8               	btfss	status,2,c
  5033  003398  D00A               	goto	l6711
  5034                           
  5035                           ; BSR set to: 1
  5036  00339A  0E00               	movlw	0
  5037  00339C  0100               	movlb	0	; () banked
  5038  00339E  6FC1               	movwf	?_sqrt& (0+255),b
  5039  0033A0  0E00               	movlw	0
  5040  0033A2  6FC2               	movwf	(?_sqrt+1)& (0+255),b
  5041  0033A4  0E00               	movlw	0
  5042  0033A6  6FC3               	movwf	(?_sqrt+2)& (0+255),b
  5043  0033A8  0E00               	movlw	0
  5044  0033AA  6FC4               	movwf	(?_sqrt+3)& (0+255),b
  5045                           
  5046                           ; BSR set to: 0
  5047  0033AC  0012               	return	
  5048  0033AE                     l6711:
  5049  0033AE  0101               	movlb	1	; () banked
  5050  0033B0  5183               	movf	sqrt@sign& (0+255),w,b
  5051  0033B2  0101               	movlb	1	; () banked
  5052  0033B4  B4D8               	btfsc	status,2,c
  5053  0033B6  D01C               	goto	l6723
  5054                           
  5055                           ; BSR set to: 1
  5056  0033B8  0E00               	movlw	0
  5057  0033BA  0101               	movlb	1	; () banked
  5058  0033BC  6F90               	movwf	sqrt@root& (0+255),b
  5059  0033BE  0E00               	movlw	0
  5060  0033C0  6F91               	movwf	(sqrt@root+1)& (0+255),b
  5061  0033C2  0E40               	movlw	64
  5062  0033C4  6F92               	movwf	(sqrt@root+2)& (0+255),b
  5063  0033C6  0E00               	movlw	0
  5064  0033C8  6F93               	movwf	(sqrt@root+3)& (0+255),b
  5065                           
  5066                           ; BSR set to: 1
  5067  0033CA  0101               	movlb	1	; () banked
  5068  0033CC  0E80               	movlw	128
  5069  0033CE  1392               	iorwf	(sqrt@root+2)& (0+255),f,b
  5070  0033D0  0EFF               	movlw	255
  5071  0033D2  1393               	iorwf	(sqrt@root+3)& (0+255),f,b
  5072                           
  5073                           ; BSR set to: 1
  5074  0033D4  0E00               	movlw	0
  5075  0033D6  0101               	movlb	1	; () banked
  5076  0033D8  6F43               	movwf	(_errno+1)& (0+255),b
  5077  0033DA  0E21               	movlw	33
  5078  0033DC  6F42               	movwf	_errno& (0+255),b
  5079                           
  5080                           ; BSR set to: 1
  5081  0033DE  C190  F0C1         	movff	sqrt@root,?_sqrt
  5082  0033E2  C191  F0C2         	movff	sqrt@root+1,?_sqrt+1
  5083  0033E6  C192  F0C3         	movff	sqrt@root+2,?_sqrt+2
  5084  0033EA  C193  F0C4         	movff	sqrt@root+3,?_sqrt+3
  5085                           
  5086                           ; BSR set to: 1
  5087  0033EE  0012               	return	
  5088  0033F0                     l6723:
  5089                           
  5090                           ; BSR set to: 1
  5091  0033F0  0101               	movlb	1	; () banked
  5092  0033F2  298E               	incf	sqrt@exp& (0+255),w,b
  5093  0033F4  0101               	movlb	1	; () banked
  5094  0033F6  118F               	iorwf	(sqrt@exp+1)& (0+255),w,b
  5095  0033F8  A4D8               	btfss	status,2,c
  5096  0033FA  D012               	goto	l6731
  5097                           
  5098                           ; BSR set to: 1
  5099  0033FC  0E00               	movlw	0
  5100  0033FE  0101               	movlb	1	; () banked
  5101  003400  6F90               	movwf	sqrt@root& (0+255),b
  5102  003402  0E00               	movlw	0
  5103  003404  6F91               	movwf	(sqrt@root+1)& (0+255),b
  5104  003406  0E80               	movlw	128
  5105  003408  6F92               	movwf	(sqrt@root+2)& (0+255),b
  5106  00340A  0E7F               	movlw	127
  5107  00340C  6F93               	movwf	(sqrt@root+3)& (0+255),b
  5108                           
  5109                           ; BSR set to: 1
  5110  00340E  C190  F0C1         	movff	sqrt@root,?_sqrt
  5111  003412  C191  F0C2         	movff	sqrt@root+1,?_sqrt+1
  5112  003416  C192  F0C3         	movff	sqrt@root+2,?_sqrt+2
  5113  00341A  C193  F0C4         	movff	sqrt@root+3,?_sqrt+3
  5114                           
  5115                           ; BSR set to: 1
  5116  00341E  0012               	return	
  5117  003420                     l6731:
  5118                           
  5119                           ; BSR set to: 1
  5120  003420  0101               	movlb	1	; () banked
  5121  003422  0E81               	movlw	129
  5122  003424  278E               	addwf	sqrt@exp& (0+255),f,b
  5123  003426  0EFF               	movlw	255
  5124  003428  238F               	addwfc	(sqrt@exp+1)& (0+255),f,b
  5125  00342A  0101               	movlb	1	; () banked
  5126  00342C  518E               	movf	sqrt@exp& (0+255),w,b
  5127  00342E  0B01               	andlw	1
  5128  003430  0101               	movlb	1	; () banked
  5129  003432  6F89               	movwf	sqrt@p& (0+255),b
  5130  003434  0101               	movlb	1	; () banked
  5131  003436  358F               	rlcf	(sqrt@exp+1)& (0+255),w,b
  5132  003438  338F               	rrcf	(sqrt@exp+1)& (0+255),f,b
  5133  00343A  338E               	rrcf	sqrt@exp& (0+255),f,b
  5134  00343C  0E7F               	movlw	127
  5135  00343E  0101               	movlb	1	; () banked
  5136  003440  278E               	addwf	sqrt@exp& (0+255),f,b
  5137  003442  0E00               	movlw	0
  5138  003444  238F               	addwfc	(sqrt@exp+1)& (0+255),f,b
  5139  003446  90D8               	bcf	status,0,c
  5140  003448  0101               	movlb	1	; () banked
  5141  00344A  3594               	rlcf	sqrt@frac& (0+255),w,b
  5142  00344C  0101               	movlb	1	; () banked
  5143  00344E  6F85               	movwf	sqrt@tfrac& (0+255),b
  5144  003450  0101               	movlb	1	; () banked
  5145  003452  3595               	rlcf	(sqrt@frac+1)& (0+255),w,b
  5146  003454  0101               	movlb	1	; () banked
  5147  003456  6F86               	movwf	(sqrt@tfrac+1)& (0+255),b
  5148  003458  0101               	movlb	1	; () banked
  5149  00345A  3596               	rlcf	(sqrt@frac+2)& (0+255),w,b
  5150  00345C  0101               	movlb	1	; () banked
  5151  00345E  6F87               	movwf	(sqrt@tfrac+2)& (0+255),b
  5152  003460  0101               	movlb	1	; () banked
  5153  003462  3597               	rlcf	(sqrt@frac+3)& (0+255),w,b
  5154  003464  0101               	movlb	1	; () banked
  5155  003466  6F88               	movwf	(sqrt@tfrac+3)& (0+255),b
  5156                           
  5157                           ; BSR set to: 1
  5158  003468  0E00               	movlw	0
  5159  00346A  0101               	movlb	1	; () banked
  5160  00346C  6F94               	movwf	sqrt@frac& (0+255),b
  5161  00346E  0E00               	movlw	0
  5162  003470  6F95               	movwf	(sqrt@frac+1)& (0+255),b
  5163  003472  0E00               	movlw	0
  5164  003474  6F96               	movwf	(sqrt@frac+2)& (0+255),b
  5165  003476  0E00               	movlw	0
  5166  003478  6F97               	movwf	(sqrt@frac+3)& (0+255),b
  5167                           
  5168                           ; BSR set to: 1
  5169  00347A  0E00               	movlw	0
  5170  00347C  0101               	movlb	1	; () banked
  5171  00347E  6F8A               	movwf	sqrt@grs& (0+255),b
  5172  003480  0E00               	movlw	0
  5173  003482  6F8B               	movwf	(sqrt@grs+1)& (0+255),b
  5174  003484  0E00               	movlw	0
  5175  003486  6F8C               	movwf	(sqrt@grs+2)& (0+255),b
  5176  003488  0E01               	movlw	1
  5177  00348A  6F8D               	movwf	(sqrt@grs+3)& (0+255),b
  5178                           
  5179                           ; BSR set to: 1
  5180  00348C  0101               	movlb	1	; () banked
  5181  00348E  5189               	movf	sqrt@p& (0+255),w,b
  5182  003490  0101               	movlb	1	; () banked
  5183  003492  B4D8               	btfsc	status,2,c
  5184  003494  D006               	goto	l6741
  5185                           
  5186                           ; BSR set to: 1
  5187  003496  0101               	movlb	1	; () banked
  5188  003498  90D8               	bcf	status,0,c
  5189  00349A  3785               	rlcf	sqrt@tfrac& (0+255),f,b
  5190  00349C  3786               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  5191  00349E  3787               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  5192  0034A0  3788               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  5193  0034A2                     l6741:
  5194                           
  5195                           ; BSR set to: 1
  5196  0034A2  0E00               	movlw	0
  5197  0034A4  0101               	movlb	1	; () banked
  5198  0034A6  6F84               	movwf	sqrt@i& (0+255),b
  5199  0034A8  D07E               	goto	l6755
  5200  0034AA                     l6743:
  5201                           
  5202                           ; BSR set to: 1
  5203  0034AA  0101               	movlb	1	; () banked
  5204  0034AC  518A               	movf	sqrt@grs& (0+255),w,b
  5205  0034AE  0101               	movlb	1	; () banked
  5206  0034B0  1394               	iorwf	sqrt@frac& (0+255),f,b
  5207  0034B2  0101               	movlb	1	; () banked
  5208  0034B4  518B               	movf	(sqrt@grs+1)& (0+255),w,b
  5209  0034B6  0101               	movlb	1	; () banked
  5210  0034B8  1395               	iorwf	(sqrt@frac+1)& (0+255),f,b
  5211  0034BA  0101               	movlb	1	; () banked
  5212  0034BC  518C               	movf	(sqrt@grs+2)& (0+255),w,b
  5213  0034BE  0101               	movlb	1	; () banked
  5214  0034C0  1396               	iorwf	(sqrt@frac+2)& (0+255),f,b
  5215  0034C2  0101               	movlb	1	; () banked
  5216  0034C4  518D               	movf	(sqrt@grs+3)& (0+255),w,b
  5217  0034C6  0101               	movlb	1	; () banked
  5218  0034C8  1397               	iorwf	(sqrt@frac+3)& (0+255),f,b
  5219  0034CA  0101               	movlb	1	; () banked
  5220  0034CC  5194               	movf	sqrt@frac& (0+255),w,b
  5221  0034CE  0101               	movlb	1	; () banked
  5222  0034D0  5D85               	subwf	sqrt@tfrac& (0+255),w,b
  5223  0034D2  0101               	movlb	1	; () banked
  5224  0034D4  5195               	movf	(sqrt@frac+1)& (0+255),w,b
  5225  0034D6  0101               	movlb	1	; () banked
  5226  0034D8  5986               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
  5227  0034DA  0101               	movlb	1	; () banked
  5228  0034DC  5196               	movf	(sqrt@frac+2)& (0+255),w,b
  5229  0034DE  0101               	movlb	1	; () banked
  5230  0034E0  5987               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
  5231  0034E2  0101               	movlb	1	; () banked
  5232  0034E4  5197               	movf	(sqrt@frac+3)& (0+255),w,b
  5233  0034E6  0101               	movlb	1	; () banked
  5234  0034E8  5988               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
  5235  0034EA  A0D8               	btfss	status,0,c
  5236  0034EC  D021               	goto	l6747
  5237                           
  5238                           ; BSR set to: 1
  5239  0034EE  0101               	movlb	1	; () banked
  5240  0034F0  5194               	movf	sqrt@frac& (0+255),w,b
  5241  0034F2  0101               	movlb	1	; () banked
  5242  0034F4  5F85               	subwf	sqrt@tfrac& (0+255),f,b
  5243  0034F6  0101               	movlb	1	; () banked
  5244  0034F8  5195               	movf	(sqrt@frac+1)& (0+255),w,b
  5245  0034FA  0101               	movlb	1	; () banked
  5246  0034FC  5B86               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
  5247  0034FE  0101               	movlb	1	; () banked
  5248  003500  5196               	movf	(sqrt@frac+2)& (0+255),w,b
  5249  003502  0101               	movlb	1	; () banked
  5250  003504  5B87               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
  5251  003506  0101               	movlb	1	; () banked
  5252  003508  5197               	movf	(sqrt@frac+3)& (0+255),w,b
  5253  00350A  0101               	movlb	1	; () banked
  5254  00350C  5B88               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
  5255  00350E  0101               	movlb	1	; () banked
  5256  003510  518A               	movf	sqrt@grs& (0+255),w,b
  5257  003512  0101               	movlb	1	; () banked
  5258  003514  2794               	addwf	sqrt@frac& (0+255),f,b
  5259  003516  0101               	movlb	1	; () banked
  5260  003518  518B               	movf	(sqrt@grs+1)& (0+255),w,b
  5261  00351A  0101               	movlb	1	; () banked
  5262  00351C  2395               	addwfc	(sqrt@frac+1)& (0+255),f,b
  5263  00351E  0101               	movlb	1	; () banked
  5264  003520  518C               	movf	(sqrt@grs+2)& (0+255),w,b
  5265  003522  0101               	movlb	1	; () banked
  5266  003524  2396               	addwfc	(sqrt@frac+2)& (0+255),f,b
  5267  003526  0101               	movlb	1	; () banked
  5268  003528  518D               	movf	(sqrt@grs+3)& (0+255),w,b
  5269  00352A  0101               	movlb	1	; () banked
  5270  00352C  2397               	addwfc	(sqrt@frac+3)& (0+255),f,b
  5271  00352E  D01D               	goto	l6749
  5272  003530                     l6747:
  5273                           
  5274                           ; BSR set to: 1
  5275  003530  C18A  F0C5         	movff	sqrt@grs,??_sqrt
  5276  003534  C18B  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  5277  003538  C18C  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  5278  00353C  C18D  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  5279  003540  0100               	movlb	0	; () banked
  5280  003542  1FC5               	comf	??_sqrt& (0+255),f,b
  5281  003544  1FC6               	comf	(??_sqrt+1)& (0+255),f,b
  5282  003546  1FC7               	comf	(??_sqrt+2)& (0+255),f,b
  5283  003548  1FC8               	comf	(??_sqrt+3)& (0+255),f,b
  5284  00354A  0100               	movlb	0	; () banked
  5285  00354C  51C5               	movf	??_sqrt& (0+255),w,b
  5286  00354E  0101               	movlb	1	; () banked
  5287  003550  1794               	andwf	sqrt@frac& (0+255),f,b
  5288  003552  0100               	movlb	0	; () banked
  5289  003554  51C6               	movf	(??_sqrt+1)& (0+255),w,b
  5290  003556  0101               	movlb	1	; () banked
  5291  003558  1795               	andwf	(sqrt@frac+1)& (0+255),f,b
  5292  00355A  0100               	movlb	0	; () banked
  5293  00355C  51C7               	movf	(??_sqrt+2)& (0+255),w,b
  5294  00355E  0101               	movlb	1	; () banked
  5295  003560  1796               	andwf	(sqrt@frac+2)& (0+255),f,b
  5296  003562  0100               	movlb	0	; () banked
  5297  003564  51C8               	movf	(??_sqrt+3)& (0+255),w,b
  5298  003566  0101               	movlb	1	; () banked
  5299  003568  1797               	andwf	(sqrt@frac+3)& (0+255),f,b
  5300  00356A                     l6749:
  5301                           
  5302                           ; BSR set to: 1
  5303  00356A  C18A  F0C5         	movff	sqrt@grs,??_sqrt
  5304  00356E  C18B  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  5305  003572  C18C  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  5306  003576  C18D  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  5307  00357A  0100               	movlb	0	; () banked
  5308  00357C  90D8               	bcf	status,0,c
  5309  00357E  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  5310  003580  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  5311  003582  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  5312  003584  33C5               	rrcf	??_sqrt& (0+255),f,b
  5313  003586  C0C5  F18A         	movff	??_sqrt,sqrt@grs
  5314  00358A  C0C6  F18B         	movff	??_sqrt+1,sqrt@grs+1
  5315  00358E  C0C7  F18C         	movff	??_sqrt+2,sqrt@grs+2
  5316  003592  C0C8  F18D         	movff	??_sqrt+3,sqrt@grs+3
  5317                           
  5318                           ; BSR set to: 0
  5319  003596  0101               	movlb	1	; () banked
  5320  003598  90D8               	bcf	status,0,c
  5321  00359A  3785               	rlcf	sqrt@tfrac& (0+255),f,b
  5322  00359C  3786               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  5323  00359E  3787               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  5324  0035A0  3788               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  5325                           
  5326                           ; BSR set to: 1
  5327  0035A2  0101               	movlb	1	; () banked
  5328  0035A4  2B84               	incf	sqrt@i& (0+255),f,b
  5329  0035A6                     l6755:
  5330                           
  5331                           ; BSR set to: 1
  5332  0035A6  0E18               	movlw	24
  5333  0035A8  0101               	movlb	1	; () banked
  5334  0035AA  6584               	cpfsgt	sqrt@i& (0+255),b
  5335  0035AC  D77E               	goto	l6743
  5336                           
  5337                           ; BSR set to: 1
  5338                           
  5339                           ; BSR set to: 1
  5340  0035AE  C194  F0C5         	movff	sqrt@frac,??_sqrt
  5341  0035B2  C195  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  5342  0035B6  C196  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  5343  0035BA  C197  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  5344  0035BE  0100               	movlb	0	; () banked
  5345  0035C0  90D8               	bcf	status,0,c
  5346  0035C2  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  5347  0035C4  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  5348  0035C6  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  5349  0035C8  33C5               	rrcf	??_sqrt& (0+255),f,b
  5350  0035CA  C0C5  F194         	movff	??_sqrt,sqrt@frac
  5351  0035CE  C0C6  F195         	movff	??_sqrt+1,sqrt@frac+1
  5352  0035D2  C0C7  F196         	movff	??_sqrt+2,sqrt@frac+2
  5353  0035D6  C0C8  F197         	movff	??_sqrt+3,sqrt@frac+3
  5354                           
  5355                           ; BSR set to: 0
  5356  0035DA  0E01               	movlw	1
  5357  0035DC  0101               	movlb	1	; () banked
  5358  0035DE  1594               	andwf	sqrt@frac& (0+255),w,b
  5359  0035E0  0101               	movlb	1	; () banked
  5360  0035E2  6F8A               	movwf	sqrt@grs& (0+255),b
  5361  0035E4  0E00               	movlw	0
  5362  0035E6  0101               	movlb	1	; () banked
  5363  0035E8  1595               	andwf	(sqrt@frac+1)& (0+255),w,b
  5364  0035EA  0101               	movlb	1	; () banked
  5365  0035EC  6F8B               	movwf	(sqrt@grs+1)& (0+255),b
  5366  0035EE  0E00               	movlw	0
  5367  0035F0  0101               	movlb	1	; () banked
  5368  0035F2  1596               	andwf	(sqrt@frac+2)& (0+255),w,b
  5369  0035F4  0101               	movlb	1	; () banked
  5370  0035F6  6F8C               	movwf	(sqrt@grs+2)& (0+255),b
  5371  0035F8  0E00               	movlw	0
  5372  0035FA  0101               	movlb	1	; () banked
  5373  0035FC  1597               	andwf	(sqrt@frac+3)& (0+255),w,b
  5374  0035FE  0101               	movlb	1	; () banked
  5375  003600  6F8D               	movwf	(sqrt@grs+3)& (0+255),b
  5376                           
  5377                           ; BSR set to: 1
  5378  003602  C194  F0C5         	movff	sqrt@frac,??_sqrt
  5379  003606  C195  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  5380  00360A  C196  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  5381  00360E  C197  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  5382  003612  0100               	movlb	0	; () banked
  5383  003614  90D8               	bcf	status,0,c
  5384  003616  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  5385  003618  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  5386  00361A  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  5387  00361C  33C5               	rrcf	??_sqrt& (0+255),f,b
  5388  00361E  C0C5  F194         	movff	??_sqrt,sqrt@frac
  5389  003622  C0C6  F195         	movff	??_sqrt+1,sqrt@frac+1
  5390  003626  C0C7  F196         	movff	??_sqrt+2,sqrt@frac+2
  5391  00362A  C0C8  F197         	movff	??_sqrt+3,sqrt@frac+3
  5392  00362E  0101               	movlb	1	; () banked
  5393  003630  518A               	movf	sqrt@grs& (0+255),w,b
  5394  003632  0101               	movlb	1	; () banked
  5395  003634  2794               	addwf	sqrt@frac& (0+255),f,b
  5396  003636  0101               	movlb	1	; () banked
  5397  003638  518B               	movf	(sqrt@grs+1)& (0+255),w,b
  5398  00363A  0101               	movlb	1	; () banked
  5399  00363C  2395               	addwfc	(sqrt@frac+1)& (0+255),f,b
  5400  00363E  0101               	movlb	1	; () banked
  5401  003640  518C               	movf	(sqrt@grs+2)& (0+255),w,b
  5402  003642  0101               	movlb	1	; () banked
  5403  003644  2396               	addwfc	(sqrt@frac+2)& (0+255),f,b
  5404  003646  0101               	movlb	1	; () banked
  5405  003648  518D               	movf	(sqrt@grs+3)& (0+255),w,b
  5406  00364A  0101               	movlb	1	; () banked
  5407  00364C  2397               	addwfc	(sqrt@frac+3)& (0+255),f,b
  5408                           
  5409                           ; BSR set to: 1
  5410  00364E  0101               	movlb	1	; () banked
  5411  003650  A197               	btfss	(sqrt@frac+3)& (0+255),0,b
  5412  003652  D019               	goto	l6767
  5413                           
  5414                           ; BSR set to: 1
  5415  003654  C194  F0C5         	movff	sqrt@frac,??_sqrt
  5416  003658  C195  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  5417  00365C  C196  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  5418  003660  C197  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  5419  003664  0100               	movlb	0	; () banked
  5420  003666  90D8               	bcf	status,0,c
  5421  003668  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  5422  00366A  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  5423  00366C  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  5424  00366E  33C5               	rrcf	??_sqrt& (0+255),f,b
  5425  003670  C0C5  F194         	movff	??_sqrt,sqrt@frac
  5426  003674  C0C6  F195         	movff	??_sqrt+1,sqrt@frac+1
  5427  003678  C0C7  F196         	movff	??_sqrt+2,sqrt@frac+2
  5428  00367C  C0C8  F197         	movff	??_sqrt+3,sqrt@frac+3
  5429  003680  0101               	movlb	1	; () banked
  5430  003682  4B8E               	infsnz	sqrt@exp& (0+255),f,b
  5431  003684  2B8F               	incf	(sqrt@exp+1)& (0+255),f,b
  5432  003686                     l6767:
  5433                           
  5434                           ; BSR set to: 1
  5435  003686  0EFF               	movlw	255
  5436  003688  0101               	movlb	1	; () banked
  5437  00368A  1594               	andwf	sqrt@frac& (0+255),w,b
  5438  00368C  0101               	movlb	1	; () banked
  5439  00368E  6F90               	movwf	sqrt@root& (0+255),b
  5440  003690  0EFF               	movlw	255
  5441  003692  0101               	movlb	1	; () banked
  5442  003694  1595               	andwf	(sqrt@frac+1)& (0+255),w,b
  5443  003696  0101               	movlb	1	; () banked
  5444  003698  6F91               	movwf	(sqrt@root+1)& (0+255),b
  5445  00369A  0E7F               	movlw	127
  5446  00369C  0101               	movlb	1	; () banked
  5447  00369E  1596               	andwf	(sqrt@frac+2)& (0+255),w,b
  5448  0036A0  0101               	movlb	1	; () banked
  5449  0036A2  6F92               	movwf	(sqrt@root+2)& (0+255),b
  5450  0036A4  0E00               	movlw	0
  5451  0036A6  0101               	movlb	1	; () banked
  5452  0036A8  1597               	andwf	(sqrt@frac+3)& (0+255),w,b
  5453  0036AA  0101               	movlb	1	; () banked
  5454  0036AC  6F93               	movwf	(sqrt@root+3)& (0+255),b
  5455                           
  5456                           ; BSR set to: 1
  5457  0036AE  C18E  F189         	movff	sqrt@exp,sqrt@p
  5458                           
  5459                           ; BSR set to: 1
  5460  0036B2  0101               	movlb	1	; () banked
  5461  0036B4  A189               	btfss	sqrt@p& (0+255),0,b
  5462  0036B6  D002               	goto	l6775
  5463                           
  5464                           ; BSR set to: 1
  5465  0036B8  0101               	movlb	1	; () banked
  5466  0036BA  8F92               	bsf	(sqrt@root+2)& (0+255),7,b
  5467  0036BC                     l6775:
  5468                           
  5469                           ; BSR set to: 1
  5470  0036BC  0101               	movlb	1	; () banked
  5471  0036BE  90D8               	bcf	status,0,c
  5472  0036C0  3189               	rrcf	sqrt@p& (0+255),w,b
  5473  0036C2  0101               	movlb	1	; () banked
  5474  0036C4  6F93               	movwf	(sqrt@root+3)& (0+255),b
  5475                           
  5476                           ; BSR set to: 1
  5477  0036C6  0101               	movlb	1	; () banked
  5478  0036C8  9F93               	bcf	(sqrt@root+3)& (0+255),7,b
  5479                           
  5480                           ; BSR set to: 1
  5481  0036CA  C190  F0C1         	movff	sqrt@root,?_sqrt
  5482  0036CE  C191  F0C2         	movff	sqrt@root+1,?_sqrt+1
  5483  0036D2  C192  F0C3         	movff	sqrt@root+2,?_sqrt+2
  5484  0036D6  C193  F0C4         	movff	sqrt@root+3,?_sqrt+3
  5485  0036DA  0012               	return	
  5486  0036DC                     __end_of_sqrt:
  5487                           	opt stack 0
  5488                           tblptru	equ	0xFF8
  5489                           tblptrh	equ	0xFF7
  5490                           tblptrl	equ	0xFF6
  5491                           tablat	equ	0xFF5
  5492                           postinc0	equ	0xFEE
  5493                           wreg	equ	0xFE8
  5494                           postdec1	equ	0xFE5
  5495                           fsr1l	equ	0xFE1
  5496                           postinc2	equ	0xFDE
  5497                           postdec2	equ	0xFDD
  5498                           fsr2h	equ	0xFDA
  5499                           fsr2l	equ	0xFD9
  5500                           status	equ	0xFD8
  5501                           
  5502 ;; *************** function _atan *****************
  5503 ;; Defined at:
  5504 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atan.c"
  5505 ;; Parameters:    Size  Location     Type
  5506 ;;  f               4  113[BANK0 ] unsigned char 
  5507 ;; Auto vars:     Size  Location     Type
  5508 ;;  val             4   13[BANK1 ] unsigned char 
  5509 ;;  val_squared     4    9[BANK1 ] unsigned char 
  5510 ;;  x               4    4[BANK1 ] unsigned char 
  5511 ;;  y               4    0[BANK1 ] unsigned char 
  5512 ;;  recip           1    8[BANK1 ] unsigned char 
  5513 ;; Return value:  Size  Location     Type
  5514 ;;                  4  113[BANK0 ] unsigned char 
  5515 ;; Registers used:
  5516 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5517 ;; Tracked objects:
  5518 ;;		On entry : 0/0
  5519 ;;		On exit  : 0/0
  5520 ;;		Unchanged: 0/0
  5521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5522 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5523 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  5524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5525 ;;      Totals:         0       4      17       0       0       0       0       0       0       0       0       0       
      +0       0
  5526 ;;Total ram usage:       21 bytes
  5527 ;; Hardware stack levels used:    1
  5528 ;; Hardware stack levels required when called:    6
  5529 ;; This function calls:
  5530 ;;		___fladd
  5531 ;;		___fldiv
  5532 ;;		___flge
  5533 ;;		___flmul
  5534 ;;		___flneg
  5535 ;;		_eval_poly
  5536 ;;		_fabs
  5537 ;; This function is called by:
  5538 ;;		_asin
  5539 ;; This function uses a non-reentrant model
  5540 ;;
  5541                           
  5542                           	psect	text15
  5543  0049CE                     __ptext15:
  5544                           	opt stack 0
  5545  0049CE                     _atan:
  5546                           	opt stack 21
  5547                           
  5548                           ;incstack = 0
  5549  0049CE  C0D1  F0AD         	movff	atan@f,fabs@d
  5550  0049D2  C0D2  F0AE         	movff	atan@f+1,fabs@d+1
  5551  0049D6  C0D3  F0AF         	movff	atan@f+2,fabs@d+2
  5552  0049DA  C0D4  F0B0         	movff	atan@f+3,fabs@d+3
  5553  0049DE  EC05  F02E         	call	_fabs	;wreg free
  5554  0049E2  C0AD  F190         	movff	?_fabs,atan@val
  5555  0049E6  C0AE  F191         	movff	?_fabs+1,atan@val+1
  5556  0049EA  C0AF  F192         	movff	?_fabs+2,atan@val+2
  5557  0049EE  C0B0  F193         	movff	?_fabs+3,atan@val+3
  5558  0049F2  0101               	movlb	1	; () banked
  5559  0049F4  5190               	movf	atan@val& (0+255),w,b
  5560  0049F6  0101               	movlb	1	; () banked
  5561  0049F8  1191               	iorwf	(atan@val+1)& (0+255),w,b
  5562  0049FA  0101               	movlb	1	; () banked
  5563  0049FC  1192               	iorwf	(atan@val+2)& (0+255),w,b
  5564  0049FE  0101               	movlb	1	; () banked
  5565  004A00  1193               	iorwf	(atan@val+3)& (0+255),w,b
  5566  004A02  A4D8               	btfss	status,2,c
  5567  004A04  D00A               	goto	l6789
  5568                           
  5569                           ; BSR set to: 1
  5570  004A06  0E00               	movlw	0
  5571  004A08  0100               	movlb	0	; () banked
  5572  004A0A  6FD1               	movwf	?_atan& (0+255),b
  5573  004A0C  0E00               	movlw	0
  5574  004A0E  6FD2               	movwf	(?_atan+1)& (0+255),b
  5575  004A10  0E00               	movlw	0
  5576  004A12  6FD3               	movwf	(?_atan+2)& (0+255),b
  5577  004A14  0E00               	movlw	0
  5578  004A16  6FD4               	movwf	(?_atan+3)& (0+255),b
  5579                           
  5580                           ; BSR set to: 0
  5581  004A18  0012               	return	
  5582  004A1A                     l6789:
  5583  004A1A  0E00               	movlw	0
  5584  004A1C  0100               	movlb	0	; () banked
  5585  004A1E  6FB1               	movwf	___flge@ff1& (0+255),b
  5586  004A20  0E00               	movlw	0
  5587  004A22  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  5588  004A24  0E80               	movlw	128
  5589  004A26  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  5590  004A28  0E3F               	movlw	63
  5591  004A2A  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  5592  004A2C  C190  F0B5         	movff	atan@val,___flge@ff2
  5593  004A30  C191  F0B6         	movff	atan@val+1,___flge@ff2+1
  5594  004A34  C192  F0B7         	movff	atan@val+2,___flge@ff2+2
  5595  004A38  C193  F0B8         	movff	atan@val+3,___flge@ff2+3
  5596  004A3C  ECAE  F028         	call	___flge	;wreg free
  5597  004A40  0100               	movlb	0	; () banked
  5598  004A42  B0D8               	btfsc	status,0,c
  5599  004A44  D002               	goto	u8550
  5600  004A46  0E01               	movlw	1
  5601  004A48  D001               	goto	u8560
  5602  004A4A                     u8550:
  5603  004A4A  0E00               	movlw	0
  5604  004A4C                     u8560:
  5605  004A4C  0101               	movlb	1	; () banked
  5606  004A4E  6F8B               	movwf	atan@recip& (0+255),b
  5607  004A50  0101               	movlb	1	; () banked
  5608  004A52  518B               	movf	atan@recip& (0+255),w,b
  5609  004A54  B4D8               	btfsc	status,2,c
  5610  004A56  D01B               	goto	l6793
  5611                           
  5612                           ; BSR set to: 1
  5613  004A58  0E00               	movlw	0
  5614  004A5A  0100               	movlb	0	; () banked
  5615  004A5C  6F77               	movwf	___fldiv@b& (0+255),b
  5616  004A5E  0E00               	movlw	0
  5617  004A60  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  5618  004A62  0E80               	movlw	128
  5619  004A64  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  5620  004A66  0E3F               	movlw	63
  5621  004A68  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  5622  004A6A  C190  F07B         	movff	atan@val,___fldiv@a
  5623  004A6E  C191  F07C         	movff	atan@val+1,___fldiv@a+1
  5624  004A72  C192  F07D         	movff	atan@val+2,___fldiv@a+2
  5625  004A76  C193  F07E         	movff	atan@val+3,___fldiv@a+3
  5626  004A7A  EC6E  F01B         	call	___fldiv	;wreg free
  5627  004A7E  C077  F190         	movff	?___fldiv,atan@val
  5628  004A82  C078  F191         	movff	?___fldiv+1,atan@val+1
  5629  004A86  C079  F192         	movff	?___fldiv+2,atan@val+2
  5630  004A8A  C07A  F193         	movff	?___fldiv+3,atan@val+3
  5631  004A8E                     l6793:
  5632  004A8E  C190  F090         	movff	atan@val,___flmul@b
  5633  004A92  C191  F091         	movff	atan@val+1,___flmul@b+1
  5634  004A96  C192  F092         	movff	atan@val+2,___flmul@b+2
  5635  004A9A  C193  F093         	movff	atan@val+3,___flmul@b+3
  5636  004A9E  C190  F094         	movff	atan@val,___flmul@a
  5637  004AA2  C191  F095         	movff	atan@val+1,___flmul@a+1
  5638  004AA6  C192  F096         	movff	atan@val+2,___flmul@a+2
  5639  004AAA  C193  F097         	movff	atan@val+3,___flmul@a+3
  5640  004AAE  EC36  F017         	call	___flmul	;wreg free
  5641  004AB2  C090  F18C         	movff	?___flmul,atan@val_squared
  5642  004AB6  C091  F18D         	movff	?___flmul+1,atan@val_squared+1
  5643  004ABA  C092  F18E         	movff	?___flmul+2,atan@val_squared+2
  5644  004ABE  C093  F18F         	movff	?___flmul+3,atan@val_squared+3
  5645  004AC2  C18C  F0C1         	movff	atan@val_squared,eval_poly@x
  5646  004AC6  C18D  F0C2         	movff	atan@val_squared+1,eval_poly@x+1
  5647  004ACA  C18E  F0C3         	movff	atan@val_squared+2,eval_poly@x+2
  5648  004ACE  C18F  F0C4         	movff	atan@val_squared+3,eval_poly@x+3
  5649  004AD2  0E19               	movlw	low atan@coeff_b
  5650  004AD4  0100               	movlb	0	; () banked
  5651  004AD6  6FC5               	movwf	eval_poly@d& (0+255),b
  5652  004AD8  0E0D               	movlw	high atan@coeff_b
  5653  004ADA  0100               	movlb	0	; () banked
  5654  004ADC  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  5655  004ADE  0E00               	movlw	0
  5656  004AE0  0100               	movlb	0	; () banked
  5657  004AE2  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  5658  004AE4  0E04               	movlw	4
  5659  004AE6  6FC7               	movwf	eval_poly@n& (0+255),b
  5660  004AE8  ECA3  F02A         	call	_eval_poly	;wreg free
  5661  004AEC  C0C1  F183         	movff	?_eval_poly,atan@y
  5662  004AF0  C0C2  F184         	movff	?_eval_poly+1,atan@y+1
  5663  004AF4  C0C3  F185         	movff	?_eval_poly+2,atan@y+2
  5664  004AF8  C0C4  F186         	movff	?_eval_poly+3,atan@y+3
  5665  004AFC  C18C  F0C1         	movff	atan@val_squared,eval_poly@x
  5666  004B00  C18D  F0C2         	movff	atan@val_squared+1,eval_poly@x+1
  5667  004B04  C18E  F0C3         	movff	atan@val_squared+2,eval_poly@x+2
  5668  004B08  C18F  F0C4         	movff	atan@val_squared+3,eval_poly@x+3
  5669  004B0C  0E01               	movlw	low atan@coeff_a
  5670  004B0E  0100               	movlb	0	; () banked
  5671  004B10  6FC5               	movwf	eval_poly@d& (0+255),b
  5672  004B12  0E0D               	movlw	high atan@coeff_a
  5673  004B14  0100               	movlb	0	; () banked
  5674  004B16  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  5675  004B18  0E00               	movlw	0
  5676  004B1A  0100               	movlb	0	; () banked
  5677  004B1C  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  5678  004B1E  0E05               	movlw	5
  5679  004B20  6FC7               	movwf	eval_poly@n& (0+255),b
  5680  004B22  ECA3  F02A         	call	_eval_poly	;wreg free
  5681  004B26  C0C1  F187         	movff	?_eval_poly,atan@x
  5682  004B2A  C0C2  F188         	movff	?_eval_poly+1,atan@x+1
  5683  004B2E  C0C3  F189         	movff	?_eval_poly+2,atan@x+2
  5684  004B32  C0C4  F18A         	movff	?_eval_poly+3,atan@x+3
  5685  004B36  C190  F090         	movff	atan@val,___flmul@b
  5686  004B3A  C191  F091         	movff	atan@val+1,___flmul@b+1
  5687  004B3E  C192  F092         	movff	atan@val+2,___flmul@b+2
  5688  004B42  C193  F093         	movff	atan@val+3,___flmul@b+3
  5689  004B46  C183  F07B         	movff	atan@y,___fldiv@a
  5690  004B4A  C184  F07C         	movff	atan@y+1,___fldiv@a+1
  5691  004B4E  C185  F07D         	movff	atan@y+2,___fldiv@a+2
  5692  004B52  C186  F07E         	movff	atan@y+3,___fldiv@a+3
  5693  004B56  C187  F077         	movff	atan@x,___fldiv@b
  5694  004B5A  C188  F078         	movff	atan@x+1,___fldiv@b+1
  5695  004B5E  C189  F079         	movff	atan@x+2,___fldiv@b+2
  5696  004B62  C18A  F07A         	movff	atan@x+3,___fldiv@b+3
  5697  004B66  EC6E  F01B         	call	___fldiv	;wreg free
  5698  004B6A  C077  F094         	movff	?___fldiv,___flmul@a
  5699  004B6E  C078  F095         	movff	?___fldiv+1,___flmul@a+1
  5700  004B72  C079  F096         	movff	?___fldiv+2,___flmul@a+2
  5701  004B76  C07A  F097         	movff	?___fldiv+3,___flmul@a+3
  5702  004B7A  EC36  F017         	call	___flmul	;wreg free
  5703  004B7E  C090  F190         	movff	?___flmul,atan@val
  5704  004B82  C091  F191         	movff	?___flmul+1,atan@val+1
  5705  004B86  C092  F192         	movff	?___flmul+2,atan@val+2
  5706  004B8A  C093  F193         	movff	?___flmul+3,atan@val+3
  5707  004B8E  0101               	movlb	1	; () banked
  5708  004B90  518B               	movf	atan@recip& (0+255),w,b
  5709  004B92  0101               	movlb	1	; () banked
  5710  004B94  B4D8               	btfsc	status,2,c
  5711  004B96  D025               	goto	l6805
  5712                           
  5713                           ; BSR set to: 1
  5714  004B98  C190  F0A9         	movff	atan@val,___flneg@f1
  5715  004B9C  C191  F0AA         	movff	atan@val+1,___flneg@f1+1
  5716  004BA0  C192  F0AB         	movff	atan@val+2,___flneg@f1+2
  5717  004BA4  C193  F0AC         	movff	atan@val+3,___flneg@f1+3
  5718  004BA8  EC41  F02E         	call	___flneg	;wreg free
  5719  004BAC  C0A9  F0AD         	movff	?___flneg,___fladd@b
  5720  004BB0  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  5721  004BB4  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  5722  004BB8  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  5723  004BBC  0EDB               	movlw	219
  5724  004BBE  0100               	movlb	0	; () banked
  5725  004BC0  6FB1               	movwf	___fladd@a& (0+255),b
  5726  004BC2  0E0F               	movlw	15
  5727  004BC4  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  5728  004BC6  0EC9               	movlw	201
  5729  004BC8  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  5730  004BCA  0E3F               	movlw	63
  5731  004BCC  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  5732  004BCE  ECE2  F014         	call	___fladd	;wreg free
  5733  004BD2  C0AD  F190         	movff	?___fladd,atan@val
  5734  004BD6  C0AE  F191         	movff	?___fladd+1,atan@val+1
  5735  004BDA  C0AF  F192         	movff	?___fladd+2,atan@val+2
  5736  004BDE  C0B0  F193         	movff	?___fladd+3,atan@val+3
  5737  004BE2                     l6805:
  5738  004BE2  0100               	movlb	0	; () banked
  5739  004BE4  BFD4               	btfsc	(atan@f+3)& (0+255),7,b
  5740  004BE6  D009               	goto	l6809
  5741                           
  5742                           ; BSR set to: 0
  5743  004BE8  C190  F0D1         	movff	atan@val,?_atan
  5744  004BEC  C191  F0D2         	movff	atan@val+1,?_atan+1
  5745  004BF0  C192  F0D3         	movff	atan@val+2,?_atan+2
  5746  004BF4  C193  F0D4         	movff	atan@val+3,?_atan+3
  5747  004BF8  0012               	return	
  5748  004BFA                     l6809:
  5749                           
  5750                           ; BSR set to: 0
  5751  004BFA  C190  F0A9         	movff	atan@val,___flneg@f1
  5752  004BFE  C191  F0AA         	movff	atan@val+1,___flneg@f1+1
  5753  004C02  C192  F0AB         	movff	atan@val+2,___flneg@f1+2
  5754  004C06  C193  F0AC         	movff	atan@val+3,___flneg@f1+3
  5755  004C0A  EC41  F02E         	call	___flneg	;wreg free
  5756  004C0E  C0A9  F0D1         	movff	?___flneg,?_atan
  5757  004C12  C0AA  F0D2         	movff	?___flneg+1,?_atan+1
  5758  004C16  C0AB  F0D3         	movff	?___flneg+2,?_atan+2
  5759  004C1A  C0AC  F0D4         	movff	?___flneg+3,?_atan+3
  5760  004C1E  0012               	return	
  5761  004C20                     __end_of_atan:
  5762                           	opt stack 0
  5763                           tblptru	equ	0xFF8
  5764                           tblptrh	equ	0xFF7
  5765                           tblptrl	equ	0xFF6
  5766                           tablat	equ	0xFF5
  5767                           postinc0	equ	0xFEE
  5768                           wreg	equ	0xFE8
  5769                           postdec1	equ	0xFE5
  5770                           fsr1l	equ	0xFE1
  5771                           postinc2	equ	0xFDE
  5772                           postdec2	equ	0xFDD
  5773                           fsr2h	equ	0xFDA
  5774                           fsr2l	equ	0xFD9
  5775                           status	equ	0xFD8
  5776                           
  5777 ;; *************** function _fabs *****************
  5778 ;; Defined at:
  5779 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fabs.c"
  5780 ;; Parameters:    Size  Location     Type
  5781 ;;  d               4   77[BANK0 ] unsigned char 
  5782 ;; Auto vars:     Size  Location     Type
  5783 ;;		None
  5784 ;; Return value:  Size  Location     Type
  5785 ;;                  4   77[BANK0 ] unsigned char 
  5786 ;; Registers used:
  5787 ;;		wreg, status,2, status,0, cstack
  5788 ;; Tracked objects:
  5789 ;;		On entry : 0/0
  5790 ;;		On exit  : 0/0
  5791 ;;		Unchanged: 0/0
  5792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5793 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5796 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5797 ;;Total ram usage:        4 bytes
  5798 ;; Hardware stack levels used:    1
  5799 ;; Hardware stack levels required when called:    5
  5800 ;; This function calls:
  5801 ;;		___flneg
  5802 ;; This function is called by:
  5803 ;;		_asin
  5804 ;;		_atan
  5805 ;; This function uses a non-reentrant model
  5806 ;;
  5807                           
  5808                           	psect	text16
  5809  005C0A                     __ptext16:
  5810                           	opt stack 0
  5811  005C0A                     _fabs:
  5812                           	opt stack 22
  5813                           
  5814                           ;incstack = 0
  5815  005C0A  0100               	movlb	0	; () banked
  5816  005C0C  AFB0               	btfss	(fabs@d+3)& (0+255),7,b
  5817  005C0E  D013               	goto	l1049
  5818                           
  5819                           ; BSR set to: 0
  5820  005C10  C0AD  F0A9         	movff	fabs@d,___flneg@f1
  5821  005C14  C0AE  F0AA         	movff	fabs@d+1,___flneg@f1+1
  5822  005C18  C0AF  F0AB         	movff	fabs@d+2,___flneg@f1+2
  5823  005C1C  C0B0  F0AC         	movff	fabs@d+3,___flneg@f1+3
  5824  005C20  EC41  F02E         	call	___flneg	;wreg free
  5825  005C24  C0A9  F0AD         	movff	?___flneg,?_fabs
  5826  005C28  C0AA  F0AE         	movff	?___flneg+1,?_fabs+1
  5827  005C2C  C0AB  F0AF         	movff	?___flneg+2,?_fabs+2
  5828  005C30  C0AC  F0B0         	movff	?___flneg+3,?_fabs+3
  5829  005C34  0012               	return	
  5830  005C36                     l1049:
  5831                           
  5832                           ; BSR set to: 0
  5833  005C36  C0AD  F0AD         	movff	fabs@d,?_fabs
  5834  005C3A  C0AE  F0AE         	movff	fabs@d+1,?_fabs+1
  5835  005C3E  C0AF  F0AF         	movff	fabs@d+2,?_fabs+2
  5836  005C42  C0B0  F0B0         	movff	fabs@d+3,?_fabs+3
  5837  005C46  0012               	return		;funcret
  5838  005C48                     __end_of_fabs:
  5839                           	opt stack 0
  5840                           tblptru	equ	0xFF8
  5841                           tblptrh	equ	0xFF7
  5842                           tblptrl	equ	0xFF6
  5843                           tablat	equ	0xFF5
  5844                           postinc0	equ	0xFEE
  5845                           wreg	equ	0xFE8
  5846                           postdec1	equ	0xFE5
  5847                           fsr1l	equ	0xFE1
  5848                           postinc2	equ	0xFDE
  5849                           postdec2	equ	0xFDD
  5850                           fsr2h	equ	0xFDA
  5851                           fsr2l	equ	0xFD9
  5852                           status	equ	0xFD8
  5853                           
  5854 ;; *************** function ___flneg *****************
  5855 ;; Defined at:
  5856 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  5857 ;; Parameters:    Size  Location     Type
  5858 ;;  f1              4   73[BANK0 ] unsigned char 
  5859 ;; Auto vars:     Size  Location     Type
  5860 ;;		None
  5861 ;; Return value:  Size  Location     Type
  5862 ;;                  4   73[BANK0 ] unsigned char 
  5863 ;; Registers used:
  5864 ;;		wreg, status,2, status,0
  5865 ;; Tracked objects:
  5866 ;;		On entry : 0/0
  5867 ;;		On exit  : 0/0
  5868 ;;		Unchanged: 0/0
  5869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5870 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5873 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5874 ;;Total ram usage:        4 bytes
  5875 ;; Hardware stack levels used:    1
  5876 ;; Hardware stack levels required when called:    4
  5877 ;; This function calls:
  5878 ;;		Nothing
  5879 ;; This function is called by:
  5880 ;;		_matematica
  5881 ;;		_asin
  5882 ;;		_atan
  5883 ;;		_fabs
  5884 ;;		_sin
  5885 ;; This function uses a non-reentrant model
  5886 ;;
  5887                           
  5888                           	psect	text17
  5889  005C82                     __ptext17:
  5890                           	opt stack 0
  5891  005C82                     ___flneg:
  5892                           	opt stack 22
  5893                           
  5894                           ;incstack = 0
  5895  005C82  0100               	movlb	0	; () banked
  5896  005C84  51A9               	movf	___flneg@f1& (0+255),w,b
  5897  005C86  0100               	movlb	0	; () banked
  5898  005C88  11AA               	iorwf	(___flneg@f1+1)& (0+255),w,b
  5899  005C8A  0100               	movlb	0	; () banked
  5900  005C8C  11AB               	iorwf	(___flneg@f1+2)& (0+255),w,b
  5901  005C8E  0100               	movlb	0	; () banked
  5902  005C90  11AC               	iorwf	(___flneg@f1+3)& (0+255),w,b
  5903  005C92  B4D8               	btfsc	status,2,c
  5904  005C94  D009               	goto	l6401
  5905                           
  5906                           ; BSR set to: 0
  5907  005C96  0E00               	movlw	0
  5908  005C98  0100               	movlb	0	; () banked
  5909  005C9A  1BA9               	xorwf	___flneg@f1& (0+255),f,b
  5910  005C9C  0E00               	movlw	0
  5911  005C9E  1BAA               	xorwf	(___flneg@f1+1)& (0+255),f,b
  5912  005CA0  0E00               	movlw	0
  5913  005CA2  1BAB               	xorwf	(___flneg@f1+2)& (0+255),f,b
  5914  005CA4  0E80               	movlw	128
  5915  005CA6  1BAC               	xorwf	(___flneg@f1+3)& (0+255),f,b
  5916  005CA8                     l6401:
  5917                           
  5918                           ; BSR set to: 0
  5919  005CA8  C0A9  F0A9         	movff	___flneg@f1,?___flneg
  5920  005CAC  C0AA  F0AA         	movff	___flneg@f1+1,?___flneg+1
  5921  005CB0  C0AB  F0AB         	movff	___flneg@f1+2,?___flneg+2
  5922  005CB4  C0AC  F0AC         	movff	___flneg@f1+3,?___flneg+3
  5923  005CB8  0012               	return	
  5924  005CBA                     __end_of___flneg:
  5925                           	opt stack 0
  5926                           tblptru	equ	0xFF8
  5927                           tblptrh	equ	0xFF7
  5928                           tblptrl	equ	0xFF6
  5929                           tablat	equ	0xFF5
  5930                           postinc0	equ	0xFEE
  5931                           wreg	equ	0xFE8
  5932                           postdec1	equ	0xFE5
  5933                           fsr1l	equ	0xFE1
  5934                           postinc2	equ	0xFDE
  5935                           postdec2	equ	0xFDD
  5936                           fsr2h	equ	0xFDA
  5937                           fsr2l	equ	0xFD9
  5938                           status	equ	0xFD8
  5939                           
  5940 ;; *************** function _eval_poly *****************
  5941 ;; Defined at:
  5942 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\evalpoly.c"
  5943 ;; Parameters:    Size  Location     Type
  5944 ;;  x               4   97[BANK0 ] unsigned char 
  5945 ;;  d               2  101[BANK0 ] PTR const 
  5946 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), atan@coeff_a(24), atan@coeff_b(20), 
  5947 ;;  n               2  103[BANK0 ] int 
  5948 ;; Auto vars:     Size  Location     Type
  5949 ;;  res             4  109[BANK0 ] int 
  5950 ;; Return value:  Size  Location     Type
  5951 ;;                  4   97[BANK0 ] int 
  5952 ;; Registers used:
  5953 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5954 ;; Tracked objects:
  5955 ;;		On entry : 0/0
  5956 ;;		On exit  : 0/0
  5957 ;;		Unchanged: 0/0
  5958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5959 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5960 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5961 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5962 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5963 ;;Total ram usage:       16 bytes
  5964 ;; Hardware stack levels used:    1
  5965 ;; Hardware stack levels required when called:    5
  5966 ;; This function calls:
  5967 ;;		___fladd
  5968 ;;		___flmul
  5969 ;; This function is called by:
  5970 ;;		_atan
  5971 ;;		_sin
  5972 ;; This function uses a non-reentrant model
  5973 ;;
  5974                           
  5975                           	psect	text18
  5976  005546                     __ptext18:
  5977                           	opt stack 0
  5978  005546                     _eval_poly:
  5979                           	opt stack 21
  5980                           
  5981                           ; BSR set to: 0
  5982                           ;incstack = 0
  5983  005546  C0C7  F0C9         	movff	eval_poly@n,??_eval_poly
  5984  00554A  C0C8  F0CA         	movff	eval_poly@n+1,??_eval_poly+1
  5985  00554E  0100               	movlb	0	; () banked
  5986  005550  90D8               	bcf	status,0,c
  5987  005552  37C9               	rlcf	??_eval_poly& (0+255),f,b
  5988  005554  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  5989  005556  0100               	movlb	0	; () banked
  5990  005558  90D8               	bcf	status,0,c
  5991  00555A  37C9               	rlcf	??_eval_poly& (0+255),f,b
  5992  00555C  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  5993  00555E  C0C5  F0CB         	movff	eval_poly@d,??_eval_poly+2
  5994  005562  C0C6  F0CC         	movff	eval_poly@d+1,??_eval_poly+3
  5995  005566  0100               	movlb	0	; () banked
  5996  005568  51C9               	movf	??_eval_poly& (0+255),w,b
  5997  00556A  0100               	movlb	0	; () banked
  5998  00556C  27CB               	addwf	(??_eval_poly+2)& (0+255),f,b
  5999  00556E  0100               	movlb	0	; () banked
  6000  005570  51CA               	movf	(??_eval_poly+1)& (0+255),w,b
  6001  005572  0100               	movlb	0	; () banked
  6002  005574  23CC               	addwfc	(??_eval_poly+3)& (0+255),f,b
  6003  005576  C0CB  FFF6         	movff	??_eval_poly+2,tblptrl
  6004  00557A  C0CC  FFF7         	movff	??_eval_poly+3,tblptrh
  6005  00557E                     	if	0	;tblptru may be non-zero
  6006  00557E                     	endif
  6007  00557E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6008  00557E  0E00               	movlw	low (__mediumconst shr (0+16))
  6009  005580  6EF8               	movwf	tblptru,c
  6010  005582                     	endif
  6011  005582  0009               	tblrd		*+
  6012  005584  CFF5 F0CD          	movff	tablat,eval_poly@res
  6013  005588  0009               	tblrd		*+
  6014  00558A  CFF5 F0CE          	movff	tablat,eval_poly@res+1
  6015  00558E  0009               	tblrd		*+
  6016  005590  CFF5 F0CF          	movff	tablat,eval_poly@res+2
  6017  005594  000A               	tblrd		*-
  6018  005596  CFF5 F0D0          	movff	tablat,eval_poly@res+3
  6019  00559A  D052               	goto	l6659
  6020  00559C                     l6657:
  6021                           
  6022                           ; BSR set to: 0
  6023  00559C  C0CD  F094         	movff	eval_poly@res,___flmul@a
  6024  0055A0  C0CE  F095         	movff	eval_poly@res+1,___flmul@a+1
  6025  0055A4  C0CF  F096         	movff	eval_poly@res+2,___flmul@a+2
  6026  0055A8  C0D0  F097         	movff	eval_poly@res+3,___flmul@a+3
  6027  0055AC  C0C1  F090         	movff	eval_poly@x,___flmul@b
  6028  0055B0  C0C2  F091         	movff	eval_poly@x+1,___flmul@b+1
  6029  0055B4  C0C3  F092         	movff	eval_poly@x+2,___flmul@b+2
  6030  0055B8  C0C4  F093         	movff	eval_poly@x+3,___flmul@b+3
  6031  0055BC  EC36  F017         	call	___flmul	;wreg free
  6032  0055C0  C090  F0AD         	movff	?___flmul,___fladd@b
  6033  0055C4  C091  F0AE         	movff	?___flmul+1,___fladd@b+1
  6034  0055C8  C092  F0AF         	movff	?___flmul+2,___fladd@b+2
  6035  0055CC  C093  F0B0         	movff	?___flmul+3,___fladd@b+3
  6036  0055D0  0100               	movlb	0	; () banked
  6037  0055D2  07C7               	decf	eval_poly@n& (0+255),f,b
  6038  0055D4  A0D8               	btfss	status,0,c
  6039  0055D6  07C8               	decf	(eval_poly@n+1)& (0+255),f,b
  6040  0055D8  C0C7  F0C9         	movff	eval_poly@n,??_eval_poly
  6041  0055DC  C0C8  F0CA         	movff	eval_poly@n+1,??_eval_poly+1
  6042  0055E0  0100               	movlb	0	; () banked
  6043  0055E2  90D8               	bcf	status,0,c
  6044  0055E4  37C9               	rlcf	??_eval_poly& (0+255),f,b
  6045  0055E6  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  6046  0055E8  0100               	movlb	0	; () banked
  6047  0055EA  90D8               	bcf	status,0,c
  6048  0055EC  37C9               	rlcf	??_eval_poly& (0+255),f,b
  6049  0055EE  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  6050  0055F0  C0C5  F0CB         	movff	eval_poly@d,??_eval_poly+2
  6051  0055F4  C0C6  F0CC         	movff	eval_poly@d+1,??_eval_poly+3
  6052  0055F8  0100               	movlb	0	; () banked
  6053  0055FA  51C9               	movf	??_eval_poly& (0+255),w,b
  6054  0055FC  0100               	movlb	0	; () banked
  6055  0055FE  27CB               	addwf	(??_eval_poly+2)& (0+255),f,b
  6056  005600  0100               	movlb	0	; () banked
  6057  005602  51CA               	movf	(??_eval_poly+1)& (0+255),w,b
  6058  005604  0100               	movlb	0	; () banked
  6059  005606  23CC               	addwfc	(??_eval_poly+3)& (0+255),f,b
  6060  005608  C0CB  FFF6         	movff	??_eval_poly+2,tblptrl
  6061  00560C  C0CC  FFF7         	movff	??_eval_poly+3,tblptrh
  6062  005610                     	if	0	;tblptru may be non-zero
  6063  005610                     	endif
  6064  005610                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6065  005610  0E00               	movlw	low (__mediumconst shr (0+16))
  6066  005612  6EF8               	movwf	tblptru,c
  6067  005614                     	endif
  6068  005614  0009               	tblrd		*+
  6069  005616  CFF5 F0B1          	movff	tablat,___fladd@a
  6070  00561A  0009               	tblrd		*+
  6071  00561C  CFF5 F0B2          	movff	tablat,___fladd@a+1
  6072  005620  0009               	tblrd		*+
  6073  005622  CFF5 F0B3          	movff	tablat,___fladd@a+2
  6074  005626  000A               	tblrd		*-
  6075  005628  CFF5 F0B4          	movff	tablat,___fladd@a+3
  6076  00562C  ECE2  F014         	call	___fladd	;wreg free
  6077  005630  C0AD  F0CD         	movff	?___fladd,eval_poly@res
  6078  005634  C0AE  F0CE         	movff	?___fladd+1,eval_poly@res+1
  6079  005638  C0AF  F0CF         	movff	?___fladd+2,eval_poly@res+2
  6080  00563C  C0B0  F0D0         	movff	?___fladd+3,eval_poly@res+3
  6081  005640                     l6659:
  6082  005640  0100               	movlb	0	; () banked
  6083  005642  51C7               	movf	eval_poly@n& (0+255),w,b
  6084  005644  0100               	movlb	0	; () banked
  6085  005646  11C8               	iorwf	(eval_poly@n+1)& (0+255),w,b
  6086  005648  A4D8               	btfss	status,2,c
  6087  00564A  D7A8               	goto	l6657
  6088                           
  6089                           ; BSR set to: 0
  6090  00564C  C0CD  F0C1         	movff	eval_poly@res,?_eval_poly
  6091  005650  C0CE  F0C2         	movff	eval_poly@res+1,?_eval_poly+1
  6092  005654  C0CF  F0C3         	movff	eval_poly@res+2,?_eval_poly+2
  6093  005658  C0D0  F0C4         	movff	eval_poly@res+3,?_eval_poly+3
  6094                           
  6095                           ; BSR set to: 0
  6096  00565C  0012               	return		;funcret
  6097  00565E                     __end_of_eval_poly:
  6098                           	opt stack 0
  6099                           tblptru	equ	0xFF8
  6100                           tblptrh	equ	0xFF7
  6101                           tblptrl	equ	0xFF6
  6102                           tablat	equ	0xFF5
  6103                           postinc0	equ	0xFEE
  6104                           wreg	equ	0xFE8
  6105                           postdec1	equ	0xFE5
  6106                           fsr1l	equ	0xFE1
  6107                           postinc2	equ	0xFDE
  6108                           postdec2	equ	0xFDD
  6109                           fsr2h	equ	0xFDA
  6110                           fsr2l	equ	0xFD9
  6111                           status	equ	0xFD8
  6112                           
  6113 ;; *************** function ___flmul *****************
  6114 ;; Defined at:
  6115 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  6116 ;; Parameters:    Size  Location     Type
  6117 ;;  b               4   48[BANK0 ] int 
  6118 ;;  a               4   52[BANK0 ] int 
  6119 ;; Auto vars:     Size  Location     Type
  6120 ;;  prod            4   67[BANK0 ] struct .
  6121 ;;  grs             4   62[BANK0 ] unsigned long 
  6122 ;;  temp            2   71[BANK0 ] struct .
  6123 ;;  bexp            1   66[BANK0 ] unsigned char 
  6124 ;;  aexp            1   61[BANK0 ] unsigned char 
  6125 ;;  sign            1   60[BANK0 ] unsigned char 
  6126 ;; Return value:  Size  Location     Type
  6127 ;;                  4   48[BANK0 ] unsigned char 
  6128 ;; Registers used:
  6129 ;;		wreg, status,2, status,0, prodl, prodh
  6130 ;; Tracked objects:
  6131 ;;		On entry : 0/0
  6132 ;;		On exit  : 0/0
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6135 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6136 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6137 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6138 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6139 ;;Total ram usage:       25 bytes
  6140 ;; Hardware stack levels used:    1
  6141 ;; Hardware stack levels required when called:    4
  6142 ;; This function calls:
  6143 ;;		Nothing
  6144 ;; This function is called by:
  6145 ;;		_parallelo
  6146 ;;		_matematica
  6147 ;;		_asin
  6148 ;;		_atan
  6149 ;;		_eval_poly
  6150 ;;		_sin
  6151 ;; This function uses a non-reentrant model
  6152 ;;
  6153                           
  6154                           	psect	text19
  6155  002E6C                     __ptext19:
  6156                           	opt stack 0
  6157  002E6C                     ___flmul:
  6158                           	opt stack 21
  6159                           
  6160                           ; BSR set to: 0
  6161                           ;incstack = 0
  6162  002E6C  0100               	movlb	0	; () banked
  6163  002E6E  5193               	movf	(___flmul@b+3)& (0+255),w,b
  6164  002E70  0B80               	andlw	128
  6165  002E72  0100               	movlb	0	; () banked
  6166  002E74  6F9C               	movwf	___flmul@sign& (0+255),b
  6167  002E76  0100               	movlb	0	; () banked
  6168  002E78  5193               	movf	(___flmul@b+3)& (0+255),w,b
  6169  002E7A  2593               	addwf	(___flmul@b+3)& (0+255),w,b
  6170  002E7C  0100               	movlb	0	; () banked
  6171  002E7E  6FA2               	movwf	___flmul@bexp& (0+255),b
  6172                           
  6173                           ; BSR set to: 0
  6174  002E80  0100               	movlb	0	; () banked
  6175  002E82  AF92               	btfss	(___flmul@b+2)& (0+255),7,b
  6176  002E84  D002               	goto	l6251
  6177                           
  6178                           ; BSR set to: 0
  6179  002E86  0100               	movlb	0	; () banked
  6180  002E88  81A2               	bsf	___flmul@bexp& (0+255),0,b
  6181  002E8A                     l6251:
  6182                           
  6183                           ; BSR set to: 0
  6184  002E8A  0100               	movlb	0	; () banked
  6185  002E8C  51A2               	movf	___flmul@bexp& (0+255),w,b
  6186  002E8E  0100               	movlb	0	; () banked
  6187  002E90  B4D8               	btfsc	status,2,c
  6188  002E92  D010               	goto	l6259
  6189                           
  6190                           ; BSR set to: 0
  6191  002E94  0100               	movlb	0	; () banked
  6192  002E96  29A2               	incf	___flmul@bexp& (0+255),w,b
  6193  002E98  A4D8               	btfss	status,2,c
  6194  002E9A  D009               	goto	l6257
  6195                           
  6196                           ; BSR set to: 0
  6197  002E9C  0E00               	movlw	0
  6198  002E9E  0100               	movlb	0	; () banked
  6199  002EA0  6F90               	movwf	___flmul@b& (0+255),b
  6200  002EA2  0E00               	movlw	0
  6201  002EA4  6F91               	movwf	(___flmul@b+1)& (0+255),b
  6202  002EA6  0E00               	movlw	0
  6203  002EA8  6F92               	movwf	(___flmul@b+2)& (0+255),b
  6204  002EAA  0E00               	movlw	0
  6205  002EAC  6F93               	movwf	(___flmul@b+3)& (0+255),b
  6206  002EAE                     l6257:
  6207                           
  6208                           ; BSR set to: 0
  6209  002EAE  0100               	movlb	0	; () banked
  6210  002EB0  8F92               	bsf	(___flmul@b+2)& (0+255),7,b
  6211  002EB2  D009               	goto	l6261
  6212  002EB4                     l6259:
  6213                           
  6214                           ; BSR set to: 0
  6215  002EB4  0E00               	movlw	0
  6216  002EB6  0100               	movlb	0	; () banked
  6217  002EB8  6F90               	movwf	___flmul@b& (0+255),b
  6218  002EBA  0E00               	movlw	0
  6219  002EBC  6F91               	movwf	(___flmul@b+1)& (0+255),b
  6220  002EBE  0E00               	movlw	0
  6221  002EC0  6F92               	movwf	(___flmul@b+2)& (0+255),b
  6222  002EC2  0E00               	movlw	0
  6223  002EC4  6F93               	movwf	(___flmul@b+3)& (0+255),b
  6224  002EC6                     l6261:
  6225                           
  6226                           ; BSR set to: 0
  6227  002EC6  0100               	movlb	0	; () banked
  6228  002EC8  5197               	movf	(___flmul@a+3)& (0+255),w,b
  6229  002ECA  0B80               	andlw	128
  6230  002ECC  0100               	movlb	0	; () banked
  6231  002ECE  1B9C               	xorwf	___flmul@sign& (0+255),f,b
  6232                           
  6233                           ; BSR set to: 0
  6234  002ED0  0100               	movlb	0	; () banked
  6235  002ED2  5197               	movf	(___flmul@a+3)& (0+255),w,b
  6236  002ED4  2597               	addwf	(___flmul@a+3)& (0+255),w,b
  6237  002ED6  0100               	movlb	0	; () banked
  6238  002ED8  6F9D               	movwf	___flmul@aexp& (0+255),b
  6239                           
  6240                           ; BSR set to: 0
  6241  002EDA  0100               	movlb	0	; () banked
  6242  002EDC  AF96               	btfss	(___flmul@a+2)& (0+255),7,b
  6243  002EDE  D002               	goto	l6269
  6244                           
  6245                           ; BSR set to: 0
  6246  002EE0  0100               	movlb	0	; () banked
  6247  002EE2  819D               	bsf	___flmul@aexp& (0+255),0,b
  6248  002EE4                     l6269:
  6249                           
  6250                           ; BSR set to: 0
  6251  002EE4  0100               	movlb	0	; () banked
  6252  002EE6  519D               	movf	___flmul@aexp& (0+255),w,b
  6253  002EE8  0100               	movlb	0	; () banked
  6254  002EEA  B4D8               	btfsc	status,2,c
  6255  002EEC  D010               	goto	l6277
  6256                           
  6257                           ; BSR set to: 0
  6258  002EEE  0100               	movlb	0	; () banked
  6259  002EF0  299D               	incf	___flmul@aexp& (0+255),w,b
  6260  002EF2  A4D8               	btfss	status,2,c
  6261  002EF4  D009               	goto	l6275
  6262                           
  6263                           ; BSR set to: 0
  6264  002EF6  0E00               	movlw	0
  6265  002EF8  0100               	movlb	0	; () banked
  6266  002EFA  6F94               	movwf	___flmul@a& (0+255),b
  6267  002EFC  0E00               	movlw	0
  6268  002EFE  6F95               	movwf	(___flmul@a+1)& (0+255),b
  6269  002F00  0E00               	movlw	0
  6270  002F02  6F96               	movwf	(___flmul@a+2)& (0+255),b
  6271  002F04  0E00               	movlw	0
  6272  002F06  6F97               	movwf	(___flmul@a+3)& (0+255),b
  6273  002F08                     l6275:
  6274                           
  6275                           ; BSR set to: 0
  6276  002F08  0100               	movlb	0	; () banked
  6277  002F0A  8F96               	bsf	(___flmul@a+2)& (0+255),7,b
  6278  002F0C  D009               	goto	l1394
  6279  002F0E                     l6277:
  6280                           
  6281                           ; BSR set to: 0
  6282  002F0E  0E00               	movlw	0
  6283  002F10  0100               	movlb	0	; () banked
  6284  002F12  6F94               	movwf	___flmul@a& (0+255),b
  6285  002F14  0E00               	movlw	0
  6286  002F16  6F95               	movwf	(___flmul@a+1)& (0+255),b
  6287  002F18  0E00               	movlw	0
  6288  002F1A  6F96               	movwf	(___flmul@a+2)& (0+255),b
  6289  002F1C  0E00               	movlw	0
  6290  002F1E  6F97               	movwf	(___flmul@a+3)& (0+255),b
  6291  002F20                     l1394:
  6292                           
  6293                           ; BSR set to: 0
  6294  002F20  0100               	movlb	0	; () banked
  6295  002F22  519D               	movf	___flmul@aexp& (0+255),w,b
  6296  002F24  0100               	movlb	0	; () banked
  6297  002F26  B4D8               	btfsc	status,2,c
  6298  002F28  D005               	goto	l6281
  6299                           
  6300                           ; BSR set to: 0
  6301  002F2A  0100               	movlb	0	; () banked
  6302  002F2C  51A2               	movf	___flmul@bexp& (0+255),w,b
  6303  002F2E  0100               	movlb	0	; () banked
  6304  002F30  A4D8               	btfss	status,2,c
  6305  002F32  D00A               	goto	l6285
  6306  002F34                     l6281:
  6307                           
  6308                           ; BSR set to: 0
  6309  002F34  0E00               	movlw	0
  6310  002F36  0100               	movlb	0	; () banked
  6311  002F38  6F90               	movwf	?___flmul& (0+255),b
  6312  002F3A  0E00               	movlw	0
  6313  002F3C  6F91               	movwf	(?___flmul+1)& (0+255),b
  6314  002F3E  0E00               	movlw	0
  6315  002F40  6F92               	movwf	(?___flmul+2)& (0+255),b
  6316  002F42  0E00               	movlw	0
  6317  002F44  6F93               	movwf	(?___flmul+3)& (0+255),b
  6318                           
  6319                           ; BSR set to: 0
  6320  002F46  0012               	return	
  6321  002F48                     l6285:
  6322                           
  6323                           ; BSR set to: 0
  6324  002F48  0100               	movlb	0	; () banked
  6325  002F4A  5196               	movf	(___flmul@a+2)& (0+255),w,b
  6326  002F4C  0100               	movlb	0	; () banked
  6327  002F4E  0390               	mulwf	___flmul@b& (0+255),b
  6328  002F50  CFF3 F0A7          	movff	prodl,___flmul@temp
  6329  002F54  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6330                           
  6331                           ; BSR set to: 0
  6332  002F58  0100               	movlb	0	; () banked
  6333  002F5A  51A7               	movf	___flmul@temp& (0+255),w,b
  6334  002F5C  0100               	movlb	0	; () banked
  6335  002F5E  6F9E               	movwf	___flmul@grs& (0+255),b
  6336  002F60  6B9F               	clrf	(___flmul@grs+1)& (0+255),b
  6337  002F62  6BA0               	clrf	(___flmul@grs+2)& (0+255),b
  6338  002F64  6BA1               	clrf	(___flmul@grs+3)& (0+255),b
  6339                           
  6340                           ; BSR set to: 0
  6341  002F66  0100               	movlb	0	; () banked
  6342  002F68  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6343  002F6A  0100               	movlb	0	; () banked
  6344  002F6C  6FA3               	movwf	___flmul@prod& (0+255),b
  6345  002F6E  6BA4               	clrf	(___flmul@prod+1)& (0+255),b
  6346  002F70  6BA5               	clrf	(___flmul@prod+2)& (0+255),b
  6347  002F72  6BA6               	clrf	(___flmul@prod+3)& (0+255),b
  6348  002F74  0100               	movlb	0	; () banked
  6349  002F76  5195               	movf	(___flmul@a+1)& (0+255),w,b
  6350  002F78  0100               	movlb	0	; () banked
  6351  002F7A  0391               	mulwf	(___flmul@b+1)& (0+255),b
  6352  002F7C  CFF3 F0A7          	movff	prodl,___flmul@temp
  6353  002F80  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6354                           
  6355                           ; BSR set to: 0
  6356  002F84  0100               	movlb	0	; () banked
  6357  002F86  51A7               	movf	___flmul@temp& (0+255),w,b
  6358  002F88  0100               	movlb	0	; () banked
  6359  002F8A  279E               	addwf	___flmul@grs& (0+255),f,b
  6360  002F8C  0E00               	movlw	0
  6361  002F8E  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6362  002F90  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6363  002F92  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6364                           
  6365                           ; BSR set to: 0
  6366  002F94  0100               	movlb	0	; () banked
  6367  002F96  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6368  002F98  0100               	movlb	0	; () banked
  6369  002F9A  27A3               	addwf	___flmul@prod& (0+255),f,b
  6370  002F9C  0E00               	movlw	0
  6371  002F9E  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6372  002FA0  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6373  002FA2  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6374  002FA4  0100               	movlb	0	; () banked
  6375  002FA6  5194               	movf	___flmul@a& (0+255),w,b
  6376  002FA8  0100               	movlb	0	; () banked
  6377  002FAA  0392               	mulwf	(___flmul@b+2)& (0+255),b
  6378  002FAC  CFF3 F0A7          	movff	prodl,___flmul@temp
  6379  002FB0  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6380                           
  6381                           ; BSR set to: 0
  6382  002FB4  0100               	movlb	0	; () banked
  6383  002FB6  51A7               	movf	___flmul@temp& (0+255),w,b
  6384  002FB8  0100               	movlb	0	; () banked
  6385  002FBA  279E               	addwf	___flmul@grs& (0+255),f,b
  6386  002FBC  0E00               	movlw	0
  6387  002FBE  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6388  002FC0  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6389  002FC2  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6390                           
  6391                           ; BSR set to: 0
  6392  002FC4  0100               	movlb	0	; () banked
  6393  002FC6  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6394  002FC8  0100               	movlb	0	; () banked
  6395  002FCA  27A3               	addwf	___flmul@prod& (0+255),f,b
  6396  002FCC  0E00               	movlw	0
  6397  002FCE  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6398  002FD0  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6399  002FD2  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6400                           
  6401                           ; BSR set to: 0
  6402  002FD4  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  6403  002FD8  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  6404  002FDC  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  6405  002FE0  0100               	movlb	0	; () banked
  6406  002FE2  6B9E               	clrf	___flmul@grs& (0+255),b
  6407                           
  6408                           ; BSR set to: 0
  6409  002FE4  0100               	movlb	0	; () banked
  6410  002FE6  5194               	movf	___flmul@a& (0+255),w,b
  6411  002FE8  0100               	movlb	0	; () banked
  6412  002FEA  0391               	mulwf	(___flmul@b+1)& (0+255),b
  6413  002FEC  CFF3 F0A7          	movff	prodl,___flmul@temp
  6414  002FF0  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6415                           
  6416                           ; BSR set to: 0
  6417  002FF4  0100               	movlb	0	; () banked
  6418  002FF6  51A7               	movf	___flmul@temp& (0+255),w,b
  6419  002FF8  0100               	movlb	0	; () banked
  6420  002FFA  279E               	addwf	___flmul@grs& (0+255),f,b
  6421  002FFC  0100               	movlb	0	; () banked
  6422  002FFE  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6423  003000  0100               	movlb	0	; () banked
  6424  003002  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6425  003004  0E00               	movlw	0
  6426  003006  0100               	movlb	0	; () banked
  6427  003008  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6428  00300A  0E00               	movlw	0
  6429  00300C  0100               	movlb	0	; () banked
  6430  00300E  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6431                           
  6432                           ; BSR set to: 0
  6433  003010  0100               	movlb	0	; () banked
  6434  003012  5195               	movf	(___flmul@a+1)& (0+255),w,b
  6435  003014  0100               	movlb	0	; () banked
  6436  003016  0390               	mulwf	___flmul@b& (0+255),b
  6437  003018  CFF3 F0A7          	movff	prodl,___flmul@temp
  6438  00301C  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6439                           
  6440                           ; BSR set to: 0
  6441  003020  0100               	movlb	0	; () banked
  6442  003022  51A7               	movf	___flmul@temp& (0+255),w,b
  6443  003024  0100               	movlb	0	; () banked
  6444  003026  279E               	addwf	___flmul@grs& (0+255),f,b
  6445  003028  0100               	movlb	0	; () banked
  6446  00302A  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6447  00302C  0100               	movlb	0	; () banked
  6448  00302E  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6449  003030  0E00               	movlw	0
  6450  003032  0100               	movlb	0	; () banked
  6451  003034  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6452  003036  0E00               	movlw	0
  6453  003038  0100               	movlb	0	; () banked
  6454  00303A  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6455                           
  6456                           ; BSR set to: 0
  6457  00303C  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  6458  003040  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  6459  003044  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  6460  003048  0100               	movlb	0	; () banked
  6461  00304A  6B9E               	clrf	___flmul@grs& (0+255),b
  6462  00304C  0100               	movlb	0	; () banked
  6463  00304E  5194               	movf	___flmul@a& (0+255),w,b
  6464  003050  0100               	movlb	0	; () banked
  6465  003052  0390               	mulwf	___flmul@b& (0+255),b
  6466  003054  CFF3 F0A7          	movff	prodl,___flmul@temp
  6467  003058  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6468                           
  6469                           ; BSR set to: 0
  6470  00305C  0100               	movlb	0	; () banked
  6471  00305E  51A7               	movf	___flmul@temp& (0+255),w,b
  6472  003060  0100               	movlb	0	; () banked
  6473  003062  279E               	addwf	___flmul@grs& (0+255),f,b
  6474  003064  0100               	movlb	0	; () banked
  6475  003066  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6476  003068  0100               	movlb	0	; () banked
  6477  00306A  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6478  00306C  0E00               	movlw	0
  6479  00306E  0100               	movlb	0	; () banked
  6480  003070  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6481  003072  0E00               	movlw	0
  6482  003074  0100               	movlb	0	; () banked
  6483  003076  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6484                           
  6485                           ; BSR set to: 0
  6486  003078  0100               	movlb	0	; () banked
  6487  00307A  5196               	movf	(___flmul@a+2)& (0+255),w,b
  6488  00307C  0100               	movlb	0	; () banked
  6489  00307E  0391               	mulwf	(___flmul@b+1)& (0+255),b
  6490  003080  CFF3 F0A7          	movff	prodl,___flmul@temp
  6491  003084  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6492  003088  0100               	movlb	0	; () banked
  6493  00308A  51A7               	movf	___flmul@temp& (0+255),w,b
  6494  00308C  0100               	movlb	0	; () banked
  6495  00308E  27A3               	addwf	___flmul@prod& (0+255),f,b
  6496  003090  0100               	movlb	0	; () banked
  6497  003092  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6498  003094  0100               	movlb	0	; () banked
  6499  003096  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6500  003098  0E00               	movlw	0
  6501  00309A  0100               	movlb	0	; () banked
  6502  00309C  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6503  00309E  0E00               	movlw	0
  6504  0030A0  0100               	movlb	0	; () banked
  6505  0030A2  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6506                           
  6507                           ; BSR set to: 0
  6508  0030A4  0100               	movlb	0	; () banked
  6509  0030A6  5195               	movf	(___flmul@a+1)& (0+255),w,b
  6510  0030A8  0100               	movlb	0	; () banked
  6511  0030AA  0392               	mulwf	(___flmul@b+2)& (0+255),b
  6512  0030AC  CFF3 F0A7          	movff	prodl,___flmul@temp
  6513  0030B0  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6514                           
  6515                           ; BSR set to: 0
  6516  0030B4  0100               	movlb	0	; () banked
  6517  0030B6  51A7               	movf	___flmul@temp& (0+255),w,b
  6518  0030B8  0100               	movlb	0	; () banked
  6519  0030BA  27A3               	addwf	___flmul@prod& (0+255),f,b
  6520  0030BC  0100               	movlb	0	; () banked
  6521  0030BE  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6522  0030C0  0100               	movlb	0	; () banked
  6523  0030C2  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6524  0030C4  0E00               	movlw	0
  6525  0030C6  0100               	movlb	0	; () banked
  6526  0030C8  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6527  0030CA  0E00               	movlw	0
  6528  0030CC  0100               	movlb	0	; () banked
  6529  0030CE  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6530  0030D0  0100               	movlb	0	; () banked
  6531  0030D2  5196               	movf	(___flmul@a+2)& (0+255),w,b
  6532  0030D4  0100               	movlb	0	; () banked
  6533  0030D6  0392               	mulwf	(___flmul@b+2)& (0+255),b
  6534  0030D8  CFF3 F0A7          	movff	prodl,___flmul@temp
  6535  0030DC  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6536                           
  6537                           ; BSR set to: 0
  6538  0030E0  0100               	movlb	0	; () banked
  6539  0030E2  51A7               	movf	___flmul@temp& (0+255),w,b
  6540  0030E4  0100               	movlb	0	; () banked
  6541  0030E6  6F98               	movwf	??___flmul& (0+255),b
  6542  0030E8  0100               	movlb	0	; () banked
  6543  0030EA  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6544  0030EC  0100               	movlb	0	; () banked
  6545  0030EE  6F99               	movwf	(??___flmul+1)& (0+255),b
  6546  0030F0  0100               	movlb	0	; () banked
  6547  0030F2  6B9A               	clrf	(??___flmul+2)& (0+255),b
  6548  0030F4  0100               	movlb	0	; () banked
  6549  0030F6  6B9B               	clrf	(??___flmul+3)& (0+255),b
  6550  0030F8  C09A  F09B         	movff	??___flmul+2,??___flmul+3
  6551  0030FC  C099  F09A         	movff	??___flmul+1,??___flmul+2
  6552  003100  C098  F099         	movff	??___flmul,??___flmul+1
  6553  003104  0100               	movlb	0	; () banked
  6554  003106  6B98               	clrf	??___flmul& (0+255),b
  6555  003108  0100               	movlb	0	; () banked
  6556  00310A  5198               	movf	??___flmul& (0+255),w,b
  6557  00310C  0100               	movlb	0	; () banked
  6558  00310E  27A3               	addwf	___flmul@prod& (0+255),f,b
  6559  003110  0100               	movlb	0	; () banked
  6560  003112  5199               	movf	(??___flmul+1)& (0+255),w,b
  6561  003114  0100               	movlb	0	; () banked
  6562  003116  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6563  003118  0100               	movlb	0	; () banked
  6564  00311A  519A               	movf	(??___flmul+2)& (0+255),w,b
  6565  00311C  0100               	movlb	0	; () banked
  6566  00311E  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6567  003120  0100               	movlb	0	; () banked
  6568  003122  519B               	movf	(??___flmul+3)& (0+255),w,b
  6569  003124  0100               	movlb	0	; () banked
  6570  003126  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6571                           
  6572                           ; BSR set to: 0
  6573  003128  C09E  F098         	movff	___flmul@grs,??___flmul
  6574  00312C  C09F  F099         	movff	___flmul@grs+1,??___flmul+1
  6575  003130  C0A0  F09A         	movff	___flmul@grs+2,??___flmul+2
  6576  003134  C0A1  F09B         	movff	___flmul@grs+3,??___flmul+3
  6577  003138  0E19               	movlw	25
  6578  00313A  D006               	goto	u7780
  6579  00313C                     u7785:
  6580  00313C  0100               	movlb	0	; () banked
  6581  00313E  90D8               	bcf	status,0,c
  6582  003140  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  6583  003142  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  6584  003144  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  6585  003146  3398               	rrcf	??___flmul& (0+255),f,b
  6586  003148                     u7780:
  6587  003148  2EE8               	decfsz	wreg,f,c
  6588  00314A  D7F8               	goto	u7785
  6589  00314C  0100               	movlb	0	; () banked
  6590  00314E  5198               	movf	??___flmul& (0+255),w,b
  6591  003150  0100               	movlb	0	; () banked
  6592  003152  27A3               	addwf	___flmul@prod& (0+255),f,b
  6593  003154  0100               	movlb	0	; () banked
  6594  003156  5199               	movf	(??___flmul+1)& (0+255),w,b
  6595  003158  0100               	movlb	0	; () banked
  6596  00315A  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6597  00315C  0100               	movlb	0	; () banked
  6598  00315E  519A               	movf	(??___flmul+2)& (0+255),w,b
  6599  003160  0100               	movlb	0	; () banked
  6600  003162  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6601  003164  0100               	movlb	0	; () banked
  6602  003166  519B               	movf	(??___flmul+3)& (0+255),w,b
  6603  003168  0100               	movlb	0	; () banked
  6604  00316A  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6605                           
  6606                           ; BSR set to: 0
  6607  00316C  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  6608  003170  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  6609  003174  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  6610  003178  0100               	movlb	0	; () banked
  6611  00317A  6B9E               	clrf	___flmul@grs& (0+255),b
  6612                           
  6613                           ; BSR set to: 0
  6614  00317C  0100               	movlb	0	; () banked
  6615  00317E  519D               	movf	___flmul@aexp& (0+255),w,b
  6616  003180  C0A2  F098         	movff	___flmul@bexp,??___flmul
  6617  003184  0100               	movlb	0	; () banked
  6618  003186  6B99               	clrf	(??___flmul+1)& (0+255),b
  6619  003188  0100               	movlb	0	; () banked
  6620  00318A  2798               	addwf	??___flmul& (0+255),f,b
  6621  00318C  0E00               	movlw	0
  6622  00318E  2399               	addwfc	(??___flmul+1)& (0+255),f,b
  6623  003190  0E82               	movlw	130
  6624  003192  0100               	movlb	0	; () banked
  6625  003194  2598               	addwf	??___flmul& (0+255),w,b
  6626  003196  0100               	movlb	0	; () banked
  6627  003198  6FA7               	movwf	___flmul@temp& (0+255),b
  6628  00319A  0EFF               	movlw	255
  6629  00319C  0100               	movlb	0	; () banked
  6630  00319E  2199               	addwfc	(??___flmul+1)& (0+255),w,b
  6631  0031A0  0100               	movlb	0	; () banked
  6632  0031A2  6FA8               	movwf	(___flmul@temp+1)& (0+255),b
  6633  0031A4  D015               	goto	l6333
  6634  0031A6                     l6327:
  6635                           
  6636                           ; BSR set to: 0
  6637  0031A6  0100               	movlb	0	; () banked
  6638  0031A8  90D8               	bcf	status,0,c
  6639  0031AA  37A3               	rlcf	___flmul@prod& (0+255),f,b
  6640  0031AC  37A4               	rlcf	(___flmul@prod+1)& (0+255),f,b
  6641  0031AE  37A5               	rlcf	(___flmul@prod+2)& (0+255),f,b
  6642  0031B0  37A6               	rlcf	(___flmul@prod+3)& (0+255),f,b
  6643                           
  6644                           ; BSR set to: 0
  6645  0031B2  0100               	movlb	0	; () banked
  6646  0031B4  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  6647  0031B6  D002               	goto	l1401
  6648                           
  6649                           ; BSR set to: 0
  6650  0031B8  0100               	movlb	0	; () banked
  6651  0031BA  81A3               	bsf	___flmul@prod& (0+255),0,b
  6652  0031BC                     l1401:
  6653                           
  6654                           ; BSR set to: 0
  6655  0031BC  0100               	movlb	0	; () banked
  6656  0031BE  90D8               	bcf	status,0,c
  6657  0031C0  379E               	rlcf	___flmul@grs& (0+255),f,b
  6658  0031C2  379F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  6659  0031C4  37A0               	rlcf	(___flmul@grs+2)& (0+255),f,b
  6660  0031C6  37A1               	rlcf	(___flmul@grs+3)& (0+255),f,b
  6661  0031C8  0100               	movlb	0	; () banked
  6662  0031CA  07A7               	decf	___flmul@temp& (0+255),f,b
  6663  0031CC  A0D8               	btfss	status,0,c
  6664  0031CE  07A8               	decf	(___flmul@temp+1)& (0+255),f,b
  6665  0031D0                     l6333:
  6666                           
  6667                           ; BSR set to: 0
  6668  0031D0  0100               	movlb	0	; () banked
  6669  0031D2  AFA5               	btfss	(___flmul@prod+2)& (0+255),7,b
  6670  0031D4  D7E8               	goto	l6327
  6671                           
  6672                           ; BSR set to: 0
  6673                           
  6674                           ; BSR set to: 0
  6675  0031D6  0E00               	movlw	0
  6676  0031D8  0100               	movlb	0	; () banked
  6677  0031DA  6F9D               	movwf	___flmul@aexp& (0+255),b
  6678                           
  6679                           ; BSR set to: 0
  6680  0031DC  0100               	movlb	0	; () banked
  6681  0031DE  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  6682  0031E0  D024               	goto	l1403
  6683                           
  6684                           ; BSR set to: 0
  6685  0031E2  0EFF               	movlw	255
  6686  0031E4  0100               	movlb	0	; () banked
  6687  0031E6  159E               	andwf	___flmul@grs& (0+255),w,b
  6688  0031E8  0100               	movlb	0	; () banked
  6689  0031EA  6F98               	movwf	??___flmul& (0+255),b
  6690  0031EC  0EFF               	movlw	255
  6691  0031EE  0100               	movlb	0	; () banked
  6692  0031F0  159F               	andwf	(___flmul@grs+1)& (0+255),w,b
  6693  0031F2  0100               	movlb	0	; () banked
  6694  0031F4  6F99               	movwf	(??___flmul+1)& (0+255),b
  6695  0031F6  0EFF               	movlw	255
  6696  0031F8  0100               	movlb	0	; () banked
  6697  0031FA  15A0               	andwf	(___flmul@grs+2)& (0+255),w,b
  6698  0031FC  0100               	movlb	0	; () banked
  6699  0031FE  6F9A               	movwf	(??___flmul+2)& (0+255),b
  6700  003200  0E7F               	movlw	127
  6701  003202  0100               	movlb	0	; () banked
  6702  003204  15A1               	andwf	(___flmul@grs+3)& (0+255),w,b
  6703  003206  0100               	movlb	0	; () banked
  6704  003208  6F9B               	movwf	(??___flmul+3)& (0+255),b
  6705  00320A  0100               	movlb	0	; () banked
  6706  00320C  5198               	movf	??___flmul& (0+255),w,b
  6707  00320E  0100               	movlb	0	; () banked
  6708  003210  1199               	iorwf	(??___flmul+1)& (0+255),w,b
  6709  003212  0100               	movlb	0	; () banked
  6710  003214  119A               	iorwf	(??___flmul+2)& (0+255),w,b
  6711  003216  0100               	movlb	0	; () banked
  6712  003218  119B               	iorwf	(??___flmul+3)& (0+255),w,b
  6713  00321A  A4D8               	btfss	status,2,c
  6714  00321C  D003               	goto	l6343
  6715                           
  6716                           ; BSR set to: 0
  6717                           
  6718                           ; BSR set to: 0
  6719  00321E  0100               	movlb	0	; () banked
  6720  003220  A1A3               	btfss	___flmul@prod& (0+255),0,b
  6721  003222  D003               	goto	l1403
  6722  003224                     l6343:
  6723                           
  6724                           ; BSR set to: 0
  6725  003224  0E01               	movlw	1
  6726  003226  0100               	movlb	0	; () banked
  6727  003228  6F9D               	movwf	___flmul@aexp& (0+255),b
  6728  00322A                     l1403:
  6729                           
  6730                           ; BSR set to: 0
  6731  00322A  0100               	movlb	0	; () banked
  6732  00322C  519D               	movf	___flmul@aexp& (0+255),w,b
  6733  00322E  0100               	movlb	0	; () banked
  6734  003230  B4D8               	btfsc	status,2,c
  6735  003232  D023               	goto	l6353
  6736                           
  6737                           ; BSR set to: 0
  6738  003234  0E01               	movlw	1
  6739  003236  0100               	movlb	0	; () banked
  6740  003238  27A3               	addwf	___flmul@prod& (0+255),f,b
  6741  00323A  0E00               	movlw	0
  6742  00323C  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6743  00323E  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6744  003240  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6745                           
  6746                           ; BSR set to: 0
  6747  003242  0100               	movlb	0	; () banked
  6748  003244  A1A6               	btfss	(___flmul@prod+3)& (0+255),0,b
  6749  003246  D019               	goto	l6353
  6750                           
  6751                           ; BSR set to: 0
  6752  003248  C0A3  F098         	movff	___flmul@prod,??___flmul
  6753  00324C  C0A4  F099         	movff	___flmul@prod+1,??___flmul+1
  6754  003250  C0A5  F09A         	movff	___flmul@prod+2,??___flmul+2
  6755  003254  C0A6  F09B         	movff	___flmul@prod+3,??___flmul+3
  6756  003258  0100               	movlb	0	; () banked
  6757  00325A  359B               	rlcf	(??___flmul+3)& (0+255),w,b
  6758  00325C  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  6759  00325E  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  6760  003260  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  6761  003262  3398               	rrcf	??___flmul& (0+255),f,b
  6762  003264  C098  F0A3         	movff	??___flmul,___flmul@prod
  6763  003268  C099  F0A4         	movff	??___flmul+1,___flmul@prod+1
  6764  00326C  C09A  F0A5         	movff	??___flmul+2,___flmul@prod+2
  6765  003270  C09B  F0A6         	movff	??___flmul+3,___flmul@prod+3
  6766                           
  6767                           ; BSR set to: 0
  6768  003274  0100               	movlb	0	; () banked
  6769  003276  4BA7               	infsnz	___flmul@temp& (0+255),f,b
  6770  003278  2BA8               	incf	(___flmul@temp+1)& (0+255),f,b
  6771  00327A                     l6353:
  6772                           
  6773                           ; BSR set to: 0
  6774  00327A  0100               	movlb	0	; () banked
  6775  00327C  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6776  00327E  D010               	goto	l6357
  6777  003280  0100               	movlb	0	; () banked
  6778  003282  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6779  003284  E104               	bnz	u7860
  6780  003286  0100               	movlb	0	; () banked
  6781  003288  29A7               	incf	___flmul@temp& (0+255),w,b
  6782  00328A  A0D8               	btfss	status,0,c
  6783  00328C  D009               	goto	l6357
  6784  00328E                     u7860:
  6785                           
  6786                           ; BSR set to: 0
  6787  00328E  0E00               	movlw	0
  6788  003290  0100               	movlb	0	; () banked
  6789  003292  6FA3               	movwf	___flmul@prod& (0+255),b
  6790  003294  0E00               	movlw	0
  6791  003296  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  6792  003298  0E80               	movlw	128
  6793  00329A  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  6794  00329C  0E7F               	movlw	127
  6795  00329E  D02B               	goto	L2
  6796  0032A0                     l6357:
  6797                           
  6798                           ; BSR set to: 0
  6799  0032A0  0100               	movlb	0	; () banked
  6800  0032A2  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6801  0032A4  D007               	goto	l6359
  6802  0032A6  0100               	movlb	0	; () banked
  6803  0032A8  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6804  0032AA  E111               	bnz	l1411
  6805  0032AC  0100               	movlb	0	; () banked
  6806  0032AE  05A7               	decf	___flmul@temp& (0+255),w,b
  6807  0032B0  B0D8               	btfsc	status,0,c
  6808  0032B2  D00D               	goto	l1411
  6809  0032B4                     l6359:
  6810                           
  6811                           ; BSR set to: 0
  6812  0032B4  0E00               	movlw	0
  6813  0032B6  0100               	movlb	0	; () banked
  6814  0032B8  6FA3               	movwf	___flmul@prod& (0+255),b
  6815  0032BA  0E00               	movlw	0
  6816  0032BC  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  6817  0032BE  0E00               	movlw	0
  6818  0032C0  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  6819  0032C2  0E00               	movlw	0
  6820  0032C4  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  6821  0032C6  0E00               	movlw	0
  6822  0032C8  0100               	movlb	0	; () banked
  6823  0032CA  6F9C               	movwf	___flmul@sign& (0+255),b
  6824  0032CC  D015               	goto	l6369
  6825  0032CE                     l1411:
  6826                           
  6827                           ; BSR set to: 0
  6828  0032CE  C0A7  F0A2         	movff	___flmul@temp,___flmul@bexp
  6829                           
  6830                           ; BSR set to: 0
  6831  0032D2  0EFF               	movlw	255
  6832  0032D4  0100               	movlb	0	; () banked
  6833  0032D6  17A3               	andwf	___flmul@prod& (0+255),f,b
  6834  0032D8  0EFF               	movlw	255
  6835  0032DA  17A4               	andwf	(___flmul@prod+1)& (0+255),f,b
  6836  0032DC  0E7F               	movlw	127
  6837  0032DE  17A5               	andwf	(___flmul@prod+2)& (0+255),f,b
  6838  0032E0  0E00               	movlw	0
  6839  0032E2  17A6               	andwf	(___flmul@prod+3)& (0+255),f,b
  6840                           
  6841                           ; BSR set to: 0
  6842  0032E4  0100               	movlb	0	; () banked
  6843  0032E6  A1A2               	btfss	___flmul@bexp& (0+255),0,b
  6844  0032E8  D002               	goto	l6367
  6845                           
  6846                           ; BSR set to: 0
  6847  0032EA  0100               	movlb	0	; () banked
  6848  0032EC  8FA5               	bsf	(___flmul@prod+2)& (0+255),7,b
  6849  0032EE                     l6367:
  6850                           
  6851                           ; BSR set to: 0
  6852  0032EE  0100               	movlb	0	; () banked
  6853  0032F0  90D8               	bcf	status,0,c
  6854  0032F2  31A2               	rrcf	___flmul@bexp& (0+255),w,b
  6855  0032F4  0100               	movlb	0	; () banked
  6856  0032F6                     L2:
  6857  0032F6  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  6858  0032F8                     l6369:
  6859                           
  6860                           ; BSR set to: 0
  6861  0032F8  0100               	movlb	0	; () banked
  6862  0032FA  519C               	movf	___flmul@sign& (0+255),w,b
  6863  0032FC  0100               	movlb	0	; () banked
  6864  0032FE  13A6               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6865                           
  6866                           ; BSR set to: 0
  6867  003300  C0A3  F090         	movff	___flmul@prod,?___flmul
  6868  003304  C0A4  F091         	movff	___flmul@prod+1,?___flmul+1
  6869  003308  C0A5  F092         	movff	___flmul@prod+2,?___flmul+2
  6870  00330C  C0A6  F093         	movff	___flmul@prod+3,?___flmul+3
  6871  003310  0012               	return	
  6872  003312                     __end_of___flmul:
  6873                           	opt stack 0
  6874                           tblptru	equ	0xFF8
  6875                           tblptrh	equ	0xFF7
  6876                           tblptrl	equ	0xFF6
  6877                           tablat	equ	0xFF5
  6878                           prodh	equ	0xFF4
  6879                           prodl	equ	0xFF3
  6880                           postinc0	equ	0xFEE
  6881                           wreg	equ	0xFE8
  6882                           postdec1	equ	0xFE5
  6883                           fsr1l	equ	0xFE1
  6884                           postinc2	equ	0xFDE
  6885                           postdec2	equ	0xFDD
  6886                           fsr2h	equ	0xFDA
  6887                           fsr2l	equ	0xFD9
  6888                           status	equ	0xFD8
  6889                           
  6890 ;; *************** function ___fladd *****************
  6891 ;; Defined at:
  6892 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  6893 ;; Parameters:    Size  Location     Type
  6894 ;;  b               4   77[BANK0 ] unsigned char 
  6895 ;;  a               4   81[BANK0 ] unsigned char 
  6896 ;; Auto vars:     Size  Location     Type
  6897 ;;  grs             1   96[BANK0 ] unsigned char 
  6898 ;;  bexp            1   95[BANK0 ] unsigned char 
  6899 ;;  aexp            1   94[BANK0 ] unsigned char 
  6900 ;;  signs           1   93[BANK0 ] unsigned char 
  6901 ;; Return value:  Size  Location     Type
  6902 ;;                  4   77[BANK0 ] unsigned char 
  6903 ;; Registers used:
  6904 ;;		wreg, status,2, status,0
  6905 ;; Tracked objects:
  6906 ;;		On entry : 0/0
  6907 ;;		On exit  : 0/0
  6908 ;;		Unchanged: 0/0
  6909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6910 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6911 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6912 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6913 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6914 ;;Total ram usage:       20 bytes
  6915 ;; Hardware stack levels used:    1
  6916 ;; Hardware stack levels required when called:    4
  6917 ;; This function calls:
  6918 ;;		Nothing
  6919 ;; This function is called by:
  6920 ;;		_park_routine
  6921 ;;		_parallelo
  6922 ;;		_matematica
  6923 ;;		_asin
  6924 ;;		_atan
  6925 ;;		_cos
  6926 ;;		_eval_poly
  6927 ;;		_sin
  6928 ;;		___flsub
  6929 ;;		_floor
  6930 ;; This function uses a non-reentrant model
  6931 ;;
  6932                           
  6933                           	psect	text20
  6934  0029C4                     __ptext20:
  6935                           	opt stack 0
  6936  0029C4                     ___fladd:
  6937                           	opt stack 21
  6938                           
  6939                           ; BSR set to: 0
  6940                           ;incstack = 0
  6941  0029C4  0100               	movlb	0	; () banked
  6942  0029C6  51B0               	movf	(___fladd@b+3)& (0+255),w,b
  6943  0029C8  0B80               	andlw	128
  6944  0029CA  0100               	movlb	0	; () banked
  6945  0029CC  6FBD               	movwf	___fladd@signs& (0+255),b
  6946  0029CE  0100               	movlb	0	; () banked
  6947  0029D0  51B0               	movf	(___fladd@b+3)& (0+255),w,b
  6948  0029D2  25B0               	addwf	(___fladd@b+3)& (0+255),w,b
  6949  0029D4  0100               	movlb	0	; () banked
  6950  0029D6  6FBF               	movwf	___fladd@bexp& (0+255),b
  6951                           
  6952                           ; BSR set to: 0
  6953  0029D8  0100               	movlb	0	; () banked
  6954  0029DA  AFAF               	btfss	(___fladd@b+2)& (0+255),7,b
  6955  0029DC  D002               	goto	l6049
  6956                           
  6957                           ; BSR set to: 0
  6958  0029DE  0100               	movlb	0	; () banked
  6959  0029E0  81BF               	bsf	___fladd@bexp& (0+255),0,b
  6960  0029E2                     l6049:
  6961                           
  6962                           ; BSR set to: 0
  6963  0029E2  0100               	movlb	0	; () banked
  6964  0029E4  51BF               	movf	___fladd@bexp& (0+255),w,b
  6965  0029E6  0100               	movlb	0	; () banked
  6966  0029E8  B4D8               	btfsc	status,2,c
  6967  0029EA  D012               	goto	l6059
  6968                           
  6969                           ; BSR set to: 0
  6970  0029EC  0100               	movlb	0	; () banked
  6971  0029EE  29BF               	incf	___fladd@bexp& (0+255),w,b
  6972  0029F0  A4D8               	btfss	status,2,c
  6973  0029F2  D009               	goto	l6055
  6974                           
  6975                           ; BSR set to: 0
  6976  0029F4  0E00               	movlw	0
  6977  0029F6  0100               	movlb	0	; () banked
  6978  0029F8  6FAD               	movwf	___fladd@b& (0+255),b
  6979  0029FA  0E00               	movlw	0
  6980  0029FC  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  6981  0029FE  0E00               	movlw	0
  6982  002A00  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  6983  002A02  0E00               	movlw	0
  6984  002A04  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  6985  002A06                     l6055:
  6986                           
  6987                           ; BSR set to: 0
  6988  002A06  0100               	movlb	0	; () banked
  6989  002A08  8FAF               	bsf	(___fladd@b+2)& (0+255),7,b
  6990                           
  6991                           ; BSR set to: 0
  6992  002A0A  0E00               	movlw	0
  6993  002A0C  0100               	movlb	0	; () banked
  6994  002A0E  D008               	goto	L3
  6995  002A10                     l6059:
  6996                           
  6997                           ; BSR set to: 0
  6998  002A10  0E00               	movlw	0
  6999  002A12  0100               	movlb	0	; () banked
  7000  002A14  6FAD               	movwf	___fladd@b& (0+255),b
  7001  002A16  0E00               	movlw	0
  7002  002A18  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  7003  002A1A  0E00               	movlw	0
  7004  002A1C  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  7005  002A1E  0E00               	movlw	0
  7006  002A20                     L3:
  7007  002A20  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  7008                           
  7009                           ; BSR set to: 0
  7010                           
  7011                           ; BSR set to: 0
  7012  002A22  0100               	movlb	0	; () banked
  7013  002A24  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  7014  002A26  0B80               	andlw	128
  7015  002A28  0100               	movlb	0	; () banked
  7016  002A2A  6FBE               	movwf	___fladd@aexp& (0+255),b
  7017                           
  7018                           ; BSR set to: 0
  7019  002A2C  0100               	movlb	0	; () banked
  7020  002A2E  51BD               	movf	___fladd@signs& (0+255),w,b
  7021  002A30  0100               	movlb	0	; () banked
  7022  002A32  19BE               	xorwf	___fladd@aexp& (0+255),w,b
  7023  002A34  B4D8               	btfsc	status,2,c
  7024  002A36  D002               	goto	l6067
  7025                           
  7026                           ; BSR set to: 0
  7027  002A38  0100               	movlb	0	; () banked
  7028  002A3A  8DBD               	bsf	___fladd@signs& (0+255),6,b
  7029  002A3C                     l6067:
  7030                           
  7031                           ; BSR set to: 0
  7032  002A3C  0100               	movlb	0	; () banked
  7033  002A3E  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  7034  002A40  25B4               	addwf	(___fladd@a+3)& (0+255),w,b
  7035  002A42  0100               	movlb	0	; () banked
  7036  002A44  6FBE               	movwf	___fladd@aexp& (0+255),b
  7037                           
  7038                           ; BSR set to: 0
  7039  002A46  0100               	movlb	0	; () banked
  7040  002A48  AFB3               	btfss	(___fladd@a+2)& (0+255),7,b
  7041  002A4A  D002               	goto	l6073
  7042                           
  7043                           ; BSR set to: 0
  7044  002A4C  0100               	movlb	0	; () banked
  7045  002A4E  81BE               	bsf	___fladd@aexp& (0+255),0,b
  7046  002A50                     l6073:
  7047                           
  7048                           ; BSR set to: 0
  7049  002A50  0100               	movlb	0	; () banked
  7050  002A52  51BE               	movf	___fladd@aexp& (0+255),w,b
  7051  002A54  0100               	movlb	0	; () banked
  7052  002A56  B4D8               	btfsc	status,2,c
  7053  002A58  D012               	goto	l6083
  7054                           
  7055                           ; BSR set to: 0
  7056  002A5A  0100               	movlb	0	; () banked
  7057  002A5C  29BE               	incf	___fladd@aexp& (0+255),w,b
  7058  002A5E  A4D8               	btfss	status,2,c
  7059  002A60  D009               	goto	l6079
  7060                           
  7061                           ; BSR set to: 0
  7062  002A62  0E00               	movlw	0
  7063  002A64  0100               	movlb	0	; () banked
  7064  002A66  6FB1               	movwf	___fladd@a& (0+255),b
  7065  002A68  0E00               	movlw	0
  7066  002A6A  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  7067  002A6C  0E00               	movlw	0
  7068  002A6E  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  7069  002A70  0E00               	movlw	0
  7070  002A72  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  7071  002A74                     l6079:
  7072                           
  7073                           ; BSR set to: 0
  7074  002A74  0100               	movlb	0	; () banked
  7075  002A76  8FB3               	bsf	(___fladd@a+2)& (0+255),7,b
  7076                           
  7077                           ; BSR set to: 0
  7078  002A78  0E00               	movlw	0
  7079  002A7A  0100               	movlb	0	; () banked
  7080  002A7C  D008               	goto	L4
  7081  002A7E                     l6083:
  7082                           
  7083                           ; BSR set to: 0
  7084  002A7E  0E00               	movlw	0
  7085  002A80  0100               	movlb	0	; () banked
  7086  002A82  6FB1               	movwf	___fladd@a& (0+255),b
  7087  002A84  0E00               	movlw	0
  7088  002A86  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  7089  002A88  0E00               	movlw	0
  7090  002A8A  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  7091  002A8C  0E00               	movlw	0
  7092  002A8E                     L4:
  7093  002A8E  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  7094                           
  7095                           ; BSR set to: 0
  7096                           
  7097                           ; BSR set to: 0
  7098  002A90  0100               	movlb	0	; () banked
  7099  002A92  51BF               	movf	___fladd@bexp& (0+255),w,b
  7100  002A94  0100               	movlb	0	; () banked
  7101  002A96  5DBE               	subwf	___fladd@aexp& (0+255),w,b
  7102  002A98  B0D8               	btfsc	status,0,c
  7103  002A9A  D024               	goto	l6121
  7104                           
  7105                           ; BSR set to: 0
  7106  002A9C  0100               	movlb	0	; () banked
  7107  002A9E  ADBD               	btfss	___fladd@signs& (0+255),6,b
  7108  002AA0  D003               	goto	l6091
  7109                           
  7110                           ; BSR set to: 0
  7111  002AA2  0E80               	movlw	128
  7112  002AA4  0100               	movlb	0	; () banked
  7113  002AA6  1BBD               	xorwf	___fladd@signs& (0+255),f,b
  7114  002AA8                     l6091:
  7115                           
  7116                           ; BSR set to: 0
  7117  002AA8  C0BF  F0C0         	movff	___fladd@bexp,___fladd@grs
  7118                           
  7119                           ; BSR set to: 0
  7120  002AAC  C0BE  F0BF         	movff	___fladd@aexp,___fladd@bexp
  7121                           
  7122                           ; BSR set to: 0
  7123  002AB0  C0C0  F0BE         	movff	___fladd@grs,___fladd@aexp
  7124                           
  7125                           ; BSR set to: 0
  7126  002AB4  C0AD  F0C0         	movff	___fladd@b,___fladd@grs
  7127                           
  7128                           ; BSR set to: 0
  7129  002AB8  C0B1  F0AD         	movff	___fladd@a,___fladd@b
  7130                           
  7131                           ; BSR set to: 0
  7132  002ABC  C0C0  F0B1         	movff	___fladd@grs,___fladd@a
  7133                           
  7134                           ; BSR set to: 0
  7135  002AC0  C0AE  F0C0         	movff	___fladd@b+1,___fladd@grs
  7136                           
  7137                           ; BSR set to: 0
  7138  002AC4  C0B2  F0AE         	movff	___fladd@a+1,___fladd@b+1
  7139                           
  7140                           ; BSR set to: 0
  7141  002AC8  C0C0  F0B2         	movff	___fladd@grs,___fladd@a+1
  7142                           
  7143                           ; BSR set to: 0
  7144  002ACC  C0AF  F0C0         	movff	___fladd@b+2,___fladd@grs
  7145                           
  7146                           ; BSR set to: 0
  7147  002AD0  C0B3  F0AF         	movff	___fladd@a+2,___fladd@b+2
  7148                           
  7149                           ; BSR set to: 0
  7150  002AD4  C0C0  F0B3         	movff	___fladd@grs,___fladd@a+2
  7151                           
  7152                           ; BSR set to: 0
  7153  002AD8  C0B0  F0C0         	movff	___fladd@b+3,___fladd@grs
  7154                           
  7155                           ; BSR set to: 0
  7156  002ADC  C0B4  F0B0         	movff	___fladd@a+3,___fladd@b+3
  7157                           
  7158                           ; BSR set to: 0
  7159  002AE0  C0C0  F0B4         	movff	___fladd@grs,___fladd@a+3
  7160  002AE4                     l6121:
  7161                           
  7162                           ; BSR set to: 0
  7163  002AE4  0E00               	movlw	0
  7164  002AE6  0100               	movlb	0	; () banked
  7165  002AE8  6FC0               	movwf	___fladd@grs& (0+255),b
  7166                           
  7167                           ; BSR set to: 0
  7168  002AEA  0100               	movlb	0	; () banked
  7169  002AEC  51BF               	movf	___fladd@bexp& (0+255),w,b
  7170  002AEE  0100               	movlb	0	; () banked
  7171  002AF0  6FB5               	movwf	??___fladd& (0+255),b
  7172  002AF2  6BB6               	clrf	(??___fladd+1)& (0+255),b
  7173  002AF4  0100               	movlb	0	; () banked
  7174  002AF6  1FB5               	comf	??___fladd& (0+255),f,b
  7175  002AF8  1FB6               	comf	(??___fladd+1)& (0+255),f,b
  7176  002AFA  4BB5               	infsnz	??___fladd& (0+255),f,b
  7177  002AFC  2BB6               	incf	(??___fladd+1)& (0+255),f,b
  7178  002AFE  0100               	movlb	0	; () banked
  7179  002B00  51BE               	movf	___fladd@aexp& (0+255),w,b
  7180  002B02  0100               	movlb	0	; () banked
  7181  002B04  6FB7               	movwf	(??___fladd+2)& (0+255),b
  7182  002B06  6BB8               	clrf	(??___fladd+3)& (0+255),b
  7183  002B08  0100               	movlb	0	; () banked
  7184  002B0A  51B5               	movf	??___fladd& (0+255),w,b
  7185  002B0C  0100               	movlb	0	; () banked
  7186  002B0E  27B7               	addwf	(??___fladd+2)& (0+255),f,b
  7187  002B10  0100               	movlb	0	; () banked
  7188  002B12  51B6               	movf	(??___fladd+1)& (0+255),w,b
  7189  002B14  0100               	movlb	0	; () banked
  7190  002B16  23B8               	addwfc	(??___fladd+3)& (0+255),f,b
  7191  002B18  0100               	movlb	0	; () banked
  7192  002B1A  BFB8               	btfsc	(??___fladd+3)& (0+255),7,b
  7193  002B1C  D03D               	goto	l1309
  7194  002B1E  0100               	movlb	0	; () banked
  7195  002B20  51B8               	movf	(??___fladd+3)& (0+255),w,b
  7196  002B22  E105               	bnz	u7400
  7197  002B24  0E1A               	movlw	26
  7198  002B26  0100               	movlb	0	; () banked
  7199  002B28  5DB7               	subwf	(??___fladd+2)& (0+255),w,b
  7200  002B2A  A0D8               	btfss	status,0,c
  7201  002B2C  D035               	goto	l1309
  7202  002B2E                     u7400:
  7203                           
  7204                           ; BSR set to: 0
  7205  002B2E  0100               	movlb	0	; () banked
  7206  002B30  51AD               	movf	___fladd@b& (0+255),w,b
  7207  002B32  0100               	movlb	0	; () banked
  7208  002B34  11AE               	iorwf	(___fladd@b+1)& (0+255),w,b
  7209  002B36  0100               	movlb	0	; () banked
  7210  002B38  11AF               	iorwf	(___fladd@b+2)& (0+255),w,b
  7211  002B3A  0100               	movlb	0	; () banked
  7212  002B3C  11B0               	iorwf	(___fladd@b+3)& (0+255),w,b
  7213  002B3E  B4D8               	btfsc	status,2,c
  7214  002B40  D002               	goto	u7410
  7215  002B42  0E01               	movlw	1
  7216  002B44  D001               	goto	u7420
  7217  002B46                     u7410:
  7218  002B46  0E00               	movlw	0
  7219  002B48                     u7420:
  7220  002B48  0100               	movlb	0	; () banked
  7221  002B4A  6FC0               	movwf	___fladd@grs& (0+255),b
  7222                           
  7223                           ; BSR set to: 0
  7224  002B4C  0E00               	movlw	0
  7225  002B4E  0100               	movlb	0	; () banked
  7226  002B50  6FAD               	movwf	___fladd@b& (0+255),b
  7227  002B52  0E00               	movlw	0
  7228  002B54  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  7229  002B56  0E00               	movlw	0
  7230  002B58  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  7231  002B5A  0E00               	movlw	0
  7232  002B5C  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  7233                           
  7234                           ; BSR set to: 0
  7235  002B5E  C0BE  F0BF         	movff	___fladd@aexp,___fladd@bexp
  7236  002B62  D020               	goto	l1308
  7237  002B64                     l1310:
  7238                           
  7239                           ; BSR set to: 0
  7240  002B64  0100               	movlb	0	; () banked
  7241  002B66  A1C0               	btfss	___fladd@grs& (0+255),0,b
  7242  002B68  D007               	goto	l6133
  7243                           
  7244                           ; BSR set to: 0
  7245  002B6A  0100               	movlb	0	; () banked
  7246  002B6C  90D8               	bcf	status,0,c
  7247  002B6E  31C0               	rrcf	___fladd@grs& (0+255),w,b
  7248  002B70  0901               	iorlw	1
  7249  002B72  0100               	movlb	0	; () banked
  7250  002B74  6FC0               	movwf	___fladd@grs& (0+255),b
  7251  002B76  D003               	goto	l6135
  7252  002B78                     l6133:
  7253                           
  7254                           ; BSR set to: 0
  7255  002B78  0100               	movlb	0	; () banked
  7256  002B7A  90D8               	bcf	status,0,c
  7257  002B7C  33C0               	rrcf	___fladd@grs& (0+255),f,b
  7258  002B7E                     l6135:
  7259                           
  7260                           ; BSR set to: 0
  7261  002B7E  0100               	movlb	0	; () banked
  7262  002B80  A1AD               	btfss	___fladd@b& (0+255),0,b
  7263  002B82  D002               	goto	l6139
  7264                           
  7265                           ; BSR set to: 0
  7266  002B84  0100               	movlb	0	; () banked
  7267  002B86  8FC0               	bsf	___fladd@grs& (0+255),7,b
  7268  002B88                     l6139:
  7269                           
  7270                           ; BSR set to: 0
  7271  002B88  0100               	movlb	0	; () banked
  7272  002B8A  35B0               	rlcf	(___fladd@b+3)& (0+255),w,b
  7273  002B8C  33B0               	rrcf	(___fladd@b+3)& (0+255),f,b
  7274  002B8E  33AF               	rrcf	(___fladd@b+2)& (0+255),f,b
  7275  002B90  33AE               	rrcf	(___fladd@b+1)& (0+255),f,b
  7276  002B92  33AD               	rrcf	___fladd@b& (0+255),f,b
  7277                           
  7278                           ; BSR set to: 0
  7279  002B94  0100               	movlb	0	; () banked
  7280  002B96  2BBF               	incf	___fladd@bexp& (0+255),f,b
  7281  002B98                     l1309:
  7282                           
  7283                           ; BSR set to: 0
  7284  002B98  0100               	movlb	0	; () banked
  7285  002B9A  51BE               	movf	___fladd@aexp& (0+255),w,b
  7286  002B9C  0100               	movlb	0	; () banked
  7287  002B9E  5DBF               	subwf	___fladd@bexp& (0+255),w,b
  7288  002BA0  A0D8               	btfss	status,0,c
  7289  002BA2  D7E0               	goto	l1310
  7290  002BA4                     l1308:
  7291                           
  7292                           ; BSR set to: 0
  7293  002BA4  0100               	movlb	0	; () banked
  7294  002BA6  BDBD               	btfsc	___fladd@signs& (0+255),6,b
  7295  002BA8  D03F               	goto	l6167
  7296                           
  7297                           ; BSR set to: 0
  7298  002BAA  0100               	movlb	0	; () banked
  7299  002BAC  51BF               	movf	___fladd@bexp& (0+255),w,b
  7300  002BAE  0100               	movlb	0	; () banked
  7301  002BB0  A4D8               	btfss	status,2,c
  7302  002BB2  D00A               	goto	l6149
  7303                           
  7304                           ; BSR set to: 0
  7305  002BB4  0E00               	movlw	0
  7306  002BB6  0100               	movlb	0	; () banked
  7307  002BB8  6FAD               	movwf	?___fladd& (0+255),b
  7308  002BBA  0E00               	movlw	0
  7309  002BBC  6FAE               	movwf	(?___fladd+1)& (0+255),b
  7310  002BBE  0E00               	movlw	0
  7311  002BC0  6FAF               	movwf	(?___fladd+2)& (0+255),b
  7312  002BC2  0E00               	movlw	0
  7313  002BC4  6FB0               	movwf	(?___fladd+3)& (0+255),b
  7314                           
  7315                           ; BSR set to: 0
  7316  002BC6  0012               	return	
  7317  002BC8                     l6149:
  7318                           
  7319                           ; BSR set to: 0
  7320  002BC8  0100               	movlb	0	; () banked
  7321  002BCA  51B1               	movf	___fladd@a& (0+255),w,b
  7322  002BCC  0100               	movlb	0	; () banked
  7323  002BCE  27AD               	addwf	___fladd@b& (0+255),f,b
  7324  002BD0  0100               	movlb	0	; () banked
  7325  002BD2  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  7326  002BD4  0100               	movlb	0	; () banked
  7327  002BD6  23AE               	addwfc	(___fladd@b+1)& (0+255),f,b
  7328  002BD8  0100               	movlb	0	; () banked
  7329  002BDA  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  7330  002BDC  0100               	movlb	0	; () banked
  7331  002BDE  23AF               	addwfc	(___fladd@b+2)& (0+255),f,b
  7332  002BE0  0100               	movlb	0	; () banked
  7333  002BE2  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  7334  002BE4  0100               	movlb	0	; () banked
  7335  002BE6  23B0               	addwfc	(___fladd@b+3)& (0+255),f,b
  7336                           
  7337                           ; BSR set to: 0
  7338  002BE8  0100               	movlb	0	; () banked
  7339  002BEA  A1B0               	btfss	(___fladd@b+3)& (0+255),0,b
  7340  002BEC  D0CC               	goto	l6203
  7341                           
  7342                           ; BSR set to: 0
  7343  002BEE  0100               	movlb	0	; () banked
  7344  002BF0  A1C0               	btfss	___fladd@grs& (0+255),0,b
  7345  002BF2  D009               	goto	l6157
  7346                           
  7347                           ; BSR set to: 0
  7348  002BF4  0100               	movlb	0	; () banked
  7349  002BF6  90D8               	bcf	status,0,c
  7350  002BF8  33C0               	rrcf	___fladd@grs& (0+255),f,b
  7351  002BFA  0100               	movlb	0	; () banked
  7352  002BFC  51C0               	movf	___fladd@grs& (0+255),w,b
  7353  002BFE  0901               	iorlw	1
  7354  002C00  0100               	movlb	0	; () banked
  7355  002C02  6FC0               	movwf	___fladd@grs& (0+255),b
  7356  002C04  D003               	goto	l6159
  7357  002C06                     l6157:
  7358                           
  7359                           ; BSR set to: 0
  7360  002C06  0100               	movlb	0	; () banked
  7361  002C08  90D8               	bcf	status,0,c
  7362  002C0A  33C0               	rrcf	___fladd@grs& (0+255),f,b
  7363  002C0C                     l6159:
  7364                           
  7365                           ; BSR set to: 0
  7366  002C0C  0100               	movlb	0	; () banked
  7367  002C0E  A1AD               	btfss	___fladd@b& (0+255),0,b
  7368  002C10  D002               	goto	l6163
  7369                           
  7370                           ; BSR set to: 0
  7371  002C12  0100               	movlb	0	; () banked
  7372  002C14  8FC0               	bsf	___fladd@grs& (0+255),7,b
  7373  002C16                     l6163:
  7374                           
  7375                           ; BSR set to: 0
  7376  002C16  0100               	movlb	0	; () banked
  7377  002C18  35B0               	rlcf	(___fladd@b+3)& (0+255),w,b
  7378  002C1A  33B0               	rrcf	(___fladd@b+3)& (0+255),f,b
  7379  002C1C  33AF               	rrcf	(___fladd@b+2)& (0+255),f,b
  7380  002C1E  33AE               	rrcf	(___fladd@b+1)& (0+255),f,b
  7381  002C20  33AD               	rrcf	___fladd@b& (0+255),f,b
  7382                           
  7383                           ; BSR set to: 0
  7384  002C22  0100               	movlb	0	; () banked
  7385  002C24  2BBF               	incf	___fladd@bexp& (0+255),f,b
  7386                           
  7387                           ; BSR set to: 0
  7388  002C26  D0AF               	goto	l6203
  7389  002C28                     l6167:
  7390                           
  7391                           ; BSR set to: 0
  7392  002C28  0100               	movlb	0	; () banked
  7393  002C2A  51B1               	movf	___fladd@a& (0+255),w,b
  7394  002C2C  0100               	movlb	0	; () banked
  7395  002C2E  5DAD               	subwf	___fladd@b& (0+255),w,b
  7396  002C30  0100               	movlb	0	; () banked
  7397  002C32  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  7398  002C34  0100               	movlb	0	; () banked
  7399  002C36  59AE               	subwfb	(___fladd@b+1)& (0+255),w,b
  7400  002C38  0100               	movlb	0	; () banked
  7401  002C3A  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  7402  002C3C  0100               	movlb	0	; () banked
  7403  002C3E  59AF               	subwfb	(___fladd@b+2)& (0+255),w,b
  7404  002C40  0100               	movlb	0	; () banked
  7405  002C42  51B0               	movf	(___fladd@b+3)& (0+255),w,b
  7406  002C44  0A80               	xorlw	128
  7407  002C46  0100               	movlb	0	; () banked
  7408  002C48  6FB5               	movwf	??___fladd& (0+255),b
  7409  002C4A  0100               	movlb	0	; () banked
  7410  002C4C  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  7411  002C4E  0A80               	xorlw	128
  7412  002C50  0100               	movlb	0	; () banked
  7413  002C52  59B5               	subwfb	??___fladd& (0+255),w,b
  7414  002C54  B0D8               	btfsc	status,0,c
  7415  002C56  D050               	goto	l6177
  7416                           
  7417                           ; BSR set to: 0
  7418  002C58  C0AD  F0B5         	movff	___fladd@b,??___fladd
  7419  002C5C  C0AE  F0B6         	movff	___fladd@b+1,??___fladd+1
  7420  002C60  C0AF  F0B7         	movff	___fladd@b+2,??___fladd+2
  7421  002C64  C0B0  F0B8         	movff	___fladd@b+3,??___fladd+3
  7422  002C68  0100               	movlb	0	; () banked
  7423  002C6A  1FB5               	comf	??___fladd& (0+255),f,b
  7424  002C6C  1FB6               	comf	(??___fladd+1)& (0+255),f,b
  7425  002C6E  1FB7               	comf	(??___fladd+2)& (0+255),f,b
  7426  002C70  1FB8               	comf	(??___fladd+3)& (0+255),f,b
  7427  002C72  2BB5               	incf	??___fladd& (0+255),f,b
  7428  002C74  0E00               	movlw	0
  7429  002C76  23B6               	addwfc	(??___fladd+1)& (0+255),f,b
  7430  002C78  23B7               	addwfc	(??___fladd+2)& (0+255),f,b
  7431  002C7A  23B8               	addwfc	(??___fladd+3)& (0+255),f,b
  7432  002C7C  0100               	movlb	0	; () banked
  7433  002C7E  51B1               	movf	___fladd@a& (0+255),w,b
  7434  002C80  0100               	movlb	0	; () banked
  7435  002C82  25B5               	addwf	??___fladd& (0+255),w,b
  7436  002C84  0100               	movlb	0	; () banked
  7437  002C86  6FB9               	movwf	(??___fladd+4)& (0+255),b
  7438  002C88  0100               	movlb	0	; () banked
  7439  002C8A  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  7440  002C8C  0100               	movlb	0	; () banked
  7441  002C8E  21B6               	addwfc	(??___fladd+1)& (0+255),w,b
  7442  002C90  0100               	movlb	0	; () banked
  7443  002C92  6FBA               	movwf	(??___fladd+5)& (0+255),b
  7444  002C94  0100               	movlb	0	; () banked
  7445  002C96  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  7446  002C98  0100               	movlb	0	; () banked
  7447  002C9A  21B7               	addwfc	(??___fladd+2)& (0+255),w,b
  7448  002C9C  0100               	movlb	0	; () banked
  7449  002C9E  6FBB               	movwf	(??___fladd+6)& (0+255),b
  7450  002CA0  0100               	movlb	0	; () banked
  7451  002CA2  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  7452  002CA4  0100               	movlb	0	; () banked
  7453  002CA6  21B8               	addwfc	(??___fladd+3)& (0+255),w,b
  7454  002CA8  0100               	movlb	0	; () banked
  7455  002CAA  6FBC               	movwf	(??___fladd+7)& (0+255),b
  7456  002CAC  0EFF               	movlw	255
  7457  002CAE  0100               	movlb	0	; () banked
  7458  002CB0  25B9               	addwf	(??___fladd+4)& (0+255),w,b
  7459  002CB2  0100               	movlb	0	; () banked
  7460  002CB4  6FAD               	movwf	___fladd@b& (0+255),b
  7461  002CB6  0EFF               	movlw	255
  7462  002CB8  0100               	movlb	0	; () banked
  7463  002CBA  21BA               	addwfc	(??___fladd+5)& (0+255),w,b
  7464  002CBC  0100               	movlb	0	; () banked
  7465  002CBE  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  7466  002CC0  0EFF               	movlw	255
  7467  002CC2  0100               	movlb	0	; () banked
  7468  002CC4  21BB               	addwfc	(??___fladd+6)& (0+255),w,b
  7469  002CC6  0100               	movlb	0	; () banked
  7470  002CC8  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  7471  002CCA  0EFF               	movlw	255
  7472  002CCC  0100               	movlb	0	; () banked
  7473  002CCE  21BC               	addwfc	(??___fladd+7)& (0+255),w,b
  7474  002CD0  0100               	movlb	0	; () banked
  7475  002CD2  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  7476  002CD4  0E80               	movlw	128
  7477  002CD6  0100               	movlb	0	; () banked
  7478  002CD8  1BBD               	xorwf	___fladd@signs& (0+255),f,b
  7479                           
  7480                           ; BSR set to: 0
  7481  002CDA  0100               	movlb	0	; () banked
  7482  002CDC  6DC0               	negf	___fladd@grs& (0+255),b
  7483                           
  7484                           ; BSR set to: 0
  7485  002CDE  0100               	movlb	0	; () banked
  7486  002CE0  51C0               	movf	___fladd@grs& (0+255),w,b
  7487  002CE2  0100               	movlb	0	; () banked
  7488  002CE4  A4D8               	btfss	status,2,c
  7489  002CE6  D018               	goto	l1325
  7490                           
  7491                           ; BSR set to: 0
  7492  002CE8  0E01               	movlw	1
  7493  002CEA  0100               	movlb	0	; () banked
  7494  002CEC  27AD               	addwf	___fladd@b& (0+255),f,b
  7495  002CEE  0E00               	movlw	0
  7496  002CF0  23AE               	addwfc	(___fladd@b+1)& (0+255),f,b
  7497  002CF2  23AF               	addwfc	(___fladd@b+2)& (0+255),f,b
  7498  002CF4  23B0               	addwfc	(___fladd@b+3)& (0+255),f,b
  7499                           
  7500                           ; BSR set to: 0
  7501  002CF6  D010               	goto	l1325
  7502  002CF8                     l6177:
  7503                           
  7504                           ; BSR set to: 0
  7505  002CF8  0100               	movlb	0	; () banked
  7506  002CFA  51B1               	movf	___fladd@a& (0+255),w,b
  7507  002CFC  0100               	movlb	0	; () banked
  7508  002CFE  5FAD               	subwf	___fladd@b& (0+255),f,b
  7509  002D00  0100               	movlb	0	; () banked
  7510  002D02  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  7511  002D04  0100               	movlb	0	; () banked
  7512  002D06  5BAE               	subwfb	(___fladd@b+1)& (0+255),f,b
  7513  002D08  0100               	movlb	0	; () banked
  7514  002D0A  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  7515  002D0C  0100               	movlb	0	; () banked
  7516  002D0E  5BAF               	subwfb	(___fladd@b+2)& (0+255),f,b
  7517  002D10  0100               	movlb	0	; () banked
  7518  002D12  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  7519  002D14  0100               	movlb	0	; () banked
  7520  002D16  5BB0               	subwfb	(___fladd@b+3)& (0+255),f,b
  7521  002D18                     l1325:
  7522                           
  7523                           ; BSR set to: 0
  7524  002D18  0100               	movlb	0	; () banked
  7525  002D1A  51AD               	movf	___fladd@b& (0+255),w,b
  7526  002D1C  0100               	movlb	0	; () banked
  7527  002D1E  11AE               	iorwf	(___fladd@b+1)& (0+255),w,b
  7528  002D20  0100               	movlb	0	; () banked
  7529  002D22  11AF               	iorwf	(___fladd@b+2)& (0+255),w,b
  7530  002D24  0100               	movlb	0	; () banked
  7531  002D26  11B0               	iorwf	(___fladd@b+3)& (0+255),w,b
  7532  002D28  A4D8               	btfss	status,2,c
  7533  002D2A  D02A               	goto	l6201
  7534                           
  7535                           ; BSR set to: 0
  7536  002D2C  0100               	movlb	0	; () banked
  7537  002D2E  51C0               	movf	___fladd@grs& (0+255),w,b
  7538  002D30  0100               	movlb	0	; () banked
  7539  002D32  A4D8               	btfss	status,2,c
  7540  002D34  D025               	goto	l6201
  7541                           
  7542                           ; BSR set to: 0
  7543  002D36  0E00               	movlw	0
  7544  002D38  0100               	movlb	0	; () banked
  7545  002D3A  6FAD               	movwf	?___fladd& (0+255),b
  7546  002D3C  0E00               	movlw	0
  7547  002D3E  6FAE               	movwf	(?___fladd+1)& (0+255),b
  7548  002D40  0E00               	movlw	0
  7549  002D42  6FAF               	movwf	(?___fladd+2)& (0+255),b
  7550  002D44  0E00               	movlw	0
  7551  002D46  6FB0               	movwf	(?___fladd+3)& (0+255),b
  7552                           
  7553                           ; BSR set to: 0
  7554  002D48  0012               	return	
  7555  002D4A                     l6185:
  7556                           
  7557                           ; BSR set to: 0
  7558  002D4A  0100               	movlb	0	; () banked
  7559  002D4C  90D8               	bcf	status,0,c
  7560  002D4E  37AD               	rlcf	___fladd@b& (0+255),f,b
  7561  002D50  37AE               	rlcf	(___fladd@b+1)& (0+255),f,b
  7562  002D52  37AF               	rlcf	(___fladd@b+2)& (0+255),f,b
  7563  002D54  37B0               	rlcf	(___fladd@b+3)& (0+255),f,b
  7564                           
  7565                           ; BSR set to: 0
  7566  002D56  0100               	movlb	0	; () banked
  7567  002D58  AFC0               	btfss	___fladd@grs& (0+255),7,b
  7568  002D5A  D002               	goto	l6191
  7569                           
  7570                           ; BSR set to: 0
  7571  002D5C  0100               	movlb	0	; () banked
  7572  002D5E  81AD               	bsf	___fladd@b& (0+255),0,b
  7573  002D60                     l6191:
  7574                           
  7575                           ; BSR set to: 0
  7576  002D60  0100               	movlb	0	; () banked
  7577  002D62  A1C0               	btfss	___fladd@grs& (0+255),0,b
  7578  002D64  D003               	goto	l6195
  7579                           
  7580                           ; BSR set to: 0
  7581  002D66  80D8               	bsf	status,0,c
  7582  002D68  0100               	movlb	0	; () banked
  7583  002D6A  D002               	goto	L5
  7584  002D6C                     l6195:
  7585                           
  7586                           ; BSR set to: 0
  7587  002D6C  0100               	movlb	0	; () banked
  7588  002D6E  90D8               	bcf	status,0,c
  7589  002D70                     L5:
  7590  002D70  37C0               	rlcf	___fladd@grs& (0+255),f,b
  7591                           
  7592                           ; BSR set to: 0
  7593                           
  7594                           ; BSR set to: 0
  7595  002D72  0100               	movlb	0	; () banked
  7596  002D74  51BF               	movf	___fladd@bexp& (0+255),w,b
  7597  002D76  0100               	movlb	0	; () banked
  7598  002D78  B4D8               	btfsc	status,2,c
  7599  002D7A  D002               	goto	l6201
  7600                           
  7601                           ; BSR set to: 0
  7602  002D7C  0100               	movlb	0	; () banked
  7603  002D7E  07BF               	decf	___fladd@bexp& (0+255),f,b
  7604  002D80                     l6201:
  7605                           
  7606                           ; BSR set to: 0
  7607  002D80  0100               	movlb	0	; () banked
  7608  002D82  AFAF               	btfss	(___fladd@b+2)& (0+255),7,b
  7609  002D84  D7E2               	goto	l6185
  7610  002D86                     l6203:
  7611                           
  7612                           ; BSR set to: 0
  7613  002D86  0E00               	movlw	0
  7614  002D88  0100               	movlb	0	; () banked
  7615  002D8A  6FBE               	movwf	___fladd@aexp& (0+255),b
  7616                           
  7617                           ; BSR set to: 0
  7618  002D8C  0100               	movlb	0	; () banked
  7619  002D8E  AFC0               	btfss	___fladd@grs& (0+255),7,b
  7620  002D90  D00D               	goto	l1334
  7621                           
  7622                           ; BSR set to: 0
  7623  002D92  C0C0  F0B5         	movff	___fladd@grs,??___fladd
  7624  002D96  0E7F               	movlw	127
  7625  002D98  0100               	movlb	0	; () banked
  7626  002D9A  17B5               	andwf	??___fladd& (0+255),f,b
  7627  002D9C  A4D8               	btfss	status,2,c
  7628  002D9E  D003               	goto	l6211
  7629                           
  7630                           ; BSR set to: 0
  7631                           
  7632                           ; BSR set to: 0
  7633  002DA0  0100               	movlb	0	; () banked
  7634  002DA2  A1AD               	btfss	___fladd@b& (0+255),0,b
  7635  002DA4  D003               	goto	l1334
  7636  002DA6                     l6211:
  7637                           
  7638                           ; BSR set to: 0
  7639  002DA6  0E01               	movlw	1
  7640  002DA8  0100               	movlb	0	; () banked
  7641  002DAA  6FBE               	movwf	___fladd@aexp& (0+255),b
  7642  002DAC                     l1334:
  7643                           
  7644                           ; BSR set to: 0
  7645  002DAC  0100               	movlb	0	; () banked
  7646  002DAE  51BE               	movf	___fladd@aexp& (0+255),w,b
  7647  002DB0  0100               	movlb	0	; () banked
  7648  002DB2  B4D8               	btfsc	status,2,c
  7649  002DB4  D026               	goto	l6221
  7650                           
  7651                           ; BSR set to: 0
  7652  002DB6  0E01               	movlw	1
  7653  002DB8  0100               	movlb	0	; () banked
  7654  002DBA  27AD               	addwf	___fladd@b& (0+255),f,b
  7655  002DBC  0E00               	movlw	0
  7656  002DBE  23AE               	addwfc	(___fladd@b+1)& (0+255),f,b
  7657  002DC0  23AF               	addwfc	(___fladd@b+2)& (0+255),f,b
  7658  002DC2  23B0               	addwfc	(___fladd@b+3)& (0+255),f,b
  7659                           
  7660                           ; BSR set to: 0
  7661  002DC4  0100               	movlb	0	; () banked
  7662  002DC6  A1B0               	btfss	(___fladd@b+3)& (0+255),0,b
  7663  002DC8  D01C               	goto	l6221
  7664                           
  7665                           ; BSR set to: 0
  7666  002DCA  C0AD  F0B5         	movff	___fladd@b,??___fladd
  7667  002DCE  C0AE  F0B6         	movff	___fladd@b+1,??___fladd+1
  7668  002DD2  C0AF  F0B7         	movff	___fladd@b+2,??___fladd+2
  7669  002DD6  C0B0  F0B8         	movff	___fladd@b+3,??___fladd+3
  7670  002DDA  0100               	movlb	0	; () banked
  7671  002DDC  35B8               	rlcf	(??___fladd+3)& (0+255),w,b
  7672  002DDE  33B8               	rrcf	(??___fladd+3)& (0+255),f,b
  7673  002DE0  33B7               	rrcf	(??___fladd+2)& (0+255),f,b
  7674  002DE2  33B6               	rrcf	(??___fladd+1)& (0+255),f,b
  7675  002DE4  33B5               	rrcf	??___fladd& (0+255),f,b
  7676  002DE6  C0B5  F0AD         	movff	??___fladd,___fladd@b
  7677  002DEA  C0B6  F0AE         	movff	??___fladd+1,___fladd@b+1
  7678  002DEE  C0B7  F0AF         	movff	??___fladd+2,___fladd@b+2
  7679  002DF2  C0B8  F0B0         	movff	??___fladd+3,___fladd@b+3
  7680  002DF6  0100               	movlb	0	; () banked
  7681  002DF8  29BF               	incf	___fladd@bexp& (0+255),w,b
  7682  002DFA  B4D8               	btfsc	status,2,c
  7683  002DFC  D002               	goto	l6221
  7684                           
  7685                           ; BSR set to: 0
  7686  002DFE  0100               	movlb	0	; () banked
  7687  002E00  2BBF               	incf	___fladd@bexp& (0+255),f,b
  7688  002E02                     l6221:
  7689                           
  7690                           ; BSR set to: 0
  7691  002E02  0100               	movlb	0	; () banked
  7692  002E04  29BF               	incf	___fladd@bexp& (0+255),w,b
  7693  002E06  B4D8               	btfsc	status,2,c
  7694  002E08  D005               	goto	l6225
  7695                           
  7696                           ; BSR set to: 0
  7697  002E0A  0100               	movlb	0	; () banked
  7698  002E0C  51BF               	movf	___fladd@bexp& (0+255),w,b
  7699  002E0E  0100               	movlb	0	; () banked
  7700  002E10  A4D8               	btfss	status,2,c
  7701  002E12  D011               	goto	l6229
  7702  002E14                     l6225:
  7703                           
  7704                           ; BSR set to: 0
  7705  002E14  0E00               	movlw	0
  7706  002E16  0100               	movlb	0	; () banked
  7707  002E18  6FAD               	movwf	___fladd@b& (0+255),b
  7708  002E1A  0E00               	movlw	0
  7709  002E1C  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  7710  002E1E  0E00               	movlw	0
  7711  002E20  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  7712  002E22  0E00               	movlw	0
  7713  002E24  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  7714  002E26  0100               	movlb	0	; () banked
  7715  002E28  51BF               	movf	___fladd@bexp& (0+255),w,b
  7716  002E2A  0100               	movlb	0	; () banked
  7717  002E2C  A4D8               	btfss	status,2,c
  7718  002E2E  D003               	goto	l6229
  7719                           
  7720                           ; BSR set to: 0
  7721  002E30  0E00               	movlw	0
  7722  002E32  0100               	movlb	0	; () banked
  7723  002E34  6FBD               	movwf	___fladd@signs& (0+255),b
  7724  002E36                     l6229:
  7725                           
  7726                           ; BSR set to: 0
  7727  002E36  0100               	movlb	0	; () banked
  7728  002E38  A1BF               	btfss	___fladd@bexp& (0+255),0,b
  7729  002E3A  D003               	goto	l6233
  7730                           
  7731                           ; BSR set to: 0
  7732  002E3C  0100               	movlb	0	; () banked
  7733  002E3E  8FAF               	bsf	(___fladd@b+2)& (0+255),7,b
  7734  002E40  D002               	goto	l6235
  7735  002E42                     l6233:
  7736                           
  7737                           ; BSR set to: 0
  7738  002E42  0100               	movlb	0	; () banked
  7739  002E44  9FAF               	bcf	(___fladd@b+2)& (0+255),7,b
  7740  002E46                     l6235:
  7741                           
  7742                           ; BSR set to: 0
  7743  002E46  0100               	movlb	0	; () banked
  7744  002E48  90D8               	bcf	status,0,c
  7745  002E4A  31BF               	rrcf	___fladd@bexp& (0+255),w,b
  7746  002E4C  0100               	movlb	0	; () banked
  7747  002E4E  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  7748                           
  7749                           ; BSR set to: 0
  7750  002E50  0100               	movlb	0	; () banked
  7751  002E52  AFBD               	btfss	___fladd@signs& (0+255),7,b
  7752  002E54  D002               	goto	l6241
  7753                           
  7754                           ; BSR set to: 0
  7755  002E56  0100               	movlb	0	; () banked
  7756  002E58  8FB0               	bsf	(___fladd@b+3)& (0+255),7,b
  7757  002E5A                     l6241:
  7758                           
  7759                           ; BSR set to: 0
  7760  002E5A  C0AD  F0AD         	movff	___fladd@b,?___fladd
  7761  002E5E  C0AE  F0AE         	movff	___fladd@b+1,?___fladd+1
  7762  002E62  C0AF  F0AF         	movff	___fladd@b+2,?___fladd+2
  7763  002E66  C0B0  F0B0         	movff	___fladd@b+3,?___fladd+3
  7764  002E6A  0012               	return	
  7765  002E6C                     __end_of___fladd:
  7766                           	opt stack 0
  7767                           tblptru	equ	0xFF8
  7768                           tblptrh	equ	0xFF7
  7769                           tblptrl	equ	0xFF6
  7770                           tablat	equ	0xFF5
  7771                           prodh	equ	0xFF4
  7772                           prodl	equ	0xFF3
  7773                           postinc0	equ	0xFEE
  7774                           wreg	equ	0xFE8
  7775                           postdec1	equ	0xFE5
  7776                           fsr1l	equ	0xFE1
  7777                           postinc2	equ	0xFDE
  7778                           postdec2	equ	0xFDD
  7779                           fsr2h	equ	0xFDA
  7780                           fsr2l	equ	0xFD9
  7781                           status	equ	0xFD8
  7782                           
  7783 ;; *************** function ___flge *****************
  7784 ;; Defined at:
  7785 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  7786 ;; Parameters:    Size  Location     Type
  7787 ;;  ff1             4   81[BANK0 ] unsigned char 
  7788 ;;  ff2             4   85[BANK0 ] unsigned char 
  7789 ;; Auto vars:     Size  Location     Type
  7790 ;;		None
  7791 ;; Return value:  Size  Location     Type
  7792 ;;		None               void
  7793 ;; Registers used:
  7794 ;;		wreg, status,2, status,0
  7795 ;; Tracked objects:
  7796 ;;		On entry : 0/0
  7797 ;;		On exit  : 0/0
  7798 ;;		Unchanged: 0/0
  7799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7800 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7802 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7803 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7804 ;;Total ram usage:       12 bytes
  7805 ;; Hardware stack levels used:    1
  7806 ;; Hardware stack levels required when called:    4
  7807 ;; This function calls:
  7808 ;;		Nothing
  7809 ;; This function is called by:
  7810 ;;		_parallelo
  7811 ;;		_asin
  7812 ;;		_atan
  7813 ;;		_cos
  7814 ;;		_sin
  7815 ;;		_floor
  7816 ;; This function uses a non-reentrant model
  7817 ;;
  7818                           
  7819                           	psect	text21
  7820  00515C                     __ptext21:
  7821                           	opt stack 0
  7822  00515C                     ___flge:
  7823                           	opt stack 22
  7824                           
  7825                           ; BSR set to: 0
  7826                           ;incstack = 0
  7827  00515C  0E00               	movlw	0
  7828  00515E  0100               	movlb	0	; () banked
  7829  005160  15B1               	andwf	___flge@ff1& (0+255),w,b
  7830  005162  0100               	movlb	0	; () banked
  7831  005164  6FB9               	movwf	??___flge& (0+255),b
  7832  005166  0E00               	movlw	0
  7833  005168  0100               	movlb	0	; () banked
  7834  00516A  15B2               	andwf	(___flge@ff1+1)& (0+255),w,b
  7835  00516C  0100               	movlb	0	; () banked
  7836  00516E  6FBA               	movwf	(??___flge+1)& (0+255),b
  7837  005170  0E80               	movlw	128
  7838  005172  0100               	movlb	0	; () banked
  7839  005174  15B3               	andwf	(___flge@ff1+2)& (0+255),w,b
  7840  005176  0100               	movlb	0	; () banked
  7841  005178  6FBB               	movwf	(??___flge+2)& (0+255),b
  7842  00517A  0E7F               	movlw	127
  7843  00517C  0100               	movlb	0	; () banked
  7844  00517E  15B4               	andwf	(___flge@ff1+3)& (0+255),w,b
  7845  005180  0100               	movlb	0	; () banked
  7846  005182  6FBC               	movwf	(??___flge+3)& (0+255),b
  7847  005184  0100               	movlb	0	; () banked
  7848  005186  51B9               	movf	??___flge& (0+255),w,b
  7849  005188  0100               	movlb	0	; () banked
  7850  00518A  11BA               	iorwf	(??___flge+1)& (0+255),w,b
  7851  00518C  0100               	movlb	0	; () banked
  7852  00518E  11BB               	iorwf	(??___flge+2)& (0+255),w,b
  7853  005190  0100               	movlb	0	; () banked
  7854  005192  11BC               	iorwf	(??___flge+3)& (0+255),w,b
  7855  005194  A4D8               	btfss	status,2,c
  7856  005196  D009               	goto	l6379
  7857                           
  7858                           ; BSR set to: 0
  7859  005198  0E00               	movlw	0
  7860  00519A  0100               	movlb	0	; () banked
  7861  00519C  6FB1               	movwf	___flge@ff1& (0+255),b
  7862  00519E  0E00               	movlw	0
  7863  0051A0  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  7864  0051A2  0E00               	movlw	0
  7865  0051A4  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  7866  0051A6  0E00               	movlw	0
  7867  0051A8  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  7868  0051AA                     l6379:
  7869                           
  7870                           ; BSR set to: 0
  7871  0051AA  0E00               	movlw	0
  7872  0051AC  0100               	movlb	0	; () banked
  7873  0051AE  15B5               	andwf	___flge@ff2& (0+255),w,b
  7874  0051B0  0100               	movlb	0	; () banked
  7875  0051B2  6FB9               	movwf	??___flge& (0+255),b
  7876  0051B4  0E00               	movlw	0
  7877  0051B6  0100               	movlb	0	; () banked
  7878  0051B8  15B6               	andwf	(___flge@ff2+1)& (0+255),w,b
  7879  0051BA  0100               	movlb	0	; () banked
  7880  0051BC  6FBA               	movwf	(??___flge+1)& (0+255),b
  7881  0051BE  0E80               	movlw	128
  7882  0051C0  0100               	movlb	0	; () banked
  7883  0051C2  15B7               	andwf	(___flge@ff2+2)& (0+255),w,b
  7884  0051C4  0100               	movlb	0	; () banked
  7885  0051C6  6FBB               	movwf	(??___flge+2)& (0+255),b
  7886  0051C8  0E7F               	movlw	127
  7887  0051CA  0100               	movlb	0	; () banked
  7888  0051CC  15B8               	andwf	(___flge@ff2+3)& (0+255),w,b
  7889  0051CE  0100               	movlb	0	; () banked
  7890  0051D0  6FBC               	movwf	(??___flge+3)& (0+255),b
  7891  0051D2  0100               	movlb	0	; () banked
  7892  0051D4  51B9               	movf	??___flge& (0+255),w,b
  7893  0051D6  0100               	movlb	0	; () banked
  7894  0051D8  11BA               	iorwf	(??___flge+1)& (0+255),w,b
  7895  0051DA  0100               	movlb	0	; () banked
  7896  0051DC  11BB               	iorwf	(??___flge+2)& (0+255),w,b
  7897  0051DE  0100               	movlb	0	; () banked
  7898  0051E0  11BC               	iorwf	(??___flge+3)& (0+255),w,b
  7899  0051E2  A4D8               	btfss	status,2,c
  7900  0051E4  D009               	goto	l6383
  7901                           
  7902                           ; BSR set to: 0
  7903  0051E6  0E00               	movlw	0
  7904  0051E8  0100               	movlb	0	; () banked
  7905  0051EA  6FB5               	movwf	___flge@ff2& (0+255),b
  7906  0051EC  0E00               	movlw	0
  7907  0051EE  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  7908  0051F0  0E00               	movlw	0
  7909  0051F2  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  7910  0051F4  0E00               	movlw	0
  7911  0051F6  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  7912  0051F8                     l6383:
  7913                           
  7914                           ; BSR set to: 0
  7915  0051F8  0100               	movlb	0	; () banked
  7916  0051FA  AFB4               	btfss	(___flge@ff1+3)& (0+255),7,b
  7917  0051FC  D026               	goto	l6387
  7918                           
  7919                           ; BSR set to: 0
  7920  0051FE  C0B1  F0B9         	movff	___flge@ff1,??___flge
  7921  005202  C0B2  F0BA         	movff	___flge@ff1+1,??___flge+1
  7922  005206  C0B3  F0BB         	movff	___flge@ff1+2,??___flge+2
  7923  00520A  C0B4  F0BC         	movff	___flge@ff1+3,??___flge+3
  7924  00520E  0100               	movlb	0	; () banked
  7925  005210  1FB9               	comf	??___flge& (0+255),f,b
  7926  005212  1FBA               	comf	(??___flge+1)& (0+255),f,b
  7927  005214  1FBB               	comf	(??___flge+2)& (0+255),f,b
  7928  005216  1FBC               	comf	(??___flge+3)& (0+255),f,b
  7929  005218  2BB9               	incf	??___flge& (0+255),f,b
  7930  00521A  0E00               	movlw	0
  7931  00521C  23BA               	addwfc	(??___flge+1)& (0+255),f,b
  7932  00521E  23BB               	addwfc	(??___flge+2)& (0+255),f,b
  7933  005220  23BC               	addwfc	(??___flge+3)& (0+255),f,b
  7934  005222  0E00               	movlw	0
  7935  005224  0100               	movlb	0	; () banked
  7936  005226  25B9               	addwf	??___flge& (0+255),w,b
  7937  005228  0100               	movlb	0	; () banked
  7938  00522A  6FB1               	movwf	___flge@ff1& (0+255),b
  7939  00522C  0E00               	movlw	0
  7940  00522E  0100               	movlb	0	; () banked
  7941  005230  21BA               	addwfc	(??___flge+1)& (0+255),w,b
  7942  005232  0100               	movlb	0	; () banked
  7943  005234  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  7944  005236  0E00               	movlw	0
  7945  005238  0100               	movlb	0	; () banked
  7946  00523A  21BB               	addwfc	(??___flge+2)& (0+255),w,b
  7947  00523C  0100               	movlb	0	; () banked
  7948  00523E  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  7949  005240  0E80               	movlw	128
  7950  005242  0100               	movlb	0	; () banked
  7951  005244  21BC               	addwfc	(??___flge+3)& (0+255),w,b
  7952  005246  0100               	movlb	0	; () banked
  7953  005248  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  7954  00524A                     l6387:
  7955                           
  7956                           ; BSR set to: 0
  7957  00524A  0100               	movlb	0	; () banked
  7958  00524C  AFB8               	btfss	(___flge@ff2+3)& (0+255),7,b
  7959  00524E  D026               	goto	l1056
  7960                           
  7961                           ; BSR set to: 0
  7962  005250  C0B5  F0B9         	movff	___flge@ff2,??___flge
  7963  005254  C0B6  F0BA         	movff	___flge@ff2+1,??___flge+1
  7964  005258  C0B7  F0BB         	movff	___flge@ff2+2,??___flge+2
  7965  00525C  C0B8  F0BC         	movff	___flge@ff2+3,??___flge+3
  7966  005260  0100               	movlb	0	; () banked
  7967  005262  1FB9               	comf	??___flge& (0+255),f,b
  7968  005264  1FBA               	comf	(??___flge+1)& (0+255),f,b
  7969  005266  1FBB               	comf	(??___flge+2)& (0+255),f,b
  7970  005268  1FBC               	comf	(??___flge+3)& (0+255),f,b
  7971  00526A  2BB9               	incf	??___flge& (0+255),f,b
  7972  00526C  0E00               	movlw	0
  7973  00526E  23BA               	addwfc	(??___flge+1)& (0+255),f,b
  7974  005270  23BB               	addwfc	(??___flge+2)& (0+255),f,b
  7975  005272  23BC               	addwfc	(??___flge+3)& (0+255),f,b
  7976  005274  0E00               	movlw	0
  7977  005276  0100               	movlb	0	; () banked
  7978  005278  25B9               	addwf	??___flge& (0+255),w,b
  7979  00527A  0100               	movlb	0	; () banked
  7980  00527C  6FB5               	movwf	___flge@ff2& (0+255),b
  7981  00527E  0E00               	movlw	0
  7982  005280  0100               	movlb	0	; () banked
  7983  005282  21BA               	addwfc	(??___flge+1)& (0+255),w,b
  7984  005284  0100               	movlb	0	; () banked
  7985  005286  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  7986  005288  0E00               	movlw	0
  7987  00528A  0100               	movlb	0	; () banked
  7988  00528C  21BB               	addwfc	(??___flge+2)& (0+255),w,b
  7989  00528E  0100               	movlb	0	; () banked
  7990  005290  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  7991  005292  0E80               	movlw	128
  7992  005294  0100               	movlb	0	; () banked
  7993  005296  21BC               	addwfc	(??___flge+3)& (0+255),w,b
  7994  005298  0100               	movlb	0	; () banked
  7995  00529A  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  7996  00529C                     l1056:
  7997                           
  7998                           ; BSR set to: 0
  7999  00529C  0E00               	movlw	0
  8000  00529E  0100               	movlb	0	; () banked
  8001  0052A0  1BB1               	xorwf	___flge@ff1& (0+255),f,b
  8002  0052A2  0E00               	movlw	0
  8003  0052A4  1BB2               	xorwf	(___flge@ff1+1)& (0+255),f,b
  8004  0052A6  0E00               	movlw	0
  8005  0052A8  1BB3               	xorwf	(___flge@ff1+2)& (0+255),f,b
  8006  0052AA  0E80               	movlw	128
  8007  0052AC  1BB4               	xorwf	(___flge@ff1+3)& (0+255),f,b
  8008  0052AE  0E00               	movlw	0
  8009  0052B0  0100               	movlb	0	; () banked
  8010  0052B2  1BB5               	xorwf	___flge@ff2& (0+255),f,b
  8011  0052B4  0E00               	movlw	0
  8012  0052B6  1BB6               	xorwf	(___flge@ff2+1)& (0+255),f,b
  8013  0052B8  0E00               	movlw	0
  8014  0052BA  1BB7               	xorwf	(___flge@ff2+2)& (0+255),f,b
  8015  0052BC  0E80               	movlw	128
  8016  0052BE  1BB8               	xorwf	(___flge@ff2+3)& (0+255),f,b
  8017  0052C0  0100               	movlb	0	; () banked
  8018  0052C2  51B5               	movf	___flge@ff2& (0+255),w,b
  8019  0052C4  0100               	movlb	0	; () banked
  8020  0052C6  5DB1               	subwf	___flge@ff1& (0+255),w,b
  8021  0052C8  0100               	movlb	0	; () banked
  8022  0052CA  51B6               	movf	(___flge@ff2+1)& (0+255),w,b
  8023  0052CC  0100               	movlb	0	; () banked
  8024  0052CE  59B2               	subwfb	(___flge@ff1+1)& (0+255),w,b
  8025  0052D0  0100               	movlb	0	; () banked
  8026  0052D2  51B7               	movf	(___flge@ff2+2)& (0+255),w,b
  8027  0052D4  0100               	movlb	0	; () banked
  8028  0052D6  59B3               	subwfb	(___flge@ff1+2)& (0+255),w,b
  8029  0052D8  0100               	movlb	0	; () banked
  8030  0052DA  51B8               	movf	(___flge@ff2+3)& (0+255),w,b
  8031  0052DC  0100               	movlb	0	; () banked
  8032  0052DE  59B4               	subwfb	(___flge@ff1+3)& (0+255),w,b
  8033  0052E0  B0D8               	btfsc	status,0,c
  8034  0052E2  D002               	goto	l6393
  8035                           
  8036                           ; BSR set to: 0
  8037  0052E4  90D8               	bcf	status,0,c
  8038  0052E6  0012               	return	
  8039  0052E8                     l6393:
  8040                           
  8041                           ; BSR set to: 0
  8042  0052E8  80D8               	bsf	status,0,c
  8043                           
  8044                           ; BSR set to: 0
  8045  0052EA  0012               	return	
  8046  0052EC                     __end_of___flge:
  8047                           	opt stack 0
  8048                           tblptru	equ	0xFF8
  8049                           tblptrh	equ	0xFF7
  8050                           tblptrl	equ	0xFF6
  8051                           tablat	equ	0xFF5
  8052                           prodh	equ	0xFF4
  8053                           prodl	equ	0xFF3
  8054                           postinc0	equ	0xFEE
  8055                           wreg	equ	0xFE8
  8056                           postdec1	equ	0xFE5
  8057                           fsr1l	equ	0xFE1
  8058                           postinc2	equ	0xFDE
  8059                           postdec2	equ	0xFDD
  8060                           fsr2h	equ	0xFDA
  8061                           fsr2l	equ	0xFD9
  8062                           status	equ	0xFD8
  8063                           
  8064 ;; *************** function ___fldiv *****************
  8065 ;; Defined at:
  8066 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
  8067 ;; Parameters:    Size  Location     Type
  8068 ;;  b               4   23[BANK0 ] unsigned char 
  8069 ;;  a               4   27[BANK0 ] unsigned char 
  8070 ;; Auto vars:     Size  Location     Type
  8071 ;;  grs             4   42[BANK0 ] unsigned long 
  8072 ;;  rem             4   36[BANK0 ] unsigned long 
  8073 ;;  new_exp         2   40[BANK0 ] int 
  8074 ;;  aexp            1   47[BANK0 ] unsigned char 
  8075 ;;  bexp            1   46[BANK0 ] unsigned char 
  8076 ;;  sign            1   35[BANK0 ] unsigned char 
  8077 ;; Return value:  Size  Location     Type
  8078 ;;                  4   23[BANK0 ] unsigned char 
  8079 ;; Registers used:
  8080 ;;		wreg, status,2, status,0
  8081 ;; Tracked objects:
  8082 ;;		On entry : 0/0
  8083 ;;		On exit  : 0/0
  8084 ;;		Unchanged: 0/0
  8085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8086 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8087 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8088 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8089 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8090 ;;Total ram usage:       25 bytes
  8091 ;; Hardware stack levels used:    1
  8092 ;; Hardware stack levels required when called:    4
  8093 ;; This function calls:
  8094 ;;		Nothing
  8095 ;; This function is called by:
  8096 ;;		_parallelo
  8097 ;;		_matematica
  8098 ;;		_asin
  8099 ;;		_atan
  8100 ;;		_sin
  8101 ;; This function uses a non-reentrant model
  8102 ;;
  8103                           
  8104                           	psect	text22
  8105  0036DC                     __ptext22:
  8106                           	opt stack 0
  8107  0036DC                     ___fldiv:
  8108                           	opt stack 22
  8109                           
  8110                           ; BSR set to: 0
  8111                           ;incstack = 0
  8112  0036DC  0100               	movlb	0	; () banked
  8113  0036DE  517A               	movf	(___fldiv@b+3)& (0+255),w,b
  8114  0036E0  0B80               	andlw	128
  8115  0036E2  0100               	movlb	0	; () banked
  8116  0036E4  6F83               	movwf	___fldiv@sign& (0+255),b
  8117  0036E6  0100               	movlb	0	; () banked
  8118  0036E8  517A               	movf	(___fldiv@b+3)& (0+255),w,b
  8119  0036EA  257A               	addwf	(___fldiv@b+3)& (0+255),w,b
  8120  0036EC  0100               	movlb	0	; () banked
  8121  0036EE  6F8E               	movwf	___fldiv@bexp& (0+255),b
  8122                           
  8123                           ; BSR set to: 0
  8124  0036F0  0100               	movlb	0	; () banked
  8125  0036F2  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
  8126  0036F4  D002               	goto	l6513
  8127                           
  8128                           ; BSR set to: 0
  8129  0036F6  0100               	movlb	0	; () banked
  8130  0036F8  818E               	bsf	___fldiv@bexp& (0+255),0,b
  8131  0036FA                     l6513:
  8132                           
  8133                           ; BSR set to: 0
  8134  0036FA  0100               	movlb	0	; () banked
  8135  0036FC  518E               	movf	___fldiv@bexp& (0+255),w,b
  8136  0036FE  0100               	movlb	0	; () banked
  8137  003700  B4D8               	btfsc	status,2,c
  8138  003702  D012               	goto	l6523
  8139                           
  8140                           ; BSR set to: 0
  8141  003704  0100               	movlb	0	; () banked
  8142  003706  298E               	incf	___fldiv@bexp& (0+255),w,b
  8143  003708  A4D8               	btfss	status,2,c
  8144  00370A  D009               	goto	l6519
  8145                           
  8146                           ; BSR set to: 0
  8147  00370C  0E00               	movlw	0
  8148  00370E  0100               	movlb	0	; () banked
  8149  003710  6F77               	movwf	___fldiv@b& (0+255),b
  8150  003712  0E00               	movlw	0
  8151  003714  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  8152  003716  0E00               	movlw	0
  8153  003718  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  8154  00371A  0E00               	movlw	0
  8155  00371C  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8156  00371E                     l6519:
  8157                           
  8158                           ; BSR set to: 0
  8159  00371E  0100               	movlb	0	; () banked
  8160  003720  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
  8161                           
  8162                           ; BSR set to: 0
  8163  003722  0E00               	movlw	0
  8164  003724  0100               	movlb	0	; () banked
  8165  003726  D008               	goto	L6
  8166  003728                     l6523:
  8167                           
  8168                           ; BSR set to: 0
  8169  003728  0E00               	movlw	0
  8170  00372A  0100               	movlb	0	; () banked
  8171  00372C  6F77               	movwf	___fldiv@b& (0+255),b
  8172  00372E  0E00               	movlw	0
  8173  003730  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  8174  003732  0E00               	movlw	0
  8175  003734  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  8176  003736  0E00               	movlw	0
  8177  003738                     L6:
  8178  003738  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8179                           
  8180                           ; BSR set to: 0
  8181                           
  8182                           ; BSR set to: 0
  8183  00373A  0100               	movlb	0	; () banked
  8184  00373C  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  8185  00373E  0B80               	andlw	128
  8186  003740  0100               	movlb	0	; () banked
  8187  003742  1B83               	xorwf	___fldiv@sign& (0+255),f,b
  8188                           
  8189                           ; BSR set to: 0
  8190  003744  0100               	movlb	0	; () banked
  8191  003746  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  8192  003748  257E               	addwf	(___fldiv@a+3)& (0+255),w,b
  8193  00374A  0100               	movlb	0	; () banked
  8194  00374C  6F8F               	movwf	___fldiv@aexp& (0+255),b
  8195                           
  8196                           ; BSR set to: 0
  8197  00374E  0100               	movlb	0	; () banked
  8198  003750  AF7D               	btfss	(___fldiv@a+2)& (0+255),7,b
  8199  003752  D002               	goto	l6533
  8200                           
  8201                           ; BSR set to: 0
  8202  003754  0100               	movlb	0	; () banked
  8203  003756  818F               	bsf	___fldiv@aexp& (0+255),0,b
  8204  003758                     l6533:
  8205                           
  8206                           ; BSR set to: 0
  8207  003758  0100               	movlb	0	; () banked
  8208  00375A  518F               	movf	___fldiv@aexp& (0+255),w,b
  8209  00375C  0100               	movlb	0	; () banked
  8210  00375E  B4D8               	btfsc	status,2,c
  8211  003760  D012               	goto	l6543
  8212                           
  8213                           ; BSR set to: 0
  8214  003762  0100               	movlb	0	; () banked
  8215  003764  298F               	incf	___fldiv@aexp& (0+255),w,b
  8216  003766  A4D8               	btfss	status,2,c
  8217  003768  D009               	goto	l6539
  8218                           
  8219                           ; BSR set to: 0
  8220  00376A  0E00               	movlw	0
  8221  00376C  0100               	movlb	0	; () banked
  8222  00376E  6F7B               	movwf	___fldiv@a& (0+255),b
  8223  003770  0E00               	movlw	0
  8224  003772  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  8225  003774  0E00               	movlw	0
  8226  003776  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  8227  003778  0E00               	movlw	0
  8228  00377A  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  8229  00377C                     l6539:
  8230                           
  8231                           ; BSR set to: 0
  8232  00377C  0100               	movlb	0	; () banked
  8233  00377E  8F7D               	bsf	(___fldiv@a+2)& (0+255),7,b
  8234                           
  8235                           ; BSR set to: 0
  8236  003780  0E00               	movlw	0
  8237  003782  0100               	movlb	0	; () banked
  8238  003784  D008               	goto	L7
  8239  003786                     l6543:
  8240                           
  8241                           ; BSR set to: 0
  8242  003786  0E00               	movlw	0
  8243  003788  0100               	movlb	0	; () banked
  8244  00378A  6F7B               	movwf	___fldiv@a& (0+255),b
  8245  00378C  0E00               	movlw	0
  8246  00378E  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  8247  003790  0E00               	movlw	0
  8248  003792  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  8249  003794  0E00               	movlw	0
  8250  003796                     L7:
  8251  003796  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  8252                           
  8253                           ; BSR set to: 0
  8254                           
  8255                           ; BSR set to: 0
  8256  003798  0100               	movlb	0	; () banked
  8257  00379A  517B               	movf	___fldiv@a& (0+255),w,b
  8258  00379C  0100               	movlb	0	; () banked
  8259  00379E  117C               	iorwf	(___fldiv@a+1)& (0+255),w,b
  8260  0037A0  0100               	movlb	0	; () banked
  8261  0037A2  117D               	iorwf	(___fldiv@a+2)& (0+255),w,b
  8262  0037A4  0100               	movlb	0	; () banked
  8263  0037A6  117E               	iorwf	(___fldiv@a+3)& (0+255),w,b
  8264  0037A8  A4D8               	btfss	status,2,c
  8265  0037AA  D017               	goto	l6555
  8266                           
  8267                           ; BSR set to: 0
  8268  0037AC  0E00               	movlw	0
  8269  0037AE  0100               	movlb	0	; () banked
  8270  0037B0  6F77               	movwf	___fldiv@b& (0+255),b
  8271  0037B2  0E00               	movlw	0
  8272  0037B4  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  8273  0037B6  0E00               	movlw	0
  8274  0037B8  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  8275  0037BA  0E00               	movlw	0
  8276  0037BC  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8277                           
  8278                           ; BSR set to: 0
  8279  0037BE  0100               	movlb	0	; () banked
  8280  0037C0  0E80               	movlw	128
  8281  0037C2  1379               	iorwf	(___fldiv@b+2)& (0+255),f,b
  8282  0037C4  0E7F               	movlw	127
  8283  0037C6  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
  8284                           
  8285                           ; BSR set to: 0
  8286  0037C8  C077  F077         	movff	___fldiv@b,?___fldiv
  8287  0037CC  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
  8288  0037D0  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
  8289  0037D4  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
  8290                           
  8291                           ; BSR set to: 0
  8292  0037D8  0012               	return	
  8293  0037DA                     l6555:
  8294                           
  8295                           ; BSR set to: 0
  8296  0037DA  0100               	movlb	0	; () banked
  8297  0037DC  518E               	movf	___fldiv@bexp& (0+255),w,b
  8298  0037DE  0100               	movlb	0	; () banked
  8299  0037E0  A4D8               	btfss	status,2,c
  8300  0037E2  D012               	goto	l6563
  8301                           
  8302                           ; BSR set to: 0
  8303  0037E4  0E00               	movlw	0
  8304  0037E6  0100               	movlb	0	; () banked
  8305  0037E8  6F77               	movwf	___fldiv@b& (0+255),b
  8306  0037EA  0E00               	movlw	0
  8307  0037EC  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  8308  0037EE  0E00               	movlw	0
  8309  0037F0  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  8310  0037F2  0E00               	movlw	0
  8311  0037F4  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8312                           
  8313                           ; BSR set to: 0
  8314  0037F6  C077  F077         	movff	___fldiv@b,?___fldiv
  8315  0037FA  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
  8316  0037FE  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
  8317  003802  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
  8318                           
  8319                           ; BSR set to: 0
  8320  003806  0012               	return	
  8321  003808                     l6563:
  8322                           
  8323                           ; BSR set to: 0
  8324  003808  0100               	movlb	0	; () banked
  8325  00380A  518F               	movf	___fldiv@aexp& (0+255),w,b
  8326  00380C  0100               	movlb	0	; () banked
  8327  00380E  6F7F               	movwf	??___fldiv& (0+255),b
  8328  003810  6B80               	clrf	(??___fldiv+1)& (0+255),b
  8329  003812  0100               	movlb	0	; () banked
  8330  003814  1F7F               	comf	??___fldiv& (0+255),f,b
  8331  003816  1F80               	comf	(??___fldiv+1)& (0+255),f,b
  8332  003818  4B7F               	infsnz	??___fldiv& (0+255),f,b
  8333  00381A  2B80               	incf	(??___fldiv+1)& (0+255),f,b
  8334  00381C  0100               	movlb	0	; () banked
  8335  00381E  518E               	movf	___fldiv@bexp& (0+255),w,b
  8336  003820  0100               	movlb	0	; () banked
  8337  003822  6F81               	movwf	(??___fldiv+2)& (0+255),b
  8338  003824  6B82               	clrf	(??___fldiv+3)& (0+255),b
  8339  003826  0100               	movlb	0	; () banked
  8340  003828  517F               	movf	??___fldiv& (0+255),w,b
  8341  00382A  0100               	movlb	0	; () banked
  8342  00382C  2781               	addwf	(??___fldiv+2)& (0+255),f,b
  8343  00382E  0100               	movlb	0	; () banked
  8344  003830  5180               	movf	(??___fldiv+1)& (0+255),w,b
  8345  003832  0100               	movlb	0	; () banked
  8346  003834  2382               	addwfc	(??___fldiv+3)& (0+255),f,b
  8347  003836  0E7F               	movlw	127
  8348  003838  0100               	movlb	0	; () banked
  8349  00383A  2581               	addwf	(??___fldiv+2)& (0+255),w,b
  8350  00383C  0100               	movlb	0	; () banked
  8351  00383E  6F88               	movwf	___fldiv@new_exp& (0+255),b
  8352  003840  0E00               	movlw	0
  8353  003842  0100               	movlb	0	; () banked
  8354  003844  2182               	addwfc	(??___fldiv+3)& (0+255),w,b
  8355  003846  0100               	movlb	0	; () banked
  8356  003848  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8357                           
  8358                           ; BSR set to: 0
  8359  00384A  C077  F084         	movff	___fldiv@b,___fldiv@rem
  8360  00384E  C078  F085         	movff	___fldiv@b+1,___fldiv@rem+1
  8361  003852  C079  F086         	movff	___fldiv@b+2,___fldiv@rem+2
  8362  003856  C07A  F087         	movff	___fldiv@b+3,___fldiv@rem+3
  8363                           
  8364                           ; BSR set to: 0
  8365  00385A  0E00               	movlw	0
  8366  00385C  0100               	movlb	0	; () banked
  8367  00385E  6F77               	movwf	___fldiv@b& (0+255),b
  8368  003860  0E00               	movlw	0
  8369  003862  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  8370  003864  0E00               	movlw	0
  8371  003866  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  8372  003868  0E00               	movlw	0
  8373  00386A  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8374                           
  8375                           ; BSR set to: 0
  8376  00386C  0E00               	movlw	0
  8377  00386E  0100               	movlb	0	; () banked
  8378  003870  6F8A               	movwf	___fldiv@grs& (0+255),b
  8379  003872  0E00               	movlw	0
  8380  003874  6F8B               	movwf	(___fldiv@grs+1)& (0+255),b
  8381  003876  0E00               	movlw	0
  8382  003878  6F8C               	movwf	(___fldiv@grs+2)& (0+255),b
  8383  00387A  0E00               	movlw	0
  8384  00387C  6F8D               	movwf	(___fldiv@grs+3)& (0+255),b
  8385                           
  8386                           ; BSR set to: 0
  8387  00387E  0E00               	movlw	0
  8388  003880  0100               	movlb	0	; () banked
  8389  003882  6F8F               	movwf	___fldiv@aexp& (0+255),b
  8390  003884  D042               	goto	l1364
  8391  003886                     l6573:
  8392                           
  8393                           ; BSR set to: 0
  8394  003886  0100               	movlb	0	; () banked
  8395  003888  518F               	movf	___fldiv@aexp& (0+255),w,b
  8396  00388A  0100               	movlb	0	; () banked
  8397  00388C  B4D8               	btfsc	status,2,c
  8398  00388E  D017               	goto	l6581
  8399                           
  8400                           ; BSR set to: 0
  8401  003890  0100               	movlb	0	; () banked
  8402  003892  90D8               	bcf	status,0,c
  8403  003894  3784               	rlcf	___fldiv@rem& (0+255),f,b
  8404  003896  3785               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  8405  003898  3786               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  8406  00389A  3787               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  8407  00389C  0100               	movlb	0	; () banked
  8408  00389E  90D8               	bcf	status,0,c
  8409  0038A0  3777               	rlcf	___fldiv@b& (0+255),f,b
  8410  0038A2  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
  8411  0038A4  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
  8412  0038A6  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
  8413                           
  8414                           ; BSR set to: 0
  8415  0038A8  0100               	movlb	0	; () banked
  8416  0038AA  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
  8417  0038AC  D002               	goto	l1367
  8418                           
  8419                           ; BSR set to: 0
  8420  0038AE  0100               	movlb	0	; () banked
  8421  0038B0  8177               	bsf	___fldiv@b& (0+255),0,b
  8422  0038B2                     l1367:
  8423                           
  8424                           ; BSR set to: 0
  8425  0038B2  0100               	movlb	0	; () banked
  8426  0038B4  90D8               	bcf	status,0,c
  8427  0038B6  378A               	rlcf	___fldiv@grs& (0+255),f,b
  8428  0038B8  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  8429  0038BA  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  8430  0038BC  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  8431  0038BE                     l6581:
  8432                           
  8433                           ; BSR set to: 0
  8434  0038BE  0100               	movlb	0	; () banked
  8435  0038C0  517B               	movf	___fldiv@a& (0+255),w,b
  8436  0038C2  0100               	movlb	0	; () banked
  8437  0038C4  5D84               	subwf	___fldiv@rem& (0+255),w,b
  8438  0038C6  0100               	movlb	0	; () banked
  8439  0038C8  517C               	movf	(___fldiv@a+1)& (0+255),w,b
  8440  0038CA  0100               	movlb	0	; () banked
  8441  0038CC  5985               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  8442  0038CE  0100               	movlb	0	; () banked
  8443  0038D0  517D               	movf	(___fldiv@a+2)& (0+255),w,b
  8444  0038D2  0100               	movlb	0	; () banked
  8445  0038D4  5986               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  8446  0038D6  0100               	movlb	0	; () banked
  8447  0038D8  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  8448  0038DA  0100               	movlb	0	; () banked
  8449  0038DC  5987               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  8450  0038DE  A0D8               	btfss	status,0,c
  8451  0038E0  D012               	goto	l6587
  8452                           
  8453                           ; BSR set to: 0
  8454  0038E2  0100               	movlb	0	; () banked
  8455  0038E4  8D8D               	bsf	(___fldiv@grs+3)& (0+255),6,b
  8456                           
  8457                           ; BSR set to: 0
  8458  0038E6  0100               	movlb	0	; () banked
  8459  0038E8  517B               	movf	___fldiv@a& (0+255),w,b
  8460  0038EA  0100               	movlb	0	; () banked
  8461  0038EC  5F84               	subwf	___fldiv@rem& (0+255),f,b
  8462  0038EE  0100               	movlb	0	; () banked
  8463  0038F0  517C               	movf	(___fldiv@a+1)& (0+255),w,b
  8464  0038F2  0100               	movlb	0	; () banked
  8465  0038F4  5B85               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  8466  0038F6  0100               	movlb	0	; () banked
  8467  0038F8  517D               	movf	(___fldiv@a+2)& (0+255),w,b
  8468  0038FA  0100               	movlb	0	; () banked
  8469  0038FC  5B86               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  8470  0038FE  0100               	movlb	0	; () banked
  8471  003900  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  8472  003902  0100               	movlb	0	; () banked
  8473  003904  5B87               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  8474  003906                     l6587:
  8475                           
  8476                           ; BSR set to: 0
  8477  003906  0100               	movlb	0	; () banked
  8478  003908  2B8F               	incf	___fldiv@aexp& (0+255),f,b
  8479  00390A                     l1364:
  8480                           
  8481                           ; BSR set to: 0
  8482  00390A  0E19               	movlw	25
  8483  00390C  0100               	movlb	0	; () banked
  8484  00390E  658F               	cpfsgt	___fldiv@aexp& (0+255),b
  8485  003910  D7BA               	goto	l6573
  8486                           
  8487                           ; BSR set to: 0
  8488                           
  8489                           ; BSR set to: 0
  8490  003912  0100               	movlb	0	; () banked
  8491  003914  5184               	movf	___fldiv@rem& (0+255),w,b
  8492  003916  0100               	movlb	0	; () banked
  8493  003918  1185               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  8494  00391A  0100               	movlb	0	; () banked
  8495  00391C  1186               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  8496  00391E  0100               	movlb	0	; () banked
  8497  003920  1187               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  8498  003922  B4D8               	btfsc	status,2,c
  8499  003924  D018               	goto	l6599
  8500                           
  8501                           ; BSR set to: 0
  8502  003926  0100               	movlb	0	; () banked
  8503  003928  818A               	bsf	___fldiv@grs& (0+255),0,b
  8504                           
  8505                           ; BSR set to: 0
  8506  00392A  D015               	goto	l6599
  8507  00392C                     l6593:
  8508                           
  8509                           ; BSR set to: 0
  8510  00392C  0100               	movlb	0	; () banked
  8511  00392E  90D8               	bcf	status,0,c
  8512  003930  3777               	rlcf	___fldiv@b& (0+255),f,b
  8513  003932  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
  8514  003934  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
  8515  003936  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
  8516                           
  8517                           ; BSR set to: 0
  8518  003938  0100               	movlb	0	; () banked
  8519  00393A  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
  8520  00393C  D002               	goto	l1373
  8521                           
  8522                           ; BSR set to: 0
  8523  00393E  0100               	movlb	0	; () banked
  8524  003940  8177               	bsf	___fldiv@b& (0+255),0,b
  8525  003942                     l1373:
  8526                           
  8527                           ; BSR set to: 0
  8528  003942  0100               	movlb	0	; () banked
  8529  003944  90D8               	bcf	status,0,c
  8530  003946  378A               	rlcf	___fldiv@grs& (0+255),f,b
  8531  003948  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  8532  00394A  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  8533  00394C  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  8534  00394E  0100               	movlb	0	; () banked
  8535  003950  0788               	decf	___fldiv@new_exp& (0+255),f,b
  8536  003952  A0D8               	btfss	status,0,c
  8537  003954  0789               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  8538  003956                     l6599:
  8539                           
  8540                           ; BSR set to: 0
  8541  003956  0100               	movlb	0	; () banked
  8542  003958  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
  8543  00395A  D7E8               	goto	l6593
  8544                           
  8545                           ; BSR set to: 0
  8546                           
  8547                           ; BSR set to: 0
  8548  00395C  0E00               	movlw	0
  8549  00395E  0100               	movlb	0	; () banked
  8550  003960  6F8F               	movwf	___fldiv@aexp& (0+255),b
  8551                           
  8552                           ; BSR set to: 0
  8553  003962  0100               	movlb	0	; () banked
  8554  003964  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
  8555  003966  D024               	goto	l1375
  8556                           
  8557                           ; BSR set to: 0
  8558  003968  0EFF               	movlw	255
  8559  00396A  0100               	movlb	0	; () banked
  8560  00396C  158A               	andwf	___fldiv@grs& (0+255),w,b
  8561  00396E  0100               	movlb	0	; () banked
  8562  003970  6F7F               	movwf	??___fldiv& (0+255),b
  8563  003972  0EFF               	movlw	255
  8564  003974  0100               	movlb	0	; () banked
  8565  003976  158B               	andwf	(___fldiv@grs+1)& (0+255),w,b
  8566  003978  0100               	movlb	0	; () banked
  8567  00397A  6F80               	movwf	(??___fldiv+1)& (0+255),b
  8568  00397C  0EFF               	movlw	255
  8569  00397E  0100               	movlb	0	; () banked
  8570  003980  158C               	andwf	(___fldiv@grs+2)& (0+255),w,b
  8571  003982  0100               	movlb	0	; () banked
  8572  003984  6F81               	movwf	(??___fldiv+2)& (0+255),b
  8573  003986  0E7F               	movlw	127
  8574  003988  0100               	movlb	0	; () banked
  8575  00398A  158D               	andwf	(___fldiv@grs+3)& (0+255),w,b
  8576  00398C  0100               	movlb	0	; () banked
  8577  00398E  6F82               	movwf	(??___fldiv+3)& (0+255),b
  8578  003990  0100               	movlb	0	; () banked
  8579  003992  517F               	movf	??___fldiv& (0+255),w,b
  8580  003994  0100               	movlb	0	; () banked
  8581  003996  1180               	iorwf	(??___fldiv+1)& (0+255),w,b
  8582  003998  0100               	movlb	0	; () banked
  8583  00399A  1181               	iorwf	(??___fldiv+2)& (0+255),w,b
  8584  00399C  0100               	movlb	0	; () banked
  8585  00399E  1182               	iorwf	(??___fldiv+3)& (0+255),w,b
  8586  0039A0  A4D8               	btfss	status,2,c
  8587  0039A2  D003               	goto	l6609
  8588                           
  8589                           ; BSR set to: 0
  8590                           
  8591                           ; BSR set to: 0
  8592  0039A4  0100               	movlb	0	; () banked
  8593  0039A6  A177               	btfss	___fldiv@b& (0+255),0,b
  8594  0039A8  D003               	goto	l1375
  8595  0039AA                     l6609:
  8596                           
  8597                           ; BSR set to: 0
  8598  0039AA  0E01               	movlw	1
  8599  0039AC  0100               	movlb	0	; () banked
  8600  0039AE  6F8F               	movwf	___fldiv@aexp& (0+255),b
  8601  0039B0                     l1375:
  8602                           
  8603                           ; BSR set to: 0
  8604  0039B0  0100               	movlb	0	; () banked
  8605  0039B2  518F               	movf	___fldiv@aexp& (0+255),w,b
  8606  0039B4  0100               	movlb	0	; () banked
  8607  0039B6  B4D8               	btfsc	status,2,c
  8608  0039B8  D023               	goto	l6619
  8609                           
  8610                           ; BSR set to: 0
  8611  0039BA  0E01               	movlw	1
  8612  0039BC  0100               	movlb	0	; () banked
  8613  0039BE  2777               	addwf	___fldiv@b& (0+255),f,b
  8614  0039C0  0E00               	movlw	0
  8615  0039C2  2378               	addwfc	(___fldiv@b+1)& (0+255),f,b
  8616  0039C4  2379               	addwfc	(___fldiv@b+2)& (0+255),f,b
  8617  0039C6  237A               	addwfc	(___fldiv@b+3)& (0+255),f,b
  8618                           
  8619                           ; BSR set to: 0
  8620  0039C8  0100               	movlb	0	; () banked
  8621  0039CA  A17A               	btfss	(___fldiv@b+3)& (0+255),0,b
  8622  0039CC  D019               	goto	l6619
  8623                           
  8624                           ; BSR set to: 0
  8625  0039CE  C077  F07F         	movff	___fldiv@b,??___fldiv
  8626  0039D2  C078  F080         	movff	___fldiv@b+1,??___fldiv+1
  8627  0039D6  C079  F081         	movff	___fldiv@b+2,??___fldiv+2
  8628  0039DA  C07A  F082         	movff	___fldiv@b+3,??___fldiv+3
  8629  0039DE  0100               	movlb	0	; () banked
  8630  0039E0  3582               	rlcf	(??___fldiv+3)& (0+255),w,b
  8631  0039E2  3382               	rrcf	(??___fldiv+3)& (0+255),f,b
  8632  0039E4  3381               	rrcf	(??___fldiv+2)& (0+255),f,b
  8633  0039E6  3380               	rrcf	(??___fldiv+1)& (0+255),f,b
  8634  0039E8  337F               	rrcf	??___fldiv& (0+255),f,b
  8635  0039EA  C07F  F077         	movff	??___fldiv,___fldiv@b
  8636  0039EE  C080  F078         	movff	??___fldiv+1,___fldiv@b+1
  8637  0039F2  C081  F079         	movff	??___fldiv+2,___fldiv@b+2
  8638  0039F6  C082  F07A         	movff	??___fldiv+3,___fldiv@b+3
  8639                           
  8640                           ; BSR set to: 0
  8641  0039FA  0100               	movlb	0	; () banked
  8642  0039FC  4B88               	infsnz	___fldiv@new_exp& (0+255),f,b
  8643  0039FE  2B89               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  8644  003A00                     l6619:
  8645                           
  8646                           ; BSR set to: 0
  8647  003A00  0100               	movlb	0	; () banked
  8648  003A02  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  8649  003A04  D014               	goto	l6623
  8650  003A06  0100               	movlb	0	; () banked
  8651  003A08  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  8652  003A0A  E104               	bnz	u8340
  8653  003A0C  0100               	movlb	0	; () banked
  8654  003A0E  2988               	incf	___fldiv@new_exp& (0+255),w,b
  8655  003A10  A0D8               	btfss	status,0,c
  8656  003A12  D00D               	goto	l6623
  8657  003A14                     u8340:
  8658                           
  8659                           ; BSR set to: 0
  8660  003A14  0E00               	movlw	0
  8661  003A16  0100               	movlb	0	; () banked
  8662  003A18  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8663  003A1A  6988               	setf	___fldiv@new_exp& (0+255),b
  8664  003A1C  0E00               	movlw	0
  8665  003A1E  0100               	movlb	0	; () banked
  8666  003A20  6F77               	movwf	___fldiv@b& (0+255),b
  8667  003A22  0E00               	movlw	0
  8668  003A24  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  8669  003A26  0E00               	movlw	0
  8670  003A28  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  8671  003A2A  0E00               	movlw	0
  8672  003A2C  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8673  003A2E                     l6623:
  8674                           
  8675                           ; BSR set to: 0
  8676  003A2E  0100               	movlb	0	; () banked
  8677  003A30  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  8678  003A32  D007               	goto	l6625
  8679  003A34  0100               	movlb	0	; () banked
  8680  003A36  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  8681  003A38  E115               	bnz	l6627
  8682  003A3A  0100               	movlb	0	; () banked
  8683  003A3C  0588               	decf	___fldiv@new_exp& (0+255),w,b
  8684  003A3E  B0D8               	btfsc	status,0,c
  8685  003A40  D011               	goto	l6627
  8686  003A42                     l6625:
  8687                           
  8688                           ; BSR set to: 0
  8689  003A42  0E00               	movlw	0
  8690  003A44  0100               	movlb	0	; () banked
  8691  003A46  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8692  003A48  0E00               	movlw	0
  8693  003A4A  6F88               	movwf	___fldiv@new_exp& (0+255),b
  8694  003A4C  0E00               	movlw	0
  8695  003A4E  0100               	movlb	0	; () banked
  8696  003A50  6F77               	movwf	___fldiv@b& (0+255),b
  8697  003A52  0E00               	movlw	0
  8698  003A54  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  8699  003A56  0E00               	movlw	0
  8700  003A58  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  8701  003A5A  0E00               	movlw	0
  8702  003A5C  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8703  003A5E  0E00               	movlw	0
  8704  003A60  0100               	movlb	0	; () banked
  8705  003A62  6F83               	movwf	___fldiv@sign& (0+255),b
  8706  003A64                     l6627:
  8707                           
  8708                           ; BSR set to: 0
  8709  003A64  C088  F08E         	movff	___fldiv@new_exp,___fldiv@bexp
  8710                           
  8711                           ; BSR set to: 0
  8712  003A68  0100               	movlb	0	; () banked
  8713  003A6A  A18E               	btfss	___fldiv@bexp& (0+255),0,b
  8714  003A6C  D003               	goto	l6633
  8715                           
  8716                           ; BSR set to: 0
  8717  003A6E  0100               	movlb	0	; () banked
  8718  003A70  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
  8719  003A72  D002               	goto	l6635
  8720  003A74                     l6633:
  8721                           
  8722                           ; BSR set to: 0
  8723  003A74  0100               	movlb	0	; () banked
  8724  003A76  9F79               	bcf	(___fldiv@b+2)& (0+255),7,b
  8725  003A78                     l6635:
  8726                           
  8727                           ; BSR set to: 0
  8728  003A78  0100               	movlb	0	; () banked
  8729  003A7A  90D8               	bcf	status,0,c
  8730  003A7C  318E               	rrcf	___fldiv@bexp& (0+255),w,b
  8731  003A7E  0100               	movlb	0	; () banked
  8732  003A80  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8733                           
  8734                           ; BSR set to: 0
  8735  003A82  0100               	movlb	0	; () banked
  8736  003A84  5183               	movf	___fldiv@sign& (0+255),w,b
  8737  003A86  0100               	movlb	0	; () banked
  8738  003A88  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
  8739                           
  8740                           ; BSR set to: 0
  8741  003A8A  C077  F077         	movff	___fldiv@b,?___fldiv
  8742  003A8E  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
  8743  003A92  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
  8744  003A96  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
  8745  003A9A  0012               	return	
  8746  003A9C                     __end_of___fldiv:
  8747                           	opt stack 0
  8748                           tblptru	equ	0xFF8
  8749                           tblptrh	equ	0xFF7
  8750                           tblptrl	equ	0xFF6
  8751                           tablat	equ	0xFF5
  8752                           prodh	equ	0xFF4
  8753                           prodl	equ	0xFF3
  8754                           postinc0	equ	0xFEE
  8755                           wreg	equ	0xFE8
  8756                           postdec1	equ	0xFE5
  8757                           fsr1l	equ	0xFE1
  8758                           postinc2	equ	0xFDE
  8759                           postdec2	equ	0xFDD
  8760                           fsr2h	equ	0xFDA
  8761                           fsr2l	equ	0xFD9
  8762                           status	equ	0xFD8
  8763                           
  8764 ;; *************** function _delay_s *****************
  8765 ;; Defined at:
  8766 ;;		line 102 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
  8767 ;; Parameters:    Size  Location     Type
  8768 ;;  value_s         1    wreg     unsigned char 
  8769 ;; Auto vars:     Size  Location     Type
  8770 ;;  value_s         1   31[BANK0 ] unsigned char 
  8771 ;;  repeat_loop     1   32[BANK0 ] unsigned char 
  8772 ;; Return value:  Size  Location     Type
  8773 ;;		None               void
  8774 ;; Registers used:
  8775 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8776 ;; Tracked objects:
  8777 ;;		On entry : 0/0
  8778 ;;		On exit  : 0/0
  8779 ;;		Unchanged: 0/0
  8780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8782 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8784 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8785 ;;Total ram usage:        2 bytes
  8786 ;; Hardware stack levels used:    1
  8787 ;; Hardware stack levels required when called:    6
  8788 ;; This function calls:
  8789 ;;		_delay_ms
  8790 ;; This function is called by:
  8791 ;;		_park_routine
  8792 ;; This function uses a non-reentrant model
  8793 ;;
  8794                           
  8795                           	psect	text23
  8796  005D1C                     __ptext23:
  8797                           	opt stack 0
  8798  005D1C                     _delay_s:
  8799                           	opt stack 23
  8800                           
  8801                           ; BSR set to: 0
  8802                           ;incstack = 0
  8803                           ;delay_s@value_s stored from wreg
  8804  005D1C  0100               	movlb	0	; () banked
  8805  005D1E  6F7F               	movwf	delay_s@value_s& (0+255),b
  8806                           
  8807                           ;src\delay.c: 104: unsigned char repeat_loop;
  8808                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
  8809  005D20  0E00               	movlw	0
  8810  005D22  0100               	movlb	0	; () banked
  8811  005D24  6F80               	movwf	delay_s@repeat_loop& (0+255),b
  8812  005D26  D009               	goto	l5429
  8813  005D28                     l5425:
  8814                           
  8815                           ; BSR set to: 0
  8816                           ;src\delay.c: 107: delay_ms (1000);
  8817  005D28  0E03               	movlw	3
  8818  005D2A  0100               	movlb	0	; () banked
  8819  005D2C  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  8820  005D2E  0EE8               	movlw	232
  8821  005D30  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  8822  005D32  EC24  F02E         	call	_delay_ms	;wreg free
  8823  005D36  0100               	movlb	0	; () banked
  8824  005D38  2B80               	incf	delay_s@repeat_loop& (0+255),f,b
  8825  005D3A                     l5429:
  8826                           
  8827                           ; BSR set to: 0
  8828  005D3A  0100               	movlb	0	; () banked
  8829  005D3C  517F               	movf	delay_s@value_s& (0+255),w,b
  8830  005D3E  0100               	movlb	0	; () banked
  8831  005D40  5D80               	subwf	delay_s@repeat_loop& (0+255),w,b
  8832  005D42  B0D8               	btfsc	status,0,c
  8833  005D44  0012               	return	
  8834  005D46  D7F0               	goto	l5425
  8835  005D48                     __end_of_delay_s:
  8836                           	opt stack 0
  8837                           tblptru	equ	0xFF8
  8838                           tblptrh	equ	0xFF7
  8839                           tblptrl	equ	0xFF6
  8840                           tablat	equ	0xFF5
  8841                           prodh	equ	0xFF4
  8842                           prodl	equ	0xFF3
  8843                           postinc0	equ	0xFEE
  8844                           wreg	equ	0xFE8
  8845                           postdec1	equ	0xFE5
  8846                           fsr1l	equ	0xFE1
  8847                           postinc2	equ	0xFDE
  8848                           postdec2	equ	0xFDD
  8849                           fsr2h	equ	0xFDA
  8850                           fsr2l	equ	0xFD9
  8851                           status	equ	0xFD8
  8852                           
  8853 ;; *************** function _delay_ms *****************
  8854 ;; Defined at:
  8855 ;;		line 61 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
  8856 ;; Parameters:    Size  Location     Type
  8857 ;;  value_ms        2   29[BANK0 ] unsigned int 
  8858 ;; Auto vars:     Size  Location     Type
  8859 ;;		None
  8860 ;; Return value:  Size  Location     Type
  8861 ;;		None               void
  8862 ;; Registers used:
  8863 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8864 ;; Tracked objects:
  8865 ;;		On entry : 0/0
  8866 ;;		On exit  : 0/0
  8867 ;;		Unchanged: 0/0
  8868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8869 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8872 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8873 ;;Total ram usage:        2 bytes
  8874 ;; Hardware stack levels used:    1
  8875 ;; Hardware stack levels required when called:    5
  8876 ;; This function calls:
  8877 ;;		___wmul
  8878 ;; This function is called by:
  8879 ;;		_delay_s
  8880 ;; This function uses a non-reentrant model
  8881 ;;
  8882                           
  8883                           	psect	text24
  8884  005C48                     __ptext24:
  8885                           	opt stack 0
  8886  005C48                     _delay_ms:
  8887                           	opt stack 23
  8888                           
  8889                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  8890                           
  8891                           ; BSR set to: 0
  8892                           ;incstack = 0
  8893  005C48  C0E7  F077         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  8894  005C4C  0100               	movlb	0	; () banked
  8895  005C4E  6B78               	clrf	(___wmul@multiplier+1)& (0+255),b
  8896  005C50  C07D  F079         	movff	delay_ms@value_ms,___wmul@multiplicand
  8897  005C54  C07E  F07A         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  8898  005C58  EC5D  F02E         	call	___wmul	;wreg free
  8899  005C5C  C077  F0E1         	movff	?___wmul,_clock_counter_reference	;volatile
  8900  005C60  C078  F0E2         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  8901                           
  8902                           ;src\delay.c: 75: while (clock_counter_reference) {
  8903  005C64  D007               	goto	l569
  8904  005C66                     l5279:
  8905                           
  8906                           ;src\delay.c: 85: _delay(240);
  8907  005C66  0E50               	movlw	80
  8908  005C68                     u9067:
  8909  005C68  2EE8               	decfsz	wreg,f,c
  8910  005C6A  D7FE               	goto	u9067
  8911                           
  8912                           ;src\delay.c: 88: clock_counter_reference--;
  8913  005C6C  0100               	movlb	0	; () banked
  8914  005C6E  07E1               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  8915  005C70  A0D8               	btfss	status,0,c
  8916  005C72  07E2               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  8917  005C74                     l569:
  8918  005C74  0100               	movlb	0	; () banked
  8919  005C76  51E1               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  8920  005C78  0100               	movlb	0	; () banked
  8921  005C7A  11E2               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  8922  005C7C  B4D8               	btfsc	status,2,c
  8923  005C7E  0012               	return	
  8924  005C80  D7F2               	goto	l5279
  8925  005C82                     __end_of_delay_ms:
  8926                           	opt stack 0
  8927                           tblptru	equ	0xFF8
  8928                           tblptrh	equ	0xFF7
  8929                           tblptrl	equ	0xFF6
  8930                           tablat	equ	0xFF5
  8931                           prodh	equ	0xFF4
  8932                           prodl	equ	0xFF3
  8933                           postinc0	equ	0xFEE
  8934                           wreg	equ	0xFE8
  8935                           postdec1	equ	0xFE5
  8936                           fsr1l	equ	0xFE1
  8937                           postinc2	equ	0xFDE
  8938                           postdec2	equ	0xFDD
  8939                           fsr2h	equ	0xFDA
  8940                           fsr2l	equ	0xFD9
  8941                           status	equ	0xFD8
  8942                           
  8943 ;; *************** function ___wmul *****************
  8944 ;; Defined at:
  8945 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  8946 ;; Parameters:    Size  Location     Type
  8947 ;;  multiplier      2   23[BANK0 ] unsigned int 
  8948 ;;  multiplicand    2   25[BANK0 ] unsigned int 
  8949 ;; Auto vars:     Size  Location     Type
  8950 ;;  product         2   27[BANK0 ] unsigned int 
  8951 ;; Return value:  Size  Location     Type
  8952 ;;                  2   23[BANK0 ] unsigned int 
  8953 ;; Registers used:
  8954 ;;		wreg, status,2, status,0, prodl, prodh
  8955 ;; Tracked objects:
  8956 ;;		On entry : 0/0
  8957 ;;		On exit  : 0/0
  8958 ;;		Unchanged: 0/0
  8959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8960 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8961 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8963 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8964 ;;Total ram usage:        6 bytes
  8965 ;; Hardware stack levels used:    1
  8966 ;; Hardware stack levels required when called:    4
  8967 ;; This function calls:
  8968 ;;		Nothing
  8969 ;; This function is called by:
  8970 ;;		_delay_ms
  8971 ;; This function uses a non-reentrant model
  8972 ;;
  8973                           
  8974                           	psect	text25
  8975  005CBA                     __ptext25:
  8976                           	opt stack 0
  8977  005CBA                     ___wmul:
  8978                           	opt stack 23
  8979                           
  8980                           ; BSR set to: 0
  8981                           ;incstack = 0
  8982  005CBA  0100               	movlb	0	; () banked
  8983  005CBC  5177               	movf	___wmul@multiplier& (0+255),w,b
  8984  005CBE  0100               	movlb	0	; () banked
  8985  005CC0  0379               	mulwf	___wmul@multiplicand& (0+255),b
  8986  005CC2  CFF3 F07B          	movff	prodl,___wmul@product
  8987  005CC6  CFF4 F07C          	movff	prodh,___wmul@product+1
  8988  005CCA  0100               	movlb	0	; () banked
  8989  005CCC  5177               	movf	___wmul@multiplier& (0+255),w,b
  8990  005CCE  0100               	movlb	0	; () banked
  8991  005CD0  037A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  8992  005CD2  50F3               	movf	prodl,w,c
  8993  005CD4  0100               	movlb	0	; () banked
  8994  005CD6  277C               	addwf	(___wmul@product+1)& (0+255),f,b
  8995  005CD8  0100               	movlb	0	; () banked
  8996  005CDA  5178               	movf	(___wmul@multiplier+1)& (0+255),w,b
  8997  005CDC  0100               	movlb	0	; () banked
  8998  005CDE  0379               	mulwf	___wmul@multiplicand& (0+255),b
  8999  005CE0  50F3               	movf	prodl,w,c
  9000  005CE2  0100               	movlb	0	; () banked
  9001  005CE4  277C               	addwf	(___wmul@product+1)& (0+255),f,b
  9002                           
  9003                           ; BSR set to: 0
  9004  005CE6  C07B  F077         	movff	___wmul@product,?___wmul
  9005  005CEA  C07C  F078         	movff	___wmul@product+1,?___wmul+1
  9006  005CEE  0012               	return	
  9007  005CF0                     __end_of___wmul:
  9008                           	opt stack 0
  9009                           tblptru	equ	0xFF8
  9010                           tblptrh	equ	0xFF7
  9011                           tblptrl	equ	0xFF6
  9012                           tablat	equ	0xFF5
  9013                           prodh	equ	0xFF4
  9014                           prodl	equ	0xFF3
  9015                           postinc0	equ	0xFEE
  9016                           wreg	equ	0xFE8
  9017                           postdec1	equ	0xFE5
  9018                           fsr1l	equ	0xFE1
  9019                           postinc2	equ	0xFDE
  9020                           postdec2	equ	0xFDD
  9021                           fsr2h	equ	0xFDA
  9022                           fsr2l	equ	0xFD9
  9023                           status	equ	0xFD8
  9024                           
  9025 ;; *************** function _can_send *****************
  9026 ;; Defined at:
  9027 ;;		line 337 in file "parcheggio.c"
  9028 ;; Parameters:    Size  Location     Type
  9029 ;;		None
  9030 ;; Auto vars:     Size  Location     Type
  9031 ;;  data_correct    0   39[BANK0 ] unsigned char [0]
  9032 ;; Return value:  Size  Location     Type
  9033 ;;		None               void
  9034 ;; Registers used:
  9035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9036 ;; Tracked objects:
  9037 ;;		On entry : 0/0
  9038 ;;		On exit  : 0/0
  9039 ;;		Unchanged: 0/0
  9040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9045 ;;Total ram usage:        0 bytes
  9046 ;; Hardware stack levels used:    1
  9047 ;; Hardware stack levels required when called:    5
  9048 ;; This function calls:
  9049 ;;		_CANisTxReady
  9050 ;;		_CANsendMessage
  9051 ;; This function is called by:
  9052 ;;		_park_routine
  9053 ;;		_parallelo
  9054 ;; This function uses a non-reentrant model
  9055 ;;
  9056                           
  9057                           	psect	text26
  9058  0052EC                     __ptext26:
  9059                           	opt stack 0
  9060  0052EC                     _can_send:
  9061                           	opt stack 23
  9062                           
  9063                           ;parcheggio.c: 338: if (PORTBbits.RB5 == 1) {
  9064                           
  9065                           ; BSR set to: 0
  9066                           ;incstack = 0
  9067  0052EC  AA81               	btfss	3969,5,c	;volatile
  9068  0052EE  D063               	goto	l5311
  9069  0052F0                     l5291:
  9070  0052F0  ECA4  F02E         	call	_CANisTxReady	;wreg free
  9071  0052F4  06E8               	decf	wreg,f,c
  9072  0052F6  A4D8               	btfss	status,2,c
  9073  0052F8  D7FB               	goto	l5291
  9074                           
  9075                           ;parcheggio.c: 340: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG &
      +                           CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  9076  0052FA  0E05               	movlw	5
  9077  0052FC  0100               	movlb	0	; () banked
  9078  0052FE  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  9079  005300  0E00               	movlw	0
  9080  005302  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  9081  005304  0E00               	movlw	0
  9082  005306  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  9083  005308  0E00               	movlw	0
  9084  00530A  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  9085  00530C  0E73               	movlw	low _data_steering
  9086  00530E  0100               	movlb	0	; () banked
  9087  005310  6F7B               	movwf	CANsendMessage@data& (0+255),b
  9088  005312  0E01               	movlw	high _data_steering
  9089  005314  0100               	movlb	0	; () banked
  9090  005316  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  9091  005318  0E08               	movlw	8
  9092  00531A  0100               	movlb	0	; () banked
  9093  00531C  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  9094  00531E  0EBC               	movlw	188
  9095  005320  0100               	movlb	0	; () banked
  9096  005322  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  9097  005324  EC2C  F00C         	call	_CANsendMessage	;wreg free
  9098                           
  9099                           ;parcheggio.c: 341: data_speed[0] = set_speed;
  9100  005328  C0E5  F16B         	movff	_set_speed,_data_speed
  9101                           
  9102                           ;parcheggio.c: 342: data_speed[1] = (set_speed >> 8);
  9103  00532C  0100               	movlb	0	; () banked
  9104  00532E  51E6               	movf	(_set_speed+1)& (0+255),w,b
  9105  005330  0101               	movlb	1	; () banked
  9106  005332  6F6C               	movwf	(_data_speed+1)& (0+255),b
  9107                           
  9108                           ; BSR set to: 1
  9109                           ;parcheggio.c: 343: data_speed[2] = dir;
  9110  005334  0E00               	movlw	0
  9111  005336  B444               	btfsc	_dir/(0+8),_dir& (0+7),c
  9112  005338  0E01               	movlw	1
  9113  00533A  0101               	movlb	1	; () banked
  9114  00533C  6F6D               	movwf	(_data_speed+2)& (0+255),b
  9115  00533E                     l5301:
  9116  00533E  ECA4  F02E         	call	_CANisTxReady	;wreg free
  9117  005342  06E8               	decf	wreg,f,c
  9118  005344  A4D8               	btfss	status,2,c
  9119  005346  D7FB               	goto	l5301
  9120                           
  9121                           ;parcheggio.c: 345: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  9122  005348  0E03               	movlw	3
  9123  00534A  0100               	movlb	0	; () banked
  9124  00534C  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  9125  00534E  0E00               	movlw	0
  9126  005350  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  9127  005352  0E00               	movlw	0
  9128  005354  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  9129  005356  0E00               	movlw	0
  9130  005358  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  9131  00535A  0E6B               	movlw	low _data_speed
  9132  00535C  0100               	movlb	0	; () banked
  9133  00535E  6F7B               	movwf	CANsendMessage@data& (0+255),b
  9134  005360  0E01               	movlw	high _data_speed
  9135  005362  0100               	movlb	0	; () banked
  9136  005364  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  9137  005366  0E08               	movlw	8
  9138  005368  0100               	movlb	0	; () banked
  9139  00536A  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  9140  00536C  0EBC               	movlw	188
  9141  00536E  0100               	movlb	0	; () banked
  9142  005370  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  9143  005372  EC2C  F00C         	call	_CANsendMessage	;wreg free
  9144  005376                     l5305:
  9145  005376  ECA4  F02E         	call	_CANisTxReady	;wreg free
  9146  00537A  06E8               	decf	wreg,f,c
  9147  00537C  A4D8               	btfss	status,2,c
  9148  00537E  D7FB               	goto	l5305
  9149                           
  9150                           ;parcheggio.c: 347: data_brake[1] = 0;
  9151  005380  0E00               	movlw	0
  9152  005382  0101               	movlb	1	; () banked
  9153  005384  6F5C               	movwf	(_data_brake+1)& (0+255),b
  9154                           
  9155                           ; BSR set to: 1
  9156                           ;parcheggio.c: 348: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  9157  005386  0E04               	movlw	4
  9158  005388  0100               	movlb	0	; () banked
  9159  00538A  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  9160  00538C  0E00               	movlw	0
  9161  00538E  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  9162  005390  0E00               	movlw	0
  9163  005392  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  9164  005394  0E00               	movlw	0
  9165  005396  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  9166  005398  0E5B               	movlw	low _data_brake
  9167  00539A  0100               	movlb	0	; () banked
  9168  00539C  6F7B               	movwf	CANsendMessage@data& (0+255),b
  9169  00539E  0E01               	movlw	high _data_brake
  9170  0053A0  0100               	movlb	0	; () banked
  9171  0053A2  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  9172  0053A4  0E08               	movlw	8
  9173  0053A6  0100               	movlb	0	; () banked
  9174  0053A8  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  9175  0053AA  0EBC               	movlw	188
  9176  0053AC  0100               	movlb	0	; () banked
  9177  0053AE  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  9178  0053B0  EC2C  F00C         	call	_CANsendMessage	;wreg free
  9179                           
  9180                           ;parcheggio.c: 349: } else {
  9181  0053B4  0012               	return	
  9182  0053B6                     l5311:
  9183                           
  9184                           ;parcheggio.c: 350: CANsendMessage(0b00000001110, data_correction, 8, CAN_CONFIG_STD_MSG
      +                           & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  9185  0053B6  0E0E               	movlw	14
  9186  0053B8  0100               	movlb	0	; () banked
  9187  0053BA  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  9188  0053BC  0E00               	movlw	0
  9189  0053BE  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  9190  0053C0  0E00               	movlw	0
  9191  0053C2  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  9192  0053C4  0E00               	movlw	0
  9193  0053C6  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  9194  0053C8  0E63               	movlw	low _data_correction
  9195  0053CA  0100               	movlb	0	; () banked
  9196  0053CC  6F7B               	movwf	CANsendMessage@data& (0+255),b
  9197  0053CE  0E01               	movlw	high _data_correction
  9198  0053D0  0100               	movlb	0	; () banked
  9199  0053D2  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  9200  0053D4  0E08               	movlw	8
  9201  0053D6  0100               	movlb	0	; () banked
  9202  0053D8  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  9203  0053DA  0EBC               	movlw	188
  9204  0053DC  0100               	movlb	0	; () banked
  9205  0053DE  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  9206  0053E0  EC2C  F00C         	call	_CANsendMessage	;wreg free
  9207                           
  9208                           ;parcheggio.c: 351: unsigned char data_correction1[];
  9209                           ;parcheggio.c: 352: data_correction1[0] = data_correction[0];
  9210  0053E4  EE20  F087         	lfsr	2,can_send@data_correction1
  9211  0053E8  C163  FFDF         	movff	_data_correction,indf2
  9212                           
  9213                           ;parcheggio.c: 353: data_correction1[1] = 0;
  9214  0053EC  0E00               	movlw	0
  9215  0053EE  CFE8 F088          	movff	wreg,can_send@data_correction1+1
  9216                           
  9217                           ;parcheggio.c: 354: CANsendMessage(0xAA, data_correction1, 8, CAN_CONFIG_STD_MSG & CAN_N
      +                          ORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  9218  0053F2  0EAA               	movlw	170
  9219  0053F4  0100               	movlb	0	; () banked
  9220  0053F6  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  9221  0053F8  0E00               	movlw	0
  9222  0053FA  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  9223  0053FC  0E00               	movlw	0
  9224  0053FE  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  9225  005400  0E00               	movlw	0
  9226  005402  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  9227  005404  0E87               	movlw	low can_send@data_correction1
  9228  005406  0100               	movlb	0	; () banked
  9229  005408  6F7B               	movwf	CANsendMessage@data& (0+255),b
  9230  00540A  0E00               	movlw	high can_send@data_correction1
  9231  00540C  0100               	movlb	0	; () banked
  9232  00540E  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  9233  005410  0E08               	movlw	8
  9234  005412  0100               	movlb	0	; () banked
  9235  005414  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  9236  005416  0EBC               	movlw	188
  9237  005418  0100               	movlb	0	; () banked
  9238  00541A  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  9239  00541C  EC2C  F00C         	call	_CANsendMessage	;wreg free
  9240  005420  0012               	return	
  9241  005422                     __end_of_can_send:
  9242                           	opt stack 0
  9243                           tblptru	equ	0xFF8
  9244                           tblptrh	equ	0xFF7
  9245                           tblptrl	equ	0xFF6
  9246                           tablat	equ	0xFF5
  9247                           prodh	equ	0xFF4
  9248                           prodl	equ	0xFF3
  9249                           postinc0	equ	0xFEE
  9250                           wreg	equ	0xFE8
  9251                           postdec1	equ	0xFE5
  9252                           fsr1l	equ	0xFE1
  9253                           indf2	equ	0xFDF
  9254                           postinc2	equ	0xFDE
  9255                           postdec2	equ	0xFDD
  9256                           fsr2h	equ	0xFDA
  9257                           fsr2l	equ	0xFD9
  9258                           status	equ	0xFD8
  9259                           
  9260 ;; *************** function _CANsendMessage *****************
  9261 ;; Defined at:
  9262 ;;		line 294 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  9263 ;; Parameters:    Size  Location     Type
  9264 ;;  identifier      4   23[BANK0 ] unsigned long 
  9265 ;;  data            2   27[BANK0 ] PTR unsigned char 
  9266 ;;		 -> can_send@data_correction1(0), data_correction(8), data_speed(8), data_test(8), 
  9267 ;;		 -> data_brake(8), data_steering(8), data(8), 
  9268 ;;  dataLength      1   29[BANK0 ] unsigned char 
  9269 ;;  flags           1   30[BANK0 ] enum E16335
  9270 ;; Auto vars:     Size  Location     Type
  9271 ;;  tamp            4   35[BANK0 ] unsigned long 
  9272 ;; Return value:  Size  Location     Type
  9273 ;;		None               void
  9274 ;; Registers used:
  9275 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9276 ;; Tracked objects:
  9277 ;;		On entry : 0/0
  9278 ;;		On exit  : 0/0
  9279 ;;		Unchanged: 0/0
  9280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9281 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9282 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9283 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9284 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9285 ;;Total ram usage:       16 bytes
  9286 ;; Hardware stack levels used:    1
  9287 ;; Hardware stack levels required when called:    4
  9288 ;; This function calls:
  9289 ;;		Nothing
  9290 ;; This function is called by:
  9291 ;;		_park_search
  9292 ;;		_park_routine
  9293 ;;		_can_send
  9294 ;; This function uses a non-reentrant model
  9295 ;;
  9296                           
  9297                           	psect	text27
  9298  001858                     __ptext27:
  9299                           	opt stack 0
  9300  001858                     _CANsendMessage:
  9301                           	opt stack 23
  9302                           
  9303                           ;inc\CANlib.h: 296: unsigned long tamp;
  9304                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  9305                           
  9306                           ;incstack = 0
  9307  001858  010F               	movlb	15	; () banked
  9308  00185A  B740               	btfsc	64,3,b	;volatile
  9309  00185C  D13F               	goto	l363
  9310                           
  9311                           ; BSR set to: 15
  9312                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  9313  00185E  C07D  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  9314                           
  9315                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  9316  001862  0100               	movlb	0	; () banked
  9317  001864  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  9318  001866  D003               	goto	l364
  9319                           
  9320                           ; BSR set to: 0
  9321                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  9322  001868  010F               	movlb	15	; () banked
  9323  00186A  8D45               	bsf	69,6,b	;volatile
  9324  00186C  D002               	goto	l365
  9325  00186E                     l364:
  9326                           
  9327                           ; BSR set to: 0
  9328                           ;inc\CANlib.h: 302: else
  9329                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  9330  00186E  010F               	movlb	15	; () banked
  9331  001870  9D45               	bcf	69,6,b	;volatile
  9332  001872                     l365:
  9333                           
  9334                           ; BSR set to: 15
  9335                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  9336  001872  0100               	movlb	0	; () banked
  9337  001874  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  9338  001876  D079               	goto	l366
  9339                           
  9340                           ; BSR set to: 0
  9341                           ;inc\CANlib.h: 306: {
  9342                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  9343  001878  0100               	movlb	0	; () banked
  9344  00187A  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  9345  00187C  0100               	movlb	0	; () banked
  9346  00187E  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9347  001880  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  9348  001882  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  9349  001884  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  9350                           
  9351                           ; BSR set to: 0
  9352                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  9353  001886  C083  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  9354                           
  9355                           ; BSR set to: 0
  9356                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  9357  00188A  0E00               	movlw	0
  9358  00188C  0100               	movlb	0	; () banked
  9359  00188E  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  9360  001890  0100               	movlb	0	; () banked
  9361  001892  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9362  001894  0EFF               	movlw	255
  9363  001896  0100               	movlb	0	; () banked
  9364  001898  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  9365  00189A  0100               	movlb	0	; () banked
  9366  00189C  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  9367  00189E  0E00               	movlw	0
  9368  0018A0  0100               	movlb	0	; () banked
  9369  0018A2  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  9370  0018A4  0100               	movlb	0	; () banked
  9371  0018A6  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  9372  0018A8  0E00               	movlw	0
  9373  0018AA  0100               	movlb	0	; () banked
  9374  0018AC  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  9375  0018AE  0100               	movlb	0	; () banked
  9376  0018B0  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  9377                           
  9378                           ; BSR set to: 0
  9379                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  9380  0018B2  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  9381  0018B6  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  9382  0018BA  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  9383  0018BE  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  9384  0018C2  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  9385  0018C6  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  9386  0018CA  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  9387  0018CE  0100               	movlb	0	; () banked
  9388  0018D0  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  9389  0018D2  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9390  0018D6  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9391  0018DA  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9392  0018DE  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9393                           
  9394                           ; BSR set to: 0
  9395                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  9396  0018E2  C083  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  9397                           
  9398                           ; BSR set to: 0
  9399                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  9400  0018E6  0E00               	movlw	0
  9401  0018E8  010F               	movlb	15	; () banked
  9402  0018EA  6F42               	movwf	66,b	;volatile
  9403                           
  9404                           ; BSR set to: 15
  9405                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  9406  0018EC  010F               	movlb	15	; () banked
  9407  0018EE  8742               	bsf	66,3,b	;volatile
  9408                           
  9409                           ; BSR set to: 15
  9410                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  9411  0018F0  0100               	movlb	0	; () banked
  9412  0018F2  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  9413  0018F4  D002               	goto	l367
  9414                           
  9415                           ; BSR set to: 0
  9416                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  9417  0018F6  010F               	movlb	15	; () banked
  9418  0018F8  8142               	bsf	66,0,b	;volatile
  9419  0018FA                     l367:
  9420                           
  9421                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  9422  0018FA  0100               	movlb	0	; () banked
  9423  0018FC  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  9424  0018FE  D002               	goto	l368
  9425                           
  9426                           ; BSR set to: 0
  9427                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  9428  001900  010F               	movlb	15	; () banked
  9429  001902  8342               	bsf	66,1,b	;volatile
  9430  001904                     l368:
  9431                           
  9432                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  9433  001904  0100               	movlb	0	; () banked
  9434  001906  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  9435  001908  D002               	goto	l369
  9436                           
  9437                           ; BSR set to: 0
  9438                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  9439  00190A  010F               	movlb	15	; () banked
  9440  00190C  8B42               	bsf	66,5,b	;volatile
  9441  00190E                     l369:
  9442                           
  9443                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  9444  00190E  0100               	movlb	0	; () banked
  9445  001910  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  9446  001912  D002               	goto	l370
  9447                           
  9448                           ; BSR set to: 0
  9449                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  9450  001914  010F               	movlb	15	; () banked
  9451  001916  8D42               	bsf	66,6,b	;volatile
  9452  001918                     l370:
  9453                           
  9454                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  9455  001918  0100               	movlb	0	; () banked
  9456  00191A  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  9457  00191C  D002               	goto	l4483
  9458                           
  9459                           ; BSR set to: 0
  9460                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  9461  00191E  010F               	movlb	15	; () banked
  9462  001920  8F42               	bsf	66,7,b	;volatile
  9463  001922                     l4483:
  9464                           
  9465                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  9466  001922  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  9467  001926  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  9468  00192A  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  9469  00192E  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  9470  001932  0E16               	movlw	22
  9471  001934  D006               	goto	u4870
  9472  001936                     u4875:
  9473  001936  0100               	movlb	0	; () banked
  9474  001938  90D8               	bcf	status,0,c
  9475  00193A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  9476  00193C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  9477  00193E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  9478  001940  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  9479  001942                     u4870:
  9480  001942  2EE8               	decfsz	wreg,f,c
  9481  001944  D7F8               	goto	u4875
  9482  001946  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9483  00194A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9484  00194E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9485  001952  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9486                           
  9487                           ; BSR set to: 0
  9488                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  9489  001956  0100               	movlb	0	; () banked
  9490  001958  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  9491  00195A  0100               	movlb	0	; () banked
  9492  00195C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9493  00195E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  9494  001960  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  9495  001962  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  9496                           
  9497                           ; BSR set to: 0
  9498                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  9499  001964  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  9500                           
  9501                           ;inc\CANlib.h: 332: }
  9502  001968  D059               	goto	l4503
  9503  00196A                     l366:
  9504                           
  9505                           ; BSR set to: 0
  9506                           ;inc\CANlib.h: 334: else
  9507                           ;inc\CANlib.h: 336: {
  9508                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  9509  00196A  010F               	movlb	15	; () banked
  9510  00196C  9742               	bcf	66,3,b	;volatile
  9511                           
  9512                           ; BSR set to: 15
  9513                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  9514  00196E  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  9515  001972  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  9516  001976  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  9517  00197A  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  9518  00197E  0E04               	movlw	4
  9519  001980  D006               	goto	u4880
  9520  001982                     u4885:
  9521  001982  0100               	movlb	0	; () banked
  9522  001984  90D8               	bcf	status,0,c
  9523  001986  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  9524  001988  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  9525  00198A  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  9526  00198C  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  9527  00198E                     u4880:
  9528  00198E  2EE8               	decfsz	wreg,f,c
  9529  001990  D7F8               	goto	u4885
  9530  001992  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9531  001996  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9532  00199A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9533  00199E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9534                           
  9535                           ; BSR set to: 0
  9536                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  9537  0019A2  0100               	movlb	0	; () banked
  9538  0019A4  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  9539  0019A6  0100               	movlb	0	; () banked
  9540  0019A8  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9541  0019AA  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  9542  0019AC  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  9543  0019AE  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  9544                           
  9545                           ; BSR set to: 0
  9546                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  9547  0019B0  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  9548                           
  9549                           ; BSR set to: 0
  9550                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  9551  0019B4  0E07               	movlw	7
  9552  0019B6  0100               	movlb	0	; () banked
  9553  0019B8  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  9554  0019BA  0100               	movlb	0	; () banked
  9555  0019BC  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9556  0019BE  0E00               	movlw	0
  9557  0019C0  0100               	movlb	0	; () banked
  9558  0019C2  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  9559  0019C4  0100               	movlb	0	; () banked
  9560  0019C6  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  9561  0019C8  0E00               	movlw	0
  9562  0019CA  0100               	movlb	0	; () banked
  9563  0019CC  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  9564  0019CE  0100               	movlb	0	; () banked
  9565  0019D0  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  9566  0019D2  0E00               	movlw	0
  9567  0019D4  0100               	movlb	0	; () banked
  9568  0019D6  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  9569  0019D8  0100               	movlb	0	; () banked
  9570  0019DA  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  9571                           
  9572                           ; BSR set to: 0
  9573                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  9574  0019DC  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  9575  0019E0  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  9576  0019E4  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  9577  0019E8  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  9578  0019EC  0E05               	movlw	5
  9579  0019EE                     u4895:
  9580  0019EE  90D8               	bcf	status,0,c
  9581  0019F0  0100               	movlb	0	; () banked
  9582  0019F2  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  9583  0019F4  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  9584  0019F6  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  9585  0019F8  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  9586  0019FA  2EE8               	decfsz	wreg,f,c
  9587  0019FC  D7F8               	goto	u4895
  9588  0019FE  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9589  001A02  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9590  001A06  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9591  001A0A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9592                           
  9593                           ; BSR set to: 0
  9594                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  9595  001A0E  010F               	movlb	15	; () banked
  9596  001A10  5142               	movf	66,w,b	;volatile
  9597  001A12  0B1F               	andlw	31
  9598  001A14  010F               	movlb	15	; () banked
  9599  001A16  6F42               	movwf	66,b	;volatile
  9600                           
  9601                           ; BSR set to: 15
  9602                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  9603  001A18  C083  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  9604  001A1C                     l4503:
  9605                           
  9606                           ;inc\CANlib.h: 347: }
  9607                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  9608  001A1C  0100               	movlb	0	; () banked
  9609  001A1E  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  9610  001A20  D003               	goto	l373
  9611                           
  9612                           ; BSR set to: 0
  9613                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  9614  001A22  010F               	movlb	15	; () banked
  9615  001A24  8140               	bsf	64,0,b	;volatile
  9616  001A26  D002               	goto	l374
  9617  001A28                     l373:
  9618                           
  9619                           ; BSR set to: 0
  9620                           ;inc\CANlib.h: 351: else
  9621                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  9622  001A28  010F               	movlb	15	; () banked
  9623  001A2A  9140               	bcf	64,0,b	;volatile
  9624  001A2C                     l374:
  9625                           
  9626                           ; BSR set to: 15
  9627                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  9628  001A2C  0100               	movlb	0	; () banked
  9629  001A2E  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  9630  001A30  D003               	goto	l375
  9631                           
  9632                           ; BSR set to: 0
  9633                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  9634  001A32  010F               	movlb	15	; () banked
  9635  001A34  8340               	bsf	64,1,b	;volatile
  9636  001A36  D002               	goto	l4509
  9637  001A38                     l375:
  9638                           
  9639                           ; BSR set to: 0
  9640                           ;inc\CANlib.h: 355: else
  9641                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  9642  001A38  010F               	movlb	15	; () banked
  9643  001A3A  9340               	bcf	64,1,b	;volatile
  9644  001A3C                     l4509:
  9645                           
  9646                           ; BSR set to: 15
  9647                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  9648  001A3C  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  9649  001A40  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  9650  001A44  50DF               	movf	indf2,w,c
  9651  001A46  010F               	movlb	15	; () banked
  9652  001A48  6F46               	movwf	70,b	;volatile
  9653                           
  9654                           ; BSR set to: 15
  9655                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  9656  001A4A  0100               	movlb	0	; () banked
  9657  001A4C  EE20 F001          	lfsr	2,1
  9658  001A50  517B               	movf	CANsendMessage@data& (0+255),w,b
  9659  001A52  26D9               	addwf	fsr2l,f,c
  9660  001A54  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9661  001A56  22DA               	addwfc	fsr2h,f,c
  9662  001A58  50DF               	movf	indf2,w,c
  9663  001A5A  010F               	movlb	15	; () banked
  9664  001A5C  6F47               	movwf	71,b	;volatile
  9665                           
  9666                           ; BSR set to: 15
  9667                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  9668  001A5E  0100               	movlb	0	; () banked
  9669  001A60  EE20 F002          	lfsr	2,2
  9670  001A64  517B               	movf	CANsendMessage@data& (0+255),w,b
  9671  001A66  26D9               	addwf	fsr2l,f,c
  9672  001A68  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9673  001A6A  22DA               	addwfc	fsr2h,f,c
  9674  001A6C  50DF               	movf	indf2,w,c
  9675  001A6E  010F               	movlb	15	; () banked
  9676  001A70  6F48               	movwf	72,b	;volatile
  9677                           
  9678                           ; BSR set to: 15
  9679                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  9680  001A72  0100               	movlb	0	; () banked
  9681  001A74  EE20 F003          	lfsr	2,3
  9682  001A78  517B               	movf	CANsendMessage@data& (0+255),w,b
  9683  001A7A  26D9               	addwf	fsr2l,f,c
  9684  001A7C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9685  001A7E  22DA               	addwfc	fsr2h,f,c
  9686  001A80  50DF               	movf	indf2,w,c
  9687  001A82  010F               	movlb	15	; () banked
  9688  001A84  6F49               	movwf	73,b	;volatile
  9689                           
  9690                           ; BSR set to: 15
  9691                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  9692  001A86  0100               	movlb	0	; () banked
  9693  001A88  EE20 F004          	lfsr	2,4
  9694  001A8C  517B               	movf	CANsendMessage@data& (0+255),w,b
  9695  001A8E  26D9               	addwf	fsr2l,f,c
  9696  001A90  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9697  001A92  22DA               	addwfc	fsr2h,f,c
  9698  001A94  50DF               	movf	indf2,w,c
  9699  001A96  010F               	movlb	15	; () banked
  9700  001A98  6F4A               	movwf	74,b	;volatile
  9701                           
  9702                           ; BSR set to: 15
  9703                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  9704  001A9A  0100               	movlb	0	; () banked
  9705  001A9C  EE20 F005          	lfsr	2,5
  9706  001AA0  517B               	movf	CANsendMessage@data& (0+255),w,b
  9707  001AA2  26D9               	addwf	fsr2l,f,c
  9708  001AA4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9709  001AA6  22DA               	addwfc	fsr2h,f,c
  9710  001AA8  50DF               	movf	indf2,w,c
  9711  001AAA  010F               	movlb	15	; () banked
  9712  001AAC  6F4B               	movwf	75,b	;volatile
  9713                           
  9714                           ; BSR set to: 15
  9715                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  9716  001AAE  0100               	movlb	0	; () banked
  9717  001AB0  EE20 F006          	lfsr	2,6
  9718  001AB4  517B               	movf	CANsendMessage@data& (0+255),w,b
  9719  001AB6  26D9               	addwf	fsr2l,f,c
  9720  001AB8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9721  001ABA  22DA               	addwfc	fsr2h,f,c
  9722  001ABC  50DF               	movf	indf2,w,c
  9723  001ABE  010F               	movlb	15	; () banked
  9724  001AC0  6F4C               	movwf	76,b	;volatile
  9725                           
  9726                           ; BSR set to: 15
  9727                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  9728  001AC2  0100               	movlb	0	; () banked
  9729  001AC4  EE20 F007          	lfsr	2,7
  9730  001AC8  517B               	movf	CANsendMessage@data& (0+255),w,b
  9731  001ACA  26D9               	addwf	fsr2l,f,c
  9732  001ACC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9733  001ACE  22DA               	addwfc	fsr2h,f,c
  9734  001AD0  50DF               	movf	indf2,w,c
  9735  001AD2  010F               	movlb	15	; () banked
  9736  001AD4  6F4D               	movwf	77,b	;volatile
  9737                           
  9738                           ; BSR set to: 15
  9739                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  9740  001AD6  010F               	movlb	15	; () banked
  9741  001AD8  8740               	bsf	64,3,b	;volatile
  9742                           
  9743                           ; BSR set to: 15
  9744                           ;inc\CANlib.h: 368: return;
  9745  001ADA  0012               	return	
  9746  001ADC                     l363:
  9747                           
  9748                           ; BSR set to: 15
  9749                           ;inc\CANlib.h: 369: }
  9750                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  9751  001ADC  010F               	movlb	15	; () banked
  9752  001ADE  B730               	btfsc	48,3,b	;volatile
  9753  001AE0  D13F               	goto	l378
  9754                           
  9755                           ; BSR set to: 15
  9756                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  9757  001AE2  C07D  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  9758                           
  9759                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  9760  001AE6  0100               	movlb	0	; () banked
  9761  001AE8  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  9762  001AEA  D003               	goto	l379
  9763                           
  9764                           ; BSR set to: 0
  9765                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  9766  001AEC  010F               	movlb	15	; () banked
  9767  001AEE  8D35               	bsf	53,6,b	;volatile
  9768  001AF0  D002               	goto	l380
  9769  001AF2                     l379:
  9770                           
  9771                           ; BSR set to: 0
  9772                           ;inc\CANlib.h: 378: else
  9773                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  9774  001AF2  010F               	movlb	15	; () banked
  9775  001AF4  9D35               	bcf	53,6,b	;volatile
  9776  001AF6                     l380:
  9777                           
  9778                           ; BSR set to: 15
  9779                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  9780  001AF6  0100               	movlb	0	; () banked
  9781  001AF8  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  9782  001AFA  D079               	goto	l381
  9783                           
  9784                           ; BSR set to: 0
  9785                           ;inc\CANlib.h: 382: {
  9786                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  9787  001AFC  0100               	movlb	0	; () banked
  9788  001AFE  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  9789  001B00  0100               	movlb	0	; () banked
  9790  001B02  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9791  001B04  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  9792  001B06  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  9793  001B08  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  9794                           
  9795                           ; BSR set to: 0
  9796                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  9797  001B0A  C083  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  9798                           
  9799                           ; BSR set to: 0
  9800                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  9801  001B0E  0E00               	movlw	0
  9802  001B10  0100               	movlb	0	; () banked
  9803  001B12  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  9804  001B14  0100               	movlb	0	; () banked
  9805  001B16  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9806  001B18  0EFF               	movlw	255
  9807  001B1A  0100               	movlb	0	; () banked
  9808  001B1C  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  9809  001B1E  0100               	movlb	0	; () banked
  9810  001B20  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  9811  001B22  0E00               	movlw	0
  9812  001B24  0100               	movlb	0	; () banked
  9813  001B26  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  9814  001B28  0100               	movlb	0	; () banked
  9815  001B2A  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  9816  001B2C  0E00               	movlw	0
  9817  001B2E  0100               	movlb	0	; () banked
  9818  001B30  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  9819  001B32  0100               	movlb	0	; () banked
  9820  001B34  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  9821                           
  9822                           ; BSR set to: 0
  9823                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  9824  001B36  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  9825  001B3A  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  9826  001B3E  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  9827  001B42  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  9828  001B46  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  9829  001B4A  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  9830  001B4E  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  9831  001B52  0100               	movlb	0	; () banked
  9832  001B54  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  9833  001B56  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9834  001B5A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9835  001B5E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9836  001B62  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9837                           
  9838                           ; BSR set to: 0
  9839                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  9840  001B66  C083  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  9841                           
  9842                           ; BSR set to: 0
  9843                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  9844  001B6A  0E00               	movlw	0
  9845  001B6C  010F               	movlb	15	; () banked
  9846  001B6E  6F32               	movwf	50,b	;volatile
  9847                           
  9848                           ; BSR set to: 15
  9849                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  9850  001B70  010F               	movlb	15	; () banked
  9851  001B72  8732               	bsf	50,3,b	;volatile
  9852                           
  9853                           ; BSR set to: 15
  9854                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  9855  001B74  0100               	movlb	0	; () banked
  9856  001B76  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  9857  001B78  D002               	goto	l382
  9858                           
  9859                           ; BSR set to: 0
  9860                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  9861  001B7A  010F               	movlb	15	; () banked
  9862  001B7C  8132               	bsf	50,0,b	;volatile
  9863  001B7E                     l382:
  9864                           
  9865                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  9866  001B7E  0100               	movlb	0	; () banked
  9867  001B80  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  9868  001B82  D002               	goto	l383
  9869                           
  9870                           ; BSR set to: 0
  9871                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  9872  001B84  010F               	movlb	15	; () banked
  9873  001B86  8332               	bsf	50,1,b	;volatile
  9874  001B88                     l383:
  9875                           
  9876                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  9877  001B88  0100               	movlb	0	; () banked
  9878  001B8A  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  9879  001B8C  D002               	goto	l384
  9880                           
  9881                           ; BSR set to: 0
  9882                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  9883  001B8E  010F               	movlb	15	; () banked
  9884  001B90  8B32               	bsf	50,5,b	;volatile
  9885  001B92                     l384:
  9886                           
  9887                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  9888  001B92  0100               	movlb	0	; () banked
  9889  001B94  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  9890  001B96  D002               	goto	l385
  9891                           
  9892                           ; BSR set to: 0
  9893                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  9894  001B98  010F               	movlb	15	; () banked
  9895  001B9A  8D32               	bsf	50,6,b	;volatile
  9896  001B9C                     l385:
  9897                           
  9898                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  9899  001B9C  0100               	movlb	0	; () banked
  9900  001B9E  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  9901  001BA0  D002               	goto	l4559
  9902                           
  9903                           ; BSR set to: 0
  9904                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  9905  001BA2  010F               	movlb	15	; () banked
  9906  001BA4  8F32               	bsf	50,7,b	;volatile
  9907  001BA6                     l4559:
  9908                           
  9909                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  9910  001BA6  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  9911  001BAA  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  9912  001BAE  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  9913  001BB2  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  9914  001BB6  0E16               	movlw	22
  9915  001BB8  D006               	goto	u5000
  9916  001BBA                     u5005:
  9917  001BBA  0100               	movlb	0	; () banked
  9918  001BBC  90D8               	bcf	status,0,c
  9919  001BBE  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  9920  001BC0  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  9921  001BC2  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  9922  001BC4  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  9923  001BC6                     u5000:
  9924  001BC6  2EE8               	decfsz	wreg,f,c
  9925  001BC8  D7F8               	goto	u5005
  9926  001BCA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9927  001BCE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9928  001BD2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9929  001BD6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9930                           
  9931                           ; BSR set to: 0
  9932                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  9933  001BDA  0100               	movlb	0	; () banked
  9934  001BDC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  9935  001BDE  0100               	movlb	0	; () banked
  9936  001BE0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9937  001BE2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  9938  001BE4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  9939  001BE6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  9940                           
  9941                           ; BSR set to: 0
  9942                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  9943  001BE8  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  9944                           
  9945                           ;inc\CANlib.h: 407: }
  9946  001BEC  D059               	goto	l4579
  9947  001BEE                     l381:
  9948                           
  9949                           ; BSR set to: 0
  9950                           ;inc\CANlib.h: 409: else
  9951                           ;inc\CANlib.h: 411: {
  9952                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  9953  001BEE  010F               	movlb	15	; () banked
  9954  001BF0  9732               	bcf	50,3,b	;volatile
  9955                           
  9956                           ; BSR set to: 15
  9957                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  9958  001BF2  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  9959  001BF6  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  9960  001BFA  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  9961  001BFE  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  9962  001C02  0E04               	movlw	4
  9963  001C04  D006               	goto	u5010
  9964  001C06                     u5015:
  9965  001C06  0100               	movlb	0	; () banked
  9966  001C08  90D8               	bcf	status,0,c
  9967  001C0A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  9968  001C0C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  9969  001C0E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  9970  001C10  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  9971  001C12                     u5010:
  9972  001C12  2EE8               	decfsz	wreg,f,c
  9973  001C14  D7F8               	goto	u5015
  9974  001C16  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9975  001C1A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9976  001C1E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9977  001C22  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9978                           
  9979                           ; BSR set to: 0
  9980                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  9981  001C26  0100               	movlb	0	; () banked
  9982  001C28  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  9983  001C2A  0100               	movlb	0	; () banked
  9984  001C2C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9985  001C2E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  9986  001C30  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  9987  001C32  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  9988                           
  9989                           ; BSR set to: 0
  9990                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  9991  001C34  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  9992                           
  9993                           ; BSR set to: 0
  9994                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  9995  001C38  0E07               	movlw	7
  9996  001C3A  0100               	movlb	0	; () banked
  9997  001C3C  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  9998  001C3E  0100               	movlb	0	; () banked
  9999  001C40  6F83               	movwf	CANsendMessage@tamp& (0+255),b
 10000  001C42  0E00               	movlw	0
 10001  001C44  0100               	movlb	0	; () banked
 10002  001C46  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 10003  001C48  0100               	movlb	0	; () banked
 10004  001C4A  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 10005  001C4C  0E00               	movlw	0
 10006  001C4E  0100               	movlb	0	; () banked
 10007  001C50  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 10008  001C52  0100               	movlb	0	; () banked
 10009  001C54  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 10010  001C56  0E00               	movlw	0
 10011  001C58  0100               	movlb	0	; () banked
 10012  001C5A  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 10013  001C5C  0100               	movlb	0	; () banked
 10014  001C5E  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 10015                           
 10016                           ; BSR set to: 0
 10017                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 10018  001C60  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
 10019  001C64  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 10020  001C68  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 10021  001C6C  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 10022  001C70  0E05               	movlw	5
 10023  001C72                     u5025:
 10024  001C72  90D8               	bcf	status,0,c
 10025  001C74  0100               	movlb	0	; () banked
 10026  001C76  377F               	rlcf	??_CANsendMessage& (0+255),f,b
 10027  001C78  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 10028  001C7A  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 10029  001C7C  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 10030  001C7E  2EE8               	decfsz	wreg,f,c
 10031  001C80  D7F8               	goto	u5025
 10032  001C82  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
 10033  001C86  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 10034  001C8A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 10035  001C8E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 10036                           
 10037                           ; BSR set to: 0
 10038                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 10039  001C92  010F               	movlb	15	; () banked
 10040  001C94  5132               	movf	50,w,b	;volatile
 10041  001C96  0B1F               	andlw	31
 10042  001C98  010F               	movlb	15	; () banked
 10043  001C9A  6F32               	movwf	50,b	;volatile
 10044                           
 10045                           ; BSR set to: 15
 10046                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 10047  001C9C  C083  FF32         	movff	CANsendMessage@tamp,3890	;volatile
 10048  001CA0                     l4579:
 10049                           
 10050                           ;inc\CANlib.h: 422: }
 10051                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 10052  001CA0  0100               	movlb	0	; () banked
 10053  001CA2  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
 10054  001CA4  D003               	goto	l388
 10055                           
 10056                           ; BSR set to: 0
 10057                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 10058  001CA6  010F               	movlb	15	; () banked
 10059  001CA8  8130               	bsf	48,0,b	;volatile
 10060  001CAA  D002               	goto	l389
 10061  001CAC                     l388:
 10062                           
 10063                           ; BSR set to: 0
 10064                           ;inc\CANlib.h: 426: else
 10065                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 10066  001CAC  010F               	movlb	15	; () banked
 10067  001CAE  9130               	bcf	48,0,b	;volatile
 10068  001CB0                     l389:
 10069                           
 10070                           ; BSR set to: 15
 10071                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 10072  001CB0  0100               	movlb	0	; () banked
 10073  001CB2  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
 10074  001CB4  D003               	goto	l390
 10075                           
 10076                           ; BSR set to: 0
 10077                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 10078  001CB6  010F               	movlb	15	; () banked
 10079  001CB8  8330               	bsf	48,1,b	;volatile
 10080  001CBA  D002               	goto	l4585
 10081  001CBC                     l390:
 10082                           
 10083                           ; BSR set to: 0
 10084                           ;inc\CANlib.h: 430: else
 10085                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 10086  001CBC  010F               	movlb	15	; () banked
 10087  001CBE  9330               	bcf	48,1,b	;volatile
 10088  001CC0                     l4585:
 10089                           
 10090                           ; BSR set to: 15
 10091                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 10092  001CC0  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
 10093  001CC4  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
 10094  001CC8  50DF               	movf	indf2,w,c
 10095  001CCA  010F               	movlb	15	; () banked
 10096  001CCC  6F36               	movwf	54,b	;volatile
 10097                           
 10098                           ; BSR set to: 15
 10099                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 10100  001CCE  0100               	movlb	0	; () banked
 10101  001CD0  EE20 F001          	lfsr	2,1
 10102  001CD4  517B               	movf	CANsendMessage@data& (0+255),w,b
 10103  001CD6  26D9               	addwf	fsr2l,f,c
 10104  001CD8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10105  001CDA  22DA               	addwfc	fsr2h,f,c
 10106  001CDC  50DF               	movf	indf2,w,c
 10107  001CDE  010F               	movlb	15	; () banked
 10108  001CE0  6F37               	movwf	55,b	;volatile
 10109                           
 10110                           ; BSR set to: 15
 10111                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 10112  001CE2  0100               	movlb	0	; () banked
 10113  001CE4  EE20 F002          	lfsr	2,2
 10114  001CE8  517B               	movf	CANsendMessage@data& (0+255),w,b
 10115  001CEA  26D9               	addwf	fsr2l,f,c
 10116  001CEC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10117  001CEE  22DA               	addwfc	fsr2h,f,c
 10118  001CF0  50DF               	movf	indf2,w,c
 10119  001CF2  010F               	movlb	15	; () banked
 10120  001CF4  6F38               	movwf	56,b	;volatile
 10121                           
 10122                           ; BSR set to: 15
 10123                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 10124  001CF6  0100               	movlb	0	; () banked
 10125  001CF8  EE20 F003          	lfsr	2,3
 10126  001CFC  517B               	movf	CANsendMessage@data& (0+255),w,b
 10127  001CFE  26D9               	addwf	fsr2l,f,c
 10128  001D00  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10129  001D02  22DA               	addwfc	fsr2h,f,c
 10130  001D04  50DF               	movf	indf2,w,c
 10131  001D06  010F               	movlb	15	; () banked
 10132  001D08  6F39               	movwf	57,b	;volatile
 10133                           
 10134                           ; BSR set to: 15
 10135                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 10136  001D0A  0100               	movlb	0	; () banked
 10137  001D0C  EE20 F004          	lfsr	2,4
 10138  001D10  517B               	movf	CANsendMessage@data& (0+255),w,b
 10139  001D12  26D9               	addwf	fsr2l,f,c
 10140  001D14  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10141  001D16  22DA               	addwfc	fsr2h,f,c
 10142  001D18  50DF               	movf	indf2,w,c
 10143  001D1A  010F               	movlb	15	; () banked
 10144  001D1C  6F3A               	movwf	58,b	;volatile
 10145                           
 10146                           ; BSR set to: 15
 10147                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 10148  001D1E  0100               	movlb	0	; () banked
 10149  001D20  EE20 F005          	lfsr	2,5
 10150  001D24  517B               	movf	CANsendMessage@data& (0+255),w,b
 10151  001D26  26D9               	addwf	fsr2l,f,c
 10152  001D28  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10153  001D2A  22DA               	addwfc	fsr2h,f,c
 10154  001D2C  50DF               	movf	indf2,w,c
 10155  001D2E  010F               	movlb	15	; () banked
 10156  001D30  6F3B               	movwf	59,b	;volatile
 10157                           
 10158                           ; BSR set to: 15
 10159                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 10160  001D32  0100               	movlb	0	; () banked
 10161  001D34  EE20 F006          	lfsr	2,6
 10162  001D38  517B               	movf	CANsendMessage@data& (0+255),w,b
 10163  001D3A  26D9               	addwf	fsr2l,f,c
 10164  001D3C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10165  001D3E  22DA               	addwfc	fsr2h,f,c
 10166  001D40  50DF               	movf	indf2,w,c
 10167  001D42  010F               	movlb	15	; () banked
 10168  001D44  6F3C               	movwf	60,b	;volatile
 10169                           
 10170                           ; BSR set to: 15
 10171                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 10172  001D46  0100               	movlb	0	; () banked
 10173  001D48  EE20 F007          	lfsr	2,7
 10174  001D4C  517B               	movf	CANsendMessage@data& (0+255),w,b
 10175  001D4E  26D9               	addwf	fsr2l,f,c
 10176  001D50  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10177  001D52  22DA               	addwfc	fsr2h,f,c
 10178  001D54  50DF               	movf	indf2,w,c
 10179  001D56  010F               	movlb	15	; () banked
 10180  001D58  6F3D               	movwf	61,b	;volatile
 10181                           
 10182                           ; BSR set to: 15
 10183                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 10184  001D5A  010F               	movlb	15	; () banked
 10185  001D5C  8730               	bsf	48,3,b	;volatile
 10186                           
 10187                           ; BSR set to: 15
 10188                           ;inc\CANlib.h: 444: return;
 10189  001D5E  0012               	return	
 10190  001D60                     l378:
 10191                           
 10192                           ; BSR set to: 15
 10193                           ;inc\CANlib.h: 445: }
 10194                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 10195  001D60  010F               	movlb	15	; () banked
 10196  001D62  B720               	btfsc	32,3,b	;volatile
 10197  001D64  0012               	return	
 10198                           
 10199                           ; BSR set to: 15
 10200                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 10201  001D66  C07D  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
 10202                           
 10203                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 10204  001D6A  0100               	movlb	0	; () banked
 10205  001D6C  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
 10206  001D6E  D003               	goto	l393
 10207                           
 10208                           ; BSR set to: 0
 10209                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 10210  001D70  010F               	movlb	15	; () banked
 10211  001D72  8D25               	bsf	37,6,b	;volatile
 10212  001D74  D002               	goto	l394
 10213  001D76                     l393:
 10214                           
 10215                           ; BSR set to: 0
 10216                           ;inc\CANlib.h: 454: else
 10217                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 10218  001D76  010F               	movlb	15	; () banked
 10219  001D78  9D25               	bcf	37,6,b	;volatile
 10220  001D7A                     l394:
 10221                           
 10222                           ; BSR set to: 15
 10223                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 10224  001D7A  0100               	movlb	0	; () banked
 10225  001D7C  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
 10226  001D7E  D079               	goto	l395
 10227                           
 10228                           ; BSR set to: 0
 10229                           ;inc\CANlib.h: 458: {
 10230                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 10231  001D80  0100               	movlb	0	; () banked
 10232  001D82  5177               	movf	CANsendMessage@identifier& (0+255),w,b
 10233  001D84  0100               	movlb	0	; () banked
 10234  001D86  6F83               	movwf	CANsendMessage@tamp& (0+255),b
 10235  001D88  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 10236  001D8A  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 10237  001D8C  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 10238                           
 10239                           ; BSR set to: 0
 10240                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 10241  001D8E  C083  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 10242                           
 10243                           ; BSR set to: 0
 10244                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 10245  001D92  0E00               	movlw	0
 10246  001D94  0100               	movlb	0	; () banked
 10247  001D96  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
 10248  001D98  0100               	movlb	0	; () banked
 10249  001D9A  6F83               	movwf	CANsendMessage@tamp& (0+255),b
 10250  001D9C  0EFF               	movlw	255
 10251  001D9E  0100               	movlb	0	; () banked
 10252  001DA0  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 10253  001DA2  0100               	movlb	0	; () banked
 10254  001DA4  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 10255  001DA6  0E00               	movlw	0
 10256  001DA8  0100               	movlb	0	; () banked
 10257  001DAA  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 10258  001DAC  0100               	movlb	0	; () banked
 10259  001DAE  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 10260  001DB0  0E00               	movlw	0
 10261  001DB2  0100               	movlb	0	; () banked
 10262  001DB4  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 10263  001DB6  0100               	movlb	0	; () banked
 10264  001DB8  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 10265                           
 10266                           ; BSR set to: 0
 10267                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 10268  001DBA  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
 10269  001DBE  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 10270  001DC2  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 10271  001DC6  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 10272  001DCA  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
 10273  001DCE  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 10274  001DD2  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 10275  001DD6  0100               	movlb	0	; () banked
 10276  001DD8  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
 10277  001DDA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
 10278  001DDE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 10279  001DE2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 10280  001DE6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 10281                           
 10282                           ; BSR set to: 0
 10283                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 10284  001DEA  C083  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 10285                           
 10286                           ; BSR set to: 0
 10287                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 10288  001DEE  0E00               	movlw	0
 10289  001DF0  010F               	movlb	15	; () banked
 10290  001DF2  6F22               	movwf	34,b	;volatile
 10291                           
 10292                           ; BSR set to: 15
 10293                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 10294  001DF4  010F               	movlb	15	; () banked
 10295  001DF6  8722               	bsf	34,3,b	;volatile
 10296                           
 10297                           ; BSR set to: 15
 10298                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 10299  001DF8  0100               	movlb	0	; () banked
 10300  001DFA  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 10301  001DFC  D002               	goto	l396
 10302                           
 10303                           ; BSR set to: 0
 10304                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 10305  001DFE  010F               	movlb	15	; () banked
 10306  001E00  8122               	bsf	34,0,b	;volatile
 10307  001E02                     l396:
 10308                           
 10309                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 10310  001E02  0100               	movlb	0	; () banked
 10311  001E04  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 10312  001E06  D002               	goto	l397
 10313                           
 10314                           ; BSR set to: 0
 10315                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 10316  001E08  010F               	movlb	15	; () banked
 10317  001E0A  8322               	bsf	34,1,b	;volatile
 10318  001E0C                     l397:
 10319                           
 10320                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 10321  001E0C  0100               	movlb	0	; () banked
 10322  001E0E  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 10323  001E10  D002               	goto	l398
 10324                           
 10325                           ; BSR set to: 0
 10326                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 10327  001E12  010F               	movlb	15	; () banked
 10328  001E14  8B22               	bsf	34,5,b	;volatile
 10329  001E16                     l398:
 10330                           
 10331                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 10332  001E16  0100               	movlb	0	; () banked
 10333  001E18  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 10334  001E1A  D002               	goto	l399
 10335                           
 10336                           ; BSR set to: 0
 10337                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 10338  001E1C  010F               	movlb	15	; () banked
 10339  001E1E  8D22               	bsf	34,6,b	;volatile
 10340  001E20                     l399:
 10341                           
 10342                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 10343  001E20  0100               	movlb	0	; () banked
 10344  001E22  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 10345  001E24  D002               	goto	l4635
 10346                           
 10347                           ; BSR set to: 0
 10348                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 10349  001E26  010F               	movlb	15	; () banked
 10350  001E28  8F22               	bsf	34,7,b	;volatile
 10351  001E2A                     l4635:
 10352                           
 10353                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 10354  001E2A  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
 10355  001E2E  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 10356  001E32  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 10357  001E36  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 10358  001E3A  0E16               	movlw	22
 10359  001E3C  D006               	goto	u5130
 10360  001E3E                     u5135:
 10361  001E3E  0100               	movlb	0	; () banked
 10362  001E40  90D8               	bcf	status,0,c
 10363  001E42  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 10364  001E44  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 10365  001E46  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 10366  001E48  337F               	rrcf	??_CANsendMessage& (0+255),f,b
 10367  001E4A                     u5130:
 10368  001E4A  2EE8               	decfsz	wreg,f,c
 10369  001E4C  D7F8               	goto	u5135
 10370  001E4E  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
 10371  001E52  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 10372  001E56  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 10373  001E5A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 10374                           
 10375                           ; BSR set to: 0
 10376                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 10377  001E5E  0100               	movlb	0	; () banked
 10378  001E60  5183               	movf	CANsendMessage@tamp& (0+255),w,b
 10379  001E62  0100               	movlb	0	; () banked
 10380  001E64  6F83               	movwf	CANsendMessage@tamp& (0+255),b
 10381  001E66  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 10382  001E68  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 10383  001E6A  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 10384                           
 10385                           ; BSR set to: 0
 10386                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 10387  001E6C  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 10388                           
 10389                           ;inc\CANlib.h: 483: }
 10390  001E70  D059               	goto	l4655
 10391  001E72                     l395:
 10392                           
 10393                           ; BSR set to: 0
 10394                           ;inc\CANlib.h: 485: else
 10395                           ;inc\CANlib.h: 487: {
 10396                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 10397  001E72  010F               	movlb	15	; () banked
 10398  001E74  9722               	bcf	34,3,b	;volatile
 10399                           
 10400                           ; BSR set to: 15
 10401                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 10402  001E76  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
 10403  001E7A  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 10404  001E7E  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 10405  001E82  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 10406  001E86  0E04               	movlw	4
 10407  001E88  D006               	goto	u5140
 10408  001E8A                     u5145:
 10409  001E8A  0100               	movlb	0	; () banked
 10410  001E8C  90D8               	bcf	status,0,c
 10411  001E8E  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 10412  001E90  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 10413  001E92  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 10414  001E94  337F               	rrcf	??_CANsendMessage& (0+255),f,b
 10415  001E96                     u5140:
 10416  001E96  2EE8               	decfsz	wreg,f,c
 10417  001E98  D7F8               	goto	u5145
 10418  001E9A  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
 10419  001E9E  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 10420  001EA2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 10421  001EA6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 10422                           
 10423                           ; BSR set to: 0
 10424                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 10425  001EAA  0100               	movlb	0	; () banked
 10426  001EAC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
 10427  001EAE  0100               	movlb	0	; () banked
 10428  001EB0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
 10429  001EB2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 10430  001EB4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 10431  001EB6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 10432                           
 10433                           ; BSR set to: 0
 10434                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 10435  001EB8  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 10436                           
 10437                           ; BSR set to: 0
 10438                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 10439  001EBC  0E07               	movlw	7
 10440  001EBE  0100               	movlb	0	; () banked
 10441  001EC0  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
 10442  001EC2  0100               	movlb	0	; () banked
 10443  001EC4  6F83               	movwf	CANsendMessage@tamp& (0+255),b
 10444  001EC6  0E00               	movlw	0
 10445  001EC8  0100               	movlb	0	; () banked
 10446  001ECA  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 10447  001ECC  0100               	movlb	0	; () banked
 10448  001ECE  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 10449  001ED0  0E00               	movlw	0
 10450  001ED2  0100               	movlb	0	; () banked
 10451  001ED4  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 10452  001ED6  0100               	movlb	0	; () banked
 10453  001ED8  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 10454  001EDA  0E00               	movlw	0
 10455  001EDC  0100               	movlb	0	; () banked
 10456  001EDE  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 10457  001EE0  0100               	movlb	0	; () banked
 10458  001EE2  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 10459                           
 10460                           ; BSR set to: 0
 10461                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 10462  001EE4  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
 10463  001EE8  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 10464  001EEC  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 10465  001EF0  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 10466  001EF4  0E05               	movlw	5
 10467  001EF6                     u5155:
 10468  001EF6  90D8               	bcf	status,0,c
 10469  001EF8  0100               	movlb	0	; () banked
 10470  001EFA  377F               	rlcf	??_CANsendMessage& (0+255),f,b
 10471  001EFC  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 10472  001EFE  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 10473  001F00  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 10474  001F02  2EE8               	decfsz	wreg,f,c
 10475  001F04  D7F8               	goto	u5155
 10476  001F06  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
 10477  001F0A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 10478  001F0E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 10479  001F12  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 10480                           
 10481                           ; BSR set to: 0
 10482                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 10483  001F16  010F               	movlb	15	; () banked
 10484  001F18  5122               	movf	34,w,b	;volatile
 10485  001F1A  0B1F               	andlw	31
 10486  001F1C  010F               	movlb	15	; () banked
 10487  001F1E  6F22               	movwf	34,b	;volatile
 10488                           
 10489                           ; BSR set to: 15
 10490                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 10491  001F20  C083  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 10492  001F24                     l4655:
 10493                           
 10494                           ;inc\CANlib.h: 498: }
 10495                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 10496  001F24  0100               	movlb	0	; () banked
 10497  001F26  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
 10498  001F28  D003               	goto	l402
 10499                           
 10500                           ; BSR set to: 0
 10501                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 10502  001F2A  010F               	movlb	15	; () banked
 10503  001F2C  8120               	bsf	32,0,b	;volatile
 10504  001F2E  D002               	goto	l403
 10505  001F30                     l402:
 10506                           
 10507                           ; BSR set to: 0
 10508                           ;inc\CANlib.h: 502: else
 10509                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 10510  001F30  010F               	movlb	15	; () banked
 10511  001F32  9120               	bcf	32,0,b	;volatile
 10512  001F34                     l403:
 10513                           
 10514                           ; BSR set to: 15
 10515                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 10516  001F34  0100               	movlb	0	; () banked
 10517  001F36  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
 10518  001F38  D003               	goto	l404
 10519                           
 10520                           ; BSR set to: 0
 10521                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 10522  001F3A  010F               	movlb	15	; () banked
 10523  001F3C  8320               	bsf	32,1,b	;volatile
 10524  001F3E  D002               	goto	l4661
 10525  001F40                     l404:
 10526                           
 10527                           ; BSR set to: 0
 10528                           ;inc\CANlib.h: 506: else
 10529                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 10530  001F40  010F               	movlb	15	; () banked
 10531  001F42  9320               	bcf	32,1,b	;volatile
 10532  001F44                     l4661:
 10533                           
 10534                           ; BSR set to: 15
 10535                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 10536  001F44  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
 10537  001F48  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
 10538  001F4C  50DF               	movf	indf2,w,c
 10539  001F4E  010F               	movlb	15	; () banked
 10540  001F50  6F26               	movwf	38,b	;volatile
 10541                           
 10542                           ; BSR set to: 15
 10543                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 10544  001F52  0100               	movlb	0	; () banked
 10545  001F54  EE20 F001          	lfsr	2,1
 10546  001F58  517B               	movf	CANsendMessage@data& (0+255),w,b
 10547  001F5A  26D9               	addwf	fsr2l,f,c
 10548  001F5C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10549  001F5E  22DA               	addwfc	fsr2h,f,c
 10550  001F60  50DF               	movf	indf2,w,c
 10551  001F62  010F               	movlb	15	; () banked
 10552  001F64  6F27               	movwf	39,b	;volatile
 10553                           
 10554                           ; BSR set to: 15
 10555                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 10556  001F66  0100               	movlb	0	; () banked
 10557  001F68  EE20 F002          	lfsr	2,2
 10558  001F6C  517B               	movf	CANsendMessage@data& (0+255),w,b
 10559  001F6E  26D9               	addwf	fsr2l,f,c
 10560  001F70  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10561  001F72  22DA               	addwfc	fsr2h,f,c
 10562  001F74  50DF               	movf	indf2,w,c
 10563  001F76  010F               	movlb	15	; () banked
 10564  001F78  6F28               	movwf	40,b	;volatile
 10565                           
 10566                           ; BSR set to: 15
 10567                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 10568  001F7A  0100               	movlb	0	; () banked
 10569  001F7C  EE20 F003          	lfsr	2,3
 10570  001F80  517B               	movf	CANsendMessage@data& (0+255),w,b
 10571  001F82  26D9               	addwf	fsr2l,f,c
 10572  001F84  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10573  001F86  22DA               	addwfc	fsr2h,f,c
 10574  001F88  50DF               	movf	indf2,w,c
 10575  001F8A  010F               	movlb	15	; () banked
 10576  001F8C  6F29               	movwf	41,b	;volatile
 10577                           
 10578                           ; BSR set to: 15
 10579                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 10580  001F8E  0100               	movlb	0	; () banked
 10581  001F90  EE20 F004          	lfsr	2,4
 10582  001F94  517B               	movf	CANsendMessage@data& (0+255),w,b
 10583  001F96  26D9               	addwf	fsr2l,f,c
 10584  001F98  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10585  001F9A  22DA               	addwfc	fsr2h,f,c
 10586  001F9C  50DF               	movf	indf2,w,c
 10587  001F9E  010F               	movlb	15	; () banked
 10588  001FA0  6F2A               	movwf	42,b	;volatile
 10589                           
 10590                           ; BSR set to: 15
 10591                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 10592  001FA2  0100               	movlb	0	; () banked
 10593  001FA4  EE20 F005          	lfsr	2,5
 10594  001FA8  517B               	movf	CANsendMessage@data& (0+255),w,b
 10595  001FAA  26D9               	addwf	fsr2l,f,c
 10596  001FAC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10597  001FAE  22DA               	addwfc	fsr2h,f,c
 10598  001FB0  50DF               	movf	indf2,w,c
 10599  001FB2  010F               	movlb	15	; () banked
 10600  001FB4  6F2B               	movwf	43,b	;volatile
 10601                           
 10602                           ; BSR set to: 15
 10603                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 10604  001FB6  0100               	movlb	0	; () banked
 10605  001FB8  EE20 F006          	lfsr	2,6
 10606  001FBC  517B               	movf	CANsendMessage@data& (0+255),w,b
 10607  001FBE  26D9               	addwf	fsr2l,f,c
 10608  001FC0  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10609  001FC2  22DA               	addwfc	fsr2h,f,c
 10610  001FC4  50DF               	movf	indf2,w,c
 10611  001FC6  010F               	movlb	15	; () banked
 10612  001FC8  6F2C               	movwf	44,b	;volatile
 10613                           
 10614                           ; BSR set to: 15
 10615                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 10616  001FCA  0100               	movlb	0	; () banked
 10617  001FCC  EE20 F007          	lfsr	2,7
 10618  001FD0  517B               	movf	CANsendMessage@data& (0+255),w,b
 10619  001FD2  26D9               	addwf	fsr2l,f,c
 10620  001FD4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10621  001FD6  22DA               	addwfc	fsr2h,f,c
 10622  001FD8  50DF               	movf	indf2,w,c
 10623  001FDA  010F               	movlb	15	; () banked
 10624  001FDC  6F2D               	movwf	45,b	;volatile
 10625                           
 10626                           ; BSR set to: 15
 10627                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 10628  001FDE  010F               	movlb	15	; () banked
 10629  001FE0  8720               	bsf	32,3,b	;volatile
 10630                           
 10631                           ; BSR set to: 15
 10632                           ;inc\CANlib.h: 520: return;
 10633  001FE2  0012               	return	
 10634  001FE4                     __end_of_CANsendMessage:
 10635                           	opt stack 0
 10636                           tblptru	equ	0xFF8
 10637                           tblptrh	equ	0xFF7
 10638                           tblptrl	equ	0xFF6
 10639                           tablat	equ	0xFF5
 10640                           prodh	equ	0xFF4
 10641                           prodl	equ	0xFF3
 10642                           postinc0	equ	0xFEE
 10643                           wreg	equ	0xFE8
 10644                           postdec1	equ	0xFE5
 10645                           fsr1l	equ	0xFE1
 10646                           indf2	equ	0xFDF
 10647                           postinc2	equ	0xFDE
 10648                           postdec2	equ	0xFDD
 10649                           fsr2h	equ	0xFDA
 10650                           fsr2l	equ	0xFD9
 10651                           status	equ	0xFD8
 10652                           
 10653 ;; *************** function _CANisTxReady *****************
 10654 ;; Defined at:
 10655 ;;		line 1154 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 10656 ;; Parameters:    Size  Location     Type
 10657 ;;		None
 10658 ;; Auto vars:     Size  Location     Type
 10659 ;;		None
 10660 ;; Return value:  Size  Location     Type
 10661 ;;                  1    wreg      unsigned char 
 10662 ;; Registers used:
 10663 ;;		wreg, status,2
 10664 ;; Tracked objects:
 10665 ;;		On entry : 0/0
 10666 ;;		On exit  : 0/0
 10667 ;;		Unchanged: 0/0
 10668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10670 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10672 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10673 ;;Total ram usage:        1 bytes
 10674 ;; Hardware stack levels used:    1
 10675 ;; Hardware stack levels required when called:    4
 10676 ;; This function calls:
 10677 ;;		Nothing
 10678 ;; This function is called by:
 10679 ;;		_park_search
 10680 ;;		_can_send
 10681 ;; This function uses a non-reentrant model
 10682 ;;
 10683                           
 10684                           	psect	text28
 10685  005D48                     __ptext28:
 10686                           	opt stack 0
 10687  005D48                     _CANisTxReady:
 10688                           	opt stack 23
 10689                           
 10690                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 10691                           
 10692                           ; BSR set to: 15
 10693                           ;incstack = 0
 10694  005D48  0E01               	movlw	1
 10695  005D4A  0100               	movlb	0	; () banked
 10696  005D4C  6F77               	movwf	_CANisTxReady$2845& (0+255),b
 10697                           
 10698                           ; BSR set to: 0
 10699  005D4E  010F               	movlb	15	; () banked
 10700  005D50  A740               	btfss	64,3,b	;volatile
 10701  005D52  D009               	goto	l556
 10702                           
 10703                           ; BSR set to: 15
 10704  005D54  010F               	movlb	15	; () banked
 10705  005D56  A730               	btfss	48,3,b	;volatile
 10706  005D58  D006               	goto	l556
 10707                           
 10708                           ; BSR set to: 15
 10709  005D5A  010F               	movlb	15	; () banked
 10710  005D5C  A720               	btfss	32,3,b	;volatile
 10711  005D5E  D003               	goto	l556
 10712                           
 10713                           ; BSR set to: 15
 10714  005D60  0E00               	movlw	0
 10715  005D62  0100               	movlb	0	; () banked
 10716  005D64  6F77               	movwf	_CANisTxReady$2845& (0+255),b
 10717  005D66                     l556:
 10718  005D66  0100               	movlb	0	; () banked
 10719  005D68  5177               	movf	_CANisTxReady$2845& (0+255),w,b
 10720  005D6A  0012               	return	
 10721  005D6C                     __end_of_CANisTxReady:
 10722                           	opt stack 0
 10723                           tblptru	equ	0xFF8
 10724                           tblptrh	equ	0xFF7
 10725                           tblptrl	equ	0xFF6
 10726                           tablat	equ	0xFF5
 10727                           prodh	equ	0xFF4
 10728                           prodl	equ	0xFF3
 10729                           postinc0	equ	0xFEE
 10730                           wreg	equ	0xFE8
 10731                           postdec1	equ	0xFE5
 10732                           fsr1l	equ	0xFE1
 10733                           indf2	equ	0xFDF
 10734                           postinc2	equ	0xFDE
 10735                           postdec2	equ	0xFDD
 10736                           fsr2h	equ	0xFDA
 10737                           fsr2l	equ	0xFD9
 10738                           status	equ	0xFD8
 10739                           
 10740 ;; *************** function _configurazione *****************
 10741 ;; Defined at:
 10742 ;;		line 418 in file "parcheggio.c"
 10743 ;; Parameters:    Size  Location     Type
 10744 ;;		None
 10745 ;; Auto vars:     Size  Location     Type
 10746 ;;		None
 10747 ;; Return value:  Size  Location     Type
 10748 ;;		None               void
 10749 ;; Registers used:
 10750 ;;		wreg, status,2, status,0, cstack
 10751 ;; Tracked objects:
 10752 ;;		On entry : 0/0
 10753 ;;		On exit  : 0/0
 10754 ;;		Unchanged: 0/0
 10755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10760 ;;Total ram usage:        0 bytes
 10761 ;; Hardware stack levels used:    1
 10762 ;; Hardware stack levels required when called:    6
 10763 ;; This function calls:
 10764 ;;		_CANInitialize
 10765 ;; This function is called by:
 10766 ;;		_main
 10767 ;; This function uses a non-reentrant model
 10768 ;;
 10769                           
 10770                           	psect	text29
 10771  005AB6                     __ptext29:
 10772                           	opt stack 0
 10773  005AB6                     _configurazione:
 10774                           	opt stack 24
 10775                           
 10776                           ;parcheggio.c: 419: LATA = 0x00;
 10777                           
 10778                           ; BSR set to: 0
 10779                           ;incstack = 0
 10780  005AB6  0E00               	movlw	0
 10781  005AB8  6E89               	movwf	3977,c	;volatile
 10782                           
 10783                           ;parcheggio.c: 420: TRISA = 0b11110000;
 10784  005ABA  0EF0               	movlw	240
 10785  005ABC  6E92               	movwf	3986,c	;volatile
 10786                           
 10787                           ;parcheggio.c: 422: LATB = 0x00;
 10788  005ABE  0E00               	movlw	0
 10789  005AC0  6E8A               	movwf	3978,c	;volatile
 10790                           
 10791                           ;parcheggio.c: 423: TRISB = 0b10001010;
 10792  005AC2  0E8A               	movlw	138
 10793  005AC4  6E93               	movwf	3987,c	;volatile
 10794                           
 10795                           ;parcheggio.c: 425: LATC = 0x00;
 10796  005AC6  0E00               	movlw	0
 10797  005AC8  6E8B               	movwf	3979,c	;volatile
 10798                           
 10799                           ;parcheggio.c: 426: TRISC = 0b11111111;
 10800  005ACA  6894               	setf	3988,c	;volatile
 10801                           
 10802                           ;parcheggio.c: 428: ADCON1 = 0xFF;
 10803  005ACC  68C1               	setf	4033,c	;volatile
 10804                           
 10805                           ;parcheggio.c: 429: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG
      +                          _SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
 10806  005ACE  0E06               	movlw	6
 10807  005AD0  0100               	movlb	0	; () banked
 10808  005AD2  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 10809  005AD4  0E05               	movlw	5
 10810  005AD6  0100               	movlb	0	; () banked
 10811  005AD8  6F86               	movwf	CANInitialize@phaseSeg2& (0+255),b
 10812  005ADA  0E01               	movlw	1
 10813  005ADC  0100               	movlb	0	; () banked
 10814  005ADE  6F87               	movwf	CANInitialize@SJW& (0+255),b
 10815  005AE0  0E03               	movlw	3
 10816  005AE2  0100               	movlb	0	; () banked
 10817  005AE4  6F88               	movwf	CANInitialize@BRP& (0+255),b
 10818  005AE6  0E9D               	movlw	157
 10819  005AE8  0100               	movlb	0	; () banked
 10820  005AEA  6F89               	movwf	CANInitialize@flags& (0+255),b
 10821  005AEC  0E04               	movlw	4
 10822  005AEE  ECF7  F026         	call	_CANInitialize
 10823                           
 10824                           ;parcheggio.c: 431: RCONbits.IPEN = 1;
 10825  005AF2  8ED0               	bsf	4048,7,c	;volatile
 10826                           
 10827                           ;parcheggio.c: 432: PIR3bits.RXB1IF = 0;
 10828  005AF4  92A4               	bcf	4004,1,c	;volatile
 10829                           
 10830                           ;parcheggio.c: 433: PIR3bits.RXB0IF = 0;
 10831  005AF6  90A4               	bcf	4004,0,c	;volatile
 10832                           
 10833                           ;parcheggio.c: 434: IPR3bits.RXB1IP = 0;
 10834  005AF8  92A5               	bcf	4005,1,c	;volatile
 10835                           
 10836                           ;parcheggio.c: 435: IPR3bits.RXB0IP = 0;
 10837  005AFA  90A5               	bcf	4005,0,c	;volatile
 10838                           
 10839                           ;parcheggio.c: 436: PIE3bits.RXB1IE = 1;
 10840  005AFC  82A3               	bsf	4003,1,c	;volatile
 10841                           
 10842                           ;parcheggio.c: 437: PIE3bits.RXB0IE = 1;
 10843  005AFE  80A3               	bsf	4003,0,c	;volatile
 10844                           
 10845                           ;parcheggio.c: 438: INTCON2bits.TMR0IP = 0;
 10846  005B00  94F1               	bcf	intcon2,2,c	;volatile
 10847                           
 10848                           ;parcheggio.c: 439: T0CON = 0x80;
 10849  005B02  0E80               	movlw	128
 10850  005B04  6ED5               	movwf	4053,c	;volatile
 10851                           
 10852                           ;parcheggio.c: 440: T3CON = 0x11;
 10853  005B06  0E11               	movlw	17
 10854  005B08  6EB1               	movwf	4017,c	;volatile
 10855                           
 10856                           ;parcheggio.c: 441: TMR0H = 0x34;
 10857  005B0A  0E34               	movlw	52
 10858  005B0C  6ED7               	movwf	4055,c	;volatile
 10859                           
 10860                           ;parcheggio.c: 442: TMR0L = 0xE0;
 10861  005B0E  0EE0               	movlw	224
 10862  005B10  6ED6               	movwf	4054,c	;volatile
 10863                           
 10864                           ;parcheggio.c: 443: INTCONbits.TMR0IF = 0;
 10865  005B12  94F2               	bcf	intcon,2,c	;volatile
 10866                           
 10867                           ;parcheggio.c: 444: INTCONbits.TMR0IE = 1;
 10868  005B14  8AF2               	bsf	intcon,5,c	;volatile
 10869                           
 10870                           ;parcheggio.c: 445: INTCON2bits.INTEDG0 = 1;
 10871  005B16  8CF1               	bsf	intcon2,6,c	;volatile
 10872                           
 10873                           ;parcheggio.c: 446: INTCONbits.INT0IF = 0;
 10874  005B18  92F2               	bcf	intcon,1,c	;volatile
 10875                           
 10876                           ;parcheggio.c: 447: INTCONbits.INT0IE = 0;
 10877  005B1A  98F2               	bcf	intcon,4,c	;volatile
 10878                           
 10879                           ;parcheggio.c: 448: INTCONbits.GIEL = 1;
 10880  005B1C  8CF2               	bsf	intcon,6,c	;volatile
 10881                           
 10882                           ;parcheggio.c: 449: INTCONbits.GIEH = 1;
 10883  005B1E  8EF2               	bsf	intcon,7,c	;volatile
 10884  005B20  0012               	return		;funcret
 10885  005B22                     __end_of_configurazione:
 10886                           	opt stack 0
 10887                           tblptru	equ	0xFF8
 10888                           tblptrh	equ	0xFF7
 10889                           tblptrl	equ	0xFF6
 10890                           tablat	equ	0xFF5
 10891                           prodh	equ	0xFF4
 10892                           prodl	equ	0xFF3
 10893                           intcon	equ	0xFF2
 10894                           intcon2	equ	0xFF1
 10895                           postinc0	equ	0xFEE
 10896                           wreg	equ	0xFE8
 10897                           postdec1	equ	0xFE5
 10898                           fsr1l	equ	0xFE1
 10899                           indf2	equ	0xFDF
 10900                           postinc2	equ	0xFDE
 10901                           postdec2	equ	0xFDD
 10902                           fsr2h	equ	0xFDA
 10903                           fsr2l	equ	0xFD9
 10904                           status	equ	0xFD8
 10905                           
 10906 ;; *************** function _CANInitialize *****************
 10907 ;; Defined at:
 10908 ;;		line 218 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 10909 ;; Parameters:    Size  Location     Type
 10910 ;;  propSeg         1    wreg     unsigned char 
 10911 ;;  phaseSeg1       1   37[BANK0 ] unsigned char 
 10912 ;;  phaseSeg2       1   38[BANK0 ] unsigned char 
 10913 ;;  SJW             1   39[BANK0 ] unsigned char 
 10914 ;;  BRP             1   40[BANK0 ] unsigned char 
 10915 ;;  flags           1   41[BANK0 ] enum E16313
 10916 ;; Auto vars:     Size  Location     Type
 10917 ;;  propSeg         1   46[BANK0 ] unsigned char 
 10918 ;;  FilterConfig    1   48[BANK0 ] unsigned char 
 10919 ;;  FilterConfig    1   47[BANK0 ] unsigned char 
 10920 ;; Return value:  Size  Location     Type
 10921 ;;		None               void
 10922 ;; Registers used:
 10923 ;;		wreg, status,2, status,0, cstack
 10924 ;; Tracked objects:
 10925 ;;		On entry : 0/0
 10926 ;;		On exit  : 0/0
 10927 ;;		Unchanged: 0/0
 10928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10929 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10930 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10931 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10932 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10933 ;;Total ram usage:       12 bytes
 10934 ;; Hardware stack levels used:    1
 10935 ;; Hardware stack levels required when called:    5
 10936 ;; This function calls:
 10937 ;;		_CANOperationMode
 10938 ;;		_CANSetFilter
 10939 ;;		_CANSetMask
 10940 ;; This function is called by:
 10941 ;;		_configurazione
 10942 ;; This function uses a non-reentrant model
 10943 ;;
 10944                           
 10945                           	psect	text30
 10946  004DEE                     __ptext30:
 10947                           	opt stack 0
 10948  004DEE                     _CANInitialize:
 10949                           	opt stack 24
 10950                           
 10951                           ;incstack = 0
 10952                           ;CANInitialize@propSeg stored from wreg
 10953  004DEE  0100               	movlb	0	; () banked
 10954  004DF0  6F8E               	movwf	CANInitialize@propSeg& (0+255),b
 10955                           
 10956                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
 10957                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
 10958                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
 10959  004DF2  0E80               	movlw	128
 10960  004DF4  ECB6  F02E         	call	_CANOperationMode
 10961                           
 10962                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
 10963  004DF8  0E00               	movlw	0
 10964  004DFA  6E70               	movwf	3952,c	;volatile
 10965                           
 10966                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
 10967  004DFC  0E00               	movlw	0
 10968  004DFE  6E71               	movwf	3953,c	;volatile
 10969                           
 10970                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
 10971  004E00  0E00               	movlw	0
 10972  004E02  6E72               	movwf	3954,c	;volatile
 10973                           
 10974                           ;inc\CANlib.h: 229: SJW= SJW << 6;
 10975  004E04  0100               	movlb	0	; () banked
 10976  004E06  4187               	rrncf	CANInitialize@SJW& (0+255),w,b
 10977  004E08  42E8               	rrncf	wreg,f,c
 10978  004E0A  0BC0               	andlw	192
 10979  004E0C  0100               	movlb	0	; () banked
 10980  004E0E  6F87               	movwf	CANInitialize@SJW& (0+255),b
 10981                           
 10982                           ; BSR set to: 0
 10983                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
 10984  004E10  0100               	movlb	0	; () banked
 10985  004E12  5187               	movf	CANInitialize@SJW& (0+255),w,b
 10986  004E14  1270               	iorwf	3952,f,c	;volatile
 10987                           
 10988                           ; BSR set to: 0
 10989                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
 10990  004E16  0100               	movlb	0	; () banked
 10991  004E18  5188               	movf	CANInitialize@BRP& (0+255),w,b
 10992  004E1A  1270               	iorwf	3952,f,c	;volatile
 10993                           
 10994                           ; BSR set to: 0
 10995                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
 10996  004E1C  0100               	movlb	0	; () banked
 10997  004E1E  518E               	movf	CANInitialize@propSeg& (0+255),w,b
 10998  004E20  1271               	iorwf	3953,f,c	;volatile
 10999                           
 11000                           ; BSR set to: 0
 11001                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
 11002  004E22  0100               	movlb	0	; () banked
 11003  004E24  3985               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
 11004  004E26  42E8               	rrncf	wreg,f,c
 11005  004E28  0BF8               	andlw	248
 11006  004E2A  0100               	movlb	0	; () banked
 11007  004E2C  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 11008                           
 11009                           ; BSR set to: 0
 11010                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
 11011  004E2E  0100               	movlb	0	; () banked
 11012  004E30  5185               	movf	CANInitialize@phaseSeg1& (0+255),w,b
 11013  004E32  1271               	iorwf	3953,f,c	;volatile
 11014                           
 11015                           ; BSR set to: 0
 11016                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
 11017  004E34  0100               	movlb	0	; () banked
 11018  004E36  A589               	btfss	CANInitialize@flags& (0+255),2,b
 11019                           
 11020                           ; BSR set to: 0
 11021                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
 11022  004E38  8C71               	bsf	3953,6,c	;volatile
 11023                           
 11024                           ; BSR set to: 0
 11025                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
 11026  004E3A  0100               	movlb	0	; () banked
 11027  004E3C  B189               	btfsc	CANInitialize@flags& (0+255),0,b
 11028                           
 11029                           ; BSR set to: 0
 11030                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
 11031  004E3E  8E71               	bsf	3953,7,c	;volatile
 11032                           
 11033                           ; BSR set to: 0
 11034                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
 11035                           
 11036                           ; BSR set to: 0
 11037  004E40  0100               	movlb	0	; () banked
 11038  004E42  5186               	movf	CANInitialize@phaseSeg2& (0+255),w,b
 11039  004E44  1272               	iorwf	3954,f,c	;volatile
 11040                           
 11041                           ; BSR set to: 0
 11042                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
 11043  004E46  0100               	movlb	0	; () banked
 11044  004E48  B389               	btfsc	CANInitialize@flags& (0+255),1,b
 11045                           
 11046                           ; BSR set to: 0
 11047                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
 11048  004E4A  8C72               	bsf	3954,6,c	;volatile
 11049                           
 11050                           ; BSR set to: 0
 11051                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
 11052                           
 11053                           ; BSR set to: 0
 11054  004E4C  0100               	movlb	0	; () banked
 11055  004E4E  5189               	movf	CANInitialize@flags& (0+255),w,b
 11056  004E50  0B60               	andlw	96
 11057  004E52  6E60               	movwf	3936,c	;volatile
 11058                           
 11059                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
 11060  004E54  0100               	movlb	0	; () banked
 11061  004E56  5189               	movf	CANInitialize@flags& (0+255),w,b
 11062  004E58  0B10               	andlw	16
 11063  004E5A  0AFF               	xorlw	255
 11064  004E5C  B4D8               	btfsc	status,2,c
 11065                           
 11066                           ; BSR set to: 0
 11067                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
 11068  004E5E  8460               	bsf	3936,2,c	;volatile
 11069                           
 11070                           ; BSR set to: 0
 11071                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
 11072  004E60  CF60 FF50          	movff	3936,3920	;volatile
 11073                           
 11074                           ; BSR set to: 0
 11075                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
 11076  004E64  0E00               	movlw	0
 11077  004E66  0100               	movlb	0	; () banked
 11078  004E68  6F77               	movwf	CANSetMask@mask& (0+255),b
 11079  004E6A  0E00               	movlw	0
 11080  004E6C  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 11081  004E6E  0E00               	movlw	0
 11082  004E70  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 11083  004E72  0E00               	movlw	0
 11084  004E74  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 11085  004E76  0EF7               	movlw	247
 11086  004E78  0100               	movlb	0	; () banked
 11087  004E7A  6F7B               	movwf	CANSetMask@type& (0+255),b
 11088  004E7C  0E01               	movlw	1
 11089  004E7E  EC4E  F01D         	call	_CANSetMask
 11090                           
 11091                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
 11092  004E82  0E00               	movlw	0
 11093  004E84  0100               	movlb	0	; () banked
 11094  004E86  6F77               	movwf	CANSetMask@mask& (0+255),b
 11095  004E88  0E00               	movlw	0
 11096  004E8A  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 11097  004E8C  0E00               	movlw	0
 11098  004E8E  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 11099  004E90  0E00               	movlw	0
 11100  004E92  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 11101  004E94  0EF7               	movlw	247
 11102  004E96  0100               	movlb	0	; () banked
 11103  004E98  6F7B               	movwf	CANSetMask@type& (0+255),b
 11104  004E9A  0E02               	movlw	2
 11105  004E9C  EC4E  F01D         	call	_CANSetMask
 11106                           
 11107                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
 11108  004EA0  D00F               	goto	l5415
 11109  004EA2                     l5409:
 11110                           
 11111                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
 11112  004EA2  0EF7               	movlw	247
 11113  004EA4  0100               	movlb	0	; () banked
 11114  004EA6  6F8F               	movwf	CANInitialize@FilterConfig1& (0+255),b
 11115  004EA8  D007               	goto	l5411
 11116  004EAA                     l358:
 11117                           
 11118                           ; BSR set to: 0
 11119                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
 11120  004EAA  0100               	movlb	0	; () banked
 11121  004EAC  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 11122                           
 11123                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
 11124  004EAE  0100               	movlb	0	; () banked
 11125  004EB0  6990               	setf	CANInitialize@FilterConfig2& (0+255),b
 11126                           
 11127                           ;inc\CANlib.h: 273: break;
 11128  004EB2  D028               	goto	l5417
 11129  004EB4                     l359:
 11130                           
 11131                           ; BSR set to: 0
 11132                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
 11133  004EB4  0100               	movlb	0	; () banked
 11134  004EB6  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 11135  004EB8                     l5411:
 11136                           
 11137                           ; BSR set to: 0
 11138                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
 11139  004EB8  0EF7               	movlw	247
 11140  004EBA  0100               	movlb	0	; () banked
 11141  004EBC  6F90               	movwf	CANInitialize@FilterConfig2& (0+255),b
 11142                           
 11143                           ; BSR set to: 0
 11144                           ;inc\CANlib.h: 278: }
 11145                           
 11146                           ;inc\CANlib.h: 277: break;
 11147  004EBE  D022               	goto	l5417
 11148  004EC0                     l5415:
 11149  004EC0  0E9F               	movlw	159
 11150  004EC2  0100               	movlb	0	; () banked
 11151  004EC4  6F8A               	movwf	??_CANInitialize& (0+255),b
 11152  004EC6  0EFF               	movlw	255
 11153  004EC8  0100               	movlb	0	; () banked
 11154  004ECA  6F8B               	movwf	(??_CANInitialize+1)& (0+255),b
 11155  004ECC  0100               	movlb	0	; () banked
 11156  004ECE  5189               	movf	CANInitialize@flags& (0+255),w,b
 11157  004ED0  0B60               	andlw	96
 11158  004ED2  0100               	movlb	0	; () banked
 11159  004ED4  6F8C               	movwf	(??_CANInitialize+2)& (0+255),b
 11160  004ED6  6B8D               	clrf	(??_CANInitialize+3)& (0+255),b
 11161  004ED8  0100               	movlb	0	; () banked
 11162  004EDA  518A               	movf	??_CANInitialize& (0+255),w,b
 11163  004EDC  0100               	movlb	0	; () banked
 11164  004EDE  138C               	iorwf	(??_CANInitialize+2)& (0+255),f,b
 11165  004EE0  0100               	movlb	0	; () banked
 11166  004EE2  518B               	movf	(??_CANInitialize+1)& (0+255),w,b
 11167  004EE4  0100               	movlb	0	; () banked
 11168  004EE6  138D               	iorwf	(??_CANInitialize+3)& (0+255),f,b
 11169                           
 11170                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11171                           ; Switch size 1, requested type "space"
 11172                           ; Number of cases is 1, Range of values is 0 to 0
 11173                           ; switch strategies available:
 11174                           ; Name         Instructions Cycles
 11175                           ; simple_byte            4     3 (average)
 11176                           ;	Chosen strategy is simple_byte
 11177  004EE8  0100               	movlb	0	; () banked
 11178  004EEA  518D               	movf	(??_CANInitialize+3)& (0+255),w,b
 11179  004EEC  0A00               	xorlw	0	; case 0
 11180  004EEE  A4D8               	btfss	status,2,c
 11181  004EF0  D7E1               	goto	l359
 11182                           
 11183                           ; BSR set to: 0
 11184                           ; Switch size 1, requested type "space"
 11185                           ; Number of cases is 2, Range of values is 191 to 223
 11186                           ; switch strategies available:
 11187                           ; Name         Instructions Cycles
 11188                           ; simple_byte            7     4 (average)
 11189                           ;	Chosen strategy is simple_byte
 11190  004EF2  0100               	movlb	0	; () banked
 11191  004EF4  518C               	movf	(??_CANInitialize+2)& (0+255),w,b
 11192  004EF6  0ABF               	xorlw	191	; case 191
 11193  004EF8  B4D8               	btfsc	status,2,c
 11194  004EFA  D7D7               	goto	l358
 11195  004EFC  0A60               	xorlw	96	; case 223
 11196  004EFE  B4D8               	btfsc	status,2,c
 11197  004F00  D7D0               	goto	l5409
 11198  004F02  D7D8               	goto	l359
 11199  004F04                     l5417:
 11200                           
 11201                           ; BSR set to: 0
 11202                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
 11203  004F04  0E00               	movlw	0
 11204  004F06  0100               	movlb	0	; () banked
 11205  004F08  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11206  004F0A  0E00               	movlw	0
 11207  004F0C  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11208  004F0E  0E00               	movlw	0
 11209  004F10  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11210  004F12  0E00               	movlw	0
 11211  004F14  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11212  004F16  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11213  004F1A  0E00               	movlw	0
 11214  004F1C  ECA9  F006         	call	_CANSetFilter
 11215                           
 11216                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
 11217  004F20  0E00               	movlw	0
 11218  004F22  0100               	movlb	0	; () banked
 11219  004F24  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11220  004F26  0E00               	movlw	0
 11221  004F28  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11222  004F2A  0E00               	movlw	0
 11223  004F2C  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11224  004F2E  0E00               	movlw	0
 11225  004F30  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11226  004F32  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11227  004F36  0E01               	movlw	1
 11228  004F38  ECA9  F006         	call	_CANSetFilter
 11229                           
 11230                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
 11231  004F3C  0E00               	movlw	0
 11232  004F3E  0100               	movlb	0	; () banked
 11233  004F40  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11234  004F42  0E00               	movlw	0
 11235  004F44  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11236  004F46  0E00               	movlw	0
 11237  004F48  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11238  004F4A  0E00               	movlw	0
 11239  004F4C  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11240  004F4E  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11241  004F52  0E02               	movlw	2
 11242  004F54  ECA9  F006         	call	_CANSetFilter
 11243                           
 11244                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
 11245  004F58  0E00               	movlw	0
 11246  004F5A  0100               	movlb	0	; () banked
 11247  004F5C  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11248  004F5E  0E00               	movlw	0
 11249  004F60  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11250  004F62  0E00               	movlw	0
 11251  004F64  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11252  004F66  0E00               	movlw	0
 11253  004F68  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11254  004F6A  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11255  004F6E  0E03               	movlw	3
 11256  004F70  ECA9  F006         	call	_CANSetFilter
 11257                           
 11258                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
 11259  004F74  0E00               	movlw	0
 11260  004F76  0100               	movlb	0	; () banked
 11261  004F78  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11262  004F7A  0E00               	movlw	0
 11263  004F7C  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11264  004F7E  0E00               	movlw	0
 11265  004F80  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11266  004F82  0E00               	movlw	0
 11267  004F84  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11268  004F86  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11269  004F8A  0E04               	movlw	4
 11270  004F8C  ECA9  F006         	call	_CANSetFilter
 11271                           
 11272                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
 11273  004F90  0E00               	movlw	0
 11274  004F92  0100               	movlb	0	; () banked
 11275  004F94  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11276  004F96  0E00               	movlw	0
 11277  004F98  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11278  004F9A  0E00               	movlw	0
 11279  004F9C  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11280  004F9E  0E00               	movlw	0
 11281  004FA0  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11282  004FA2  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11283  004FA6  0E05               	movlw	5
 11284  004FA8  ECA9  F006         	call	_CANSetFilter
 11285                           
 11286                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
 11287  004FAC  0E00               	movlw	0
 11288  004FAE  ECB6  F02E         	call	_CANOperationMode
 11289  004FB2  0012               	return		;funcret
 11290  004FB4                     __end_of_CANInitialize:
 11291                           	opt stack 0
 11292                           tblptru	equ	0xFF8
 11293                           tblptrh	equ	0xFF7
 11294                           tblptrl	equ	0xFF6
 11295                           tablat	equ	0xFF5
 11296                           prodh	equ	0xFF4
 11297                           prodl	equ	0xFF3
 11298                           intcon	equ	0xFF2
 11299                           intcon2	equ	0xFF1
 11300                           postinc0	equ	0xFEE
 11301                           wreg	equ	0xFE8
 11302                           postdec1	equ	0xFE5
 11303                           fsr1l	equ	0xFE1
 11304                           indf2	equ	0xFDF
 11305                           postinc2	equ	0xFDE
 11306                           postdec2	equ	0xFDD
 11307                           fsr2h	equ	0xFDA
 11308                           fsr2l	equ	0xFD9
 11309                           status	equ	0xFD8
 11310                           
 11311 ;; *************** function _CANSetMask *****************
 11312 ;; Defined at:
 11313 ;;		line 640 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 11314 ;; Parameters:    Size  Location     Type
 11315 ;;  numBuffer       1    wreg     enum E16347
 11316 ;;  mask            4   23[BANK0 ] unsigned long 
 11317 ;;  type            1   27[BANK0 ] enum E16313
 11318 ;; Auto vars:     Size  Location     Type
 11319 ;;  numBuffer       1   32[BANK0 ] enum E16347
 11320 ;;  tamp            4   33[BANK0 ] unsigned long 
 11321 ;; Return value:  Size  Location     Type
 11322 ;;		None               void
 11323 ;; Registers used:
 11324 ;;		wreg, status,2, status,0
 11325 ;; Tracked objects:
 11326 ;;		On entry : 0/0
 11327 ;;		On exit  : 0/0
 11328 ;;		Unchanged: 0/0
 11329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11330 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11331 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11332 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11333 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11334 ;;Total ram usage:       14 bytes
 11335 ;; Hardware stack levels used:    1
 11336 ;; Hardware stack levels required when called:    4
 11337 ;; This function calls:
 11338 ;;		Nothing
 11339 ;; This function is called by:
 11340 ;;		_CANInitialize
 11341 ;; This function uses a non-reentrant model
 11342 ;;
 11343                           
 11344                           	psect	text31
 11345  003A9C                     __ptext31:
 11346                           	opt stack 0
 11347  003A9C                     _CANSetMask:
 11348                           	opt stack 24
 11349                           
 11350                           ;incstack = 0
 11351                           ;CANSetMask@numBuffer stored from wreg
 11352  003A9C  0100               	movlb	0	; () banked
 11353  003A9E  6F80               	movwf	CANSetMask@numBuffer& (0+255),b
 11354                           
 11355                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
 11356  003AA0  0100               	movlb	0	; () banked
 11357  003AA2  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 11358  003AA4  A4D8               	btfss	status,2,c
 11359  003AA6  D056               	goto	l4885
 11360                           
 11361                           ; BSR set to: 0
 11362  003AA8  0100               	movlb	0	; () banked
 11363  003AAA  297B               	incf	CANSetMask@type& (0+255),w,b
 11364  003AAC  A4D8               	btfss	status,2,c
 11365  003AAE  D052               	goto	l4885
 11366                           
 11367                           ; BSR set to: 0
 11368                           ;inc\CANlib.h: 644: {
 11369                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
 11370  003AB0  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11371  003AB4  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11372  003AB8  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11373  003ABC  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11374  003AC0  0E04               	movlw	4
 11375  003AC2  D006               	goto	u5470
 11376  003AC4                     u5475:
 11377  003AC4  0100               	movlb	0	; () banked
 11378  003AC6  90D8               	bcf	status,0,c
 11379  003AC8  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11380  003ACA  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11381  003ACC  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11382  003ACE  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11383  003AD0                     u5470:
 11384  003AD0  2EE8               	decfsz	wreg,f,c
 11385  003AD2  D7F8               	goto	u5475
 11386  003AD4  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11387  003AD8  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11388  003ADC  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11389  003AE0  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11390                           
 11391                           ; BSR set to: 0
 11392                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
 11393  003AE4  0100               	movlb	0	; () banked
 11394  003AE6  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11395  003AE8  0100               	movlb	0	; () banked
 11396  003AEA  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11397  003AEC  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11398  003AEE  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11399  003AF0  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11400                           
 11401                           ; BSR set to: 0
 11402                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
 11403  003AF2  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 11404                           
 11405                           ; BSR set to: 0
 11406                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
 11407  003AF6  0E07               	movlw	7
 11408  003AF8  0100               	movlb	0	; () banked
 11409  003AFA  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11410  003AFC  0100               	movlb	0	; () banked
 11411  003AFE  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11412  003B00  0E00               	movlw	0
 11413  003B02  0100               	movlb	0	; () banked
 11414  003B04  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11415  003B06  0100               	movlb	0	; () banked
 11416  003B08  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11417  003B0A  0E00               	movlw	0
 11418  003B0C  0100               	movlb	0	; () banked
 11419  003B0E  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11420  003B10  0100               	movlb	0	; () banked
 11421  003B12  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11422  003B14  0E00               	movlw	0
 11423  003B16  0100               	movlb	0	; () banked
 11424  003B18  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11425  003B1A  0100               	movlb	0	; () banked
 11426  003B1C  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11427                           
 11428                           ; BSR set to: 0
 11429                           ;inc\CANlib.h: 650: tamp = tamp << 5;
 11430  003B1E  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11431  003B22  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11432  003B26  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11433  003B2A  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11434  003B2E  0E05               	movlw	5
 11435  003B30                     u5485:
 11436  003B30  90D8               	bcf	status,0,c
 11437  003B32  0100               	movlb	0	; () banked
 11438  003B34  377C               	rlcf	??_CANSetMask& (0+255),f,b
 11439  003B36  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 11440  003B38  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 11441  003B3A  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 11442  003B3C  2EE8               	decfsz	wreg,f,c
 11443  003B3E  D7F8               	goto	u5485
 11444  003B40  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11445  003B44  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11446  003B48  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11447  003B4C  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11448                           
 11449                           ; BSR set to: 0
 11450                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
 11451  003B50  C081  FF19         	movff	CANSetMask@tamp,3865	;volatile
 11452  003B54                     l4885:
 11453                           
 11454                           ; BSR set to: 0
 11455                           ;inc\CANlib.h: 652: }
 11456                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
 11457  003B54  0E02               	movlw	2
 11458  003B56  0100               	movlb	0	; () banked
 11459  003B58  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 11460  003B5A  A4D8               	btfss	status,2,c
 11461  003B5C  D056               	goto	l4901
 11462                           
 11463                           ; BSR set to: 0
 11464  003B5E  0100               	movlb	0	; () banked
 11465  003B60  297B               	incf	CANSetMask@type& (0+255),w,b
 11466  003B62  A4D8               	btfss	status,2,c
 11467  003B64  D052               	goto	l4901
 11468                           
 11469                           ; BSR set to: 0
 11470                           ;inc\CANlib.h: 655: {
 11471                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
 11472  003B66  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11473  003B6A  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11474  003B6E  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11475  003B72  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11476  003B76  0E04               	movlw	4
 11477  003B78  D006               	goto	u5510
 11478  003B7A                     u5515:
 11479  003B7A  0100               	movlb	0	; () banked
 11480  003B7C  90D8               	bcf	status,0,c
 11481  003B7E  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11482  003B80  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11483  003B82  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11484  003B84  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11485  003B86                     u5510:
 11486  003B86  2EE8               	decfsz	wreg,f,c
 11487  003B88  D7F8               	goto	u5515
 11488  003B8A  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11489  003B8E  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11490  003B92  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11491  003B96  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11492                           
 11493                           ; BSR set to: 0
 11494                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
 11495  003B9A  0100               	movlb	0	; () banked
 11496  003B9C  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11497  003B9E  0100               	movlb	0	; () banked
 11498  003BA0  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11499  003BA2  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11500  003BA4  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11501  003BA6  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11502                           
 11503                           ; BSR set to: 0
 11504                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
 11505  003BA8  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 11506                           
 11507                           ; BSR set to: 0
 11508                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
 11509  003BAC  0E07               	movlw	7
 11510  003BAE  0100               	movlb	0	; () banked
 11511  003BB0  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11512  003BB2  0100               	movlb	0	; () banked
 11513  003BB4  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11514  003BB6  0E00               	movlw	0
 11515  003BB8  0100               	movlb	0	; () banked
 11516  003BBA  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11517  003BBC  0100               	movlb	0	; () banked
 11518  003BBE  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11519  003BC0  0E00               	movlw	0
 11520  003BC2  0100               	movlb	0	; () banked
 11521  003BC4  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11522  003BC6  0100               	movlb	0	; () banked
 11523  003BC8  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11524  003BCA  0E00               	movlw	0
 11525  003BCC  0100               	movlb	0	; () banked
 11526  003BCE  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11527  003BD0  0100               	movlb	0	; () banked
 11528  003BD2  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11529                           
 11530                           ; BSR set to: 0
 11531                           ;inc\CANlib.h: 661: tamp = tamp << 5;
 11532  003BD4  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11533  003BD8  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11534  003BDC  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11535  003BE0  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11536  003BE4  0E05               	movlw	5
 11537  003BE6                     u5525:
 11538  003BE6  90D8               	bcf	status,0,c
 11539  003BE8  0100               	movlb	0	; () banked
 11540  003BEA  377C               	rlcf	??_CANSetMask& (0+255),f,b
 11541  003BEC  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 11542  003BEE  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 11543  003BF0  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 11544  003BF2  2EE8               	decfsz	wreg,f,c
 11545  003BF4  D7F8               	goto	u5525
 11546  003BF6  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11547  003BFA  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11548  003BFE  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11549  003C02  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11550                           
 11551                           ; BSR set to: 0
 11552                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
 11553  003C06  C081  FF1D         	movff	CANSetMask@tamp,3869	;volatile
 11554  003C0A                     l4901:
 11555                           
 11556                           ; BSR set to: 0
 11557                           ;inc\CANlib.h: 663: }
 11558                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
 11559  003C0A  0100               	movlb	0	; () banked
 11560  003C0C  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 11561  003C0E  A4D8               	btfss	status,2,c
 11562  003C10  D087               	goto	l4933
 11563                           
 11564                           ; BSR set to: 0
 11565  003C12  0EF7               	movlw	247
 11566  003C14  0100               	movlb	0	; () banked
 11567  003C16  197B               	xorwf	CANSetMask@type& (0+255),w,b
 11568  003C18  A4D8               	btfss	status,2,c
 11569  003C1A  D082               	goto	l4933
 11570                           
 11571                           ; BSR set to: 0
 11572                           ;inc\CANlib.h: 666: {
 11573                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
 11574  003C1C  0100               	movlb	0	; () banked
 11575  003C1E  5177               	movf	CANSetMask@mask& (0+255),w,b
 11576  003C20  0100               	movlb	0	; () banked
 11577  003C22  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11578  003C24  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11579  003C26  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11580  003C28  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11581                           
 11582                           ; BSR set to: 0
 11583                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
 11584  003C2A  C081  FF1B         	movff	CANSetMask@tamp,3867	;volatile
 11585                           
 11586                           ; BSR set to: 0
 11587                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
 11588  003C2E  0E00               	movlw	0
 11589  003C30  0100               	movlb	0	; () banked
 11590  003C32  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11591  003C34  0100               	movlb	0	; () banked
 11592  003C36  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11593  003C38  0EFF               	movlw	255
 11594  003C3A  0100               	movlb	0	; () banked
 11595  003C3C  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11596  003C3E  0100               	movlb	0	; () banked
 11597  003C40  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11598  003C42  0E00               	movlw	0
 11599  003C44  0100               	movlb	0	; () banked
 11600  003C46  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11601  003C48  0100               	movlb	0	; () banked
 11602  003C4A  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11603  003C4C  0E00               	movlw	0
 11604  003C4E  0100               	movlb	0	; () banked
 11605  003C50  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11606  003C52  0100               	movlb	0	; () banked
 11607  003C54  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11608                           
 11609                           ; BSR set to: 0
 11610                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
 11611  003C56  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11612  003C5A  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11613  003C5E  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11614  003C62  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11615  003C66  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 11616  003C6A  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 11617  003C6E  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 11618  003C72  0100               	movlb	0	; () banked
 11619  003C74  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 11620  003C76  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11621  003C7A  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11622  003C7E  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11623  003C82  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11624                           
 11625                           ; BSR set to: 0
 11626                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
 11627  003C86  C081  FF1A         	movff	CANSetMask@tamp,3866	;volatile
 11628                           
 11629                           ; BSR set to: 0
 11630                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
 11631  003C8A  0100               	movlb	0	; () banked
 11632  003C8C  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 11633  003C8E  D003               	goto	l432
 11634                           
 11635                           ; BSR set to: 0
 11636                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
 11637  003C90  010F               	movlb	15	; () banked
 11638  003C92  8119               	bsf	25,0,b	;volatile
 11639  003C94  D002               	goto	l433
 11640  003C96                     l432:
 11641                           
 11642                           ; BSR set to: 0
 11643                           ;inc\CANlib.h: 676: else
 11644                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
 11645  003C96  010F               	movlb	15	; () banked
 11646  003C98  9119               	bcf	25,0,b	;volatile
 11647  003C9A                     l433:
 11648                           
 11649                           ; BSR set to: 15
 11650                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
 11651  003C9A  0100               	movlb	0	; () banked
 11652  003C9C  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 11653  003C9E  D003               	goto	l434
 11654                           
 11655                           ; BSR set to: 0
 11656                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
 11657  003CA0  010F               	movlb	15	; () banked
 11658  003CA2  8319               	bsf	25,1,b	;volatile
 11659  003CA4  D002               	goto	l435
 11660  003CA6                     l434:
 11661                           
 11662                           ; BSR set to: 0
 11663                           ;inc\CANlib.h: 681: else
 11664                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
 11665  003CA6  010F               	movlb	15	; () banked
 11666  003CA8  9319               	bcf	25,1,b	;volatile
 11667  003CAA                     l435:
 11668                           
 11669                           ; BSR set to: 15
 11670                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
 11671  003CAA  0100               	movlb	0	; () banked
 11672  003CAC  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 11673  003CAE  D003               	goto	l436
 11674                           
 11675                           ; BSR set to: 0
 11676                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
 11677  003CB0  010F               	movlb	15	; () banked
 11678  003CB2  8B19               	bsf	25,5,b	;volatile
 11679  003CB4  D002               	goto	l437
 11680  003CB6                     l436:
 11681                           
 11682                           ; BSR set to: 0
 11683                           ;inc\CANlib.h: 686: else
 11684                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
 11685  003CB6  010F               	movlb	15	; () banked
 11686  003CB8  9B19               	bcf	25,5,b	;volatile
 11687  003CBA                     l437:
 11688                           
 11689                           ; BSR set to: 15
 11690                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
 11691  003CBA  0100               	movlb	0	; () banked
 11692  003CBC  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 11693  003CBE  D003               	goto	l438
 11694                           
 11695                           ; BSR set to: 0
 11696                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
 11697  003CC0  010F               	movlb	15	; () banked
 11698  003CC2  8D19               	bsf	25,6,b	;volatile
 11699  003CC4  D002               	goto	l439
 11700  003CC6                     l438:
 11701                           
 11702                           ; BSR set to: 0
 11703                           ;inc\CANlib.h: 691: else
 11704                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
 11705  003CC6  010F               	movlb	15	; () banked
 11706  003CC8  9D19               	bcf	25,6,b	;volatile
 11707  003CCA                     l439:
 11708                           
 11709                           ; BSR set to: 15
 11710                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
 11711  003CCA  0100               	movlb	0	; () banked
 11712  003CCC  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 11713  003CCE  D003               	goto	l440
 11714                           
 11715                           ; BSR set to: 0
 11716                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
 11717  003CD0  010F               	movlb	15	; () banked
 11718  003CD2  8F19               	bsf	25,7,b	;volatile
 11719  003CD4  D002               	goto	l4927
 11720  003CD6                     l440:
 11721                           
 11722                           ; BSR set to: 0
 11723                           ;inc\CANlib.h: 696: else
 11724                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
 11725  003CD6  010F               	movlb	15	; () banked
 11726  003CD8  9F19               	bcf	25,7,b	;volatile
 11727  003CDA                     l4927:
 11728                           
 11729                           ; BSR set to: 15
 11730                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
 11731  003CDA  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11732  003CDE  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11733  003CE2  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11734  003CE6  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11735  003CEA  0E16               	movlw	22
 11736  003CEC  D006               	goto	u5600
 11737  003CEE                     u5605:
 11738  003CEE  0100               	movlb	0	; () banked
 11739  003CF0  90D8               	bcf	status,0,c
 11740  003CF2  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11741  003CF4  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11742  003CF6  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11743  003CF8  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11744  003CFA                     u5600:
 11745  003CFA  2EE8               	decfsz	wreg,f,c
 11746  003CFC  D7F8               	goto	u5605
 11747  003CFE  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11748  003D02  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11749  003D06  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11750  003D0A  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11751                           
 11752                           ; BSR set to: 0
 11753                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
 11754  003D0E  0100               	movlb	0	; () banked
 11755  003D10  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11756  003D12  0100               	movlb	0	; () banked
 11757  003D14  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11758  003D16  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11759  003D18  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11760  003D1A  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11761                           
 11762                           ; BSR set to: 0
 11763                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
 11764  003D1C  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 11765  003D20                     l4933:
 11766                           
 11767                           ; BSR set to: 0
 11768                           ;inc\CANlib.h: 702: }
 11769                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
 11770  003D20  0E02               	movlw	2
 11771  003D22  0100               	movlb	0	; () banked
 11772  003D24  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 11773  003D26  A4D8               	btfss	status,2,c
 11774  003D28  0012               	return	
 11775                           
 11776                           ; BSR set to: 0
 11777  003D2A  0EF7               	movlw	247
 11778  003D2C  0100               	movlb	0	; () banked
 11779  003D2E  197B               	xorwf	CANSetMask@type& (0+255),w,b
 11780  003D30  A4D8               	btfss	status,2,c
 11781  003D32  0012               	return	
 11782                           
 11783                           ; BSR set to: 0
 11784                           ;inc\CANlib.h: 705: {
 11785                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
 11786  003D34  0100               	movlb	0	; () banked
 11787  003D36  5177               	movf	CANSetMask@mask& (0+255),w,b
 11788  003D38  0100               	movlb	0	; () banked
 11789  003D3A  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11790  003D3C  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11791  003D3E  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11792  003D40  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11793                           
 11794                           ; BSR set to: 0
 11795                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
 11796  003D42  C081  FF1F         	movff	CANSetMask@tamp,3871	;volatile
 11797                           
 11798                           ; BSR set to: 0
 11799                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
 11800  003D46  0E00               	movlw	0
 11801  003D48  0100               	movlb	0	; () banked
 11802  003D4A  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11803  003D4C  0100               	movlb	0	; () banked
 11804  003D4E  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11805  003D50  0EFF               	movlw	255
 11806  003D52  0100               	movlb	0	; () banked
 11807  003D54  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11808  003D56  0100               	movlb	0	; () banked
 11809  003D58  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11810  003D5A  0E00               	movlw	0
 11811  003D5C  0100               	movlb	0	; () banked
 11812  003D5E  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11813  003D60  0100               	movlb	0	; () banked
 11814  003D62  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11815  003D64  0E00               	movlw	0
 11816  003D66  0100               	movlb	0	; () banked
 11817  003D68  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11818  003D6A  0100               	movlb	0	; () banked
 11819  003D6C  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11820                           
 11821                           ; BSR set to: 0
 11822                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
 11823  003D6E  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11824  003D72  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11825  003D76  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11826  003D7A  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11827  003D7E  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 11828  003D82  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 11829  003D86  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 11830  003D8A  0100               	movlb	0	; () banked
 11831  003D8C  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 11832  003D8E  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11833  003D92  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11834  003D96  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11835  003D9A  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11836                           
 11837                           ; BSR set to: 0
 11838                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
 11839  003D9E  C081  FF1E         	movff	CANSetMask@tamp,3870	;volatile
 11840                           
 11841                           ; BSR set to: 0
 11842                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
 11843  003DA2  0100               	movlb	0	; () banked
 11844  003DA4  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 11845  003DA6  D003               	goto	l443
 11846                           
 11847                           ; BSR set to: 0
 11848                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
 11849  003DA8  010F               	movlb	15	; () banked
 11850  003DAA  811D               	bsf	29,0,b	;volatile
 11851  003DAC  D002               	goto	l444
 11852  003DAE                     l443:
 11853                           
 11854                           ; BSR set to: 0
 11855                           ;inc\CANlib.h: 715: else
 11856                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
 11857  003DAE  010F               	movlb	15	; () banked
 11858  003DB0  911D               	bcf	29,0,b	;volatile
 11859  003DB2                     l444:
 11860                           
 11861                           ; BSR set to: 15
 11862                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
 11863  003DB2  0100               	movlb	0	; () banked
 11864  003DB4  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 11865  003DB6  D003               	goto	l445
 11866                           
 11867                           ; BSR set to: 0
 11868                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
 11869  003DB8  010F               	movlb	15	; () banked
 11870  003DBA  831D               	bsf	29,1,b	;volatile
 11871  003DBC  D002               	goto	l446
 11872  003DBE                     l445:
 11873                           
 11874                           ; BSR set to: 0
 11875                           ;inc\CANlib.h: 720: else
 11876                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
 11877  003DBE  010F               	movlb	15	; () banked
 11878  003DC0  931D               	bcf	29,1,b	;volatile
 11879  003DC2                     l446:
 11880                           
 11881                           ; BSR set to: 15
 11882                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
 11883  003DC2  0100               	movlb	0	; () banked
 11884  003DC4  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 11885  003DC6  D003               	goto	l447
 11886                           
 11887                           ; BSR set to: 0
 11888                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
 11889  003DC8  010F               	movlb	15	; () banked
 11890  003DCA  8B1D               	bsf	29,5,b	;volatile
 11891  003DCC  D002               	goto	l448
 11892  003DCE                     l447:
 11893                           
 11894                           ; BSR set to: 0
 11895                           ;inc\CANlib.h: 725: else
 11896                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
 11897  003DCE  010F               	movlb	15	; () banked
 11898  003DD0  9B1D               	bcf	29,5,b	;volatile
 11899  003DD2                     l448:
 11900                           
 11901                           ; BSR set to: 15
 11902                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
 11903  003DD2  0100               	movlb	0	; () banked
 11904  003DD4  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 11905  003DD6  D003               	goto	l449
 11906                           
 11907                           ; BSR set to: 0
 11908                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
 11909  003DD8  010F               	movlb	15	; () banked
 11910  003DDA  8D1D               	bsf	29,6,b	;volatile
 11911  003DDC  D002               	goto	l450
 11912  003DDE                     l449:
 11913                           
 11914                           ; BSR set to: 0
 11915                           ;inc\CANlib.h: 730: else
 11916                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
 11917  003DDE  010F               	movlb	15	; () banked
 11918  003DE0  9D1D               	bcf	29,6,b	;volatile
 11919  003DE2                     l450:
 11920                           
 11921                           ; BSR set to: 15
 11922                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
 11923  003DE2  0100               	movlb	0	; () banked
 11924  003DE4  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 11925  003DE6  D003               	goto	l451
 11926                           
 11927                           ; BSR set to: 0
 11928                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
 11929  003DE8  010F               	movlb	15	; () banked
 11930  003DEA  8F1D               	bsf	29,7,b	;volatile
 11931  003DEC  D002               	goto	l4959
 11932  003DEE                     l451:
 11933                           
 11934                           ; BSR set to: 0
 11935                           ;inc\CANlib.h: 735: else
 11936                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
 11937  003DEE  010F               	movlb	15	; () banked
 11938  003DF0  9F1D               	bcf	29,7,b	;volatile
 11939  003DF2                     l4959:
 11940                           
 11941                           ; BSR set to: 15
 11942                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
 11943  003DF2  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11944  003DF6  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11945  003DFA  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11946  003DFE  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11947  003E02  0E16               	movlw	22
 11948  003E04  D006               	goto	u5680
 11949  003E06                     u5685:
 11950  003E06  0100               	movlb	0	; () banked
 11951  003E08  90D8               	bcf	status,0,c
 11952  003E0A  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11953  003E0C  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11954  003E0E  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11955  003E10  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11956  003E12                     u5680:
 11957  003E12  2EE8               	decfsz	wreg,f,c
 11958  003E14  D7F8               	goto	u5685
 11959  003E16  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11960  003E1A  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11961  003E1E  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11962  003E22  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11963                           
 11964                           ; BSR set to: 0
 11965                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
 11966  003E26  0100               	movlb	0	; () banked
 11967  003E28  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11968  003E2A  0100               	movlb	0	; () banked
 11969  003E2C  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11970  003E2E  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11971  003E30  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11972  003E32  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11973                           
 11974                           ; BSR set to: 0
 11975                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
 11976  003E34  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 11977  003E38  0012               	return	
 11978  003E3A                     __end_of_CANSetMask:
 11979                           	opt stack 0
 11980                           tblptru	equ	0xFF8
 11981                           tblptrh	equ	0xFF7
 11982                           tblptrl	equ	0xFF6
 11983                           tablat	equ	0xFF5
 11984                           prodh	equ	0xFF4
 11985                           prodl	equ	0xFF3
 11986                           intcon	equ	0xFF2
 11987                           intcon2	equ	0xFF1
 11988                           postinc0	equ	0xFEE
 11989                           wreg	equ	0xFE8
 11990                           postdec1	equ	0xFE5
 11991                           fsr1l	equ	0xFE1
 11992                           indf2	equ	0xFDF
 11993                           postinc2	equ	0xFDE
 11994                           postdec2	equ	0xFDD
 11995                           fsr2h	equ	0xFDA
 11996                           fsr2l	equ	0xFD9
 11997                           status	equ	0xFD8
 11998                           
 11999 ;; *************** function _CANSetFilter *****************
 12000 ;; Defined at:
 12001 ;;		line 748 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 12002 ;; Parameters:    Size  Location     Type
 12003 ;;  numBuffer       1    wreg     enum E16350
 12004 ;;  filter          4   23[BANK0 ] unsigned long 
 12005 ;;  type            1   27[BANK0 ] enum E16313
 12006 ;; Auto vars:     Size  Location     Type
 12007 ;;  numBuffer       1   32[BANK0 ] enum E16350
 12008 ;;  tamp            4   33[BANK0 ] unsigned long 
 12009 ;; Return value:  Size  Location     Type
 12010 ;;		None               void
 12011 ;; Registers used:
 12012 ;;		wreg, status,2, status,0
 12013 ;; Tracked objects:
 12014 ;;		On entry : 0/0
 12015 ;;		On exit  : 0/0
 12016 ;;		Unchanged: 0/0
 12017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12018 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12019 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12020 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12021 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12022 ;;Total ram usage:       14 bytes
 12023 ;; Hardware stack levels used:    1
 12024 ;; Hardware stack levels required when called:    4
 12025 ;; This function calls:
 12026 ;;		Nothing
 12027 ;; This function is called by:
 12028 ;;		_CANInitialize
 12029 ;; This function uses a non-reentrant model
 12030 ;;
 12031                           
 12032                           	psect	text32
 12033  000D52                     __ptext32:
 12034                           	opt stack 0
 12035  000D52                     _CANSetFilter:
 12036                           	opt stack 24
 12037                           
 12038                           ; BSR set to: 0
 12039                           ;incstack = 0
 12040                           ;CANSetFilter@numBuffer stored from wreg
 12041  000D52  0100               	movlb	0	; () banked
 12042  000D54  6F80               	movwf	CANSetFilter@numBuffer& (0+255),b
 12043                           
 12044                           ;inc\CANlib.h: 750: unsigned long tamp;
 12045                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
 12046  000D56  0100               	movlb	0	; () banked
 12047  000D58  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 12048  000D5A  0100               	movlb	0	; () banked
 12049  000D5C  A4D8               	btfss	status,2,c
 12050  000D5E  D058               	goto	l4983
 12051                           
 12052                           ; BSR set to: 0
 12053  000D60  0100               	movlb	0	; () banked
 12054  000D62  297B               	incf	CANSetFilter@type& (0+255),w,b
 12055  000D64  A4D8               	btfss	status,2,c
 12056  000D66  D054               	goto	l4983
 12057                           
 12058                           ; BSR set to: 0
 12059                           ;inc\CANlib.h: 753: {
 12060                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
 12061  000D68  010F               	movlb	15	; () banked
 12062  000D6A  9701               	bcf	1,3,b	;volatile
 12063                           
 12064                           ; BSR set to: 15
 12065                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
 12066  000D6C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12067  000D70  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12068  000D74  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12069  000D78  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12070  000D7C  0E04               	movlw	4
 12071  000D7E  D006               	goto	u5710
 12072  000D80                     u5715:
 12073  000D80  0100               	movlb	0	; () banked
 12074  000D82  90D8               	bcf	status,0,c
 12075  000D84  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12076  000D86  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12077  000D88  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12078  000D8A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12079  000D8C                     u5710:
 12080  000D8C  2EE8               	decfsz	wreg,f,c
 12081  000D8E  D7F8               	goto	u5715
 12082  000D90  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12083  000D94  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12084  000D98  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12085  000D9C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12086                           
 12087                           ; BSR set to: 0
 12088                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
 12089  000DA0  0100               	movlb	0	; () banked
 12090  000DA2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12091  000DA4  0100               	movlb	0	; () banked
 12092  000DA6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12093  000DA8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12094  000DAA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12095  000DAC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12096                           
 12097                           ; BSR set to: 0
 12098                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
 12099  000DAE  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 12100                           
 12101                           ; BSR set to: 0
 12102                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
 12103  000DB2  0E07               	movlw	7
 12104  000DB4  0100               	movlb	0	; () banked
 12105  000DB6  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12106  000DB8  0100               	movlb	0	; () banked
 12107  000DBA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12108  000DBC  0E00               	movlw	0
 12109  000DBE  0100               	movlb	0	; () banked
 12110  000DC0  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12111  000DC2  0100               	movlb	0	; () banked
 12112  000DC4  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12113  000DC6  0E00               	movlw	0
 12114  000DC8  0100               	movlb	0	; () banked
 12115  000DCA  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12116  000DCC  0100               	movlb	0	; () banked
 12117  000DCE  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12118  000DD0  0E00               	movlw	0
 12119  000DD2  0100               	movlb	0	; () banked
 12120  000DD4  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12121  000DD6  0100               	movlb	0	; () banked
 12122  000DD8  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12123                           
 12124                           ; BSR set to: 0
 12125                           ;inc\CANlib.h: 761: tamp = tamp << 5;
 12126  000DDA  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12127  000DDE  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12128  000DE2  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12129  000DE6  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12130  000DEA  0E05               	movlw	5
 12131  000DEC                     u5725:
 12132  000DEC  90D8               	bcf	status,0,c
 12133  000DEE  0100               	movlb	0	; () banked
 12134  000DF0  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12135  000DF2  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12136  000DF4  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12137  000DF6  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12138  000DF8  2EE8               	decfsz	wreg,f,c
 12139  000DFA  D7F8               	goto	u5725
 12140  000DFC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12141  000E00  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12142  000E04  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12143  000E08  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12144                           
 12145                           ; BSR set to: 0
 12146                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
 12147  000E0C  C081  FF01         	movff	CANSetFilter@tamp,3841	;volatile
 12148  000E10                     l4983:
 12149                           
 12150                           ; BSR set to: 0
 12151                           ;inc\CANlib.h: 763: }
 12152                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
 12153  000E10  0100               	movlb	0	; () banked
 12154  000E12  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 12155  000E14  A4D8               	btfss	status,2,c
 12156  000E16  D058               	goto	l5001
 12157                           
 12158                           ; BSR set to: 0
 12159  000E18  0100               	movlb	0	; () banked
 12160  000E1A  297B               	incf	CANSetFilter@type& (0+255),w,b
 12161  000E1C  A4D8               	btfss	status,2,c
 12162  000E1E  D054               	goto	l5001
 12163                           
 12164                           ; BSR set to: 0
 12165                           ;inc\CANlib.h: 766: {
 12166                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
 12167  000E20  010F               	movlb	15	; () banked
 12168  000E22  9705               	bcf	5,3,b	;volatile
 12169                           
 12170                           ; BSR set to: 15
 12171                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
 12172  000E24  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12173  000E28  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12174  000E2C  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12175  000E30  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12176  000E34  0E04               	movlw	4
 12177  000E36  D006               	goto	u5750
 12178  000E38                     u5755:
 12179  000E38  0100               	movlb	0	; () banked
 12180  000E3A  90D8               	bcf	status,0,c
 12181  000E3C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12182  000E3E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12183  000E40  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12184  000E42  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12185  000E44                     u5750:
 12186  000E44  2EE8               	decfsz	wreg,f,c
 12187  000E46  D7F8               	goto	u5755
 12188  000E48  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12189  000E4C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12190  000E50  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12191  000E54  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12192                           
 12193                           ; BSR set to: 0
 12194                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
 12195  000E58  0100               	movlb	0	; () banked
 12196  000E5A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12197  000E5C  0100               	movlb	0	; () banked
 12198  000E5E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12199  000E60  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12200  000E62  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12201  000E64  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12202                           
 12203                           ; BSR set to: 0
 12204                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
 12205  000E66  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 12206                           
 12207                           ; BSR set to: 0
 12208                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
 12209  000E6A  0E07               	movlw	7
 12210  000E6C  0100               	movlb	0	; () banked
 12211  000E6E  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12212  000E70  0100               	movlb	0	; () banked
 12213  000E72  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12214  000E74  0E00               	movlw	0
 12215  000E76  0100               	movlb	0	; () banked
 12216  000E78  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12217  000E7A  0100               	movlb	0	; () banked
 12218  000E7C  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12219  000E7E  0E00               	movlw	0
 12220  000E80  0100               	movlb	0	; () banked
 12221  000E82  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12222  000E84  0100               	movlb	0	; () banked
 12223  000E86  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12224  000E88  0E00               	movlw	0
 12225  000E8A  0100               	movlb	0	; () banked
 12226  000E8C  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12227  000E8E  0100               	movlb	0	; () banked
 12228  000E90  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12229                           
 12230                           ; BSR set to: 0
 12231                           ;inc\CANlib.h: 774: tamp = tamp << 5;
 12232  000E92  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12233  000E96  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12234  000E9A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12235  000E9E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12236  000EA2  0E05               	movlw	5
 12237  000EA4                     u5765:
 12238  000EA4  90D8               	bcf	status,0,c
 12239  000EA6  0100               	movlb	0	; () banked
 12240  000EA8  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12241  000EAA  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12242  000EAC  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12243  000EAE  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12244  000EB0  2EE8               	decfsz	wreg,f,c
 12245  000EB2  D7F8               	goto	u5765
 12246  000EB4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12247  000EB8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12248  000EBC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12249  000EC0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12250                           
 12251                           ; BSR set to: 0
 12252                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
 12253  000EC4  C081  FF05         	movff	CANSetFilter@tamp,3845	;volatile
 12254  000EC8                     l5001:
 12255                           
 12256                           ; BSR set to: 0
 12257                           ;inc\CANlib.h: 776: }
 12258                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
 12259  000EC8  0E02               	movlw	2
 12260  000ECA  0100               	movlb	0	; () banked
 12261  000ECC  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12262  000ECE  A4D8               	btfss	status,2,c
 12263  000ED0  D058               	goto	l5019
 12264                           
 12265                           ; BSR set to: 0
 12266  000ED2  0100               	movlb	0	; () banked
 12267  000ED4  297B               	incf	CANSetFilter@type& (0+255),w,b
 12268  000ED6  A4D8               	btfss	status,2,c
 12269  000ED8  D054               	goto	l5019
 12270                           
 12271                           ; BSR set to: 0
 12272                           ;inc\CANlib.h: 779: {
 12273                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
 12274  000EDA  010F               	movlb	15	; () banked
 12275  000EDC  9709               	bcf	9,3,b	;volatile
 12276                           
 12277                           ; BSR set to: 15
 12278                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
 12279  000EDE  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12280  000EE2  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12281  000EE6  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12282  000EEA  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12283  000EEE  0E04               	movlw	4
 12284  000EF0  D006               	goto	u5790
 12285  000EF2                     u5795:
 12286  000EF2  0100               	movlb	0	; () banked
 12287  000EF4  90D8               	bcf	status,0,c
 12288  000EF6  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12289  000EF8  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12290  000EFA  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12291  000EFC  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12292  000EFE                     u5790:
 12293  000EFE  2EE8               	decfsz	wreg,f,c
 12294  000F00  D7F8               	goto	u5795
 12295  000F02  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12296  000F06  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12297  000F0A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12298  000F0E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12299                           
 12300                           ; BSR set to: 0
 12301                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
 12302  000F12  0100               	movlb	0	; () banked
 12303  000F14  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12304  000F16  0100               	movlb	0	; () banked
 12305  000F18  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12306  000F1A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12307  000F1C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12308  000F1E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12309                           
 12310                           ; BSR set to: 0
 12311                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
 12312  000F20  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 12313                           
 12314                           ; BSR set to: 0
 12315                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
 12316  000F24  0E07               	movlw	7
 12317  000F26  0100               	movlb	0	; () banked
 12318  000F28  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12319  000F2A  0100               	movlb	0	; () banked
 12320  000F2C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12321  000F2E  0E00               	movlw	0
 12322  000F30  0100               	movlb	0	; () banked
 12323  000F32  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12324  000F34  0100               	movlb	0	; () banked
 12325  000F36  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12326  000F38  0E00               	movlw	0
 12327  000F3A  0100               	movlb	0	; () banked
 12328  000F3C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12329  000F3E  0100               	movlb	0	; () banked
 12330  000F40  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12331  000F42  0E00               	movlw	0
 12332  000F44  0100               	movlb	0	; () banked
 12333  000F46  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12334  000F48  0100               	movlb	0	; () banked
 12335  000F4A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12336                           
 12337                           ; BSR set to: 0
 12338                           ;inc\CANlib.h: 787: tamp = tamp << 5;
 12339  000F4C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12340  000F50  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12341  000F54  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12342  000F58  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12343  000F5C  0E05               	movlw	5
 12344  000F5E                     u5805:
 12345  000F5E  90D8               	bcf	status,0,c
 12346  000F60  0100               	movlb	0	; () banked
 12347  000F62  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12348  000F64  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12349  000F66  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12350  000F68  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12351  000F6A  2EE8               	decfsz	wreg,f,c
 12352  000F6C  D7F8               	goto	u5805
 12353  000F6E  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12354  000F72  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12355  000F76  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12356  000F7A  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12357                           
 12358                           ; BSR set to: 0
 12359                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
 12360  000F7E  C081  FF09         	movff	CANSetFilter@tamp,3849	;volatile
 12361  000F82                     l5019:
 12362                           
 12363                           ; BSR set to: 0
 12364                           ;inc\CANlib.h: 789: }
 12365                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
 12366  000F82  0E03               	movlw	3
 12367  000F84  0100               	movlb	0	; () banked
 12368  000F86  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12369  000F88  A4D8               	btfss	status,2,c
 12370  000F8A  D058               	goto	l5037
 12371                           
 12372                           ; BSR set to: 0
 12373  000F8C  0100               	movlb	0	; () banked
 12374  000F8E  297B               	incf	CANSetFilter@type& (0+255),w,b
 12375  000F90  A4D8               	btfss	status,2,c
 12376  000F92  D054               	goto	l5037
 12377                           
 12378                           ; BSR set to: 0
 12379                           ;inc\CANlib.h: 792: {
 12380                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
 12381  000F94  010F               	movlb	15	; () banked
 12382  000F96  970D               	bcf	13,3,b	;volatile
 12383                           
 12384                           ; BSR set to: 15
 12385                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
 12386  000F98  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12387  000F9C  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12388  000FA0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12389  000FA4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12390  000FA8  0E04               	movlw	4
 12391  000FAA  D006               	goto	u5830
 12392  000FAC                     u5835:
 12393  000FAC  0100               	movlb	0	; () banked
 12394  000FAE  90D8               	bcf	status,0,c
 12395  000FB0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12396  000FB2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12397  000FB4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12398  000FB6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12399  000FB8                     u5830:
 12400  000FB8  2EE8               	decfsz	wreg,f,c
 12401  000FBA  D7F8               	goto	u5835
 12402  000FBC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12403  000FC0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12404  000FC4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12405  000FC8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12406                           
 12407                           ; BSR set to: 0
 12408                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
 12409  000FCC  0100               	movlb	0	; () banked
 12410  000FCE  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12411  000FD0  0100               	movlb	0	; () banked
 12412  000FD2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12413  000FD4  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12414  000FD6  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12415  000FD8  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12416                           
 12417                           ; BSR set to: 0
 12418                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
 12419  000FDA  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 12420                           
 12421                           ; BSR set to: 0
 12422                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
 12423  000FDE  0E07               	movlw	7
 12424  000FE0  0100               	movlb	0	; () banked
 12425  000FE2  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12426  000FE4  0100               	movlb	0	; () banked
 12427  000FE6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12428  000FE8  0E00               	movlw	0
 12429  000FEA  0100               	movlb	0	; () banked
 12430  000FEC  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12431  000FEE  0100               	movlb	0	; () banked
 12432  000FF0  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12433  000FF2  0E00               	movlw	0
 12434  000FF4  0100               	movlb	0	; () banked
 12435  000FF6  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12436  000FF8  0100               	movlb	0	; () banked
 12437  000FFA  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12438  000FFC  0E00               	movlw	0
 12439  000FFE  0100               	movlb	0	; () banked
 12440  001000  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12441  001002  0100               	movlb	0	; () banked
 12442  001004  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12443                           
 12444                           ; BSR set to: 0
 12445                           ;inc\CANlib.h: 800: tamp = tamp << 5;
 12446  001006  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12447  00100A  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12448  00100E  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12449  001012  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12450  001016  0E05               	movlw	5
 12451  001018                     u5845:
 12452  001018  90D8               	bcf	status,0,c
 12453  00101A  0100               	movlb	0	; () banked
 12454  00101C  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12455  00101E  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12456  001020  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12457  001022  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12458  001024  2EE8               	decfsz	wreg,f,c
 12459  001026  D7F8               	goto	u5845
 12460  001028  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12461  00102C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12462  001030  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12463  001034  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12464                           
 12465                           ; BSR set to: 0
 12466                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
 12467  001038  C081  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
 12468  00103C                     l5037:
 12469                           
 12470                           ; BSR set to: 0
 12471                           ;inc\CANlib.h: 802: }
 12472                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
 12473  00103C  0E04               	movlw	4
 12474  00103E  0100               	movlb	0	; () banked
 12475  001040  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12476  001042  A4D8               	btfss	status,2,c
 12477  001044  D058               	goto	l5055
 12478                           
 12479                           ; BSR set to: 0
 12480  001046  0100               	movlb	0	; () banked
 12481  001048  297B               	incf	CANSetFilter@type& (0+255),w,b
 12482  00104A  A4D8               	btfss	status,2,c
 12483  00104C  D054               	goto	l5055
 12484                           
 12485                           ; BSR set to: 0
 12486                           ;inc\CANlib.h: 805: {
 12487                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
 12488  00104E  010F               	movlb	15	; () banked
 12489  001050  9711               	bcf	17,3,b	;volatile
 12490                           
 12491                           ; BSR set to: 15
 12492                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
 12493  001052  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12494  001056  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12495  00105A  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12496  00105E  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12497  001062  0E04               	movlw	4
 12498  001064  D006               	goto	u5870
 12499  001066                     u5875:
 12500  001066  0100               	movlb	0	; () banked
 12501  001068  90D8               	bcf	status,0,c
 12502  00106A  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12503  00106C  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12504  00106E  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12505  001070  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12506  001072                     u5870:
 12507  001072  2EE8               	decfsz	wreg,f,c
 12508  001074  D7F8               	goto	u5875
 12509  001076  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12510  00107A  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12511  00107E  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12512  001082  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12513                           
 12514                           ; BSR set to: 0
 12515                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
 12516  001086  0100               	movlb	0	; () banked
 12517  001088  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12518  00108A  0100               	movlb	0	; () banked
 12519  00108C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12520  00108E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12521  001090  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12522  001092  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12523                           
 12524                           ; BSR set to: 0
 12525                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
 12526  001094  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 12527                           
 12528                           ; BSR set to: 0
 12529                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
 12530  001098  0E07               	movlw	7
 12531  00109A  0100               	movlb	0	; () banked
 12532  00109C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12533  00109E  0100               	movlb	0	; () banked
 12534  0010A0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12535  0010A2  0E00               	movlw	0
 12536  0010A4  0100               	movlb	0	; () banked
 12537  0010A6  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12538  0010A8  0100               	movlb	0	; () banked
 12539  0010AA  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12540  0010AC  0E00               	movlw	0
 12541  0010AE  0100               	movlb	0	; () banked
 12542  0010B0  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12543  0010B2  0100               	movlb	0	; () banked
 12544  0010B4  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12545  0010B6  0E00               	movlw	0
 12546  0010B8  0100               	movlb	0	; () banked
 12547  0010BA  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12548  0010BC  0100               	movlb	0	; () banked
 12549  0010BE  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12550                           
 12551                           ; BSR set to: 0
 12552                           ;inc\CANlib.h: 813: tamp = tamp << 5;
 12553  0010C0  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12554  0010C4  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12555  0010C8  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12556  0010CC  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12557  0010D0  0E05               	movlw	5
 12558  0010D2                     u5885:
 12559  0010D2  90D8               	bcf	status,0,c
 12560  0010D4  0100               	movlb	0	; () banked
 12561  0010D6  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12562  0010D8  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12563  0010DA  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12564  0010DC  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12565  0010DE  2EE8               	decfsz	wreg,f,c
 12566  0010E0  D7F8               	goto	u5885
 12567  0010E2  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12568  0010E6  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12569  0010EA  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12570  0010EE  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12571                           
 12572                           ; BSR set to: 0
 12573                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
 12574  0010F2  C081  FF11         	movff	CANSetFilter@tamp,3857	;volatile
 12575  0010F6                     l5055:
 12576                           
 12577                           ; BSR set to: 0
 12578                           ;inc\CANlib.h: 815: }
 12579                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
 12580  0010F6  0E05               	movlw	5
 12581  0010F8  0100               	movlb	0	; () banked
 12582  0010FA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12583  0010FC  A4D8               	btfss	status,2,c
 12584  0010FE  D058               	goto	l5073
 12585                           
 12586                           ; BSR set to: 0
 12587  001100  0100               	movlb	0	; () banked
 12588  001102  297B               	incf	CANSetFilter@type& (0+255),w,b
 12589  001104  A4D8               	btfss	status,2,c
 12590  001106  D054               	goto	l5073
 12591                           
 12592                           ; BSR set to: 0
 12593                           ;inc\CANlib.h: 818: {
 12594                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
 12595  001108  010F               	movlb	15	; () banked
 12596  00110A  9715               	bcf	21,3,b	;volatile
 12597                           
 12598                           ; BSR set to: 15
 12599                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
 12600  00110C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12601  001110  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12602  001114  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12603  001118  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12604  00111C  0E04               	movlw	4
 12605  00111E  D006               	goto	u5910
 12606  001120                     u5915:
 12607  001120  0100               	movlb	0	; () banked
 12608  001122  90D8               	bcf	status,0,c
 12609  001124  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12610  001126  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12611  001128  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12612  00112A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12613  00112C                     u5910:
 12614  00112C  2EE8               	decfsz	wreg,f,c
 12615  00112E  D7F8               	goto	u5915
 12616  001130  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12617  001134  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12618  001138  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12619  00113C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12620                           
 12621                           ; BSR set to: 0
 12622                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
 12623  001140  0100               	movlb	0	; () banked
 12624  001142  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12625  001144  0100               	movlb	0	; () banked
 12626  001146  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12627  001148  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12628  00114A  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12629  00114C  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12630                           
 12631                           ; BSR set to: 0
 12632                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
 12633  00114E  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 12634                           
 12635                           ; BSR set to: 0
 12636                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
 12637  001152  0E07               	movlw	7
 12638  001154  0100               	movlb	0	; () banked
 12639  001156  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12640  001158  0100               	movlb	0	; () banked
 12641  00115A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12642  00115C  0E00               	movlw	0
 12643  00115E  0100               	movlb	0	; () banked
 12644  001160  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12645  001162  0100               	movlb	0	; () banked
 12646  001164  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12647  001166  0E00               	movlw	0
 12648  001168  0100               	movlb	0	; () banked
 12649  00116A  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12650  00116C  0100               	movlb	0	; () banked
 12651  00116E  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12652  001170  0E00               	movlw	0
 12653  001172  0100               	movlb	0	; () banked
 12654  001174  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12655  001176  0100               	movlb	0	; () banked
 12656  001178  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12657                           
 12658                           ; BSR set to: 0
 12659                           ;inc\CANlib.h: 826: tamp = tamp << 5;
 12660  00117A  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12661  00117E  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12662  001182  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12663  001186  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12664  00118A  0E05               	movlw	5
 12665  00118C                     u5925:
 12666  00118C  90D8               	bcf	status,0,c
 12667  00118E  0100               	movlb	0	; () banked
 12668  001190  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12669  001192  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12670  001194  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12671  001196  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12672  001198  2EE8               	decfsz	wreg,f,c
 12673  00119A  D7F8               	goto	u5925
 12674  00119C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12675  0011A0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12676  0011A4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12677  0011A8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12678                           
 12679                           ; BSR set to: 0
 12680                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
 12681  0011AC  C081  FF15         	movff	CANSetFilter@tamp,3861	;volatile
 12682  0011B0                     l5073:
 12683                           
 12684                           ; BSR set to: 0
 12685                           ;inc\CANlib.h: 828: }
 12686                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
 12687  0011B0  0100               	movlb	0	; () banked
 12688  0011B2  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 12689  0011B4  0100               	movlb	0	; () banked
 12690  0011B6  A4D8               	btfss	status,2,c
 12691  0011B8  D089               	goto	l5107
 12692                           
 12693                           ; BSR set to: 0
 12694  0011BA  0EF7               	movlw	247
 12695  0011BC  0100               	movlb	0	; () banked
 12696  0011BE  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 12697  0011C0  A4D8               	btfss	status,2,c
 12698  0011C2  D084               	goto	l5107
 12699                           
 12700                           ; BSR set to: 0
 12701                           ;inc\CANlib.h: 832: {
 12702                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
 12703  0011C4  010F               	movlb	15	; () banked
 12704  0011C6  8701               	bsf	1,3,b	;volatile
 12705                           
 12706                           ; BSR set to: 15
 12707                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
 12708  0011C8  0100               	movlb	0	; () banked
 12709  0011CA  5177               	movf	CANSetFilter@filter& (0+255),w,b
 12710  0011CC  0100               	movlb	0	; () banked
 12711  0011CE  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12712  0011D0  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12713  0011D2  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12714  0011D4  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12715                           
 12716                           ; BSR set to: 0
 12717                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
 12718  0011D6  C081  FF03         	movff	CANSetFilter@tamp,3843	;volatile
 12719                           
 12720                           ; BSR set to: 0
 12721                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
 12722  0011DA  0E00               	movlw	0
 12723  0011DC  0100               	movlb	0	; () banked
 12724  0011DE  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12725  0011E0  0100               	movlb	0	; () banked
 12726  0011E2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12727  0011E4  0EFF               	movlw	255
 12728  0011E6  0100               	movlb	0	; () banked
 12729  0011E8  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12730  0011EA  0100               	movlb	0	; () banked
 12731  0011EC  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12732  0011EE  0E00               	movlw	0
 12733  0011F0  0100               	movlb	0	; () banked
 12734  0011F2  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12735  0011F4  0100               	movlb	0	; () banked
 12736  0011F6  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12737  0011F8  0E00               	movlw	0
 12738  0011FA  0100               	movlb	0	; () banked
 12739  0011FC  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12740  0011FE  0100               	movlb	0	; () banked
 12741  001200  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12742                           
 12743                           ; BSR set to: 0
 12744                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
 12745  001202  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12746  001206  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12747  00120A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12748  00120E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12749  001212  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 12750  001216  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 12751  00121A  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 12752  00121E  0100               	movlb	0	; () banked
 12753  001220  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 12754  001222  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12755  001226  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12756  00122A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12757  00122E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12758                           
 12759                           ; BSR set to: 0
 12760                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
 12761  001232  C081  FF02         	movff	CANSetFilter@tamp,3842	;volatile
 12762                           
 12763                           ; BSR set to: 0
 12764                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
 12765  001236  0100               	movlb	0	; () banked
 12766  001238  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 12767  00123A  D003               	goto	l463
 12768                           
 12769                           ; BSR set to: 0
 12770                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
 12771  00123C  010F               	movlb	15	; () banked
 12772  00123E  8101               	bsf	1,0,b	;volatile
 12773  001240  D002               	goto	l464
 12774  001242                     l463:
 12775                           
 12776                           ; BSR set to: 0
 12777                           ;inc\CANlib.h: 844: else
 12778                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
 12779  001242  010F               	movlb	15	; () banked
 12780  001244  9101               	bcf	1,0,b	;volatile
 12781  001246                     l464:
 12782                           
 12783                           ; BSR set to: 15
 12784                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
 12785  001246  0100               	movlb	0	; () banked
 12786  001248  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 12787  00124A  D003               	goto	l465
 12788                           
 12789                           ; BSR set to: 0
 12790                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
 12791  00124C  010F               	movlb	15	; () banked
 12792  00124E  8301               	bsf	1,1,b	;volatile
 12793  001250  D002               	goto	l466
 12794  001252                     l465:
 12795                           
 12796                           ; BSR set to: 0
 12797                           ;inc\CANlib.h: 849: else
 12798                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
 12799  001252  010F               	movlb	15	; () banked
 12800  001254  9301               	bcf	1,1,b	;volatile
 12801  001256                     l466:
 12802                           
 12803                           ; BSR set to: 15
 12804                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
 12805  001256  0100               	movlb	0	; () banked
 12806  001258  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 12807  00125A  D003               	goto	l467
 12808                           
 12809                           ; BSR set to: 0
 12810                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
 12811  00125C  010F               	movlb	15	; () banked
 12812  00125E  8B01               	bsf	1,5,b	;volatile
 12813  001260  D002               	goto	l468
 12814  001262                     l467:
 12815                           
 12816                           ; BSR set to: 0
 12817                           ;inc\CANlib.h: 854: else
 12818                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
 12819  001262  010F               	movlb	15	; () banked
 12820  001264  9B01               	bcf	1,5,b	;volatile
 12821  001266                     l468:
 12822                           
 12823                           ; BSR set to: 15
 12824                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
 12825  001266  0100               	movlb	0	; () banked
 12826  001268  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 12827  00126A  D003               	goto	l469
 12828                           
 12829                           ; BSR set to: 0
 12830                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
 12831  00126C  010F               	movlb	15	; () banked
 12832  00126E  8D01               	bsf	1,6,b	;volatile
 12833  001270  D002               	goto	l470
 12834  001272                     l469:
 12835                           
 12836                           ; BSR set to: 0
 12837                           ;inc\CANlib.h: 859: else
 12838                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
 12839  001272  010F               	movlb	15	; () banked
 12840  001274  9D01               	bcf	1,6,b	;volatile
 12841  001276                     l470:
 12842                           
 12843                           ; BSR set to: 15
 12844                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
 12845  001276  0100               	movlb	0	; () banked
 12846  001278  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 12847  00127A  D003               	goto	l471
 12848                           
 12849                           ; BSR set to: 0
 12850                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
 12851  00127C  010F               	movlb	15	; () banked
 12852  00127E  8F01               	bsf	1,7,b	;volatile
 12853  001280  D002               	goto	l5101
 12854  001282                     l471:
 12855                           
 12856                           ; BSR set to: 0
 12857                           ;inc\CANlib.h: 864: else
 12858                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
 12859  001282  010F               	movlb	15	; () banked
 12860  001284  9F01               	bcf	1,7,b	;volatile
 12861  001286                     l5101:
 12862                           
 12863                           ; BSR set to: 15
 12864                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
 12865  001286  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12866  00128A  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12867  00128E  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12868  001292  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12869  001296  0E16               	movlw	22
 12870  001298  D006               	goto	u6000
 12871  00129A                     u6005:
 12872  00129A  0100               	movlb	0	; () banked
 12873  00129C  90D8               	bcf	status,0,c
 12874  00129E  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12875  0012A0  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12876  0012A2  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12877  0012A4  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12878  0012A6                     u6000:
 12879  0012A6  2EE8               	decfsz	wreg,f,c
 12880  0012A8  D7F8               	goto	u6005
 12881  0012AA  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12882  0012AE  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12883  0012B2  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12884  0012B6  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12885                           
 12886                           ; BSR set to: 0
 12887                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
 12888  0012BA  0100               	movlb	0	; () banked
 12889  0012BC  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12890  0012BE  0100               	movlb	0	; () banked
 12891  0012C0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12892  0012C2  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12893  0012C4  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12894  0012C6  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12895                           
 12896                           ; BSR set to: 0
 12897                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
 12898  0012C8  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 12899  0012CC                     l5107:
 12900                           
 12901                           ; BSR set to: 0
 12902                           ;inc\CANlib.h: 870: }
 12903                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
 12904  0012CC  0100               	movlb	0	; () banked
 12905  0012CE  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 12906  0012D0  A4D8               	btfss	status,2,c
 12907  0012D2  D089               	goto	l5141
 12908                           
 12909                           ; BSR set to: 0
 12910  0012D4  0EF7               	movlw	247
 12911  0012D6  0100               	movlb	0	; () banked
 12912  0012D8  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 12913  0012DA  A4D8               	btfss	status,2,c
 12914  0012DC  D084               	goto	l5141
 12915                           
 12916                           ; BSR set to: 0
 12917                           ;inc\CANlib.h: 873: {
 12918                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
 12919  0012DE  010F               	movlb	15	; () banked
 12920  0012E0  8705               	bsf	5,3,b	;volatile
 12921                           
 12922                           ; BSR set to: 15
 12923                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
 12924  0012E2  0100               	movlb	0	; () banked
 12925  0012E4  5177               	movf	CANSetFilter@filter& (0+255),w,b
 12926  0012E6  0100               	movlb	0	; () banked
 12927  0012E8  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12928  0012EA  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12929  0012EC  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12930  0012EE  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12931                           
 12932                           ; BSR set to: 0
 12933                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
 12934  0012F0  C081  FF07         	movff	CANSetFilter@tamp,3847	;volatile
 12935                           
 12936                           ; BSR set to: 0
 12937                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
 12938  0012F4  0E00               	movlw	0
 12939  0012F6  0100               	movlb	0	; () banked
 12940  0012F8  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12941  0012FA  0100               	movlb	0	; () banked
 12942  0012FC  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12943  0012FE  0EFF               	movlw	255
 12944  001300  0100               	movlb	0	; () banked
 12945  001302  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12946  001304  0100               	movlb	0	; () banked
 12947  001306  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12948  001308  0E00               	movlw	0
 12949  00130A  0100               	movlb	0	; () banked
 12950  00130C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12951  00130E  0100               	movlb	0	; () banked
 12952  001310  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12953  001312  0E00               	movlw	0
 12954  001314  0100               	movlb	0	; () banked
 12955  001316  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12956  001318  0100               	movlb	0	; () banked
 12957  00131A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12958                           
 12959                           ; BSR set to: 0
 12960                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
 12961  00131C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12962  001320  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12963  001324  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12964  001328  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12965  00132C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 12966  001330  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 12967  001334  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 12968  001338  0100               	movlb	0	; () banked
 12969  00133A  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 12970  00133C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12971  001340  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12972  001344  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12973  001348  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12974                           
 12975                           ; BSR set to: 0
 12976                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
 12977  00134C  C081  FF06         	movff	CANSetFilter@tamp,3846	;volatile
 12978                           
 12979                           ; BSR set to: 0
 12980                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
 12981  001350  0100               	movlb	0	; () banked
 12982  001352  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 12983  001354  D003               	goto	l474
 12984                           
 12985                           ; BSR set to: 0
 12986                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
 12987  001356  010F               	movlb	15	; () banked
 12988  001358  8105               	bsf	5,0,b	;volatile
 12989  00135A  D002               	goto	l475
 12990  00135C                     l474:
 12991                           
 12992                           ; BSR set to: 0
 12993                           ;inc\CANlib.h: 885: else
 12994                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
 12995  00135C  010F               	movlb	15	; () banked
 12996  00135E  9105               	bcf	5,0,b	;volatile
 12997  001360                     l475:
 12998                           
 12999                           ; BSR set to: 15
 13000                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
 13001  001360  0100               	movlb	0	; () banked
 13002  001362  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13003  001364  D003               	goto	l476
 13004                           
 13005                           ; BSR set to: 0
 13006                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
 13007  001366  010F               	movlb	15	; () banked
 13008  001368  8305               	bsf	5,1,b	;volatile
 13009  00136A  D002               	goto	l477
 13010  00136C                     l476:
 13011                           
 13012                           ; BSR set to: 0
 13013                           ;inc\CANlib.h: 890: else
 13014                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
 13015  00136C  010F               	movlb	15	; () banked
 13016  00136E  9305               	bcf	5,1,b	;volatile
 13017  001370                     l477:
 13018                           
 13019                           ; BSR set to: 15
 13020                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
 13021  001370  0100               	movlb	0	; () banked
 13022  001372  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13023  001374  D003               	goto	l478
 13024                           
 13025                           ; BSR set to: 0
 13026                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
 13027  001376  010F               	movlb	15	; () banked
 13028  001378  8B05               	bsf	5,5,b	;volatile
 13029  00137A  D002               	goto	l479
 13030  00137C                     l478:
 13031                           
 13032                           ; BSR set to: 0
 13033                           ;inc\CANlib.h: 895: else
 13034                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
 13035  00137C  010F               	movlb	15	; () banked
 13036  00137E  9B05               	bcf	5,5,b	;volatile
 13037  001380                     l479:
 13038                           
 13039                           ; BSR set to: 15
 13040                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
 13041  001380  0100               	movlb	0	; () banked
 13042  001382  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13043  001384  D003               	goto	l480
 13044                           
 13045                           ; BSR set to: 0
 13046                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
 13047  001386  010F               	movlb	15	; () banked
 13048  001388  8D05               	bsf	5,6,b	;volatile
 13049  00138A  D002               	goto	l481
 13050  00138C                     l480:
 13051                           
 13052                           ; BSR set to: 0
 13053                           ;inc\CANlib.h: 900: else
 13054                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
 13055  00138C  010F               	movlb	15	; () banked
 13056  00138E  9D05               	bcf	5,6,b	;volatile
 13057  001390                     l481:
 13058                           
 13059                           ; BSR set to: 15
 13060                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
 13061  001390  0100               	movlb	0	; () banked
 13062  001392  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13063  001394  D003               	goto	l482
 13064                           
 13065                           ; BSR set to: 0
 13066                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
 13067  001396  010F               	movlb	15	; () banked
 13068  001398  8F05               	bsf	5,7,b	;volatile
 13069  00139A  D002               	goto	l5135
 13070  00139C                     l482:
 13071                           
 13072                           ; BSR set to: 0
 13073                           ;inc\CANlib.h: 905: else
 13074                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
 13075  00139C  010F               	movlb	15	; () banked
 13076  00139E  9F05               	bcf	5,7,b	;volatile
 13077  0013A0                     l5135:
 13078                           
 13079                           ; BSR set to: 15
 13080                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
 13081  0013A0  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13082  0013A4  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13083  0013A8  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13084  0013AC  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13085  0013B0  0E16               	movlw	22
 13086  0013B2  D006               	goto	u6080
 13087  0013B4                     u6085:
 13088  0013B4  0100               	movlb	0	; () banked
 13089  0013B6  90D8               	bcf	status,0,c
 13090  0013B8  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13091  0013BA  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13092  0013BC  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13093  0013BE  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13094  0013C0                     u6080:
 13095  0013C0  2EE8               	decfsz	wreg,f,c
 13096  0013C2  D7F8               	goto	u6085
 13097  0013C4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13098  0013C8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13099  0013CC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13100  0013D0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13101                           
 13102                           ; BSR set to: 0
 13103                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
 13104  0013D4  0100               	movlb	0	; () banked
 13105  0013D6  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13106  0013D8  0100               	movlb	0	; () banked
 13107  0013DA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13108  0013DC  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13109  0013DE  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13110  0013E0  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13111                           
 13112                           ; BSR set to: 0
 13113                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
 13114  0013E2  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 13115  0013E6                     l5141:
 13116                           
 13117                           ; BSR set to: 0
 13118                           ;inc\CANlib.h: 911: }
 13119                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
 13120  0013E6  0E02               	movlw	2
 13121  0013E8  0100               	movlb	0	; () banked
 13122  0013EA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13123  0013EC  A4D8               	btfss	status,2,c
 13124  0013EE  D089               	goto	l5175
 13125                           
 13126                           ; BSR set to: 0
 13127  0013F0  0EF7               	movlw	247
 13128  0013F2  0100               	movlb	0	; () banked
 13129  0013F4  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13130  0013F6  A4D8               	btfss	status,2,c
 13131  0013F8  D084               	goto	l5175
 13132                           
 13133                           ; BSR set to: 0
 13134                           ;inc\CANlib.h: 915: {
 13135                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
 13136  0013FA  010F               	movlb	15	; () banked
 13137  0013FC  8709               	bsf	9,3,b	;volatile
 13138                           
 13139                           ; BSR set to: 15
 13140                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
 13141  0013FE  0100               	movlb	0	; () banked
 13142  001400  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13143  001402  0100               	movlb	0	; () banked
 13144  001404  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13145  001406  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13146  001408  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13147  00140A  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13148                           
 13149                           ; BSR set to: 0
 13150                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
 13151  00140C  C081  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
 13152                           
 13153                           ; BSR set to: 0
 13154                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
 13155  001410  0E00               	movlw	0
 13156  001412  0100               	movlb	0	; () banked
 13157  001414  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13158  001416  0100               	movlb	0	; () banked
 13159  001418  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13160  00141A  0EFF               	movlw	255
 13161  00141C  0100               	movlb	0	; () banked
 13162  00141E  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13163  001420  0100               	movlb	0	; () banked
 13164  001422  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13165  001424  0E00               	movlw	0
 13166  001426  0100               	movlb	0	; () banked
 13167  001428  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13168  00142A  0100               	movlb	0	; () banked
 13169  00142C  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13170  00142E  0E00               	movlw	0
 13171  001430  0100               	movlb	0	; () banked
 13172  001432  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13173  001434  0100               	movlb	0	; () banked
 13174  001436  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13175                           
 13176                           ; BSR set to: 0
 13177                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
 13178  001438  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13179  00143C  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13180  001440  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13181  001444  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13182  001448  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13183  00144C  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13184  001450  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13185  001454  0100               	movlb	0	; () banked
 13186  001456  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13187  001458  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13188  00145C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13189  001460  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13190  001464  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13191                           
 13192                           ; BSR set to: 0
 13193                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
 13194  001468  C081  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
 13195                           
 13196                           ; BSR set to: 0
 13197                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
 13198  00146C  0100               	movlb	0	; () banked
 13199  00146E  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13200  001470  D003               	goto	l485
 13201                           
 13202                           ; BSR set to: 0
 13203                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
 13204  001472  010F               	movlb	15	; () banked
 13205  001474  8109               	bsf	9,0,b	;volatile
 13206  001476  D002               	goto	l486
 13207  001478                     l485:
 13208                           
 13209                           ; BSR set to: 0
 13210                           ;inc\CANlib.h: 927: else
 13211                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
 13212  001478  010F               	movlb	15	; () banked
 13213  00147A  9109               	bcf	9,0,b	;volatile
 13214  00147C                     l486:
 13215                           
 13216                           ; BSR set to: 15
 13217                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
 13218  00147C  0100               	movlb	0	; () banked
 13219  00147E  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13220  001480  D003               	goto	l487
 13221                           
 13222                           ; BSR set to: 0
 13223                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
 13224  001482  010F               	movlb	15	; () banked
 13225  001484  8309               	bsf	9,1,b	;volatile
 13226  001486  D002               	goto	l488
 13227  001488                     l487:
 13228                           
 13229                           ; BSR set to: 0
 13230                           ;inc\CANlib.h: 932: else
 13231                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
 13232  001488  010F               	movlb	15	; () banked
 13233  00148A  9309               	bcf	9,1,b	;volatile
 13234  00148C                     l488:
 13235                           
 13236                           ; BSR set to: 15
 13237                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
 13238  00148C  0100               	movlb	0	; () banked
 13239  00148E  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13240  001490  D003               	goto	l489
 13241                           
 13242                           ; BSR set to: 0
 13243                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
 13244  001492  010F               	movlb	15	; () banked
 13245  001494  8B09               	bsf	9,5,b	;volatile
 13246  001496  D002               	goto	l490
 13247  001498                     l489:
 13248                           
 13249                           ; BSR set to: 0
 13250                           ;inc\CANlib.h: 937: else
 13251                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
 13252  001498  010F               	movlb	15	; () banked
 13253  00149A  9B09               	bcf	9,5,b	;volatile
 13254  00149C                     l490:
 13255                           
 13256                           ; BSR set to: 15
 13257                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
 13258  00149C  0100               	movlb	0	; () banked
 13259  00149E  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13260  0014A0  D003               	goto	l491
 13261                           
 13262                           ; BSR set to: 0
 13263                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
 13264  0014A2  010F               	movlb	15	; () banked
 13265  0014A4  8D09               	bsf	9,6,b	;volatile
 13266  0014A6  D002               	goto	l492
 13267  0014A8                     l491:
 13268                           
 13269                           ; BSR set to: 0
 13270                           ;inc\CANlib.h: 942: else
 13271                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
 13272  0014A8  010F               	movlb	15	; () banked
 13273  0014AA  9D09               	bcf	9,6,b	;volatile
 13274  0014AC                     l492:
 13275                           
 13276                           ; BSR set to: 15
 13277                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
 13278  0014AC  0100               	movlb	0	; () banked
 13279  0014AE  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13280  0014B0  D003               	goto	l493
 13281                           
 13282                           ; BSR set to: 0
 13283                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
 13284  0014B2  010F               	movlb	15	; () banked
 13285  0014B4  8F09               	bsf	9,7,b	;volatile
 13286  0014B6  D002               	goto	l5169
 13287  0014B8                     l493:
 13288                           
 13289                           ; BSR set to: 0
 13290                           ;inc\CANlib.h: 947: else
 13291                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
 13292  0014B8  010F               	movlb	15	; () banked
 13293  0014BA  9F09               	bcf	9,7,b	;volatile
 13294  0014BC                     l5169:
 13295                           
 13296                           ; BSR set to: 15
 13297                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
 13298  0014BC  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13299  0014C0  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13300  0014C4  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13301  0014C8  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13302  0014CC  0E16               	movlw	22
 13303  0014CE  D006               	goto	u6160
 13304  0014D0                     u6165:
 13305  0014D0  0100               	movlb	0	; () banked
 13306  0014D2  90D8               	bcf	status,0,c
 13307  0014D4  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13308  0014D6  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13309  0014D8  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13310  0014DA  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13311  0014DC                     u6160:
 13312  0014DC  2EE8               	decfsz	wreg,f,c
 13313  0014DE  D7F8               	goto	u6165
 13314  0014E0  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13315  0014E4  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13316  0014E8  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13317  0014EC  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13318                           
 13319                           ; BSR set to: 0
 13320                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
 13321  0014F0  0100               	movlb	0	; () banked
 13322  0014F2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13323  0014F4  0100               	movlb	0	; () banked
 13324  0014F6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13325  0014F8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13326  0014FA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13327  0014FC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13328                           
 13329                           ; BSR set to: 0
 13330                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
 13331  0014FE  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 13332  001502                     l5175:
 13333                           
 13334                           ; BSR set to: 0
 13335                           ;inc\CANlib.h: 953: }
 13336                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
 13337  001502  0E03               	movlw	3
 13338  001504  0100               	movlb	0	; () banked
 13339  001506  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13340  001508  A4D8               	btfss	status,2,c
 13341  00150A  D089               	goto	l5209
 13342                           
 13343                           ; BSR set to: 0
 13344  00150C  0EF7               	movlw	247
 13345  00150E  0100               	movlb	0	; () banked
 13346  001510  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13347  001512  A4D8               	btfss	status,2,c
 13348  001514  D084               	goto	l5209
 13349                           
 13350                           ; BSR set to: 0
 13351                           ;inc\CANlib.h: 956: {
 13352                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
 13353  001516  010F               	movlb	15	; () banked
 13354  001518  870D               	bsf	13,3,b	;volatile
 13355                           
 13356                           ; BSR set to: 15
 13357                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
 13358  00151A  0100               	movlb	0	; () banked
 13359  00151C  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13360  00151E  0100               	movlb	0	; () banked
 13361  001520  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13362  001522  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13363  001524  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13364  001526  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13365                           
 13366                           ; BSR set to: 0
 13367                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
 13368  001528  C081  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
 13369                           
 13370                           ; BSR set to: 0
 13371                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
 13372  00152C  0E00               	movlw	0
 13373  00152E  0100               	movlb	0	; () banked
 13374  001530  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13375  001532  0100               	movlb	0	; () banked
 13376  001534  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13377  001536  0EFF               	movlw	255
 13378  001538  0100               	movlb	0	; () banked
 13379  00153A  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13380  00153C  0100               	movlb	0	; () banked
 13381  00153E  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13382  001540  0E00               	movlw	0
 13383  001542  0100               	movlb	0	; () banked
 13384  001544  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13385  001546  0100               	movlb	0	; () banked
 13386  001548  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13387  00154A  0E00               	movlw	0
 13388  00154C  0100               	movlb	0	; () banked
 13389  00154E  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13390  001550  0100               	movlb	0	; () banked
 13391  001552  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13392                           
 13393                           ; BSR set to: 0
 13394                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
 13395  001554  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13396  001558  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13397  00155C  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13398  001560  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13399  001564  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13400  001568  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13401  00156C  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13402  001570  0100               	movlb	0	; () banked
 13403  001572  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13404  001574  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13405  001578  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13406  00157C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13407  001580  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13408                           
 13409                           ; BSR set to: 0
 13410                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
 13411  001584  C081  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
 13412                           
 13413                           ; BSR set to: 0
 13414                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
 13415  001588  0100               	movlb	0	; () banked
 13416  00158A  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13417  00158C  D003               	goto	l496
 13418                           
 13419                           ; BSR set to: 0
 13420                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
 13421  00158E  010F               	movlb	15	; () banked
 13422  001590  810D               	bsf	13,0,b	;volatile
 13423  001592  D002               	goto	l497
 13424  001594                     l496:
 13425                           
 13426                           ; BSR set to: 0
 13427                           ;inc\CANlib.h: 968: else
 13428                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
 13429  001594  010F               	movlb	15	; () banked
 13430  001596  910D               	bcf	13,0,b	;volatile
 13431  001598                     l497:
 13432                           
 13433                           ; BSR set to: 15
 13434                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
 13435  001598  0100               	movlb	0	; () banked
 13436  00159A  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13437  00159C  D003               	goto	l498
 13438                           
 13439                           ; BSR set to: 0
 13440                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
 13441  00159E  010F               	movlb	15	; () banked
 13442  0015A0  830D               	bsf	13,1,b	;volatile
 13443  0015A2  D002               	goto	l499
 13444  0015A4                     l498:
 13445                           
 13446                           ; BSR set to: 0
 13447                           ;inc\CANlib.h: 973: else
 13448                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
 13449  0015A4  010F               	movlb	15	; () banked
 13450  0015A6  930D               	bcf	13,1,b	;volatile
 13451  0015A8                     l499:
 13452                           
 13453                           ; BSR set to: 15
 13454                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
 13455  0015A8  0100               	movlb	0	; () banked
 13456  0015AA  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13457  0015AC  D003               	goto	l500
 13458                           
 13459                           ; BSR set to: 0
 13460                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
 13461  0015AE  010F               	movlb	15	; () banked
 13462  0015B0  8B0D               	bsf	13,5,b	;volatile
 13463  0015B2  D002               	goto	l501
 13464  0015B4                     l500:
 13465                           
 13466                           ; BSR set to: 0
 13467                           ;inc\CANlib.h: 978: else
 13468                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
 13469  0015B4  010F               	movlb	15	; () banked
 13470  0015B6  9B0D               	bcf	13,5,b	;volatile
 13471  0015B8                     l501:
 13472                           
 13473                           ; BSR set to: 15
 13474                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
 13475  0015B8  0100               	movlb	0	; () banked
 13476  0015BA  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13477  0015BC  D003               	goto	l502
 13478                           
 13479                           ; BSR set to: 0
 13480                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
 13481  0015BE  010F               	movlb	15	; () banked
 13482  0015C0  8D0D               	bsf	13,6,b	;volatile
 13483  0015C2  D002               	goto	l503
 13484  0015C4                     l502:
 13485                           
 13486                           ; BSR set to: 0
 13487                           ;inc\CANlib.h: 983: else
 13488                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
 13489  0015C4  010F               	movlb	15	; () banked
 13490  0015C6  9D0D               	bcf	13,6,b	;volatile
 13491  0015C8                     l503:
 13492                           
 13493                           ; BSR set to: 15
 13494                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
 13495  0015C8  0100               	movlb	0	; () banked
 13496  0015CA  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13497  0015CC  D003               	goto	l504
 13498                           
 13499                           ; BSR set to: 0
 13500                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
 13501  0015CE  010F               	movlb	15	; () banked
 13502  0015D0  8F0D               	bsf	13,7,b	;volatile
 13503  0015D2  D002               	goto	l5203
 13504  0015D4                     l504:
 13505                           
 13506                           ; BSR set to: 0
 13507                           ;inc\CANlib.h: 988: else
 13508                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
 13509  0015D4  010F               	movlb	15	; () banked
 13510  0015D6  9F0D               	bcf	13,7,b	;volatile
 13511  0015D8                     l5203:
 13512                           
 13513                           ; BSR set to: 15
 13514                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
 13515  0015D8  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13516  0015DC  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13517  0015E0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13518  0015E4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13519  0015E8  0E16               	movlw	22
 13520  0015EA  D006               	goto	u6240
 13521  0015EC                     u6245:
 13522  0015EC  0100               	movlb	0	; () banked
 13523  0015EE  90D8               	bcf	status,0,c
 13524  0015F0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13525  0015F2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13526  0015F4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13527  0015F6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13528  0015F8                     u6240:
 13529  0015F8  2EE8               	decfsz	wreg,f,c
 13530  0015FA  D7F8               	goto	u6245
 13531  0015FC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13532  001600  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13533  001604  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13534  001608  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13535                           
 13536                           ; BSR set to: 0
 13537                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
 13538  00160C  0100               	movlb	0	; () banked
 13539  00160E  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13540  001610  0100               	movlb	0	; () banked
 13541  001612  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13542  001614  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13543  001616  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13544  001618  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13545                           
 13546                           ; BSR set to: 0
 13547                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
 13548  00161A  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 13549  00161E                     l5209:
 13550                           
 13551                           ; BSR set to: 0
 13552                           ;inc\CANlib.h: 994: }
 13553                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
 13554  00161E  0E04               	movlw	4
 13555  001620  0100               	movlb	0	; () banked
 13556  001622  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13557  001624  A4D8               	btfss	status,2,c
 13558  001626  D089               	goto	l5243
 13559                           
 13560                           ; BSR set to: 0
 13561  001628  0EF7               	movlw	247
 13562  00162A  0100               	movlb	0	; () banked
 13563  00162C  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13564  00162E  A4D8               	btfss	status,2,c
 13565  001630  D084               	goto	l5243
 13566                           
 13567                           ; BSR set to: 0
 13568                           ;inc\CANlib.h: 997: {
 13569                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
 13570  001632  010F               	movlb	15	; () banked
 13571  001634  8711               	bsf	17,3,b	;volatile
 13572                           
 13573                           ; BSR set to: 15
 13574                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
 13575  001636  0100               	movlb	0	; () banked
 13576  001638  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13577  00163A  0100               	movlb	0	; () banked
 13578  00163C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13579  00163E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13580  001640  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13581  001642  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13582                           
 13583                           ; BSR set to: 0
 13584                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
 13585  001644  C081  FF13         	movff	CANSetFilter@tamp,3859	;volatile
 13586                           
 13587                           ; BSR set to: 0
 13588                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
 13589  001648  0E00               	movlw	0
 13590  00164A  0100               	movlb	0	; () banked
 13591  00164C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13592  00164E  0100               	movlb	0	; () banked
 13593  001650  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13594  001652  0EFF               	movlw	255
 13595  001654  0100               	movlb	0	; () banked
 13596  001656  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13597  001658  0100               	movlb	0	; () banked
 13598  00165A  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13599  00165C  0E00               	movlw	0
 13600  00165E  0100               	movlb	0	; () banked
 13601  001660  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13602  001662  0100               	movlb	0	; () banked
 13603  001664  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13604  001666  0E00               	movlw	0
 13605  001668  0100               	movlb	0	; () banked
 13606  00166A  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13607  00166C  0100               	movlb	0	; () banked
 13608  00166E  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13609                           
 13610                           ; BSR set to: 0
 13611                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
 13612  001670  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13613  001674  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13614  001678  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13615  00167C  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13616  001680  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13617  001684  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13618  001688  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13619  00168C  0100               	movlb	0	; () banked
 13620  00168E  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13621  001690  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13622  001694  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13623  001698  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13624  00169C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13625                           
 13626                           ; BSR set to: 0
 13627                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
 13628  0016A0  C081  FF12         	movff	CANSetFilter@tamp,3858	;volatile
 13629                           
 13630                           ; BSR set to: 0
 13631                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
 13632  0016A4  0100               	movlb	0	; () banked
 13633  0016A6  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13634  0016A8  D003               	goto	l507
 13635                           
 13636                           ; BSR set to: 0
 13637                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
 13638  0016AA  010F               	movlb	15	; () banked
 13639  0016AC  8111               	bsf	17,0,b	;volatile
 13640  0016AE  D002               	goto	l508
 13641  0016B0                     l507:
 13642                           
 13643                           ; BSR set to: 0
 13644                           ;inc\CANlib.h: 1009: else
 13645                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
 13646  0016B0  010F               	movlb	15	; () banked
 13647  0016B2  9111               	bcf	17,0,b	;volatile
 13648  0016B4                     l508:
 13649                           
 13650                           ; BSR set to: 15
 13651                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
 13652  0016B4  0100               	movlb	0	; () banked
 13653  0016B6  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13654  0016B8  D003               	goto	l509
 13655                           
 13656                           ; BSR set to: 0
 13657                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
 13658  0016BA  010F               	movlb	15	; () banked
 13659  0016BC  8311               	bsf	17,1,b	;volatile
 13660  0016BE  D002               	goto	l510
 13661  0016C0                     l509:
 13662                           
 13663                           ; BSR set to: 0
 13664                           ;inc\CANlib.h: 1014: else
 13665                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
 13666  0016C0  010F               	movlb	15	; () banked
 13667  0016C2  9311               	bcf	17,1,b	;volatile
 13668  0016C4                     l510:
 13669                           
 13670                           ; BSR set to: 15
 13671                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
 13672  0016C4  0100               	movlb	0	; () banked
 13673  0016C6  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13674  0016C8  D003               	goto	l511
 13675                           
 13676                           ; BSR set to: 0
 13677                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
 13678  0016CA  010F               	movlb	15	; () banked
 13679  0016CC  8B11               	bsf	17,5,b	;volatile
 13680  0016CE  D002               	goto	l512
 13681  0016D0                     l511:
 13682                           
 13683                           ; BSR set to: 0
 13684                           ;inc\CANlib.h: 1019: else
 13685                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
 13686  0016D0  010F               	movlb	15	; () banked
 13687  0016D2  9B11               	bcf	17,5,b	;volatile
 13688  0016D4                     l512:
 13689                           
 13690                           ; BSR set to: 15
 13691                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
 13692  0016D4  0100               	movlb	0	; () banked
 13693  0016D6  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13694  0016D8  D003               	goto	l513
 13695                           
 13696                           ; BSR set to: 0
 13697                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
 13698  0016DA  010F               	movlb	15	; () banked
 13699  0016DC  8D11               	bsf	17,6,b	;volatile
 13700  0016DE  D002               	goto	l514
 13701  0016E0                     l513:
 13702                           
 13703                           ; BSR set to: 0
 13704                           ;inc\CANlib.h: 1024: else
 13705                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
 13706  0016E0  010F               	movlb	15	; () banked
 13707  0016E2  9D11               	bcf	17,6,b	;volatile
 13708  0016E4                     l514:
 13709                           
 13710                           ; BSR set to: 15
 13711                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
 13712  0016E4  0100               	movlb	0	; () banked
 13713  0016E6  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13714  0016E8  D003               	goto	l515
 13715                           
 13716                           ; BSR set to: 0
 13717                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
 13718  0016EA  010F               	movlb	15	; () banked
 13719  0016EC  8F11               	bsf	17,7,b	;volatile
 13720  0016EE  D002               	goto	l5237
 13721  0016F0                     l515:
 13722                           
 13723                           ; BSR set to: 0
 13724                           ;inc\CANlib.h: 1029: else
 13725                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
 13726  0016F0  010F               	movlb	15	; () banked
 13727  0016F2  9F11               	bcf	17,7,b	;volatile
 13728  0016F4                     l5237:
 13729                           
 13730                           ; BSR set to: 15
 13731                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
 13732  0016F4  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13733  0016F8  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13734  0016FC  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13735  001700  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13736  001704  0E16               	movlw	22
 13737  001706  D006               	goto	u6320
 13738  001708                     u6325:
 13739  001708  0100               	movlb	0	; () banked
 13740  00170A  90D8               	bcf	status,0,c
 13741  00170C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13742  00170E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13743  001710  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13744  001712  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13745  001714                     u6320:
 13746  001714  2EE8               	decfsz	wreg,f,c
 13747  001716  D7F8               	goto	u6325
 13748  001718  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13749  00171C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13750  001720  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13751  001724  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13752                           
 13753                           ; BSR set to: 0
 13754                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
 13755  001728  0100               	movlb	0	; () banked
 13756  00172A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13757  00172C  0100               	movlb	0	; () banked
 13758  00172E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13759  001730  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13760  001732  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13761  001734  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13762                           
 13763                           ; BSR set to: 0
 13764                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
 13765  001736  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 13766  00173A                     l5243:
 13767                           
 13768                           ; BSR set to: 0
 13769                           ;inc\CANlib.h: 1035: }
 13770                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
 13771  00173A  0E05               	movlw	5
 13772  00173C  0100               	movlb	0	; () banked
 13773  00173E  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13774  001740  A4D8               	btfss	status,2,c
 13775  001742  0012               	return	
 13776                           
 13777                           ; BSR set to: 0
 13778  001744  0EF7               	movlw	247
 13779  001746  0100               	movlb	0	; () banked
 13780  001748  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13781  00174A  A4D8               	btfss	status,2,c
 13782  00174C  0012               	return	
 13783                           
 13784                           ; BSR set to: 0
 13785                           ;inc\CANlib.h: 1038: {
 13786                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
 13787  00174E  010F               	movlb	15	; () banked
 13788  001750  8715               	bsf	21,3,b	;volatile
 13789                           
 13790                           ; BSR set to: 15
 13791                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
 13792  001752  0100               	movlb	0	; () banked
 13793  001754  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13794  001756  0100               	movlb	0	; () banked
 13795  001758  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13796  00175A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13797  00175C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13798  00175E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13799                           
 13800                           ; BSR set to: 0
 13801                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
 13802  001760  C081  FF17         	movff	CANSetFilter@tamp,3863	;volatile
 13803                           
 13804                           ; BSR set to: 0
 13805                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
 13806  001764  0E00               	movlw	0
 13807  001766  0100               	movlb	0	; () banked
 13808  001768  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13809  00176A  0100               	movlb	0	; () banked
 13810  00176C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13811  00176E  0EFF               	movlw	255
 13812  001770  0100               	movlb	0	; () banked
 13813  001772  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13814  001774  0100               	movlb	0	; () banked
 13815  001776  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13816  001778  0E00               	movlw	0
 13817  00177A  0100               	movlb	0	; () banked
 13818  00177C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13819  00177E  0100               	movlb	0	; () banked
 13820  001780  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13821  001782  0E00               	movlw	0
 13822  001784  0100               	movlb	0	; () banked
 13823  001786  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13824  001788  0100               	movlb	0	; () banked
 13825  00178A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13826                           
 13827                           ; BSR set to: 0
 13828                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
 13829  00178C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13830  001790  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13831  001794  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13832  001798  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13833  00179C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13834  0017A0  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13835  0017A4  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13836  0017A8  0100               	movlb	0	; () banked
 13837  0017AA  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13838  0017AC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13839  0017B0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13840  0017B4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13841  0017B8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13842                           
 13843                           ; BSR set to: 0
 13844                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
 13845  0017BC  C081  FF16         	movff	CANSetFilter@tamp,3862	;volatile
 13846                           
 13847                           ; BSR set to: 0
 13848                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
 13849  0017C0  0100               	movlb	0	; () banked
 13850  0017C2  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13851  0017C4  D003               	goto	l518
 13852                           
 13853                           ; BSR set to: 0
 13854                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
 13855  0017C6  010F               	movlb	15	; () banked
 13856  0017C8  8115               	bsf	21,0,b	;volatile
 13857  0017CA  D002               	goto	l519
 13858  0017CC                     l518:
 13859                           
 13860                           ; BSR set to: 0
 13861                           ;inc\CANlib.h: 1050: else
 13862                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
 13863  0017CC  010F               	movlb	15	; () banked
 13864  0017CE  9115               	bcf	21,0,b	;volatile
 13865  0017D0                     l519:
 13866                           
 13867                           ; BSR set to: 15
 13868                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
 13869  0017D0  0100               	movlb	0	; () banked
 13870  0017D2  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13871  0017D4  D003               	goto	l520
 13872                           
 13873                           ; BSR set to: 0
 13874                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
 13875  0017D6  010F               	movlb	15	; () banked
 13876  0017D8  8315               	bsf	21,1,b	;volatile
 13877  0017DA  D002               	goto	l521
 13878  0017DC                     l520:
 13879                           
 13880                           ; BSR set to: 0
 13881                           ;inc\CANlib.h: 1055: else
 13882                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
 13883  0017DC  010F               	movlb	15	; () banked
 13884  0017DE  9315               	bcf	21,1,b	;volatile
 13885  0017E0                     l521:
 13886                           
 13887                           ; BSR set to: 15
 13888                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
 13889  0017E0  0100               	movlb	0	; () banked
 13890  0017E2  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13891  0017E4  D003               	goto	l522
 13892                           
 13893                           ; BSR set to: 0
 13894                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
 13895  0017E6  010F               	movlb	15	; () banked
 13896  0017E8  8B15               	bsf	21,5,b	;volatile
 13897  0017EA  D002               	goto	l523
 13898  0017EC                     l522:
 13899                           
 13900                           ; BSR set to: 0
 13901                           ;inc\CANlib.h: 1060: else
 13902                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
 13903  0017EC  010F               	movlb	15	; () banked
 13904  0017EE  9B15               	bcf	21,5,b	;volatile
 13905  0017F0                     l523:
 13906                           
 13907                           ; BSR set to: 15
 13908                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
 13909  0017F0  0100               	movlb	0	; () banked
 13910  0017F2  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13911  0017F4  D003               	goto	l524
 13912                           
 13913                           ; BSR set to: 0
 13914                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
 13915  0017F6  010F               	movlb	15	; () banked
 13916  0017F8  8D15               	bsf	21,6,b	;volatile
 13917  0017FA  D002               	goto	l525
 13918  0017FC                     l524:
 13919                           
 13920                           ; BSR set to: 0
 13921                           ;inc\CANlib.h: 1065: else
 13922                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
 13923  0017FC  010F               	movlb	15	; () banked
 13924  0017FE  9D15               	bcf	21,6,b	;volatile
 13925  001800                     l525:
 13926                           
 13927                           ; BSR set to: 15
 13928                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
 13929  001800  0100               	movlb	0	; () banked
 13930  001802  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13931  001804  D003               	goto	l526
 13932                           
 13933                           ; BSR set to: 0
 13934                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
 13935  001806  010F               	movlb	15	; () banked
 13936  001808  8F15               	bsf	21,7,b	;volatile
 13937  00180A  D002               	goto	l5271
 13938  00180C                     l526:
 13939                           
 13940                           ; BSR set to: 0
 13941                           ;inc\CANlib.h: 1070: else
 13942                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
 13943  00180C  010F               	movlb	15	; () banked
 13944  00180E  9F15               	bcf	21,7,b	;volatile
 13945  001810                     l5271:
 13946                           
 13947                           ; BSR set to: 15
 13948                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
 13949  001810  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13950  001814  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13951  001818  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13952  00181C  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13953  001820  0E16               	movlw	22
 13954  001822  D006               	goto	u6400
 13955  001824                     u6405:
 13956  001824  0100               	movlb	0	; () banked
 13957  001826  90D8               	bcf	status,0,c
 13958  001828  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13959  00182A  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13960  00182C  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13961  00182E  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13962  001830                     u6400:
 13963  001830  2EE8               	decfsz	wreg,f,c
 13964  001832  D7F8               	goto	u6405
 13965  001834  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13966  001838  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13967  00183C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13968  001840  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13969                           
 13970                           ; BSR set to: 0
 13971                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
 13972  001844  0100               	movlb	0	; () banked
 13973  001846  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13974  001848  0100               	movlb	0	; () banked
 13975  00184A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13976  00184C  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13977  00184E  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13978  001850  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13979                           
 13980                           ; BSR set to: 0
 13981                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
 13982  001852  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 13983  001856  0012               	return	
 13984  001858                     __end_of_CANSetFilter:
 13985                           	opt stack 0
 13986                           tblptru	equ	0xFF8
 13987                           tblptrh	equ	0xFF7
 13988                           tblptrl	equ	0xFF6
 13989                           tablat	equ	0xFF5
 13990                           prodh	equ	0xFF4
 13991                           prodl	equ	0xFF3
 13992                           intcon	equ	0xFF2
 13993                           intcon2	equ	0xFF1
 13994                           postinc0	equ	0xFEE
 13995                           wreg	equ	0xFE8
 13996                           postdec1	equ	0xFE5
 13997                           fsr1l	equ	0xFE1
 13998                           indf2	equ	0xFDF
 13999                           postinc2	equ	0xFDE
 14000                           postdec2	equ	0xFDD
 14001                           fsr2h	equ	0xFDA
 14002                           fsr2l	equ	0xFD9
 14003                           status	equ	0xFD8
 14004                           
 14005 ;; *************** function _CANOperationMode *****************
 14006 ;; Defined at:
 14007 ;;		line 206 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 14008 ;; Parameters:    Size  Location     Type
 14009 ;;  mode            1    wreg     enum E16307
 14010 ;; Auto vars:     Size  Location     Type
 14011 ;;  mode            1   23[BANK0 ] enum E16307
 14012 ;; Return value:  Size  Location     Type
 14013 ;;		None               void
 14014 ;; Registers used:
 14015 ;;		wreg, status,2, status,0
 14016 ;; Tracked objects:
 14017 ;;		On entry : 0/0
 14018 ;;		On exit  : 0/0
 14019 ;;		Unchanged: 0/0
 14020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14022 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14024 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14025 ;;Total ram usage:        1 bytes
 14026 ;; Hardware stack levels used:    1
 14027 ;; Hardware stack levels required when called:    4
 14028 ;; This function calls:
 14029 ;;		Nothing
 14030 ;; This function is called by:
 14031 ;;		_CANInitialize
 14032 ;; This function uses a non-reentrant model
 14033 ;;
 14034                           
 14035                           	psect	text33
 14036  005D6C                     __ptext33:
 14037                           	opt stack 0
 14038  005D6C                     _CANOperationMode:
 14039                           	opt stack 24
 14040                           
 14041                           ; BSR set to: 0
 14042                           ;incstack = 0
 14043                           ;CANOperationMode@mode stored from wreg
 14044  005D6C  0100               	movlb	0	; () banked
 14045  005D6E  6F77               	movwf	CANOperationMode@mode& (0+255),b
 14046                           
 14047                           ;inc\CANlib.h: 208: CANCON = mode;
 14048  005D70  C077  FF6F         	movff	CANOperationMode@mode,3951	;volatile
 14049  005D74                     l4867:
 14050  005D74  506E               	movf	3950,w,c	;volatile
 14051  005D76  0BE0               	andlw	224
 14052  005D78  0100               	movlb	0	; () banked
 14053  005D7A  1977               	xorwf	CANOperationMode@mode& (0+255),w,b
 14054  005D7C  B4D8               	btfsc	status,2,c
 14055  005D7E  0012               	return	
 14056  005D80  D7F9               	goto	l4867
 14057  005D82                     __end_of_CANOperationMode:
 14058                           	opt stack 0
 14059                           tblptru	equ	0xFF8
 14060                           tblptrh	equ	0xFF7
 14061                           tblptrl	equ	0xFF6
 14062                           tablat	equ	0xFF5
 14063                           prodh	equ	0xFF4
 14064                           prodl	equ	0xFF3
 14065                           intcon	equ	0xFF2
 14066                           intcon2	equ	0xFF1
 14067                           postinc0	equ	0xFEE
 14068                           wreg	equ	0xFE8
 14069                           postdec1	equ	0xFE5
 14070                           fsr1l	equ	0xFE1
 14071                           indf2	equ	0xFDF
 14072                           postinc2	equ	0xFDE
 14073                           postdec2	equ	0xFDD
 14074                           fsr2h	equ	0xFDA
 14075                           fsr2l	equ	0xFD9
 14076                           status	equ	0xFD8
 14077                           
 14078 ;; *************** function _can_interpreter *****************
 14079 ;; Defined at:
 14080 ;;		line 410 in file "parcheggio.c"
 14081 ;; Parameters:    Size  Location     Type
 14082 ;;		None
 14083 ;; Auto vars:     Size  Location     Type
 14084 ;;		None
 14085 ;; Return value:  Size  Location     Type
 14086 ;;		None               void
 14087 ;; Registers used:
 14088 ;;		wreg, status,2, status,0
 14089 ;; Tracked objects:
 14090 ;;		On entry : 0/0
 14091 ;;		On exit  : 0/0
 14092 ;;		Unchanged: 0/0
 14093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14096 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14097 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14098 ;;Total ram usage:        4 bytes
 14099 ;; Hardware stack levels used:    1
 14100 ;; Hardware stack levels required when called:    4
 14101 ;; This function calls:
 14102 ;;		Nothing
 14103 ;; This function is called by:
 14104 ;;		_main
 14105 ;; This function uses a non-reentrant model
 14106 ;;
 14107                           
 14108                           	psect	text34
 14109  005B22                     __ptext34:
 14110                           	opt stack 0
 14111  005B22                     _can_interpreter:
 14112                           	opt stack 26
 14113                           
 14114                           ;parcheggio.c: 411: left_speed = data_speed_rx[1];
 14115                           
 14116                           ; BSR set to: 0
 14117                           ;incstack = 0
 14118  005B22  C109  F038         	movff	_data_speed_rx+1,_left_speed
 14119  005B26  6A39               	clrf	_left_speed+1,c
 14120                           
 14121                           ;parcheggio.c: 412: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 14122  005B28  5038               	movf	_left_speed,w,c
 14123  005B2A  0100               	movlb	0	; () banked
 14124  005B2C  6F77               	movwf	??_can_interpreter& (0+255),b
 14125  005B2E  0101               	movlb	1	; () banked
 14126  005B30  5108               	movf	_data_speed_rx& (0+255),w,b
 14127  005B32  6E38               	movwf	_left_speed,c
 14128  005B34  C077  F039         	movff	??_can_interpreter,_left_speed+1
 14129                           
 14130                           ; BSR set to: 1
 14131                           ;parcheggio.c: 413: right_speed = data_speed_rx[3];
 14132  005B38  C10B  F03C         	movff	_data_speed_rx+3,_right_speed
 14133  005B3C  6A3D               	clrf	_right_speed+1,c
 14134                           
 14135                           ;parcheggio.c: 414: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 14136  005B3E  503C               	movf	_right_speed,w,c
 14137  005B40  0100               	movlb	0	; () banked
 14138  005B42  6F77               	movwf	??_can_interpreter& (0+255),b
 14139  005B44  0101               	movlb	1	; () banked
 14140  005B46  510A               	movf	(_data_speed_rx+2)& (0+255),w,b
 14141  005B48  6E3C               	movwf	_right_speed,c
 14142  005B4A  C077  F03D         	movff	??_can_interpreter,_right_speed+1
 14143                           
 14144                           ; BSR set to: 1
 14145                           ;parcheggio.c: 415: actual_speed = (right_speed + left_speed) / 2;
 14146  005B4E  5038               	movf	_left_speed,w,c
 14147  005B50  243C               	addwf	_right_speed,w,c
 14148  005B52  0100               	movlb	0	; () banked
 14149  005B54  6F77               	movwf	??_can_interpreter& (0+255),b
 14150  005B56  5039               	movf	_left_speed+1,w,c
 14151  005B58  203D               	addwfc	_right_speed+1,w,c
 14152  005B5A  0100               	movlb	0	; () banked
 14153  005B5C  6F78               	movwf	(??_can_interpreter+1)& (0+255),b
 14154  005B5E  90D8               	bcf	status,0,c
 14155  005B60  0100               	movlb	0	; () banked
 14156  005B62  3178               	rrcf	(??_can_interpreter+1)& (0+255),w,b
 14157  005B64  0100               	movlb	0	; () banked
 14158  005B66  6F79               	movwf	(??_can_interpreter+2)& (0+255),b
 14159  005B68  0100               	movlb	0	; () banked
 14160  005B6A  3177               	rrcf	??_can_interpreter& (0+255),w,b
 14161  005B6C  0100               	movlb	0	; () banked
 14162  005B6E  6FDF               	movwf	_actual_speed& (0+255),b
 14163  005B70  C079  F0E0         	movff	??_can_interpreter+2,_actual_speed+1
 14164                           
 14165                           ; BSR set to: 0
 14166  005B74  0012               	return		;funcret
 14167  005B76                     __end_of_can_interpreter:
 14168                           	opt stack 0
 14169                           tblptru	equ	0xFF8
 14170                           tblptrh	equ	0xFF7
 14171                           tblptrl	equ	0xFF6
 14172                           tablat	equ	0xFF5
 14173                           prodh	equ	0xFF4
 14174                           prodl	equ	0xFF3
 14175                           intcon	equ	0xFF2
 14176                           intcon2	equ	0xFF1
 14177                           postinc0	equ	0xFEE
 14178                           wreg	equ	0xFE8
 14179                           postdec1	equ	0xFE5
 14180                           fsr1l	equ	0xFE1
 14181                           indf2	equ	0xFDF
 14182                           postinc2	equ	0xFDE
 14183                           postdec2	equ	0xFDD
 14184                           fsr2h	equ	0xFDA
 14185                           fsr2l	equ	0xFD9
 14186                           status	equ	0xFD8
 14187                           
 14188 ;; *************** function _ISR_Bassa *****************
 14189 ;; Defined at:
 14190 ;;		line 109 in file "parcheggio.c"
 14191 ;; Parameters:    Size  Location     Type
 14192 ;;		None
 14193 ;; Auto vars:     Size  Location     Type
 14194 ;;  i               1   34[COMRAM] unsigned char 
 14195 ;;  gigi            1   33[COMRAM] unsigned char 
 14196 ;; Return value:  Size  Location     Type
 14197 ;;		None               void
 14198 ;; Registers used:
 14199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14200 ;; Tracked objects:
 14201 ;;		On entry : 0/0
 14202 ;;		On exit  : 0/0
 14203 ;;		Unchanged: 0/0
 14204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14206 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14207 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14208 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14209 ;;Total ram usage:       23 bytes
 14210 ;; Hardware stack levels used:    1
 14211 ;; Hardware stack levels required when called:    3
 14212 ;; This function calls:
 14213 ;;		_CANreceiveMessage
 14214 ;; This function is called by:
 14215 ;;		Interrupt level 1
 14216 ;; This function uses a non-reentrant model
 14217 ;;
 14218                           
 14219                           	psect	intcodelo
 14220  000018                     __pintcodelo:
 14221                           	opt stack 0
 14222  000018                     _ISR_Bassa:
 14223                           	opt stack 21
 14224                           
 14225                           ; BSR set to: 0
 14226                           ;incstack = 0
 14227  000018  8048               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 14228  00001A  CFD8 F011          	movff	status,??_ISR_Bassa+4
 14229  00001E  CFE8 F012          	movff	wreg,??_ISR_Bassa+5
 14230  000022  CFE0 F013          	movff	bsr,??_ISR_Bassa+6
 14231  000026  CFFA F014          	movff	pclath,??_ISR_Bassa+7
 14232  00002A  CFFB F015          	movff	pclatu,??_ISR_Bassa+8
 14233  00002E  CFE9 F016          	movff	fsr0l,??_ISR_Bassa+9
 14234  000032  CFEA F017          	movff	fsr0h,??_ISR_Bassa+10
 14235  000036  CFE1 F018          	movff	fsr1l,??_ISR_Bassa+11
 14236  00003A  CFE2 F019          	movff	fsr1h,??_ISR_Bassa+12
 14237  00003E  CFD9 F01A          	movff	fsr2l,??_ISR_Bassa+13
 14238  000042  CFDA F01B          	movff	fsr2h,??_ISR_Bassa+14
 14239  000046  CFF3 F01C          	movff	prodl,??_ISR_Bassa+15
 14240  00004A  CFF4 F01D          	movff	prodh,??_ISR_Bassa+16
 14241  00004E  CFF6 F01E          	movff	tblptrl,??_ISR_Bassa+17
 14242  000052  CFF7 F01F          	movff	tblptrh,??_ISR_Bassa+18
 14243  000056  CFF8 F020          	movff	tblptru,??_ISR_Bassa+19
 14244  00005A  CFF5 F021          	movff	tablat,??_ISR_Bassa+20
 14245                           
 14246                           ;parcheggio.c: 111: if (INTCONbits.TMR0IF == 1) {
 14247  00005E  A4F2               	btfss	intcon,2,c	;volatile
 14248  000060  D036               	goto	i1l5945
 14249                           
 14250                           ;parcheggio.c: 112: INTCONbits.INT0IE = 0;
 14251  000062  98F2               	bcf	intcon,4,c	;volatile
 14252                           
 14253                           ;parcheggio.c: 113: T0CONbits.TMR0ON = 0;
 14254  000064  9ED5               	bcf	4053,7,c	;volatile
 14255                           
 14256                           ;parcheggio.c: 114: TMR0H = 0x34;
 14257  000066  0E34               	movlw	52
 14258  000068  6ED7               	movwf	4055,c	;volatile
 14259                           
 14260                           ;parcheggio.c: 115: TMR0L = 0xE0;
 14261  00006A  0EE0               	movlw	224
 14262  00006C  6ED6               	movwf	4054,c	;volatile
 14263                           
 14264                           ;parcheggio.c: 116: T0CONbits.TMR0ON = 1;
 14265  00006E  8ED5               	bsf	4053,7,c	;volatile
 14266                           
 14267                           ;parcheggio.c: 117: if (distance_error == 1) {
 14268  000070  A644               	btfss	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14269  000072  D00C               	goto	i1l5915
 14270                           
 14271                           ;parcheggio.c: 118: sensor_distance[MUX_index] = 5000;
 14272  000074  5040               	movf	_MUX_index,w,c	;volatile
 14273  000076  0D02               	mullw	2
 14274  000078  0E24               	movlw	low _sensor_distance
 14275  00007A  24F3               	addwf	prodl,w,c
 14276  00007C  6ED9               	movwf	fsr2l,c
 14277  00007E  0E00               	movlw	high _sensor_distance
 14278  000080  20F4               	addwfc	prodh,w,c
 14279  000082  6EDA               	movwf	fsr2h,c
 14280  000084  0E88               	movlw	136
 14281  000086  6EDE               	movwf	postinc2,c
 14282  000088  0E13               	movlw	19
 14283  00008A  6EDD               	movwf	postdec2,c
 14284  00008C                     i1l5915:
 14285                           
 14286                           ;parcheggio.c: 119: }
 14287                           ;parcheggio.c: 120: MUX_index++;
 14288  00008C  2A40               	incf	_MUX_index,f,c	;volatile
 14289                           
 14290                           ;parcheggio.c: 121: if (MUX_index == 8) {
 14291  00008E  0E08               	movlw	8
 14292  000090  1840               	xorwf	_MUX_index,w,c	;volatile
 14293  000092  A4D8               	btfss	status,2,c
 14294  000094  D002               	goto	i1l695
 14295                           
 14296                           ;parcheggio.c: 122: MUX_index = 0;
 14297  000096  0E00               	movlw	0
 14298  000098  6E40               	movwf	_MUX_index,c	;volatile
 14299  00009A                     i1l695:
 14300                           
 14301                           ;parcheggio.c: 123: }
 14302                           ;parcheggio.c: 125: unsigned char gigi = 0;
 14303  00009A  0E00               	movlw	0
 14304  00009C  6E22               	movwf	ISR_Bassa@gigi,c
 14305                           
 14306                           ;parcheggio.c: 126: gigi = MUX_select[MUX_index];
 14307  00009E  5040               	movf	_MUX_index,w,c	;volatile
 14308  0000A0  0D01               	mullw	1
 14309  0000A2  0E00               	movlw	low _MUX_select
 14310  0000A4  24F3               	addwf	prodl,w,c
 14311  0000A6  6ED9               	movwf	fsr2l,c
 14312  0000A8  0E01               	movlw	high _MUX_select
 14313  0000AA  20F4               	addwfc	prodh,w,c
 14314  0000AC  6EDA               	movwf	fsr2h,c
 14315  0000AE  50DF               	movf	indf2,w,c
 14316  0000B0  6E22               	movwf	ISR_Bassa@gigi,c
 14317                           
 14318                           ;parcheggio.c: 127: PORTA = gigi;
 14319  0000B2  C022  FF80         	movff	ISR_Bassa@gigi,3968	;volatile
 14320                           
 14321                           ;parcheggio.c: 128: TRISBbits.RB0 = 0;
 14322  0000B6  9093               	bcf	3987,0,c	;volatile
 14323                           
 14324                           ;parcheggio.c: 129: LATBbits.LATB0 = 1;
 14325  0000B8  808A               	bsf	3978,0,c	;volatile
 14326                           
 14327                           ;parcheggio.c: 130: _delay((unsigned long)((15)*(16000000/4000000.0)));
 14328  0000BA  0E14               	movlw	20
 14329  0000BC                     i1u907_27:
 14330  0000BC  2EE8               	decfsz	wreg,f,c
 14331  0000BE  D7FE               	goto	i1u907_27
 14332                           
 14333                           ;parcheggio.c: 131: distance_error = 1;
 14334  0000C0  8644               	bsf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14335                           
 14336                           ;parcheggio.c: 132: LATBbits.LATB0 = 0;
 14337  0000C2  908A               	bcf	3978,0,c	;volatile
 14338                           
 14339                           ;parcheggio.c: 133: TRISBbits.RB0 = 1;
 14340  0000C4  8093               	bsf	3987,0,c	;volatile
 14341                           
 14342                           ;parcheggio.c: 134: INTCONbits.INT0IF = 0;
 14343  0000C6  92F2               	bcf	intcon,1,c	;volatile
 14344                           
 14345                           ;parcheggio.c: 135: INTCONbits.INT0IE = 1;
 14346  0000C8  88F2               	bsf	intcon,4,c	;volatile
 14347                           
 14348                           ;parcheggio.c: 136: INTCONbits.TMR0IF = 0;
 14349  0000CA  94F2               	bcf	intcon,2,c	;volatile
 14350                           
 14351                           ;parcheggio.c: 137: INTCON2bits.INTEDG0 = 1;
 14352  0000CC  8CF1               	bsf	intcon2,6,c	;volatile
 14353  0000CE                     i1l5945:
 14354                           
 14355                           ;parcheggio.c: 138: }
 14356                           ;parcheggio.c: 140: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
 14357  0000CE  A0A4               	btfss	4004,0,c	;volatile
 14358  0000D0  B2A4               	btfsc	4004,1,c	;volatile
 14359  0000D2  D001               	goto	i1l5949
 14360  0000D4  D09D               	goto	i1l709
 14361  0000D6                     i1l5949:
 14362                           
 14363                           ;parcheggio.c: 141: CANreceiveMessage(&msg);
 14364  0000D6  0E44               	movlw	low _msg
 14365  0000D8  6E01               	movwf	CANreceiveMessage@msg,c
 14366  0000DA  0E01               	movlw	high _msg
 14367  0000DC  6E02               	movwf	CANreceiveMessage@msg+1,c
 14368  0000DE  ECF2  F00F         	call	_CANreceiveMessage	;wreg free
 14369                           
 14370                           ;parcheggio.c: 142: if (msg.identifier == 0b00000001101) {
 14371  0000E2  0E0D               	movlw	13
 14372  0000E4  0101               	movlb	1	; () banked
 14373  0000E6  1944               	xorwf	_msg& (0+255),w,b
 14374  0000E8  0101               	movlb	1	; () banked
 14375  0000EA  1145               	iorwf	(_msg+1)& (0+255),w,b
 14376  0000EC  0101               	movlb	1	; () banked
 14377  0000EE  1146               	iorwf	(_msg+2)& (0+255),w,b
 14378  0000F0  0101               	movlb	1	; () banked
 14379  0000F2  1147               	iorwf	(_msg+3)& (0+255),w,b
 14380  0000F4  B4D8               	btfsc	status,2,c
 14381                           
 14382                           ; BSR set to: 1
 14383                           ;parcheggio.c: 143: asd = 0;
 14384  0000F6  9244               	bcf	_asd/(0+8),_asd& (0+7),c	;volatile
 14385                           
 14386                           ; BSR set to: 1
 14387                           ;parcheggio.c: 144: }
 14388                           ;parcheggio.c: 145: if ((msg.identifier == 0b00000000111) && (msg.RTR != 1)) {
 14389                           
 14390                           ; BSR set to: 1
 14391  0000F8  0E07               	movlw	7
 14392  0000FA  0101               	movlb	1	; () banked
 14393  0000FC  1944               	xorwf	_msg& (0+255),w,b
 14394  0000FE  0101               	movlb	1	; () banked
 14395  000100  1145               	iorwf	(_msg+1)& (0+255),w,b
 14396  000102  0101               	movlb	1	; () banked
 14397  000104  1146               	iorwf	(_msg+2)& (0+255),w,b
 14398  000106  0101               	movlb	1	; () banked
 14399  000108  1147               	iorwf	(_msg+3)& (0+255),w,b
 14400  00010A  A4D8               	btfss	status,2,c
 14401  00010C  D02D               	goto	i1l5971
 14402                           
 14403                           ; BSR set to: 1
 14404  00010E  0101               	movlb	1	; () banked
 14405  000110  0552               	decf	(_msg+14)& (0+255),w,b
 14406  000112  B4D8               	btfsc	status,2,c
 14407  000114  D029               	goto	i1l5971
 14408                           
 14409                           ; BSR set to: 1
 14410                           ;parcheggio.c: 146: distance_average = 0;
 14411  000116  0E00               	movlw	0
 14412  000118  0100               	movlb	0	; () banked
 14413  00011A  6FE4               	movwf	(_distance_average+1)& (0+255),b	;volatile
 14414  00011C  0E00               	movlw	0
 14415  00011E  6FE3               	movwf	_distance_average& (0+255),b	;volatile
 14416                           
 14417                           ; BSR set to: 0
 14418                           ;parcheggio.c: 147: distance_dx = msg.data[1];
 14419  000120  C149  F034         	movff	_msg+5,_distance_dx	;volatile
 14420  000124  6A35               	clrf	_distance_dx+1,c	;volatile
 14421                           
 14422                           ;parcheggio.c: 148: distance_dx = ((distance_dx << 8) | msg.data[0]);
 14423  000126  5034               	movf	_distance_dx,w,c	;volatile
 14424  000128  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 14425  00012A  0101               	movlb	1	; () banked
 14426  00012C  5148               	movf	(_msg+4)& (0+255),w,b
 14427  00012E  6E34               	movwf	_distance_dx,c	;volatile
 14428  000130  C00D  F035         	movff	??_ISR_Bassa,_distance_dx+1	;volatile
 14429                           
 14430                           ; BSR set to: 1
 14431                           ;parcheggio.c: 149: distance_sx = msg.data[3];
 14432  000134  C14B  F036         	movff	_msg+7,_distance_sx	;volatile
 14433  000138  6A37               	clrf	_distance_sx+1,c	;volatile
 14434                           
 14435                           ;parcheggio.c: 150: distance_sx = ((distance_sx << 8) | msg.data[2]);
 14436  00013A  5036               	movf	_distance_sx,w,c	;volatile
 14437  00013C  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 14438  00013E  0101               	movlb	1	; () banked
 14439  000140  514A               	movf	(_msg+6)& (0+255),w,b
 14440  000142  6E36               	movwf	_distance_sx,c	;volatile
 14441  000144  C00D  F037         	movff	??_ISR_Bassa,_distance_sx+1	;volatile
 14442                           
 14443                           ; BSR set to: 1
 14444                           ;parcheggio.c: 151: distance_average = (distance_sx + distance_dx) / 2;
 14445  000148  5034               	movf	_distance_dx,w,c	;volatile
 14446  00014A  2436               	addwf	_distance_sx,w,c	;volatile
 14447  00014C  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 14448  00014E  5035               	movf	_distance_dx+1,w,c	;volatile
 14449  000150  2037               	addwfc	_distance_sx+1,w,c	;volatile
 14450  000152  6E0E               	movwf	(??_ISR_Bassa+1)& (0+255),c
 14451  000154  90D8               	bcf	status,0,c
 14452  000156  300E               	rrcf	??_ISR_Bassa+1,w,c
 14453  000158  6E0F               	movwf	(??_ISR_Bassa+2)& (0+255),c
 14454  00015A  300D               	rrcf	??_ISR_Bassa,w,c
 14455  00015C  0100               	movlb	0	; () banked
 14456  00015E  6FE3               	movwf	_distance_average& (0+255),b	;volatile
 14457  000160  C00F  F0E4         	movff	??_ISR_Bassa+2,_distance_average+1	;volatile
 14458                           
 14459                           ; BSR set to: 0
 14460                           ;parcheggio.c: 152: distance_received = 1;
 14461  000164  8844               	bsf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
 14462                           
 14463                           ; BSR set to: 0
 14464                           ;parcheggio.c: 153: distance_received1 = 1;
 14465  000166  8A44               	bsf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
 14466  000168                     i1l5971:
 14467                           
 14468                           ;parcheggio.c: 154: }
 14469                           ;parcheggio.c: 155: if (msg.identifier == 0b00000001010) {
 14470  000168  0E0A               	movlw	10
 14471  00016A  0101               	movlb	1	; () banked
 14472  00016C  1944               	xorwf	_msg& (0+255),w,b
 14473  00016E  0101               	movlb	1	; () banked
 14474  000170  1145               	iorwf	(_msg+1)& (0+255),w,b
 14475  000172  0101               	movlb	1	; () banked
 14476  000174  1146               	iorwf	(_msg+2)& (0+255),w,b
 14477  000176  0101               	movlb	1	; () banked
 14478  000178  1147               	iorwf	(_msg+3)& (0+255),w,b
 14479  00017A  A4D8               	btfss	status,2,c
 14480  00017C  D00C               	goto	i1l5977
 14481                           
 14482                           ; BSR set to: 1
 14483                           ;parcheggio.c: 156: if (msg.data[0] == 1) {
 14484  00017E  0101               	movlb	1	; () banked
 14485  000180  0548               	decf	(_msg+4)& (0+255),w,b
 14486  000182  A4D8               	btfss	status,2,c
 14487  000184  D003               	goto	i1l702
 14488                           
 14489                           ; BSR set to: 1
 14490                           ;parcheggio.c: 157: activation = 1;
 14491  000186  8044               	bsf	_activation/(0+8),_activation& (0+7),c	;volatile
 14492                           
 14493                           ;parcheggio.c: 158: PORTBbits.RB6 = 1;
 14494  000188  8C81               	bsf	3969,6,c	;volatile
 14495                           
 14496                           ;parcheggio.c: 159: } else {
 14497  00018A  D005               	goto	i1l5977
 14498  00018C                     i1l702:
 14499                           
 14500                           ; BSR set to: 1
 14501                           ;parcheggio.c: 160: activation = 0;
 14502  00018C  9044               	bcf	_activation/(0+8),_activation& (0+7),c	;volatile
 14503                           
 14504                           ;parcheggio.c: 161: PORTBbits.RB4 = 0;
 14505  00018E  9881               	bcf	3969,4,c	;volatile
 14506                           
 14507                           ;parcheggio.c: 162: PORTBbits.RB5 = 0;
 14508  000190  9A81               	bcf	3969,5,c	;volatile
 14509                           
 14510                           ;parcheggio.c: 163: PORTBbits.RB6 = 0;
 14511  000192  9C81               	bcf	3969,6,c	;volatile
 14512                           
 14513                           ;parcheggio.c: 164: request_sent = 0;
 14514  000194  9045               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
 14515  000196                     i1l5977:
 14516                           
 14517                           ; BSR set to: 1
 14518                           ;parcheggio.c: 165: }
 14519                           ;parcheggio.c: 166: }
 14520                           ;parcheggio.c: 167: if (msg.identifier == 0b00000001100) {
 14521  000196  0E0C               	movlw	12
 14522  000198  0101               	movlb	1	; () banked
 14523  00019A  1944               	xorwf	_msg& (0+255),w,b
 14524  00019C  0101               	movlb	1	; () banked
 14525  00019E  1145               	iorwf	(_msg+1)& (0+255),w,b
 14526  0001A0  0101               	movlb	1	; () banked
 14527  0001A2  1146               	iorwf	(_msg+2)& (0+255),w,b
 14528  0001A4  0101               	movlb	1	; () banked
 14529  0001A6  1147               	iorwf	(_msg+3)& (0+255),w,b
 14530  0001A8  B4D8               	btfsc	status,2,c
 14531                           
 14532                           ; BSR set to: 1
 14533                           ;parcheggio.c: 168: start_operation = 1;
 14534  0001AA  8445               	bsf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 14535                           
 14536                           ; BSR set to: 1
 14537                           ;parcheggio.c: 169: }
 14538                           ;parcheggio.c: 170: if (msg.identifier == 0b00000000110) {
 14539                           
 14540                           ; BSR set to: 1
 14541  0001AC  0E06               	movlw	6
 14542  0001AE  0101               	movlb	1	; () banked
 14543  0001B0  1944               	xorwf	_msg& (0+255),w,b
 14544  0001B2  0101               	movlb	1	; () banked
 14545  0001B4  1145               	iorwf	(_msg+1)& (0+255),w,b
 14546  0001B6  0101               	movlb	1	; () banked
 14547  0001B8  1146               	iorwf	(_msg+2)& (0+255),w,b
 14548  0001BA  0101               	movlb	1	; () banked
 14549  0001BC  1147               	iorwf	(_msg+3)& (0+255),w,b
 14550  0001BE  A4D8               	btfss	status,2,c
 14551  0001C0  D025               	goto	i1l705
 14552                           
 14553                           ; BSR set to: 1
 14554                           ;parcheggio.c: 171: for (unsigned char i = 0; i < 8; i++) {
 14555  0001C2  0E00               	movlw	0
 14556  0001C4  6E23               	movwf	ISR_Bassa@i,c
 14557  0001C6                     i1l5985:
 14558                           
 14559                           ; BSR set to: 1
 14560  0001C6  0E07               	movlw	7
 14561  0001C8  6423               	cpfsgt	ISR_Bassa@i,c
 14562  0001CA  D001               	goto	i1l5989
 14563  0001CC  D014               	goto	i1l5995
 14564  0001CE                     i1l5989:
 14565                           
 14566                           ;parcheggio.c: 172: data_speed_rx[i] = msg.data[i];
 14567  0001CE  5023               	movf	ISR_Bassa@i,w,c
 14568  0001D0  0D01               	mullw	1
 14569  0001D2  0E48               	movlw	low (_msg+4)
 14570  0001D4  24F3               	addwf	prodl,w,c
 14571  0001D6  6ED9               	movwf	fsr2l,c
 14572  0001D8  0E01               	movlw	high (_msg+4)
 14573  0001DA  20F4               	addwfc	prodh,w,c
 14574  0001DC  6EDA               	movwf	fsr2h,c
 14575  0001DE  5023               	movf	ISR_Bassa@i,w,c
 14576  0001E0  0D01               	mullw	1
 14577  0001E2  0E08               	movlw	low _data_speed_rx
 14578  0001E4  24F3               	addwf	prodl,w,c
 14579  0001E6  6EE1               	movwf	fsr1l,c
 14580  0001E8  0E01               	movlw	high _data_speed_rx
 14581  0001EA  20F4               	addwfc	prodh,w,c
 14582  0001EC  6EE2               	movwf	fsr1h,c
 14583  0001EE  CFDF FFE7          	movff	indf2,indf1
 14584  0001F2  2A23               	incf	ISR_Bassa@i,f,c
 14585  0001F4  D7E8               	goto	i1l5985
 14586  0001F6                     i1l5995:
 14587                           
 14588                           ;parcheggio.c: 173: }
 14589                           ;parcheggio.c: 174: if (msg.identifier == 0b00000001101) {
 14590  0001F6  0E0D               	movlw	13
 14591  0001F8  0101               	movlb	1	; () banked
 14592  0001FA  1944               	xorwf	_msg& (0+255),w,b
 14593  0001FC  0101               	movlb	1	; () banked
 14594  0001FE  1145               	iorwf	(_msg+1)& (0+255),w,b
 14595  000200  0101               	movlb	1	; () banked
 14596  000202  1146               	iorwf	(_msg+2)& (0+255),w,b
 14597  000204  0101               	movlb	1	; () banked
 14598  000206  1147               	iorwf	(_msg+3)& (0+255),w,b
 14599  000208  B4D8               	btfsc	status,2,c
 14600                           
 14601                           ; BSR set to: 1
 14602                           ;parcheggio.c: 175: distance_wait = 0;
 14603  00020A  9C44               	bcf	_distance_wait/(0+8),_distance_wait& (0+7),c	;volatile
 14604  00020C                     i1l705:
 14605                           
 14606                           ; BSR set to: 1
 14607                           ;parcheggio.c: 176: }
 14608                           ;parcheggio.c: 178: }
 14609                           ;parcheggio.c: 180: PIR3bits.RXB0IF = 0;
 14610  00020C  90A4               	bcf	4004,0,c	;volatile
 14611                           
 14612                           ;parcheggio.c: 181: PIR3bits.RXB1IF = 0;
 14613  00020E  92A4               	bcf	4004,1,c	;volatile
 14614  000210                     i1l709:
 14615  000210  C021  FFF5         	movff	??_ISR_Bassa+20,tablat
 14616  000214  C020  FFF8         	movff	??_ISR_Bassa+19,tblptru
 14617  000218  C01F  FFF7         	movff	??_ISR_Bassa+18,tblptrh
 14618  00021C  C01E  FFF6         	movff	??_ISR_Bassa+17,tblptrl
 14619  000220  C01D  FFF4         	movff	??_ISR_Bassa+16,prodh
 14620  000224  C01C  FFF3         	movff	??_ISR_Bassa+15,prodl
 14621  000228  C01B  FFDA         	movff	??_ISR_Bassa+14,fsr2h
 14622  00022C  C01A  FFD9         	movff	??_ISR_Bassa+13,fsr2l
 14623  000230  C019  FFE2         	movff	??_ISR_Bassa+12,fsr1h
 14624  000234  C018  FFE1         	movff	??_ISR_Bassa+11,fsr1l
 14625  000238  C017  FFEA         	movff	??_ISR_Bassa+10,fsr0h
 14626  00023C  C016  FFE9         	movff	??_ISR_Bassa+9,fsr0l
 14627  000240  C015  FFFB         	movff	??_ISR_Bassa+8,pclatu
 14628  000244  C014  FFFA         	movff	??_ISR_Bassa+7,pclath
 14629  000248  C013  FFE0         	movff	??_ISR_Bassa+6,bsr
 14630  00024C  C012  FFE8         	movff	??_ISR_Bassa+5,wreg
 14631  000250  C011  FFD8         	movff	??_ISR_Bassa+4,status
 14632  000254  9048               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 14633  000256  0010               	retfie	
 14634  000258                     __end_of_ISR_Bassa:
 14635                           	opt stack 0
 14636                           pclatu	equ	0xFFB
 14637                           pclath	equ	0xFFA
 14638                           tblptru	equ	0xFF8
 14639                           tblptrh	equ	0xFF7
 14640                           tblptrl	equ	0xFF6
 14641                           tablat	equ	0xFF5
 14642                           prodh	equ	0xFF4
 14643                           prodl	equ	0xFF3
 14644                           intcon	equ	0xFF2
 14645                           intcon2	equ	0xFF1
 14646                           postinc0	equ	0xFEE
 14647                           fsr0h	equ	0xFEA
 14648                           fsr0l	equ	0xFE9
 14649                           wreg	equ	0xFE8
 14650                           indf1	equ	0xFE7
 14651                           postdec1	equ	0xFE5
 14652                           fsr1h	equ	0xFE2
 14653                           fsr1l	equ	0xFE1
 14654                           bsr	equ	0xFE0
 14655                           indf2	equ	0xFDF
 14656                           postinc2	equ	0xFDE
 14657                           postdec2	equ	0xFDD
 14658                           fsr2h	equ	0xFDA
 14659                           fsr2l	equ	0xFD9
 14660                           status	equ	0xFD8
 14661                           
 14662 ;; *************** function _CANreceiveMessage *****************
 14663 ;; Defined at:
 14664 ;;		line 528 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 14665 ;; Parameters:    Size  Location     Type
 14666 ;;  msg             2    0[COMRAM] PTR struct .
 14667 ;;		 -> msg(15), 
 14668 ;; Auto vars:     Size  Location     Type
 14669 ;;  tamp            1   11[COMRAM] unsigned char 
 14670 ;;  error           1   10[COMRAM] unsigned char 
 14671 ;; Return value:  Size  Location     Type
 14672 ;;                  1    wreg      unsigned char 
 14673 ;; Registers used:
 14674 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14675 ;; Tracked objects:
 14676 ;;		On entry : 0/0
 14677 ;;		On exit  : 0/0
 14678 ;;		Unchanged: 0/0
 14679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14680 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14681 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14682 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14683 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14684 ;;Total ram usage:       12 bytes
 14685 ;; Hardware stack levels used:    1
 14686 ;; Hardware stack levels required when called:    2
 14687 ;; This function calls:
 14688 ;;		Nothing
 14689 ;; This function is called by:
 14690 ;;		_ISR_Bassa
 14691 ;; This function uses a non-reentrant model
 14692 ;;
 14693                           
 14694                           	psect	text36
 14695  001FE4                     __ptext36:
 14696                           	opt stack 0
 14697  001FE4                     _CANreceiveMessage:
 14698                           	opt stack 21
 14699                           
 14700                           ;inc\CANlib.h: 530: BYTE tamp;
 14701                           ;inc\CANlib.h: 531: BYTE error = 0;
 14702                           
 14703                           ;incstack = 0
 14704  001FE4  0E00               	movlw	0
 14705  001FE6  6E0B               	movwf	CANreceiveMessage@error,c
 14706                           
 14707                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 14708  001FE8  BE74               	btfsc	3956,7,c	;volatile
 14709                           
 14710                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 14711  001FEA  800B               	bsf	CANreceiveMessage@error,0,c
 14712                           
 14713                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 14714  001FEC  BC74               	btfsc	3956,6,c	;volatile
 14715                           
 14716                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 14717  001FEE  820B               	bsf	CANreceiveMessage@error,1,c
 14718                           
 14719                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 14720  001FF0  010F               	movlb	15	; () banked
 14721  001FF2  AF50               	btfss	80,7,b	;volatile
 14722  001FF4  D143               	goto	i1l410
 14723                           
 14724                           ; BSR set to: 15
 14725                           ;inc\CANlib.h: 541: {
 14726                           ;inc\CANlib.h: 542: msg->identifier = 0;
 14727  001FF6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14728  001FFA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14729  001FFE  6ADE               	clrf	postinc2,c
 14730  002000  6ADE               	clrf	postinc2,c
 14731  002002  6ADE               	clrf	postinc2,c
 14732  002004  6ADD               	clrf	postdec2,c
 14733                           
 14734                           ; BSR set to: 15
 14735                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 14736  002006  EE20 F004          	lfsr	2,4
 14737  00200A  5001               	movf	CANreceiveMessage@msg,w,c
 14738  00200C  26D9               	addwf	fsr2l,f,c
 14739  00200E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14740  002010  22DA               	addwfc	fsr2h,f,c
 14741  002012  CF56 FFDF          	movff	3926,indf2	;volatile
 14742                           
 14743                           ; BSR set to: 15
 14744                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 14745  002016  EE20 F005          	lfsr	2,5
 14746  00201A  5001               	movf	CANreceiveMessage@msg,w,c
 14747  00201C  26D9               	addwf	fsr2l,f,c
 14748  00201E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14749  002020  22DA               	addwfc	fsr2h,f,c
 14750  002022  CF57 FFDF          	movff	3927,indf2	;volatile
 14751                           
 14752                           ; BSR set to: 15
 14753                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 14754  002026  EE20 F006          	lfsr	2,6
 14755  00202A  5001               	movf	CANreceiveMessage@msg,w,c
 14756  00202C  26D9               	addwf	fsr2l,f,c
 14757  00202E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14758  002030  22DA               	addwfc	fsr2h,f,c
 14759  002032  CF58 FFDF          	movff	3928,indf2	;volatile
 14760                           
 14761                           ; BSR set to: 15
 14762                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 14763  002036  EE20 F007          	lfsr	2,7
 14764  00203A  5001               	movf	CANreceiveMessage@msg,w,c
 14765  00203C  26D9               	addwf	fsr2l,f,c
 14766  00203E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14767  002040  22DA               	addwfc	fsr2h,f,c
 14768  002042  CF59 FFDF          	movff	3929,indf2	;volatile
 14769                           
 14770                           ; BSR set to: 15
 14771                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 14772  002046  EE20 F008          	lfsr	2,8
 14773  00204A  5001               	movf	CANreceiveMessage@msg,w,c
 14774  00204C  26D9               	addwf	fsr2l,f,c
 14775  00204E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14776  002050  22DA               	addwfc	fsr2h,f,c
 14777  002052  CF5A FFDF          	movff	3930,indf2	;volatile
 14778                           
 14779                           ; BSR set to: 15
 14780                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 14781  002056  EE20 F009          	lfsr	2,9
 14782  00205A  5001               	movf	CANreceiveMessage@msg,w,c
 14783  00205C  26D9               	addwf	fsr2l,f,c
 14784  00205E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14785  002060  22DA               	addwfc	fsr2h,f,c
 14786  002062  CF5B FFDF          	movff	3931,indf2	;volatile
 14787                           
 14788                           ; BSR set to: 15
 14789                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 14790  002066  EE20 F00A          	lfsr	2,10
 14791  00206A  5001               	movf	CANreceiveMessage@msg,w,c
 14792  00206C  26D9               	addwf	fsr2l,f,c
 14793  00206E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14794  002070  22DA               	addwfc	fsr2h,f,c
 14795  002072  CF5C FFDF          	movff	3932,indf2	;volatile
 14796                           
 14797                           ; BSR set to: 15
 14798                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 14799  002076  EE20 F00B          	lfsr	2,11
 14800  00207A  5001               	movf	CANreceiveMessage@msg,w,c
 14801  00207C  26D9               	addwf	fsr2l,f,c
 14802  00207E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14803  002080  22DA               	addwfc	fsr2h,f,c
 14804  002082  CF5D FFDF          	movff	3933,indf2	;volatile
 14805                           
 14806                           ; BSR set to: 15
 14807                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 14808  002086  EE20 F00E          	lfsr	2,14
 14809  00208A  5001               	movf	CANreceiveMessage@msg,w,c
 14810  00208C  26D9               	addwf	fsr2l,f,c
 14811  00208E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14812  002090  22DA               	addwfc	fsr2h,f,c
 14813  002092  010F               	movlb	15	; () banked
 14814  002094  AD55               	btfss	85,6,b	;volatile
 14815  002096  D002               	goto	i1u669_20
 14816  002098  0E01               	movlw	1
 14817  00209A  D001               	goto	i1u669_26
 14818  00209C                     i1u669_20:
 14819  00209C  0E00               	movlw	0
 14820  00209E                     i1u669_26:
 14821  00209E  6EDF               	movwf	indf2,c
 14822                           
 14823                           ; BSR set to: 15
 14824                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 14825  0020A0  EE20 F00D          	lfsr	2,13
 14826  0020A4  5001               	movf	CANreceiveMessage@msg,w,c
 14827  0020A6  26D9               	addwf	fsr2l,f,c
 14828  0020A8  5002               	movf	CANreceiveMessage@msg+1,w,c
 14829  0020AA  22DA               	addwfc	fsr2h,f,c
 14830  0020AC  010F               	movlb	15	; () banked
 14831  0020AE  5155               	movf	85,w,b	;volatile
 14832  0020B0  0B0F               	andlw	15
 14833  0020B2  6EDF               	movwf	indf2,c
 14834                           
 14835                           ; BSR set to: 15
 14836                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 14837  0020B4  EE20 F00C          	lfsr	2,12
 14838  0020B8  5001               	movf	CANreceiveMessage@msg,w,c
 14839  0020BA  26D9               	addwf	fsr2l,f,c
 14840  0020BC  5002               	movf	CANreceiveMessage@msg+1,w,c
 14841  0020BE  22DA               	addwfc	fsr2h,f,c
 14842  0020C0  010F               	movlb	15	; () banked
 14843  0020C2  A752               	btfss	82,3,b	;volatile
 14844  0020C4  D002               	goto	i1u670_20
 14845  0020C6  0E01               	movlw	1
 14846  0020C8  D001               	goto	i1u670_26
 14847  0020CA                     i1u670_20:
 14848  0020CA  0E00               	movlw	0
 14849  0020CC                     i1u670_26:
 14850  0020CC  6EDF               	movwf	indf2,c
 14851                           
 14852                           ; BSR set to: 15
 14853                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 14854  0020CE  010F               	movlb	15	; () banked
 14855  0020D0  B752               	btfsc	82,3,b	;volatile
 14856  0020D2  D044               	goto	i1l5553
 14857                           
 14858                           ; BSR set to: 15
 14859                           ;inc\CANlib.h: 559: {
 14860                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 14861  0020D4  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 14862  0020D8  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 14863  0020DA  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 14864  0020DC  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 14865  0020DE  0E03               	movlw	3
 14866  0020E0                     i1u672_25:
 14867  0020E0  90D8               	bcf	status,0,c
 14868  0020E2  3603               	rlcf	??_CANreceiveMessage,f,c
 14869  0020E4  3604               	rlcf	??_CANreceiveMessage+1,f,c
 14870  0020E6  3605               	rlcf	??_CANreceiveMessage+2,f,c
 14871  0020E8  3606               	rlcf	??_CANreceiveMessage+3,f,c
 14872  0020EA  2EE8               	decfsz	wreg,f,c
 14873  0020EC  D7F9               	goto	i1u672_25
 14874  0020EE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14875  0020F2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14876  0020F6  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 14877  0020FA  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 14878  0020FE  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 14879  002102  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 14880                           
 14881                           ; BSR set to: 15
 14882                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 14883  002106  010F               	movlb	15	; () banked
 14884  002108  3952               	swapf	82,w,b	;volatile
 14885  00210A  42E8               	rrncf	wreg,f,c
 14886  00210C  0B07               	andlw	7
 14887  00210E  0B07               	andlw	7
 14888  002110  6E0C               	movwf	CANreceiveMessage@tamp,c
 14889                           
 14890                           ; BSR set to: 15
 14891                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 14892  002112  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14893  002116  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14894  00211A  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 14895  00211E  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 14896  002122  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 14897  002126  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 14898  00212A  500C               	movf	CANreceiveMessage@tamp,w,c
 14899  00212C  2403               	addwf	??_CANreceiveMessage,w,c
 14900  00212E  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 14901  002130  0E00               	movlw	0
 14902  002132  2004               	addwfc	??_CANreceiveMessage+1,w,c
 14903  002134  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 14904  002136  0E00               	movlw	0
 14905  002138  2005               	addwfc	??_CANreceiveMessage+2,w,c
 14906  00213A  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 14907  00213C  0E00               	movlw	0
 14908  00213E  2006               	addwfc	??_CANreceiveMessage+3,w,c
 14909  002140  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 14910  002142  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14911  002146  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14912  00214A  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 14913  00214E  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 14914  002152  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 14915  002156  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 14916                           
 14917                           ;inc\CANlib.h: 563: }
 14918  00215A  D08D               	goto	i1l5579
 14919  00215C                     i1l5553:
 14920                           
 14921                           ; BSR set to: 15
 14922                           ;inc\CANlib.h: 564: else
 14923                           ;inc\CANlib.h: 565: {
 14924                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 14925  00215C  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
 14926  002160  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 14927  002162  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 14928  002164  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 14929  002166  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14930  00216A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14931  00216E  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 14932  002172  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 14933  002176  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 14934  00217A  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 14935                           
 14936                           ; BSR set to: 15
 14937                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 14938  00217E  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
 14939  002182  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 14940  002184  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 14941  002186  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 14942  002188  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 14943  00218C  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 14944  002190  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 14945  002194  6A03               	clrf	??_CANreceiveMessage,c
 14946  002196  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14947  00219A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14948  00219E  5003               	movf	??_CANreceiveMessage,w,c
 14949  0021A0  26DE               	addwf	postinc2,f,c
 14950  0021A2  5004               	movf	??_CANreceiveMessage+1,w,c
 14951  0021A4  22DE               	addwfc	postinc2,f,c
 14952  0021A6  5005               	movf	??_CANreceiveMessage+2,w,c
 14953  0021A8  22DE               	addwfc	postinc2,f,c
 14954  0021AA  5006               	movf	??_CANreceiveMessage+3,w,c
 14955  0021AC  22DE               	addwfc	postinc2,f,c
 14956                           
 14957                           ; BSR set to: 15
 14958                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 14959  0021AE  010F               	movlb	15	; () banked
 14960  0021B0  A152               	btfss	82,0,b	;volatile
 14961  0021B2  D00C               	goto	i1l5561
 14962                           
 14963                           ; BSR set to: 15
 14964                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 14965  0021B4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14966  0021B8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14967  0021BC  0E00               	movlw	0
 14968  0021BE  12DE               	iorwf	postinc2,f,c
 14969  0021C0  0E00               	movlw	0
 14970  0021C2  12DE               	iorwf	postinc2,f,c
 14971  0021C4  0E01               	movlw	1
 14972  0021C6  12DE               	iorwf	postinc2,f,c
 14973  0021C8  0E00               	movlw	0
 14974  0021CA  12DE               	iorwf	postinc2,f,c
 14975  0021CC                     i1l5561:
 14976                           
 14977                           ; BSR set to: 15
 14978                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 14979  0021CC  010F               	movlb	15	; () banked
 14980  0021CE  A352               	btfss	82,1,b	;volatile
 14981  0021D0  D00C               	goto	i1l5565
 14982                           
 14983                           ; BSR set to: 15
 14984                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 14985  0021D2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14986  0021D6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14987  0021DA  0E00               	movlw	0
 14988  0021DC  12DE               	iorwf	postinc2,f,c
 14989  0021DE  0E00               	movlw	0
 14990  0021E0  12DE               	iorwf	postinc2,f,c
 14991  0021E2  0E02               	movlw	2
 14992  0021E4  12DE               	iorwf	postinc2,f,c
 14993  0021E6  0E00               	movlw	0
 14994  0021E8  12DE               	iorwf	postinc2,f,c
 14995  0021EA                     i1l5565:
 14996                           
 14997                           ; BSR set to: 15
 14998                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 14999  0021EA  010F               	movlb	15	; () banked
 15000  0021EC  AB52               	btfss	82,5,b	;volatile
 15001  0021EE  D00C               	goto	i1l5569
 15002                           
 15003                           ; BSR set to: 15
 15004                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 15005  0021F0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15006  0021F4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15007  0021F8  0E00               	movlw	0
 15008  0021FA  12DE               	iorwf	postinc2,f,c
 15009  0021FC  0E00               	movlw	0
 15010  0021FE  12DE               	iorwf	postinc2,f,c
 15011  002200  0E04               	movlw	4
 15012  002202  12DE               	iorwf	postinc2,f,c
 15013  002204  0E00               	movlw	0
 15014  002206  12DE               	iorwf	postinc2,f,c
 15015  002208                     i1l5569:
 15016                           
 15017                           ; BSR set to: 15
 15018                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 15019  002208  010F               	movlb	15	; () banked
 15020  00220A  AD52               	btfss	82,6,b	;volatile
 15021  00220C  D00C               	goto	i1l5573
 15022                           
 15023                           ; BSR set to: 15
 15024                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 15025  00220E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15026  002212  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15027  002216  0E00               	movlw	0
 15028  002218  12DE               	iorwf	postinc2,f,c
 15029  00221A  0E00               	movlw	0
 15030  00221C  12DE               	iorwf	postinc2,f,c
 15031  00221E  0E08               	movlw	8
 15032  002220  12DE               	iorwf	postinc2,f,c
 15033  002222  0E00               	movlw	0
 15034  002224  12DE               	iorwf	postinc2,f,c
 15035  002226                     i1l5573:
 15036                           
 15037                           ; BSR set to: 15
 15038                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 15039  002226  010F               	movlb	15	; () banked
 15040  002228  AF52               	btfss	82,7,b	;volatile
 15041  00222A  D00C               	goto	i1l5577
 15042                           
 15043                           ; BSR set to: 15
 15044                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 15045  00222C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15046  002230  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15047  002234  0E00               	movlw	0
 15048  002236  12DE               	iorwf	postinc2,f,c
 15049  002238  0E00               	movlw	0
 15050  00223A  12DE               	iorwf	postinc2,f,c
 15051  00223C  0E10               	movlw	16
 15052  00223E  12DE               	iorwf	postinc2,f,c
 15053  002240  0E00               	movlw	0
 15054  002242  12DE               	iorwf	postinc2,f,c
 15055  002244                     i1l5577:
 15056                           
 15057                           ; BSR set to: 15
 15058                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 15059  002244  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 15060  002248  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15061  00224A  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15062  00224C  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15063  00224E  0E15               	movlw	21
 15064  002250                     i1u678_25:
 15065  002250  90D8               	bcf	status,0,c
 15066  002252  3603               	rlcf	??_CANreceiveMessage,f,c
 15067  002254  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15068  002256  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15069  002258  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15070  00225A  2EE8               	decfsz	wreg,f,c
 15071  00225C  D7F9               	goto	i1u678_25
 15072  00225E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15073  002262  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15074  002266  5003               	movf	??_CANreceiveMessage,w,c
 15075  002268  12DE               	iorwf	postinc2,f,c
 15076  00226A  5004               	movf	??_CANreceiveMessage+1,w,c
 15077  00226C  12DE               	iorwf	postinc2,f,c
 15078  00226E  5005               	movf	??_CANreceiveMessage+2,w,c
 15079  002270  12DE               	iorwf	postinc2,f,c
 15080  002272  5006               	movf	??_CANreceiveMessage+3,w,c
 15081  002274  12DE               	iorwf	postinc2,f,c
 15082  002276                     i1l5579:
 15083                           
 15084                           ; BSR set to: 15
 15085                           ;inc\CANlib.h: 581: }
 15086                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 15087  002276  010F               	movlb	15	; () banked
 15088  002278  9F50               	bcf	80,7,b	;volatile
 15089                           
 15090                           ; BSR set to: 15
 15091                           ;inc\CANlib.h: 584: return (error);
 15092                           ;	Return value of _CANreceiveMessage is never used
 15093  00227A  0012               	return	
 15094  00227C                     i1l410:
 15095                           
 15096                           ; BSR set to: 15
 15097                           ;inc\CANlib.h: 585: }
 15098                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 15099  00227C  AE60               	btfss	3936,7,c	;volatile
 15100  00227E  0012               	return	
 15101                           
 15102                           ; BSR set to: 15
 15103                           ;inc\CANlib.h: 588: {
 15104                           ;inc\CANlib.h: 589: msg->identifier = 0;
 15105  002280  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15106  002284  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15107  002288  6ADE               	clrf	postinc2,c
 15108  00228A  6ADE               	clrf	postinc2,c
 15109  00228C  6ADE               	clrf	postinc2,c
 15110  00228E  6ADD               	clrf	postdec2,c
 15111                           
 15112                           ; BSR set to: 15
 15113                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 15114  002290  EE20 F004          	lfsr	2,4
 15115  002294  5001               	movf	CANreceiveMessage@msg,w,c
 15116  002296  26D9               	addwf	fsr2l,f,c
 15117  002298  5002               	movf	CANreceiveMessage@msg+1,w,c
 15118  00229A  22DA               	addwfc	fsr2h,f,c
 15119  00229C  CF66 FFDF          	movff	3942,indf2	;volatile
 15120                           
 15121                           ; BSR set to: 15
 15122                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 15123  0022A0  EE20 F005          	lfsr	2,5
 15124  0022A4  5001               	movf	CANreceiveMessage@msg,w,c
 15125  0022A6  26D9               	addwf	fsr2l,f,c
 15126  0022A8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15127  0022AA  22DA               	addwfc	fsr2h,f,c
 15128  0022AC  CF67 FFDF          	movff	3943,indf2	;volatile
 15129                           
 15130                           ; BSR set to: 15
 15131                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 15132  0022B0  EE20 F006          	lfsr	2,6
 15133  0022B4  5001               	movf	CANreceiveMessage@msg,w,c
 15134  0022B6  26D9               	addwf	fsr2l,f,c
 15135  0022B8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15136  0022BA  22DA               	addwfc	fsr2h,f,c
 15137  0022BC  CF68 FFDF          	movff	3944,indf2	;volatile
 15138                           
 15139                           ; BSR set to: 15
 15140                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 15141  0022C0  EE20 F007          	lfsr	2,7
 15142  0022C4  5001               	movf	CANreceiveMessage@msg,w,c
 15143  0022C6  26D9               	addwf	fsr2l,f,c
 15144  0022C8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15145  0022CA  22DA               	addwfc	fsr2h,f,c
 15146  0022CC  CF69 FFDF          	movff	3945,indf2	;volatile
 15147                           
 15148                           ; BSR set to: 15
 15149                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 15150  0022D0  EE20 F008          	lfsr	2,8
 15151  0022D4  5001               	movf	CANreceiveMessage@msg,w,c
 15152  0022D6  26D9               	addwf	fsr2l,f,c
 15153  0022D8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15154  0022DA  22DA               	addwfc	fsr2h,f,c
 15155  0022DC  CF6A FFDF          	movff	3946,indf2	;volatile
 15156                           
 15157                           ; BSR set to: 15
 15158                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 15159  0022E0  EE20 F009          	lfsr	2,9
 15160  0022E4  5001               	movf	CANreceiveMessage@msg,w,c
 15161  0022E6  26D9               	addwf	fsr2l,f,c
 15162  0022E8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15163  0022EA  22DA               	addwfc	fsr2h,f,c
 15164  0022EC  CF6B FFDF          	movff	3947,indf2	;volatile
 15165                           
 15166                           ; BSR set to: 15
 15167                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 15168  0022F0  EE20 F00A          	lfsr	2,10
 15169  0022F4  5001               	movf	CANreceiveMessage@msg,w,c
 15170  0022F6  26D9               	addwf	fsr2l,f,c
 15171  0022F8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15172  0022FA  22DA               	addwfc	fsr2h,f,c
 15173  0022FC  CF6C FFDF          	movff	3948,indf2	;volatile
 15174                           
 15175                           ; BSR set to: 15
 15176                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 15177  002300  EE20 F00B          	lfsr	2,11
 15178  002304  5001               	movf	CANreceiveMessage@msg,w,c
 15179  002306  26D9               	addwf	fsr2l,f,c
 15180  002308  5002               	movf	CANreceiveMessage@msg+1,w,c
 15181  00230A  22DA               	addwfc	fsr2h,f,c
 15182  00230C  CF6D FFDF          	movff	3949,indf2	;volatile
 15183                           
 15184                           ; BSR set to: 15
 15185                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 15186  002310  EE20 F00E          	lfsr	2,14
 15187  002314  5001               	movf	CANreceiveMessage@msg,w,c
 15188  002316  26D9               	addwf	fsr2l,f,c
 15189  002318  5002               	movf	CANreceiveMessage@msg+1,w,c
 15190  00231A  22DA               	addwfc	fsr2h,f,c
 15191  00231C  AC65               	btfss	3941,6,c	;volatile
 15192  00231E  D002               	goto	i1u680_20
 15193  002320  0E01               	movlw	1
 15194  002322  D001               	goto	i1u680_26
 15195  002324                     i1u680_20:
 15196  002324  0E00               	movlw	0
 15197  002326                     i1u680_26:
 15198  002326  6EDF               	movwf	indf2,c
 15199                           
 15200                           ; BSR set to: 15
 15201                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 15202  002328  EE20 F00D          	lfsr	2,13
 15203  00232C  5001               	movf	CANreceiveMessage@msg,w,c
 15204  00232E  26D9               	addwf	fsr2l,f,c
 15205  002330  5002               	movf	CANreceiveMessage@msg+1,w,c
 15206  002332  22DA               	addwfc	fsr2h,f,c
 15207  002334  5065               	movf	3941,w,c	;volatile
 15208  002336  0B0F               	andlw	15
 15209  002338  6EDF               	movwf	indf2,c
 15210                           
 15211                           ; BSR set to: 15
 15212                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 15213  00233A  EE20 F00C          	lfsr	2,12
 15214  00233E  5001               	movf	CANreceiveMessage@msg,w,c
 15215  002340  26D9               	addwf	fsr2l,f,c
 15216  002342  5002               	movf	CANreceiveMessage@msg+1,w,c
 15217  002344  22DA               	addwfc	fsr2h,f,c
 15218  002346  A662               	btfss	3938,3,c	;volatile
 15219  002348  D002               	goto	i1u681_20
 15220  00234A  0E01               	movlw	1
 15221  00234C  D001               	goto	i1u681_26
 15222  00234E                     i1u681_20:
 15223  00234E  0E00               	movlw	0
 15224  002350                     i1u681_26:
 15225  002350  6EDF               	movwf	indf2,c
 15226                           
 15227                           ; BSR set to: 15
 15228                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 15229  002352  B662               	btfsc	3938,3,c	;volatile
 15230  002354  D043               	goto	i1l5615
 15231                           
 15232                           ; BSR set to: 15
 15233                           ;inc\CANlib.h: 606: {
 15234                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 15235  002356  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 15236  00235A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15237  00235C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15238  00235E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15239  002360  0E03               	movlw	3
 15240  002362                     i1u683_25:
 15241  002362  90D8               	bcf	status,0,c
 15242  002364  3603               	rlcf	??_CANreceiveMessage,f,c
 15243  002366  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15244  002368  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15245  00236A  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15246  00236C  2EE8               	decfsz	wreg,f,c
 15247  00236E  D7F9               	goto	i1u683_25
 15248  002370  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15249  002374  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15250  002378  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 15251  00237C  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 15252  002380  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 15253  002384  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 15254                           
 15255                           ; BSR set to: 15
 15256                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 15257  002388  3862               	swapf	3938,w,c	;volatile
 15258  00238A  42E8               	rrncf	wreg,f,c
 15259  00238C  0B07               	andlw	7
 15260  00238E  0B07               	andlw	7
 15261  002390  6E0C               	movwf	CANreceiveMessage@tamp,c
 15262                           
 15263                           ; BSR set to: 15
 15264                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 15265  002392  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15266  002396  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15267  00239A  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 15268  00239E  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 15269  0023A2  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 15270  0023A6  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 15271  0023AA  500C               	movf	CANreceiveMessage@tamp,w,c
 15272  0023AC  2403               	addwf	??_CANreceiveMessage,w,c
 15273  0023AE  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 15274  0023B0  0E00               	movlw	0
 15275  0023B2  2004               	addwfc	??_CANreceiveMessage+1,w,c
 15276  0023B4  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 15277  0023B6  0E00               	movlw	0
 15278  0023B8  2005               	addwfc	??_CANreceiveMessage+2,w,c
 15279  0023BA  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 15280  0023BC  0E00               	movlw	0
 15281  0023BE  2006               	addwfc	??_CANreceiveMessage+3,w,c
 15282  0023C0  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 15283  0023C2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15284  0023C6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15285  0023CA  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 15286  0023CE  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 15287  0023D2  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 15288  0023D6  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 15289                           
 15290                           ;inc\CANlib.h: 610: }
 15291  0023DA  D088               	goto	i1l5641
 15292  0023DC                     i1l5615:
 15293                           
 15294                           ; BSR set to: 15
 15295                           ;inc\CANlib.h: 611: else
 15296                           ;inc\CANlib.h: 612: {
 15297                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 15298  0023DC  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
 15299  0023E0  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15300  0023E2  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15301  0023E4  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15302  0023E6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15303  0023EA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15304  0023EE  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 15305  0023F2  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 15306  0023F6  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 15307  0023FA  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 15308                           
 15309                           ; BSR set to: 15
 15310                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 15311  0023FE  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
 15312  002402  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15313  002404  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15314  002406  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15315  002408  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 15316  00240C  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 15317  002410  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 15318  002414  6A03               	clrf	??_CANreceiveMessage,c
 15319  002416  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15320  00241A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15321  00241E  5003               	movf	??_CANreceiveMessage,w,c
 15322  002420  26DE               	addwf	postinc2,f,c
 15323  002422  5004               	movf	??_CANreceiveMessage+1,w,c
 15324  002424  22DE               	addwfc	postinc2,f,c
 15325  002426  5005               	movf	??_CANreceiveMessage+2,w,c
 15326  002428  22DE               	addwfc	postinc2,f,c
 15327  00242A  5006               	movf	??_CANreceiveMessage+3,w,c
 15328  00242C  22DE               	addwfc	postinc2,f,c
 15329                           
 15330                           ; BSR set to: 15
 15331                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 15332  00242E  A062               	btfss	3938,0,c	;volatile
 15333  002430  D00C               	goto	i1l5623
 15334                           
 15335                           ; BSR set to: 15
 15336                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 15337  002432  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15338  002436  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15339  00243A  0E00               	movlw	0
 15340  00243C  12DE               	iorwf	postinc2,f,c
 15341  00243E  0E00               	movlw	0
 15342  002440  12DE               	iorwf	postinc2,f,c
 15343  002442  0E01               	movlw	1
 15344  002444  12DE               	iorwf	postinc2,f,c
 15345  002446  0E00               	movlw	0
 15346  002448  12DE               	iorwf	postinc2,f,c
 15347  00244A                     i1l5623:
 15348                           
 15349                           ; BSR set to: 15
 15350                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 15351  00244A  A262               	btfss	3938,1,c	;volatile
 15352  00244C  D00C               	goto	i1l5627
 15353                           
 15354                           ; BSR set to: 15
 15355                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 15356  00244E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15357  002452  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15358  002456  0E00               	movlw	0
 15359  002458  12DE               	iorwf	postinc2,f,c
 15360  00245A  0E00               	movlw	0
 15361  00245C  12DE               	iorwf	postinc2,f,c
 15362  00245E  0E02               	movlw	2
 15363  002460  12DE               	iorwf	postinc2,f,c
 15364  002462  0E00               	movlw	0
 15365  002464  12DE               	iorwf	postinc2,f,c
 15366  002466                     i1l5627:
 15367                           
 15368                           ; BSR set to: 15
 15369                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 15370  002466  AA62               	btfss	3938,5,c	;volatile
 15371  002468  D00C               	goto	i1l5631
 15372                           
 15373                           ; BSR set to: 15
 15374                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 15375  00246A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15376  00246E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15377  002472  0E00               	movlw	0
 15378  002474  12DE               	iorwf	postinc2,f,c
 15379  002476  0E00               	movlw	0
 15380  002478  12DE               	iorwf	postinc2,f,c
 15381  00247A  0E04               	movlw	4
 15382  00247C  12DE               	iorwf	postinc2,f,c
 15383  00247E  0E00               	movlw	0
 15384  002480  12DE               	iorwf	postinc2,f,c
 15385  002482                     i1l5631:
 15386                           
 15387                           ; BSR set to: 15
 15388                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 15389  002482  AC62               	btfss	3938,6,c	;volatile
 15390  002484  D00C               	goto	i1l5635
 15391                           
 15392                           ; BSR set to: 15
 15393                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 15394  002486  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15395  00248A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15396  00248E  0E00               	movlw	0
 15397  002490  12DE               	iorwf	postinc2,f,c
 15398  002492  0E00               	movlw	0
 15399  002494  12DE               	iorwf	postinc2,f,c
 15400  002496  0E08               	movlw	8
 15401  002498  12DE               	iorwf	postinc2,f,c
 15402  00249A  0E00               	movlw	0
 15403  00249C  12DE               	iorwf	postinc2,f,c
 15404  00249E                     i1l5635:
 15405                           
 15406                           ; BSR set to: 15
 15407                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 15408  00249E  AE62               	btfss	3938,7,c	;volatile
 15409  0024A0  D00C               	goto	i1l5639
 15410                           
 15411                           ; BSR set to: 15
 15412                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 15413  0024A2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15414  0024A6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15415  0024AA  0E00               	movlw	0
 15416  0024AC  12DE               	iorwf	postinc2,f,c
 15417  0024AE  0E00               	movlw	0
 15418  0024B0  12DE               	iorwf	postinc2,f,c
 15419  0024B2  0E10               	movlw	16
 15420  0024B4  12DE               	iorwf	postinc2,f,c
 15421  0024B6  0E00               	movlw	0
 15422  0024B8  12DE               	iorwf	postinc2,f,c
 15423  0024BA                     i1l5639:
 15424                           
 15425                           ; BSR set to: 15
 15426                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 15427  0024BA  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 15428  0024BE  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15429  0024C0  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15430  0024C2  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15431  0024C4  0E15               	movlw	21
 15432  0024C6                     i1u689_25:
 15433  0024C6  90D8               	bcf	status,0,c
 15434  0024C8  3603               	rlcf	??_CANreceiveMessage,f,c
 15435  0024CA  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15436  0024CC  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15437  0024CE  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15438  0024D0  2EE8               	decfsz	wreg,f,c
 15439  0024D2  D7F9               	goto	i1u689_25
 15440  0024D4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15441  0024D8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15442  0024DC  5003               	movf	??_CANreceiveMessage,w,c
 15443  0024DE  12DE               	iorwf	postinc2,f,c
 15444  0024E0  5004               	movf	??_CANreceiveMessage+1,w,c
 15445  0024E2  12DE               	iorwf	postinc2,f,c
 15446  0024E4  5005               	movf	??_CANreceiveMessage+2,w,c
 15447  0024E6  12DE               	iorwf	postinc2,f,c
 15448  0024E8  5006               	movf	??_CANreceiveMessage+3,w,c
 15449  0024EA  12DE               	iorwf	postinc2,f,c
 15450  0024EC                     i1l5641:
 15451                           
 15452                           ; BSR set to: 15
 15453                           ;inc\CANlib.h: 629: }
 15454                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 15455  0024EC  9E60               	bcf	3936,7,c	;volatile
 15456                           
 15457                           ; BSR set to: 15
 15458                           ;inc\CANlib.h: 632: return (error);
 15459                           ;	Return value of _CANreceiveMessage is never used
 15460  0024EE  0012               	return	
 15461  0024F0                     __end_of_CANreceiveMessage:
 15462                           	opt stack 0
 15463                           pclatu	equ	0xFFB
 15464                           pclath	equ	0xFFA
 15465                           tblptru	equ	0xFF8
 15466                           tblptrh	equ	0xFF7
 15467                           tblptrl	equ	0xFF6
 15468                           tablat	equ	0xFF5
 15469                           prodh	equ	0xFF4
 15470                           prodl	equ	0xFF3
 15471                           intcon	equ	0xFF2
 15472                           intcon2	equ	0xFF1
 15473                           postinc0	equ	0xFEE
 15474                           fsr0h	equ	0xFEA
 15475                           fsr0l	equ	0xFE9
 15476                           wreg	equ	0xFE8
 15477                           indf1	equ	0xFE7
 15478                           postdec1	equ	0xFE5
 15479                           fsr1h	equ	0xFE2
 15480                           fsr1l	equ	0xFE1
 15481                           bsr	equ	0xFE0
 15482                           indf2	equ	0xFDF
 15483                           postinc2	equ	0xFDE
 15484                           postdec2	equ	0xFDD
 15485                           fsr2h	equ	0xFDA
 15486                           fsr2l	equ	0xFD9
 15487                           status	equ	0xFD8
 15488                           
 15489 ;; *************** function _ISR_Alta *****************
 15490 ;; Defined at:
 15491 ;;		line 91 in file "parcheggio.c"
 15492 ;; Parameters:    Size  Location     Type
 15493 ;;		None
 15494 ;; Auto vars:     Size  Location     Type
 15495 ;;		None
 15496 ;; Return value:  Size  Location     Type
 15497 ;;		None               void
 15498 ;; Registers used:
 15499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15500 ;; Tracked objects:
 15501 ;;		On entry : 0/0
 15502 ;;		On exit  : 0/0
 15503 ;;		Unchanged: 0/0
 15504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15507 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15508 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15509 ;;Total ram usage:       16 bytes
 15510 ;; Hardware stack levels used:    1
 15511 ;; Hardware stack levels required when called:    1
 15512 ;; This function calls:
 15513 ;;		___lwdiv
 15514 ;; This function is called by:
 15515 ;;		Interrupt level 2
 15516 ;; This function uses a non-reentrant model
 15517 ;;
 15518                           
 15519                           	psect	intcode
 15520  000008                     __pintcode:
 15521                           	opt stack 0
 15522  000008                     _ISR_Alta:
 15523                           	opt stack 21
 15524                           
 15525                           ; BSR set to: 15
 15526                           ;incstack = 0
 15527  000008  8248               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 15528  00000A  CFFA F069          	movff	pclath,??_ISR_Alta+2
 15529  00000E  CFFB F06A          	movff	pclatu,??_ISR_Alta+3
 15530  000012  EF27  F02C         	goto	int_func
 15531                           pclatu	equ	0xFFB
 15532                           pclath	equ	0xFFA
 15533                           tblptru	equ	0xFF8
 15534                           tblptrh	equ	0xFF7
 15535                           tblptrl	equ	0xFF6
 15536                           tablat	equ	0xFF5
 15537                           prodh	equ	0xFF4
 15538                           prodl	equ	0xFF3
 15539                           intcon	equ	0xFF2
 15540                           intcon2	equ	0xFF1
 15541                           postinc0	equ	0xFEE
 15542                           fsr0h	equ	0xFEA
 15543                           fsr0l	equ	0xFE9
 15544                           wreg	equ	0xFE8
 15545                           indf1	equ	0xFE7
 15546                           postdec1	equ	0xFE5
 15547                           fsr1h	equ	0xFE2
 15548                           fsr1l	equ	0xFE1
 15549                           bsr	equ	0xFE0
 15550                           indf2	equ	0xFDF
 15551                           postinc2	equ	0xFDE
 15552                           postdec2	equ	0xFDD
 15553                           fsr2h	equ	0xFDA
 15554                           fsr2l	equ	0xFD9
 15555                           status	equ	0xFD8
 15556                           
 15557                           	psect	intcode_body
 15558  00584E                     __pintcode_body:
 15559                           	opt stack 21
 15560  00584E                     int_func:
 15561                           	opt stack 21
 15562  00584E  CFE9 F06B          	movff	fsr0l,??_ISR_Alta+4
 15563  005852  CFEA F06C          	movff	fsr0h,??_ISR_Alta+5
 15564  005856  CFE1 F06D          	movff	fsr1l,??_ISR_Alta+6
 15565  00585A  CFE2 F06E          	movff	fsr1h,??_ISR_Alta+7
 15566  00585E  CFD9 F06F          	movff	fsr2l,??_ISR_Alta+8
 15567  005862  CFDA F070          	movff	fsr2h,??_ISR_Alta+9
 15568  005866  CFF3 F071          	movff	prodl,??_ISR_Alta+10
 15569  00586A  CFF4 F072          	movff	prodh,??_ISR_Alta+11
 15570  00586E  CFF6 F073          	movff	tblptrl,??_ISR_Alta+12
 15571  005872  CFF7 F074          	movff	tblptrh,??_ISR_Alta+13
 15572  005876  CFF8 F075          	movff	tblptru,??_ISR_Alta+14
 15573  00587A  CFF5 F076          	movff	tablat,??_ISR_Alta+15
 15574                           
 15575                           ;parcheggio.c: 92: if (INTCON2bits.INTEDG0 == 1) {
 15576  00587E  ACF1               	btfss	intcon2,6,c	;volatile
 15577  005880  D007               	goto	i2l688
 15578                           
 15579                           ;parcheggio.c: 93: INTCON2bits.INTEDG0 = 0;
 15580  005882  9CF1               	bcf	intcon2,6,c	;volatile
 15581                           
 15582                           ;parcheggio.c: 94: TMR3H = 0;
 15583  005884  0E00               	movlw	0
 15584  005886  6EB3               	movwf	4019,c	;volatile
 15585                           
 15586                           ;parcheggio.c: 95: TMR3L = 0;
 15587  005888  0E00               	movlw	0
 15588  00588A  6EB2               	movwf	4018,c	;volatile
 15589                           
 15590                           ;parcheggio.c: 96: distance_error = 0;
 15591  00588C  9644               	bcf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 15592                           
 15593                           ;parcheggio.c: 97: } else {
 15594  00588E  D030               	goto	i2l7181
 15595  005890                     i2l688:
 15596                           
 15597                           ;parcheggio.c: 98: gianni = TMR3H;
 15598  005890  CFB3 F042          	movff	4019,_gianni	;volatile
 15599                           
 15600                           ;parcheggio.c: 99: asus = TMR3L;
 15601  005894  CFB2 F041          	movff	4018,_asus	;volatile
 15602                           
 15603                           ;parcheggio.c: 100: timerValue2 = gianni;
 15604  005898  C042  F03E         	movff	_gianni,_timerValue2	;volatile
 15605  00589C  6A3F               	clrf	_timerValue2+1,c	;volatile
 15606                           
 15607                           ;parcheggio.c: 101: timerValue2 = ((timerValue2 << 8) | (asus));
 15608  00589E  503E               	movf	_timerValue2,w,c	;volatile
 15609  0058A0  0100               	movlb	0	; () banked
 15610  0058A2  6F67               	movwf	??_ISR_Alta& (0+255),b
 15611  0058A4  5041               	movf	_asus,w,c	;volatile
 15612  0058A6  6E3E               	movwf	_timerValue2,c	;volatile
 15613  0058A8  C067  F03F         	movff	??_ISR_Alta,_timerValue2+1	;volatile
 15614                           
 15615                           ; BSR set to: 0
 15616                           ;parcheggio.c: 102: pulse_time = timerValue2 / 2;
 15617  0058AC  90D8               	bcf	status,0,c
 15618  0058AE  303F               	rrcf	_timerValue2+1,w,c	;volatile
 15619  0058B0  0100               	movlb	0	; () banked
 15620  0058B2  6F67               	movwf	??_ISR_Alta& (0+255),b
 15621  0058B4  303E               	rrcf	_timerValue2,w,c	;volatile
 15622  0058B6  6E3A               	movwf	_pulse_time,c	;volatile
 15623  0058B8  C067  F03B         	movff	??_ISR_Alta,_pulse_time+1	;volatile
 15624                           
 15625                           ; BSR set to: 0
 15626                           ;parcheggio.c: 103: sensor_distance[MUX_index] = pulse_time / 58;
 15627  0058BC  C03A  F060         	movff	_pulse_time,___lwdiv@dividend	;volatile
 15628  0058C0  C03B  F061         	movff	_pulse_time+1,___lwdiv@dividend+1	;volatile
 15629  0058C4  0E00               	movlw	0
 15630  0058C6  0100               	movlb	0	; () banked
 15631  0058C8  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 15632  0058CA  0E3A               	movlw	58
 15633  0058CC  6F62               	movwf	___lwdiv@divisor& (0+255),b
 15634  0058CE  EC1F  F02D         	call	___lwdiv	;wreg free
 15635  0058D2  5040               	movf	_MUX_index,w,c	;volatile
 15636  0058D4  0D02               	mullw	2
 15637  0058D6  0E24               	movlw	low _sensor_distance
 15638  0058D8  24F3               	addwf	prodl,w,c
 15639  0058DA  6ED9               	movwf	fsr2l,c
 15640  0058DC  0E00               	movlw	high _sensor_distance
 15641  0058DE  20F4               	addwfc	prodh,w,c
 15642  0058E0  6EDA               	movwf	fsr2h,c
 15643  0058E2  0100               	movlb	0	; () banked
 15644  0058E4  C060  FFDE         	movff	?___lwdiv,postinc2
 15645  0058E8  0100               	movlb	0	; () banked
 15646  0058EA  C061  FFDD         	movff	?___lwdiv+1,postdec2
 15647                           
 15648                           ; BSR set to: 0
 15649                           ;parcheggio.c: 104: INTCON2bits.INTEDG0 = 1;
 15650  0058EE  8CF1               	bsf	intcon2,6,c	;volatile
 15651  0058F0                     i2l7181:
 15652                           
 15653                           ;parcheggio.c: 105: }
 15654                           ;parcheggio.c: 106: INTCONbits.INT0IF = 0;
 15655  0058F0  92F2               	bcf	intcon,1,c	;volatile
 15656  0058F2  C076  FFF5         	movff	??_ISR_Alta+15,tablat
 15657  0058F6  C075  FFF8         	movff	??_ISR_Alta+14,tblptru
 15658  0058FA  C074  FFF7         	movff	??_ISR_Alta+13,tblptrh
 15659  0058FE  C073  FFF6         	movff	??_ISR_Alta+12,tblptrl
 15660  005902  C072  FFF4         	movff	??_ISR_Alta+11,prodh
 15661  005906  C071  FFF3         	movff	??_ISR_Alta+10,prodl
 15662  00590A  C070  FFDA         	movff	??_ISR_Alta+9,fsr2h
 15663  00590E  C06F  FFD9         	movff	??_ISR_Alta+8,fsr2l
 15664  005912  C06E  FFE2         	movff	??_ISR_Alta+7,fsr1h
 15665  005916  C06D  FFE1         	movff	??_ISR_Alta+6,fsr1l
 15666  00591A  C06C  FFEA         	movff	??_ISR_Alta+5,fsr0h
 15667  00591E  C06B  FFE9         	movff	??_ISR_Alta+4,fsr0l
 15668  005922  C06A  FFFB         	movff	??_ISR_Alta+3,pclatu
 15669  005926  C069  FFFA         	movff	??_ISR_Alta+2,pclath
 15670  00592A  9248               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 15671  00592C  0011               	retfie		f
 15672  00592E                     __end_of_ISR_Alta:
 15673                           	opt stack 0
 15674                           pclatu	equ	0xFFB
 15675                           pclath	equ	0xFFA
 15676                           tblptru	equ	0xFF8
 15677                           tblptrh	equ	0xFF7
 15678                           tblptrl	equ	0xFF6
 15679                           tablat	equ	0xFF5
 15680                           prodh	equ	0xFF4
 15681                           prodl	equ	0xFF3
 15682                           intcon	equ	0xFF2
 15683                           intcon2	equ	0xFF1
 15684                           postinc0	equ	0xFEE
 15685                           fsr0h	equ	0xFEA
 15686                           fsr0l	equ	0xFE9
 15687                           wreg	equ	0xFE8
 15688                           indf1	equ	0xFE7
 15689                           postdec1	equ	0xFE5
 15690                           fsr1h	equ	0xFE2
 15691                           fsr1l	equ	0xFE1
 15692                           bsr	equ	0xFE0
 15693                           indf2	equ	0xFDF
 15694                           postinc2	equ	0xFDE
 15695                           postdec2	equ	0xFDD
 15696                           fsr2h	equ	0xFDA
 15697                           fsr2l	equ	0xFD9
 15698                           status	equ	0xFD8
 15699                           
 15700 ;; *************** function ___lwdiv *****************
 15701 ;; Defined at:
 15702 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 15703 ;; Parameters:    Size  Location     Type
 15704 ;;  dividend        2    0[BANK0 ] unsigned int 
 15705 ;;  divisor         2    2[BANK0 ] unsigned int 
 15706 ;; Auto vars:     Size  Location     Type
 15707 ;;  quotient        2    5[BANK0 ] unsigned int 
 15708 ;;  counter         1    4[BANK0 ] unsigned char 
 15709 ;; Return value:  Size  Location     Type
 15710 ;;                  2    0[BANK0 ] unsigned int 
 15711 ;; Registers used:
 15712 ;;		wreg, status,2, status,0
 15713 ;; Tracked objects:
 15714 ;;		On entry : 0/0
 15715 ;;		On exit  : 0/0
 15716 ;;		Unchanged: 0/0
 15717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15718 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15719 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15721 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15722 ;;Total ram usage:        7 bytes
 15723 ;; Hardware stack levels used:    1
 15724 ;; This function calls:
 15725 ;;		Nothing
 15726 ;; This function is called by:
 15727 ;;		_ISR_Alta
 15728 ;; This function uses a non-reentrant model
 15729 ;;
 15730                           
 15731                           	psect	text38
 15732  005A3E                     __ptext38:
 15733                           	opt stack 0
 15734  005A3E                     ___lwdiv:
 15735                           	opt stack 21
 15736                           
 15737                           ;incstack = 0
 15738  005A3E  0E00               	movlw	0
 15739  005A40  0100               	movlb	0	; () banked
 15740  005A42  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 15741  005A44  0E00               	movlw	0
 15742  005A46  6F65               	movwf	___lwdiv@quotient& (0+255),b
 15743                           
 15744                           ; BSR set to: 0
 15745  005A48  0100               	movlb	0	; () banked
 15746  005A4A  5162               	movf	___lwdiv@divisor& (0+255),w,b
 15747  005A4C  0100               	movlb	0	; () banked
 15748  005A4E  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 15749  005A50  B4D8               	btfsc	status,2,c
 15750  005A52  D02C               	goto	i2l1256
 15751                           
 15752                           ; BSR set to: 0
 15753  005A54  0E01               	movlw	1
 15754  005A56  0100               	movlb	0	; () banked
 15755  005A58  6F64               	movwf	___lwdiv@counter& (0+255),b
 15756  005A5A  D006               	goto	i2l7151
 15757  005A5C                     i2l7149:
 15758                           
 15759                           ; BSR set to: 0
 15760  005A5C  0100               	movlb	0	; () banked
 15761  005A5E  90D8               	bcf	status,0,c
 15762  005A60  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 15763  005A62  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 15764  005A64  0100               	movlb	0	; () banked
 15765  005A66  2B64               	incf	___lwdiv@counter& (0+255),f,b
 15766  005A68                     i2l7151:
 15767                           
 15768                           ; BSR set to: 0
 15769  005A68  0100               	movlb	0	; () banked
 15770  005A6A  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 15771  005A6C  D7F7               	goto	i2l7149
 15772  005A6E                     i2l7153:
 15773                           
 15774                           ; BSR set to: 0
 15775  005A6E  0100               	movlb	0	; () banked
 15776  005A70  90D8               	bcf	status,0,c
 15777  005A72  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 15778  005A74  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 15779                           
 15780                           ; BSR set to: 0
 15781  005A76  0100               	movlb	0	; () banked
 15782  005A78  5162               	movf	___lwdiv@divisor& (0+255),w,b
 15783  005A7A  0100               	movlb	0	; () banked
 15784  005A7C  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 15785  005A7E  0100               	movlb	0	; () banked
 15786  005A80  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 15787  005A82  0100               	movlb	0	; () banked
 15788  005A84  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 15789  005A86  A0D8               	btfss	status,0,c
 15790  005A88  D00A               	goto	i2l7161
 15791                           
 15792                           ; BSR set to: 0
 15793  005A8A  0100               	movlb	0	; () banked
 15794  005A8C  5162               	movf	___lwdiv@divisor& (0+255),w,b
 15795  005A8E  0100               	movlb	0	; () banked
 15796  005A90  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 15797  005A92  0100               	movlb	0	; () banked
 15798  005A94  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 15799  005A96  0100               	movlb	0	; () banked
 15800  005A98  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 15801                           
 15802                           ; BSR set to: 0
 15803  005A9A  0100               	movlb	0	; () banked
 15804  005A9C  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 15805  005A9E                     i2l7161:
 15806                           
 15807                           ; BSR set to: 0
 15808  005A9E  0100               	movlb	0	; () banked
 15809  005AA0  90D8               	bcf	status,0,c
 15810  005AA2  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 15811  005AA4  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 15812                           
 15813                           ; BSR set to: 0
 15814  005AA6  0100               	movlb	0	; () banked
 15815  005AA8  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 15816  005AAA  D7E1               	goto	i2l7153
 15817  005AAC                     i2l1256:
 15818                           
 15819                           ; BSR set to: 0
 15820  005AAC  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 15821  005AB0  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 15822                           
 15823                           ; BSR set to: 0
 15824  005AB4  0012               	return		;funcret
 15825  005AB6                     __end_of___lwdiv:
 15826                           	opt stack 0
 15827                           pclatu	equ	0xFFB
 15828                           pclath	equ	0xFFA
 15829                           tblptru	equ	0xFF8
 15830                           tblptrh	equ	0xFF7
 15831                           tblptrl	equ	0xFF6
 15832                           tablat	equ	0xFF5
 15833                           prodh	equ	0xFF4
 15834                           prodl	equ	0xFF3
 15835                           intcon	equ	0xFF2
 15836                           intcon2	equ	0xFF1
 15837                           postinc0	equ	0xFEE
 15838                           fsr0h	equ	0xFEA
 15839                           fsr0l	equ	0xFE9
 15840                           wreg	equ	0xFE8
 15841                           indf1	equ	0xFE7
 15842                           postdec1	equ	0xFE5
 15843                           fsr1h	equ	0xFE2
 15844                           fsr1l	equ	0xFE1
 15845                           bsr	equ	0xFE0
 15846                           indf2	equ	0xFDF
 15847                           postinc2	equ	0xFDE
 15848                           postdec2	equ	0xFDD
 15849                           fsr2h	equ	0xFDA
 15850                           fsr2l	equ	0xFD9
 15851                           status	equ	0xFD8
 15852                           pclatu	equ	0xFFB
 15853                           pclath	equ	0xFFA
 15854                           tblptru	equ	0xFF8
 15855                           tblptrh	equ	0xFF7
 15856                           tblptrl	equ	0xFF6
 15857                           tablat	equ	0xFF5
 15858                           prodh	equ	0xFF4
 15859                           prodl	equ	0xFF3
 15860                           intcon	equ	0xFF2
 15861                           intcon2	equ	0xFF1
 15862                           postinc0	equ	0xFEE
 15863                           fsr0h	equ	0xFEA
 15864                           fsr0l	equ	0xFE9
 15865                           wreg	equ	0xFE8
 15866                           indf1	equ	0xFE7
 15867                           postdec1	equ	0xFE5
 15868                           fsr1h	equ	0xFE2
 15869                           fsr1l	equ	0xFE1
 15870                           bsr	equ	0xFE0
 15871                           indf2	equ	0xFDF
 15872                           postinc2	equ	0xFDE
 15873                           postdec2	equ	0xFDD
 15874                           fsr2h	equ	0xFDA
 15875                           fsr2l	equ	0xFD9
 15876                           status	equ	0xFD8
 15877                           
 15878                           	psect	param0
 15879  0000                     pclatu	equ	0xFFB
 15880                           pclath	equ	0xFFA
 15881                           tblptru	equ	0xFF8
 15882                           tblptrh	equ	0xFF7
 15883                           tblptrl	equ	0xFF6
 15884                           tablat	equ	0xFF5
 15885                           prodh	equ	0xFF4
 15886                           prodl	equ	0xFF3
 15887                           intcon	equ	0xFF2
 15888                           intcon2	equ	0xFF1
 15889                           postinc0	equ	0xFEE
 15890                           fsr0h	equ	0xFEA
 15891                           fsr0l	equ	0xFE9
 15892                           wreg	equ	0xFE8
 15893                           indf1	equ	0xFE7
 15894                           postdec1	equ	0xFE5
 15895                           fsr1h	equ	0xFE2
 15896                           fsr1l	equ	0xFE1
 15897                           bsr	equ	0xFE0
 15898                           indf2	equ	0xFDF
 15899                           postinc2	equ	0xFDE
 15900                           postdec2	equ	0xFDD
 15901                           fsr2h	equ	0xFDA
 15902                           fsr2l	equ	0xFD9
 15903                           status	equ	0xFD8
 15904                           
 15905                           	psect	temp
 15906  000048                     btemp:
 15907                           	opt stack 0
 15908  000048                     	ds	1
 15909  0000                     int$flags	set	btemp
 15910                           pclatu	equ	0xFFB
 15911                           pclath	equ	0xFFA
 15912                           tblptru	equ	0xFF8
 15913                           tblptrh	equ	0xFF7
 15914                           tblptrl	equ	0xFF6
 15915                           tablat	equ	0xFF5
 15916                           prodh	equ	0xFF4
 15917                           prodl	equ	0xFF3
 15918                           intcon	equ	0xFF2
 15919                           intcon2	equ	0xFF1
 15920                           postinc0	equ	0xFEE
 15921                           fsr0h	equ	0xFEA
 15922                           fsr0l	equ	0xFE9
 15923                           wreg	equ	0xFE8
 15924                           indf1	equ	0xFE7
 15925                           postdec1	equ	0xFE5
 15926                           fsr1h	equ	0xFE2
 15927                           fsr1l	equ	0xFE1
 15928                           bsr	equ	0xFE0
 15929                           indf2	equ	0xFDF
 15930                           postinc2	equ	0xFDE
 15931                           postdec2	equ	0xFDD
 15932                           fsr2h	equ	0xFDA
 15933                           fsr2l	equ	0xFD9
 15934                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    80
    Data        11
    BSS         179
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      71
    BANK0           160    119     136
    BANK1           256     85     224
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK1[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> can_send@data_correction1(BANK0[0]), data_correction(BANK1[8]), data_speed(BANK1[8]), data_test(BANK1[8]), 
		 -> data_brake(BANK1[8]), data_steering(BANK1[8]), data(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    None.

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _park_search->_parallelo
    _sin->_floor
    _floor->___xxtofl
    ___xxtofl->___fltol
    ___fltol->___fladd
    ___flsub->_floor
    _asin->_atan
    _sqrt->___fladd
    _atan->_eval_poly
    _fabs->___flneg
    ___flneg->___flmul
    _eval_poly->___fladd
    ___flmul->___fldiv
    ___fladd->___flneg
    ___flge->_fabs
    _delay_s->_delay_ms
    _delay_ms->___wmul
    _can_send->_CANsendMessage
    _configurazione->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask

Critical Paths under _ISR_Alta in BANK0

    _ISR_Alta->___lwdiv

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _parallelo->_asin
    _park_routine->_matematica
    _matematica->_cos
    _cos->_asin
    _sin->___flsub
    _floor->___xxtofl
    ___flsub->_floor
    _asin->_sqrt

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Alta in BANK3

    None.

Critical Paths under _ISR_Bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Alta in BANK4

    None.

Critical Paths under _ISR_Bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Alta in BANK5

    None.

Critical Paths under _ISR_Bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Alta in BANK6

    None.

Critical Paths under _ISR_Bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Alta in BANK7

    None.

Critical Paths under _ISR_Bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Alta in BANK8

    None.

Critical Paths under _ISR_Bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Alta in BANK9

    None.

Critical Paths under _ISR_Bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Alta in BANK10

    None.

Critical Paths under _ISR_Bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Alta in BANK11

    None.

Critical Paths under _ISR_Bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Alta in BANK12

    None.

Critical Paths under _ISR_Bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  236343
                    _can_interpreter
                     _configurazione
                       _park_routine
                        _park_search
 ---------------------------------------------------------------------------------
 (1) _park_search                                          2     2      0   86435
                                             45 BANK1      2     2      0
                       _CANisTxReady
                     _CANsendMessage
                           ___xxtofl
                                _abs
                          _parallelo
 ---------------------------------------------------------------------------------
 (2) _parallelo                                            2     2      0   79710
                                            117 BANK0      2     2      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _abs
                               _asin
                           _can_send
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     194
                                             23 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _park_routine                                         0     0      0  143974
                     _CANsendMessage
                            ___fladd
                            ___fltol
                           ___xxtofl
                           _can_send
                            _delay_s
                         _matematica
 ---------------------------------------------------------------------------------
 (2) _matematica                                          32    32      0  124911
                                             53 BANK1     32    32      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                               _asin
                                _cos
 ---------------------------------------------------------------------------------
 (3) _cos                                                 12     8      4   54115
                                             45 BANK1      8     4      4
                            ___fladd
                             ___flge
                               _asin (ARG)
                                _sin
 ---------------------------------------------------------------------------------
 (4) _sin                                                 17    13      4   46560
                                             20 BANK1     17    13      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                          _eval_poly
                              _floor
 ---------------------------------------------------------------------------------
 (5) _floor                                               10     6      4    9498
                                            115 BANK0      4     0      4
                                              6 BANK1      6     6      0
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (6) _frexp                                                8     2      6     452
                                             23 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     784
                                            107 BANK0      8     4      4
                                              0 BANK1      6     6      0
                            ___fltol (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     645
                                             97 BANK0     10     6      4
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    6161
                                             12 BANK1      8     0      8
                            ___fladd
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (3) _asin                                                36    32      4   54204
                                             21 BANK1     24    20      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                               _atan
                               _fabs
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _sqrt                                                29    25      4    1467
                                             97 BANK0      8     4      4
                                              0 BANK1     21    21      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (4) _atan                                                21    17      4   32321
                                            113 BANK0      4     0      4
                                              0 BANK1     17    17      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                          _eval_poly
                               _fabs
 ---------------------------------------------------------------------------------
 (4) _fabs                                                 4     0      4    1544
                                             77 BANK0      4     0      4
                            ___flneg
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4    1220
                                             73 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           16     8      8   12239
                                             97 BANK0     16     8      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    5387
                                             48 BANK0     25    17      8
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    5674
                                             77 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1498
                                             81 BANK0     12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4039
                                             23 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (2) _delay_s                                              2     2      0     419
                                             31 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             2     0      2     373
                                             29 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     287
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _can_send                                             0     0      0    5818
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (4) _CANsendMessage                                      16     8      8    5723
                                             23 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (4) _CANisTxReady                                         1     1      0      24
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _configurazione                                       0     0      0    5934
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             37 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      4     4      0       0
                                             23 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_Bassa                                           23    23      0    1251
                                             12 COMRAM    23    23      0
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (8) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_Alta                                            16    16      0     395
                                              7 BANK0     16    16      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (10) ___lwdiv                                             7     3      4     395
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _can_interpreter
   _configurazione
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _park_routine
     _CANsendMessage
     ___fladd
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
       ___flneg (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
     ___xxtofl
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _abs (ARG)
     _can_send
       _CANisTxReady
       _CANsendMessage
     _delay_s
       _delay_ms
         ___wmul
     _matematica
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___fldiv
       ___flmul
         ___fldiv (ARG)
       ___flneg
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _cos
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___flge
           _fabs (ARG)
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _asin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _atan
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___fldiv
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___flmul
               ___fldiv (ARG)
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _eval_poly
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _fabs
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           _fabs
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           _sqrt
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _sin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flsub
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             _floor (ARG)
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
               ___flge
                 _fabs (ARG)
                   ___flneg
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                   ___flneg (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
               ___xxtofl
                 ___fltol (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                     ___flneg (ARG)
                       ___fldiv (ARG)
                       ___flmul (ARG)
                         ___fldiv (ARG)
                 _abs (ARG)
               _frexp
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _floor
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___xxtofl
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                   ___flneg (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
               _abs (ARG)
             _frexp
   _park_search
     _CANisTxReady
     _CANsendMessage
     ___xxtofl
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _abs (ARG)
     _abs
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___flmul
         ___fldiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _abs (ARG)
       _abs
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)

 _ISR_Bassa (ROOT)
   _CANreceiveMessage

 _ISR_Alta (ROOT)
   ___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     55      E0       7       87.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     77      88       5       85.0%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     23      47       1       75.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AF      20        0.0%
DATA                 0      0     1AF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun May 01 18:57:09 2016

                ___fldiv@aexp 008F                  ___fldiv@bexp 008E                             _n 0130  
                           _x 013C                             _z 00DB          __end_of_CANSetFilter 1858  
                ___fldiv@sign 0083            delay_s@repeat_loop 0080                            bsr 000FE0  
         ___wmul@multiplicand 0079                   __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                 __CFG_OSC$HS 000000                    _MUX_select 0100                           l402 1F30  
                         l403 1F34                           l500 15B4                           l404 1F40  
                         l501 15B8                           l510 16C4                           l502 15C4  
                         l511 16D0                           l503 15C8                           l520 17DC  
                         l512 16D4                           l504 15D4                           l440 3CD6  
                         l432 3C96                           l521 17E0                           l513 16E0  
                         l433 3C9A                           l522 17EC                           l514 16E4  
                         l450 3DE2                           l434 3CA6                           l370 1918  
                         l523 17F0                           l515 16F0                           l507 16B0  
                         l451 3DEE                           l443 3DAE                           l435 3CAA  
                         l363 1ADC                           l524 17FC                           l508 16B4  
                         l444 3DB2                           l436 3CB6                           l380 1AF6  
                         l364 186E                           l525 1800                           l509 16C0  
                         l445 3DBE                           l437 3CBA                           l381 1BEE  
                         l373 1A28                           l365 1872                           l526 180C  
                         l518 17CC                           l470 1276                           l446 3DC2  
                         l438 3CC6                           l358 4EAA                           l390 1CBC  
                         l382 1B7E                           l374 1A2C                           l366 196A  
                         l519 17D0                           l471 1282                           l463 1242  
                         l447 3DCE                           l439 3CCA                           l359 4EB4  
                         l383 1B88                           l375 1A38                           l367 18FA  
                         l480 138C                           l464 1246                           l448 3DD2  
                         l384 1B92                           l368 1904                           l720 501A  
                         l481 1390                           l465 1252                           l449 3DDE  
                         l393 1D76                           l385 1B9C                           l369 190E  
                         l490 149C                           l482 139C                           l474 135C  
                         l466 1256                           l394 1D7A                           l378 1D60  
                         l491 14A8                           l475 1360                           l467 1262  
                         l395 1E72                           l379 1AF2                           l731 514E  
                         l492 14AC                           l476 136C                           l468 1266  
                         l556 5D66                           l396 1E02                           l388 1CAC  
                         l493 14B8                           l485 1478                           l477 1370  
                         l469 1272                           l397 1E0C                           l389 1CB0  
                         l486 147C                           l478 137C                           l398 1E16  
                         l742 44EE                           l718 5152                           l487 1488  
                         l479 1380                           l399 1E20                           l496 1594  
                         l488 148C                           l752 4674                           l497 1598  
                         l489 1498                           l569 5C74                           l498 15A4  
                         l746 4552                           l499 15A8                           l749 45EA  
                         l849 5D12                           l785 497E                           l779 49BC  
                __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000                           _abs 5CF0  
                         _asd 0221                           _dir 0222                           _cos 576A  
                         _jjj 0128                           _kkk 012C                           _msg 0144  
                         _sin 3E3A                           prod 000FF3                           wreg 000FE8  
                ___flmul@aexp 009D                  ___flmul@bexp 00A2               ?_configurazione 0001  
                ___flmul@sign 009C                  ___flmul@temp 00A7                  ___flmul@prod 00A3  
                __CFG_LVP$OFF 000000                  ___fltol@exp1 00CA                  __CFG_WDT$OFF 000000  
                        ?_abs 0077                          l1310 2B64                          l1056 529C  
                        l1401 31BC                          l1049 5C36                          l1411 32CE  
                        l1403 322A                          l1308 2BA4                          l1325 2D18  
                        l1309 2B98                          l1334 2DAC                          l1450 4D72  
                        l1451 4D8A                          l1443 4D16                          l1364 390A  
                        l1436 4C6A                          l1292 4140                          l1373 3942  
                        l1461 5534                          l1375 39B0                          l1367 38B2  
                        l5001 0EC8                          l1394 2F20                          l5101 1286  
                        l5203 15D8                          l5107 12CC                          l5019 0F82  
                        l5141 13E6                          l5037 103C                          l5301 533E  
                        ?_cos 01B0                          l5135 13A0                          l5055 10F6  
                        l4503 1A1C                          l5311 53B6                          l5209 161E  
                        l5073 11B0                          l5305 5376                          l6201 2D80  
                        l6121 2AE4                          l5243 173A                          l5411 4EB8  
                        l6211 2DA6                          l6203 2D86                          l7003 5078  
                        l5237 16F4                          l4509 1A3C                          l6221 2E02  
                        l6133 2B78                          l7013 50C0                          l5271 1810  
                        l5175 1502                          l5415 4EC0                          l6135 2B7E  
                        l6055 2A06                          l5169 14BC                          l5417 4F04  
                        l5409 4EA2                          l5425 5D28                          l6241 2E5A  
                        l6233 2E42                          l6225 2E14                          l6073 2A50  
                        l6049 29E2                          l6401 5CA8                          l7121 46CC  
                        l7009 5088                          l4635 1E2A                          l4483 1922  
                        l5291 52F0                          l6235 2E46                          l6163 2C16  
                        l6139 2B88                          l6091 2AA8                          l6083 2A7E  
                        l6067 2A3C                          l6059 2A10                          l6251 2E8A  
                        l6411 5684                          l7123 46D8                          l4901 3C0A  
                        l4661 1F44                          l5429 5D3A                          l6229 2E36  
                        l6157 2C06                          l6149 2BC8                          l6333 31D0  
                        l6261 2EC6                          l7037 4466                          l4655 1F24  
                        l4559 1BA6                          l5279 5C66                          l6191 2D60  
                        l6159 2C0C                          l6167 2C28                          l6079 2A74  
                        l6343 3224                          l6327 31A6                          l6431 5706  
                        l4585 1CC0                          l6513 36FA                          l6185 2D4A  
                        l6177 2CF8                          l6353 327A                          l6281 2F34  
                        l6257 2EAE                          l6441 573C                          l7073 4556  
                        l7137 4734                          l4579 1CA0                          l6523 3728  
                        l6195 2D6C                          l6275 2F08                          l6259 2EB4  
                        l6427 56F2                          l4933 3D20                          l6533 3758  
                        l6357 32A0                          l6285 2F48                          l6277 2F0E  
                        l6269 2EE4                          l6445 5758                          l6437 5722  
                        l6461 4CA2                          l4927 3CDA                          l6623 3A2E  
                        l6543 3786                          l6519 371E                          l6383 51F8  
                        l6367 32EE                          l6359 32B4                          l6711 33AE  
                        l6703 337C                          l6439 5732                          l6463 4CAA  
                        l6455 4C7A                          l6633 3A74                          l6625 3A42  
                        l6609 39AA                          l6393 52E8                          l6369 32F8  
                        l6705 338E                          l6473 4D54                          l6465 4CBA  
                        l4867 5D74                          l6635 3A78                          l6627 3A64  
                        l6619 3A00                          l6563 3808                          l6555 37DA  
                        l6539 377C                          l6387 524A                          l6379 51AA  
                        l6731 3420                          l6723 33F0                          l6475 4D64  
                        l6467 4CF8                          l4885 3B54                          l6581 38BE  
                        l6573 3886                          l6805 4BE2                          l6741 34A2  
                        l6821 3E70                          l7197 5BB4                          l4983 0E10  
                        l4959 3DF2                          l6743 34AA                          l6487 4DDC  
                        l6671 5462                          l6593 392C                          l6657 559C  
                        l6809 4BFA                          l6497 5954                          l6833 3F9A  
                        l6587 3906                          l6659 5640                          l6747 3530  
                        l6755 35A6                          l6691 3330                          l6675 5476  
                        l6749 356A                          l6837 4010                          l6933 499A  
                        l6599 3956                          l6775 36BC                          l6767 3686  
                        l6679 5498                          l6927 4940                          l6935 49A0  
                        l6793 4A8E                          l6881 43C0                          l6857 41B0  
                        ?_sin 0197                          l6789 4A1A                          l6869 42DE  
                        l6991 4FCA                          l6983 4FB6                          l6897 57F2  
                        _LATA 000F89                          _LATB 000F8A                          _LATC 000F8B  
                        u5000 1BC6                          u5010 1C12                          u5005 1BBA  
                        u5015 1C06                          u6000 12A6                          u5025 1C72  
                        u5130 1E4A                          u5140 1E96                          u6005 129A  
                        u5135 1E3E                          u5145 1E8A                          u5155 1EF6  
                        u5510 3B86                          u6400 1830                          u6320 1714  
                        u6240 15F8                          u6160 14DC                          u6080 13C0  
                        u5600 3CFA                          u5515 3B7A                          u6405 1824  
                        u6325 1708                          u6245 15EC                          u6165 14D0  
                        u6085 13B4                          u5605 3CEE                          u5525 3BE6  
                        u5710 0D8C                          u5470 3AD0                          u7400 2B2E  
                        u7410 2B46                          u8130 5986                          u5715 0D80  
                        u5475 3AC4                          u7420 2B48                          u5805 0F5E  
                        u5725 0DEC                          u5485 3B30                          u5910 112C  
                        u5830 0FB8                          u5750 0E44                          u4870 1942  
                        u5680 3E12                          u4880 198E                          u8138 598A  
                        u8410 5486                          u5915 1120                          u5835 0FAC  
                        u5755 0E38                          u4875 1936                          u8340 3A14  
                        u5925 118C                          u5845 1018                          u5765 0EA4  
                        u5685 3E06                          u4885 1982                          u5870 1072  
                        u5790 0EFE                          u4895 19EE                          u5875 1066  
                        u5795 0EF2                          u9067 5C68                          u8620 3F94  
                        u5885 10D2                          u8550 4A4A                          u8630 3F96  
                        u8711 47D4                          u8560 4A4C                          u8800 4FC6  
                        u8721 47E0                          u7860 328E                          u7780 3148  
                        u7960 56A4                          u8760 4998                          u7785 313C  
                        u8930 4502                          u7965 5698                          u8870 50D4  
                        u8970 46AA           __size_of_CANSetMask 039E                          abs@a 0077  
                        _alfa 011C                          _fabs 5C0A                          _data 0153  
                        _beta 0120                          _atan 49CE                          _asin 4152  
                        _main 5B76                          _asus 0041                          cos@f 01B0  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr0l 000FE9  
                        fsr2h 000FDA                          indf1 000FE7                          fsr1l 000FE1  
                        indf2 000FDF                          fsr2l 000FD9                          btemp 0048  
                        _sqrt 3312                          pclat 000FFA                          sin@f 0197  
                        sin@y 019B                          prodh 000FF4                          prodl 000FF3  
                        start 0258                 __CFG_IESO$OFF 000000               ___fldiv@new_exp 0088  
              delay_s@value_s 007F                 __CFG_MCLRE$ON 000000                  ___param_bank 000000  
            _CANOperationMode 5D6C                         ??_abs 0079                         ??_cos 00D7  
                       ??_sin 00D7    __size_of_CANreceiveMessage 050C                         ?_fabs 00AD  
               ___fltol@sign1 00C9                         ?_atan 00D1                         ?_asin 0198  
             __end_of___fladd 2E6C                         ?_main 0001               __end_of___fldiv 3A9C  
             __end_of___flneg 5CBA               __end_of___flmul 3312               __end_of___flsub 5C0A  
             __end_of___fltol 576A                         ?_sqrt 00C1                         _T0CON 000FD5  
                       _T3CON 000FB1            __size_of_ISR_Bassa 0240               __end_of___lwdiv 5AB6  
                       i1l410 227C                         i1l702 018C                         i1l705 020C  
                       i1l709 0210                         i1l695 009A                         i2l688 5890  
                       _TMR0H 000FD7                         _TMR0L 000FD6                         _TMR3H 000FB3  
                       _TMR3L 000FB2                         _PORTA 000F80                         _TRISA 000F92  
                       _TRISB 000F93                         _TRISC 000F94            __end_ofsin@coeff_a 0D41  
          __end_ofsin@coeff_b 0D51                 __CFG_PWRT$OFF 000000              __end_of_ISR_Alta 592E  
             __end_of_delay_s 5D48                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000            CANInitialize@flags 0089  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
                       _bordo 0124                         fabs@d 00AD                         _floor 5422  
                       _frexp 592E                         _errno 0142                         atan@f 00D1  
                       atan@x 0187                         atan@y 0183                         asin@x 0198  
                       asin@y 01A8      can_send@data_correction1 0087                __pbitbssCOMRAM 0220  
                       sin@x2 01A3                         tablat 000FF5          __end_of_CANisTxReady 5D6C  
                       sqrt@a 00C1                         sqrt@i 0184                         sqrt@p 0189  
                       status 000FD8                  ?_park_search 0001               __initialization 59C2  
                __end_of_fabs 5C48                  __end_of_atan 4C20                  __end_of_asin 4464  
                __end_of_main 5BC2                  __end_of_sqrt 36DC                        ??_fabs 00B1  
                      ??_atan 00D5                        ??_asin 00D5                        ??_main 00D7  
                      ??_sqrt 00C5                 __activetblptr 000003             _CANisTxReady$2845 0077  
                      _ADCON1 000FC1                        ?_floor 00D3                        ?_frexp 0077  
                      _CANCON 000F6F            _distance_received1 0225               __CFG_BBSIZ$1024 000000  
           _spazio_parcheggio 0046                        i2l1256 5AAC                        i1l5631 2482  
                      i1l5623 244A                        i1l5615 23DC                        i1l5641 24EC  
                      i1l5561 21CC                        i1l5553 215C                        i1l5635 249E  
                      i1l5627 2466                        i1l5573 2226                        i1l5565 21EA  
                      i1l5639 24BA                        i1l5577 2244                        i1l5569 2208  
                      i1l5579 2276                        i1l5915 008C                        i1l5945 00CE  
                      i1l5971 0168                        i1l5949 00D6                        i1l5985 01C6  
                      i1l5977 0196                        i1l5995 01F6                        i1l5989 01CE  
                      i2l7151 5A68                        i2l7161 5A9E                        i2l7153 5A6E  
                      i2l7149 5A5C                        i2l7181 58F0                        _RXB0D0 000F66  
                      _RXB0D1 000F67                        _RXB0D2 000F68                        _RXB0D3 000F69  
                      _RXB0D4 000F6A                        _RXB1D0 000F56                        _RXB0D5 000F6B  
                      _RXB1D1 000F57                        _RXB0D6 000F6C                        _RXB1D2 000F58  
                      _RXB0D7 000F6D                        _RXB1D3 000F59                        _RXB1D4 000F5A  
                      _RXB1D5 000F5B                        _RXB1D6 000F5C                        _RXB1D7 000F5D  
                      _TXB0D0 000F46                        _TXB0D1 000F47                        _TXB0D2 000F48  
                      _TXB0D3 000F49                        _TXB1D0 000F36                        _TXB0D4 000F4A  
                      _TXB1D1 000F37                        _TXB0D5 000F4B                        _TXB1D2 000F38  
                      _TXB0D6 000F4C                        _TXB1D3 000F39                        _TXB0D7 000F4D  
                      _TXB2D0 000F26                        _TXB1D4 000F3A                        _TXB2D1 000F27  
                      _TXB1D5 000F3B                        _TXB2D2 000F28                        _TXB1D6 000F3C  
                      _TXB2D3 000F29                        _TXB1D7 000F3D                        _TXB2D4 000F2A  
                      _TXB2D5 000F2B                        _TXB2D6 000F2C                        _TXB2D7 000F2D  
          CANsendMessage@data 007B              __end_of_can_send 5422            CANsendMessage@tamp 0083  
            __end_of___xxtofl 4DEE             __end_of_ISR_Bassa 0258              __end_of_delay_ms 5C82  
       __size_of_CANSetFilter 0B06                __CFG_XINST$OFF 000000                        ___flge 515C  
             _data_correction 0163                     ??___fladd 00B5                        ___wmul 5CBA  
                   ??___fldiv 007F                     ??___flneg 00AD                __CFG_STVREN$ON 000000  
                   ??___flmul 0098                     ??___flsub 00D7                     ??___fltol 00C5  
                   ??___lwdiv 0064                  ??_CANSetMask 007C                        _gianni 0042  
                      _raggio 01DC                        clear_0 59C8                        clear_1 59D4  
                      clear_2 59E4                     ??_delay_s 007F                        floor@i 0189  
                      floor@x 00D3               __CFG_BOREN$BOHW 000000                  __pdataCOMRAM 0046  
                      sin@sgn 01A7                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                  _CANSetFilter 0D52  
                  ___flge@ff1 00B1                    ___flge@ff2 00B5                  ___xxtofl@arg 0185  
                ___xxtofl@exp 0184                  ___xxtofl@val 00CB                    __accesstop 0060  
     __end_of__initialization 5A34            __end_of_CANSetMask 3E3A               __CFG_PBADEN$OFF 000000  
                  ___flneg@f1 00A9                 ?_park_routine 0001                  eval_poly@res 00CD  
               ___rparam_used 000000                    ___fltol@f1 00C1                __pcstackCOMRAM 0001  
                   ?_ISR_Alta 0001                  __pidataBANK0 5D8C                  __pidataBANK1 5D82  
               __end_of_floor 5546                 __end_of_frexp 59C2              ??_configurazione 0091  
       CANSetFilter@numBuffer 0080                  _actual_speed 00DF         __size_of_CANisTxReady 0024  
                     ??_floor 00D7                       ??_frexp 007D      __end_of_CANOperationMode 5D82  
                  __pbssBANK0 00D7                    __pbssBANK1 0100               _sensor_distance 0024  
          __size_of_eval_poly 0118                    _data_brake 015B                ??_park_routine 00D7  
               ISR_Bassa@gigi 0022       __size_of_CANsendMessage 078C                    _data_speed 016B  
                  _activation 0220      __size_of_can_interpreter 0054            __size_of_parallelo 028C  
        __size_of_park_search 01A8             _old_alignment_gap 0134                    ??_ISR_Alta 0067  
                     ?___flge 00B1                       ?___wmul 0077                       _CANSTAT 000F6E  
                _CANisTxReady 5D48                       _BRGCON1 000F70                       _BRGCON2 000F71  
                     _BRGCON3 000F72                     ?_can_send 0001                     ?___xxtofl 00CB  
      __size_of_CANInitialize 01C6                     ?_delay_ms 007D                       _RXB0DLC 000F65  
                     _RXB1DLC 000F55                       _RXB0CON 000F60                       _RXB1CON 000F50  
                     _TXB0DLC 000F45                       _TXB1DLC 000F35                       _TXB2DLC 000F25  
         CANsendMessage@flags 007E                       __Hparam 0000                    _left_speed 0038  
                     __Lparam 0000              delay_ms@value_ms 007D                       _Pminimo 0118  
             __size_of___flge 0190                    _matematica 24F0                       ___fladd 29C4  
                     ___fldiv 36DC                       ___flneg 5C82                       ___flmul 2E6C  
                     ___flsub 5BC2                       ___fltol 565E               __size_of___wmul 0036  
                     ___lwdiv 5A3E                  __psmallconst 0D00          CANInitialize@propSeg 008E  
                     __pcinit 59C2             __end_of_eval_poly 565E                       _delay_s 5D1C  
                     __ramtop 0D00                       __ptext0 5B76                       __ptext1 4FB4  
                     __ptext2 4742                       __ptext3 5CF0                       __ptext4 4464  
                     __ptext5 24F0                       __ptext6 576A                       __ptext7 3E3A  
                     __ptext8 5422                       __ptext9 592E                     _T0CONbits 000FD5  
                  ??_can_send 0087                  __size_of_abs 002C                  __size_of_cos 00E4  
             atan@val_squared 018C                  __size_of_sin 0318                    ??___xxtofl 00CF  
                     atan@val 0190             __end_of_parallelo 49CE                    ??_delay_ms 007F  
                     asin@sgn 019C        CANreceiveMessage@error 000B               _start_operation 022A  
              __pintcode_body 584E          end_of_initialization 5A34                       int_func 584E  
               _CANInitialize 4DEE                     _ISR_Bassa 0018                       postdec1 000FE5  
                     postdec2 000FDD                       postinc0 000FEE                       postinc2 000FDE  
                     sqrt@grs 018A                       sqrt@exp 018E             ??_can_interpreter 0077  
     _steering_correction_dir 022B                     _PORTBbits 000F81                CANSetMask@mask 0077  
              CANSetMask@tamp 0081                  _distance_set 0110                CANSetMask@type 007B  
        __end_of_park_routine 4742                   ___fladd@grs 00C0                 ___xxtofl@sign 0183  
                   _TRISBbits 000F93                   ___fldiv@grs 008A                   ___fldiv@rem 0084  
                   _MUX_index 0040                    _pulse_time 003A       _clock_counter_reference 00E1  
                 ___flmul@grs 009E                _CANsendMessage 1858              CANInitialize@BRP 0088  
            CANInitialize@SJW 0087                ?_CANInitialize 0085                    ?_ISR_Bassa 0001  
                 ?_matematica 0001                __end_of___flge 52EC             __size_of_ISR_Alta 5926  
              __end_of___wmul 5CF0                 __pidataCOMRAM 5D8A                    floor@expon 018D  
         start_initialization 59C2                    eval_poly@d 00C5                    eval_poly@n 00C7  
                  eval_poly@x 00C1                   __end_of_abs 5D1C                   __end_of_cos 584E  
                 __end_of_sin 4152           CANSetMask@numBuffer 0080                 _data_speed_rx 0108  
      __end_of_CANsendMessage 1FE4             ?_CANOperationMode 0001                 _data_steering 0173  
                  frexp@value 0077            ??_CANOperationMode 0077             _distance_received 0224  
  CANInitialize@FilterConfig1 008F    CANInitialize@FilterConfig2 0090           _steering_correction 0043  
                    ??___flge 00B9                      ??___wmul 007B                   __pdataBANK0 00E7  
                 __pdataBANK1 01D8              __CFG_LPT1OSC$OFF 000000                     ___fladd@a 00B1  
                   ___fladd@b 00AD        CANInitialize@phaseSeg1 0085        CANInitialize@phaseSeg2 0086  
                   ___fldiv@a 007B                     ___fldiv@b 0077                     ___flmul@a 0094  
                   ___flmul@b 0090                   __pbssCOMRAM 0024                     ___flsub@a 0193  
                   ___flsub@b 018F                 __pcstackBANK0 0060                 __pcstackBANK1 0183  
                 _BRGCON2bits 000F71                   _BRGCON3bits 000F72             __size_of_can_send 0136  
           __size_of___xxtofl 01CE             __size_of_delay_ms 003A               ?_CANsendMessage 0077  
         __size_of_matematica 04D4               ??_CANInitialize 008A                     _asin$3746 01AC  
                   _asin$3747 01A4                     _asin$3748 01A0                    sin@coeff_a 0D2D  
                  sin@coeff_b 0D41                 ??_park_search 01B0                 _alignment_gap 00D7  
          CANSetFilter@filter 0077                     _data_test 017B              ___lwdiv@dividend 0060  
                  ISR_Bassa@i 0023                   ??_ISR_Bassa 000D                     __pintcode 0008  
                    ?___fladd 00AD                      ?___fldiv 0077                      ?___flneg 00A9  
                    ?___flmul 0090                      ?___flsub 018F                      ?___fltol 00C1  
       __size_of_park_routine 02DE                      ?___lwdiv 0060                   __pintcodelo 0018  
                    ?_delay_s 0001                   __smallconst 0D00                   _COMSTATbits 000F74  
                   _eval_poly 5546                     _larghezza 01D8              ___lwdiv@quotient 0065  
              __size_of_floor 0124                __size_of_frexp 0094       __size_of_configurazione 006C  
                   _parallelo 4742         CANreceiveMessage@tamp 000C                _prima_sterzata 0138  
              ___wmul@product 007B                      _LATBbits 000F8A               _can_interpreter 5B22  
                   atan@recip 018B                  _park_routine 4464  _delay_quartz_frequency_value 00E7  
                    _IPR3bits 000FA5                      _PIE3bits 000FA3                      i1u670_20 20CA  
                    i1u670_26 20CC                      i1u680_20 2324                      i1u672_25 20E0  
                    i1u680_26 2326                      i1u681_20 234E                      i1u681_26 2350  
                    i1u683_25 2362                      i1u907_27 00BC                      i1u669_20 209C  
                    i1u669_26 209E                      _PIR3bits 000FA4                      i1u678_25 2250  
                    i1u689_25 24C6                      _RXB0EIDH 000F63                      _RXB0EIDL 000F64  
                    _RXB1EIDH 000F53                      _RXB1EIDL 000F54                      _ISR_Alta 0008  
                   _set_speed 00E5                      _RCONbits 000FD0              __CFG_WDTPS$32768 000000  
                    _RXB0SIDH 000F61                      _RXB0SIDL 000F62                      _RXF0EIDH 000F02  
                    _RXB1SIDH 000F51                      _RXF0EIDL 000F03                      _RXB1SIDL 000F52  
                    _RXF1EIDH 000F06                      _RXF1EIDL 000F07                      _RXF2EIDH 000F0A  
                    _RXF2EIDL 000F0B                      _RXF3EIDH 000F0E                      _RXF3EIDL 000F0F  
                    _RXF4EIDH 000F12                      _RXF4EIDL 000F13                      _RXF5EIDH 000F16  
                    _RXF5EIDL 000F17                      _RXF0SIDH 000F00                      _RXF0SIDL 000F01  
         __end_of_park_search 515C                      _TXB0EIDH 000F43                      _RXF1SIDH 000F04  
                    _TXB0EIDL 000F44                      _RXF1SIDL 000F05                      _TXB1EIDH 000F33  
                    _RXF2SIDH 000F08                      _TXB1EIDL 000F34                      _RXF2SIDL 000F09  
                    _TXB2EIDH 000F23                      _RXF3SIDH 000F0C                      _TXB2EIDL 000F24  
                    _RXF3SIDL 000F0D                      _RXF4SIDH 000F10                      _RXF4SIDL 000F11  
                    _RXF5SIDH 000F14                      _RXF5SIDL 000F15                      _RXM0EIDH 000F1A  
                    _RXM0EIDL 000F1B                      _TXB0SIDH 000F41                      _RXM1EIDH 000F1E  
                    _TXB0SIDL 000F42                      _RXM1EIDL 000F1F                      _TXB1SIDH 000F31  
                    _TXB1SIDL 000F32                      _TXB2SIDH 000F21                      _TXB2SIDL 000F22  
                    _RXM0SIDH 000F18                      _RXM0SIDL 000F19                      _RXM1SIDH 000F1C  
                    _RXM1SIDL 000F1D                   _distance_dx 0034                   _distance_sx 0036  
                    _RXERRCNT 000F75                      _TXERRCNT 000F76             ___wmul@multiplier 0077  
                  ?_eval_poly 00C1           __end_ofatan@coeff_a 0D19           __end_ofatan@coeff_b 0D2D  
               ?_CANSetFilter 0077                   _INTCON2bits 000FF1                     copy_data0 59FE  
                  _CANCONbits 000F6F                    ?_parallelo 0001              _distance_average 00E3  
                   frexp@eptr 007B                      __Hparam0 0000                      __Lparam0 0000  
                _RXB0SIDLbits 000F62                  _RXB1SIDLbits 000F52                  ??_matematica 00D7  
               _request_sent1 0229              __size_of___fladd 04A8                    _CANSetMask 3A9C  
            __size_of___fldiv 03C0              __size_of___flneg 0038              __size_of___flmul 04A6  
            __size_of___flsub 0048              __size_of___fltol 010C                      _cos$3749 01B4  
            __size_of___lwdiv 0078              __size_of_delay_s 002C                      _can_send 52EC  
                    ___xxtofl 4C20                  _RXF0SIDLbits 000F01                      _delay_ms 5C48  
             ___lwdiv@divisor 0062                  _RXF1SIDLbits 000F05               ___lwdiv@counter 0064  
              ??_CANSetFilter 007C                      __ptext10 4C20                      __ptext11 565E  
                    __ptext20 29C4                      __ptext12 5BC2                      __ptext21 515C  
                    __ptext13 4152                      __ptext30 4DEE                      __ptext22 36DC  
                    __ptext14 3312                      __ptext31 3A9C                      __ptext23 5D1C  
                    __ptext15 49CE                      __ptext32 0D52                      __ptext24 5C48  
                    __ptext16 5C0A                      __ptext33 5D6C                      __ptext25 5CBA  
                    __ptext17 5C82                      __ptext34 5B22                      __ptext26 52EC  
                    __ptext18 5546                      __ptext27 1858                      __ptext19 2E6C  
                    __ptext36 1FE4                      __ptext28 5D48                      __ptext29 5AB6  
                    __ptext38 5A3E                  _RXF2SIDLbits 000F09                      _sin$3750 019F  
     __end_of_can_interpreter 5B76                  _RXF3SIDLbits 000F0D                      _distance 0140  
          __end_of_matematica 29C4                  _RXF4SIDLbits 000F11                  _RXF5SIDLbits 000F15  
    CANsendMessage@dataLength 007D                 __size_of_fabs 003E                 __size_of_atan 0252  
               __size_of_asin 0312                 __size_of_main 004C                 __size_of_sqrt 03CA  
                 _park_search 4FB4          CANreceiveMessage@msg 0001                  _TXB0SIDLbits 000F42  
                _TXB1SIDLbits 000F32                  _TXB2SIDLbits 000F22                      int$flags 0048  
   __size_of_CANOperationMode 0016                 ?_CANisTxReady 0001                   atan@coeff_a 0D01  
                 atan@coeff_b 0D19                   _RXB0DLCbits 000F65                   _RXB1DLCbits 000F55  
                _RXM0SIDLbits 000F19                   _RXB0CONbits 000F60                   _RXB1CONbits 000F50  
           _CANreceiveMessage 1FE4                  _RXM1SIDLbits 000F1D                    _INTCONbits 000FF2  
                 ??_eval_poly 00C9              ??_CANsendMessage 007F            ?_CANreceiveMessage 0001  
                _request_sent 0228                     sqrt@tfrac 0185                _configurazione 5AB6  
    CANsendMessage@identifier 0077                   ??_parallelo 00D5                      intlevel1 0000  
                    intlevel2 0000              CANSetFilter@tamp 0081              CANSetFilter@type 007B  
         ??_CANreceiveMessage 0003           _old_data_correction 0227                   _TXB0DLCbits 000F45  
                 _right_speed 003C                   _TXB1DLCbits 000F35                   _TXB0CONbits 000F40  
                 _TXB2DLCbits 000F25                   _TXB1CONbits 000F30                   _TXB2CONbits 000F20  
        CANOperationMode@mode 0077                   ?_CANSetMask 0077                ??_CANisTxReady 0077  
              _distance_error 0223               _matematica$3740 01C0               _matematica$3741 01C4  
             _matematica$3742 01C8               _matematica$3743 01CC               _matematica$3744 01D0  
             _matematica$3745 01D4               _matematica$3738 01B8               _matematica$3739 01BC  
   __end_of_CANreceiveMessage 24F0                      sqrt@frac 0194                      sqrt@sign 0183  
                    sqrt@root 0190                   _timerValue2 003E        __end_of_configurazione 5B22  
               ___fladd@signs 00BD                 _distance_wait 0226              ?_can_interpreter 0001  
                ___fladd@aexp 00BE                  ___fladd@bexp 00BF         __end_of_CANInitialize 4FB4  
