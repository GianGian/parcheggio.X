

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun May 01 21:33:42 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2685
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    61                           	psect	param0,global,class=BANK0,space=1,delta=1
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    63  0000                     
    64                           	psect	idataCOMRAM
    65  005D8A                     __pidataCOMRAM:
    66                           	opt stack 0
    67                           
    68                           ;initializer for _spazio_parcheggio
    69  005D8A  0064               	dw	100
    70                           
    71                           	psect	idataBANK0
    72  005D8C                     __pidataBANK0:
    73                           	opt stack 0
    74                           
    75                           ;initializer for _delay_quartz_frequency_value
    76  005D8C  10                 	db	16
    77                           
    78                           	psect	idataBANK1
    79  005D82                     __pidataBANK1:
    80                           	opt stack 0
    81                           
    82                           ;initializer for _larghezza
    83  005D82  0000               	dw	0
    84  005D84  4200               	dw	16896
    85                           
    86                           ;initializer for _raggio
    87  005D86  0000               	dw	0
    88  005D88  4296               	dw	17046
    89                           
    90                           	psect	smallconst
    91  000D00                     __psmallconst:
    92                           	opt stack 0
    93  000D00  00                 	db	0
    94  000D01                     atan@coeff_a:
    95                           	opt stack 0
    96  000D01  3C06               	dw	15366
    97  000D03  4204               	dw	16900
    98  000D05  9F7D               	dw	40829
    99  000D07  426A               	dw	17002
   100  000D09  905C               	dw	36956
   101  000D0B  4201               	dw	16897
   102  000D0D  4D60               	dw	19808
   103  000D0F  40BB               	dw	16571
   104  000D11  EC51               	dw	60497
   105  000D13  3E47               	dw	15943
   106  000D15  8DDE               	dw	36318
   107  000D17  BB1F               	dw	47903
   108  000D19                     __end_ofatan@coeff_a:
   109                           	opt stack 0
   110  000D19                     atan@coeff_b:
   111                           	opt stack 0
   112  000D19  3C06               	dw	15366
   113  000D1B  4204               	dw	16900
   114  000D1D  59C0               	dw	22976
   115  000D1F  428B               	dw	17035
   116  000D21  0474               	dw	1140
   117  000D23  4244               	dw	16964
   118  000D25  9BF9               	dw	39929
   119  000D27  414F               	dw	16719
   120  000D29  0000               	dw	0
   121  000D2B  3F80               	dw	16256
   122  000D2D                     __end_ofatan@coeff_b:
   123                           	opt stack 0
   124  000D2D                     sin@coeff_a:
   125                           	opt stack 0
   126  000D2D  F3EC               	dw	62444
   127  000D2F  484A               	dw	18506
   128  000D31  9535               	dw	38197
   129  000D33  C795               	dw	51093
   130  000D35  C117               	dw	49431
   131  000D37  45DC               	dw	17884
   132  000D39  DBFD               	dw	56317
   133  000D3B  C36D               	dw	50029
   134  000D3D  B372               	dw	45938
   135  000D3F  4033               	dw	16435
   136  000D41                     __end_ofsin@coeff_a:
   137                           	opt stack 0
   138  000D41                     sin@coeff_b:
   139                           	opt stack 0
   140  000D41  342B               	dw	13355
   141  000D43  4801               	dw	18433
   142  000D45  9D7F               	dw	40319
   143  000D47  45B0               	dw	17840
   144  000D49  FFE7               	dw	65511
   145  000D4B  42D9               	dw	17113
   146  000D4D  0000               	dw	0
   147  000D4F  3F80               	dw	16256
   148  000D51                     __end_ofsin@coeff_b:
   149                           	opt stack 0
   150  0000                     _RXB1CON	set	3920
   151  0000                     _RXB1CONbits	set	3920
   152  0000                     _RXB1D0	set	3926
   153  0000                     _RXB1D1	set	3927
   154  0000                     _RXB1D2	set	3928
   155  0000                     _RXB1D3	set	3929
   156  0000                     _RXB1D4	set	3930
   157  0000                     _RXB1D5	set	3931
   158  0000                     _RXB1D6	set	3932
   159  0000                     _RXB1D7	set	3933
   160  0000                     _RXB1DLC	set	3925
   161  0000                     _RXB1DLCbits	set	3925
   162  0000                     _RXB1EIDH	set	3923
   163  0000                     _RXB1EIDL	set	3924
   164  0000                     _RXB1SIDH	set	3921
   165  0000                     _RXB1SIDL	set	3922
   166  0000                     _RXB1SIDLbits	set	3922
   167  0000                     _RXF0EIDH	set	3842
   168  0000                     _RXF0EIDL	set	3843
   169  0000                     _RXF0SIDH	set	3840
   170  0000                     _RXF0SIDL	set	3841
   171  0000                     _RXF0SIDLbits	set	3841
   172  0000                     _RXF1EIDH	set	3846
   173  0000                     _RXF1EIDL	set	3847
   174  0000                     _RXF1SIDH	set	3844
   175  0000                     _RXF1SIDL	set	3845
   176  0000                     _RXF1SIDLbits	set	3845
   177  0000                     _RXF2EIDH	set	3850
   178  0000                     _RXF2EIDL	set	3851
   179  0000                     _RXF2SIDH	set	3848
   180  0000                     _RXF2SIDL	set	3849
   181  0000                     _RXF2SIDLbits	set	3849
   182  0000                     _RXF3EIDH	set	3854
   183  0000                     _RXF3EIDL	set	3855
   184  0000                     _RXF3SIDH	set	3852
   185  0000                     _RXF3SIDL	set	3853
   186  0000                     _RXF3SIDLbits	set	3853
   187  0000                     _RXF4EIDH	set	3858
   188  0000                     _RXF4EIDL	set	3859
   189  0000                     _RXF4SIDH	set	3856
   190  0000                     _RXF4SIDL	set	3857
   191  0000                     _RXF4SIDLbits	set	3857
   192  0000                     _RXF5EIDH	set	3862
   193  0000                     _RXF5EIDL	set	3863
   194  0000                     _RXF5SIDH	set	3860
   195  0000                     _RXF5SIDL	set	3861
   196  0000                     _RXF5SIDLbits	set	3861
   197  0000                     _RXM0EIDH	set	3866
   198  0000                     _RXM0EIDL	set	3867
   199  0000                     _RXM0SIDH	set	3864
   200  0000                     _RXM0SIDL	set	3865
   201  0000                     _RXM0SIDLbits	set	3865
   202  0000                     _RXM1EIDH	set	3870
   203  0000                     _RXM1EIDL	set	3871
   204  0000                     _RXM1SIDH	set	3868
   205  0000                     _RXM1SIDL	set	3869
   206  0000                     _RXM1SIDLbits	set	3869
   207  0000                     _TXB0CONbits	set	3904
   208  0000                     _TXB0D0	set	3910
   209  0000                     _TXB0D1	set	3911
   210  0000                     _TXB0D2	set	3912
   211  0000                     _TXB0D3	set	3913
   212  0000                     _TXB0D4	set	3914
   213  0000                     _TXB0D5	set	3915
   214  0000                     _TXB0D6	set	3916
   215  0000                     _TXB0D7	set	3917
   216  0000                     _TXB0DLC	set	3909
   217  0000                     _TXB0DLCbits	set	3909
   218  0000                     _TXB0EIDH	set	3907
   219  0000                     _TXB0EIDL	set	3908
   220  0000                     _TXB0SIDH	set	3905
   221  0000                     _TXB0SIDL	set	3906
   222  0000                     _TXB0SIDLbits	set	3906
   223  0000                     _TXB1CONbits	set	3888
   224  0000                     _TXB1D0	set	3894
   225  0000                     _TXB1D1	set	3895
   226  0000                     _TXB1D2	set	3896
   227  0000                     _TXB1D3	set	3897
   228  0000                     _TXB1D4	set	3898
   229  0000                     _TXB1D5	set	3899
   230  0000                     _TXB1D6	set	3900
   231  0000                     _TXB1D7	set	3901
   232  0000                     _TXB1DLC	set	3893
   233  0000                     _TXB1DLCbits	set	3893
   234  0000                     _TXB1EIDH	set	3891
   235  0000                     _TXB1EIDL	set	3892
   236  0000                     _TXB1SIDH	set	3889
   237  0000                     _TXB1SIDL	set	3890
   238  0000                     _TXB1SIDLbits	set	3890
   239  0000                     _TXB2CONbits	set	3872
   240  0000                     _TXB2D0	set	3878
   241  0000                     _TXB2D1	set	3879
   242  0000                     _TXB2D2	set	3880
   243  0000                     _TXB2D3	set	3881
   244  0000                     _TXB2D4	set	3882
   245  0000                     _TXB2D5	set	3883
   246  0000                     _TXB2D6	set	3884
   247  0000                     _TXB2D7	set	3885
   248  0000                     _TXB2DLC	set	3877
   249  0000                     _TXB2DLCbits	set	3877
   250  0000                     _TXB2EIDH	set	3875
   251  0000                     _TXB2EIDL	set	3876
   252  0000                     _TXB2SIDH	set	3873
   253  0000                     _TXB2SIDL	set	3874
   254  0000                     _TXB2SIDLbits	set	3874
   255  0000                     _ADCON1	set	4033
   256  0000                     _BRGCON1	set	3952
   257  0000                     _BRGCON2	set	3953
   258  0000                     _BRGCON2bits	set	3953
   259  0000                     _BRGCON3	set	3954
   260  0000                     _BRGCON3bits	set	3954
   261  0000                     _CANCON	set	3951
   262  0000                     _CANCONbits	set	3951
   263  0000                     _CANSTAT	set	3950
   264  0000                     _COMSTATbits	set	3956
   265  0000                     _INTCON2bits	set	4081
   266  0000                     _INTCONbits	set	4082
   267  0000                     _IPR3bits	set	4005
   268  0000                     _LATA	set	3977
   269  0000                     _LATB	set	3978
   270  0000                     _LATBbits	set	3978
   271  0000                     _LATC	set	3979
   272  0000                     _PIE3bits	set	4003
   273  0000                     _PIR3bits	set	4004
   274  0000                     _PORTA	set	3968
   275  0000                     _PORTBbits	set	3969
   276  0000                     _RCONbits	set	4048
   277  0000                     _RXB0CON	set	3936
   278  0000                     _RXB0CONbits	set	3936
   279  0000                     _RXB0D0	set	3942
   280  0000                     _RXB0D1	set	3943
   281  0000                     _RXB0D2	set	3944
   282  0000                     _RXB0D3	set	3945
   283  0000                     _RXB0D4	set	3946
   284  0000                     _RXB0D5	set	3947
   285  0000                     _RXB0D6	set	3948
   286  0000                     _RXB0D7	set	3949
   287  0000                     _RXB0DLC	set	3941
   288  0000                     _RXB0DLCbits	set	3941
   289  0000                     _RXB0EIDH	set	3939
   290  0000                     _RXB0EIDL	set	3940
   291  0000                     _RXB0SIDH	set	3937
   292  0000                     _RXB0SIDL	set	3938
   293  0000                     _RXB0SIDLbits	set	3938
   294  0000                     _RXERRCNT	set	3957
   295  0000                     _T0CON	set	4053
   296  0000                     _T0CONbits	set	4053
   297  0000                     _T3CON	set	4017
   298  0000                     _TMR0H	set	4055
   299  0000                     _TMR0L	set	4054
   300  0000                     _TMR3H	set	4019
   301  0000                     _TMR3L	set	4018
   302  0000                     _TRISA	set	3986
   303  0000                     _TRISB	set	3987
   304  0000                     _TRISBbits	set	3987
   305  0000                     _TRISC	set	3988
   306  0000                     _TXERRCNT	set	3958
   307                           
   308                           ; #config settings
   309  000D51  00                 	db	0	; dummy byte at the end
   310  0000                     
   311                           	psect	cinit
   312  0059C2                     __pcinit:
   313                           	opt stack 0
   314  0059C2                     start_initialization:
   315                           	opt stack 0
   316  0059C2                     __initialization:
   317                           	opt stack 0
   318                           
   319                           ; Clear objects allocated to BANK1 (131 bytes)
   320  0059C2  EE01  F000         	lfsr	0,__pbssBANK1
   321  0059C6  0E83               	movlw	131
   322  0059C8                     clear_0:
   323  0059C8  6AEE               	clrf	postinc0,c
   324  0059CA  06E8               	decf	wreg,f,c
   325  0059CC  E1FD               	bnz	clear_0
   326                           
   327                           ; Clear objects allocated to BANK0 (16 bytes)
   328  0059CE  EE00  F0D7         	lfsr	0,__pbssBANK0
   329  0059D2  0E10               	movlw	16
   330  0059D4                     clear_1:
   331  0059D4  6AEE               	clrf	postinc0,c
   332  0059D6  06E8               	decf	wreg,f,c
   333  0059D8  E1FD               	bnz	clear_1
   334                           
   335                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   336  0059DA  6A45               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   337  0059DC  6A44               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   338                           
   339                           ; Clear objects allocated to COMRAM (32 bytes)
   340  0059DE  EE00  F024         	lfsr	0,__pbssCOMRAM
   341  0059E2  0E20               	movlw	32
   342  0059E4                     clear_2:
   343  0059E4  6AEE               	clrf	postinc0,c
   344  0059E6  06E8               	decf	wreg,f,c
   345  0059E8  E1FD               	bnz	clear_2
   346                           
   347                           ; Initialize objects allocated to BANK1 (8 bytes)
   348                           ; load TBLPTR registers with __pidataBANK1
   349  0059EA  0E82               	movlw	low __pidataBANK1
   350  0059EC  6EF6               	movwf	tblptrl,c
   351  0059EE  0E5D               	movlw	high __pidataBANK1
   352  0059F0  6EF7               	movwf	tblptrh,c
   353  0059F2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   354  0059F4  6EF8               	movwf	tblptru,c
   355  0059F6  EE01  F0D8         	lfsr	0,__pdataBANK1
   356  0059FA  EE10 F008          	lfsr	1,8
   357  0059FE                     copy_data0:
   358  0059FE  0009               	tblrd		*+
   359  005A00  CFF5 FFEE          	movff	tablat,postinc0
   360  005A04  50E5               	movf	postdec1,w,c
   361  005A06  50E1               	movf	fsr1l,w,c
   362  005A08  E1FA               	bnz	copy_data0
   363                           
   364                           ; Initialize objects allocated to BANK0 (1 bytes)
   365                           ; load TBLPTR registers with __pidataBANK0
   366  005A0A  0E8C               	movlw	low __pidataBANK0
   367  005A0C  6EF6               	movwf	tblptrl,c
   368  005A0E  0E5D               	movlw	high __pidataBANK0
   369  005A10  6EF7               	movwf	tblptrh,c
   370  005A12  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   371  005A14  6EF8               	movwf	tblptru,c
   372  005A16  0009               	tblrd		*+	;fetch initializer
   373  005A18  CFF5 F0E7          	movff	tablat,__pdataBANK0
   374                           
   375                           ; Initialize objects allocated to COMRAM (2 bytes)
   376                           ; load TBLPTR registers with __pidataCOMRAM
   377  005A1C  0E8A               	movlw	low __pidataCOMRAM
   378  005A1E  6EF6               	movwf	tblptrl,c
   379  005A20  0E5D               	movlw	high __pidataCOMRAM
   380  005A22  6EF7               	movwf	tblptrh,c
   381  005A24  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   382  005A26  6EF8               	movwf	tblptru,c
   383  005A28  0009               	tblrd		*+	;fetch initializer
   384  005A2A  CFF5 F046          	movff	tablat,__pdataCOMRAM
   385  005A2E  0009               	tblrd		*+	;fetch initializer
   386  005A30  CFF5 F047          	movff	tablat,__pdataCOMRAM+1
   387  005A34                     end_of_initialization:
   388                           	opt stack 0
   389  005A34                     __end_of__initialization:
   390                           	opt stack 0
   391  005A34  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   392  005A36  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   393  005A38  0100               	movlb	0
   394  005A3A  EFBB  F02D         	goto	_main	;jump to C main() function
   395                           tblptru	equ	0xFF8
   396                           tblptrh	equ	0xFF7
   397                           tblptrl	equ	0xFF6
   398                           tablat	equ	0xFF5
   399                           postinc0	equ	0xFEE
   400                           wreg	equ	0xFE8
   401                           postdec1	equ	0xFE5
   402                           fsr1l	equ	0xFE1
   403                           
   404                           	psect	bitbssCOMRAM
   405  000220                     __pbitbssCOMRAM:
   406                           	opt stack 0
   407  000220                     _activation:
   408                           	opt stack 0
   409  000220                     	ds	1
   410  000221                     _asd:
   411                           	opt stack 0
   412  000221                     	ds	1
   413  000222                     _dir:
   414                           	opt stack 0
   415  000222                     	ds	1
   416  000223                     _distance_error:
   417                           	opt stack 0
   418  000223                     	ds	1
   419  000224                     _distance_received:
   420                           	opt stack 0
   421  000224                     	ds	1
   422  000225                     _distance_received1:
   423                           	opt stack 0
   424  000225                     	ds	1
   425  000226                     _distance_wait:
   426                           	opt stack 0
   427  000226                     	ds	1
   428  000227                     _old_data_correction:
   429                           	opt stack 0
   430  000227                     	ds	1
   431  000228                     _request_sent:
   432                           	opt stack 0
   433  000228                     	ds	1
   434  000229                     _request_sent1:
   435                           	opt stack 0
   436  000229                     	ds	1
   437  00022A                     _start_operation:
   438                           	opt stack 0
   439  00022A                     	ds	1
   440  00022B                     _steering_correction_dir:
   441                           	opt stack 0
   442  00022B                     	ds	1
   443                           tblptru	equ	0xFF8
   444                           tblptrh	equ	0xFF7
   445                           tblptrl	equ	0xFF6
   446                           tablat	equ	0xFF5
   447                           postinc0	equ	0xFEE
   448                           wreg	equ	0xFE8
   449                           postdec1	equ	0xFE5
   450                           fsr1l	equ	0xFE1
   451                           
   452                           	psect	bssCOMRAM
   453  000024                     __pbssCOMRAM:
   454                           	opt stack 0
   455  000024                     _sensor_distance:
   456                           	opt stack 0
   457  000024                     	ds	16
   458  000034                     _distance_dx:
   459                           	opt stack 0
   460  000034                     	ds	2
   461  000036                     _distance_sx:
   462                           	opt stack 0
   463  000036                     	ds	2
   464  000038                     _left_speed:
   465                           	opt stack 0
   466  000038                     	ds	2
   467  00003A                     _pulse_time:
   468                           	opt stack 0
   469  00003A                     	ds	2
   470  00003C                     _right_speed:
   471                           	opt stack 0
   472  00003C                     	ds	2
   473  00003E                     _timerValue2:
   474                           	opt stack 0
   475  00003E                     	ds	2
   476  000040                     _MUX_index:
   477                           	opt stack 0
   478  000040                     	ds	1
   479  000041                     _asus:
   480                           	opt stack 0
   481  000041                     	ds	1
   482  000042                     _gianni:
   483                           	opt stack 0
   484  000042                     	ds	1
   485  000043                     _steering_correction:
   486                           	opt stack 0
   487  000043                     	ds	1
   488                           tblptru	equ	0xFF8
   489                           tblptrh	equ	0xFF7
   490                           tblptrl	equ	0xFF6
   491                           tablat	equ	0xFF5
   492                           postinc0	equ	0xFEE
   493                           wreg	equ	0xFE8
   494                           postdec1	equ	0xFE5
   495                           fsr1l	equ	0xFE1
   496                           
   497                           	psect	dataCOMRAM
   498  000046                     __pdataCOMRAM:
   499                           	opt stack 0
   500  000046                     _spazio_parcheggio:
   501                           	opt stack 0
   502  000046                     	ds	2
   503                           tblptru	equ	0xFF8
   504                           tblptrh	equ	0xFF7
   505                           tblptrl	equ	0xFF6
   506                           tablat	equ	0xFF5
   507                           postinc0	equ	0xFEE
   508                           wreg	equ	0xFE8
   509                           postdec1	equ	0xFE5
   510                           fsr1l	equ	0xFE1
   511                           
   512                           	psect	bssBANK0
   513  0000D7                     __pbssBANK0:
   514                           	opt stack 0
   515  0000D7                     _alignment_gap:
   516                           	opt stack 0
   517  0000D7                     	ds	4
   518  0000DB                     _z:
   519                           	opt stack 0
   520  0000DB                     	ds	4
   521  0000DF                     _actual_speed:
   522                           	opt stack 0
   523  0000DF                     	ds	2
   524  0000E1                     _clock_counter_reference:
   525                           	opt stack 0
   526  0000E1                     	ds	2
   527  0000E3                     _distance_average:
   528                           	opt stack 0
   529  0000E3                     	ds	2
   530  0000E5                     _set_speed:
   531                           	opt stack 0
   532  0000E5                     	ds	2
   533                           tblptru	equ	0xFF8
   534                           tblptrh	equ	0xFF7
   535                           tblptrl	equ	0xFF6
   536                           tablat	equ	0xFF5
   537                           postinc0	equ	0xFEE
   538                           wreg	equ	0xFE8
   539                           postdec1	equ	0xFE5
   540                           fsr1l	equ	0xFE1
   541                           
   542                           	psect	dataBANK0
   543  0000E7                     __pdataBANK0:
   544                           	opt stack 0
   545  0000E7                     _delay_quartz_frequency_value:
   546                           	opt stack 0
   547  0000E7                     	ds	1
   548                           tblptru	equ	0xFF8
   549                           tblptrh	equ	0xFF7
   550                           tblptrl	equ	0xFF6
   551                           tablat	equ	0xFF5
   552                           postinc0	equ	0xFEE
   553                           wreg	equ	0xFE8
   554                           postdec1	equ	0xFE5
   555                           fsr1l	equ	0xFE1
   556                           
   557                           	psect	bssBANK1
   558  000100                     __pbssBANK1:
   559                           	opt stack 0
   560  000100                     _MUX_select:
   561                           	opt stack 0
   562  000100                     	ds	8
   563  000108                     _data_speed_rx:
   564                           	opt stack 0
   565  000108                     	ds	8
   566  000110                     _distance_set:
   567                           	opt stack 0
   568  000110                     	ds	8
   569  000118                     _Pminimo:
   570                           	opt stack 0
   571  000118                     	ds	4
   572  00011C                     _alfa:
   573                           	opt stack 0
   574  00011C                     	ds	4
   575  000120                     _beta:
   576                           	opt stack 0
   577  000120                     	ds	4
   578  000124                     _bordo:
   579                           	opt stack 0
   580  000124                     	ds	4
   581  000128                     _jjj:
   582                           	opt stack 0
   583  000128                     	ds	4
   584  00012C                     _kkk:
   585                           	opt stack 0
   586  00012C                     	ds	4
   587  000130                     _n:
   588                           	opt stack 0
   589  000130                     	ds	4
   590  000134                     _old_alignment_gap:
   591                           	opt stack 0
   592  000134                     	ds	4
   593  000138                     _prima_sterzata:
   594                           	opt stack 0
   595  000138                     	ds	4
   596  00013C                     _x:
   597                           	opt stack 0
   598  00013C                     	ds	4
   599  000140                     _distance:
   600                           	opt stack 0
   601  000140                     	ds	2
   602  000142                     _errno:
   603                           	opt stack 0
   604  000142                     	ds	2
   605  000144                     _msg:
   606                           	opt stack 0
   607  000144                     	ds	15
   608  000153                     _data:
   609                           	opt stack 0
   610  000153                     	ds	8
   611  00015B                     _data_brake:
   612                           	opt stack 0
   613  00015B                     	ds	8
   614  000163                     _data_correction:
   615                           	opt stack 0
   616  000163                     	ds	8
   617  00016B                     _data_speed:
   618                           	opt stack 0
   619  00016B                     	ds	8
   620  000173                     _data_steering:
   621                           	opt stack 0
   622  000173                     	ds	8
   623  00017B                     _data_test:
   624                           	opt stack 0
   625  00017B                     	ds	8
   626                           tblptru	equ	0xFF8
   627                           tblptrh	equ	0xFF7
   628                           tblptrl	equ	0xFF6
   629                           tablat	equ	0xFF5
   630                           postinc0	equ	0xFEE
   631                           wreg	equ	0xFE8
   632                           postdec1	equ	0xFE5
   633                           fsr1l	equ	0xFE1
   634                           
   635                           	psect	dataBANK1
   636  0001D8                     __pdataBANK1:
   637                           	opt stack 0
   638  0001D8                     _larghezza:
   639                           	opt stack 0
   640  0001D8                     	ds	4
   641  0001DC                     _raggio:
   642                           	opt stack 0
   643  0001DC                     	ds	4
   644                           tblptru	equ	0xFF8
   645                           tblptrh	equ	0xFF7
   646                           tblptrl	equ	0xFF6
   647                           tablat	equ	0xFF5
   648                           postinc0	equ	0xFEE
   649                           wreg	equ	0xFE8
   650                           postdec1	equ	0xFE5
   651                           fsr1l	equ	0xFE1
   652                           
   653                           	psect	cstackBANK1
   654  000183                     __pcstackBANK1:
   655                           	opt stack 0
   656  000183                     sqrt@sign:
   657                           	opt stack 0
   658  000183                     ___xxtofl@sign:
   659                           	opt stack 0
   660  000183                     atan@y:
   661                           	opt stack 0
   662                           
   663                           ; 4 bytes @ 0x0
   664  000183                     	ds	1
   665  000184                     sqrt@i:
   666                           	opt stack 0
   667  000184                     ___xxtofl@exp:
   668                           	opt stack 0
   669                           
   670                           ; 1 bytes @ 0x1
   671  000184                     	ds	1
   672  000185                     sqrt@tfrac:
   673                           	opt stack 0
   674  000185                     ___xxtofl@arg:
   675                           	opt stack 0
   676                           
   677                           ; 4 bytes @ 0x2
   678  000185                     	ds	2
   679  000187                     atan@x:
   680                           	opt stack 0
   681                           
   682                           ; 4 bytes @ 0x4
   683  000187                     	ds	2
   684  000189                     sqrt@p:
   685                           	opt stack 0
   686  000189                     floor@i:
   687                           	opt stack 0
   688                           
   689                           ; 4 bytes @ 0x6
   690  000189                     	ds	1
   691  00018A                     sqrt@grs:
   692                           	opt stack 0
   693                           
   694                           ; 4 bytes @ 0x7
   695  00018A                     	ds	1
   696  00018B                     atan@recip:
   697                           	opt stack 0
   698                           
   699                           ; 1 bytes @ 0x8
   700  00018B                     	ds	1
   701  00018C                     atan@val_squared:
   702                           	opt stack 0
   703                           
   704                           ; 4 bytes @ 0x9
   705  00018C                     	ds	1
   706  00018D                     floor@expon:
   707                           	opt stack 0
   708                           
   709                           ; 2 bytes @ 0xA
   710  00018D                     	ds	1
   711  00018E                     sqrt@exp:
   712                           	opt stack 0
   713                           
   714                           ; 2 bytes @ 0xB
   715  00018E                     	ds	1
   716  00018F                     ?___flsub:
   717                           	opt stack 0
   718  00018F                     ___flsub@b:
   719                           	opt stack 0
   720                           
   721                           ; 4 bytes @ 0xC
   722  00018F                     	ds	1
   723  000190                     atan@val:
   724                           	opt stack 0
   725  000190                     sqrt@root:
   726                           	opt stack 0
   727                           
   728                           ; 4 bytes @ 0xD
   729  000190                     	ds	3
   730  000193                     ___flsub@a:
   731                           	opt stack 0
   732                           
   733                           ; 4 bytes @ 0x10
   734  000193                     	ds	1
   735  000194                     sqrt@frac:
   736                           	opt stack 0
   737                           
   738                           ; 4 bytes @ 0x11
   739  000194                     	ds	3
   740  000197                     ?_sin:
   741                           	opt stack 0
   742  000197                     sin@f:
   743                           	opt stack 0
   744                           
   745                           ; 4 bytes @ 0x14
   746  000197                     	ds	1
   747  000198                     ?_asin:
   748                           	opt stack 0
   749  000198                     asin@x:
   750                           	opt stack 0
   751                           
   752                           ; 4 bytes @ 0x15
   753  000198                     	ds	3
   754  00019B                     sin@y:
   755                           	opt stack 0
   756                           
   757                           ; 4 bytes @ 0x18
   758  00019B                     	ds	1
   759  00019C                     asin@sgn:
   760                           	opt stack 0
   761                           
   762                           ; 4 bytes @ 0x19
   763  00019C                     	ds	3
   764  00019F                     _sin$3750:
   765                           	opt stack 0
   766                           
   767                           ; 4 bytes @ 0x1C
   768  00019F                     	ds	1
   769  0001A0                     _asin$3748:
   770                           	opt stack 0
   771                           
   772                           ; 4 bytes @ 0x1D
   773  0001A0                     	ds	3
   774  0001A3                     sin@x2:
   775                           	opt stack 0
   776                           
   777                           ; 4 bytes @ 0x20
   778  0001A3                     	ds	1
   779  0001A4                     _asin$3747:
   780                           	opt stack 0
   781                           
   782                           ; 4 bytes @ 0x21
   783  0001A4                     	ds	3
   784  0001A7                     sin@sgn:
   785                           	opt stack 0
   786                           
   787                           ; 1 bytes @ 0x24
   788  0001A7                     	ds	1
   789  0001A8                     asin@y:
   790                           	opt stack 0
   791                           
   792                           ; 4 bytes @ 0x25
   793  0001A8                     	ds	4
   794  0001AC                     _asin$3746:
   795                           	opt stack 0
   796                           
   797                           ; 4 bytes @ 0x29
   798  0001AC                     	ds	4
   799  0001B0                     ??_park_search:
   800  0001B0                     ?_cos:
   801                           	opt stack 0
   802  0001B0                     cos@f:
   803                           	opt stack 0
   804                           
   805                           ; 4 bytes @ 0x2D
   806  0001B0                     	ds	4
   807  0001B4                     _cos$3749:
   808                           	opt stack 0
   809                           
   810                           ; 4 bytes @ 0x31
   811  0001B4                     	ds	4
   812  0001B8                     _matematica$3738:
   813                           	opt stack 0
   814                           
   815                           ; 4 bytes @ 0x35
   816  0001B8                     	ds	4
   817  0001BC                     _matematica$3739:
   818                           	opt stack 0
   819                           
   820                           ; 4 bytes @ 0x39
   821  0001BC                     	ds	4
   822  0001C0                     _matematica$3740:
   823                           	opt stack 0
   824                           
   825                           ; 4 bytes @ 0x3D
   826  0001C0                     	ds	4
   827  0001C4                     _matematica$3741:
   828                           	opt stack 0
   829                           
   830                           ; 4 bytes @ 0x41
   831  0001C4                     	ds	4
   832  0001C8                     _matematica$3742:
   833                           	opt stack 0
   834                           
   835                           ; 4 bytes @ 0x45
   836  0001C8                     	ds	4
   837  0001CC                     _matematica$3743:
   838                           	opt stack 0
   839                           
   840                           ; 4 bytes @ 0x49
   841  0001CC                     	ds	4
   842  0001D0                     _matematica$3744:
   843                           	opt stack 0
   844                           
   845                           ; 4 bytes @ 0x4D
   846  0001D0                     	ds	4
   847  0001D4                     _matematica$3745:
   848                           	opt stack 0
   849                           
   850                           ; 4 bytes @ 0x51
   851  0001D4                     	ds	4
   852                           tblptru	equ	0xFF8
   853                           tblptrh	equ	0xFF7
   854                           tblptrl	equ	0xFF6
   855                           tablat	equ	0xFF5
   856                           postinc0	equ	0xFEE
   857                           wreg	equ	0xFE8
   858                           postdec1	equ	0xFE5
   859                           fsr1l	equ	0xFE1
   860                           
   861                           	psect	cstackBANK0
   862  000060                     __pcstackBANK0:
   863                           	opt stack 0
   864  000060                     ?___lwdiv:
   865                           	opt stack 0
   866  000060                     ___lwdiv@dividend:
   867                           	opt stack 0
   868                           
   869                           ; 2 bytes @ 0x0
   870  000060                     	ds	2
   871  000062                     ___lwdiv@divisor:
   872                           	opt stack 0
   873                           
   874                           ; 2 bytes @ 0x2
   875  000062                     	ds	2
   876  000064                     ___lwdiv@counter:
   877                           	opt stack 0
   878                           
   879                           ; 1 bytes @ 0x4
   880  000064                     	ds	1
   881  000065                     ___lwdiv@quotient:
   882                           	opt stack 0
   883                           
   884                           ; 2 bytes @ 0x5
   885  000065                     	ds	2
   886  000067                     ??_ISR_Alta:
   887                           
   888                           ; 0 bytes @ 0x7
   889  000067                     	ds	16
   890  000077                     ??_can_interpreter:
   891  000077                     ?_abs:
   892                           	opt stack 0
   893  000077                     ?___wmul:
   894                           	opt stack 0
   895  000077                     ?___fldiv:
   896                           	opt stack 0
   897  000077                     CANOperationMode@mode:
   898                           	opt stack 0
   899  000077                     _CANisTxReady$2845:
   900                           	opt stack 0
   901  000077                     ___wmul@multiplier:
   902                           	opt stack 0
   903  000077                     abs@a:
   904                           	opt stack 0
   905  000077                     CANsendMessage@identifier:
   906                           	opt stack 0
   907  000077                     CANSetMask@mask:
   908                           	opt stack 0
   909  000077                     CANSetFilter@filter:
   910                           	opt stack 0
   911  000077                     ___fldiv@b:
   912                           	opt stack 0
   913  000077                     frexp@value:
   914                           	opt stack 0
   915                           
   916                           ; 4 bytes @ 0x17
   917  000077                     	ds	2
   918  000079                     ??_abs:
   919  000079                     ___wmul@multiplicand:
   920                           	opt stack 0
   921                           
   922                           ; 2 bytes @ 0x19
   923  000079                     	ds	2
   924  00007B                     CANSetMask@type:
   925                           	opt stack 0
   926  00007B                     CANSetFilter@type:
   927                           	opt stack 0
   928  00007B                     CANsendMessage@data:
   929                           	opt stack 0
   930  00007B                     ___wmul@product:
   931                           	opt stack 0
   932  00007B                     frexp@eptr:
   933                           	opt stack 0
   934  00007B                     ___fldiv@a:
   935                           	opt stack 0
   936                           
   937                           ; 4 bytes @ 0x1B
   938  00007B                     	ds	1
   939  00007C                     ??_CANSetMask:
   940  00007C                     ??_CANSetFilter:
   941                           
   942                           ; 0 bytes @ 0x1C
   943  00007C                     	ds	1
   944  00007D                     ??_frexp:
   945  00007D                     CANsendMessage@dataLength:
   946                           	opt stack 0
   947  00007D                     delay_ms@value_ms:
   948                           	opt stack 0
   949                           
   950                           ; 2 bytes @ 0x1D
   951  00007D                     	ds	1
   952  00007E                     CANsendMessage@flags:
   953                           	opt stack 0
   954                           
   955                           ; 1 bytes @ 0x1E
   956  00007E                     	ds	1
   957  00007F                     ??___fldiv:
   958  00007F                     ??_CANsendMessage:
   959  00007F                     delay_s@value_s:
   960                           	opt stack 0
   961                           
   962                           ; 1 bytes @ 0x1F
   963  00007F                     	ds	1
   964  000080                     CANSetMask@numBuffer:
   965                           	opt stack 0
   966  000080                     CANSetFilter@numBuffer:
   967                           	opt stack 0
   968  000080                     delay_s@repeat_loop:
   969                           	opt stack 0
   970                           
   971                           ; 1 bytes @ 0x20
   972  000080                     	ds	1
   973  000081                     CANSetMask@tamp:
   974                           	opt stack 0
   975  000081                     CANSetFilter@tamp:
   976                           	opt stack 0
   977                           
   978                           ; 4 bytes @ 0x21
   979  000081                     	ds	2
   980  000083                     ___fldiv@sign:
   981                           	opt stack 0
   982  000083                     CANsendMessage@tamp:
   983                           	opt stack 0
   984                           
   985                           ; 4 bytes @ 0x23
   986  000083                     	ds	1
   987  000084                     ___fldiv@rem:
   988                           	opt stack 0
   989                           
   990                           ; 4 bytes @ 0x24
   991  000084                     	ds	1
   992  000085                     CANInitialize@phaseSeg1:
   993                           	opt stack 0
   994                           
   995                           ; 1 bytes @ 0x25
   996  000085                     	ds	1
   997  000086                     CANInitialize@phaseSeg2:
   998                           	opt stack 0
   999                           
  1000                           ; 1 bytes @ 0x26
  1001  000086                     	ds	1
  1002  000087                     can_send@data_correction1:
  1003                           	opt stack 0
  1004  000087                     CANInitialize@SJW:
  1005                           	opt stack 0
  1006                           
  1007                           ; 1 bytes @ 0x27
  1008  000087                     	ds	1
  1009  000088                     CANInitialize@BRP:
  1010                           	opt stack 0
  1011  000088                     ___fldiv@new_exp:
  1012                           	opt stack 0
  1013                           
  1014                           ; 2 bytes @ 0x28
  1015  000088                     	ds	1
  1016  000089                     CANInitialize@flags:
  1017                           	opt stack 0
  1018                           
  1019                           ; 1 bytes @ 0x29
  1020  000089                     	ds	1
  1021  00008A                     ??_CANInitialize:
  1022  00008A                     ___fldiv@grs:
  1023                           	opt stack 0
  1024                           
  1025                           ; 4 bytes @ 0x2A
  1026  00008A                     	ds	4
  1027  00008E                     CANInitialize@propSeg:
  1028                           	opt stack 0
  1029  00008E                     ___fldiv@bexp:
  1030                           	opt stack 0
  1031                           
  1032                           ; 1 bytes @ 0x2E
  1033  00008E                     	ds	1
  1034  00008F                     CANInitialize@FilterConfig1:
  1035                           	opt stack 0
  1036  00008F                     ___fldiv@aexp:
  1037                           	opt stack 0
  1038                           
  1039                           ; 1 bytes @ 0x2F
  1040  00008F                     	ds	1
  1041  000090                     ?___flmul:
  1042                           	opt stack 0
  1043  000090                     CANInitialize@FilterConfig2:
  1044                           	opt stack 0
  1045  000090                     ___flmul@b:
  1046                           	opt stack 0
  1047                           
  1048                           ; 4 bytes @ 0x30
  1049  000090                     	ds	1
  1050  000091                     
  1051                           ; 0 bytes @ 0x31
  1052  000091                     	ds	3
  1053  000094                     ___flmul@a:
  1054                           	opt stack 0
  1055                           
  1056                           ; 4 bytes @ 0x34
  1057  000094                     	ds	4
  1058  000098                     ??___flmul:
  1059                           
  1060                           ; 0 bytes @ 0x38
  1061  000098                     	ds	4
  1062  00009C                     ___flmul@sign:
  1063                           	opt stack 0
  1064                           
  1065                           ; 1 bytes @ 0x3C
  1066  00009C                     	ds	1
  1067  00009D                     ___flmul@aexp:
  1068                           	opt stack 0
  1069                           
  1070                           ; 1 bytes @ 0x3D
  1071  00009D                     	ds	1
  1072  00009E                     ___flmul@grs:
  1073                           	opt stack 0
  1074                           
  1075                           ; 4 bytes @ 0x3E
  1076  00009E                     	ds	4
  1077  0000A2                     ___flmul@bexp:
  1078                           	opt stack 0
  1079                           
  1080                           ; 1 bytes @ 0x42
  1081  0000A2                     	ds	1
  1082  0000A3                     ___flmul@prod:
  1083                           	opt stack 0
  1084                           
  1085                           ; 4 bytes @ 0x43
  1086  0000A3                     	ds	4
  1087  0000A7                     ___flmul@temp:
  1088                           	opt stack 0
  1089                           
  1090                           ; 2 bytes @ 0x47
  1091  0000A7                     	ds	2
  1092  0000A9                     ?___flneg:
  1093                           	opt stack 0
  1094  0000A9                     ___flneg@f1:
  1095                           	opt stack 0
  1096                           
  1097                           ; 4 bytes @ 0x49
  1098  0000A9                     	ds	4
  1099  0000AD                     ?___fladd:
  1100                           	opt stack 0
  1101  0000AD                     ?_fabs:
  1102                           	opt stack 0
  1103  0000AD                     fabs@d:
  1104                           	opt stack 0
  1105  0000AD                     ___fladd@b:
  1106                           	opt stack 0
  1107                           
  1108                           ; 4 bytes @ 0x4D
  1109  0000AD                     	ds	4
  1110  0000B1                     ___flge@ff1:
  1111                           	opt stack 0
  1112  0000B1                     ___fladd@a:
  1113                           	opt stack 0
  1114                           
  1115                           ; 4 bytes @ 0x51
  1116  0000B1                     	ds	4
  1117  0000B5                     ??___fladd:
  1118  0000B5                     ___flge@ff2:
  1119                           	opt stack 0
  1120                           
  1121                           ; 4 bytes @ 0x55
  1122  0000B5                     	ds	4
  1123  0000B9                     ??___flge:
  1124                           
  1125                           ; 0 bytes @ 0x59
  1126  0000B9                     	ds	4
  1127  0000BD                     ___fladd@signs:
  1128                           	opt stack 0
  1129                           
  1130                           ; 1 bytes @ 0x5D
  1131  0000BD                     	ds	1
  1132  0000BE                     ___fladd@aexp:
  1133                           	opt stack 0
  1134                           
  1135                           ; 1 bytes @ 0x5E
  1136  0000BE                     	ds	1
  1137  0000BF                     ___fladd@bexp:
  1138                           	opt stack 0
  1139                           
  1140                           ; 1 bytes @ 0x5F
  1141  0000BF                     	ds	1
  1142  0000C0                     ___fladd@grs:
  1143                           	opt stack 0
  1144                           
  1145                           ; 1 bytes @ 0x60
  1146  0000C0                     	ds	1
  1147  0000C1                     ?_sqrt:
  1148                           	opt stack 0
  1149  0000C1                     ?_eval_poly:
  1150                           	opt stack 0
  1151  0000C1                     ?___fltol:
  1152                           	opt stack 0
  1153  0000C1                     eval_poly@x:
  1154                           	opt stack 0
  1155  0000C1                     ___fltol@f1:
  1156                           	opt stack 0
  1157  0000C1                     sqrt@a:
  1158                           	opt stack 0
  1159                           
  1160                           ; 4 bytes @ 0x61
  1161  0000C1                     	ds	4
  1162  0000C5                     ??_sqrt:
  1163  0000C5                     ??___fltol:
  1164  0000C5                     eval_poly@d:
  1165                           	opt stack 0
  1166                           
  1167                           ; 2 bytes @ 0x65
  1168  0000C5                     	ds	2
  1169  0000C7                     eval_poly@n:
  1170                           	opt stack 0
  1171                           
  1172                           ; 2 bytes @ 0x67
  1173  0000C7                     	ds	2
  1174  0000C9                     ??_eval_poly:
  1175  0000C9                     ___fltol@sign1:
  1176                           	opt stack 0
  1177                           
  1178                           ; 1 bytes @ 0x69
  1179  0000C9                     	ds	1
  1180  0000CA                     ___fltol@exp1:
  1181                           	opt stack 0
  1182                           
  1183                           ; 1 bytes @ 0x6A
  1184  0000CA                     	ds	1
  1185  0000CB                     ?___xxtofl:
  1186                           	opt stack 0
  1187  0000CB                     ___xxtofl@val:
  1188                           	opt stack 0
  1189                           
  1190                           ; 4 bytes @ 0x6B
  1191  0000CB                     	ds	2
  1192  0000CD                     eval_poly@res:
  1193                           	opt stack 0
  1194                           
  1195                           ; 4 bytes @ 0x6D
  1196  0000CD                     	ds	2
  1197  0000CF                     ??___xxtofl:
  1198                           
  1199                           ; 0 bytes @ 0x6F
  1200  0000CF                     	ds	2
  1201  0000D1                     ?_atan:
  1202                           	opt stack 0
  1203  0000D1                     atan@f:
  1204                           	opt stack 0
  1205                           
  1206                           ; 4 bytes @ 0x71
  1207  0000D1                     	ds	2
  1208  0000D3                     ?_floor:
  1209                           	opt stack 0
  1210  0000D3                     floor@x:
  1211                           	opt stack 0
  1212                           
  1213                           ; 4 bytes @ 0x73
  1214  0000D3                     	ds	2
  1215  0000D5                     ??_parallelo:
  1216  0000D5                     
  1217                           ; 0 bytes @ 0x75
  1218  0000D5                     	ds	2
  1219  0000D7                     tblptru	equ	0xFF8
  1220                           tblptrh	equ	0xFF7
  1221                           tblptrl	equ	0xFF6
  1222                           tablat	equ	0xFF5
  1223                           postinc0	equ	0xFEE
  1224                           wreg	equ	0xFE8
  1225                           postdec1	equ	0xFE5
  1226                           fsr1l	equ	0xFE1
  1227                           
  1228                           ; 0 bytes @ 0x77
  1229                           
  1230                           	psect	cstackCOMRAM
  1231  000001                     __pcstackCOMRAM:
  1232                           	opt stack 0
  1233  000001                     CANreceiveMessage@msg:
  1234                           	opt stack 0
  1235                           
  1236                           ; 2 bytes @ 0x0
  1237  000001                     	ds	2
  1238  000003                     ??_CANreceiveMessage:
  1239                           
  1240                           ; 0 bytes @ 0x2
  1241  000003                     	ds	8
  1242  00000B                     CANreceiveMessage@error:
  1243                           	opt stack 0
  1244                           
  1245                           ; 1 bytes @ 0xA
  1246  00000B                     	ds	1
  1247  00000C                     CANreceiveMessage@tamp:
  1248                           	opt stack 0
  1249                           
  1250                           ; 1 bytes @ 0xB
  1251  00000C                     	ds	1
  1252  00000D                     ??_ISR_Bassa:
  1253                           
  1254                           ; 0 bytes @ 0xC
  1255  00000D                     	ds	21
  1256  000022                     ISR_Bassa@gigi:
  1257                           	opt stack 0
  1258                           
  1259                           ; 1 bytes @ 0x21
  1260  000022                     	ds	1
  1261  000023                     ISR_Bassa@i:
  1262                           	opt stack 0
  1263                           
  1264                           ; 1 bytes @ 0x22
  1265  000023                     	ds	1
  1266                           tblptru	equ	0xFF8
  1267                           tblptrh	equ	0xFF7
  1268                           tblptrl	equ	0xFF6
  1269                           tablat	equ	0xFF5
  1270                           postinc0	equ	0xFEE
  1271                           wreg	equ	0xFE8
  1272                           postdec1	equ	0xFE5
  1273                           fsr1l	equ	0xFE1
  1274                           
  1275 ;;
  1276 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1277 ;;
  1278 ;; *************** function _main *****************
  1279 ;; Defined at:
  1280 ;;		line 186 in file "parcheggio.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;		None
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;		None
  1285 ;; Return value:  Size  Location     Type
  1286 ;;		None               void
  1287 ;; Registers used:
  1288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1298 ;;Total ram usage:        0 bytes
  1299 ;; Hardware stack levels required when called:   10
  1300 ;; This function calls:
  1301 ;;		_can_interpreter
  1302 ;;		_configurazione
  1303 ;;		_park_routine
  1304 ;;		_park_search
  1305 ;; This function is called by:
  1306 ;;		Startup code after reset
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           	psect	text0
  1311  005B76                     __ptext0:
  1312                           	opt stack 0
  1313  005B76                     _main:
  1314                           	opt stack 21
  1315                           
  1316                           ;parcheggio.c: 187: MUX_select[0] = 0b00000000;
  1317                           
  1318                           ; BSR set to: 15
  1319                           ;incstack = 0
  1320  005B76  0E00               	movlw	0
  1321  005B78  0101               	movlb	1	; () banked
  1322  005B7A  6F00               	movwf	_MUX_select& (0+255),b
  1323                           
  1324                           ;parcheggio.c: 188: MUX_select[1] = 0b00000001;
  1325  005B7C  0E01               	movlw	1
  1326  005B7E  0101               	movlb	1	; () banked
  1327  005B80  6F01               	movwf	(_MUX_select+1)& (0+255),b
  1328                           
  1329                           ;parcheggio.c: 189: MUX_select[2] = 0b00000010;
  1330  005B82  0E02               	movlw	2
  1331  005B84  0101               	movlb	1	; () banked
  1332  005B86  6F02               	movwf	(_MUX_select+2)& (0+255),b
  1333                           
  1334                           ;parcheggio.c: 190: MUX_select[3] = 0b00000011;
  1335  005B88  0E03               	movlw	3
  1336  005B8A  0101               	movlb	1	; () banked
  1337  005B8C  6F03               	movwf	(_MUX_select+3)& (0+255),b
  1338                           
  1339                           ;parcheggio.c: 191: MUX_select[4] = 0b00000100;
  1340  005B8E  0E04               	movlw	4
  1341  005B90  0101               	movlb	1	; () banked
  1342  005B92  6F04               	movwf	(_MUX_select+4)& (0+255),b
  1343                           
  1344                           ;parcheggio.c: 192: MUX_select[5] = 0b00000101;
  1345  005B94  0E05               	movlw	5
  1346  005B96  0101               	movlb	1	; () banked
  1347  005B98  6F05               	movwf	(_MUX_select+5)& (0+255),b
  1348                           
  1349                           ;parcheggio.c: 193: MUX_select[6] = 0b00000110;
  1350  005B9A  0E06               	movlw	6
  1351  005B9C  0101               	movlb	1	; () banked
  1352  005B9E  6F06               	movwf	(_MUX_select+6)& (0+255),b
  1353                           
  1354                           ;parcheggio.c: 194: MUX_select[7] = 0b00000111;
  1355  005BA0  0E07               	movlw	7
  1356  005BA2  0101               	movlb	1	; () banked
  1357  005BA4  6F07               	movwf	(_MUX_select+7)& (0+255),b
  1358                           
  1359                           ; BSR set to: 1
  1360                           ;parcheggio.c: 195: configurazione();
  1361  005BA6  EC5B  F02D         	call	_configurazione	;wreg free
  1362                           
  1363                           ;parcheggio.c: 196: PORTBbits.RB4 = 0;
  1364  005BAA  9881               	bcf	3969,4,c	;volatile
  1365                           
  1366                           ;parcheggio.c: 197: PORTBbits.RB5 = 0;
  1367  005BAC  9A81               	bcf	3969,5,c	;volatile
  1368                           
  1369                           ;parcheggio.c: 198: PORTBbits.RB6 = 0;
  1370  005BAE  9C81               	bcf	3969,6,c	;volatile
  1371                           
  1372                           ;parcheggio.c: 199: request_sent = 0;
  1373  005BB0  9045               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1374                           
  1375                           ;parcheggio.c: 200: start_operation = 0;
  1376  005BB2  9445               	bcf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  1377  005BB4                     l7197:
  1378                           
  1379                           ;parcheggio.c: 216: park_search();
  1380  005BB4  ECDA  F027         	call	_park_search	;wreg free
  1381                           
  1382                           ;parcheggio.c: 217: can_interpreter();
  1383  005BB8  EC91  F02D         	call	_can_interpreter	;wreg free
  1384                           
  1385                           ;parcheggio.c: 218: park_routine();
  1386  005BBC  EC32  F022         	call	_park_routine	;wreg free
  1387  005BC0  D7F9               	goto	l7197
  1388  005BC2                     __end_of_main:
  1389                           	opt stack 0
  1390                           tblptru	equ	0xFF8
  1391                           tblptrh	equ	0xFF7
  1392                           tblptrl	equ	0xFF6
  1393                           tablat	equ	0xFF5
  1394                           postinc0	equ	0xFEE
  1395                           wreg	equ	0xFE8
  1396                           postdec1	equ	0xFE5
  1397                           fsr1l	equ	0xFE1
  1398                           
  1399 ;; *************** function _park_search *****************
  1400 ;; Defined at:
  1401 ;;		line 222 in file "parcheggio.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;		None
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;		None
  1406 ;; Return value:  Size  Location     Type
  1407 ;;		None               void
  1408 ;; Registers used:
  1409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1417 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1418 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1419 ;;Total ram usage:        2 bytes
  1420 ;; Hardware stack levels used:    1
  1421 ;; Hardware stack levels required when called:    9
  1422 ;; This function calls:
  1423 ;;		_CANisTxReady
  1424 ;;		_CANsendMessage
  1425 ;;		___xxtofl
  1426 ;;		_abs
  1427 ;;		_parallelo
  1428 ;; This function is called by:
  1429 ;;		_main
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432                           
  1433                           	psect	text1
  1434  004FB4                     __ptext1:
  1435                           	opt stack 0
  1436  004FB4                     _park_search:
  1437                           	opt stack 21
  1438                           
  1439                           ;parcheggio.c: 223: while ((activation == 1) && (PORTBbits.RB5 == 0)) {
  1440                           
  1441                           ;incstack = 0
  1442  004FB4  D0CE               	goto	l718
  1443  004FB6                     l6983:
  1444                           
  1445                           ;parcheggio.c: 224: parallelo();
  1446  004FB6  ECA1  F023         	call	_parallelo	;wreg free
  1447                           
  1448                           ;parcheggio.c: 225: if (sensor_distance[0] > 50) {
  1449  004FBA  5025               	movf	_sensor_distance+1,w,c	;volatile
  1450  004FBC  E104               	bnz	u8800
  1451  004FBE  0E33               	movlw	51
  1452  004FC0  5C24               	subwf	_sensor_distance,w,c	;volatile
  1453  004FC2  A0D8               	btfss	status,0,c
  1454  004FC4  D02A               	goto	l720
  1455  004FC6                     u8800:
  1456                           
  1457                           ;parcheggio.c: 226: if (request_sent == 0) {
  1458  004FC6  B045               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1459  004FC8  D057               	goto	l7003
  1460  004FCA                     l6991:
  1461  004FCA  ECA4  F02E         	call	_CANisTxReady	;wreg free
  1462  004FCE  0900               	iorlw	0
  1463  004FD0  B4D8               	btfsc	status,2,c
  1464  004FD2  D7FB               	goto	l6991
  1465                           
  1466                           ;parcheggio.c: 228: CANsendMessage(0b00000001000, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1467  004FD4  0E08               	movlw	8
  1468  004FD6  0100               	movlb	0	; () banked
  1469  004FD8  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1470  004FDA  0E00               	movlw	0
  1471  004FDC  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1472  004FDE  0E00               	movlw	0
  1473  004FE0  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1474  004FE2  0E00               	movlw	0
  1475  004FE4  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1476  004FE6  0E53               	movlw	low _data
  1477  004FE8  0100               	movlb	0	; () banked
  1478  004FEA  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1479  004FEC  0E01               	movlw	high _data
  1480  004FEE  0100               	movlb	0	; () banked
  1481  004FF0  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1482  004FF2  0E08               	movlw	8
  1483  004FF4  0100               	movlb	0	; () banked
  1484  004FF6  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1485  004FF8  0EFC               	movlw	252
  1486  004FFA  0100               	movlb	0	; () banked
  1487  004FFC  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1488  004FFE  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1489                           
  1490                           ;parcheggio.c: 229: request_sent = 1;
  1491  005002  8045               	bsf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1492                           
  1493                           ;parcheggio.c: 230: alignment_gap = 0;
  1494  005004  0E00               	movlw	0
  1495  005006  0100               	movlb	0	; () banked
  1496  005008  6FD7               	movwf	_alignment_gap& (0+255),b
  1497  00500A  0E00               	movlw	0
  1498  00500C  6FD8               	movwf	(_alignment_gap+1)& (0+255),b
  1499  00500E  0E00               	movlw	0
  1500  005010  6FD9               	movwf	(_alignment_gap+2)& (0+255),b
  1501  005012  0E00               	movlw	0
  1502  005014  6FDA               	movwf	(_alignment_gap+3)& (0+255),b
  1503                           
  1504                           ; BSR set to: 0
  1505                           ;parcheggio.c: 231: LATBbits.LATB4 = 1;
  1506  005016  888A               	bsf	3978,4,c	;volatile
  1507                           
  1508                           ; BSR set to: 0
  1509                           ;parcheggio.c: 232: }
  1510                           ;parcheggio.c: 233: } else {
  1511  005018  D02F               	goto	l7003
  1512  00501A                     l720:
  1513                           
  1514                           ;parcheggio.c: 234: LATBbits.LATB4 = 0;
  1515  00501A  988A               	bcf	3978,4,c	;volatile
  1516                           
  1517                           ;parcheggio.c: 235: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  1518  00501C  EE20  F026         	lfsr	2,_sensor_distance+2	;volatile
  1519  005020  CFDE F1B0          	movff	postinc2,??_park_search
  1520  005024  CFDD F1B1          	movff	postdec2,??_park_search+1
  1521  005028  0101               	movlb	1	; () banked
  1522  00502A  1FB0               	comf	??_park_search& (0+255),f,b
  1523  00502C  1FB1               	comf	(??_park_search+1)& (0+255),f,b
  1524  00502E  4BB0               	infsnz	??_park_search& (0+255),f,b
  1525  005030  2BB1               	incf	(??_park_search+1)& (0+255),f,b
  1526  005032  5024               	movf	_sensor_distance,w,c	;volatile
  1527  005034  0101               	movlb	1	; () banked
  1528  005036  25B0               	addwf	??_park_search& (0+255),w,b
  1529  005038  0100               	movlb	0	; () banked
  1530  00503A  6F77               	movwf	abs@a& (0+255),b
  1531  00503C  5025               	movf	_sensor_distance+1,w,c	;volatile
  1532  00503E  0101               	movlb	1	; () banked
  1533  005040  21B1               	addwfc	(??_park_search+1)& (0+255),w,b
  1534  005042  0100               	movlb	0	; () banked
  1535  005044  6F78               	movwf	(abs@a+1)& (0+255),b
  1536  005046  EC78  F02E         	call	_abs	;wreg free
  1537  00504A  0100               	movlb	0	; () banked
  1538  00504C  C077  F0CB         	movff	?_abs,___xxtofl@val
  1539  005050  0100               	movlb	0	; () banked
  1540  005052  C078  F0CC         	movff	?_abs+1,___xxtofl@val+1
  1541  005056  0100               	movlb	0	; () banked
  1542  005058  0E00               	movlw	0
  1543  00505A  BFCC               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1544  00505C  0EFF               	movlw	-1
  1545  00505E  6FCD               	movwf	(___xxtofl@val+2)& (0+255),b
  1546  005060  6FCE               	movwf	(___xxtofl@val+3)& (0+255),b
  1547  005062  0E01               	movlw	1
  1548  005064  EC10  F026         	call	___xxtofl
  1549  005068  C0CB  F0D7         	movff	?___xxtofl,_alignment_gap
  1550  00506C  C0CC  F0D8         	movff	?___xxtofl+1,_alignment_gap+1
  1551  005070  C0CD  F0D9         	movff	?___xxtofl+2,_alignment_gap+2
  1552  005074  C0CE  F0DA         	movff	?___xxtofl+3,_alignment_gap+3
  1553  005078                     l7003:
  1554                           
  1555                           ;parcheggio.c: 236: }
  1556                           ;parcheggio.c: 237: if ((sensor_distance[0] < 50) && (request_sent == 1)) {
  1557  005078  5025               	movf	_sensor_distance+1,w,c	;volatile
  1558  00507A  E122               	bnz	l7013
  1559  00507C  0E32               	movlw	50
  1560  00507E  5C24               	subwf	_sensor_distance,w,c	;volatile
  1561  005080  A0D8               	btfss	status,0,c
  1562  005082  A045               	btfss	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1563  005084  D01D               	goto	l7013
  1564                           
  1565                           ;parcheggio.c: 238: request_sent = 0;
  1566  005086  9045               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1567  005088                     l7009:
  1568  005088  ECA4  F02E         	call	_CANisTxReady	;wreg free
  1569  00508C  0900               	iorlw	0
  1570  00508E  B4D8               	btfsc	status,2,c
  1571  005090  D7FB               	goto	l7009
  1572                           
  1573                           ;parcheggio.c: 240: CANsendMessage(0b00000000111, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1574  005092  0E07               	movlw	7
  1575  005094  0100               	movlb	0	; () banked
  1576  005096  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1577  005098  0E00               	movlw	0
  1578  00509A  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1579  00509C  0E00               	movlw	0
  1580  00509E  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1581  0050A0  0E00               	movlw	0
  1582  0050A2  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1583  0050A4  0E53               	movlw	low _data
  1584  0050A6  0100               	movlb	0	; () banked
  1585  0050A8  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1586  0050AA  0E01               	movlw	high _data
  1587  0050AC  0100               	movlb	0	; () banked
  1588  0050AE  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1589  0050B0  0E08               	movlw	8
  1590  0050B2  0100               	movlb	0	; () banked
  1591  0050B4  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1592  0050B6  0EFC               	movlw	252
  1593  0050B8  0100               	movlb	0	; () banked
  1594  0050BA  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1595  0050BC  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1596  0050C0                     l7013:
  1597                           
  1598                           ;parcheggio.c: 241: }
  1599                           ;parcheggio.c: 242: if (distance_received == 1) {
  1600  0050C0  A844               	btfss	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1601  0050C2  D047               	goto	l718
  1602                           
  1603                           ;parcheggio.c: 243: if (distance_average > 55) {
  1604  0050C4  0100               	movlb	0	; () banked
  1605  0050C6  51E4               	movf	(_distance_average+1)& (0+255),w,b	;volatile
  1606  0050C8  E105               	bnz	u8870
  1607  0050CA  0E38               	movlw	56
  1608  0050CC  0100               	movlb	0	; () banked
  1609  0050CE  5DE3               	subwf	_distance_average& (0+255),w,b	;volatile
  1610  0050D0  A0D8               	btfss	status,0,c
  1611  0050D2  D03D               	goto	l731
  1612  0050D4                     u8870:
  1613                           
  1614                           ; BSR set to: 0
  1615                           ;parcheggio.c: 244: PORTBbits.RB5 = 1;
  1616  0050D4  8A81               	bsf	3969,5,c	;volatile
  1617                           
  1618                           ; BSR set to: 0
  1619                           ;parcheggio.c: 245: data[0] = 1;
  1620  0050D6  0E01               	movlw	1
  1621  0050D8  0101               	movlb	1	; () banked
  1622  0050DA  6F53               	movwf	_data& (0+255),b
  1623                           
  1624                           ; BSR set to: 1
  1625                           ;parcheggio.c: 246: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  1626  0050DC  0E0B               	movlw	11
  1627  0050DE  0100               	movlb	0	; () banked
  1628  0050E0  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1629  0050E2  0E00               	movlw	0
  1630  0050E4  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1631  0050E6  0E00               	movlw	0
  1632  0050E8  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1633  0050EA  0E00               	movlw	0
  1634  0050EC  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1635  0050EE  0E53               	movlw	low _data
  1636  0050F0  0100               	movlb	0	; () banked
  1637  0050F2  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1638  0050F4  0E01               	movlw	high _data
  1639  0050F6  0100               	movlb	0	; () banked
  1640  0050F8  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1641  0050FA  0E01               	movlw	1
  1642  0050FC  0100               	movlb	0	; () banked
  1643  0050FE  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1644  005100  0EBC               	movlw	188
  1645  005102  0100               	movlb	0	; () banked
  1646  005104  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1647  005106  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1648                           
  1649                           ;parcheggio.c: 247: if ((request_sent1 == 0)&&(sensor_distance[0] < 40)) {
  1650  00510A  B245               	btfsc	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1651  00510C  D022               	goto	l718
  1652  00510E  5025               	movf	_sensor_distance+1,w,c	;volatile
  1653  005110  E120               	bnz	l718
  1654  005112  0E28               	movlw	40
  1655  005114  5C24               	subwf	_sensor_distance,w,c	;volatile
  1656  005116  B0D8               	btfsc	status,0,c
  1657  005118  D01C               	goto	l718
  1658                           
  1659                           ;parcheggio.c: 248: CANsendMessage(0b00000001000, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1660  00511A  0E08               	movlw	8
  1661  00511C  0100               	movlb	0	; () banked
  1662  00511E  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1663  005120  0E00               	movlw	0
  1664  005122  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1665  005124  0E00               	movlw	0
  1666  005126  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1667  005128  0E00               	movlw	0
  1668  00512A  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1669  00512C  0E53               	movlw	low _data
  1670  00512E  0100               	movlb	0	; () banked
  1671  005130  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1672  005132  0E01               	movlw	high _data
  1673  005134  0100               	movlb	0	; () banked
  1674  005136  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1675  005138  0E08               	movlw	8
  1676  00513A  0100               	movlb	0	; () banked
  1677  00513C  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1678  00513E  0EFC               	movlw	252
  1679  005140  0100               	movlb	0	; () banked
  1680  005142  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1681  005144  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1682                           
  1683                           ;parcheggio.c: 249: distance_received1 = 0;
  1684  005148  9A44               	bcf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
  1685                           
  1686                           ;parcheggio.c: 250: request_sent1 = 1;
  1687  00514A  8245               	bsf	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1688                           
  1689                           ;parcheggio.c: 251: }
  1690                           ;parcheggio.c: 252: } else {
  1691  00514C  D002               	goto	l718
  1692  00514E                     l731:
  1693                           
  1694                           ; BSR set to: 0
  1695                           ;parcheggio.c: 253: distance_received = 0;
  1696  00514E  9844               	bcf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1697                           
  1698                           ;parcheggio.c: 254: PORTBbits.RB5 = 0;
  1699  005150  9A81               	bcf	3969,5,c	;volatile
  1700  005152                     l718:
  1701  005152  A044               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1702  005154  0012               	return	
  1703  005156  BA81               	btfsc	3969,5,c	;volatile
  1704  005158  0012               	return	
  1705  00515A  D72D               	goto	l6983
  1706  00515C                     __end_of_park_search:
  1707                           	opt stack 0
  1708                           tblptru	equ	0xFF8
  1709                           tblptrh	equ	0xFF7
  1710                           tblptrl	equ	0xFF6
  1711                           tablat	equ	0xFF5
  1712                           postinc0	equ	0xFEE
  1713                           wreg	equ	0xFE8
  1714                           postdec1	equ	0xFE5
  1715                           fsr1l	equ	0xFE1
  1716                           postinc2	equ	0xFDE
  1717                           postdec2	equ	0xFDD
  1718                           status	equ	0xFD8
  1719                           
  1720 ;; *************** function _parallelo *****************
  1721 ;; Defined at:
  1722 ;;		line 359 in file "parcheggio.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;		None
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;		None
  1727 ;; Return value:  Size  Location     Type
  1728 ;;		None               void
  1729 ;; Registers used:
  1730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1738 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1739 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1740 ;;Total ram usage:        2 bytes
  1741 ;; Hardware stack levels used:    1
  1742 ;; Hardware stack levels required when called:    8
  1743 ;; This function calls:
  1744 ;;		___fladd
  1745 ;;		___fldiv
  1746 ;;		___flge
  1747 ;;		___flmul
  1748 ;;		___fltol
  1749 ;;		___xxtofl
  1750 ;;		_abs
  1751 ;;		_asin
  1752 ;;		_can_send
  1753 ;;		_sqrt
  1754 ;; This function is called by:
  1755 ;;		_park_search
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           	psect	text2
  1760  004742                     __ptext2:
  1761                           	opt stack 0
  1762  004742                     _parallelo:
  1763                           	opt stack 21
  1764                           
  1765                           ;parcheggio.c: 360: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  1766                           
  1767                           ;incstack = 0
  1768  004742  EE20  F026         	lfsr	2,_sensor_distance+2	;volatile
  1769  004746  CFDE F0D5          	movff	postinc2,??_parallelo
  1770  00474A  CFDD F0D6          	movff	postdec2,??_parallelo+1
  1771  00474E  0100               	movlb	0	; () banked
  1772  004750  1FD5               	comf	??_parallelo& (0+255),f,b
  1773  004752  1FD6               	comf	(??_parallelo+1)& (0+255),f,b
  1774  004754  4BD5               	infsnz	??_parallelo& (0+255),f,b
  1775  004756  2BD6               	incf	(??_parallelo+1)& (0+255),f,b
  1776  004758  5024               	movf	_sensor_distance,w,c	;volatile
  1777  00475A  0100               	movlb	0	; () banked
  1778  00475C  25D5               	addwf	??_parallelo& (0+255),w,b
  1779  00475E  0100               	movlb	0	; () banked
  1780  004760  6F77               	movwf	abs@a& (0+255),b
  1781  004762  5025               	movf	_sensor_distance+1,w,c	;volatile
  1782  004764  0100               	movlb	0	; () banked
  1783  004766  21D6               	addwfc	(??_parallelo+1)& (0+255),w,b
  1784  004768  0100               	movlb	0	; () banked
  1785  00476A  6F78               	movwf	(abs@a+1)& (0+255),b
  1786  00476C  EC78  F02E         	call	_abs	;wreg free
  1787  004770  0100               	movlb	0	; () banked
  1788  004772  C077  F0CB         	movff	?_abs,___xxtofl@val
  1789  004776  0100               	movlb	0	; () banked
  1790  004778  C078  F0CC         	movff	?_abs+1,___xxtofl@val+1
  1791  00477C  0100               	movlb	0	; () banked
  1792  00477E  0E00               	movlw	0
  1793  004780  BFCC               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1794  004782  0EFF               	movlw	-1
  1795  004784  6FCD               	movwf	(___xxtofl@val+2)& (0+255),b
  1796  004786  6FCE               	movwf	(___xxtofl@val+3)& (0+255),b
  1797  004788  0E01               	movlw	1
  1798  00478A  EC10  F026         	call	___xxtofl
  1799  00478E  C0CB  F0D7         	movff	?___xxtofl,_alignment_gap
  1800  004792  C0CC  F0D8         	movff	?___xxtofl+1,_alignment_gap+1
  1801  004796  C0CD  F0D9         	movff	?___xxtofl+2,_alignment_gap+2
  1802  00479A  C0CE  F0DA         	movff	?___xxtofl+3,_alignment_gap+3
  1803                           
  1804                           ;parcheggio.c: 362: if (alignment_gap < 30) {
  1805  00479E  C0D7  F0B1         	movff	_alignment_gap,___flge@ff1
  1806  0047A2  C0D8  F0B2         	movff	_alignment_gap+1,___flge@ff1+1
  1807  0047A6  C0D9  F0B3         	movff	_alignment_gap+2,___flge@ff1+2
  1808  0047AA  C0DA  F0B4         	movff	_alignment_gap+3,___flge@ff1+3
  1809  0047AE  0E00               	movlw	0
  1810  0047B0  0100               	movlb	0	; () banked
  1811  0047B2  6FB5               	movwf	___flge@ff2& (0+255),b
  1812  0047B4  0E00               	movlw	0
  1813  0047B6  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  1814  0047B8  0EF0               	movlw	240
  1815  0047BA  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  1816  0047BC  0E41               	movlw	65
  1817  0047BE  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  1818  0047C0  ECAE  F028         	call	___flge	;wreg free
  1819  0047C4  0100               	movlb	0	; () banked
  1820  0047C6  B0D8               	btfsc	status,0,c
  1821  0047C8  D0F9               	goto	l779
  1822                           
  1823                           ; BSR set to: 0
  1824                           ;parcheggio.c: 363: if ((sensor_distance[0] < 40) && (sensor_distance[1] < 40)) {
  1825  0047CA  5025               	movf	_sensor_distance+1,w,c	;volatile
  1826  0047CC  E103               	bnz	u8711
  1827  0047CE  0E28               	movlw	40
  1828  0047D0  5C24               	subwf	_sensor_distance,w,c	;volatile
  1829  0047D2  B0D8               	btfsc	status,0,c
  1830  0047D4                     u8711:
  1831  0047D4  D0E5               	goto	l6935
  1832                           
  1833                           ; BSR set to: 0
  1834  0047D6  5027               	movf	_sensor_distance+3,w,c	;volatile
  1835  0047D8  E103               	bnz	u8721
  1836  0047DA  0E28               	movlw	40
  1837  0047DC  5C26               	subwf	_sensor_distance+2,w,c	;volatile
  1838  0047DE  B0D8               	btfsc	status,0,c
  1839  0047E0                     u8721:
  1840  0047E0  D0DF               	goto	l6935
  1841                           
  1842                           ; BSR set to: 0
  1843                           ;parcheggio.c: 367: x = ((100) + (alignment_gap * alignment_gap));
  1844  0047E2  C0D7  F094         	movff	_alignment_gap,___flmul@a
  1845  0047E6  C0D8  F095         	movff	_alignment_gap+1,___flmul@a+1
  1846  0047EA  C0D9  F096         	movff	_alignment_gap+2,___flmul@a+2
  1847  0047EE  C0DA  F097         	movff	_alignment_gap+3,___flmul@a+3
  1848  0047F2  C0D7  F090         	movff	_alignment_gap,___flmul@b
  1849  0047F6  C0D8  F091         	movff	_alignment_gap+1,___flmul@b+1
  1850  0047FA  C0D9  F092         	movff	_alignment_gap+2,___flmul@b+2
  1851  0047FE  C0DA  F093         	movff	_alignment_gap+3,___flmul@b+3
  1852  004802  EC36  F017         	call	___flmul	;wreg free
  1853  004806  C090  F0AD         	movff	?___flmul,___fladd@b
  1854  00480A  C091  F0AE         	movff	?___flmul+1,___fladd@b+1
  1855  00480E  C092  F0AF         	movff	?___flmul+2,___fladd@b+2
  1856  004812  C093  F0B0         	movff	?___flmul+3,___fladd@b+3
  1857  004816  0E00               	movlw	0
  1858  004818  0100               	movlb	0	; () banked
  1859  00481A  6FB1               	movwf	___fladd@a& (0+255),b
  1860  00481C  0E00               	movlw	0
  1861  00481E  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  1862  004820  0EC8               	movlw	200
  1863  004822  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  1864  004824  0E42               	movlw	66
  1865  004826  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  1866  004828  ECE2  F014         	call	___fladd	;wreg free
  1867  00482C  C0AD  F13C         	movff	?___fladd,_x
  1868  004830  C0AE  F13D         	movff	?___fladd+1,_x+1
  1869  004834  C0AF  F13E         	movff	?___fladd+2,_x+2
  1870  004838  C0B0  F13F         	movff	?___fladd+3,_x+3
  1871                           
  1872                           ;parcheggio.c: 368: x = sqrt(x);
  1873  00483C  C13C  F0C1         	movff	_x,sqrt@a
  1874  004840  C13D  F0C2         	movff	_x+1,sqrt@a+1
  1875  004844  C13E  F0C3         	movff	_x+2,sqrt@a+2
  1876  004848  C13F  F0C4         	movff	_x+3,sqrt@a+3
  1877  00484C  EC89  F019         	call	_sqrt	;wreg free
  1878  004850  C0C1  F13C         	movff	?_sqrt,_x
  1879  004854  C0C2  F13D         	movff	?_sqrt+1,_x+1
  1880  004858  C0C3  F13E         	movff	?_sqrt+2,_x+2
  1881  00485C  C0C4  F13F         	movff	?_sqrt+3,_x+3
  1882                           
  1883                           ;parcheggio.c: 369: z = alignment_gap / x;
  1884  004860  C0D7  F077         	movff	_alignment_gap,___fldiv@b
  1885  004864  C0D8  F078         	movff	_alignment_gap+1,___fldiv@b+1
  1886  004868  C0D9  F079         	movff	_alignment_gap+2,___fldiv@b+2
  1887  00486C  C0DA  F07A         	movff	_alignment_gap+3,___fldiv@b+3
  1888  004870  C13C  F07B         	movff	_x,___fldiv@a
  1889  004874  C13D  F07C         	movff	_x+1,___fldiv@a+1
  1890  004878  C13E  F07D         	movff	_x+2,___fldiv@a+2
  1891  00487C  C13F  F07E         	movff	_x+3,___fldiv@a+3
  1892  004880  EC6E  F01B         	call	___fldiv	;wreg free
  1893  004884  C077  F0DB         	movff	?___fldiv,_z
  1894  004888  C078  F0DC         	movff	?___fldiv+1,_z+1
  1895  00488C  C079  F0DD         	movff	?___fldiv+2,_z+2
  1896  004890  C07A  F0DE         	movff	?___fldiv+3,_z+3
  1897                           
  1898                           ;parcheggio.c: 370: z = asin(z);
  1899  004894  C0DB  F198         	movff	_z,asin@x
  1900  004898  C0DC  F199         	movff	_z+1,asin@x+1
  1901  00489C  C0DD  F19A         	movff	_z+2,asin@x+2
  1902  0048A0  C0DE  F19B         	movff	_z+3,asin@x+3
  1903  0048A4  ECA9  F020         	call	_asin	;wreg free
  1904  0048A8  C198  F0DB         	movff	?_asin,_z
  1905  0048AC  C199  F0DC         	movff	?_asin+1,_z+1
  1906  0048B0  C19A  F0DD         	movff	?_asin+2,_z+2
  1907  0048B4  C19B  F0DE         	movff	?_asin+3,_z+3
  1908                           
  1909                           ;parcheggio.c: 371: z = z / 3.14159265358979323846 * 180;
  1910  0048B8  0EDB               	movlw	219
  1911  0048BA  0100               	movlb	0	; () banked
  1912  0048BC  6F7B               	movwf	___fldiv@a& (0+255),b
  1913  0048BE  0E0F               	movlw	15
  1914  0048C0  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  1915  0048C2  0E49               	movlw	73
  1916  0048C4  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  1917  0048C6  0E40               	movlw	64
  1918  0048C8  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  1919  0048CA  C0DB  F077         	movff	_z,___fldiv@b
  1920  0048CE  C0DC  F078         	movff	_z+1,___fldiv@b+1
  1921  0048D2  C0DD  F079         	movff	_z+2,___fldiv@b+2
  1922  0048D6  C0DE  F07A         	movff	_z+3,___fldiv@b+3
  1923  0048DA  EC6E  F01B         	call	___fldiv	;wreg free
  1924  0048DE  C077  F090         	movff	?___fldiv,___flmul@b
  1925  0048E2  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  1926  0048E6  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  1927  0048EA  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  1928  0048EE  0E00               	movlw	0
  1929  0048F0  0100               	movlb	0	; () banked
  1930  0048F2  6F94               	movwf	___flmul@a& (0+255),b
  1931  0048F4  0E00               	movlw	0
  1932  0048F6  6F95               	movwf	(___flmul@a+1)& (0+255),b
  1933  0048F8  0E34               	movlw	52
  1934  0048FA  6F96               	movwf	(___flmul@a+2)& (0+255),b
  1935  0048FC  0E43               	movlw	67
  1936  0048FE  6F97               	movwf	(___flmul@a+3)& (0+255),b
  1937  004900  EC36  F017         	call	___flmul	;wreg free
  1938  004904  C090  F0DB         	movff	?___flmul,_z
  1939  004908  C091  F0DC         	movff	?___flmul+1,_z+1
  1940  00490C  C092  F0DD         	movff	?___flmul+2,_z+2
  1941  004910  C093  F0DE         	movff	?___flmul+3,_z+3
  1942                           
  1943                           ;parcheggio.c: 372: data_correction[0] = z;
  1944  004914  C0DB  F0C1         	movff	_z,___fltol@f1
  1945  004918  C0DC  F0C2         	movff	_z+1,___fltol@f1+1
  1946  00491C  C0DD  F0C3         	movff	_z+2,___fltol@f1+2
  1947  004920  C0DE  F0C4         	movff	_z+3,___fltol@f1+3
  1948  004924  EC2F  F02B         	call	___fltol	;wreg free
  1949  004928  0100               	movlb	0	; () banked
  1950  00492A  51C1               	movf	?___fltol& (0+255),w,b
  1951  00492C  0101               	movlb	1	; () banked
  1952  00492E  6F63               	movwf	_data_correction& (0+255),b
  1953                           
  1954                           ; BSR set to: 1
  1955                           ;parcheggio.c: 374: if (sensor_distance[0] < sensor_distance[1]) {
  1956  004930  5026               	movf	_sensor_distance+2,w,c	;volatile
  1957  004932  5C24               	subwf	_sensor_distance,w,c	;volatile
  1958  004934  5027               	movf	_sensor_distance+3,w,c	;volatile
  1959  004936  5825               	subwfb	_sensor_distance+1,w,c	;volatile
  1960  004938  B0D8               	btfsc	status,0,c
  1961  00493A  D002               	goto	l6927
  1962                           
  1963                           ; BSR set to: 1
  1964                           ;parcheggio.c: 375: data_correction[1] = 0;
  1965  00493C  0E00               	movlw	0
  1966  00493E  D001               	goto	L1
  1967  004940                     l6927:
  1968                           
  1969                           ; BSR set to: 1
  1970                           ;parcheggio.c: 377: data_correction[1] = 1;
  1971  004940  0E01               	movlw	1
  1972  004942                     L1:
  1973  004942  0101               	movlb	1	; () banked
  1974  004944  6F64               	movwf	(_data_correction+1)& (0+255),b
  1975                           
  1976                           ; BSR set to: 1
  1977                           ;parcheggio.c: 378: }
  1978                           ;parcheggio.c: 379: if ((old_alignment_gap != alignment_gap) || (old_data_correction != 
      +                          data_correction[1])) {
  1979                           
  1980                           ; BSR set to: 1
  1981  004946  0100               	movlb	0	; () banked
  1982  004948  51D7               	movf	_alignment_gap& (0+255),w,b
  1983  00494A  0101               	movlb	1	; () banked
  1984  00494C  1934               	xorwf	_old_alignment_gap& (0+255),w,b
  1985  00494E  E117               	bnz	l785
  1986  004950  0100               	movlb	0	; () banked
  1987  004952  51D8               	movf	(_alignment_gap+1)& (0+255),w,b
  1988  004954  0101               	movlb	1	; () banked
  1989  004956  1935               	xorwf	(_old_alignment_gap+1)& (0+255),w,b
  1990  004958  E112               	bnz	l785
  1991  00495A  0100               	movlb	0	; () banked
  1992  00495C  51D9               	movf	(_alignment_gap+2)& (0+255),w,b
  1993  00495E  0101               	movlb	1	; () banked
  1994  004960  1936               	xorwf	(_old_alignment_gap+2)& (0+255),w,b
  1995  004962  E10D               	bnz	l785
  1996  004964  0100               	movlb	0	; () banked
  1997  004966  51DA               	movf	(_alignment_gap+3)& (0+255),w,b
  1998  004968  0101               	movlb	1	; () banked
  1999  00496A  1937               	xorwf	(_old_alignment_gap+3)& (0+255),w,b
  2000  00496C  A4D8               	btfss	status,2,c
  2001  00496E  D007               	goto	l785
  2002                           
  2003                           ; BSR set to: 1
  2004  004970  0E00               	movlw	0
  2005  004972  BE44               	btfsc	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2006  004974  0E01               	movlw	1
  2007  004976  0101               	movlb	1	; () banked
  2008  004978  1964               	xorwf	(_data_correction+1)& (0+255),w,b
  2009  00497A  B4D8               	btfsc	status,2,c
  2010  00497C  0012               	return	
  2011  00497E                     l785:
  2012                           
  2013                           ; BSR set to: 1
  2014                           ;parcheggio.c: 380: old_alignment_gap = alignment_gap;
  2015  00497E  C0D7  F134         	movff	_alignment_gap,_old_alignment_gap
  2016  004982  C0D8  F135         	movff	_alignment_gap+1,_old_alignment_gap+1
  2017  004986  C0D9  F136         	movff	_alignment_gap+2,_old_alignment_gap+2
  2018  00498A  C0DA  F137         	movff	_alignment_gap+3,_old_alignment_gap+3
  2019                           
  2020                           ;parcheggio.c: 381: old_data_correction = data_correction[1];
  2021  00498E  0101               	movlb	1	; () banked
  2022  004990  A164               	btfss	(_data_correction+1)& (0+255),0,b
  2023  004992  D002               	goto	u8760
  2024  004994  8E44               	bsf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2025  004996  D001               	goto	l6933
  2026  004998                     u8760:
  2027  004998  9E44               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2028  00499A                     l6933:
  2029                           
  2030                           ;parcheggio.c: 382: can_send();
  2031  00499A  EC76  F029         	call	_can_send	;wreg free
  2032                           
  2033                           ;parcheggio.c: 383: }
  2034                           ;parcheggio.c: 384: } else if (data_correction[0] != old_data_correction) {
  2035  00499E  0012               	return	
  2036  0049A0                     l6935:
  2037  0049A0  0E00               	movlw	0
  2038  0049A2  BE44               	btfsc	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2039  0049A4  0E01               	movlw	1
  2040  0049A6  0101               	movlb	1	; () banked
  2041  0049A8  1963               	xorwf	_data_correction& (0+255),w,b
  2042  0049AA  B4D8               	btfsc	status,2,c
  2043  0049AC  0012               	return	
  2044                           
  2045                           ; BSR set to: 1
  2046                           ;parcheggio.c: 385: data_correction[0] = 0;
  2047  0049AE  0E00               	movlw	0
  2048  0049B0  0101               	movlb	1	; () banked
  2049  0049B2  6F63               	movwf	_data_correction& (0+255),b
  2050                           
  2051                           ; BSR set to: 1
  2052                           ;parcheggio.c: 386: old_data_correction = 0;
  2053  0049B4  9E44               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2054                           
  2055                           ; BSR set to: 1
  2056                           ;parcheggio.c: 387: can_send();
  2057  0049B6  EC76  F029         	call	_can_send	;wreg free
  2058                           
  2059                           ;parcheggio.c: 388: }
  2060                           ;parcheggio.c: 389: } else {
  2061  0049BA  0012               	return	
  2062  0049BC                     l779:
  2063                           
  2064                           ; BSR set to: 0
  2065                           ;parcheggio.c: 390: if (old_data_correction != 0) {
  2066  0049BC  AE44               	btfss	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2067  0049BE  0012               	return	
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;parcheggio.c: 391: data_correction[0] = 0;
  2071  0049C0  0E00               	movlw	0
  2072  0049C2  0101               	movlb	1	; () banked
  2073  0049C4  6F63               	movwf	_data_correction& (0+255),b
  2074                           
  2075                           ; BSR set to: 1
  2076                           ;parcheggio.c: 392: old_data_correction = 0;
  2077  0049C6  9E44               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2078                           
  2079                           ; BSR set to: 1
  2080                           ;parcheggio.c: 393: can_send();
  2081  0049C8  EC76  F029         	call	_can_send	;wreg free
  2082  0049CC  0012               	return	
  2083  0049CE                     __end_of_parallelo:
  2084                           	opt stack 0
  2085                           tblptru	equ	0xFF8
  2086                           tblptrh	equ	0xFF7
  2087                           tblptrl	equ	0xFF6
  2088                           tablat	equ	0xFF5
  2089                           postinc0	equ	0xFEE
  2090                           wreg	equ	0xFE8
  2091                           postdec1	equ	0xFE5
  2092                           fsr1l	equ	0xFE1
  2093                           postinc2	equ	0xFDE
  2094                           postdec2	equ	0xFDD
  2095                           status	equ	0xFD8
  2096                           
  2097 ;; *************** function _abs *****************
  2098 ;; Defined at:
  2099 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;  a               2   23[BANK0 ] int 
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;		None
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  2   23[BANK0 ] int 
  2106 ;; Registers used:
  2107 ;;		wreg, status,2, status,0
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2113 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2115 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2116 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2117 ;;Total ram usage:        4 bytes
  2118 ;; Hardware stack levels used:    1
  2119 ;; Hardware stack levels required when called:    4
  2120 ;; This function calls:
  2121 ;;		Nothing
  2122 ;; This function is called by:
  2123 ;;		_park_search
  2124 ;;		_parallelo
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text3
  2129  005CF0                     __ptext3:
  2130                           	opt stack 0
  2131  005CF0                     _abs:
  2132                           	opt stack 24
  2133                           
  2134                           ;incstack = 0
  2135  005CF0  0100               	movlb	0	; () banked
  2136  005CF2  AF78               	btfss	(abs@a+1)& (0+255),7,b
  2137  005CF4  D00E               	goto	l849
  2138                           
  2139                           ; BSR set to: 0
  2140  005CF6  C077  F079         	movff	abs@a,??_abs
  2141  005CFA  C078  F07A         	movff	abs@a+1,??_abs+1
  2142  005CFE  0100               	movlb	0	; () banked
  2143  005D00  1F79               	comf	??_abs& (0+255),f,b
  2144  005D02  1F7A               	comf	(??_abs+1)& (0+255),f,b
  2145  005D04  4B79               	infsnz	??_abs& (0+255),f,b
  2146  005D06  2B7A               	incf	(??_abs+1)& (0+255),f,b
  2147  005D08  C079  F077         	movff	??_abs,?_abs
  2148  005D0C  C07A  F078         	movff	??_abs+1,?_abs+1
  2149  005D10  0012               	return	
  2150  005D12                     l849:
  2151                           
  2152                           ; BSR set to: 0
  2153  005D12  C077  F077         	movff	abs@a,?_abs
  2154  005D16  C078  F078         	movff	abs@a+1,?_abs+1
  2155                           
  2156                           ; BSR set to: 0
  2157  005D1A  0012               	return		;funcret
  2158  005D1C                     __end_of_abs:
  2159                           	opt stack 0
  2160                           tblptru	equ	0xFF8
  2161                           tblptrh	equ	0xFF7
  2162                           tblptrl	equ	0xFF6
  2163                           tablat	equ	0xFF5
  2164                           postinc0	equ	0xFEE
  2165                           wreg	equ	0xFE8
  2166                           postdec1	equ	0xFE5
  2167                           fsr1l	equ	0xFE1
  2168                           postinc2	equ	0xFDE
  2169                           postdec2	equ	0xFDD
  2170                           status	equ	0xFD8
  2171                           
  2172 ;; *************** function _park_routine *****************
  2173 ;; Defined at:
  2174 ;;		line 260 in file "parcheggio.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;		None
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;		None
  2179 ;; Return value:  Size  Location     Type
  2180 ;;		None               void
  2181 ;; Registers used:
  2182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2192 ;;Total ram usage:        0 bytes
  2193 ;; Hardware stack levels used:    1
  2194 ;; Hardware stack levels required when called:    9
  2195 ;; This function calls:
  2196 ;;		_CANsendMessage
  2197 ;;		___fladd
  2198 ;;		___fltol
  2199 ;;		___xxtofl
  2200 ;;		_can_send
  2201 ;;		_delay_s
  2202 ;;		_matematica
  2203 ;; This function is called by:
  2204 ;;		_main
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           	psect	text4
  2209  004464                     __ptext4:
  2210                           	opt stack 0
  2211  004464                     _park_routine:
  2212                           	opt stack 21
  2213                           
  2214                           ;parcheggio.c: 261: while ((PORTBbits.RB5 == 1) && (activation == 1)&&(start_operation =
      +                          = 1)) {
  2215                           
  2216                           ; BSR set to: 0
  2217                           ;incstack = 0
  2218  004464  D167               	goto	l7137
  2219  004466                     l7037:
  2220                           
  2221                           ;parcheggio.c: 262: CANsendMessage(0b00000000111, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  2222  004466  0E07               	movlw	7
  2223  004468  0100               	movlb	0	; () banked
  2224  00446A  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2225  00446C  0E00               	movlw	0
  2226  00446E  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2227  004470  0E00               	movlw	0
  2228  004472  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2229  004474  0E00               	movlw	0
  2230  004476  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2231  004478  0E53               	movlw	low _data
  2232  00447A  0100               	movlb	0	; () banked
  2233  00447C  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2234  00447E  0E01               	movlw	high _data
  2235  004480  0100               	movlb	0	; () banked
  2236  004482  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2237  004484  0E08               	movlw	8
  2238  004486  0100               	movlb	0	; () banked
  2239  004488  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2240  00448A  0EFC               	movlw	252
  2241  00448C  0100               	movlb	0	; () banked
  2242  00448E  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2243  004490  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2244                           
  2245                           ;parcheggio.c: 263: bordo = sensor_distance[0];
  2246  004494  C024  F0CB         	movff	_sensor_distance,___xxtofl@val	;volatile
  2247  004498  C025  F0CC         	movff	_sensor_distance+1,___xxtofl@val+1	;volatile
  2248  00449C  0100               	movlb	0	; () banked
  2249  00449E  6BCD               	clrf	(___xxtofl@val+2)& (0+255),b
  2250  0044A0  6BCE               	clrf	(___xxtofl@val+3)& (0+255),b
  2251  0044A2  0E00               	movlw	0
  2252  0044A4  EC10  F026         	call	___xxtofl
  2253  0044A8  C0CB  F124         	movff	?___xxtofl,_bordo	;volatile
  2254  0044AC  C0CC  F125         	movff	?___xxtofl+1,_bordo+1	;volatile
  2255  0044B0  C0CD  F126         	movff	?___xxtofl+2,_bordo+2	;volatile
  2256  0044B4  C0CE  F127         	movff	?___xxtofl+3,_bordo+3	;volatile
  2257                           
  2258                           ;parcheggio.c: 264: matematica();
  2259  0044B8  EC78  F012         	call	_matematica	;wreg free
  2260                           
  2261                           ;parcheggio.c: 265: set_speed = 0;
  2262  0044BC  0E00               	movlw	0
  2263  0044BE  0100               	movlb	0	; () banked
  2264  0044C0  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2265  0044C2  0E00               	movlw	0
  2266  0044C4  6FE5               	movwf	_set_speed& (0+255),b
  2267                           
  2268                           ; BSR set to: 0
  2269                           ;parcheggio.c: 266: data_steering[0] = 90;
  2270  0044C6  0E5A               	movlw	90
  2271  0044C8  0101               	movlb	1	; () banked
  2272  0044CA  6F73               	movwf	_data_steering& (0+255),b
  2273                           
  2274                           ; BSR set to: 1
  2275                           ;parcheggio.c: 267: data_brake [0] = 0;
  2276  0044CC  0E00               	movlw	0
  2277  0044CE  0101               	movlb	1	; () banked
  2278  0044D0  6F5B               	movwf	_data_brake& (0+255),b
  2279                           
  2280                           ; BSR set to: 1
  2281                           ;parcheggio.c: 268: data_brake [1] = 1;
  2282  0044D2  0E01               	movlw	1
  2283  0044D4  0101               	movlb	1	; () banked
  2284  0044D6  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2285                           
  2286                           ; BSR set to: 1
  2287                           ;parcheggio.c: 269: can_send();
  2288  0044D8  EC76  F029         	call	_can_send	;wreg free
  2289                           
  2290                           ;parcheggio.c: 270: delay_s(1);
  2291  0044DC  0E01               	movlw	1
  2292  0044DE  EC8E  F02E         	call	_delay_s
  2293                           
  2294                           ;parcheggio.c: 271: data_brake [0] = 3;
  2295  0044E2  0E03               	movlw	3
  2296  0044E4  0101               	movlb	1	; () banked
  2297  0044E6  6F5B               	movwf	_data_brake& (0+255),b
  2298                           
  2299                           ; BSR set to: 1
  2300                           ;parcheggio.c: 272: data_brake [1] = 1;
  2301  0044E8  0E01               	movlw	1
  2302  0044EA  0101               	movlb	1	; () banked
  2303  0044EC  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2304  0044EE                     l742:
  2305  0044EE  AA44               	btfss	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
  2306  0044F0  D7FE               	goto	l742
  2307                           
  2308                           ;parcheggio.c: 274: if (distance_average > 50) {
  2309  0044F2  0100               	movlb	0	; () banked
  2310  0044F4  51E4               	movf	(_distance_average+1)& (0+255),w,b	;volatile
  2311  0044F6  E105               	bnz	u8930
  2312  0044F8  0E33               	movlw	51
  2313  0044FA  0100               	movlb	0	; () banked
  2314  0044FC  5DE3               	subwf	_distance_average& (0+255),w,b	;volatile
  2315  0044FE  A0D8               	btfss	status,0,c
  2316  004500  D02A               	goto	l7073
  2317  004502                     u8930:
  2318                           
  2319                           ; BSR set to: 0
  2320                           ;parcheggio.c: 275: set_speed = 1000;
  2321  004502  0E03               	movlw	3
  2322  004504  0100               	movlb	0	; () banked
  2323  004506  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2324  004508  0EE8               	movlw	232
  2325  00450A  6FE5               	movwf	_set_speed& (0+255),b
  2326                           
  2327                           ; BSR set to: 0
  2328                           ;parcheggio.c: 276: dir = 0;
  2329  00450C  9444               	bcf	_dir/(0+8),_dir& (0+7),c
  2330                           
  2331                           ;parcheggio.c: 277: data_steering[0] = 90;
  2332  00450E  0E5A               	movlw	90
  2333  004510  0101               	movlb	1	; () banked
  2334  004512  6F73               	movwf	_data_steering& (0+255),b
  2335                           
  2336                           ; BSR set to: 1
  2337                           ;parcheggio.c: 278: data_test[0] = (distance_average - 46);
  2338  004514  0100               	movlb	0	; () banked
  2339  004516  51E3               	movf	_distance_average& (0+255),w,b	;volatile
  2340  004518  0FD2               	addlw	210
  2341  00451A  0101               	movlb	1	; () banked
  2342  00451C  6F7B               	movwf	_data_test& (0+255),b
  2343                           
  2344                           ; BSR set to: 1
  2345                           ;parcheggio.c: 279: asd = 1;
  2346  00451E  8244               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2347                           
  2348                           ; BSR set to: 1
  2349                           ;parcheggio.c: 280: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2350  004520  0E0D               	movlw	13
  2351  004522  0100               	movlb	0	; () banked
  2352  004524  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2353  004526  0E00               	movlw	0
  2354  004528  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2355  00452A  0E00               	movlw	0
  2356  00452C  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2357  00452E  0E00               	movlw	0
  2358  004530  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2359  004532  0E7B               	movlw	low _data_test
  2360  004534  0100               	movlb	0	; () banked
  2361  004536  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2362  004538  0E01               	movlw	high _data_test
  2363  00453A  0100               	movlb	0	; () banked
  2364  00453C  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2365  00453E  0E08               	movlw	8
  2366  004540  0100               	movlb	0	; () banked
  2367  004542  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2368  004544  0EBC               	movlw	188
  2369  004546  0100               	movlb	0	; () banked
  2370  004548  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2371  00454A  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2372                           
  2373                           ;parcheggio.c: 281: can_send();
  2374  00454E  EC76  F029         	call	_can_send	;wreg free
  2375  004552                     l746:
  2376  004552  B244               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2377  004554  D7FE               	goto	l746
  2378  004556                     l7073:
  2379                           
  2380                           ;parcheggio.c: 283: }
  2381                           ;parcheggio.c: 284: set_speed = 0;
  2382  004556  0E00               	movlw	0
  2383  004558  0100               	movlb	0	; () banked
  2384  00455A  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2385  00455C  0E00               	movlw	0
  2386  00455E  6FE5               	movwf	_set_speed& (0+255),b
  2387                           
  2388                           ;parcheggio.c: 285: data_steering[0] = 90;
  2389  004560  0E5A               	movlw	90
  2390  004562  0101               	movlb	1	; () banked
  2391  004564  6F73               	movwf	_data_steering& (0+255),b
  2392                           
  2393                           ;parcheggio.c: 286: data_brake [0] = 0;
  2394  004566  0E00               	movlw	0
  2395  004568  0101               	movlb	1	; () banked
  2396  00456A  6F5B               	movwf	_data_brake& (0+255),b
  2397                           
  2398                           ;parcheggio.c: 287: data_brake [1] = 1;
  2399  00456C  0E01               	movlw	1
  2400  00456E  0101               	movlb	1	; () banked
  2401  004570  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2402                           
  2403                           ; BSR set to: 1
  2404                           ;parcheggio.c: 288: can_send();
  2405  004572  EC76  F029         	call	_can_send	;wreg free
  2406                           
  2407                           ;parcheggio.c: 289: delay_s(1);
  2408  004576  0E01               	movlw	1
  2409  004578  EC8E  F02E         	call	_delay_s
  2410                           
  2411                           ;parcheggio.c: 290: data_brake [0] = 3;
  2412  00457C  0E03               	movlw	3
  2413  00457E  0101               	movlb	1	; () banked
  2414  004580  6F5B               	movwf	_data_brake& (0+255),b
  2415                           
  2416                           ; BSR set to: 1
  2417                           ;parcheggio.c: 291: data_brake [1] = 1;
  2418  004582  0E01               	movlw	1
  2419  004584  0101               	movlb	1	; () banked
  2420  004586  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2421                           
  2422                           ; BSR set to: 1
  2423                           ;parcheggio.c: 292: set_speed = 1000;
  2424  004588  0E03               	movlw	3
  2425  00458A  0100               	movlb	0	; () banked
  2426  00458C  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2427  00458E  0EE8               	movlw	232
  2428  004590  6FE5               	movwf	_set_speed& (0+255),b
  2429                           
  2430                           ; BSR set to: 0
  2431                           ;parcheggio.c: 293: dir = 0;
  2432  004592  9444               	bcf	_dir/(0+8),_dir& (0+7),c
  2433                           
  2434                           ; BSR set to: 0
  2435                           ;parcheggio.c: 294: data_steering[0] = 180;
  2436  004594  0EB4               	movlw	180
  2437  004596  0101               	movlb	1	; () banked
  2438  004598  6F73               	movwf	_data_steering& (0+255),b
  2439                           
  2440                           ; BSR set to: 1
  2441                           ;parcheggio.c: 295: data_test[0] = prima_sterzata;
  2442  00459A  C138  F0C1         	movff	_prima_sterzata,___fltol@f1
  2443  00459E  C139  F0C2         	movff	_prima_sterzata+1,___fltol@f1+1
  2444  0045A2  C13A  F0C3         	movff	_prima_sterzata+2,___fltol@f1+2
  2445  0045A6  C13B  F0C4         	movff	_prima_sterzata+3,___fltol@f1+3
  2446  0045AA  EC2F  F02B         	call	___fltol	;wreg free
  2447  0045AE  0100               	movlb	0	; () banked
  2448  0045B0  51C1               	movf	?___fltol& (0+255),w,b
  2449  0045B2  0101               	movlb	1	; () banked
  2450  0045B4  6F7B               	movwf	_data_test& (0+255),b
  2451                           
  2452                           ; BSR set to: 1
  2453                           ;parcheggio.c: 296: asd = 1;
  2454  0045B6  8244               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2455                           
  2456                           ; BSR set to: 1
  2457                           ;parcheggio.c: 297: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2458  0045B8  0E0D               	movlw	13
  2459  0045BA  0100               	movlb	0	; () banked
  2460  0045BC  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2461  0045BE  0E00               	movlw	0
  2462  0045C0  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2463  0045C2  0E00               	movlw	0
  2464  0045C4  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2465  0045C6  0E00               	movlw	0
  2466  0045C8  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2467  0045CA  0E7B               	movlw	low _data_test
  2468  0045CC  0100               	movlb	0	; () banked
  2469  0045CE  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2470  0045D0  0E01               	movlw	high _data_test
  2471  0045D2  0100               	movlb	0	; () banked
  2472  0045D4  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2473  0045D6  0E08               	movlw	8
  2474  0045D8  0100               	movlb	0	; () banked
  2475  0045DA  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2476  0045DC  0EBC               	movlw	188
  2477  0045DE  0100               	movlb	0	; () banked
  2478  0045E0  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2479  0045E2  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2480                           
  2481                           ;parcheggio.c: 298: can_send();
  2482  0045E6  EC76  F029         	call	_can_send	;wreg free
  2483  0045EA                     l749:
  2484  0045EA  B244               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2485  0045EC  D7FE               	goto	l749
  2486                           
  2487                           ;parcheggio.c: 300: set_speed = 1000;
  2488  0045EE  0E03               	movlw	3
  2489  0045F0  0100               	movlb	0	; () banked
  2490  0045F2  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2491  0045F4  0EE8               	movlw	232
  2492  0045F6  6FE5               	movwf	_set_speed& (0+255),b
  2493                           
  2494                           ;parcheggio.c: 301: data_steering[0] = 0;
  2495  0045F8  0E00               	movlw	0
  2496  0045FA  0101               	movlb	1	; () banked
  2497  0045FC  6F73               	movwf	_data_steering& (0+255),b
  2498                           
  2499                           ; BSR set to: 1
  2500                           ;parcheggio.c: 302: asd = 1;
  2501  0045FE  8244               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2502                           
  2503                           ; BSR set to: 1
  2504                           ;parcheggio.c: 303: data_test[0] = prima_sterzata + 10;
  2505  004600  0E00               	movlw	0
  2506  004602  0100               	movlb	0	; () banked
  2507  004604  6FB1               	movwf	___fladd@a& (0+255),b
  2508  004606  0E00               	movlw	0
  2509  004608  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  2510  00460A  0E20               	movlw	32
  2511  00460C  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  2512  00460E  0E41               	movlw	65
  2513  004610  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  2514  004612  C138  F0AD         	movff	_prima_sterzata,___fladd@b
  2515  004616  C139  F0AE         	movff	_prima_sterzata+1,___fladd@b+1
  2516  00461A  C13A  F0AF         	movff	_prima_sterzata+2,___fladd@b+2
  2517  00461E  C13B  F0B0         	movff	_prima_sterzata+3,___fladd@b+3
  2518  004622  ECE2  F014         	call	___fladd	;wreg free
  2519  004626  C0AD  F0C1         	movff	?___fladd,___fltol@f1
  2520  00462A  C0AE  F0C2         	movff	?___fladd+1,___fltol@f1+1
  2521  00462E  C0AF  F0C3         	movff	?___fladd+2,___fltol@f1+2
  2522  004632  C0B0  F0C4         	movff	?___fladd+3,___fltol@f1+3
  2523  004636  EC2F  F02B         	call	___fltol	;wreg free
  2524  00463A  0100               	movlb	0	; () banked
  2525  00463C  51C1               	movf	?___fltol& (0+255),w,b
  2526  00463E  0101               	movlb	1	; () banked
  2527  004640  6F7B               	movwf	_data_test& (0+255),b
  2528                           
  2529                           ; BSR set to: 1
  2530                           ;parcheggio.c: 304: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2531  004642  0E0D               	movlw	13
  2532  004644  0100               	movlb	0	; () banked
  2533  004646  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2534  004648  0E00               	movlw	0
  2535  00464A  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2536  00464C  0E00               	movlw	0
  2537  00464E  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2538  004650  0E00               	movlw	0
  2539  004652  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2540  004654  0E7B               	movlw	low _data_test
  2541  004656  0100               	movlb	0	; () banked
  2542  004658  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2543  00465A  0E01               	movlw	high _data_test
  2544  00465C  0100               	movlb	0	; () banked
  2545  00465E  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2546  004660  0E08               	movlw	8
  2547  004662  0100               	movlb	0	; () banked
  2548  004664  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2549  004666  0EBC               	movlw	188
  2550  004668  0100               	movlb	0	; () banked
  2551  00466A  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2552  00466C  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2553                           
  2554                           ;parcheggio.c: 305: can_send();
  2555  004670  EC76  F029         	call	_can_send	;wreg free
  2556  004674                     l752:
  2557  004674  B244               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2558  004676  D7FE               	goto	l752
  2559                           
  2560                           ;parcheggio.c: 307: data_brake [0] = 0;
  2561  004678  0E00               	movlw	0
  2562  00467A  0101               	movlb	1	; () banked
  2563  00467C  6F5B               	movwf	_data_brake& (0+255),b
  2564                           
  2565                           ;parcheggio.c: 308: data_brake [1] = 1;
  2566  00467E  0E01               	movlw	1
  2567  004680  0101               	movlb	1	; () banked
  2568  004682  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2569                           
  2570                           ;parcheggio.c: 309: set_speed = 0;
  2571  004684  0E00               	movlw	0
  2572  004686  0100               	movlb	0	; () banked
  2573  004688  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2574  00468A  0E00               	movlw	0
  2575  00468C  6FE5               	movwf	_set_speed& (0+255),b
  2576                           
  2577                           ;parcheggio.c: 310: data_steering[0] = 90;
  2578  00468E  0E5A               	movlw	90
  2579  004690  0101               	movlb	1	; () banked
  2580  004692  6F73               	movwf	_data_steering& (0+255),b
  2581                           
  2582                           ; BSR set to: 1
  2583                           ;parcheggio.c: 311: can_send();
  2584  004694  EC76  F029         	call	_can_send	;wreg free
  2585                           
  2586                           ;parcheggio.c: 312: delay_s(1);
  2587  004698  0E01               	movlw	1
  2588  00469A  EC8E  F02E         	call	_delay_s
  2589                           
  2590                           ;parcheggio.c: 313: if (sensor_distance [2] > 20) {
  2591  00469E  5029               	movf	_sensor_distance+5,w,c	;volatile
  2592  0046A0  E104               	bnz	u8970
  2593  0046A2  0E15               	movlw	21
  2594  0046A4  5C28               	subwf	_sensor_distance+4,w,c	;volatile
  2595  0046A6  A0D8               	btfss	status,0,c
  2596  0046A8  D017               	goto	l7123
  2597  0046AA                     u8970:
  2598                           
  2599                           ;parcheggio.c: 314: data_brake [0] = 3;
  2600  0046AA  0E03               	movlw	3
  2601  0046AC  0101               	movlb	1	; () banked
  2602  0046AE  6F5B               	movwf	_data_brake& (0+255),b
  2603                           
  2604                           ;parcheggio.c: 315: data_brake [1] = 1;
  2605  0046B0  0E01               	movlw	1
  2606  0046B2  0101               	movlb	1	; () banked
  2607  0046B4  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2608                           
  2609                           ;parcheggio.c: 316: set_speed = 1000;
  2610  0046B6  0E03               	movlw	3
  2611  0046B8  0100               	movlb	0	; () banked
  2612  0046BA  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2613  0046BC  0EE8               	movlw	232
  2614  0046BE  6FE5               	movwf	_set_speed& (0+255),b
  2615                           
  2616                           ;parcheggio.c: 317: data_steering[0] = 90;
  2617  0046C0  0E5A               	movlw	90
  2618  0046C2  0101               	movlb	1	; () banked
  2619  0046C4  6F73               	movwf	_data_steering& (0+255),b
  2620                           
  2621                           ; BSR set to: 1
  2622                           ;parcheggio.c: 318: dir = 1;
  2623  0046C6  8444               	bsf	_dir/(0+8),_dir& (0+7),c
  2624                           
  2625                           ; BSR set to: 1
  2626                           ;parcheggio.c: 319: can_send();
  2627  0046C8  EC76  F029         	call	_can_send	;wreg free
  2628  0046CC                     l7121:
  2629  0046CC  5029               	movf	_sensor_distance+5,w,c	;volatile
  2630  0046CE  E1FE               	bnz	l7121
  2631  0046D0  0E15               	movlw	21
  2632  0046D2  5C28               	subwf	_sensor_distance+4,w,c	;volatile
  2633  0046D4  B0D8               	btfsc	status,0,c
  2634  0046D6  D7FA               	goto	l7121
  2635  0046D8                     l7123:
  2636                           
  2637                           ;parcheggio.c: 321: }
  2638                           ;parcheggio.c: 322: data_brake [0] = 0;
  2639  0046D8  0E00               	movlw	0
  2640  0046DA  0101               	movlb	1	; () banked
  2641  0046DC  6F5B               	movwf	_data_brake& (0+255),b
  2642                           
  2643                           ;parcheggio.c: 323: data_brake [1] = 1;
  2644  0046DE  0E01               	movlw	1
  2645  0046E0  0101               	movlb	1	; () banked
  2646  0046E2  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2647                           
  2648                           ;parcheggio.c: 324: set_speed = 0;
  2649  0046E4  0E00               	movlw	0
  2650  0046E6  0100               	movlb	0	; () banked
  2651  0046E8  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2652  0046EA  0E00               	movlw	0
  2653  0046EC  6FE5               	movwf	_set_speed& (0+255),b
  2654                           
  2655                           ;parcheggio.c: 325: data_steering[0] = 90;
  2656  0046EE  0E5A               	movlw	90
  2657  0046F0  0101               	movlb	1	; () banked
  2658  0046F2  6F73               	movwf	_data_steering& (0+255),b
  2659                           
  2660                           ; BSR set to: 1
  2661                           ;parcheggio.c: 326: dir = 0;
  2662  0046F4  9444               	bcf	_dir/(0+8),_dir& (0+7),c
  2663                           
  2664                           ; BSR set to: 1
  2665                           ;parcheggio.c: 328: can_send();
  2666  0046F6  EC76  F029         	call	_can_send	;wreg free
  2667                           
  2668                           ;parcheggio.c: 329: activation = 0;
  2669  0046FA  9044               	bcf	_activation/(0+8),_activation& (0+7),c	;volatile
  2670                           
  2671                           ;parcheggio.c: 330: PORTBbits.RB5 = 0;
  2672  0046FC  9A81               	bcf	3969,5,c	;volatile
  2673                           
  2674                           ;parcheggio.c: 331: start_operation = 0;
  2675  0046FE  9445               	bcf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2676                           
  2677                           ;parcheggio.c: 332: data[0] = 3;
  2678  004700  0E03               	movlw	3
  2679  004702  0101               	movlb	1	; () banked
  2680  004704  6F53               	movwf	_data& (0+255),b
  2681                           
  2682                           ;parcheggio.c: 333: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  2683  004706  0E0B               	movlw	11
  2684  004708  0100               	movlb	0	; () banked
  2685  00470A  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2686  00470C  0E00               	movlw	0
  2687  00470E  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2688  004710  0E00               	movlw	0
  2689  004712  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2690  004714  0E00               	movlw	0
  2691  004716  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2692  004718  0E53               	movlw	low _data
  2693  00471A  0100               	movlb	0	; () banked
  2694  00471C  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2695  00471E  0E01               	movlw	high _data
  2696  004720  0100               	movlb	0	; () banked
  2697  004722  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2698  004724  0E01               	movlw	1
  2699  004726  0100               	movlb	0	; () banked
  2700  004728  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2701  00472A  0EBC               	movlw	188
  2702  00472C  0100               	movlb	0	; () banked
  2703  00472E  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2704  004730  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2705  004734                     l7137:
  2706  004734  AA81               	btfss	3969,5,c	;volatile
  2707  004736  0012               	return	
  2708  004738  A044               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  2709  00473A  0012               	return	
  2710  00473C  A445               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2711  00473E  0012               	return	
  2712  004740  D692               	goto	l7037
  2713  004742                     __end_of_park_routine:
  2714                           	opt stack 0
  2715                           tblptru	equ	0xFF8
  2716                           tblptrh	equ	0xFF7
  2717                           tblptrl	equ	0xFF6
  2718                           tablat	equ	0xFF5
  2719                           postinc0	equ	0xFEE
  2720                           wreg	equ	0xFE8
  2721                           postdec1	equ	0xFE5
  2722                           fsr1l	equ	0xFE1
  2723                           postinc2	equ	0xFDE
  2724                           postdec2	equ	0xFDD
  2725                           status	equ	0xFD8
  2726                           
  2727 ;; *************** function _matematica *****************
  2728 ;; Defined at:
  2729 ;;		line 399 in file "parcheggio.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;		None
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;		None
  2734 ;; Return value:  Size  Location     Type
  2735 ;;		None               void
  2736 ;; Registers used:
  2737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2744 ;;      Locals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0
  2745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2746 ;;      Totals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0
  2747 ;;Total ram usage:       32 bytes
  2748 ;; Hardware stack levels used:    1
  2749 ;; Hardware stack levels required when called:    8
  2750 ;; This function calls:
  2751 ;;		___fladd
  2752 ;;		___fldiv
  2753 ;;		___flmul
  2754 ;;		___flneg
  2755 ;;		_asin
  2756 ;;		_cos
  2757 ;; This function is called by:
  2758 ;;		_park_routine
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           	psect	text5
  2763  0024F0                     __ptext5:
  2764                           	opt stack 0
  2765  0024F0                     _matematica:
  2766                           	opt stack 21
  2767                           
  2768                           ;parcheggio.c: 401: alfa = asin(((2 * raggio)-(larghezza / 2) - bordo) / (2 * raggio));
  2769                           
  2770                           ;incstack = 0
  2771  0024F0  C124  F0A9         	movff	_bordo,___flneg@f1	;volatile
  2772  0024F4  C125  F0AA         	movff	_bordo+1,___flneg@f1+1	;volatile
  2773  0024F8  C126  F0AB         	movff	_bordo+2,___flneg@f1+2	;volatile
  2774  0024FC  C127  F0AC         	movff	_bordo+3,___flneg@f1+3	;volatile
  2775  002500  EC41  F02E         	call	___flneg	;wreg free
  2776  002504  C0A9  F0B1         	movff	?___flneg,___fladd@a
  2777  002508  C0AA  F0B2         	movff	?___flneg+1,___fladd@a+1
  2778  00250C  C0AB  F0B3         	movff	?___flneg+2,___fladd@a+2
  2779  002510  C0AC  F0B4         	movff	?___flneg+3,___fladd@a+3
  2780  002514  0E00               	movlw	0
  2781  002516  0100               	movlb	0	; () banked
  2782  002518  6F94               	movwf	___flmul@a& (0+255),b
  2783  00251A  0E00               	movlw	0
  2784  00251C  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2785  00251E  0E00               	movlw	0
  2786  002520  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2787  002522  0E40               	movlw	64
  2788  002524  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2789  002526  C1DC  F090         	movff	_raggio,___flmul@b
  2790  00252A  C1DD  F091         	movff	_raggio+1,___flmul@b+1
  2791  00252E  C1DE  F092         	movff	_raggio+2,___flmul@b+2
  2792  002532  C1DF  F093         	movff	_raggio+3,___flmul@b+3
  2793  002536  EC36  F017         	call	___flmul	;wreg free
  2794  00253A  C090  F0AD         	movff	?___flmul,___fladd@b
  2795  00253E  C091  F0AE         	movff	?___flmul+1,___fladd@b+1
  2796  002542  C092  F0AF         	movff	?___flmul+2,___fladd@b+2
  2797  002546  C093  F0B0         	movff	?___flmul+3,___fladd@b+3
  2798  00254A  ECE2  F014         	call	___fladd	;wreg free
  2799  00254E  C0AD  F1B8         	movff	?___fladd,_matematica$3738
  2800  002552  C0AE  F1B9         	movff	?___fladd+1,_matematica$3738+1
  2801  002556  C0AF  F1BA         	movff	?___fladd+2,_matematica$3738+2
  2802  00255A  C0B0  F1BB         	movff	?___fladd+3,_matematica$3738+3
  2803                           
  2804                           ;parcheggio.c: 401: alfa = asin(((2 * raggio)-(larghezza / 2) - bordo) / (2 * raggio));
  2805  00255E  0E00               	movlw	0
  2806  002560  0100               	movlb	0	; () banked
  2807  002562  6F7B               	movwf	___fldiv@a& (0+255),b
  2808  002564  0E00               	movlw	0
  2809  002566  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  2810  002568  0E00               	movlw	0
  2811  00256A  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  2812  00256C  0E40               	movlw	64
  2813  00256E  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  2814  002570  C1D8  F077         	movff	_larghezza,___fldiv@b
  2815  002574  C1D9  F078         	movff	_larghezza+1,___fldiv@b+1
  2816  002578  C1DA  F079         	movff	_larghezza+2,___fldiv@b+2
  2817  00257C  C1DB  F07A         	movff	_larghezza+3,___fldiv@b+3
  2818  002580  EC6E  F01B         	call	___fldiv	;wreg free
  2819  002584  C077  F0A9         	movff	?___fldiv,___flneg@f1
  2820  002588  C078  F0AA         	movff	?___fldiv+1,___flneg@f1+1
  2821  00258C  C079  F0AB         	movff	?___fldiv+2,___flneg@f1+2
  2822  002590  C07A  F0AC         	movff	?___fldiv+3,___flneg@f1+3
  2823  002594  EC41  F02E         	call	___flneg	;wreg free
  2824  002598  C0A9  F0B1         	movff	?___flneg,___fladd@a
  2825  00259C  C0AA  F0B2         	movff	?___flneg+1,___fladd@a+1
  2826  0025A0  C0AB  F0B3         	movff	?___flneg+2,___fladd@a+2
  2827  0025A4  C0AC  F0B4         	movff	?___flneg+3,___fladd@a+3
  2828  0025A8  C1B8  F0AD         	movff	_matematica$3738,___fladd@b
  2829  0025AC  C1B9  F0AE         	movff	_matematica$3738+1,___fladd@b+1
  2830  0025B0  C1BA  F0AF         	movff	_matematica$3738+2,___fladd@b+2
  2831  0025B4  C1BB  F0B0         	movff	_matematica$3738+3,___fladd@b+3
  2832  0025B8  ECE2  F014         	call	___fladd	;wreg free
  2833  0025BC  C0AD  F1BC         	movff	?___fladd,_matematica$3739
  2834  0025C0  C0AE  F1BD         	movff	?___fladd+1,_matematica$3739+1
  2835  0025C4  C0AF  F1BE         	movff	?___fladd+2,_matematica$3739+2
  2836  0025C8  C0B0  F1BF         	movff	?___fladd+3,_matematica$3739+3
  2837                           
  2838                           ;parcheggio.c: 401: alfa = asin(((2 * raggio)-(larghezza / 2) - bordo) / (2 * raggio));
  2839  0025CC  C1BC  F077         	movff	_matematica$3739,___fldiv@b
  2840  0025D0  C1BD  F078         	movff	_matematica$3739+1,___fldiv@b+1
  2841  0025D4  C1BE  F079         	movff	_matematica$3739+2,___fldiv@b+2
  2842  0025D8  C1BF  F07A         	movff	_matematica$3739+3,___fldiv@b+3
  2843  0025DC  0E00               	movlw	0
  2844  0025DE  0100               	movlb	0	; () banked
  2845  0025E0  6F94               	movwf	___flmul@a& (0+255),b
  2846  0025E2  0E00               	movlw	0
  2847  0025E4  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2848  0025E6  0E00               	movlw	0
  2849  0025E8  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2850  0025EA  0E40               	movlw	64
  2851  0025EC  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2852  0025EE  C1DC  F090         	movff	_raggio,___flmul@b
  2853  0025F2  C1DD  F091         	movff	_raggio+1,___flmul@b+1
  2854  0025F6  C1DE  F092         	movff	_raggio+2,___flmul@b+2
  2855  0025FA  C1DF  F093         	movff	_raggio+3,___flmul@b+3
  2856  0025FE  EC36  F017         	call	___flmul	;wreg free
  2857  002602  C090  F07B         	movff	?___flmul,___fldiv@a
  2858  002606  C091  F07C         	movff	?___flmul+1,___fldiv@a+1
  2859  00260A  C092  F07D         	movff	?___flmul+2,___fldiv@a+2
  2860  00260E  C093  F07E         	movff	?___flmul+3,___fldiv@a+3
  2861  002612  EC6E  F01B         	call	___fldiv	;wreg free
  2862  002616  C077  F1C0         	movff	?___fldiv,_matematica$3740
  2863  00261A  C078  F1C1         	movff	?___fldiv+1,_matematica$3740+1
  2864  00261E  C079  F1C2         	movff	?___fldiv+2,_matematica$3740+2
  2865  002622  C07A  F1C3         	movff	?___fldiv+3,_matematica$3740+3
  2866                           
  2867                           ;parcheggio.c: 401: alfa = asin(((2 * raggio)-(larghezza / 2) - bordo) / (2 * raggio));
  2868  002626  C1C0  F198         	movff	_matematica$3740,asin@x
  2869  00262A  C1C1  F199         	movff	_matematica$3740+1,asin@x+1
  2870  00262E  C1C2  F19A         	movff	_matematica$3740+2,asin@x+2
  2871  002632  C1C3  F19B         	movff	_matematica$3740+3,asin@x+3
  2872  002636  ECA9  F020         	call	_asin	;wreg free
  2873  00263A  C198  F11C         	movff	?_asin,_alfa
  2874  00263E  C199  F11D         	movff	?_asin+1,_alfa+1
  2875  002642  C19A  F11E         	movff	?_asin+2,_alfa+2
  2876  002646  C19B  F11F         	movff	?_asin+3,_alfa+3
  2877                           
  2878                           ;parcheggio.c: 402: alfa = alfa / 3.14159265358979323846 * 180;
  2879  00264A  0EDB               	movlw	219
  2880  00264C  0100               	movlb	0	; () banked
  2881  00264E  6F7B               	movwf	___fldiv@a& (0+255),b
  2882  002650  0E0F               	movlw	15
  2883  002652  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  2884  002654  0E49               	movlw	73
  2885  002656  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  2886  002658  0E40               	movlw	64
  2887  00265A  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  2888  00265C  C11C  F077         	movff	_alfa,___fldiv@b
  2889  002660  C11D  F078         	movff	_alfa+1,___fldiv@b+1
  2890  002664  C11E  F079         	movff	_alfa+2,___fldiv@b+2
  2891  002668  C11F  F07A         	movff	_alfa+3,___fldiv@b+3
  2892  00266C  EC6E  F01B         	call	___fldiv	;wreg free
  2893  002670  C077  F090         	movff	?___fldiv,___flmul@b
  2894  002674  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  2895  002678  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  2896  00267C  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  2897  002680  0E00               	movlw	0
  2898  002682  0100               	movlb	0	; () banked
  2899  002684  6F94               	movwf	___flmul@a& (0+255),b
  2900  002686  0E00               	movlw	0
  2901  002688  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2902  00268A  0E34               	movlw	52
  2903  00268C  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2904  00268E  0E43               	movlw	67
  2905  002690  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2906  002692  EC36  F017         	call	___flmul	;wreg free
  2907  002696  C090  F11C         	movff	?___flmul,_alfa
  2908  00269A  C091  F11D         	movff	?___flmul+1,_alfa+1
  2909  00269E  C092  F11E         	movff	?___flmul+2,_alfa+2
  2910  0026A2  C093  F11F         	movff	?___flmul+3,_alfa+3
  2911                           
  2912                           ;parcheggio.c: 403: beta = 90 - alfa;
  2913  0026A6  C11C  F0A9         	movff	_alfa,___flneg@f1
  2914  0026AA  C11D  F0AA         	movff	_alfa+1,___flneg@f1+1
  2915  0026AE  C11E  F0AB         	movff	_alfa+2,___flneg@f1+2
  2916  0026B2  C11F  F0AC         	movff	_alfa+3,___flneg@f1+3
  2917  0026B6  EC41  F02E         	call	___flneg	;wreg free
  2918  0026BA  C0A9  F0AD         	movff	?___flneg,___fladd@b
  2919  0026BE  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  2920  0026C2  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  2921  0026C6  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  2922  0026CA  0E00               	movlw	0
  2923  0026CC  0100               	movlb	0	; () banked
  2924  0026CE  6FB1               	movwf	___fladd@a& (0+255),b
  2925  0026D0  0E00               	movlw	0
  2926  0026D2  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  2927  0026D4  0EB4               	movlw	180
  2928  0026D6  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  2929  0026D8  0E42               	movlw	66
  2930  0026DA  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  2931  0026DC  ECE2  F014         	call	___fladd	;wreg free
  2932  0026E0  C0AD  F120         	movff	?___fladd,_beta
  2933  0026E4  C0AE  F121         	movff	?___fladd+1,_beta+1
  2934  0026E8  C0AF  F122         	movff	?___fladd+2,_beta+2
  2935  0026EC  C0B0  F123         	movff	?___fladd+3,_beta+3
  2936                           
  2937                           ;parcheggio.c: 404: n = 2 * raggio * cos(alfa);
  2938  0026F0  C11C  F1B0         	movff	_alfa,cos@f
  2939  0026F4  C11D  F1B1         	movff	_alfa+1,cos@f+1
  2940  0026F8  C11E  F1B2         	movff	_alfa+2,cos@f+2
  2941  0026FC  C11F  F1B3         	movff	_alfa+3,cos@f+3
  2942  002700  ECB5  F02B         	call	_cos	;wreg free
  2943  002704  C1B0  F1C4         	movff	?_cos,_matematica$3741
  2944  002708  C1B1  F1C5         	movff	?_cos+1,_matematica$3741+1
  2945  00270C  C1B2  F1C6         	movff	?_cos+2,_matematica$3741+2
  2946  002710  C1B3  F1C7         	movff	?_cos+3,_matematica$3741+3
  2947                           
  2948                           ;parcheggio.c: 404: n = 2 * raggio * cos(alfa);
  2949  002714  C1DC  F094         	movff	_raggio,___flmul@a
  2950  002718  C1DD  F095         	movff	_raggio+1,___flmul@a+1
  2951  00271C  C1DE  F096         	movff	_raggio+2,___flmul@a+2
  2952  002720  C1DF  F097         	movff	_raggio+3,___flmul@a+3
  2953  002724  C1C4  F090         	movff	_matematica$3741,___flmul@b
  2954  002728  C1C5  F091         	movff	_matematica$3741+1,___flmul@b+1
  2955  00272C  C1C6  F092         	movff	_matematica$3741+2,___flmul@b+2
  2956  002730  C1C7  F093         	movff	_matematica$3741+3,___flmul@b+3
  2957  002734  EC36  F017         	call	___flmul	;wreg free
  2958  002738  C090  F1C8         	movff	?___flmul,_matematica$3742
  2959  00273C  C091  F1C9         	movff	?___flmul+1,_matematica$3742+1
  2960  002740  C092  F1CA         	movff	?___flmul+2,_matematica$3742+2
  2961  002744  C093  F1CB         	movff	?___flmul+3,_matematica$3742+3
  2962                           
  2963                           ;parcheggio.c: 404: n = 2 * raggio * cos(alfa);
  2964  002748  C1C8  F090         	movff	_matematica$3742,___flmul@b
  2965  00274C  C1C9  F091         	movff	_matematica$3742+1,___flmul@b+1
  2966  002750  C1CA  F092         	movff	_matematica$3742+2,___flmul@b+2
  2967  002754  C1CB  F093         	movff	_matematica$3742+3,___flmul@b+3
  2968  002758  0E00               	movlw	0
  2969  00275A  0100               	movlb	0	; () banked
  2970  00275C  6F94               	movwf	___flmul@a& (0+255),b
  2971  00275E  0E00               	movlw	0
  2972  002760  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2973  002762  0E00               	movlw	0
  2974  002764  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2975  002766  0E40               	movlw	64
  2976  002768  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2977  00276A  EC36  F017         	call	___flmul	;wreg free
  2978  00276E  C090  F130         	movff	?___flmul,_n
  2979  002772  C091  F131         	movff	?___flmul+1,_n+1
  2980  002776  C092  F132         	movff	?___flmul+2,_n+2
  2981  00277A  C093  F133         	movff	?___flmul+3,_n+3
  2982                           
  2983                           ;parcheggio.c: 405: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  2984  00277E  C120  F094         	movff	_beta,___flmul@a
  2985  002782  C121  F095         	movff	_beta+1,___flmul@a+1
  2986  002786  C122  F096         	movff	_beta+2,___flmul@a+2
  2987  00278A  C123  F097         	movff	_beta+3,___flmul@a+3
  2988  00278E  C1DC  F090         	movff	_raggio,___flmul@b
  2989  002792  C1DD  F091         	movff	_raggio+1,___flmul@b+1
  2990  002796  C1DE  F092         	movff	_raggio+2,___flmul@b+2
  2991  00279A  C1DF  F093         	movff	_raggio+3,___flmul@b+3
  2992  00279E  EC36  F017         	call	___flmul	;wreg free
  2993  0027A2  C090  F1CC         	movff	?___flmul,_matematica$3743
  2994  0027A6  C091  F1CD         	movff	?___flmul+1,_matematica$3743+1
  2995  0027AA  C092  F1CE         	movff	?___flmul+2,_matematica$3743+2
  2996  0027AE  C093  F1CF         	movff	?___flmul+3,_matematica$3743+3
  2997                           
  2998                           ;parcheggio.c: 405: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  2999  0027B2  0EDB               	movlw	219
  3000  0027B4  0100               	movlb	0	; () banked
  3001  0027B6  6F94               	movwf	___flmul@a& (0+255),b
  3002  0027B8  0E0F               	movlw	15
  3003  0027BA  6F95               	movwf	(___flmul@a+1)& (0+255),b
  3004  0027BC  0EC9               	movlw	201
  3005  0027BE  6F96               	movwf	(___flmul@a+2)& (0+255),b
  3006  0027C0  0E40               	movlw	64
  3007  0027C2  6F97               	movwf	(___flmul@a+3)& (0+255),b
  3008  0027C4  C1CC  F090         	movff	_matematica$3743,___flmul@b
  3009  0027C8  C1CD  F091         	movff	_matematica$3743+1,___flmul@b+1
  3010  0027CC  C1CE  F092         	movff	_matematica$3743+2,___flmul@b+2
  3011  0027D0  C1CF  F093         	movff	_matematica$3743+3,___flmul@b+3
  3012  0027D4  EC36  F017         	call	___flmul	;wreg free
  3013  0027D8  C090  F077         	movff	?___flmul,___fldiv@b
  3014  0027DC  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  3015  0027E0  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  3016  0027E4  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  3017  0027E8  0E00               	movlw	0
  3018  0027EA  0100               	movlb	0	; () banked
  3019  0027EC  6F7B               	movwf	___fldiv@a& (0+255),b
  3020  0027EE  0E00               	movlw	0
  3021  0027F0  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  3022  0027F2  0EB4               	movlw	180
  3023  0027F4  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  3024  0027F6  0E43               	movlw	67
  3025  0027F8  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  3026  0027FA  EC6E  F01B         	call	___fldiv	;wreg free
  3027  0027FE  C077  F138         	movff	?___fldiv,_prima_sterzata
  3028  002802  C078  F139         	movff	?___fldiv+1,_prima_sterzata+1
  3029  002806  C079  F13A         	movff	?___fldiv+2,_prima_sterzata+2
  3030  00280A  C07A  F13B         	movff	?___fldiv+3,_prima_sterzata+3
  3031                           
  3032                           ;parcheggio.c: 406: kkk = raggio + (2 * larghezza / 3);
  3033  00280E  0E00               	movlw	0
  3034  002810  0100               	movlb	0	; () banked
  3035  002812  6F7B               	movwf	___fldiv@a& (0+255),b
  3036  002814  0E00               	movlw	0
  3037  002816  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  3038  002818  0E40               	movlw	64
  3039  00281A  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  3040  00281C  0E40               	movlw	64
  3041  00281E  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  3042  002820  0E00               	movlw	0
  3043  002822  0100               	movlb	0	; () banked
  3044  002824  6F94               	movwf	___flmul@a& (0+255),b
  3045  002826  0E00               	movlw	0
  3046  002828  6F95               	movwf	(___flmul@a+1)& (0+255),b
  3047  00282A  0E00               	movlw	0
  3048  00282C  6F96               	movwf	(___flmul@a+2)& (0+255),b
  3049  00282E  0E40               	movlw	64
  3050  002830  6F97               	movwf	(___flmul@a+3)& (0+255),b
  3051  002832  C1D8  F090         	movff	_larghezza,___flmul@b
  3052  002836  C1D9  F091         	movff	_larghezza+1,___flmul@b+1
  3053  00283A  C1DA  F092         	movff	_larghezza+2,___flmul@b+2
  3054  00283E  C1DB  F093         	movff	_larghezza+3,___flmul@b+3
  3055  002842  EC36  F017         	call	___flmul	;wreg free
  3056  002846  C090  F077         	movff	?___flmul,___fldiv@b
  3057  00284A  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  3058  00284E  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  3059  002852  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  3060  002856  EC6E  F01B         	call	___fldiv	;wreg free
  3061  00285A  C077  F0AD         	movff	?___fldiv,___fladd@b
  3062  00285E  C078  F0AE         	movff	?___fldiv+1,___fladd@b+1
  3063  002862  C079  F0AF         	movff	?___fldiv+2,___fladd@b+2
  3064  002866  C07A  F0B0         	movff	?___fldiv+3,___fladd@b+3
  3065  00286A  C1DC  F0B1         	movff	_raggio,___fladd@a
  3066  00286E  C1DD  F0B2         	movff	_raggio+1,___fladd@a+1
  3067  002872  C1DE  F0B3         	movff	_raggio+2,___fladd@a+2
  3068  002876  C1DF  F0B4         	movff	_raggio+3,___fladd@a+3
  3069  00287A  ECE2  F014         	call	___fladd	;wreg free
  3070  00287E  C0AD  F12C         	movff	?___fladd,_kkk
  3071  002882  C0AE  F12D         	movff	?___fladd+1,_kkk+1
  3072  002886  C0AF  F12E         	movff	?___fladd+2,_kkk+2
  3073  00288A  C0B0  F12F         	movff	?___fladd+3,_kkk+3
  3074                           
  3075                           ;parcheggio.c: 407: jjj = raggio - (2 * larghezza / 3);
  3076  00288E  0E00               	movlw	0
  3077  002890  0100               	movlb	0	; () banked
  3078  002892  6F7B               	movwf	___fldiv@a& (0+255),b
  3079  002894  0E00               	movlw	0
  3080  002896  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  3081  002898  0E40               	movlw	64
  3082  00289A  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  3083  00289C  0E40               	movlw	64
  3084  00289E  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  3085  0028A0  0E00               	movlw	0
  3086  0028A2  0100               	movlb	0	; () banked
  3087  0028A4  6F94               	movwf	___flmul@a& (0+255),b
  3088  0028A6  0E00               	movlw	0
  3089  0028A8  6F95               	movwf	(___flmul@a+1)& (0+255),b
  3090  0028AA  0E00               	movlw	0
  3091  0028AC  6F96               	movwf	(___flmul@a+2)& (0+255),b
  3092  0028AE  0E40               	movlw	64
  3093  0028B0  6F97               	movwf	(___flmul@a+3)& (0+255),b
  3094  0028B2  C1D8  F090         	movff	_larghezza,___flmul@b
  3095  0028B6  C1D9  F091         	movff	_larghezza+1,___flmul@b+1
  3096  0028BA  C1DA  F092         	movff	_larghezza+2,___flmul@b+2
  3097  0028BE  C1DB  F093         	movff	_larghezza+3,___flmul@b+3
  3098  0028C2  EC36  F017         	call	___flmul	;wreg free
  3099  0028C6  C090  F077         	movff	?___flmul,___fldiv@b
  3100  0028CA  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  3101  0028CE  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  3102  0028D2  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  3103  0028D6  EC6E  F01B         	call	___fldiv	;wreg free
  3104  0028DA  C077  F0A9         	movff	?___fldiv,___flneg@f1
  3105  0028DE  C078  F0AA         	movff	?___fldiv+1,___flneg@f1+1
  3106  0028E2  C079  F0AB         	movff	?___fldiv+2,___flneg@f1+2
  3107  0028E6  C07A  F0AC         	movff	?___fldiv+3,___flneg@f1+3
  3108  0028EA  EC41  F02E         	call	___flneg	;wreg free
  3109  0028EE  C0A9  F0AD         	movff	?___flneg,___fladd@b
  3110  0028F2  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  3111  0028F6  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  3112  0028FA  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  3113  0028FE  C1DC  F0B1         	movff	_raggio,___fladd@a
  3114  002902  C1DD  F0B2         	movff	_raggio+1,___fladd@a+1
  3115  002906  C1DE  F0B3         	movff	_raggio+2,___fladd@a+2
  3116  00290A  C1DF  F0B4         	movff	_raggio+3,___fladd@a+3
  3117  00290E  ECE2  F014         	call	___fladd	;wreg free
  3118  002912  C0AD  F128         	movff	?___fladd,_jjj
  3119  002916  C0AE  F129         	movff	?___fladd+1,_jjj+1
  3120  00291A  C0AF  F12A         	movff	?___fladd+2,_jjj+2
  3121  00291E  C0B0  F12B         	movff	?___fladd+3,_jjj+3
  3122                           
  3123                           ;parcheggio.c: 408: Pminimo = kkk * cos(asin((jjj / kkk)));
  3124  002922  C12C  F07B         	movff	_kkk,___fldiv@a
  3125  002926  C12D  F07C         	movff	_kkk+1,___fldiv@a+1
  3126  00292A  C12E  F07D         	movff	_kkk+2,___fldiv@a+2
  3127  00292E  C12F  F07E         	movff	_kkk+3,___fldiv@a+3
  3128  002932  C128  F077         	movff	_jjj,___fldiv@b
  3129  002936  C129  F078         	movff	_jjj+1,___fldiv@b+1
  3130  00293A  C12A  F079         	movff	_jjj+2,___fldiv@b+2
  3131  00293E  C12B  F07A         	movff	_jjj+3,___fldiv@b+3
  3132  002942  EC6E  F01B         	call	___fldiv	;wreg free
  3133  002946  C077  F1D0         	movff	?___fldiv,_matematica$3744
  3134  00294A  C078  F1D1         	movff	?___fldiv+1,_matematica$3744+1
  3135  00294E  C079  F1D2         	movff	?___fldiv+2,_matematica$3744+2
  3136  002952  C07A  F1D3         	movff	?___fldiv+3,_matematica$3744+3
  3137                           
  3138                           ;parcheggio.c: 408: Pminimo = kkk * cos(asin((jjj / kkk)));
  3139  002956  C1D0  F198         	movff	_matematica$3744,asin@x
  3140  00295A  C1D1  F199         	movff	_matematica$3744+1,asin@x+1
  3141  00295E  C1D2  F19A         	movff	_matematica$3744+2,asin@x+2
  3142  002962  C1D3  F19B         	movff	_matematica$3744+3,asin@x+3
  3143  002966  ECA9  F020         	call	_asin	;wreg free
  3144  00296A  C198  F1B0         	movff	?_asin,cos@f
  3145  00296E  C199  F1B1         	movff	?_asin+1,cos@f+1
  3146  002972  C19A  F1B2         	movff	?_asin+2,cos@f+2
  3147  002976  C19B  F1B3         	movff	?_asin+3,cos@f+3
  3148  00297A  ECB5  F02B         	call	_cos	;wreg free
  3149  00297E  C1B0  F1D4         	movff	?_cos,_matematica$3745
  3150  002982  C1B1  F1D5         	movff	?_cos+1,_matematica$3745+1
  3151  002986  C1B2  F1D6         	movff	?_cos+2,_matematica$3745+2
  3152  00298A  C1B3  F1D7         	movff	?_cos+3,_matematica$3745+3
  3153                           
  3154                           ;parcheggio.c: 408: Pminimo = kkk * cos(asin((jjj / kkk)));
  3155  00298E  C1D4  F090         	movff	_matematica$3745,___flmul@b
  3156  002992  C1D5  F091         	movff	_matematica$3745+1,___flmul@b+1
  3157  002996  C1D6  F092         	movff	_matematica$3745+2,___flmul@b+2
  3158  00299A  C1D7  F093         	movff	_matematica$3745+3,___flmul@b+3
  3159  00299E  C12C  F094         	movff	_kkk,___flmul@a
  3160  0029A2  C12D  F095         	movff	_kkk+1,___flmul@a+1
  3161  0029A6  C12E  F096         	movff	_kkk+2,___flmul@a+2
  3162  0029AA  C12F  F097         	movff	_kkk+3,___flmul@a+3
  3163  0029AE  EC36  F017         	call	___flmul	;wreg free
  3164  0029B2  C090  F118         	movff	?___flmul,_Pminimo
  3165  0029B6  C091  F119         	movff	?___flmul+1,_Pminimo+1
  3166  0029BA  C092  F11A         	movff	?___flmul+2,_Pminimo+2
  3167  0029BE  C093  F11B         	movff	?___flmul+3,_Pminimo+3
  3168  0029C2  0012               	return		;funcret
  3169  0029C4                     __end_of_matematica:
  3170                           	opt stack 0
  3171                           tblptru	equ	0xFF8
  3172                           tblptrh	equ	0xFF7
  3173                           tblptrl	equ	0xFF6
  3174                           tablat	equ	0xFF5
  3175                           postinc0	equ	0xFEE
  3176                           wreg	equ	0xFE8
  3177                           postdec1	equ	0xFE5
  3178                           fsr1l	equ	0xFE1
  3179                           postinc2	equ	0xFDE
  3180                           postdec2	equ	0xFDD
  3181                           status	equ	0xFD8
  3182                           
  3183 ;; *************** function _cos *****************
  3184 ;; Defined at:
  3185 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\cos.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;  f               4   45[BANK1 ] int 
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;		None
  3190 ;; Return value:  Size  Location     Type
  3191 ;;                  4   45[BANK1 ] int 
  3192 ;; Registers used:
  3193 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/0
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3199 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3200 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3202 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  3203 ;;Total ram usage:        8 bytes
  3204 ;; Hardware stack levels used:    1
  3205 ;; Hardware stack levels required when called:    7
  3206 ;; This function calls:
  3207 ;;		___fladd
  3208 ;;		___flge
  3209 ;;		_sin
  3210 ;; This function is called by:
  3211 ;;		_matematica
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           
  3215                           	psect	text6
  3216  00576A                     __ptext6:
  3217                           	opt stack 0
  3218  00576A                     _cos:
  3219                           	opt stack 21
  3220                           
  3221                           ;incstack = 0
  3222  00576A  0EDB               	movlw	219
  3223  00576C  0100               	movlb	0	; () banked
  3224  00576E  6FB1               	movwf	___flge@ff1& (0+255),b
  3225  005770  0E0F               	movlw	15
  3226  005772  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  3227  005774  0E49               	movlw	73
  3228  005776  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  3229  005778  0E40               	movlw	64
  3230  00577A  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  3231  00577C  C1B0  F0B5         	movff	cos@f,___flge@ff2
  3232  005780  C1B1  F0B6         	movff	cos@f+1,___flge@ff2+1
  3233  005784  C1B2  F0B7         	movff	cos@f+2,___flge@ff2+2
  3234  005788  C1B3  F0B8         	movff	cos@f+3,___flge@ff2+3
  3235  00578C  ECAE  F028         	call	___flge	;wreg free
  3236  005790  0100               	movlb	0	; () banked
  3237  005792  B0D8               	btfsc	status,0,c
  3238  005794  D02E               	goto	l6897
  3239                           
  3240                           ; BSR set to: 0
  3241  005796  C1B0  F0AD         	movff	cos@f,___fladd@b
  3242  00579A  C1B1  F0AE         	movff	cos@f+1,___fladd@b+1
  3243  00579E  C1B2  F0AF         	movff	cos@f+2,___fladd@b+2
  3244  0057A2  C1B3  F0B0         	movff	cos@f+3,___fladd@b+3
  3245  0057A6  0EE4               	movlw	228
  3246  0057A8  0100               	movlb	0	; () banked
  3247  0057AA  6FB1               	movwf	___fladd@a& (0+255),b
  3248  0057AC  0ECB               	movlw	203
  3249  0057AE  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  3250  0057B0  0E96               	movlw	150
  3251  0057B2  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  3252  0057B4  0EC0               	movlw	192
  3253  0057B6  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  3254  0057B8  ECE2  F014         	call	___fladd	;wreg free
  3255  0057BC  C0AD  F1B4         	movff	?___fladd,_cos$3749
  3256  0057C0  C0AE  F1B5         	movff	?___fladd+1,_cos$3749+1
  3257  0057C4  C0AF  F1B6         	movff	?___fladd+2,_cos$3749+2
  3258  0057C8  C0B0  F1B7         	movff	?___fladd+3,_cos$3749+3
  3259  0057CC  C1B4  F197         	movff	_cos$3749,sin@f
  3260  0057D0  C1B5  F198         	movff	_cos$3749+1,sin@f+1
  3261  0057D4  C1B6  F199         	movff	_cos$3749+2,sin@f+2
  3262  0057D8  C1B7  F19A         	movff	_cos$3749+3,sin@f+3
  3263  0057DC  EC1D  F01F         	call	_sin	;wreg free
  3264  0057E0  C197  F1B0         	movff	?_sin,?_cos
  3265  0057E4  C198  F1B1         	movff	?_sin+1,?_cos+1
  3266  0057E8  C199  F1B2         	movff	?_sin+2,?_cos+2
  3267  0057EC  C19A  F1B3         	movff	?_sin+3,?_cos+3
  3268  0057F0  0012               	return	
  3269  0057F2                     l6897:
  3270  0057F2  C1B0  F0AD         	movff	cos@f,___fladd@b
  3271  0057F6  C1B1  F0AE         	movff	cos@f+1,___fladd@b+1
  3272  0057FA  C1B2  F0AF         	movff	cos@f+2,___fladd@b+2
  3273  0057FE  C1B3  F0B0         	movff	cos@f+3,___fladd@b+3
  3274  005802  0EDB               	movlw	219
  3275  005804  0100               	movlb	0	; () banked
  3276  005806  6FB1               	movwf	___fladd@a& (0+255),b
  3277  005808  0E0F               	movlw	15
  3278  00580A  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  3279  00580C  0EC9               	movlw	201
  3280  00580E  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  3281  005810  0E3F               	movlw	63
  3282  005812  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  3283  005814  ECE2  F014         	call	___fladd	;wreg free
  3284  005818  C0AD  F1B4         	movff	?___fladd,_cos$3749
  3285  00581C  C0AE  F1B5         	movff	?___fladd+1,_cos$3749+1
  3286  005820  C0AF  F1B6         	movff	?___fladd+2,_cos$3749+2
  3287  005824  C0B0  F1B7         	movff	?___fladd+3,_cos$3749+3
  3288  005828  C1B4  F197         	movff	_cos$3749,sin@f
  3289  00582C  C1B5  F198         	movff	_cos$3749+1,sin@f+1
  3290  005830  C1B6  F199         	movff	_cos$3749+2,sin@f+2
  3291  005834  C1B7  F19A         	movff	_cos$3749+3,sin@f+3
  3292  005838  EC1D  F01F         	call	_sin	;wreg free
  3293  00583C  C197  F1B0         	movff	?_sin,?_cos
  3294  005840  C198  F1B1         	movff	?_sin+1,?_cos+1
  3295  005844  C199  F1B2         	movff	?_sin+2,?_cos+2
  3296  005848  C19A  F1B3         	movff	?_sin+3,?_cos+3
  3297  00584C  0012               	return	
  3298  00584E                     __end_of_cos:
  3299                           	opt stack 0
  3300                           tblptru	equ	0xFF8
  3301                           tblptrh	equ	0xFF7
  3302                           tblptrl	equ	0xFF6
  3303                           tablat	equ	0xFF5
  3304                           postinc0	equ	0xFEE
  3305                           wreg	equ	0xFE8
  3306                           postdec1	equ	0xFE5
  3307                           fsr1l	equ	0xFE1
  3308                           postinc2	equ	0xFDE
  3309                           postdec2	equ	0xFDD
  3310                           status	equ	0xFD8
  3311                           
  3312 ;; *************** function _sin *****************
  3313 ;; Defined at:
  3314 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sin.c"
  3315 ;; Parameters:    Size  Location     Type
  3316 ;;  f               4   20[BANK1 ] int 
  3317 ;; Auto vars:     Size  Location     Type
  3318 ;;  x2              4   32[BANK1 ] int 
  3319 ;;  y               4   24[BANK1 ] int 
  3320 ;;  sgn             1   36[BANK1 ] unsigned char 
  3321 ;; Return value:  Size  Location     Type
  3322 ;;                  4   20[BANK1 ] unsigned char 
  3323 ;; Registers used:
  3324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3325 ;; Tracked objects:
  3326 ;;		On entry : 0/0
  3327 ;;		On exit  : 0/0
  3328 ;;		Unchanged: 0/0
  3329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3330 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3331 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  3332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3333 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  3334 ;;Total ram usage:       17 bytes
  3335 ;; Hardware stack levels used:    1
  3336 ;; Hardware stack levels required when called:    6
  3337 ;; This function calls:
  3338 ;;		___fladd
  3339 ;;		___fldiv
  3340 ;;		___flge
  3341 ;;		___flmul
  3342 ;;		___flneg
  3343 ;;		___flsub
  3344 ;;		_eval_poly
  3345 ;;		_floor
  3346 ;; This function is called by:
  3347 ;;		_cos
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           	psect	text7
  3352  003E3A                     __ptext7:
  3353                           	opt stack 0
  3354  003E3A                     _sin:
  3355                           	opt stack 21
  3356                           
  3357                           ;incstack = 0
  3358  003E3A  0E00               	movlw	0
  3359  003E3C  0101               	movlb	1	; () banked
  3360  003E3E  6FA7               	movwf	sin@sgn& (0+255),b
  3361                           
  3362                           ; BSR set to: 1
  3363  003E40  0101               	movlb	1	; () banked
  3364  003E42  AF9A               	btfss	(sin@f+3)& (0+255),7,b
  3365  003E44  D015               	goto	l6821
  3366                           
  3367                           ; BSR set to: 1
  3368  003E46  C197  F0A9         	movff	sin@f,___flneg@f1
  3369  003E4A  C198  F0AA         	movff	sin@f+1,___flneg@f1+1
  3370  003E4E  C199  F0AB         	movff	sin@f+2,___flneg@f1+2
  3371  003E52  C19A  F0AC         	movff	sin@f+3,___flneg@f1+3
  3372  003E56  EC41  F02E         	call	___flneg	;wreg free
  3373  003E5A  C0A9  F197         	movff	?___flneg,sin@f
  3374  003E5E  C0AA  F198         	movff	?___flneg+1,sin@f+1
  3375  003E62  C0AB  F199         	movff	?___flneg+2,sin@f+2
  3376  003E66  C0AC  F19A         	movff	?___flneg+3,sin@f+3
  3377  003E6A  0E01               	movlw	1
  3378  003E6C  0101               	movlb	1	; () banked
  3379  003E6E  6FA7               	movwf	sin@sgn& (0+255),b
  3380  003E70                     l6821:
  3381                           
  3382                           ; BSR set to: 1
  3383  003E70  C197  F090         	movff	sin@f,___flmul@b
  3384  003E74  C198  F091         	movff	sin@f+1,___flmul@b+1
  3385  003E78  C199  F092         	movff	sin@f+2,___flmul@b+2
  3386  003E7C  C19A  F093         	movff	sin@f+3,___flmul@b+3
  3387  003E80  0E83               	movlw	131
  3388  003E82  0100               	movlb	0	; () banked
  3389  003E84  6F94               	movwf	___flmul@a& (0+255),b
  3390  003E86  0EF9               	movlw	249
  3391  003E88  6F95               	movwf	(___flmul@a+1)& (0+255),b
  3392  003E8A  0E22               	movlw	34
  3393  003E8C  6F96               	movwf	(___flmul@a+2)& (0+255),b
  3394  003E8E  0E3E               	movlw	62
  3395  003E90  6F97               	movwf	(___flmul@a+3)& (0+255),b
  3396  003E92  EC36  F017         	call	___flmul	;wreg free
  3397  003E96  C090  F197         	movff	?___flmul,sin@f
  3398  003E9A  C091  F198         	movff	?___flmul+1,sin@f+1
  3399  003E9E  C092  F199         	movff	?___flmul+2,sin@f+2
  3400  003EA2  C093  F19A         	movff	?___flmul+3,sin@f+3
  3401  003EA6  C197  F18F         	movff	sin@f,___flsub@b
  3402  003EAA  C198  F190         	movff	sin@f+1,___flsub@b+1
  3403  003EAE  C199  F191         	movff	sin@f+2,___flsub@b+2
  3404  003EB2  C19A  F192         	movff	sin@f+3,___flsub@b+3
  3405  003EB6  C197  F0D3         	movff	sin@f,floor@x
  3406  003EBA  C198  F0D4         	movff	sin@f+1,floor@x+1
  3407  003EBE  C199  F0D5         	movff	sin@f+2,floor@x+2
  3408  003EC2  C19A  F0D6         	movff	sin@f+3,floor@x+3
  3409  003EC6  EC11  F02A         	call	_floor	;wreg free
  3410  003ECA  C0D3  F193         	movff	?_floor,___flsub@a
  3411  003ECE  C0D4  F194         	movff	?_floor+1,___flsub@a+1
  3412  003ED2  C0D5  F195         	movff	?_floor+2,___flsub@a+2
  3413  003ED6  C0D6  F196         	movff	?_floor+3,___flsub@a+3
  3414  003EDA  ECE1  F02D         	call	___flsub	;wreg free
  3415  003EDE  C18F  F197         	movff	?___flsub,sin@f
  3416  003EE2  C190  F198         	movff	?___flsub+1,sin@f+1
  3417  003EE6  C191  F199         	movff	?___flsub+2,sin@f+2
  3418  003EEA  C192  F19A         	movff	?___flsub+3,sin@f+3
  3419  003EEE  C197  F090         	movff	sin@f,___flmul@b
  3420  003EF2  C198  F091         	movff	sin@f+1,___flmul@b+1
  3421  003EF6  C199  F092         	movff	sin@f+2,___flmul@b+2
  3422  003EFA  C19A  F093         	movff	sin@f+3,___flmul@b+3
  3423  003EFE  0E00               	movlw	0
  3424  003F00  0100               	movlb	0	; () banked
  3425  003F02  6F94               	movwf	___flmul@a& (0+255),b
  3426  003F04  0E00               	movlw	0
  3427  003F06  6F95               	movwf	(___flmul@a+1)& (0+255),b
  3428  003F08  0E80               	movlw	128
  3429  003F0A  6F96               	movwf	(___flmul@a+2)& (0+255),b
  3430  003F0C  0E40               	movlw	64
  3431  003F0E  6F97               	movwf	(___flmul@a+3)& (0+255),b
  3432  003F10  EC36  F017         	call	___flmul	;wreg free
  3433  003F14  C090  F197         	movff	?___flmul,sin@f
  3434  003F18  C091  F198         	movff	?___flmul+1,sin@f+1
  3435  003F1C  C092  F199         	movff	?___flmul+2,sin@f+2
  3436  003F20  C093  F19A         	movff	?___flmul+3,sin@f+3
  3437  003F24  0E00               	movlw	0
  3438  003F26  0100               	movlb	0	; () banked
  3439  003F28  6FB1               	movwf	___flge@ff1& (0+255),b
  3440  003F2A  0E00               	movlw	0
  3441  003F2C  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  3442  003F2E  0E00               	movlw	0
  3443  003F30  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  3444  003F32  0E40               	movlw	64
  3445  003F34  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  3446  003F36  C197  F0B5         	movff	sin@f,___flge@ff2
  3447  003F3A  C198  F0B6         	movff	sin@f+1,___flge@ff2+1
  3448  003F3E  C199  F0B7         	movff	sin@f+2,___flge@ff2+2
  3449  003F42  C19A  F0B8         	movff	sin@f+3,___flge@ff2+3
  3450  003F46  ECAE  F028         	call	___flge	;wreg free
  3451  003F4A  0100               	movlb	0	; () banked
  3452  003F4C  B0D8               	btfsc	status,0,c
  3453  003F4E  D025               	goto	l6833
  3454                           
  3455                           ; BSR set to: 0
  3456  003F50  C197  F18F         	movff	sin@f,___flsub@b
  3457  003F54  C198  F190         	movff	sin@f+1,___flsub@b+1
  3458  003F58  C199  F191         	movff	sin@f+2,___flsub@b+2
  3459  003F5C  C19A  F192         	movff	sin@f+3,___flsub@b+3
  3460  003F60  0E00               	movlw	0
  3461  003F62  0101               	movlb	1	; () banked
  3462  003F64  6F93               	movwf	___flsub@a& (0+255),b
  3463  003F66  0E00               	movlw	0
  3464  003F68  6F94               	movwf	(___flsub@a+1)& (0+255),b
  3465  003F6A  0E00               	movlw	0
  3466  003F6C  6F95               	movwf	(___flsub@a+2)& (0+255),b
  3467  003F6E  0E40               	movlw	64
  3468  003F70  6F96               	movwf	(___flsub@a+3)& (0+255),b
  3469  003F72  ECE1  F02D         	call	___flsub	;wreg free
  3470  003F76  C18F  F197         	movff	?___flsub,sin@f
  3471  003F7A  C190  F198         	movff	?___flsub+1,sin@f+1
  3472  003F7E  C191  F199         	movff	?___flsub+2,sin@f+2
  3473  003F82  C192  F19A         	movff	?___flsub+3,sin@f+3
  3474  003F86  0101               	movlb	1	; () banked
  3475  003F88  51A7               	movf	sin@sgn& (0+255),w,b
  3476  003F8A  0101               	movlb	1	; () banked
  3477  003F8C  A4D8               	btfss	status,2,c
  3478  003F8E  D002               	goto	u8620
  3479  003F90  0E01               	movlw	1
  3480  003F92  D001               	goto	u8630
  3481  003F94                     u8620:
  3482  003F94  0E00               	movlw	0
  3483  003F96                     u8630:
  3484  003F96  0101               	movlb	1	; () banked
  3485  003F98  6FA7               	movwf	sin@sgn& (0+255),b
  3486  003F9A                     l6833:
  3487  003F9A  0E00               	movlw	0
  3488  003F9C  0100               	movlb	0	; () banked
  3489  003F9E  6FB1               	movwf	___flge@ff1& (0+255),b
  3490  003FA0  0E00               	movlw	0
  3491  003FA2  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  3492  003FA4  0E80               	movlw	128
  3493  003FA6  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  3494  003FA8  0E3F               	movlw	63
  3495  003FAA  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  3496  003FAC  C197  F0B5         	movff	sin@f,___flge@ff2
  3497  003FB0  C198  F0B6         	movff	sin@f+1,___flge@ff2+1
  3498  003FB4  C199  F0B7         	movff	sin@f+2,___flge@ff2+2
  3499  003FB8  C19A  F0B8         	movff	sin@f+3,___flge@ff2+3
  3500  003FBC  ECAE  F028         	call	___flge	;wreg free
  3501  003FC0  0100               	movlb	0	; () banked
  3502  003FC2  B0D8               	btfsc	status,0,c
  3503  003FC4  D025               	goto	l6837
  3504                           
  3505                           ; BSR set to: 0
  3506  003FC6  C197  F0A9         	movff	sin@f,___flneg@f1
  3507  003FCA  C198  F0AA         	movff	sin@f+1,___flneg@f1+1
  3508  003FCE  C199  F0AB         	movff	sin@f+2,___flneg@f1+2
  3509  003FD2  C19A  F0AC         	movff	sin@f+3,___flneg@f1+3
  3510  003FD6  EC41  F02E         	call	___flneg	;wreg free
  3511  003FDA  C0A9  F0AD         	movff	?___flneg,___fladd@b
  3512  003FDE  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  3513  003FE2  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  3514  003FE6  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  3515  003FEA  0E00               	movlw	0
  3516  003FEC  0100               	movlb	0	; () banked
  3517  003FEE  6FB1               	movwf	___fladd@a& (0+255),b
  3518  003FF0  0E00               	movlw	0
  3519  003FF2  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  3520  003FF4  0E00               	movlw	0
  3521  003FF6  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  3522  003FF8  0E40               	movlw	64
  3523  003FFA  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  3524  003FFC  ECE2  F014         	call	___fladd	;wreg free
  3525  004000  C0AD  F197         	movff	?___fladd,sin@f
  3526  004004  C0AE  F198         	movff	?___fladd+1,sin@f+1
  3527  004008  C0AF  F199         	movff	?___fladd+2,sin@f+2
  3528  00400C  C0B0  F19A         	movff	?___fladd+3,sin@f+3
  3529  004010                     l6837:
  3530  004010  C197  F090         	movff	sin@f,___flmul@b
  3531  004014  C198  F091         	movff	sin@f+1,___flmul@b+1
  3532  004018  C199  F092         	movff	sin@f+2,___flmul@b+2
  3533  00401C  C19A  F093         	movff	sin@f+3,___flmul@b+3
  3534  004020  C197  F094         	movff	sin@f,___flmul@a
  3535  004024  C198  F095         	movff	sin@f+1,___flmul@a+1
  3536  004028  C199  F096         	movff	sin@f+2,___flmul@a+2
  3537  00402C  C19A  F097         	movff	sin@f+3,___flmul@a+3
  3538  004030  EC36  F017         	call	___flmul	;wreg free
  3539  004034  C090  F1A3         	movff	?___flmul,sin@x2
  3540  004038  C091  F1A4         	movff	?___flmul+1,sin@x2+1
  3541  00403C  C092  F1A5         	movff	?___flmul+2,sin@x2+2
  3542  004040  C093  F1A6         	movff	?___flmul+3,sin@x2+3
  3543  004044  C1A3  F0C1         	movff	sin@x2,eval_poly@x
  3544  004048  C1A4  F0C2         	movff	sin@x2+1,eval_poly@x+1
  3545  00404C  C1A5  F0C3         	movff	sin@x2+2,eval_poly@x+2
  3546  004050  C1A6  F0C4         	movff	sin@x2+3,eval_poly@x+3
  3547  004054  0E41               	movlw	low sin@coeff_b
  3548  004056  0100               	movlb	0	; () banked
  3549  004058  6FC5               	movwf	eval_poly@d& (0+255),b
  3550  00405A  0E0D               	movlw	high sin@coeff_b
  3551  00405C  0100               	movlb	0	; () banked
  3552  00405E  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  3553  004060  0E00               	movlw	0
  3554  004062  0100               	movlb	0	; () banked
  3555  004064  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  3556  004066  0E03               	movlw	3
  3557  004068  6FC7               	movwf	eval_poly@n& (0+255),b
  3558  00406A  ECA3  F02A         	call	_eval_poly	;wreg free
  3559  00406E  C0C1  F19B         	movff	?_eval_poly,sin@y
  3560  004072  C0C2  F19C         	movff	?_eval_poly+1,sin@y+1
  3561  004076  C0C3  F19D         	movff	?_eval_poly+2,sin@y+2
  3562  00407A  C0C4  F19E         	movff	?_eval_poly+3,sin@y+3
  3563  00407E  C19B  F07B         	movff	sin@y,___fldiv@a
  3564  004082  C19C  F07C         	movff	sin@y+1,___fldiv@a+1
  3565  004086  C19D  F07D         	movff	sin@y+2,___fldiv@a+2
  3566  00408A  C19E  F07E         	movff	sin@y+3,___fldiv@a+3
  3567  00408E  0E00               	movlw	0
  3568  004090  0100               	movlb	0	; () banked
  3569  004092  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  3570  004094  0E04               	movlw	4
  3571  004096  6FC7               	movwf	eval_poly@n& (0+255),b
  3572  004098  0E2D               	movlw	low sin@coeff_a
  3573  00409A  0100               	movlb	0	; () banked
  3574  00409C  6FC5               	movwf	eval_poly@d& (0+255),b
  3575  00409E  0E0D               	movlw	high sin@coeff_a
  3576  0040A0  0100               	movlb	0	; () banked
  3577  0040A2  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  3578  0040A4  C1A3  F0C1         	movff	sin@x2,eval_poly@x
  3579  0040A8  C1A4  F0C2         	movff	sin@x2+1,eval_poly@x+1
  3580  0040AC  C1A5  F0C3         	movff	sin@x2+2,eval_poly@x+2
  3581  0040B0  C1A6  F0C4         	movff	sin@x2+3,eval_poly@x+3
  3582  0040B4  ECA3  F02A         	call	_eval_poly	;wreg free
  3583  0040B8  C0C1  F077         	movff	?_eval_poly,___fldiv@b
  3584  0040BC  C0C2  F078         	movff	?_eval_poly+1,___fldiv@b+1
  3585  0040C0  C0C3  F079         	movff	?_eval_poly+2,___fldiv@b+2
  3586  0040C4  C0C4  F07A         	movff	?_eval_poly+3,___fldiv@b+3
  3587  0040C8  EC6E  F01B         	call	___fldiv	;wreg free
  3588  0040CC  C077  F19F         	movff	?___fldiv,_sin$3750
  3589  0040D0  C078  F1A0         	movff	?___fldiv+1,_sin$3750+1
  3590  0040D4  C079  F1A1         	movff	?___fldiv+2,_sin$3750+2
  3591  0040D8  C07A  F1A2         	movff	?___fldiv+3,_sin$3750+3
  3592  0040DC  C197  F090         	movff	sin@f,___flmul@b
  3593  0040E0  C198  F091         	movff	sin@f+1,___flmul@b+1
  3594  0040E4  C199  F092         	movff	sin@f+2,___flmul@b+2
  3595  0040E8  C19A  F093         	movff	sin@f+3,___flmul@b+3
  3596  0040EC  C19F  F094         	movff	_sin$3750,___flmul@a
  3597  0040F0  C1A0  F095         	movff	_sin$3750+1,___flmul@a+1
  3598  0040F4  C1A1  F096         	movff	_sin$3750+2,___flmul@a+2
  3599  0040F8  C1A2  F097         	movff	_sin$3750+3,___flmul@a+3
  3600  0040FC  EC36  F017         	call	___flmul	;wreg free
  3601  004100  C090  F197         	movff	?___flmul,sin@f
  3602  004104  C091  F198         	movff	?___flmul+1,sin@f+1
  3603  004108  C092  F199         	movff	?___flmul+2,sin@f+2
  3604  00410C  C093  F19A         	movff	?___flmul+3,sin@f+3
  3605  004110  0101               	movlb	1	; () banked
  3606  004112  51A7               	movf	sin@sgn& (0+255),w,b
  3607  004114  0101               	movlb	1	; () banked
  3608  004116  B4D8               	btfsc	status,2,c
  3609  004118  D013               	goto	l1292
  3610                           
  3611                           ; BSR set to: 1
  3612  00411A  C197  F0A9         	movff	sin@f,___flneg@f1
  3613  00411E  C198  F0AA         	movff	sin@f+1,___flneg@f1+1
  3614  004122  C199  F0AB         	movff	sin@f+2,___flneg@f1+2
  3615  004126  C19A  F0AC         	movff	sin@f+3,___flneg@f1+3
  3616  00412A  EC41  F02E         	call	___flneg	;wreg free
  3617  00412E  C0A9  F197         	movff	?___flneg,?_sin
  3618  004132  C0AA  F198         	movff	?___flneg+1,?_sin+1
  3619  004136  C0AB  F199         	movff	?___flneg+2,?_sin+2
  3620  00413A  C0AC  F19A         	movff	?___flneg+3,?_sin+3
  3621  00413E  0012               	return	
  3622  004140                     l1292:
  3623                           
  3624                           ; BSR set to: 1
  3625  004140  C197  F197         	movff	sin@f,?_sin
  3626  004144  C198  F198         	movff	sin@f+1,?_sin+1
  3627  004148  C199  F199         	movff	sin@f+2,?_sin+2
  3628  00414C  C19A  F19A         	movff	sin@f+3,?_sin+3
  3629  004150  0012               	return		;funcret
  3630  004152                     __end_of_sin:
  3631                           	opt stack 0
  3632                           tblptru	equ	0xFF8
  3633                           tblptrh	equ	0xFF7
  3634                           tblptrl	equ	0xFF6
  3635                           tablat	equ	0xFF5
  3636                           postinc0	equ	0xFEE
  3637                           wreg	equ	0xFE8
  3638                           postdec1	equ	0xFE5
  3639                           fsr1l	equ	0xFE1
  3640                           postinc2	equ	0xFDE
  3641                           postdec2	equ	0xFDD
  3642                           status	equ	0xFD8
  3643                           
  3644 ;; *************** function _floor *****************
  3645 ;; Defined at:
  3646 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\floor.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;  x               4  115[BANK0 ] unsigned char 
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;  i               4    6[BANK1 ] unsigned char 
  3651 ;;  expon           2   10[BANK1 ] int 
  3652 ;; Return value:  Size  Location     Type
  3653 ;;                  4  115[BANK0 ] int 
  3654 ;; Registers used:
  3655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3656 ;; Tracked objects:
  3657 ;;		On entry : 0/0
  3658 ;;		On exit  : 0/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3661 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3662 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3664 ;;      Totals:         0       4       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3665 ;;Total ram usage:       10 bytes
  3666 ;; Hardware stack levels used:    1
  3667 ;; Hardware stack levels required when called:    5
  3668 ;; This function calls:
  3669 ;;		___fladd
  3670 ;;		___flge
  3671 ;;		___fltol
  3672 ;;		___xxtofl
  3673 ;;		_frexp
  3674 ;; This function is called by:
  3675 ;;		_sin
  3676 ;; This function uses a non-reentrant model
  3677 ;;
  3678                           
  3679                           	psect	text8
  3680  005422                     __ptext8:
  3681                           	opt stack 0
  3682  005422                     _floor:
  3683                           	opt stack 21
  3684                           
  3685                           ;incstack = 0
  3686  005422  C0D3  F077         	movff	floor@x,frexp@value
  3687  005426  C0D4  F078         	movff	floor@x+1,frexp@value+1
  3688  00542A  C0D5  F079         	movff	floor@x+2,frexp@value+2
  3689  00542E  C0D6  F07A         	movff	floor@x+3,frexp@value+3
  3690  005432  0E8D               	movlw	low floor@expon
  3691  005434  0100               	movlb	0	; () banked
  3692  005436  6F7B               	movwf	frexp@eptr& (0+255),b
  3693  005438  0E01               	movlw	high floor@expon
  3694  00543A  0100               	movlb	0	; () banked
  3695  00543C  6F7C               	movwf	(frexp@eptr+1)& (0+255),b
  3696  00543E  EC97  F02C         	call	_frexp	;wreg free
  3697  005442  0101               	movlb	1	; () banked
  3698  005444  AF8E               	btfss	(floor@expon+1)& (0+255),7,b
  3699  005446  D017               	goto	l6675
  3700                           
  3701                           ; BSR set to: 1
  3702  005448  0100               	movlb	0	; () banked
  3703  00544A  AFD6               	btfss	(floor@x+3)& (0+255),7,b
  3704  00544C  D00A               	goto	l6671
  3705                           
  3706                           ; BSR set to: 0
  3707  00544E  0E00               	movlw	0
  3708  005450  0100               	movlb	0	; () banked
  3709  005452  6FD3               	movwf	?_floor& (0+255),b
  3710  005454  0E00               	movlw	0
  3711  005456  6FD4               	movwf	(?_floor+1)& (0+255),b
  3712  005458  0E80               	movlw	128
  3713  00545A  6FD5               	movwf	(?_floor+2)& (0+255),b
  3714  00545C  0EBF               	movlw	191
  3715  00545E  6FD6               	movwf	(?_floor+3)& (0+255),b
  3716                           
  3717                           ; BSR set to: 0
  3718  005460  0012               	return	
  3719  005462                     l6671:
  3720                           
  3721                           ; BSR set to: 0
  3722  005462  0E00               	movlw	0
  3723  005464  0100               	movlb	0	; () banked
  3724  005466  6FD3               	movwf	?_floor& (0+255),b
  3725  005468  0E00               	movlw	0
  3726  00546A  6FD4               	movwf	(?_floor+1)& (0+255),b
  3727  00546C  0E00               	movlw	0
  3728  00546E  6FD5               	movwf	(?_floor+2)& (0+255),b
  3729  005470  0E00               	movlw	0
  3730  005472  6FD6               	movwf	(?_floor+3)& (0+255),b
  3731                           
  3732                           ; BSR set to: 0
  3733  005474  0012               	return	
  3734  005476                     l6675:
  3735  005476  0101               	movlb	1	; () banked
  3736  005478  518E               	movf	(floor@expon+1)& (0+255),w,b
  3737  00547A  E105               	bnz	u8410
  3738  00547C  0E1D               	movlw	29
  3739  00547E  0101               	movlb	1	; () banked
  3740  005480  5D8D               	subwf	floor@expon& (0+255),w,b
  3741  005482  A0D8               	btfss	status,0,c
  3742  005484  D009               	goto	l6679
  3743  005486                     u8410:
  3744                           
  3745                           ; BSR set to: 1
  3746  005486  C0D3  F0D3         	movff	floor@x,?_floor
  3747  00548A  C0D4  F0D4         	movff	floor@x+1,?_floor+1
  3748  00548E  C0D5  F0D5         	movff	floor@x+2,?_floor+2
  3749  005492  C0D6  F0D6         	movff	floor@x+3,?_floor+3
  3750  005496  0012               	return	
  3751  005498                     l6679:
  3752                           
  3753                           ; BSR set to: 1
  3754  005498  C0D3  F0C1         	movff	floor@x,___fltol@f1
  3755  00549C  C0D4  F0C2         	movff	floor@x+1,___fltol@f1+1
  3756  0054A0  C0D5  F0C3         	movff	floor@x+2,___fltol@f1+2
  3757  0054A4  C0D6  F0C4         	movff	floor@x+3,___fltol@f1+3
  3758  0054A8  EC2F  F02B         	call	___fltol	;wreg free
  3759  0054AC  C0C1  F0CB         	movff	?___fltol,___xxtofl@val
  3760  0054B0  C0C2  F0CC         	movff	?___fltol+1,___xxtofl@val+1
  3761  0054B4  C0C3  F0CD         	movff	?___fltol+2,___xxtofl@val+2
  3762  0054B8  C0C4  F0CE         	movff	?___fltol+3,___xxtofl@val+3
  3763  0054BC  0E01               	movlw	1
  3764  0054BE  EC10  F026         	call	___xxtofl
  3765  0054C2  C0CB  F189         	movff	?___xxtofl,floor@i
  3766  0054C6  C0CC  F18A         	movff	?___xxtofl+1,floor@i+1
  3767  0054CA  C0CD  F18B         	movff	?___xxtofl+2,floor@i+2
  3768  0054CE  C0CE  F18C         	movff	?___xxtofl+3,floor@i+3
  3769  0054D2  C0D3  F0B1         	movff	floor@x,___flge@ff1
  3770  0054D6  C0D4  F0B2         	movff	floor@x+1,___flge@ff1+1
  3771  0054DA  C0D5  F0B3         	movff	floor@x+2,___flge@ff1+2
  3772  0054DE  C0D6  F0B4         	movff	floor@x+3,___flge@ff1+3
  3773  0054E2  C189  F0B5         	movff	floor@i,___flge@ff2
  3774  0054E6  C18A  F0B6         	movff	floor@i+1,___flge@ff2+1
  3775  0054EA  C18B  F0B7         	movff	floor@i+2,___flge@ff2+2
  3776  0054EE  C18C  F0B8         	movff	floor@i+3,___flge@ff2+3
  3777  0054F2  ECAE  F028         	call	___flge	;wreg free
  3778  0054F6  0100               	movlb	0	; () banked
  3779  0054F8  B0D8               	btfsc	status,0,c
  3780  0054FA  D01C               	goto	l1461
  3781                           
  3782                           ; BSR set to: 0
  3783  0054FC  C189  F0AD         	movff	floor@i,___fladd@b
  3784  005500  C18A  F0AE         	movff	floor@i+1,___fladd@b+1
  3785  005504  C18B  F0AF         	movff	floor@i+2,___fladd@b+2
  3786  005508  C18C  F0B0         	movff	floor@i+3,___fladd@b+3
  3787  00550C  0E00               	movlw	0
  3788  00550E  0100               	movlb	0	; () banked
  3789  005510  6FB1               	movwf	___fladd@a& (0+255),b
  3790  005512  0E00               	movlw	0
  3791  005514  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  3792  005516  0E80               	movlw	128
  3793  005518  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  3794  00551A  0EBF               	movlw	191
  3795  00551C  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  3796  00551E  ECE2  F014         	call	___fladd	;wreg free
  3797  005522  C0AD  F0D3         	movff	?___fladd,?_floor
  3798  005526  C0AE  F0D4         	movff	?___fladd+1,?_floor+1
  3799  00552A  C0AF  F0D5         	movff	?___fladd+2,?_floor+2
  3800  00552E  C0B0  F0D6         	movff	?___fladd+3,?_floor+3
  3801  005532  0012               	return	
  3802  005534                     l1461:
  3803                           
  3804                           ; BSR set to: 0
  3805  005534  C189  F0D3         	movff	floor@i,?_floor
  3806  005538  C18A  F0D4         	movff	floor@i+1,?_floor+1
  3807  00553C  C18B  F0D5         	movff	floor@i+2,?_floor+2
  3808  005540  C18C  F0D6         	movff	floor@i+3,?_floor+3
  3809  005544  0012               	return		;funcret
  3810  005546                     __end_of_floor:
  3811                           	opt stack 0
  3812                           tblptru	equ	0xFF8
  3813                           tblptrh	equ	0xFF7
  3814                           tblptrl	equ	0xFF6
  3815                           tablat	equ	0xFF5
  3816                           postinc0	equ	0xFEE
  3817                           wreg	equ	0xFE8
  3818                           postdec1	equ	0xFE5
  3819                           fsr1l	equ	0xFE1
  3820                           postinc2	equ	0xFDE
  3821                           postdec2	equ	0xFDD
  3822                           status	equ	0xFD8
  3823                           
  3824 ;; *************** function _frexp *****************
  3825 ;; Defined at:
  3826 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\frexp.c"
  3827 ;; Parameters:    Size  Location     Type
  3828 ;;  value           4   23[BANK0 ] int 
  3829 ;;  eptr            2   27[BANK0 ] PTR int 
  3830 ;;		 -> floor@expon(2), 
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;		None
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  4   23[BANK0 ] PTR int 
  3835 ;; Registers used:
  3836 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3842 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3844 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3845 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3846 ;;Total ram usage:        8 bytes
  3847 ;; Hardware stack levels used:    1
  3848 ;; Hardware stack levels required when called:    4
  3849 ;; This function calls:
  3850 ;;		Nothing
  3851 ;; This function is called by:
  3852 ;;		_floor
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           
  3856                           	psect	text9
  3857  00592E                     __ptext9:
  3858                           	opt stack 0
  3859  00592E                     _frexp:
  3860                           	opt stack 21
  3861                           
  3862                           ;incstack = 0
  3863  00592E  0100               	movlb	0	; () banked
  3864  005930  5177               	movf	frexp@value& (0+255),w,b
  3865  005932  0100               	movlb	0	; () banked
  3866  005934  1178               	iorwf	(frexp@value+1)& (0+255),w,b
  3867  005936  0100               	movlb	0	; () banked
  3868  005938  1179               	iorwf	(frexp@value+2)& (0+255),w,b
  3869  00593A  0100               	movlb	0	; () banked
  3870  00593C  117A               	iorwf	(frexp@value+3)& (0+255),w,b
  3871  00593E  A4D8               	btfss	status,2,c
  3872  005940  D009               	goto	l6497
  3873                           
  3874                           ; BSR set to: 0
  3875  005942  C07B  FFD9         	movff	frexp@eptr,fsr2l
  3876  005946  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  3877  00594A  0E00               	movlw	0
  3878  00594C  6EDE               	movwf	postinc2,c
  3879  00594E  0E00               	movlw	0
  3880  005950  6EDD               	movwf	postdec2,c
  3881                           
  3882                           ; BSR set to: 0
  3883                           ;	Return value of _frexp is never used
  3884  005952  0012               	return	
  3885  005954                     l6497:
  3886                           
  3887                           ; BSR set to: 0
  3888  005954  0100               	movlb	0	; () banked
  3889  005956  517A               	movf	(frexp@value+3)& (0+255),w,b
  3890  005958  0B7F               	andlw	127
  3891  00595A  0100               	movlb	0	; () banked
  3892  00595C  6F7D               	movwf	??_frexp& (0+255),b
  3893  00595E  6B7E               	clrf	(??_frexp+1)& (0+255),b
  3894  005960  90D8               	bcf	status,0,c
  3895  005962  0100               	movlb	0	; () banked
  3896  005964  377D               	rlcf	??_frexp& (0+255),f,b
  3897  005966  377E               	rlcf	(??_frexp+1)& (0+255),f,b
  3898  005968  C07B  FFD9         	movff	frexp@eptr,fsr2l
  3899  00596C  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  3900  005970  C07D  FFDE         	movff	??_frexp,postinc2
  3901  005974  C07E  FFDD         	movff	??_frexp+1,postdec2
  3902  005978  0100               	movlb	0	; () banked
  3903  00597A  AF79               	btfss	(frexp@value+2)& (0+255),7,b
  3904  00597C  D004               	goto	u8130
  3905  00597E  0100               	movlb	0	; () banked
  3906  005980  6B7D               	clrf	??_frexp& (0+255),b
  3907  005982  2B7D               	incf	??_frexp& (0+255),f,b
  3908  005984  D002               	goto	u8138
  3909  005986                     u8130:
  3910  005986  0100               	movlb	0	; () banked
  3911  005988  6B7D               	clrf	??_frexp& (0+255),b
  3912  00598A                     u8138:
  3913  00598A  0100               	movlb	0	; () banked
  3914  00598C  517D               	movf	??_frexp& (0+255),w,b
  3915  00598E  C07B  FFD9         	movff	frexp@eptr,fsr2l
  3916  005992  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  3917  005996  12DE               	iorwf	postinc2,f,c
  3918  005998  0E00               	movlw	0
  3919  00599A  12DD               	iorwf	postdec2,f,c
  3920                           
  3921                           ; BSR set to: 0
  3922  00599C  C07B  FFD9         	movff	frexp@eptr,fsr2l
  3923  0059A0  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  3924  0059A4  0E82               	movlw	130
  3925  0059A6  26DE               	addwf	postinc2,f,c
  3926  0059A8  0EFF               	movlw	255
  3927  0059AA  22DD               	addwfc	postdec2,f,c
  3928                           
  3929                           ; BSR set to: 0
  3930  0059AC  0100               	movlb	0	; () banked
  3931  0059AE  817A               	bsf	(frexp@value+3)& (0+255),0,b
  3932  0059B0  837A               	bsf	(frexp@value+3)& (0+255),1,b
  3933  0059B2  857A               	bsf	(frexp@value+3)& (0+255),2,b
  3934  0059B4  877A               	bsf	(frexp@value+3)& (0+255),3,b
  3935  0059B6  897A               	bsf	(frexp@value+3)& (0+255),4,b
  3936  0059B8  8B7A               	bsf	(frexp@value+3)& (0+255),5,b
  3937  0059BA  9D7A               	bcf	(frexp@value+3)& (0+255),6,b
  3938                           
  3939                           ; BSR set to: 0
  3940  0059BC  0100               	movlb	0	; () banked
  3941  0059BE  9F79               	bcf	(frexp@value+2)& (0+255),7,b
  3942  0059C0  0012               	return	
  3943  0059C2                     __end_of_frexp:
  3944                           	opt stack 0
  3945                           tblptru	equ	0xFF8
  3946                           tblptrh	equ	0xFF7
  3947                           tblptrl	equ	0xFF6
  3948                           tablat	equ	0xFF5
  3949                           postinc0	equ	0xFEE
  3950                           wreg	equ	0xFE8
  3951                           postdec1	equ	0xFE5
  3952                           fsr1l	equ	0xFE1
  3953                           postinc2	equ	0xFDE
  3954                           postdec2	equ	0xFDD
  3955                           fsr2h	equ	0xFDA
  3956                           fsr2l	equ	0xFD9
  3957                           status	equ	0xFD8
  3958                           
  3959 ;; *************** function ___xxtofl *****************
  3960 ;; Defined at:
  3961 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;  sign            1    wreg     unsigned char 
  3964 ;;  val             4  107[BANK0 ] long 
  3965 ;; Auto vars:     Size  Location     Type
  3966 ;;  sign            1    0[BANK1 ] unsigned char 
  3967 ;;  arg             4    2[BANK1 ] unsigned long 
  3968 ;;  exp             1    1[BANK1 ] unsigned char 
  3969 ;; Return value:  Size  Location     Type
  3970 ;;                  4  107[BANK0 ] unsigned char 
  3971 ;; Registers used:
  3972 ;;		wreg, status,2, status,0
  3973 ;; Tracked objects:
  3974 ;;		On entry : 0/0
  3975 ;;		On exit  : 0/0
  3976 ;;		Unchanged: 0/0
  3977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3978 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3979 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3980 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3981 ;;      Totals:         0       8       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3982 ;;Total ram usage:       14 bytes
  3983 ;; Hardware stack levels used:    1
  3984 ;; Hardware stack levels required when called:    4
  3985 ;; This function calls:
  3986 ;;		Nothing
  3987 ;; This function is called by:
  3988 ;;		_park_search
  3989 ;;		_park_routine
  3990 ;;		_parallelo
  3991 ;;		_floor
  3992 ;; This function uses a non-reentrant model
  3993 ;;
  3994                           
  3995                           	psect	text10
  3996  004C20                     __ptext10:
  3997                           	opt stack 0
  3998  004C20                     ___xxtofl:
  3999                           	opt stack 24
  4000                           
  4001                           ; BSR set to: 0
  4002                           ;incstack = 0
  4003                           ;___xxtofl@sign stored from wreg
  4004  004C20  0101               	movlb	1	; () banked
  4005  004C22  6F83               	movwf	___xxtofl@sign& (0+255),b
  4006  004C24  0101               	movlb	1	; () banked
  4007  004C26  5183               	movf	___xxtofl@sign& (0+255),w,b
  4008  004C28  0101               	movlb	1	; () banked
  4009  004C2A  B4D8               	btfsc	status,2,c
  4010  004C2C  D01E               	goto	l1436
  4011                           
  4012                           ; BSR set to: 1
  4013  004C2E  0100               	movlb	0	; () banked
  4014  004C30  AFCE               	btfss	(___xxtofl@val+3)& (0+255),7,b
  4015  004C32  D01B               	goto	l1436
  4016                           
  4017                           ; BSR set to: 0
  4018  004C34  C0CB  F0CF         	movff	___xxtofl@val,??___xxtofl
  4019  004C38  C0CC  F0D0         	movff	___xxtofl@val+1,??___xxtofl+1
  4020  004C3C  C0CD  F0D1         	movff	___xxtofl@val+2,??___xxtofl+2
  4021  004C40  C0CE  F0D2         	movff	___xxtofl@val+3,??___xxtofl+3
  4022  004C44  0100               	movlb	0	; () banked
  4023  004C46  1FCF               	comf	??___xxtofl& (0+255),f,b
  4024  004C48  1FD0               	comf	(??___xxtofl+1)& (0+255),f,b
  4025  004C4A  1FD1               	comf	(??___xxtofl+2)& (0+255),f,b
  4026  004C4C  1FD2               	comf	(??___xxtofl+3)& (0+255),f,b
  4027  004C4E  2BCF               	incf	??___xxtofl& (0+255),f,b
  4028  004C50  0E00               	movlw	0
  4029  004C52  23D0               	addwfc	(??___xxtofl+1)& (0+255),f,b
  4030  004C54  23D1               	addwfc	(??___xxtofl+2)& (0+255),f,b
  4031  004C56  23D2               	addwfc	(??___xxtofl+3)& (0+255),f,b
  4032  004C58  C0CF  F185         	movff	??___xxtofl,___xxtofl@arg
  4033  004C5C  C0D0  F186         	movff	??___xxtofl+1,___xxtofl@arg+1
  4034  004C60  C0D1  F187         	movff	??___xxtofl+2,___xxtofl@arg+2
  4035  004C64  C0D2  F188         	movff	??___xxtofl+3,___xxtofl@arg+3
  4036  004C68  D008               	goto	l6455
  4037  004C6A                     l1436:
  4038  004C6A  C0CB  F185         	movff	___xxtofl@val,___xxtofl@arg
  4039  004C6E  C0CC  F186         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4040  004C72  C0CD  F187         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4041  004C76  C0CE  F188         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4042  004C7A                     l6455:
  4043  004C7A  0100               	movlb	0	; () banked
  4044  004C7C  51CB               	movf	___xxtofl@val& (0+255),w,b
  4045  004C7E  0100               	movlb	0	; () banked
  4046  004C80  11CC               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  4047  004C82  0100               	movlb	0	; () banked
  4048  004C84  11CD               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  4049  004C86  0100               	movlb	0	; () banked
  4050  004C88  11CE               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  4051  004C8A  A4D8               	btfss	status,2,c
  4052  004C8C  D00A               	goto	l6461
  4053                           
  4054                           ; BSR set to: 0
  4055  004C8E  0E00               	movlw	0
  4056  004C90  0100               	movlb	0	; () banked
  4057  004C92  6FCB               	movwf	?___xxtofl& (0+255),b
  4058  004C94  0E00               	movlw	0
  4059  004C96  6FCC               	movwf	(?___xxtofl+1)& (0+255),b
  4060  004C98  0E00               	movlw	0
  4061  004C9A  6FCD               	movwf	(?___xxtofl+2)& (0+255),b
  4062  004C9C  0E00               	movlw	0
  4063  004C9E  6FCE               	movwf	(?___xxtofl+3)& (0+255),b
  4064                           
  4065                           ; BSR set to: 0
  4066  004CA0  0012               	return	
  4067  004CA2                     l6461:
  4068                           
  4069                           ; BSR set to: 0
  4070  004CA2  0E96               	movlw	150
  4071  004CA4  0101               	movlb	1	; () banked
  4072  004CA6  6F84               	movwf	___xxtofl@exp& (0+255),b
  4073  004CA8  D008               	goto	l6465
  4074  004CAA                     l6463:
  4075  004CAA  0101               	movlb	1	; () banked
  4076  004CAC  2B84               	incf	___xxtofl@exp& (0+255),f,b
  4077  004CAE  0101               	movlb	1	; () banked
  4078  004CB0  90D8               	bcf	status,0,c
  4079  004CB2  3388               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  4080  004CB4  3387               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  4081  004CB6  3386               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  4082  004CB8  3385               	rrcf	___xxtofl@arg& (0+255),f,b
  4083  004CBA                     l6465:
  4084                           
  4085                           ; BSR set to: 1
  4086  004CBA  0E00               	movlw	0
  4087  004CBC  0101               	movlb	1	; () banked
  4088  004CBE  1585               	andwf	___xxtofl@arg& (0+255),w,b
  4089  004CC0  0100               	movlb	0	; () banked
  4090  004CC2  6FCF               	movwf	??___xxtofl& (0+255),b
  4091  004CC4  0E00               	movlw	0
  4092  004CC6  0101               	movlb	1	; () banked
  4093  004CC8  1586               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  4094  004CCA  0100               	movlb	0	; () banked
  4095  004CCC  6FD0               	movwf	(??___xxtofl+1)& (0+255),b
  4096  004CCE  0E00               	movlw	0
  4097  004CD0  0101               	movlb	1	; () banked
  4098  004CD2  1587               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  4099  004CD4  0100               	movlb	0	; () banked
  4100  004CD6  6FD1               	movwf	(??___xxtofl+2)& (0+255),b
  4101  004CD8  0EFE               	movlw	254
  4102  004CDA  0101               	movlb	1	; () banked
  4103  004CDC  1588               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  4104  004CDE  0100               	movlb	0	; () banked
  4105  004CE0  6FD2               	movwf	(??___xxtofl+3)& (0+255),b
  4106  004CE2  0100               	movlb	0	; () banked
  4107  004CE4  51CF               	movf	??___xxtofl& (0+255),w,b
  4108  004CE6  0100               	movlb	0	; () banked
  4109  004CE8  11D0               	iorwf	(??___xxtofl+1)& (0+255),w,b
  4110  004CEA  0100               	movlb	0	; () banked
  4111  004CEC  11D1               	iorwf	(??___xxtofl+2)& (0+255),w,b
  4112  004CEE  0100               	movlb	0	; () banked
  4113  004CF0  11D2               	iorwf	(??___xxtofl+3)& (0+255),w,b
  4114  004CF2  B4D8               	btfsc	status,2,c
  4115  004CF4  D010               	goto	l1443
  4116  004CF6  D7D9               	goto	l6463
  4117  004CF8                     l6467:
  4118                           
  4119                           ; BSR set to: 0
  4120  004CF8  0101               	movlb	1	; () banked
  4121  004CFA  2B84               	incf	___xxtofl@exp& (0+255),f,b
  4122                           
  4123                           ; BSR set to: 1
  4124  004CFC  0E01               	movlw	1
  4125  004CFE  0101               	movlb	1	; () banked
  4126  004D00  2785               	addwf	___xxtofl@arg& (0+255),f,b
  4127  004D02  0E00               	movlw	0
  4128  004D04  2386               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  4129  004D06  2387               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  4130  004D08  2388               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  4131                           
  4132                           ; BSR set to: 1
  4133  004D0A  0101               	movlb	1	; () banked
  4134  004D0C  90D8               	bcf	status,0,c
  4135  004D0E  3388               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  4136  004D10  3387               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  4137  004D12  3386               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  4138  004D14  3385               	rrcf	___xxtofl@arg& (0+255),f,b
  4139  004D16                     l1443:
  4140  004D16  0E00               	movlw	0
  4141  004D18  0101               	movlb	1	; () banked
  4142  004D1A  1585               	andwf	___xxtofl@arg& (0+255),w,b
  4143  004D1C  0100               	movlb	0	; () banked
  4144  004D1E  6FCF               	movwf	??___xxtofl& (0+255),b
  4145  004D20  0E00               	movlw	0
  4146  004D22  0101               	movlb	1	; () banked
  4147  004D24  1586               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  4148  004D26  0100               	movlb	0	; () banked
  4149  004D28  6FD0               	movwf	(??___xxtofl+1)& (0+255),b
  4150  004D2A  0E00               	movlw	0
  4151  004D2C  0101               	movlb	1	; () banked
  4152  004D2E  1587               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  4153  004D30  0100               	movlb	0	; () banked
  4154  004D32  6FD1               	movwf	(??___xxtofl+2)& (0+255),b
  4155  004D34  0EFF               	movlw	255
  4156  004D36  0101               	movlb	1	; () banked
  4157  004D38  1588               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  4158  004D3A  0100               	movlb	0	; () banked
  4159  004D3C  6FD2               	movwf	(??___xxtofl+3)& (0+255),b
  4160  004D3E  0100               	movlb	0	; () banked
  4161  004D40  51CF               	movf	??___xxtofl& (0+255),w,b
  4162  004D42  0100               	movlb	0	; () banked
  4163  004D44  11D0               	iorwf	(??___xxtofl+1)& (0+255),w,b
  4164  004D46  0100               	movlb	0	; () banked
  4165  004D48  11D1               	iorwf	(??___xxtofl+2)& (0+255),w,b
  4166  004D4A  0100               	movlb	0	; () banked
  4167  004D4C  11D2               	iorwf	(??___xxtofl+3)& (0+255),w,b
  4168  004D4E  B4D8               	btfsc	status,2,c
  4169  004D50  D009               	goto	l6475
  4170  004D52  D7D2               	goto	l6467
  4171  004D54                     l6473:
  4172  004D54  0101               	movlb	1	; () banked
  4173  004D56  0784               	decf	___xxtofl@exp& (0+255),f,b
  4174  004D58  0101               	movlb	1	; () banked
  4175  004D5A  90D8               	bcf	status,0,c
  4176  004D5C  3785               	rlcf	___xxtofl@arg& (0+255),f,b
  4177  004D5E  3786               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  4178  004D60  3787               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  4179  004D62  3788               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  4180  004D64                     l6475:
  4181  004D64  0101               	movlb	1	; () banked
  4182  004D66  BF87               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  4183  004D68  D004               	goto	l1450
  4184                           
  4185                           ; BSR set to: 1
  4186  004D6A  0E02               	movlw	2
  4187  004D6C  0101               	movlb	1	; () banked
  4188  004D6E  6184               	cpfslt	___xxtofl@exp& (0+255),b
  4189  004D70  D7F1               	goto	l6473
  4190  004D72                     l1450:
  4191                           
  4192                           ; BSR set to: 1
  4193  004D72  0101               	movlb	1	; () banked
  4194  004D74  B184               	btfsc	___xxtofl@exp& (0+255),0,b
  4195  004D76  D009               	goto	l1451
  4196                           
  4197                           ; BSR set to: 1
  4198  004D78  0EFF               	movlw	255
  4199  004D7A  0101               	movlb	1	; () banked
  4200  004D7C  1785               	andwf	___xxtofl@arg& (0+255),f,b
  4201  004D7E  0EFF               	movlw	255
  4202  004D80  1786               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  4203  004D82  0E7F               	movlw	127
  4204  004D84  1787               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  4205  004D86  0EFF               	movlw	255
  4206  004D88  1788               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  4207  004D8A                     l1451:
  4208                           
  4209                           ; BSR set to: 1
  4210  004D8A  0101               	movlb	1	; () banked
  4211  004D8C  90D8               	bcf	status,0,c
  4212  004D8E  3384               	rrcf	___xxtofl@exp& (0+255),f,b
  4213  004D90  C184  F0CF         	movff	___xxtofl@exp,??___xxtofl
  4214  004D94  0100               	movlb	0	; () banked
  4215  004D96  6BD0               	clrf	(??___xxtofl+1)& (0+255),b
  4216  004D98  6BD1               	clrf	(??___xxtofl+2)& (0+255),b
  4217  004D9A  6BD2               	clrf	(??___xxtofl+3)& (0+255),b
  4218  004D9C  C0CF  F0D2         	movff	??___xxtofl,??___xxtofl+3
  4219  004DA0  0100               	movlb	0	; () banked
  4220  004DA2  6BD1               	clrf	(??___xxtofl+2)& (0+255),b
  4221  004DA4  6BD0               	clrf	(??___xxtofl+1)& (0+255),b
  4222  004DA6  6BCF               	clrf	??___xxtofl& (0+255),b
  4223  004DA8  0100               	movlb	0	; () banked
  4224  004DAA  51CF               	movf	??___xxtofl& (0+255),w,b
  4225  004DAC  0101               	movlb	1	; () banked
  4226  004DAE  1385               	iorwf	___xxtofl@arg& (0+255),f,b
  4227  004DB0  0100               	movlb	0	; () banked
  4228  004DB2  51D0               	movf	(??___xxtofl+1)& (0+255),w,b
  4229  004DB4  0101               	movlb	1	; () banked
  4230  004DB6  1386               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  4231  004DB8  0100               	movlb	0	; () banked
  4232  004DBA  51D1               	movf	(??___xxtofl+2)& (0+255),w,b
  4233  004DBC  0101               	movlb	1	; () banked
  4234  004DBE  1387               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  4235  004DC0  0100               	movlb	0	; () banked
  4236  004DC2  51D2               	movf	(??___xxtofl+3)& (0+255),w,b
  4237  004DC4  0101               	movlb	1	; () banked
  4238  004DC6  1388               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  4239                           
  4240                           ; BSR set to: 1
  4241  004DC8  0101               	movlb	1	; () banked
  4242  004DCA  5183               	movf	___xxtofl@sign& (0+255),w,b
  4243  004DCC  0101               	movlb	1	; () banked
  4244  004DCE  B4D8               	btfsc	status,2,c
  4245  004DD0  D005               	goto	l6487
  4246                           
  4247                           ; BSR set to: 1
  4248  004DD2  0100               	movlb	0	; () banked
  4249  004DD4  AFCE               	btfss	(___xxtofl@val+3)& (0+255),7,b
  4250  004DD6  D002               	goto	l6487
  4251                           
  4252                           ; BSR set to: 0
  4253  004DD8  0101               	movlb	1	; () banked
  4254  004DDA  8F88               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  4255  004DDC                     l6487:
  4256  004DDC  C185  F0CB         	movff	___xxtofl@arg,?___xxtofl
  4257  004DE0  C186  F0CC         	movff	___xxtofl@arg+1,?___xxtofl+1
  4258  004DE4  C187  F0CD         	movff	___xxtofl@arg+2,?___xxtofl+2
  4259  004DE8  C188  F0CE         	movff	___xxtofl@arg+3,?___xxtofl+3
  4260  004DEC  0012               	return	
  4261  004DEE                     __end_of___xxtofl:
  4262                           	opt stack 0
  4263                           tblptru	equ	0xFF8
  4264                           tblptrh	equ	0xFF7
  4265                           tblptrl	equ	0xFF6
  4266                           tablat	equ	0xFF5
  4267                           postinc0	equ	0xFEE
  4268                           wreg	equ	0xFE8
  4269                           postdec1	equ	0xFE5
  4270                           fsr1l	equ	0xFE1
  4271                           postinc2	equ	0xFDE
  4272                           postdec2	equ	0xFDD
  4273                           fsr2h	equ	0xFDA
  4274                           fsr2l	equ	0xFD9
  4275                           status	equ	0xFD8
  4276                           
  4277 ;; *************** function ___fltol *****************
  4278 ;; Defined at:
  4279 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  4280 ;; Parameters:    Size  Location     Type
  4281 ;;  f1              4   97[BANK0 ] unsigned char 
  4282 ;; Auto vars:     Size  Location     Type
  4283 ;;  exp1            1  106[BANK0 ] unsigned char 
  4284 ;;  sign1           1  105[BANK0 ] unsigned char 
  4285 ;; Return value:  Size  Location     Type
  4286 ;;                  4   97[BANK0 ] long 
  4287 ;; Registers used:
  4288 ;;		wreg, status,2, status,0
  4289 ;; Tracked objects:
  4290 ;;		On entry : 0/0
  4291 ;;		On exit  : 0/0
  4292 ;;		Unchanged: 0/0
  4293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4294 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4295 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4296 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4297 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4298 ;;Total ram usage:       10 bytes
  4299 ;; Hardware stack levels used:    1
  4300 ;; Hardware stack levels required when called:    4
  4301 ;; This function calls:
  4302 ;;		Nothing
  4303 ;; This function is called by:
  4304 ;;		_park_routine
  4305 ;;		_parallelo
  4306 ;;		_floor
  4307 ;; This function uses a non-reentrant model
  4308 ;;
  4309                           
  4310                           	psect	text11
  4311  00565E                     __ptext11:
  4312                           	opt stack 0
  4313  00565E                     ___fltol:
  4314                           	opt stack 24
  4315                           
  4316                           ;incstack = 0
  4317  00565E  0100               	movlb	0	; () banked
  4318  005660  35C3               	rlcf	(___fltol@f1+2)& (0+255),w,b
  4319  005662  35C4               	rlcf	(___fltol@f1+3)& (0+255),w,b
  4320  005664  0100               	movlb	0	; () banked
  4321  005666  6FCA               	movwf	___fltol@exp1& (0+255),b
  4322  005668  0100               	movlb	0	; () banked
  4323  00566A  51CA               	movf	___fltol@exp1& (0+255),w,b
  4324  00566C  A4D8               	btfss	status,2,c
  4325  00566E  D00A               	goto	l6411
  4326                           
  4327                           ; BSR set to: 0
  4328  005670  0E00               	movlw	0
  4329  005672  0100               	movlb	0	; () banked
  4330  005674  6FC1               	movwf	?___fltol& (0+255),b
  4331  005676  0E00               	movlw	0
  4332  005678  6FC2               	movwf	(?___fltol+1)& (0+255),b
  4333  00567A  0E00               	movlw	0
  4334  00567C  6FC3               	movwf	(?___fltol+2)& (0+255),b
  4335  00567E  0E00               	movlw	0
  4336  005680  6FC4               	movwf	(?___fltol+3)& (0+255),b
  4337                           
  4338                           ; BSR set to: 0
  4339  005682  0012               	return	
  4340  005684                     l6411:
  4341                           
  4342                           ; BSR set to: 0
  4343  005684  C0C1  F0C5         	movff	___fltol@f1,??___fltol
  4344  005688  C0C2  F0C6         	movff	___fltol@f1+1,??___fltol+1
  4345  00568C  C0C3  F0C7         	movff	___fltol@f1+2,??___fltol+2
  4346  005690  C0C4  F0C8         	movff	___fltol@f1+3,??___fltol+3
  4347  005694  0E20               	movlw	32
  4348  005696  D006               	goto	u7960
  4349  005698                     u7965:
  4350  005698  0100               	movlb	0	; () banked
  4351  00569A  90D8               	bcf	status,0,c
  4352  00569C  33C8               	rrcf	(??___fltol+3)& (0+255),f,b
  4353  00569E  33C7               	rrcf	(??___fltol+2)& (0+255),f,b
  4354  0056A0  33C6               	rrcf	(??___fltol+1)& (0+255),f,b
  4355  0056A2  33C5               	rrcf	??___fltol& (0+255),f,b
  4356  0056A4                     u7960:
  4357  0056A4  2EE8               	decfsz	wreg,f,c
  4358  0056A6  D7F8               	goto	u7965
  4359  0056A8  0100               	movlb	0	; () banked
  4360  0056AA  51C5               	movf	??___fltol& (0+255),w,b
  4361  0056AC  0100               	movlb	0	; () banked
  4362  0056AE  6FC9               	movwf	___fltol@sign1& (0+255),b
  4363                           
  4364                           ; BSR set to: 0
  4365  0056B0  0100               	movlb	0	; () banked
  4366  0056B2  8FC3               	bsf	(___fltol@f1+2)& (0+255),7,b
  4367                           
  4368                           ; BSR set to: 0
  4369  0056B4  0EFF               	movlw	255
  4370  0056B6  0100               	movlb	0	; () banked
  4371  0056B8  17C1               	andwf	___fltol@f1& (0+255),f,b
  4372  0056BA  0EFF               	movlw	255
  4373  0056BC  17C2               	andwf	(___fltol@f1+1)& (0+255),f,b
  4374  0056BE  0EFF               	movlw	255
  4375  0056C0  17C3               	andwf	(___fltol@f1+2)& (0+255),f,b
  4376  0056C2  0E00               	movlw	0
  4377  0056C4  17C4               	andwf	(___fltol@f1+3)& (0+255),f,b
  4378                           
  4379                           ; BSR set to: 0
  4380  0056C6  0E96               	movlw	150
  4381  0056C8  0100               	movlb	0	; () banked
  4382  0056CA  5FCA               	subwf	___fltol@exp1& (0+255),f,b
  4383                           
  4384                           ; BSR set to: 0
  4385  0056CC  0100               	movlb	0	; () banked
  4386  0056CE  AFCA               	btfss	___fltol@exp1& (0+255),7,b
  4387  0056D0  D01A               	goto	l6431
  4388                           
  4389                           ; BSR set to: 0
  4390  0056D2  0100               	movlb	0	; () banked
  4391  0056D4  51CA               	movf	___fltol@exp1& (0+255),w,b
  4392  0056D6  0A80               	xorlw	128
  4393  0056D8  0F97               	addlw	151
  4394  0056DA  B0D8               	btfsc	status,0,c
  4395  0056DC  D00A               	goto	l6427
  4396                           
  4397                           ; BSR set to: 0
  4398  0056DE  0E00               	movlw	0
  4399  0056E0  0100               	movlb	0	; () banked
  4400  0056E2  6FC1               	movwf	?___fltol& (0+255),b
  4401  0056E4  0E00               	movlw	0
  4402  0056E6  6FC2               	movwf	(?___fltol+1)& (0+255),b
  4403  0056E8  0E00               	movlw	0
  4404  0056EA  6FC3               	movwf	(?___fltol+2)& (0+255),b
  4405  0056EC  0E00               	movlw	0
  4406  0056EE  6FC4               	movwf	(?___fltol+3)& (0+255),b
  4407                           
  4408                           ; BSR set to: 0
  4409  0056F0  0012               	return	
  4410  0056F2                     l6427:
  4411                           
  4412                           ; BSR set to: 0
  4413  0056F2  0100               	movlb	0	; () banked
  4414  0056F4  90D8               	bcf	status,0,c
  4415  0056F6  33C4               	rrcf	(___fltol@f1+3)& (0+255),f,b
  4416  0056F8  33C3               	rrcf	(___fltol@f1+2)& (0+255),f,b
  4417  0056FA  33C2               	rrcf	(___fltol@f1+1)& (0+255),f,b
  4418  0056FC  33C1               	rrcf	___fltol@f1& (0+255),f,b
  4419                           
  4420                           ; BSR set to: 0
  4421  0056FE  0100               	movlb	0	; () banked
  4422  005700  3FCA               	incfsz	___fltol@exp1& (0+255),f,b
  4423  005702  D7F7               	goto	l6427
  4424                           
  4425                           ; BSR set to: 0
  4426  005704  D01B               	goto	l6441
  4427  005706                     l6431:
  4428                           
  4429                           ; BSR set to: 0
  4430  005706  0E1F               	movlw	31
  4431  005708  0100               	movlb	0	; () banked
  4432  00570A  65CA               	cpfsgt	___fltol@exp1& (0+255),b
  4433  00570C  D012               	goto	l6439
  4434                           
  4435                           ; BSR set to: 0
  4436  00570E  0E00               	movlw	0
  4437  005710  0100               	movlb	0	; () banked
  4438  005712  6FC1               	movwf	?___fltol& (0+255),b
  4439  005714  0E00               	movlw	0
  4440  005716  6FC2               	movwf	(?___fltol+1)& (0+255),b
  4441  005718  0E00               	movlw	0
  4442  00571A  6FC3               	movwf	(?___fltol+2)& (0+255),b
  4443  00571C  0E00               	movlw	0
  4444  00571E  6FC4               	movwf	(?___fltol+3)& (0+255),b
  4445                           
  4446                           ; BSR set to: 0
  4447  005720  0012               	return	
  4448  005722                     l6437:
  4449                           
  4450                           ; BSR set to: 0
  4451  005722  0100               	movlb	0	; () banked
  4452  005724  90D8               	bcf	status,0,c
  4453  005726  37C1               	rlcf	___fltol@f1& (0+255),f,b
  4454  005728  37C2               	rlcf	(___fltol@f1+1)& (0+255),f,b
  4455  00572A  37C3               	rlcf	(___fltol@f1+2)& (0+255),f,b
  4456  00572C  37C4               	rlcf	(___fltol@f1+3)& (0+255),f,b
  4457  00572E  0100               	movlb	0	; () banked
  4458  005730  07CA               	decf	___fltol@exp1& (0+255),f,b
  4459  005732                     l6439:
  4460                           
  4461                           ; BSR set to: 0
  4462  005732  0100               	movlb	0	; () banked
  4463  005734  51CA               	movf	___fltol@exp1& (0+255),w,b
  4464  005736  0100               	movlb	0	; () banked
  4465  005738  A4D8               	btfss	status,2,c
  4466  00573A  D7F3               	goto	l6437
  4467  00573C                     l6441:
  4468                           
  4469                           ; BSR set to: 0
  4470  00573C  0100               	movlb	0	; () banked
  4471  00573E  51C9               	movf	___fltol@sign1& (0+255),w,b
  4472  005740  0100               	movlb	0	; () banked
  4473  005742  B4D8               	btfsc	status,2,c
  4474  005744  D009               	goto	l6445
  4475                           
  4476                           ; BSR set to: 0
  4477  005746  0100               	movlb	0	; () banked
  4478  005748  1FC4               	comf	(___fltol@f1+3)& (0+255),f,b
  4479  00574A  1FC3               	comf	(___fltol@f1+2)& (0+255),f,b
  4480  00574C  1FC2               	comf	(___fltol@f1+1)& (0+255),f,b
  4481  00574E  6DC1               	negf	___fltol@f1& (0+255),b
  4482  005750  0E00               	movlw	0
  4483  005752  23C2               	addwfc	(___fltol@f1+1)& (0+255),f,b
  4484  005754  23C3               	addwfc	(___fltol@f1+2)& (0+255),f,b
  4485  005756  23C4               	addwfc	(___fltol@f1+3)& (0+255),f,b
  4486  005758                     l6445:
  4487                           
  4488                           ; BSR set to: 0
  4489  005758  C0C1  F0C1         	movff	___fltol@f1,?___fltol
  4490  00575C  C0C2  F0C2         	movff	___fltol@f1+1,?___fltol+1
  4491  005760  C0C3  F0C3         	movff	___fltol@f1+2,?___fltol+2
  4492  005764  C0C4  F0C4         	movff	___fltol@f1+3,?___fltol+3
  4493  005768  0012               	return	
  4494  00576A                     __end_of___fltol:
  4495                           	opt stack 0
  4496                           tblptru	equ	0xFF8
  4497                           tblptrh	equ	0xFF7
  4498                           tblptrl	equ	0xFF6
  4499                           tablat	equ	0xFF5
  4500                           postinc0	equ	0xFEE
  4501                           wreg	equ	0xFE8
  4502                           postdec1	equ	0xFE5
  4503                           fsr1l	equ	0xFE1
  4504                           postinc2	equ	0xFDE
  4505                           postdec2	equ	0xFDD
  4506                           fsr2h	equ	0xFDA
  4507                           fsr2l	equ	0xFD9
  4508                           status	equ	0xFD8
  4509                           
  4510 ;; *************** function ___flsub *****************
  4511 ;; Defined at:
  4512 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  4513 ;; Parameters:    Size  Location     Type
  4514 ;;  b               4   12[BANK1 ] long 
  4515 ;;  a               4   16[BANK1 ] long 
  4516 ;; Auto vars:     Size  Location     Type
  4517 ;;		None
  4518 ;; Return value:  Size  Location     Type
  4519 ;;                  4   12[BANK1 ] long 
  4520 ;; Registers used:
  4521 ;;		wreg, status,2, status,0, cstack
  4522 ;; Tracked objects:
  4523 ;;		On entry : 0/0
  4524 ;;		On exit  : 0/0
  4525 ;;		Unchanged: 0/0
  4526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4527 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  4528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4530 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  4531 ;;Total ram usage:        8 bytes
  4532 ;; Hardware stack levels used:    1
  4533 ;; Hardware stack levels required when called:    5
  4534 ;; This function calls:
  4535 ;;		___fladd
  4536 ;; This function is called by:
  4537 ;;		_sin
  4538 ;; This function uses a non-reentrant model
  4539 ;;
  4540                           
  4541                           	psect	text12
  4542  005BC2                     __ptext12:
  4543                           	opt stack 0
  4544  005BC2                     ___flsub:
  4545                           	opt stack 21
  4546                           
  4547                           ; BSR set to: 0
  4548                           ;incstack = 0
  4549  005BC2  0E00               	movlw	0
  4550  005BC4  0101               	movlb	1	; () banked
  4551  005BC6  1B93               	xorwf	___flsub@a& (0+255),f,b
  4552  005BC8  0E00               	movlw	0
  4553  005BCA  1B94               	xorwf	(___flsub@a+1)& (0+255),f,b
  4554  005BCC  0E00               	movlw	0
  4555  005BCE  1B95               	xorwf	(___flsub@a+2)& (0+255),f,b
  4556  005BD0  0E80               	movlw	128
  4557  005BD2  1B96               	xorwf	(___flsub@a+3)& (0+255),f,b
  4558                           
  4559                           ; BSR set to: 1
  4560  005BD4  C18F  F0AD         	movff	___flsub@b,___fladd@b
  4561  005BD8  C190  F0AE         	movff	___flsub@b+1,___fladd@b+1
  4562  005BDC  C191  F0AF         	movff	___flsub@b+2,___fladd@b+2
  4563  005BE0  C192  F0B0         	movff	___flsub@b+3,___fladd@b+3
  4564  005BE4  C193  F0B1         	movff	___flsub@a,___fladd@a
  4565  005BE8  C194  F0B2         	movff	___flsub@a+1,___fladd@a+1
  4566  005BEC  C195  F0B3         	movff	___flsub@a+2,___fladd@a+2
  4567  005BF0  C196  F0B4         	movff	___flsub@a+3,___fladd@a+3
  4568  005BF4  ECE2  F014         	call	___fladd	;wreg free
  4569  005BF8  C0AD  F18F         	movff	?___fladd,?___flsub
  4570  005BFC  C0AE  F190         	movff	?___fladd+1,?___flsub+1
  4571  005C00  C0AF  F191         	movff	?___fladd+2,?___flsub+2
  4572  005C04  C0B0  F192         	movff	?___fladd+3,?___flsub+3
  4573  005C08  0012               	return	
  4574  005C0A                     __end_of___flsub:
  4575                           	opt stack 0
  4576                           tblptru	equ	0xFF8
  4577                           tblptrh	equ	0xFF7
  4578                           tblptrl	equ	0xFF6
  4579                           tablat	equ	0xFF5
  4580                           postinc0	equ	0xFEE
  4581                           wreg	equ	0xFE8
  4582                           postdec1	equ	0xFE5
  4583                           fsr1l	equ	0xFE1
  4584                           postinc2	equ	0xFDE
  4585                           postdec2	equ	0xFDD
  4586                           fsr2h	equ	0xFDA
  4587                           fsr2l	equ	0xFD9
  4588                           status	equ	0xFD8
  4589                           
  4590 ;; *************** function _asin *****************
  4591 ;; Defined at:
  4592 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\asin.c"
  4593 ;; Parameters:    Size  Location     Type
  4594 ;;  x               4   21[BANK1 ] long 
  4595 ;; Auto vars:     Size  Location     Type
  4596 ;;  y               4   37[BANK1 ] long 
  4597 ;;  sgn             4   25[BANK1 ] long 
  4598 ;; Return value:  Size  Location     Type
  4599 ;;                  4   21[BANK1 ] long 
  4600 ;; Registers used:
  4601 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4602 ;; Tracked objects:
  4603 ;;		On entry : 0/0
  4604 ;;		On exit  : 0/0
  4605 ;;		Unchanged: 0/0
  4606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4607 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4608 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  4609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4610 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0
  4611 ;;Total ram usage:       24 bytes
  4612 ;; Hardware stack levels used:    1
  4613 ;; Hardware stack levels required when called:    7
  4614 ;; This function calls:
  4615 ;;		___fladd
  4616 ;;		___fldiv
  4617 ;;		___flge
  4618 ;;		___flmul
  4619 ;;		___flneg
  4620 ;;		_atan
  4621 ;;		_fabs
  4622 ;;		_sqrt
  4623 ;; This function is called by:
  4624 ;;		_parallelo
  4625 ;;		_matematica
  4626 ;; This function uses a non-reentrant model
  4627 ;;
  4628                           
  4629                           	psect	text13
  4630  004152                     __ptext13:
  4631                           	opt stack 0
  4632  004152                     _asin:
  4633                           	opt stack 21
  4634                           
  4635                           ;incstack = 0
  4636  004152  0E00               	movlw	0
  4637  004154  0100               	movlb	0	; () banked
  4638  004156  6FB1               	movwf	___flge@ff1& (0+255),b
  4639  004158  0E00               	movlw	0
  4640  00415A  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  4641  00415C  0E80               	movlw	128
  4642  00415E  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  4643  004160  0E3F               	movlw	63
  4644  004162  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  4645  004164  C198  F0AD         	movff	asin@x,fabs@d
  4646  004168  C199  F0AE         	movff	asin@x+1,fabs@d+1
  4647  00416C  C19A  F0AF         	movff	asin@x+2,fabs@d+2
  4648  004170  C19B  F0B0         	movff	asin@x+3,fabs@d+3
  4649  004174  EC05  F02E         	call	_fabs	;wreg free
  4650  004178  C0AD  F0B5         	movff	?_fabs,___flge@ff2
  4651  00417C  C0AE  F0B6         	movff	?_fabs+1,___flge@ff2+1
  4652  004180  C0AF  F0B7         	movff	?_fabs+2,___flge@ff2+2
  4653  004184  C0B0  F0B8         	movff	?_fabs+3,___flge@ff2+3
  4654  004188  ECAE  F028         	call	___flge	;wreg free
  4655  00418C  0100               	movlb	0	; () banked
  4656  00418E  B0D8               	btfsc	status,0,c
  4657  004190  D00F               	goto	l6857
  4658                           
  4659                           ; BSR set to: 0
  4660  004192  0E00               	movlw	0
  4661  004194  0101               	movlb	1	; () banked
  4662  004196  6F43               	movwf	(_errno+1)& (0+255),b
  4663  004198  0E21               	movlw	33
  4664  00419A  6F42               	movwf	_errno& (0+255),b
  4665  00419C  0E00               	movlw	0
  4666  00419E  0101               	movlb	1	; () banked
  4667  0041A0  6F98               	movwf	?_asin& (0+255),b
  4668  0041A2  0E00               	movlw	0
  4669  0041A4  6F99               	movwf	(?_asin+1)& (0+255),b
  4670  0041A6  0E00               	movlw	0
  4671  0041A8  6F9A               	movwf	(?_asin+2)& (0+255),b
  4672  0041AA  0E00               	movlw	0
  4673  0041AC  6F9B               	movwf	(?_asin+3)& (0+255),b
  4674                           
  4675                           ; BSR set to: 1
  4676  0041AE  0012               	return	
  4677  0041B0                     l6857:
  4678  0041B0  0E00               	movlw	0
  4679  0041B2  0101               	movlb	1	; () banked
  4680  0041B4  6F9C               	movwf	asin@sgn& (0+255),b
  4681  0041B6  0E00               	movlw	0
  4682  0041B8  6F9D               	movwf	(asin@sgn+1)& (0+255),b
  4683  0041BA  0E80               	movlw	128
  4684  0041BC  6F9E               	movwf	(asin@sgn+2)& (0+255),b
  4685  0041BE  0E3F               	movlw	63
  4686  0041C0  6F9F               	movwf	(asin@sgn+3)& (0+255),b
  4687                           
  4688                           ; BSR set to: 1
  4689  0041C2  C198  F094         	movff	asin@x,___flmul@a
  4690  0041C6  C199  F095         	movff	asin@x+1,___flmul@a+1
  4691  0041CA  C19A  F096         	movff	asin@x+2,___flmul@a+2
  4692  0041CE  C19B  F097         	movff	asin@x+3,___flmul@a+3
  4693  0041D2  C198  F090         	movff	asin@x,___flmul@b
  4694  0041D6  C199  F091         	movff	asin@x+1,___flmul@b+1
  4695  0041DA  C19A  F092         	movff	asin@x+2,___flmul@b+2
  4696  0041DE  C19B  F093         	movff	asin@x+3,___flmul@b+3
  4697  0041E2  EC36  F017         	call	___flmul	;wreg free
  4698  0041E6  C090  F0A9         	movff	?___flmul,___flneg@f1
  4699  0041EA  C091  F0AA         	movff	?___flmul+1,___flneg@f1+1
  4700  0041EE  C092  F0AB         	movff	?___flmul+2,___flneg@f1+2
  4701  0041F2  C093  F0AC         	movff	?___flmul+3,___flneg@f1+3
  4702  0041F6  EC41  F02E         	call	___flneg	;wreg free
  4703  0041FA  C0A9  F0AD         	movff	?___flneg,___fladd@b
  4704  0041FE  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  4705  004202  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  4706  004206  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  4707  00420A  0E00               	movlw	0
  4708  00420C  0100               	movlb	0	; () banked
  4709  00420E  6FB1               	movwf	___fladd@a& (0+255),b
  4710  004210  0E00               	movlw	0
  4711  004212  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  4712  004214  0E80               	movlw	128
  4713  004216  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  4714  004218  0E3F               	movlw	63
  4715  00421A  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  4716  00421C  ECE2  F014         	call	___fladd	;wreg free
  4717  004220  C0AD  F0C1         	movff	?___fladd,sqrt@a
  4718  004224  C0AE  F0C2         	movff	?___fladd+1,sqrt@a+1
  4719  004228  C0AF  F0C3         	movff	?___fladd+2,sqrt@a+2
  4720  00422C  C0B0  F0C4         	movff	?___fladd+3,sqrt@a+3
  4721  004230  EC89  F019         	call	_sqrt	;wreg free
  4722  004234  C0C1  F1A8         	movff	?_sqrt,asin@y
  4723  004238  C0C2  F1A9         	movff	?_sqrt+1,asin@y+1
  4724  00423C  C0C3  F1AA         	movff	?_sqrt+2,asin@y+2
  4725  004240  C0C4  F1AB         	movff	?_sqrt+3,asin@y+3
  4726  004244  C198  F0AD         	movff	asin@x,fabs@d
  4727  004248  C199  F0AE         	movff	asin@x+1,fabs@d+1
  4728  00424C  C19A  F0AF         	movff	asin@x+2,fabs@d+2
  4729  004250  C19B  F0B0         	movff	asin@x+3,fabs@d+3
  4730  004254  EC05  F02E         	call	_fabs	;wreg free
  4731  004258  C0AD  F0B1         	movff	?_fabs,___flge@ff1
  4732  00425C  C0AE  F0B2         	movff	?_fabs+1,___flge@ff1+1
  4733  004260  C0AF  F0B3         	movff	?_fabs+2,___flge@ff1+2
  4734  004264  C0B0  F0B4         	movff	?_fabs+3,___flge@ff1+3
  4735  004268  0E8F               	movlw	143
  4736  00426A  0100               	movlb	0	; () banked
  4737  00426C  6FB5               	movwf	___flge@ff2& (0+255),b
  4738  00426E  0EC2               	movlw	194
  4739  004270  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  4740  004272  0E35               	movlw	53
  4741  004274  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  4742  004276  0E3F               	movlw	63
  4743  004278  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  4744  00427A  ECAE  F028         	call	___flge	;wreg free
  4745  00427E  0100               	movlb	0	; () banked
  4746  004280  B0D8               	btfsc	status,0,c
  4747  004282  D02D               	goto	l6869
  4748                           
  4749                           ; BSR set to: 0
  4750  004284  C198  F077         	movff	asin@x,___fldiv@b
  4751  004288  C199  F078         	movff	asin@x+1,___fldiv@b+1
  4752  00428C  C19A  F079         	movff	asin@x+2,___fldiv@b+2
  4753  004290  C19B  F07A         	movff	asin@x+3,___fldiv@b+3
  4754  004294  C1A8  F07B         	movff	asin@y,___fldiv@a
  4755  004298  C1A9  F07C         	movff	asin@y+1,___fldiv@a+1
  4756  00429C  C1AA  F07D         	movff	asin@y+2,___fldiv@a+2
  4757  0042A0  C1AB  F07E         	movff	asin@y+3,___fldiv@a+3
  4758  0042A4  EC6E  F01B         	call	___fldiv	;wreg free
  4759  0042A8  C077  F1AC         	movff	?___fldiv,_asin$3746
  4760  0042AC  C078  F1AD         	movff	?___fldiv+1,_asin$3746+1
  4761  0042B0  C079  F1AE         	movff	?___fldiv+2,_asin$3746+2
  4762  0042B4  C07A  F1AF         	movff	?___fldiv+3,_asin$3746+3
  4763  0042B8  C1AC  F0D1         	movff	_asin$3746,atan@f
  4764  0042BC  C1AD  F0D2         	movff	_asin$3746+1,atan@f+1
  4765  0042C0  C1AE  F0D3         	movff	_asin$3746+2,atan@f+2
  4766  0042C4  C1AF  F0D4         	movff	_asin$3746+3,atan@f+3
  4767  0042C8  ECE7  F024         	call	_atan	;wreg free
  4768  0042CC  C0D1  F198         	movff	?_atan,?_asin
  4769  0042D0  C0D2  F199         	movff	?_atan+1,?_asin+1
  4770  0042D4  C0D3  F19A         	movff	?_atan+2,?_asin+2
  4771  0042D8  C0D4  F19B         	movff	?_atan+3,?_asin+3
  4772  0042DC  0012               	return	
  4773  0042DE                     l6869:
  4774  0042DE  0101               	movlb	1	; () banked
  4775  0042E0  AF9B               	btfss	(asin@x+3)& (0+255),7,b
  4776  0042E2  D06E               	goto	l6881
  4777                           
  4778                           ; BSR set to: 1
  4779  0042E4  C198  F07B         	movff	asin@x,___fldiv@a
  4780  0042E8  C199  F07C         	movff	asin@x+1,___fldiv@a+1
  4781  0042EC  C19A  F07D         	movff	asin@x+2,___fldiv@a+2
  4782  0042F0  C19B  F07E         	movff	asin@x+3,___fldiv@a+3
  4783  0042F4  C1A8  F0A9         	movff	asin@y,___flneg@f1
  4784  0042F8  C1A9  F0AA         	movff	asin@y+1,___flneg@f1+1
  4785  0042FC  C1AA  F0AB         	movff	asin@y+2,___flneg@f1+2
  4786  004300  C1AB  F0AC         	movff	asin@y+3,___flneg@f1+3
  4787  004304  EC41  F02E         	call	___flneg	;wreg free
  4788  004308  C0A9  F077         	movff	?___flneg,___fldiv@b
  4789  00430C  C0AA  F078         	movff	?___flneg+1,___fldiv@b+1
  4790  004310  C0AB  F079         	movff	?___flneg+2,___fldiv@b+2
  4791  004314  C0AC  F07A         	movff	?___flneg+3,___fldiv@b+3
  4792  004318  EC6E  F01B         	call	___fldiv	;wreg free
  4793  00431C  C077  F1AC         	movff	?___fldiv,_asin$3746
  4794  004320  C078  F1AD         	movff	?___fldiv+1,_asin$3746+1
  4795  004324  C079  F1AE         	movff	?___fldiv+2,_asin$3746+2
  4796  004328  C07A  F1AF         	movff	?___fldiv+3,_asin$3746+3
  4797  00432C  C1AC  F0D1         	movff	_asin$3746,atan@f
  4798  004330  C1AD  F0D2         	movff	_asin$3746+1,atan@f+1
  4799  004334  C1AE  F0D3         	movff	_asin$3746+2,atan@f+2
  4800  004338  C1AF  F0D4         	movff	_asin$3746+3,atan@f+3
  4801  00433C  ECE7  F024         	call	_atan	;wreg free
  4802  004340  C0D1  F1A4         	movff	?_atan,_asin$3747
  4803  004344  C0D2  F1A5         	movff	?_atan+1,_asin$3747+1
  4804  004348  C0D3  F1A6         	movff	?_atan+2,_asin$3747+2
  4805  00434C  C0D4  F1A7         	movff	?_atan+3,_asin$3747+3
  4806  004350  0EDB               	movlw	219
  4807  004352  0100               	movlb	0	; () banked
  4808  004354  6FB1               	movwf	___fladd@a& (0+255),b
  4809  004356  0E0F               	movlw	15
  4810  004358  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  4811  00435A  0EC9               	movlw	201
  4812  00435C  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  4813  00435E  0E3F               	movlw	63
  4814  004360  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  4815  004362  C1A4  F0A9         	movff	_asin$3747,___flneg@f1
  4816  004366  C1A5  F0AA         	movff	_asin$3747+1,___flneg@f1+1
  4817  00436A  C1A6  F0AB         	movff	_asin$3747+2,___flneg@f1+2
  4818  00436E  C1A7  F0AC         	movff	_asin$3747+3,___flneg@f1+3
  4819  004372  EC41  F02E         	call	___flneg	;wreg free
  4820  004376  C0A9  F0AD         	movff	?___flneg,___fladd@b
  4821  00437A  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  4822  00437E  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  4823  004382  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  4824  004386  ECE2  F014         	call	___fladd	;wreg free
  4825  00438A  C0AD  F1A0         	movff	?___fladd,_asin$3748
  4826  00438E  C0AE  F1A1         	movff	?___fladd+1,_asin$3748+1
  4827  004392  C0AF  F1A2         	movff	?___fladd+2,_asin$3748+2
  4828  004396  C0B0  F1A3         	movff	?___fladd+3,_asin$3748+3
  4829  00439A  C1A0  F0A9         	movff	_asin$3748,___flneg@f1
  4830  00439E  C1A1  F0AA         	movff	_asin$3748+1,___flneg@f1+1
  4831  0043A2  C1A2  F0AB         	movff	_asin$3748+2,___flneg@f1+2
  4832  0043A6  C1A3  F0AC         	movff	_asin$3748+3,___flneg@f1+3
  4833  0043AA  EC41  F02E         	call	___flneg	;wreg free
  4834  0043AE  C0A9  F198         	movff	?___flneg,?_asin
  4835  0043B2  C0AA  F199         	movff	?___flneg+1,?_asin+1
  4836  0043B6  C0AB  F19A         	movff	?___flneg+2,?_asin+2
  4837  0043BA  C0AC  F19B         	movff	?___flneg+3,?_asin+3
  4838  0043BE  0012               	return	
  4839  0043C0                     l6881:
  4840  0043C0  C198  F07B         	movff	asin@x,___fldiv@a
  4841  0043C4  C199  F07C         	movff	asin@x+1,___fldiv@a+1
  4842  0043C8  C19A  F07D         	movff	asin@x+2,___fldiv@a+2
  4843  0043CC  C19B  F07E         	movff	asin@x+3,___fldiv@a+3
  4844  0043D0  C1A8  F077         	movff	asin@y,___fldiv@b
  4845  0043D4  C1A9  F078         	movff	asin@y+1,___fldiv@b+1
  4846  0043D8  C1AA  F079         	movff	asin@y+2,___fldiv@b+2
  4847  0043DC  C1AB  F07A         	movff	asin@y+3,___fldiv@b+3
  4848  0043E0  EC6E  F01B         	call	___fldiv	;wreg free
  4849  0043E4  C077  F1AC         	movff	?___fldiv,_asin$3746
  4850  0043E8  C078  F1AD         	movff	?___fldiv+1,_asin$3746+1
  4851  0043EC  C079  F1AE         	movff	?___fldiv+2,_asin$3746+2
  4852  0043F0  C07A  F1AF         	movff	?___fldiv+3,_asin$3746+3
  4853  0043F4  C1AC  F0D1         	movff	_asin$3746,atan@f
  4854  0043F8  C1AD  F0D2         	movff	_asin$3746+1,atan@f+1
  4855  0043FC  C1AE  F0D3         	movff	_asin$3746+2,atan@f+2
  4856  004400  C1AF  F0D4         	movff	_asin$3746+3,atan@f+3
  4857  004404  ECE7  F024         	call	_atan	;wreg free
  4858  004408  C0D1  F1A4         	movff	?_atan,_asin$3747
  4859  00440C  C0D2  F1A5         	movff	?_atan+1,_asin$3747+1
  4860  004410  C0D3  F1A6         	movff	?_atan+2,_asin$3747+2
  4861  004414  C0D4  F1A7         	movff	?_atan+3,_asin$3747+3
  4862  004418  C1A4  F0A9         	movff	_asin$3747,___flneg@f1
  4863  00441C  C1A5  F0AA         	movff	_asin$3747+1,___flneg@f1+1
  4864  004420  C1A6  F0AB         	movff	_asin$3747+2,___flneg@f1+2
  4865  004424  C1A7  F0AC         	movff	_asin$3747+3,___flneg@f1+3
  4866  004428  EC41  F02E         	call	___flneg	;wreg free
  4867  00442C  C0A9  F0AD         	movff	?___flneg,___fladd@b
  4868  004430  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  4869  004434  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  4870  004438  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  4871  00443C  0EDB               	movlw	219
  4872  00443E  0100               	movlb	0	; () banked
  4873  004440  6FB1               	movwf	___fladd@a& (0+255),b
  4874  004442  0E0F               	movlw	15
  4875  004444  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  4876  004446  0EC9               	movlw	201
  4877  004448  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  4878  00444A  0E3F               	movlw	63
  4879  00444C  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  4880  00444E  ECE2  F014         	call	___fladd	;wreg free
  4881  004452  C0AD  F198         	movff	?___fladd,?_asin
  4882  004456  C0AE  F199         	movff	?___fladd+1,?_asin+1
  4883  00445A  C0AF  F19A         	movff	?___fladd+2,?_asin+2
  4884  00445E  C0B0  F19B         	movff	?___fladd+3,?_asin+3
  4885  004462  0012               	return	
  4886  004464                     __end_of_asin:
  4887                           	opt stack 0
  4888                           tblptru	equ	0xFF8
  4889                           tblptrh	equ	0xFF7
  4890                           tblptrl	equ	0xFF6
  4891                           tablat	equ	0xFF5
  4892                           postinc0	equ	0xFEE
  4893                           wreg	equ	0xFE8
  4894                           postdec1	equ	0xFE5
  4895                           fsr1l	equ	0xFE1
  4896                           postinc2	equ	0xFDE
  4897                           postdec2	equ	0xFDD
  4898                           fsr2h	equ	0xFDA
  4899                           fsr2l	equ	0xFD9
  4900                           status	equ	0xFD8
  4901                           
  4902 ;; *************** function _sqrt *****************
  4903 ;; Defined at:
  4904 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcsqrt.c"
  4905 ;; Parameters:    Size  Location     Type
  4906 ;;  a               4   97[BANK0 ] long 
  4907 ;; Auto vars:     Size  Location     Type
  4908 ;;  frac            4   17[BANK1 ] unsigned long 
  4909 ;;  root            4   13[BANK1 ] struct .
  4910 ;;  grs             4    7[BANK1 ] unsigned long 
  4911 ;;  tfrac           4    2[BANK1 ] unsigned long 
  4912 ;;  exp             2   11[BANK1 ] int 
  4913 ;;  p               1    6[BANK1 ] unsigned char 
  4914 ;;  i               1    1[BANK1 ] unsigned char 
  4915 ;;  sign            1    0[BANK1 ] unsigned char 
  4916 ;; Return value:  Size  Location     Type
  4917 ;;                  4   97[BANK0 ] unsigned char 
  4918 ;; Registers used:
  4919 ;;		wreg, status,2, status,0
  4920 ;; Tracked objects:
  4921 ;;		On entry : 0/0
  4922 ;;		On exit  : 0/0
  4923 ;;		Unchanged: 0/0
  4924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4925 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4926 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
  4927 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4928 ;;      Totals:         0       8      21       0       0       0       0       0       0       0       0       0       
      +0       0
  4929 ;;Total ram usage:       29 bytes
  4930 ;; Hardware stack levels used:    1
  4931 ;; Hardware stack levels required when called:    4
  4932 ;; This function calls:
  4933 ;;		Nothing
  4934 ;; This function is called by:
  4935 ;;		_parallelo
  4936 ;;		_asin
  4937 ;; This function uses a non-reentrant model
  4938 ;;
  4939                           
  4940                           	psect	text14
  4941  003312                     __ptext14:
  4942                           	opt stack 0
  4943  003312                     _sqrt:
  4944                           	opt stack 24
  4945                           
  4946                           ;incstack = 0
  4947  003312  0100               	movlb	0	; () banked
  4948  003314  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  4949  003316  0B80               	andlw	128
  4950  003318  0101               	movlb	1	; () banked
  4951  00331A  6F83               	movwf	sqrt@sign& (0+255),b
  4952  00331C  0100               	movlb	0	; () banked
  4953  00331E  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  4954  003320  25C4               	addwf	(sqrt@a+3)& (0+255),w,b
  4955  003322  0101               	movlb	1	; () banked
  4956  003324  6F89               	movwf	sqrt@p& (0+255),b
  4957                           
  4958                           ; BSR set to: 1
  4959  003326  0100               	movlb	0	; () banked
  4960  003328  AFC3               	btfss	(sqrt@a+2)& (0+255),7,b
  4961  00332A  D002               	goto	l6691
  4962                           
  4963                           ; BSR set to: 0
  4964  00332C  0101               	movlb	1	; () banked
  4965  00332E  8189               	bsf	sqrt@p& (0+255),0,b
  4966  003330                     l6691:
  4967  003330  C189  F18E         	movff	sqrt@p,sqrt@exp
  4968  003334  0101               	movlb	1	; () banked
  4969  003336  6B8F               	clrf	(sqrt@exp+1)& (0+255),b
  4970                           
  4971                           ; BSR set to: 1
  4972  003338  0EFF               	movlw	255
  4973  00333A  0100               	movlb	0	; () banked
  4974  00333C  15C1               	andwf	sqrt@a& (0+255),w,b
  4975  00333E  0101               	movlb	1	; () banked
  4976  003340  6F94               	movwf	sqrt@frac& (0+255),b
  4977  003342  0EFF               	movlw	255
  4978  003344  0100               	movlb	0	; () banked
  4979  003346  15C2               	andwf	(sqrt@a+1)& (0+255),w,b
  4980  003348  0101               	movlb	1	; () banked
  4981  00334A  6F95               	movwf	(sqrt@frac+1)& (0+255),b
  4982  00334C  0E7F               	movlw	127
  4983  00334E  0100               	movlb	0	; () banked
  4984  003350  15C3               	andwf	(sqrt@a+2)& (0+255),w,b
  4985  003352  0101               	movlb	1	; () banked
  4986  003354  6F96               	movwf	(sqrt@frac+2)& (0+255),b
  4987  003356  0E00               	movlw	0
  4988  003358  0100               	movlb	0	; () banked
  4989  00335A  15C4               	andwf	(sqrt@a+3)& (0+255),w,b
  4990  00335C  0101               	movlb	1	; () banked
  4991  00335E  6F97               	movwf	(sqrt@frac+3)& (0+255),b
  4992                           
  4993                           ; BSR set to: 1
  4994  003360  0101               	movlb	1	; () banked
  4995  003362  518E               	movf	sqrt@exp& (0+255),w,b
  4996  003364  0101               	movlb	1	; () banked
  4997  003366  118F               	iorwf	(sqrt@exp+1)& (0+255),w,b
  4998  003368  B4D8               	btfsc	status,2,c
  4999  00336A  D008               	goto	l6703
  5000                           
  5001                           ; BSR set to: 1
  5002  00336C  0101               	movlb	1	; () banked
  5003  00336E  8F96               	bsf	(sqrt@frac+2)& (0+255),7,b
  5004                           
  5005                           ; BSR set to: 1
  5006  003370  0101               	movlb	1	; () banked
  5007  003372  298E               	incf	sqrt@exp& (0+255),w,b
  5008  003374  0101               	movlb	1	; () banked
  5009  003376  118F               	iorwf	(sqrt@exp+1)& (0+255),w,b
  5010  003378  A4D8               	btfss	status,2,c
  5011  00337A  D009               	goto	l6705
  5012  00337C                     l6703:
  5013                           
  5014                           ; BSR set to: 1
  5015  00337C  0E00               	movlw	0
  5016  00337E  0101               	movlb	1	; () banked
  5017  003380  6F94               	movwf	sqrt@frac& (0+255),b
  5018  003382  0E00               	movlw	0
  5019  003384  6F95               	movwf	(sqrt@frac+1)& (0+255),b
  5020  003386  0E00               	movlw	0
  5021  003388  6F96               	movwf	(sqrt@frac+2)& (0+255),b
  5022  00338A  0E00               	movlw	0
  5023  00338C  6F97               	movwf	(sqrt@frac+3)& (0+255),b
  5024  00338E                     l6705:
  5025                           
  5026                           ; BSR set to: 1
  5027  00338E  0101               	movlb	1	; () banked
  5028  003390  518E               	movf	sqrt@exp& (0+255),w,b
  5029  003392  0101               	movlb	1	; () banked
  5030  003394  118F               	iorwf	(sqrt@exp+1)& (0+255),w,b
  5031  003396  A4D8               	btfss	status,2,c
  5032  003398  D00A               	goto	l6711
  5033                           
  5034                           ; BSR set to: 1
  5035  00339A  0E00               	movlw	0
  5036  00339C  0100               	movlb	0	; () banked
  5037  00339E  6FC1               	movwf	?_sqrt& (0+255),b
  5038  0033A0  0E00               	movlw	0
  5039  0033A2  6FC2               	movwf	(?_sqrt+1)& (0+255),b
  5040  0033A4  0E00               	movlw	0
  5041  0033A6  6FC3               	movwf	(?_sqrt+2)& (0+255),b
  5042  0033A8  0E00               	movlw	0
  5043  0033AA  6FC4               	movwf	(?_sqrt+3)& (0+255),b
  5044                           
  5045                           ; BSR set to: 0
  5046  0033AC  0012               	return	
  5047  0033AE                     l6711:
  5048  0033AE  0101               	movlb	1	; () banked
  5049  0033B0  5183               	movf	sqrt@sign& (0+255),w,b
  5050  0033B2  0101               	movlb	1	; () banked
  5051  0033B4  B4D8               	btfsc	status,2,c
  5052  0033B6  D01C               	goto	l6723
  5053                           
  5054                           ; BSR set to: 1
  5055  0033B8  0E00               	movlw	0
  5056  0033BA  0101               	movlb	1	; () banked
  5057  0033BC  6F90               	movwf	sqrt@root& (0+255),b
  5058  0033BE  0E00               	movlw	0
  5059  0033C0  6F91               	movwf	(sqrt@root+1)& (0+255),b
  5060  0033C2  0E40               	movlw	64
  5061  0033C4  6F92               	movwf	(sqrt@root+2)& (0+255),b
  5062  0033C6  0E00               	movlw	0
  5063  0033C8  6F93               	movwf	(sqrt@root+3)& (0+255),b
  5064                           
  5065                           ; BSR set to: 1
  5066  0033CA  0101               	movlb	1	; () banked
  5067  0033CC  0E80               	movlw	128
  5068  0033CE  1392               	iorwf	(sqrt@root+2)& (0+255),f,b
  5069  0033D0  0EFF               	movlw	255
  5070  0033D2  1393               	iorwf	(sqrt@root+3)& (0+255),f,b
  5071                           
  5072                           ; BSR set to: 1
  5073  0033D4  0E00               	movlw	0
  5074  0033D6  0101               	movlb	1	; () banked
  5075  0033D8  6F43               	movwf	(_errno+1)& (0+255),b
  5076  0033DA  0E21               	movlw	33
  5077  0033DC  6F42               	movwf	_errno& (0+255),b
  5078                           
  5079                           ; BSR set to: 1
  5080  0033DE  C190  F0C1         	movff	sqrt@root,?_sqrt
  5081  0033E2  C191  F0C2         	movff	sqrt@root+1,?_sqrt+1
  5082  0033E6  C192  F0C3         	movff	sqrt@root+2,?_sqrt+2
  5083  0033EA  C193  F0C4         	movff	sqrt@root+3,?_sqrt+3
  5084                           
  5085                           ; BSR set to: 1
  5086  0033EE  0012               	return	
  5087  0033F0                     l6723:
  5088                           
  5089                           ; BSR set to: 1
  5090  0033F0  0101               	movlb	1	; () banked
  5091  0033F2  298E               	incf	sqrt@exp& (0+255),w,b
  5092  0033F4  0101               	movlb	1	; () banked
  5093  0033F6  118F               	iorwf	(sqrt@exp+1)& (0+255),w,b
  5094  0033F8  A4D8               	btfss	status,2,c
  5095  0033FA  D012               	goto	l6731
  5096                           
  5097                           ; BSR set to: 1
  5098  0033FC  0E00               	movlw	0
  5099  0033FE  0101               	movlb	1	; () banked
  5100  003400  6F90               	movwf	sqrt@root& (0+255),b
  5101  003402  0E00               	movlw	0
  5102  003404  6F91               	movwf	(sqrt@root+1)& (0+255),b
  5103  003406  0E80               	movlw	128
  5104  003408  6F92               	movwf	(sqrt@root+2)& (0+255),b
  5105  00340A  0E7F               	movlw	127
  5106  00340C  6F93               	movwf	(sqrt@root+3)& (0+255),b
  5107                           
  5108                           ; BSR set to: 1
  5109  00340E  C190  F0C1         	movff	sqrt@root,?_sqrt
  5110  003412  C191  F0C2         	movff	sqrt@root+1,?_sqrt+1
  5111  003416  C192  F0C3         	movff	sqrt@root+2,?_sqrt+2
  5112  00341A  C193  F0C4         	movff	sqrt@root+3,?_sqrt+3
  5113                           
  5114                           ; BSR set to: 1
  5115  00341E  0012               	return	
  5116  003420                     l6731:
  5117                           
  5118                           ; BSR set to: 1
  5119  003420  0101               	movlb	1	; () banked
  5120  003422  0E81               	movlw	129
  5121  003424  278E               	addwf	sqrt@exp& (0+255),f,b
  5122  003426  0EFF               	movlw	255
  5123  003428  238F               	addwfc	(sqrt@exp+1)& (0+255),f,b
  5124  00342A  0101               	movlb	1	; () banked
  5125  00342C  518E               	movf	sqrt@exp& (0+255),w,b
  5126  00342E  0B01               	andlw	1
  5127  003430  0101               	movlb	1	; () banked
  5128  003432  6F89               	movwf	sqrt@p& (0+255),b
  5129  003434  0101               	movlb	1	; () banked
  5130  003436  358F               	rlcf	(sqrt@exp+1)& (0+255),w,b
  5131  003438  338F               	rrcf	(sqrt@exp+1)& (0+255),f,b
  5132  00343A  338E               	rrcf	sqrt@exp& (0+255),f,b
  5133  00343C  0E7F               	movlw	127
  5134  00343E  0101               	movlb	1	; () banked
  5135  003440  278E               	addwf	sqrt@exp& (0+255),f,b
  5136  003442  0E00               	movlw	0
  5137  003444  238F               	addwfc	(sqrt@exp+1)& (0+255),f,b
  5138  003446  90D8               	bcf	status,0,c
  5139  003448  0101               	movlb	1	; () banked
  5140  00344A  3594               	rlcf	sqrt@frac& (0+255),w,b
  5141  00344C  0101               	movlb	1	; () banked
  5142  00344E  6F85               	movwf	sqrt@tfrac& (0+255),b
  5143  003450  0101               	movlb	1	; () banked
  5144  003452  3595               	rlcf	(sqrt@frac+1)& (0+255),w,b
  5145  003454  0101               	movlb	1	; () banked
  5146  003456  6F86               	movwf	(sqrt@tfrac+1)& (0+255),b
  5147  003458  0101               	movlb	1	; () banked
  5148  00345A  3596               	rlcf	(sqrt@frac+2)& (0+255),w,b
  5149  00345C  0101               	movlb	1	; () banked
  5150  00345E  6F87               	movwf	(sqrt@tfrac+2)& (0+255),b
  5151  003460  0101               	movlb	1	; () banked
  5152  003462  3597               	rlcf	(sqrt@frac+3)& (0+255),w,b
  5153  003464  0101               	movlb	1	; () banked
  5154  003466  6F88               	movwf	(sqrt@tfrac+3)& (0+255),b
  5155                           
  5156                           ; BSR set to: 1
  5157  003468  0E00               	movlw	0
  5158  00346A  0101               	movlb	1	; () banked
  5159  00346C  6F94               	movwf	sqrt@frac& (0+255),b
  5160  00346E  0E00               	movlw	0
  5161  003470  6F95               	movwf	(sqrt@frac+1)& (0+255),b
  5162  003472  0E00               	movlw	0
  5163  003474  6F96               	movwf	(sqrt@frac+2)& (0+255),b
  5164  003476  0E00               	movlw	0
  5165  003478  6F97               	movwf	(sqrt@frac+3)& (0+255),b
  5166                           
  5167                           ; BSR set to: 1
  5168  00347A  0E00               	movlw	0
  5169  00347C  0101               	movlb	1	; () banked
  5170  00347E  6F8A               	movwf	sqrt@grs& (0+255),b
  5171  003480  0E00               	movlw	0
  5172  003482  6F8B               	movwf	(sqrt@grs+1)& (0+255),b
  5173  003484  0E00               	movlw	0
  5174  003486  6F8C               	movwf	(sqrt@grs+2)& (0+255),b
  5175  003488  0E01               	movlw	1
  5176  00348A  6F8D               	movwf	(sqrt@grs+3)& (0+255),b
  5177                           
  5178                           ; BSR set to: 1
  5179  00348C  0101               	movlb	1	; () banked
  5180  00348E  5189               	movf	sqrt@p& (0+255),w,b
  5181  003490  0101               	movlb	1	; () banked
  5182  003492  B4D8               	btfsc	status,2,c
  5183  003494  D006               	goto	l6741
  5184                           
  5185                           ; BSR set to: 1
  5186  003496  0101               	movlb	1	; () banked
  5187  003498  90D8               	bcf	status,0,c
  5188  00349A  3785               	rlcf	sqrt@tfrac& (0+255),f,b
  5189  00349C  3786               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  5190  00349E  3787               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  5191  0034A0  3788               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  5192  0034A2                     l6741:
  5193                           
  5194                           ; BSR set to: 1
  5195  0034A2  0E00               	movlw	0
  5196  0034A4  0101               	movlb	1	; () banked
  5197  0034A6  6F84               	movwf	sqrt@i& (0+255),b
  5198  0034A8  D07E               	goto	l6755
  5199  0034AA                     l6743:
  5200                           
  5201                           ; BSR set to: 1
  5202  0034AA  0101               	movlb	1	; () banked
  5203  0034AC  518A               	movf	sqrt@grs& (0+255),w,b
  5204  0034AE  0101               	movlb	1	; () banked
  5205  0034B0  1394               	iorwf	sqrt@frac& (0+255),f,b
  5206  0034B2  0101               	movlb	1	; () banked
  5207  0034B4  518B               	movf	(sqrt@grs+1)& (0+255),w,b
  5208  0034B6  0101               	movlb	1	; () banked
  5209  0034B8  1395               	iorwf	(sqrt@frac+1)& (0+255),f,b
  5210  0034BA  0101               	movlb	1	; () banked
  5211  0034BC  518C               	movf	(sqrt@grs+2)& (0+255),w,b
  5212  0034BE  0101               	movlb	1	; () banked
  5213  0034C0  1396               	iorwf	(sqrt@frac+2)& (0+255),f,b
  5214  0034C2  0101               	movlb	1	; () banked
  5215  0034C4  518D               	movf	(sqrt@grs+3)& (0+255),w,b
  5216  0034C6  0101               	movlb	1	; () banked
  5217  0034C8  1397               	iorwf	(sqrt@frac+3)& (0+255),f,b
  5218  0034CA  0101               	movlb	1	; () banked
  5219  0034CC  5194               	movf	sqrt@frac& (0+255),w,b
  5220  0034CE  0101               	movlb	1	; () banked
  5221  0034D0  5D85               	subwf	sqrt@tfrac& (0+255),w,b
  5222  0034D2  0101               	movlb	1	; () banked
  5223  0034D4  5195               	movf	(sqrt@frac+1)& (0+255),w,b
  5224  0034D6  0101               	movlb	1	; () banked
  5225  0034D8  5986               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
  5226  0034DA  0101               	movlb	1	; () banked
  5227  0034DC  5196               	movf	(sqrt@frac+2)& (0+255),w,b
  5228  0034DE  0101               	movlb	1	; () banked
  5229  0034E0  5987               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
  5230  0034E2  0101               	movlb	1	; () banked
  5231  0034E4  5197               	movf	(sqrt@frac+3)& (0+255),w,b
  5232  0034E6  0101               	movlb	1	; () banked
  5233  0034E8  5988               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
  5234  0034EA  A0D8               	btfss	status,0,c
  5235  0034EC  D021               	goto	l6747
  5236                           
  5237                           ; BSR set to: 1
  5238  0034EE  0101               	movlb	1	; () banked
  5239  0034F0  5194               	movf	sqrt@frac& (0+255),w,b
  5240  0034F2  0101               	movlb	1	; () banked
  5241  0034F4  5F85               	subwf	sqrt@tfrac& (0+255),f,b
  5242  0034F6  0101               	movlb	1	; () banked
  5243  0034F8  5195               	movf	(sqrt@frac+1)& (0+255),w,b
  5244  0034FA  0101               	movlb	1	; () banked
  5245  0034FC  5B86               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
  5246  0034FE  0101               	movlb	1	; () banked
  5247  003500  5196               	movf	(sqrt@frac+2)& (0+255),w,b
  5248  003502  0101               	movlb	1	; () banked
  5249  003504  5B87               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
  5250  003506  0101               	movlb	1	; () banked
  5251  003508  5197               	movf	(sqrt@frac+3)& (0+255),w,b
  5252  00350A  0101               	movlb	1	; () banked
  5253  00350C  5B88               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
  5254  00350E  0101               	movlb	1	; () banked
  5255  003510  518A               	movf	sqrt@grs& (0+255),w,b
  5256  003512  0101               	movlb	1	; () banked
  5257  003514  2794               	addwf	sqrt@frac& (0+255),f,b
  5258  003516  0101               	movlb	1	; () banked
  5259  003518  518B               	movf	(sqrt@grs+1)& (0+255),w,b
  5260  00351A  0101               	movlb	1	; () banked
  5261  00351C  2395               	addwfc	(sqrt@frac+1)& (0+255),f,b
  5262  00351E  0101               	movlb	1	; () banked
  5263  003520  518C               	movf	(sqrt@grs+2)& (0+255),w,b
  5264  003522  0101               	movlb	1	; () banked
  5265  003524  2396               	addwfc	(sqrt@frac+2)& (0+255),f,b
  5266  003526  0101               	movlb	1	; () banked
  5267  003528  518D               	movf	(sqrt@grs+3)& (0+255),w,b
  5268  00352A  0101               	movlb	1	; () banked
  5269  00352C  2397               	addwfc	(sqrt@frac+3)& (0+255),f,b
  5270  00352E  D01D               	goto	l6749
  5271  003530                     l6747:
  5272                           
  5273                           ; BSR set to: 1
  5274  003530  C18A  F0C5         	movff	sqrt@grs,??_sqrt
  5275  003534  C18B  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  5276  003538  C18C  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  5277  00353C  C18D  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  5278  003540  0100               	movlb	0	; () banked
  5279  003542  1FC5               	comf	??_sqrt& (0+255),f,b
  5280  003544  1FC6               	comf	(??_sqrt+1)& (0+255),f,b
  5281  003546  1FC7               	comf	(??_sqrt+2)& (0+255),f,b
  5282  003548  1FC8               	comf	(??_sqrt+3)& (0+255),f,b
  5283  00354A  0100               	movlb	0	; () banked
  5284  00354C  51C5               	movf	??_sqrt& (0+255),w,b
  5285  00354E  0101               	movlb	1	; () banked
  5286  003550  1794               	andwf	sqrt@frac& (0+255),f,b
  5287  003552  0100               	movlb	0	; () banked
  5288  003554  51C6               	movf	(??_sqrt+1)& (0+255),w,b
  5289  003556  0101               	movlb	1	; () banked
  5290  003558  1795               	andwf	(sqrt@frac+1)& (0+255),f,b
  5291  00355A  0100               	movlb	0	; () banked
  5292  00355C  51C7               	movf	(??_sqrt+2)& (0+255),w,b
  5293  00355E  0101               	movlb	1	; () banked
  5294  003560  1796               	andwf	(sqrt@frac+2)& (0+255),f,b
  5295  003562  0100               	movlb	0	; () banked
  5296  003564  51C8               	movf	(??_sqrt+3)& (0+255),w,b
  5297  003566  0101               	movlb	1	; () banked
  5298  003568  1797               	andwf	(sqrt@frac+3)& (0+255),f,b
  5299  00356A                     l6749:
  5300                           
  5301                           ; BSR set to: 1
  5302  00356A  C18A  F0C5         	movff	sqrt@grs,??_sqrt
  5303  00356E  C18B  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  5304  003572  C18C  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  5305  003576  C18D  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  5306  00357A  0100               	movlb	0	; () banked
  5307  00357C  90D8               	bcf	status,0,c
  5308  00357E  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  5309  003580  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  5310  003582  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  5311  003584  33C5               	rrcf	??_sqrt& (0+255),f,b
  5312  003586  C0C5  F18A         	movff	??_sqrt,sqrt@grs
  5313  00358A  C0C6  F18B         	movff	??_sqrt+1,sqrt@grs+1
  5314  00358E  C0C7  F18C         	movff	??_sqrt+2,sqrt@grs+2
  5315  003592  C0C8  F18D         	movff	??_sqrt+3,sqrt@grs+3
  5316                           
  5317                           ; BSR set to: 0
  5318  003596  0101               	movlb	1	; () banked
  5319  003598  90D8               	bcf	status,0,c
  5320  00359A  3785               	rlcf	sqrt@tfrac& (0+255),f,b
  5321  00359C  3786               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  5322  00359E  3787               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  5323  0035A0  3788               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  5324                           
  5325                           ; BSR set to: 1
  5326  0035A2  0101               	movlb	1	; () banked
  5327  0035A4  2B84               	incf	sqrt@i& (0+255),f,b
  5328  0035A6                     l6755:
  5329                           
  5330                           ; BSR set to: 1
  5331  0035A6  0E18               	movlw	24
  5332  0035A8  0101               	movlb	1	; () banked
  5333  0035AA  6584               	cpfsgt	sqrt@i& (0+255),b
  5334  0035AC  D77E               	goto	l6743
  5335                           
  5336                           ; BSR set to: 1
  5337                           
  5338                           ; BSR set to: 1
  5339  0035AE  C194  F0C5         	movff	sqrt@frac,??_sqrt
  5340  0035B2  C195  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  5341  0035B6  C196  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  5342  0035BA  C197  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  5343  0035BE  0100               	movlb	0	; () banked
  5344  0035C0  90D8               	bcf	status,0,c
  5345  0035C2  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  5346  0035C4  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  5347  0035C6  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  5348  0035C8  33C5               	rrcf	??_sqrt& (0+255),f,b
  5349  0035CA  C0C5  F194         	movff	??_sqrt,sqrt@frac
  5350  0035CE  C0C6  F195         	movff	??_sqrt+1,sqrt@frac+1
  5351  0035D2  C0C7  F196         	movff	??_sqrt+2,sqrt@frac+2
  5352  0035D6  C0C8  F197         	movff	??_sqrt+3,sqrt@frac+3
  5353                           
  5354                           ; BSR set to: 0
  5355  0035DA  0E01               	movlw	1
  5356  0035DC  0101               	movlb	1	; () banked
  5357  0035DE  1594               	andwf	sqrt@frac& (0+255),w,b
  5358  0035E0  0101               	movlb	1	; () banked
  5359  0035E2  6F8A               	movwf	sqrt@grs& (0+255),b
  5360  0035E4  0E00               	movlw	0
  5361  0035E6  0101               	movlb	1	; () banked
  5362  0035E8  1595               	andwf	(sqrt@frac+1)& (0+255),w,b
  5363  0035EA  0101               	movlb	1	; () banked
  5364  0035EC  6F8B               	movwf	(sqrt@grs+1)& (0+255),b
  5365  0035EE  0E00               	movlw	0
  5366  0035F0  0101               	movlb	1	; () banked
  5367  0035F2  1596               	andwf	(sqrt@frac+2)& (0+255),w,b
  5368  0035F4  0101               	movlb	1	; () banked
  5369  0035F6  6F8C               	movwf	(sqrt@grs+2)& (0+255),b
  5370  0035F8  0E00               	movlw	0
  5371  0035FA  0101               	movlb	1	; () banked
  5372  0035FC  1597               	andwf	(sqrt@frac+3)& (0+255),w,b
  5373  0035FE  0101               	movlb	1	; () banked
  5374  003600  6F8D               	movwf	(sqrt@grs+3)& (0+255),b
  5375                           
  5376                           ; BSR set to: 1
  5377  003602  C194  F0C5         	movff	sqrt@frac,??_sqrt
  5378  003606  C195  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  5379  00360A  C196  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  5380  00360E  C197  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  5381  003612  0100               	movlb	0	; () banked
  5382  003614  90D8               	bcf	status,0,c
  5383  003616  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  5384  003618  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  5385  00361A  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  5386  00361C  33C5               	rrcf	??_sqrt& (0+255),f,b
  5387  00361E  C0C5  F194         	movff	??_sqrt,sqrt@frac
  5388  003622  C0C6  F195         	movff	??_sqrt+1,sqrt@frac+1
  5389  003626  C0C7  F196         	movff	??_sqrt+2,sqrt@frac+2
  5390  00362A  C0C8  F197         	movff	??_sqrt+3,sqrt@frac+3
  5391  00362E  0101               	movlb	1	; () banked
  5392  003630  518A               	movf	sqrt@grs& (0+255),w,b
  5393  003632  0101               	movlb	1	; () banked
  5394  003634  2794               	addwf	sqrt@frac& (0+255),f,b
  5395  003636  0101               	movlb	1	; () banked
  5396  003638  518B               	movf	(sqrt@grs+1)& (0+255),w,b
  5397  00363A  0101               	movlb	1	; () banked
  5398  00363C  2395               	addwfc	(sqrt@frac+1)& (0+255),f,b
  5399  00363E  0101               	movlb	1	; () banked
  5400  003640  518C               	movf	(sqrt@grs+2)& (0+255),w,b
  5401  003642  0101               	movlb	1	; () banked
  5402  003644  2396               	addwfc	(sqrt@frac+2)& (0+255),f,b
  5403  003646  0101               	movlb	1	; () banked
  5404  003648  518D               	movf	(sqrt@grs+3)& (0+255),w,b
  5405  00364A  0101               	movlb	1	; () banked
  5406  00364C  2397               	addwfc	(sqrt@frac+3)& (0+255),f,b
  5407                           
  5408                           ; BSR set to: 1
  5409  00364E  0101               	movlb	1	; () banked
  5410  003650  A197               	btfss	(sqrt@frac+3)& (0+255),0,b
  5411  003652  D019               	goto	l6767
  5412                           
  5413                           ; BSR set to: 1
  5414  003654  C194  F0C5         	movff	sqrt@frac,??_sqrt
  5415  003658  C195  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  5416  00365C  C196  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  5417  003660  C197  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  5418  003664  0100               	movlb	0	; () banked
  5419  003666  90D8               	bcf	status,0,c
  5420  003668  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  5421  00366A  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  5422  00366C  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  5423  00366E  33C5               	rrcf	??_sqrt& (0+255),f,b
  5424  003670  C0C5  F194         	movff	??_sqrt,sqrt@frac
  5425  003674  C0C6  F195         	movff	??_sqrt+1,sqrt@frac+1
  5426  003678  C0C7  F196         	movff	??_sqrt+2,sqrt@frac+2
  5427  00367C  C0C8  F197         	movff	??_sqrt+3,sqrt@frac+3
  5428  003680  0101               	movlb	1	; () banked
  5429  003682  4B8E               	infsnz	sqrt@exp& (0+255),f,b
  5430  003684  2B8F               	incf	(sqrt@exp+1)& (0+255),f,b
  5431  003686                     l6767:
  5432                           
  5433                           ; BSR set to: 1
  5434  003686  0EFF               	movlw	255
  5435  003688  0101               	movlb	1	; () banked
  5436  00368A  1594               	andwf	sqrt@frac& (0+255),w,b
  5437  00368C  0101               	movlb	1	; () banked
  5438  00368E  6F90               	movwf	sqrt@root& (0+255),b
  5439  003690  0EFF               	movlw	255
  5440  003692  0101               	movlb	1	; () banked
  5441  003694  1595               	andwf	(sqrt@frac+1)& (0+255),w,b
  5442  003696  0101               	movlb	1	; () banked
  5443  003698  6F91               	movwf	(sqrt@root+1)& (0+255),b
  5444  00369A  0E7F               	movlw	127
  5445  00369C  0101               	movlb	1	; () banked
  5446  00369E  1596               	andwf	(sqrt@frac+2)& (0+255),w,b
  5447  0036A0  0101               	movlb	1	; () banked
  5448  0036A2  6F92               	movwf	(sqrt@root+2)& (0+255),b
  5449  0036A4  0E00               	movlw	0
  5450  0036A6  0101               	movlb	1	; () banked
  5451  0036A8  1597               	andwf	(sqrt@frac+3)& (0+255),w,b
  5452  0036AA  0101               	movlb	1	; () banked
  5453  0036AC  6F93               	movwf	(sqrt@root+3)& (0+255),b
  5454                           
  5455                           ; BSR set to: 1
  5456  0036AE  C18E  F189         	movff	sqrt@exp,sqrt@p
  5457                           
  5458                           ; BSR set to: 1
  5459  0036B2  0101               	movlb	1	; () banked
  5460  0036B4  A189               	btfss	sqrt@p& (0+255),0,b
  5461  0036B6  D002               	goto	l6775
  5462                           
  5463                           ; BSR set to: 1
  5464  0036B8  0101               	movlb	1	; () banked
  5465  0036BA  8F92               	bsf	(sqrt@root+2)& (0+255),7,b
  5466  0036BC                     l6775:
  5467                           
  5468                           ; BSR set to: 1
  5469  0036BC  0101               	movlb	1	; () banked
  5470  0036BE  90D8               	bcf	status,0,c
  5471  0036C0  3189               	rrcf	sqrt@p& (0+255),w,b
  5472  0036C2  0101               	movlb	1	; () banked
  5473  0036C4  6F93               	movwf	(sqrt@root+3)& (0+255),b
  5474                           
  5475                           ; BSR set to: 1
  5476  0036C6  0101               	movlb	1	; () banked
  5477  0036C8  9F93               	bcf	(sqrt@root+3)& (0+255),7,b
  5478                           
  5479                           ; BSR set to: 1
  5480  0036CA  C190  F0C1         	movff	sqrt@root,?_sqrt
  5481  0036CE  C191  F0C2         	movff	sqrt@root+1,?_sqrt+1
  5482  0036D2  C192  F0C3         	movff	sqrt@root+2,?_sqrt+2
  5483  0036D6  C193  F0C4         	movff	sqrt@root+3,?_sqrt+3
  5484  0036DA  0012               	return	
  5485  0036DC                     __end_of_sqrt:
  5486                           	opt stack 0
  5487                           tblptru	equ	0xFF8
  5488                           tblptrh	equ	0xFF7
  5489                           tblptrl	equ	0xFF6
  5490                           tablat	equ	0xFF5
  5491                           postinc0	equ	0xFEE
  5492                           wreg	equ	0xFE8
  5493                           postdec1	equ	0xFE5
  5494                           fsr1l	equ	0xFE1
  5495                           postinc2	equ	0xFDE
  5496                           postdec2	equ	0xFDD
  5497                           fsr2h	equ	0xFDA
  5498                           fsr2l	equ	0xFD9
  5499                           status	equ	0xFD8
  5500                           
  5501 ;; *************** function _atan *****************
  5502 ;; Defined at:
  5503 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atan.c"
  5504 ;; Parameters:    Size  Location     Type
  5505 ;;  f               4  113[BANK0 ] unsigned char 
  5506 ;; Auto vars:     Size  Location     Type
  5507 ;;  val             4   13[BANK1 ] unsigned char 
  5508 ;;  val_squared     4    9[BANK1 ] unsigned char 
  5509 ;;  x               4    4[BANK1 ] unsigned char 
  5510 ;;  y               4    0[BANK1 ] unsigned char 
  5511 ;;  recip           1    8[BANK1 ] unsigned char 
  5512 ;; Return value:  Size  Location     Type
  5513 ;;                  4  113[BANK0 ] unsigned char 
  5514 ;; Registers used:
  5515 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5516 ;; Tracked objects:
  5517 ;;		On entry : 0/0
  5518 ;;		On exit  : 0/0
  5519 ;;		Unchanged: 0/0
  5520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5521 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5522 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  5523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5524 ;;      Totals:         0       4      17       0       0       0       0       0       0       0       0       0       
      +0       0
  5525 ;;Total ram usage:       21 bytes
  5526 ;; Hardware stack levels used:    1
  5527 ;; Hardware stack levels required when called:    6
  5528 ;; This function calls:
  5529 ;;		___fladd
  5530 ;;		___fldiv
  5531 ;;		___flge
  5532 ;;		___flmul
  5533 ;;		___flneg
  5534 ;;		_eval_poly
  5535 ;;		_fabs
  5536 ;; This function is called by:
  5537 ;;		_asin
  5538 ;; This function uses a non-reentrant model
  5539 ;;
  5540                           
  5541                           	psect	text15
  5542  0049CE                     __ptext15:
  5543                           	opt stack 0
  5544  0049CE                     _atan:
  5545                           	opt stack 21
  5546                           
  5547                           ;incstack = 0
  5548  0049CE  C0D1  F0AD         	movff	atan@f,fabs@d
  5549  0049D2  C0D2  F0AE         	movff	atan@f+1,fabs@d+1
  5550  0049D6  C0D3  F0AF         	movff	atan@f+2,fabs@d+2
  5551  0049DA  C0D4  F0B0         	movff	atan@f+3,fabs@d+3
  5552  0049DE  EC05  F02E         	call	_fabs	;wreg free
  5553  0049E2  C0AD  F190         	movff	?_fabs,atan@val
  5554  0049E6  C0AE  F191         	movff	?_fabs+1,atan@val+1
  5555  0049EA  C0AF  F192         	movff	?_fabs+2,atan@val+2
  5556  0049EE  C0B0  F193         	movff	?_fabs+3,atan@val+3
  5557  0049F2  0101               	movlb	1	; () banked
  5558  0049F4  5190               	movf	atan@val& (0+255),w,b
  5559  0049F6  0101               	movlb	1	; () banked
  5560  0049F8  1191               	iorwf	(atan@val+1)& (0+255),w,b
  5561  0049FA  0101               	movlb	1	; () banked
  5562  0049FC  1192               	iorwf	(atan@val+2)& (0+255),w,b
  5563  0049FE  0101               	movlb	1	; () banked
  5564  004A00  1193               	iorwf	(atan@val+3)& (0+255),w,b
  5565  004A02  A4D8               	btfss	status,2,c
  5566  004A04  D00A               	goto	l6789
  5567                           
  5568                           ; BSR set to: 1
  5569  004A06  0E00               	movlw	0
  5570  004A08  0100               	movlb	0	; () banked
  5571  004A0A  6FD1               	movwf	?_atan& (0+255),b
  5572  004A0C  0E00               	movlw	0
  5573  004A0E  6FD2               	movwf	(?_atan+1)& (0+255),b
  5574  004A10  0E00               	movlw	0
  5575  004A12  6FD3               	movwf	(?_atan+2)& (0+255),b
  5576  004A14  0E00               	movlw	0
  5577  004A16  6FD4               	movwf	(?_atan+3)& (0+255),b
  5578                           
  5579                           ; BSR set to: 0
  5580  004A18  0012               	return	
  5581  004A1A                     l6789:
  5582  004A1A  0E00               	movlw	0
  5583  004A1C  0100               	movlb	0	; () banked
  5584  004A1E  6FB1               	movwf	___flge@ff1& (0+255),b
  5585  004A20  0E00               	movlw	0
  5586  004A22  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  5587  004A24  0E80               	movlw	128
  5588  004A26  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  5589  004A28  0E3F               	movlw	63
  5590  004A2A  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  5591  004A2C  C190  F0B5         	movff	atan@val,___flge@ff2
  5592  004A30  C191  F0B6         	movff	atan@val+1,___flge@ff2+1
  5593  004A34  C192  F0B7         	movff	atan@val+2,___flge@ff2+2
  5594  004A38  C193  F0B8         	movff	atan@val+3,___flge@ff2+3
  5595  004A3C  ECAE  F028         	call	___flge	;wreg free
  5596  004A40  0100               	movlb	0	; () banked
  5597  004A42  B0D8               	btfsc	status,0,c
  5598  004A44  D002               	goto	u8550
  5599  004A46  0E01               	movlw	1
  5600  004A48  D001               	goto	u8560
  5601  004A4A                     u8550:
  5602  004A4A  0E00               	movlw	0
  5603  004A4C                     u8560:
  5604  004A4C  0101               	movlb	1	; () banked
  5605  004A4E  6F8B               	movwf	atan@recip& (0+255),b
  5606  004A50  0101               	movlb	1	; () banked
  5607  004A52  518B               	movf	atan@recip& (0+255),w,b
  5608  004A54  B4D8               	btfsc	status,2,c
  5609  004A56  D01B               	goto	l6793
  5610                           
  5611                           ; BSR set to: 1
  5612  004A58  0E00               	movlw	0
  5613  004A5A  0100               	movlb	0	; () banked
  5614  004A5C  6F77               	movwf	___fldiv@b& (0+255),b
  5615  004A5E  0E00               	movlw	0
  5616  004A60  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  5617  004A62  0E80               	movlw	128
  5618  004A64  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  5619  004A66  0E3F               	movlw	63
  5620  004A68  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  5621  004A6A  C190  F07B         	movff	atan@val,___fldiv@a
  5622  004A6E  C191  F07C         	movff	atan@val+1,___fldiv@a+1
  5623  004A72  C192  F07D         	movff	atan@val+2,___fldiv@a+2
  5624  004A76  C193  F07E         	movff	atan@val+3,___fldiv@a+3
  5625  004A7A  EC6E  F01B         	call	___fldiv	;wreg free
  5626  004A7E  C077  F190         	movff	?___fldiv,atan@val
  5627  004A82  C078  F191         	movff	?___fldiv+1,atan@val+1
  5628  004A86  C079  F192         	movff	?___fldiv+2,atan@val+2
  5629  004A8A  C07A  F193         	movff	?___fldiv+3,atan@val+3
  5630  004A8E                     l6793:
  5631  004A8E  C190  F090         	movff	atan@val,___flmul@b
  5632  004A92  C191  F091         	movff	atan@val+1,___flmul@b+1
  5633  004A96  C192  F092         	movff	atan@val+2,___flmul@b+2
  5634  004A9A  C193  F093         	movff	atan@val+3,___flmul@b+3
  5635  004A9E  C190  F094         	movff	atan@val,___flmul@a
  5636  004AA2  C191  F095         	movff	atan@val+1,___flmul@a+1
  5637  004AA6  C192  F096         	movff	atan@val+2,___flmul@a+2
  5638  004AAA  C193  F097         	movff	atan@val+3,___flmul@a+3
  5639  004AAE  EC36  F017         	call	___flmul	;wreg free
  5640  004AB2  C090  F18C         	movff	?___flmul,atan@val_squared
  5641  004AB6  C091  F18D         	movff	?___flmul+1,atan@val_squared+1
  5642  004ABA  C092  F18E         	movff	?___flmul+2,atan@val_squared+2
  5643  004ABE  C093  F18F         	movff	?___flmul+3,atan@val_squared+3
  5644  004AC2  C18C  F0C1         	movff	atan@val_squared,eval_poly@x
  5645  004AC6  C18D  F0C2         	movff	atan@val_squared+1,eval_poly@x+1
  5646  004ACA  C18E  F0C3         	movff	atan@val_squared+2,eval_poly@x+2
  5647  004ACE  C18F  F0C4         	movff	atan@val_squared+3,eval_poly@x+3
  5648  004AD2  0E19               	movlw	low atan@coeff_b
  5649  004AD4  0100               	movlb	0	; () banked
  5650  004AD6  6FC5               	movwf	eval_poly@d& (0+255),b
  5651  004AD8  0E0D               	movlw	high atan@coeff_b
  5652  004ADA  0100               	movlb	0	; () banked
  5653  004ADC  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  5654  004ADE  0E00               	movlw	0
  5655  004AE0  0100               	movlb	0	; () banked
  5656  004AE2  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  5657  004AE4  0E04               	movlw	4
  5658  004AE6  6FC7               	movwf	eval_poly@n& (0+255),b
  5659  004AE8  ECA3  F02A         	call	_eval_poly	;wreg free
  5660  004AEC  C0C1  F183         	movff	?_eval_poly,atan@y
  5661  004AF0  C0C2  F184         	movff	?_eval_poly+1,atan@y+1
  5662  004AF4  C0C3  F185         	movff	?_eval_poly+2,atan@y+2
  5663  004AF8  C0C4  F186         	movff	?_eval_poly+3,atan@y+3
  5664  004AFC  C18C  F0C1         	movff	atan@val_squared,eval_poly@x
  5665  004B00  C18D  F0C2         	movff	atan@val_squared+1,eval_poly@x+1
  5666  004B04  C18E  F0C3         	movff	atan@val_squared+2,eval_poly@x+2
  5667  004B08  C18F  F0C4         	movff	atan@val_squared+3,eval_poly@x+3
  5668  004B0C  0E01               	movlw	low atan@coeff_a
  5669  004B0E  0100               	movlb	0	; () banked
  5670  004B10  6FC5               	movwf	eval_poly@d& (0+255),b
  5671  004B12  0E0D               	movlw	high atan@coeff_a
  5672  004B14  0100               	movlb	0	; () banked
  5673  004B16  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  5674  004B18  0E00               	movlw	0
  5675  004B1A  0100               	movlb	0	; () banked
  5676  004B1C  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  5677  004B1E  0E05               	movlw	5
  5678  004B20  6FC7               	movwf	eval_poly@n& (0+255),b
  5679  004B22  ECA3  F02A         	call	_eval_poly	;wreg free
  5680  004B26  C0C1  F187         	movff	?_eval_poly,atan@x
  5681  004B2A  C0C2  F188         	movff	?_eval_poly+1,atan@x+1
  5682  004B2E  C0C3  F189         	movff	?_eval_poly+2,atan@x+2
  5683  004B32  C0C4  F18A         	movff	?_eval_poly+3,atan@x+3
  5684  004B36  C190  F090         	movff	atan@val,___flmul@b
  5685  004B3A  C191  F091         	movff	atan@val+1,___flmul@b+1
  5686  004B3E  C192  F092         	movff	atan@val+2,___flmul@b+2
  5687  004B42  C193  F093         	movff	atan@val+3,___flmul@b+3
  5688  004B46  C183  F07B         	movff	atan@y,___fldiv@a
  5689  004B4A  C184  F07C         	movff	atan@y+1,___fldiv@a+1
  5690  004B4E  C185  F07D         	movff	atan@y+2,___fldiv@a+2
  5691  004B52  C186  F07E         	movff	atan@y+3,___fldiv@a+3
  5692  004B56  C187  F077         	movff	atan@x,___fldiv@b
  5693  004B5A  C188  F078         	movff	atan@x+1,___fldiv@b+1
  5694  004B5E  C189  F079         	movff	atan@x+2,___fldiv@b+2
  5695  004B62  C18A  F07A         	movff	atan@x+3,___fldiv@b+3
  5696  004B66  EC6E  F01B         	call	___fldiv	;wreg free
  5697  004B6A  C077  F094         	movff	?___fldiv,___flmul@a
  5698  004B6E  C078  F095         	movff	?___fldiv+1,___flmul@a+1
  5699  004B72  C079  F096         	movff	?___fldiv+2,___flmul@a+2
  5700  004B76  C07A  F097         	movff	?___fldiv+3,___flmul@a+3
  5701  004B7A  EC36  F017         	call	___flmul	;wreg free
  5702  004B7E  C090  F190         	movff	?___flmul,atan@val
  5703  004B82  C091  F191         	movff	?___flmul+1,atan@val+1
  5704  004B86  C092  F192         	movff	?___flmul+2,atan@val+2
  5705  004B8A  C093  F193         	movff	?___flmul+3,atan@val+3
  5706  004B8E  0101               	movlb	1	; () banked
  5707  004B90  518B               	movf	atan@recip& (0+255),w,b
  5708  004B92  0101               	movlb	1	; () banked
  5709  004B94  B4D8               	btfsc	status,2,c
  5710  004B96  D025               	goto	l6805
  5711                           
  5712                           ; BSR set to: 1
  5713  004B98  C190  F0A9         	movff	atan@val,___flneg@f1
  5714  004B9C  C191  F0AA         	movff	atan@val+1,___flneg@f1+1
  5715  004BA0  C192  F0AB         	movff	atan@val+2,___flneg@f1+2
  5716  004BA4  C193  F0AC         	movff	atan@val+3,___flneg@f1+3
  5717  004BA8  EC41  F02E         	call	___flneg	;wreg free
  5718  004BAC  C0A9  F0AD         	movff	?___flneg,___fladd@b
  5719  004BB0  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  5720  004BB4  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  5721  004BB8  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  5722  004BBC  0EDB               	movlw	219
  5723  004BBE  0100               	movlb	0	; () banked
  5724  004BC0  6FB1               	movwf	___fladd@a& (0+255),b
  5725  004BC2  0E0F               	movlw	15
  5726  004BC4  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  5727  004BC6  0EC9               	movlw	201
  5728  004BC8  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  5729  004BCA  0E3F               	movlw	63
  5730  004BCC  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  5731  004BCE  ECE2  F014         	call	___fladd	;wreg free
  5732  004BD2  C0AD  F190         	movff	?___fladd,atan@val
  5733  004BD6  C0AE  F191         	movff	?___fladd+1,atan@val+1
  5734  004BDA  C0AF  F192         	movff	?___fladd+2,atan@val+2
  5735  004BDE  C0B0  F193         	movff	?___fladd+3,atan@val+3
  5736  004BE2                     l6805:
  5737  004BE2  0100               	movlb	0	; () banked
  5738  004BE4  BFD4               	btfsc	(atan@f+3)& (0+255),7,b
  5739  004BE6  D009               	goto	l6809
  5740                           
  5741                           ; BSR set to: 0
  5742  004BE8  C190  F0D1         	movff	atan@val,?_atan
  5743  004BEC  C191  F0D2         	movff	atan@val+1,?_atan+1
  5744  004BF0  C192  F0D3         	movff	atan@val+2,?_atan+2
  5745  004BF4  C193  F0D4         	movff	atan@val+3,?_atan+3
  5746  004BF8  0012               	return	
  5747  004BFA                     l6809:
  5748                           
  5749                           ; BSR set to: 0
  5750  004BFA  C190  F0A9         	movff	atan@val,___flneg@f1
  5751  004BFE  C191  F0AA         	movff	atan@val+1,___flneg@f1+1
  5752  004C02  C192  F0AB         	movff	atan@val+2,___flneg@f1+2
  5753  004C06  C193  F0AC         	movff	atan@val+3,___flneg@f1+3
  5754  004C0A  EC41  F02E         	call	___flneg	;wreg free
  5755  004C0E  C0A9  F0D1         	movff	?___flneg,?_atan
  5756  004C12  C0AA  F0D2         	movff	?___flneg+1,?_atan+1
  5757  004C16  C0AB  F0D3         	movff	?___flneg+2,?_atan+2
  5758  004C1A  C0AC  F0D4         	movff	?___flneg+3,?_atan+3
  5759  004C1E  0012               	return	
  5760  004C20                     __end_of_atan:
  5761                           	opt stack 0
  5762                           tblptru	equ	0xFF8
  5763                           tblptrh	equ	0xFF7
  5764                           tblptrl	equ	0xFF6
  5765                           tablat	equ	0xFF5
  5766                           postinc0	equ	0xFEE
  5767                           wreg	equ	0xFE8
  5768                           postdec1	equ	0xFE5
  5769                           fsr1l	equ	0xFE1
  5770                           postinc2	equ	0xFDE
  5771                           postdec2	equ	0xFDD
  5772                           fsr2h	equ	0xFDA
  5773                           fsr2l	equ	0xFD9
  5774                           status	equ	0xFD8
  5775                           
  5776 ;; *************** function _fabs *****************
  5777 ;; Defined at:
  5778 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fabs.c"
  5779 ;; Parameters:    Size  Location     Type
  5780 ;;  d               4   77[BANK0 ] unsigned char 
  5781 ;; Auto vars:     Size  Location     Type
  5782 ;;		None
  5783 ;; Return value:  Size  Location     Type
  5784 ;;                  4   77[BANK0 ] unsigned char 
  5785 ;; Registers used:
  5786 ;;		wreg, status,2, status,0, cstack
  5787 ;; Tracked objects:
  5788 ;;		On entry : 0/0
  5789 ;;		On exit  : 0/0
  5790 ;;		Unchanged: 0/0
  5791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5792 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5795 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5796 ;;Total ram usage:        4 bytes
  5797 ;; Hardware stack levels used:    1
  5798 ;; Hardware stack levels required when called:    5
  5799 ;; This function calls:
  5800 ;;		___flneg
  5801 ;; This function is called by:
  5802 ;;		_asin
  5803 ;;		_atan
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806                           
  5807                           	psect	text16
  5808  005C0A                     __ptext16:
  5809                           	opt stack 0
  5810  005C0A                     _fabs:
  5811                           	opt stack 22
  5812                           
  5813                           ;incstack = 0
  5814  005C0A  0100               	movlb	0	; () banked
  5815  005C0C  AFB0               	btfss	(fabs@d+3)& (0+255),7,b
  5816  005C0E  D013               	goto	l1049
  5817                           
  5818                           ; BSR set to: 0
  5819  005C10  C0AD  F0A9         	movff	fabs@d,___flneg@f1
  5820  005C14  C0AE  F0AA         	movff	fabs@d+1,___flneg@f1+1
  5821  005C18  C0AF  F0AB         	movff	fabs@d+2,___flneg@f1+2
  5822  005C1C  C0B0  F0AC         	movff	fabs@d+3,___flneg@f1+3
  5823  005C20  EC41  F02E         	call	___flneg	;wreg free
  5824  005C24  C0A9  F0AD         	movff	?___flneg,?_fabs
  5825  005C28  C0AA  F0AE         	movff	?___flneg+1,?_fabs+1
  5826  005C2C  C0AB  F0AF         	movff	?___flneg+2,?_fabs+2
  5827  005C30  C0AC  F0B0         	movff	?___flneg+3,?_fabs+3
  5828  005C34  0012               	return	
  5829  005C36                     l1049:
  5830                           
  5831                           ; BSR set to: 0
  5832  005C36  C0AD  F0AD         	movff	fabs@d,?_fabs
  5833  005C3A  C0AE  F0AE         	movff	fabs@d+1,?_fabs+1
  5834  005C3E  C0AF  F0AF         	movff	fabs@d+2,?_fabs+2
  5835  005C42  C0B0  F0B0         	movff	fabs@d+3,?_fabs+3
  5836  005C46  0012               	return		;funcret
  5837  005C48                     __end_of_fabs:
  5838                           	opt stack 0
  5839                           tblptru	equ	0xFF8
  5840                           tblptrh	equ	0xFF7
  5841                           tblptrl	equ	0xFF6
  5842                           tablat	equ	0xFF5
  5843                           postinc0	equ	0xFEE
  5844                           wreg	equ	0xFE8
  5845                           postdec1	equ	0xFE5
  5846                           fsr1l	equ	0xFE1
  5847                           postinc2	equ	0xFDE
  5848                           postdec2	equ	0xFDD
  5849                           fsr2h	equ	0xFDA
  5850                           fsr2l	equ	0xFD9
  5851                           status	equ	0xFD8
  5852                           
  5853 ;; *************** function ___flneg *****************
  5854 ;; Defined at:
  5855 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  5856 ;; Parameters:    Size  Location     Type
  5857 ;;  f1              4   73[BANK0 ] unsigned char 
  5858 ;; Auto vars:     Size  Location     Type
  5859 ;;		None
  5860 ;; Return value:  Size  Location     Type
  5861 ;;                  4   73[BANK0 ] unsigned char 
  5862 ;; Registers used:
  5863 ;;		wreg, status,2, status,0
  5864 ;; Tracked objects:
  5865 ;;		On entry : 0/0
  5866 ;;		On exit  : 0/0
  5867 ;;		Unchanged: 0/0
  5868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5869 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5872 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5873 ;;Total ram usage:        4 bytes
  5874 ;; Hardware stack levels used:    1
  5875 ;; Hardware stack levels required when called:    4
  5876 ;; This function calls:
  5877 ;;		Nothing
  5878 ;; This function is called by:
  5879 ;;		_matematica
  5880 ;;		_asin
  5881 ;;		_atan
  5882 ;;		_fabs
  5883 ;;		_sin
  5884 ;; This function uses a non-reentrant model
  5885 ;;
  5886                           
  5887                           	psect	text17
  5888  005C82                     __ptext17:
  5889                           	opt stack 0
  5890  005C82                     ___flneg:
  5891                           	opt stack 22
  5892                           
  5893                           ;incstack = 0
  5894  005C82  0100               	movlb	0	; () banked
  5895  005C84  51A9               	movf	___flneg@f1& (0+255),w,b
  5896  005C86  0100               	movlb	0	; () banked
  5897  005C88  11AA               	iorwf	(___flneg@f1+1)& (0+255),w,b
  5898  005C8A  0100               	movlb	0	; () banked
  5899  005C8C  11AB               	iorwf	(___flneg@f1+2)& (0+255),w,b
  5900  005C8E  0100               	movlb	0	; () banked
  5901  005C90  11AC               	iorwf	(___flneg@f1+3)& (0+255),w,b
  5902  005C92  B4D8               	btfsc	status,2,c
  5903  005C94  D009               	goto	l6401
  5904                           
  5905                           ; BSR set to: 0
  5906  005C96  0E00               	movlw	0
  5907  005C98  0100               	movlb	0	; () banked
  5908  005C9A  1BA9               	xorwf	___flneg@f1& (0+255),f,b
  5909  005C9C  0E00               	movlw	0
  5910  005C9E  1BAA               	xorwf	(___flneg@f1+1)& (0+255),f,b
  5911  005CA0  0E00               	movlw	0
  5912  005CA2  1BAB               	xorwf	(___flneg@f1+2)& (0+255),f,b
  5913  005CA4  0E80               	movlw	128
  5914  005CA6  1BAC               	xorwf	(___flneg@f1+3)& (0+255),f,b
  5915  005CA8                     l6401:
  5916                           
  5917                           ; BSR set to: 0
  5918  005CA8  C0A9  F0A9         	movff	___flneg@f1,?___flneg
  5919  005CAC  C0AA  F0AA         	movff	___flneg@f1+1,?___flneg+1
  5920  005CB0  C0AB  F0AB         	movff	___flneg@f1+2,?___flneg+2
  5921  005CB4  C0AC  F0AC         	movff	___flneg@f1+3,?___flneg+3
  5922  005CB8  0012               	return	
  5923  005CBA                     __end_of___flneg:
  5924                           	opt stack 0
  5925                           tblptru	equ	0xFF8
  5926                           tblptrh	equ	0xFF7
  5927                           tblptrl	equ	0xFF6
  5928                           tablat	equ	0xFF5
  5929                           postinc0	equ	0xFEE
  5930                           wreg	equ	0xFE8
  5931                           postdec1	equ	0xFE5
  5932                           fsr1l	equ	0xFE1
  5933                           postinc2	equ	0xFDE
  5934                           postdec2	equ	0xFDD
  5935                           fsr2h	equ	0xFDA
  5936                           fsr2l	equ	0xFD9
  5937                           status	equ	0xFD8
  5938                           
  5939 ;; *************** function _eval_poly *****************
  5940 ;; Defined at:
  5941 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\evalpoly.c"
  5942 ;; Parameters:    Size  Location     Type
  5943 ;;  x               4   97[BANK0 ] unsigned char 
  5944 ;;  d               2  101[BANK0 ] PTR const 
  5945 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), atan@coeff_a(24), atan@coeff_b(20), 
  5946 ;;  n               2  103[BANK0 ] int 
  5947 ;; Auto vars:     Size  Location     Type
  5948 ;;  res             4  109[BANK0 ] int 
  5949 ;; Return value:  Size  Location     Type
  5950 ;;                  4   97[BANK0 ] int 
  5951 ;; Registers used:
  5952 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5953 ;; Tracked objects:
  5954 ;;		On entry : 0/0
  5955 ;;		On exit  : 0/0
  5956 ;;		Unchanged: 0/0
  5957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5958 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5959 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5960 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5961 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5962 ;;Total ram usage:       16 bytes
  5963 ;; Hardware stack levels used:    1
  5964 ;; Hardware stack levels required when called:    5
  5965 ;; This function calls:
  5966 ;;		___fladd
  5967 ;;		___flmul
  5968 ;; This function is called by:
  5969 ;;		_atan
  5970 ;;		_sin
  5971 ;; This function uses a non-reentrant model
  5972 ;;
  5973                           
  5974                           	psect	text18
  5975  005546                     __ptext18:
  5976                           	opt stack 0
  5977  005546                     _eval_poly:
  5978                           	opt stack 21
  5979                           
  5980                           ; BSR set to: 0
  5981                           ;incstack = 0
  5982  005546  C0C7  F0C9         	movff	eval_poly@n,??_eval_poly
  5983  00554A  C0C8  F0CA         	movff	eval_poly@n+1,??_eval_poly+1
  5984  00554E  0100               	movlb	0	; () banked
  5985  005550  90D8               	bcf	status,0,c
  5986  005552  37C9               	rlcf	??_eval_poly& (0+255),f,b
  5987  005554  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  5988  005556  0100               	movlb	0	; () banked
  5989  005558  90D8               	bcf	status,0,c
  5990  00555A  37C9               	rlcf	??_eval_poly& (0+255),f,b
  5991  00555C  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  5992  00555E  C0C5  F0CB         	movff	eval_poly@d,??_eval_poly+2
  5993  005562  C0C6  F0CC         	movff	eval_poly@d+1,??_eval_poly+3
  5994  005566  0100               	movlb	0	; () banked
  5995  005568  51C9               	movf	??_eval_poly& (0+255),w,b
  5996  00556A  0100               	movlb	0	; () banked
  5997  00556C  27CB               	addwf	(??_eval_poly+2)& (0+255),f,b
  5998  00556E  0100               	movlb	0	; () banked
  5999  005570  51CA               	movf	(??_eval_poly+1)& (0+255),w,b
  6000  005572  0100               	movlb	0	; () banked
  6001  005574  23CC               	addwfc	(??_eval_poly+3)& (0+255),f,b
  6002  005576  C0CB  FFF6         	movff	??_eval_poly+2,tblptrl
  6003  00557A  C0CC  FFF7         	movff	??_eval_poly+3,tblptrh
  6004  00557E                     	if	0	;tblptru may be non-zero
  6005  00557E                     	endif
  6006  00557E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6007  00557E  0E00               	movlw	low (__mediumconst shr (0+16))
  6008  005580  6EF8               	movwf	tblptru,c
  6009  005582                     	endif
  6010  005582  0009               	tblrd		*+
  6011  005584  CFF5 F0CD          	movff	tablat,eval_poly@res
  6012  005588  0009               	tblrd		*+
  6013  00558A  CFF5 F0CE          	movff	tablat,eval_poly@res+1
  6014  00558E  0009               	tblrd		*+
  6015  005590  CFF5 F0CF          	movff	tablat,eval_poly@res+2
  6016  005594  000A               	tblrd		*-
  6017  005596  CFF5 F0D0          	movff	tablat,eval_poly@res+3
  6018  00559A  D052               	goto	l6659
  6019  00559C                     l6657:
  6020                           
  6021                           ; BSR set to: 0
  6022  00559C  C0CD  F094         	movff	eval_poly@res,___flmul@a
  6023  0055A0  C0CE  F095         	movff	eval_poly@res+1,___flmul@a+1
  6024  0055A4  C0CF  F096         	movff	eval_poly@res+2,___flmul@a+2
  6025  0055A8  C0D0  F097         	movff	eval_poly@res+3,___flmul@a+3
  6026  0055AC  C0C1  F090         	movff	eval_poly@x,___flmul@b
  6027  0055B0  C0C2  F091         	movff	eval_poly@x+1,___flmul@b+1
  6028  0055B4  C0C3  F092         	movff	eval_poly@x+2,___flmul@b+2
  6029  0055B8  C0C4  F093         	movff	eval_poly@x+3,___flmul@b+3
  6030  0055BC  EC36  F017         	call	___flmul	;wreg free
  6031  0055C0  C090  F0AD         	movff	?___flmul,___fladd@b
  6032  0055C4  C091  F0AE         	movff	?___flmul+1,___fladd@b+1
  6033  0055C8  C092  F0AF         	movff	?___flmul+2,___fladd@b+2
  6034  0055CC  C093  F0B0         	movff	?___flmul+3,___fladd@b+3
  6035  0055D0  0100               	movlb	0	; () banked
  6036  0055D2  07C7               	decf	eval_poly@n& (0+255),f,b
  6037  0055D4  A0D8               	btfss	status,0,c
  6038  0055D6  07C8               	decf	(eval_poly@n+1)& (0+255),f,b
  6039  0055D8  C0C7  F0C9         	movff	eval_poly@n,??_eval_poly
  6040  0055DC  C0C8  F0CA         	movff	eval_poly@n+1,??_eval_poly+1
  6041  0055E0  0100               	movlb	0	; () banked
  6042  0055E2  90D8               	bcf	status,0,c
  6043  0055E4  37C9               	rlcf	??_eval_poly& (0+255),f,b
  6044  0055E6  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  6045  0055E8  0100               	movlb	0	; () banked
  6046  0055EA  90D8               	bcf	status,0,c
  6047  0055EC  37C9               	rlcf	??_eval_poly& (0+255),f,b
  6048  0055EE  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  6049  0055F0  C0C5  F0CB         	movff	eval_poly@d,??_eval_poly+2
  6050  0055F4  C0C6  F0CC         	movff	eval_poly@d+1,??_eval_poly+3
  6051  0055F8  0100               	movlb	0	; () banked
  6052  0055FA  51C9               	movf	??_eval_poly& (0+255),w,b
  6053  0055FC  0100               	movlb	0	; () banked
  6054  0055FE  27CB               	addwf	(??_eval_poly+2)& (0+255),f,b
  6055  005600  0100               	movlb	0	; () banked
  6056  005602  51CA               	movf	(??_eval_poly+1)& (0+255),w,b
  6057  005604  0100               	movlb	0	; () banked
  6058  005606  23CC               	addwfc	(??_eval_poly+3)& (0+255),f,b
  6059  005608  C0CB  FFF6         	movff	??_eval_poly+2,tblptrl
  6060  00560C  C0CC  FFF7         	movff	??_eval_poly+3,tblptrh
  6061  005610                     	if	0	;tblptru may be non-zero
  6062  005610                     	endif
  6063  005610                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6064  005610  0E00               	movlw	low (__mediumconst shr (0+16))
  6065  005612  6EF8               	movwf	tblptru,c
  6066  005614                     	endif
  6067  005614  0009               	tblrd		*+
  6068  005616  CFF5 F0B1          	movff	tablat,___fladd@a
  6069  00561A  0009               	tblrd		*+
  6070  00561C  CFF5 F0B2          	movff	tablat,___fladd@a+1
  6071  005620  0009               	tblrd		*+
  6072  005622  CFF5 F0B3          	movff	tablat,___fladd@a+2
  6073  005626  000A               	tblrd		*-
  6074  005628  CFF5 F0B4          	movff	tablat,___fladd@a+3
  6075  00562C  ECE2  F014         	call	___fladd	;wreg free
  6076  005630  C0AD  F0CD         	movff	?___fladd,eval_poly@res
  6077  005634  C0AE  F0CE         	movff	?___fladd+1,eval_poly@res+1
  6078  005638  C0AF  F0CF         	movff	?___fladd+2,eval_poly@res+2
  6079  00563C  C0B0  F0D0         	movff	?___fladd+3,eval_poly@res+3
  6080  005640                     l6659:
  6081  005640  0100               	movlb	0	; () banked
  6082  005642  51C7               	movf	eval_poly@n& (0+255),w,b
  6083  005644  0100               	movlb	0	; () banked
  6084  005646  11C8               	iorwf	(eval_poly@n+1)& (0+255),w,b
  6085  005648  A4D8               	btfss	status,2,c
  6086  00564A  D7A8               	goto	l6657
  6087                           
  6088                           ; BSR set to: 0
  6089  00564C  C0CD  F0C1         	movff	eval_poly@res,?_eval_poly
  6090  005650  C0CE  F0C2         	movff	eval_poly@res+1,?_eval_poly+1
  6091  005654  C0CF  F0C3         	movff	eval_poly@res+2,?_eval_poly+2
  6092  005658  C0D0  F0C4         	movff	eval_poly@res+3,?_eval_poly+3
  6093                           
  6094                           ; BSR set to: 0
  6095  00565C  0012               	return		;funcret
  6096  00565E                     __end_of_eval_poly:
  6097                           	opt stack 0
  6098                           tblptru	equ	0xFF8
  6099                           tblptrh	equ	0xFF7
  6100                           tblptrl	equ	0xFF6
  6101                           tablat	equ	0xFF5
  6102                           postinc0	equ	0xFEE
  6103                           wreg	equ	0xFE8
  6104                           postdec1	equ	0xFE5
  6105                           fsr1l	equ	0xFE1
  6106                           postinc2	equ	0xFDE
  6107                           postdec2	equ	0xFDD
  6108                           fsr2h	equ	0xFDA
  6109                           fsr2l	equ	0xFD9
  6110                           status	equ	0xFD8
  6111                           
  6112 ;; *************** function ___flmul *****************
  6113 ;; Defined at:
  6114 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  6115 ;; Parameters:    Size  Location     Type
  6116 ;;  b               4   48[BANK0 ] int 
  6117 ;;  a               4   52[BANK0 ] int 
  6118 ;; Auto vars:     Size  Location     Type
  6119 ;;  prod            4   67[BANK0 ] struct .
  6120 ;;  grs             4   62[BANK0 ] unsigned long 
  6121 ;;  temp            2   71[BANK0 ] struct .
  6122 ;;  bexp            1   66[BANK0 ] unsigned char 
  6123 ;;  aexp            1   61[BANK0 ] unsigned char 
  6124 ;;  sign            1   60[BANK0 ] unsigned char 
  6125 ;; Return value:  Size  Location     Type
  6126 ;;                  4   48[BANK0 ] unsigned char 
  6127 ;; Registers used:
  6128 ;;		wreg, status,2, status,0, prodl, prodh
  6129 ;; Tracked objects:
  6130 ;;		On entry : 0/0
  6131 ;;		On exit  : 0/0
  6132 ;;		Unchanged: 0/0
  6133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6134 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6135 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6136 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6137 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6138 ;;Total ram usage:       25 bytes
  6139 ;; Hardware stack levels used:    1
  6140 ;; Hardware stack levels required when called:    4
  6141 ;; This function calls:
  6142 ;;		Nothing
  6143 ;; This function is called by:
  6144 ;;		_parallelo
  6145 ;;		_matematica
  6146 ;;		_asin
  6147 ;;		_atan
  6148 ;;		_eval_poly
  6149 ;;		_sin
  6150 ;; This function uses a non-reentrant model
  6151 ;;
  6152                           
  6153                           	psect	text19
  6154  002E6C                     __ptext19:
  6155                           	opt stack 0
  6156  002E6C                     ___flmul:
  6157                           	opt stack 21
  6158                           
  6159                           ; BSR set to: 0
  6160                           ;incstack = 0
  6161  002E6C  0100               	movlb	0	; () banked
  6162  002E6E  5193               	movf	(___flmul@b+3)& (0+255),w,b
  6163  002E70  0B80               	andlw	128
  6164  002E72  0100               	movlb	0	; () banked
  6165  002E74  6F9C               	movwf	___flmul@sign& (0+255),b
  6166  002E76  0100               	movlb	0	; () banked
  6167  002E78  5193               	movf	(___flmul@b+3)& (0+255),w,b
  6168  002E7A  2593               	addwf	(___flmul@b+3)& (0+255),w,b
  6169  002E7C  0100               	movlb	0	; () banked
  6170  002E7E  6FA2               	movwf	___flmul@bexp& (0+255),b
  6171                           
  6172                           ; BSR set to: 0
  6173  002E80  0100               	movlb	0	; () banked
  6174  002E82  AF92               	btfss	(___flmul@b+2)& (0+255),7,b
  6175  002E84  D002               	goto	l6251
  6176                           
  6177                           ; BSR set to: 0
  6178  002E86  0100               	movlb	0	; () banked
  6179  002E88  81A2               	bsf	___flmul@bexp& (0+255),0,b
  6180  002E8A                     l6251:
  6181                           
  6182                           ; BSR set to: 0
  6183  002E8A  0100               	movlb	0	; () banked
  6184  002E8C  51A2               	movf	___flmul@bexp& (0+255),w,b
  6185  002E8E  0100               	movlb	0	; () banked
  6186  002E90  B4D8               	btfsc	status,2,c
  6187  002E92  D010               	goto	l6259
  6188                           
  6189                           ; BSR set to: 0
  6190  002E94  0100               	movlb	0	; () banked
  6191  002E96  29A2               	incf	___flmul@bexp& (0+255),w,b
  6192  002E98  A4D8               	btfss	status,2,c
  6193  002E9A  D009               	goto	l6257
  6194                           
  6195                           ; BSR set to: 0
  6196  002E9C  0E00               	movlw	0
  6197  002E9E  0100               	movlb	0	; () banked
  6198  002EA0  6F90               	movwf	___flmul@b& (0+255),b
  6199  002EA2  0E00               	movlw	0
  6200  002EA4  6F91               	movwf	(___flmul@b+1)& (0+255),b
  6201  002EA6  0E00               	movlw	0
  6202  002EA8  6F92               	movwf	(___flmul@b+2)& (0+255),b
  6203  002EAA  0E00               	movlw	0
  6204  002EAC  6F93               	movwf	(___flmul@b+3)& (0+255),b
  6205  002EAE                     l6257:
  6206                           
  6207                           ; BSR set to: 0
  6208  002EAE  0100               	movlb	0	; () banked
  6209  002EB0  8F92               	bsf	(___flmul@b+2)& (0+255),7,b
  6210  002EB2  D009               	goto	l6261
  6211  002EB4                     l6259:
  6212                           
  6213                           ; BSR set to: 0
  6214  002EB4  0E00               	movlw	0
  6215  002EB6  0100               	movlb	0	; () banked
  6216  002EB8  6F90               	movwf	___flmul@b& (0+255),b
  6217  002EBA  0E00               	movlw	0
  6218  002EBC  6F91               	movwf	(___flmul@b+1)& (0+255),b
  6219  002EBE  0E00               	movlw	0
  6220  002EC0  6F92               	movwf	(___flmul@b+2)& (0+255),b
  6221  002EC2  0E00               	movlw	0
  6222  002EC4  6F93               	movwf	(___flmul@b+3)& (0+255),b
  6223  002EC6                     l6261:
  6224                           
  6225                           ; BSR set to: 0
  6226  002EC6  0100               	movlb	0	; () banked
  6227  002EC8  5197               	movf	(___flmul@a+3)& (0+255),w,b
  6228  002ECA  0B80               	andlw	128
  6229  002ECC  0100               	movlb	0	; () banked
  6230  002ECE  1B9C               	xorwf	___flmul@sign& (0+255),f,b
  6231                           
  6232                           ; BSR set to: 0
  6233  002ED0  0100               	movlb	0	; () banked
  6234  002ED2  5197               	movf	(___flmul@a+3)& (0+255),w,b
  6235  002ED4  2597               	addwf	(___flmul@a+3)& (0+255),w,b
  6236  002ED6  0100               	movlb	0	; () banked
  6237  002ED8  6F9D               	movwf	___flmul@aexp& (0+255),b
  6238                           
  6239                           ; BSR set to: 0
  6240  002EDA  0100               	movlb	0	; () banked
  6241  002EDC  AF96               	btfss	(___flmul@a+2)& (0+255),7,b
  6242  002EDE  D002               	goto	l6269
  6243                           
  6244                           ; BSR set to: 0
  6245  002EE0  0100               	movlb	0	; () banked
  6246  002EE2  819D               	bsf	___flmul@aexp& (0+255),0,b
  6247  002EE4                     l6269:
  6248                           
  6249                           ; BSR set to: 0
  6250  002EE4  0100               	movlb	0	; () banked
  6251  002EE6  519D               	movf	___flmul@aexp& (0+255),w,b
  6252  002EE8  0100               	movlb	0	; () banked
  6253  002EEA  B4D8               	btfsc	status,2,c
  6254  002EEC  D010               	goto	l6277
  6255                           
  6256                           ; BSR set to: 0
  6257  002EEE  0100               	movlb	0	; () banked
  6258  002EF0  299D               	incf	___flmul@aexp& (0+255),w,b
  6259  002EF2  A4D8               	btfss	status,2,c
  6260  002EF4  D009               	goto	l6275
  6261                           
  6262                           ; BSR set to: 0
  6263  002EF6  0E00               	movlw	0
  6264  002EF8  0100               	movlb	0	; () banked
  6265  002EFA  6F94               	movwf	___flmul@a& (0+255),b
  6266  002EFC  0E00               	movlw	0
  6267  002EFE  6F95               	movwf	(___flmul@a+1)& (0+255),b
  6268  002F00  0E00               	movlw	0
  6269  002F02  6F96               	movwf	(___flmul@a+2)& (0+255),b
  6270  002F04  0E00               	movlw	0
  6271  002F06  6F97               	movwf	(___flmul@a+3)& (0+255),b
  6272  002F08                     l6275:
  6273                           
  6274                           ; BSR set to: 0
  6275  002F08  0100               	movlb	0	; () banked
  6276  002F0A  8F96               	bsf	(___flmul@a+2)& (0+255),7,b
  6277  002F0C  D009               	goto	l1394
  6278  002F0E                     l6277:
  6279                           
  6280                           ; BSR set to: 0
  6281  002F0E  0E00               	movlw	0
  6282  002F10  0100               	movlb	0	; () banked
  6283  002F12  6F94               	movwf	___flmul@a& (0+255),b
  6284  002F14  0E00               	movlw	0
  6285  002F16  6F95               	movwf	(___flmul@a+1)& (0+255),b
  6286  002F18  0E00               	movlw	0
  6287  002F1A  6F96               	movwf	(___flmul@a+2)& (0+255),b
  6288  002F1C  0E00               	movlw	0
  6289  002F1E  6F97               	movwf	(___flmul@a+3)& (0+255),b
  6290  002F20                     l1394:
  6291                           
  6292                           ; BSR set to: 0
  6293  002F20  0100               	movlb	0	; () banked
  6294  002F22  519D               	movf	___flmul@aexp& (0+255),w,b
  6295  002F24  0100               	movlb	0	; () banked
  6296  002F26  B4D8               	btfsc	status,2,c
  6297  002F28  D005               	goto	l6281
  6298                           
  6299                           ; BSR set to: 0
  6300  002F2A  0100               	movlb	0	; () banked
  6301  002F2C  51A2               	movf	___flmul@bexp& (0+255),w,b
  6302  002F2E  0100               	movlb	0	; () banked
  6303  002F30  A4D8               	btfss	status,2,c
  6304  002F32  D00A               	goto	l6285
  6305  002F34                     l6281:
  6306                           
  6307                           ; BSR set to: 0
  6308  002F34  0E00               	movlw	0
  6309  002F36  0100               	movlb	0	; () banked
  6310  002F38  6F90               	movwf	?___flmul& (0+255),b
  6311  002F3A  0E00               	movlw	0
  6312  002F3C  6F91               	movwf	(?___flmul+1)& (0+255),b
  6313  002F3E  0E00               	movlw	0
  6314  002F40  6F92               	movwf	(?___flmul+2)& (0+255),b
  6315  002F42  0E00               	movlw	0
  6316  002F44  6F93               	movwf	(?___flmul+3)& (0+255),b
  6317                           
  6318                           ; BSR set to: 0
  6319  002F46  0012               	return	
  6320  002F48                     l6285:
  6321                           
  6322                           ; BSR set to: 0
  6323  002F48  0100               	movlb	0	; () banked
  6324  002F4A  5196               	movf	(___flmul@a+2)& (0+255),w,b
  6325  002F4C  0100               	movlb	0	; () banked
  6326  002F4E  0390               	mulwf	___flmul@b& (0+255),b
  6327  002F50  CFF3 F0A7          	movff	prodl,___flmul@temp
  6328  002F54  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6329                           
  6330                           ; BSR set to: 0
  6331  002F58  0100               	movlb	0	; () banked
  6332  002F5A  51A7               	movf	___flmul@temp& (0+255),w,b
  6333  002F5C  0100               	movlb	0	; () banked
  6334  002F5E  6F9E               	movwf	___flmul@grs& (0+255),b
  6335  002F60  6B9F               	clrf	(___flmul@grs+1)& (0+255),b
  6336  002F62  6BA0               	clrf	(___flmul@grs+2)& (0+255),b
  6337  002F64  6BA1               	clrf	(___flmul@grs+3)& (0+255),b
  6338                           
  6339                           ; BSR set to: 0
  6340  002F66  0100               	movlb	0	; () banked
  6341  002F68  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6342  002F6A  0100               	movlb	0	; () banked
  6343  002F6C  6FA3               	movwf	___flmul@prod& (0+255),b
  6344  002F6E  6BA4               	clrf	(___flmul@prod+1)& (0+255),b
  6345  002F70  6BA5               	clrf	(___flmul@prod+2)& (0+255),b
  6346  002F72  6BA6               	clrf	(___flmul@prod+3)& (0+255),b
  6347  002F74  0100               	movlb	0	; () banked
  6348  002F76  5195               	movf	(___flmul@a+1)& (0+255),w,b
  6349  002F78  0100               	movlb	0	; () banked
  6350  002F7A  0391               	mulwf	(___flmul@b+1)& (0+255),b
  6351  002F7C  CFF3 F0A7          	movff	prodl,___flmul@temp
  6352  002F80  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6353                           
  6354                           ; BSR set to: 0
  6355  002F84  0100               	movlb	0	; () banked
  6356  002F86  51A7               	movf	___flmul@temp& (0+255),w,b
  6357  002F88  0100               	movlb	0	; () banked
  6358  002F8A  279E               	addwf	___flmul@grs& (0+255),f,b
  6359  002F8C  0E00               	movlw	0
  6360  002F8E  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6361  002F90  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6362  002F92  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6363                           
  6364                           ; BSR set to: 0
  6365  002F94  0100               	movlb	0	; () banked
  6366  002F96  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6367  002F98  0100               	movlb	0	; () banked
  6368  002F9A  27A3               	addwf	___flmul@prod& (0+255),f,b
  6369  002F9C  0E00               	movlw	0
  6370  002F9E  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6371  002FA0  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6372  002FA2  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6373  002FA4  0100               	movlb	0	; () banked
  6374  002FA6  5194               	movf	___flmul@a& (0+255),w,b
  6375  002FA8  0100               	movlb	0	; () banked
  6376  002FAA  0392               	mulwf	(___flmul@b+2)& (0+255),b
  6377  002FAC  CFF3 F0A7          	movff	prodl,___flmul@temp
  6378  002FB0  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6379                           
  6380                           ; BSR set to: 0
  6381  002FB4  0100               	movlb	0	; () banked
  6382  002FB6  51A7               	movf	___flmul@temp& (0+255),w,b
  6383  002FB8  0100               	movlb	0	; () banked
  6384  002FBA  279E               	addwf	___flmul@grs& (0+255),f,b
  6385  002FBC  0E00               	movlw	0
  6386  002FBE  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6387  002FC0  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6388  002FC2  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6389                           
  6390                           ; BSR set to: 0
  6391  002FC4  0100               	movlb	0	; () banked
  6392  002FC6  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6393  002FC8  0100               	movlb	0	; () banked
  6394  002FCA  27A3               	addwf	___flmul@prod& (0+255),f,b
  6395  002FCC  0E00               	movlw	0
  6396  002FCE  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6397  002FD0  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6398  002FD2  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6399                           
  6400                           ; BSR set to: 0
  6401  002FD4  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  6402  002FD8  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  6403  002FDC  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  6404  002FE0  0100               	movlb	0	; () banked
  6405  002FE2  6B9E               	clrf	___flmul@grs& (0+255),b
  6406                           
  6407                           ; BSR set to: 0
  6408  002FE4  0100               	movlb	0	; () banked
  6409  002FE6  5194               	movf	___flmul@a& (0+255),w,b
  6410  002FE8  0100               	movlb	0	; () banked
  6411  002FEA  0391               	mulwf	(___flmul@b+1)& (0+255),b
  6412  002FEC  CFF3 F0A7          	movff	prodl,___flmul@temp
  6413  002FF0  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6414                           
  6415                           ; BSR set to: 0
  6416  002FF4  0100               	movlb	0	; () banked
  6417  002FF6  51A7               	movf	___flmul@temp& (0+255),w,b
  6418  002FF8  0100               	movlb	0	; () banked
  6419  002FFA  279E               	addwf	___flmul@grs& (0+255),f,b
  6420  002FFC  0100               	movlb	0	; () banked
  6421  002FFE  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6422  003000  0100               	movlb	0	; () banked
  6423  003002  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6424  003004  0E00               	movlw	0
  6425  003006  0100               	movlb	0	; () banked
  6426  003008  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6427  00300A  0E00               	movlw	0
  6428  00300C  0100               	movlb	0	; () banked
  6429  00300E  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6430                           
  6431                           ; BSR set to: 0
  6432  003010  0100               	movlb	0	; () banked
  6433  003012  5195               	movf	(___flmul@a+1)& (0+255),w,b
  6434  003014  0100               	movlb	0	; () banked
  6435  003016  0390               	mulwf	___flmul@b& (0+255),b
  6436  003018  CFF3 F0A7          	movff	prodl,___flmul@temp
  6437  00301C  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6438                           
  6439                           ; BSR set to: 0
  6440  003020  0100               	movlb	0	; () banked
  6441  003022  51A7               	movf	___flmul@temp& (0+255),w,b
  6442  003024  0100               	movlb	0	; () banked
  6443  003026  279E               	addwf	___flmul@grs& (0+255),f,b
  6444  003028  0100               	movlb	0	; () banked
  6445  00302A  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6446  00302C  0100               	movlb	0	; () banked
  6447  00302E  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6448  003030  0E00               	movlw	0
  6449  003032  0100               	movlb	0	; () banked
  6450  003034  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6451  003036  0E00               	movlw	0
  6452  003038  0100               	movlb	0	; () banked
  6453  00303A  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6454                           
  6455                           ; BSR set to: 0
  6456  00303C  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  6457  003040  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  6458  003044  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  6459  003048  0100               	movlb	0	; () banked
  6460  00304A  6B9E               	clrf	___flmul@grs& (0+255),b
  6461  00304C  0100               	movlb	0	; () banked
  6462  00304E  5194               	movf	___flmul@a& (0+255),w,b
  6463  003050  0100               	movlb	0	; () banked
  6464  003052  0390               	mulwf	___flmul@b& (0+255),b
  6465  003054  CFF3 F0A7          	movff	prodl,___flmul@temp
  6466  003058  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6467                           
  6468                           ; BSR set to: 0
  6469  00305C  0100               	movlb	0	; () banked
  6470  00305E  51A7               	movf	___flmul@temp& (0+255),w,b
  6471  003060  0100               	movlb	0	; () banked
  6472  003062  279E               	addwf	___flmul@grs& (0+255),f,b
  6473  003064  0100               	movlb	0	; () banked
  6474  003066  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6475  003068  0100               	movlb	0	; () banked
  6476  00306A  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6477  00306C  0E00               	movlw	0
  6478  00306E  0100               	movlb	0	; () banked
  6479  003070  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6480  003072  0E00               	movlw	0
  6481  003074  0100               	movlb	0	; () banked
  6482  003076  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6483                           
  6484                           ; BSR set to: 0
  6485  003078  0100               	movlb	0	; () banked
  6486  00307A  5196               	movf	(___flmul@a+2)& (0+255),w,b
  6487  00307C  0100               	movlb	0	; () banked
  6488  00307E  0391               	mulwf	(___flmul@b+1)& (0+255),b
  6489  003080  CFF3 F0A7          	movff	prodl,___flmul@temp
  6490  003084  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6491  003088  0100               	movlb	0	; () banked
  6492  00308A  51A7               	movf	___flmul@temp& (0+255),w,b
  6493  00308C  0100               	movlb	0	; () banked
  6494  00308E  27A3               	addwf	___flmul@prod& (0+255),f,b
  6495  003090  0100               	movlb	0	; () banked
  6496  003092  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6497  003094  0100               	movlb	0	; () banked
  6498  003096  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6499  003098  0E00               	movlw	0
  6500  00309A  0100               	movlb	0	; () banked
  6501  00309C  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6502  00309E  0E00               	movlw	0
  6503  0030A0  0100               	movlb	0	; () banked
  6504  0030A2  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6505                           
  6506                           ; BSR set to: 0
  6507  0030A4  0100               	movlb	0	; () banked
  6508  0030A6  5195               	movf	(___flmul@a+1)& (0+255),w,b
  6509  0030A8  0100               	movlb	0	; () banked
  6510  0030AA  0392               	mulwf	(___flmul@b+2)& (0+255),b
  6511  0030AC  CFF3 F0A7          	movff	prodl,___flmul@temp
  6512  0030B0  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6513                           
  6514                           ; BSR set to: 0
  6515  0030B4  0100               	movlb	0	; () banked
  6516  0030B6  51A7               	movf	___flmul@temp& (0+255),w,b
  6517  0030B8  0100               	movlb	0	; () banked
  6518  0030BA  27A3               	addwf	___flmul@prod& (0+255),f,b
  6519  0030BC  0100               	movlb	0	; () banked
  6520  0030BE  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6521  0030C0  0100               	movlb	0	; () banked
  6522  0030C2  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6523  0030C4  0E00               	movlw	0
  6524  0030C6  0100               	movlb	0	; () banked
  6525  0030C8  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6526  0030CA  0E00               	movlw	0
  6527  0030CC  0100               	movlb	0	; () banked
  6528  0030CE  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6529  0030D0  0100               	movlb	0	; () banked
  6530  0030D2  5196               	movf	(___flmul@a+2)& (0+255),w,b
  6531  0030D4  0100               	movlb	0	; () banked
  6532  0030D6  0392               	mulwf	(___flmul@b+2)& (0+255),b
  6533  0030D8  CFF3 F0A7          	movff	prodl,___flmul@temp
  6534  0030DC  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6535                           
  6536                           ; BSR set to: 0
  6537  0030E0  0100               	movlb	0	; () banked
  6538  0030E2  51A7               	movf	___flmul@temp& (0+255),w,b
  6539  0030E4  0100               	movlb	0	; () banked
  6540  0030E6  6F98               	movwf	??___flmul& (0+255),b
  6541  0030E8  0100               	movlb	0	; () banked
  6542  0030EA  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6543  0030EC  0100               	movlb	0	; () banked
  6544  0030EE  6F99               	movwf	(??___flmul+1)& (0+255),b
  6545  0030F0  0100               	movlb	0	; () banked
  6546  0030F2  6B9A               	clrf	(??___flmul+2)& (0+255),b
  6547  0030F4  0100               	movlb	0	; () banked
  6548  0030F6  6B9B               	clrf	(??___flmul+3)& (0+255),b
  6549  0030F8  C09A  F09B         	movff	??___flmul+2,??___flmul+3
  6550  0030FC  C099  F09A         	movff	??___flmul+1,??___flmul+2
  6551  003100  C098  F099         	movff	??___flmul,??___flmul+1
  6552  003104  0100               	movlb	0	; () banked
  6553  003106  6B98               	clrf	??___flmul& (0+255),b
  6554  003108  0100               	movlb	0	; () banked
  6555  00310A  5198               	movf	??___flmul& (0+255),w,b
  6556  00310C  0100               	movlb	0	; () banked
  6557  00310E  27A3               	addwf	___flmul@prod& (0+255),f,b
  6558  003110  0100               	movlb	0	; () banked
  6559  003112  5199               	movf	(??___flmul+1)& (0+255),w,b
  6560  003114  0100               	movlb	0	; () banked
  6561  003116  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6562  003118  0100               	movlb	0	; () banked
  6563  00311A  519A               	movf	(??___flmul+2)& (0+255),w,b
  6564  00311C  0100               	movlb	0	; () banked
  6565  00311E  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6566  003120  0100               	movlb	0	; () banked
  6567  003122  519B               	movf	(??___flmul+3)& (0+255),w,b
  6568  003124  0100               	movlb	0	; () banked
  6569  003126  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6570                           
  6571                           ; BSR set to: 0
  6572  003128  C09E  F098         	movff	___flmul@grs,??___flmul
  6573  00312C  C09F  F099         	movff	___flmul@grs+1,??___flmul+1
  6574  003130  C0A0  F09A         	movff	___flmul@grs+2,??___flmul+2
  6575  003134  C0A1  F09B         	movff	___flmul@grs+3,??___flmul+3
  6576  003138  0E19               	movlw	25
  6577  00313A  D006               	goto	u7780
  6578  00313C                     u7785:
  6579  00313C  0100               	movlb	0	; () banked
  6580  00313E  90D8               	bcf	status,0,c
  6581  003140  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  6582  003142  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  6583  003144  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  6584  003146  3398               	rrcf	??___flmul& (0+255),f,b
  6585  003148                     u7780:
  6586  003148  2EE8               	decfsz	wreg,f,c
  6587  00314A  D7F8               	goto	u7785
  6588  00314C  0100               	movlb	0	; () banked
  6589  00314E  5198               	movf	??___flmul& (0+255),w,b
  6590  003150  0100               	movlb	0	; () banked
  6591  003152  27A3               	addwf	___flmul@prod& (0+255),f,b
  6592  003154  0100               	movlb	0	; () banked
  6593  003156  5199               	movf	(??___flmul+1)& (0+255),w,b
  6594  003158  0100               	movlb	0	; () banked
  6595  00315A  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6596  00315C  0100               	movlb	0	; () banked
  6597  00315E  519A               	movf	(??___flmul+2)& (0+255),w,b
  6598  003160  0100               	movlb	0	; () banked
  6599  003162  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6600  003164  0100               	movlb	0	; () banked
  6601  003166  519B               	movf	(??___flmul+3)& (0+255),w,b
  6602  003168  0100               	movlb	0	; () banked
  6603  00316A  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6604                           
  6605                           ; BSR set to: 0
  6606  00316C  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  6607  003170  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  6608  003174  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  6609  003178  0100               	movlb	0	; () banked
  6610  00317A  6B9E               	clrf	___flmul@grs& (0+255),b
  6611                           
  6612                           ; BSR set to: 0
  6613  00317C  0100               	movlb	0	; () banked
  6614  00317E  519D               	movf	___flmul@aexp& (0+255),w,b
  6615  003180  C0A2  F098         	movff	___flmul@bexp,??___flmul
  6616  003184  0100               	movlb	0	; () banked
  6617  003186  6B99               	clrf	(??___flmul+1)& (0+255),b
  6618  003188  0100               	movlb	0	; () banked
  6619  00318A  2798               	addwf	??___flmul& (0+255),f,b
  6620  00318C  0E00               	movlw	0
  6621  00318E  2399               	addwfc	(??___flmul+1)& (0+255),f,b
  6622  003190  0E82               	movlw	130
  6623  003192  0100               	movlb	0	; () banked
  6624  003194  2598               	addwf	??___flmul& (0+255),w,b
  6625  003196  0100               	movlb	0	; () banked
  6626  003198  6FA7               	movwf	___flmul@temp& (0+255),b
  6627  00319A  0EFF               	movlw	255
  6628  00319C  0100               	movlb	0	; () banked
  6629  00319E  2199               	addwfc	(??___flmul+1)& (0+255),w,b
  6630  0031A0  0100               	movlb	0	; () banked
  6631  0031A2  6FA8               	movwf	(___flmul@temp+1)& (0+255),b
  6632  0031A4  D015               	goto	l6333
  6633  0031A6                     l6327:
  6634                           
  6635                           ; BSR set to: 0
  6636  0031A6  0100               	movlb	0	; () banked
  6637  0031A8  90D8               	bcf	status,0,c
  6638  0031AA  37A3               	rlcf	___flmul@prod& (0+255),f,b
  6639  0031AC  37A4               	rlcf	(___flmul@prod+1)& (0+255),f,b
  6640  0031AE  37A5               	rlcf	(___flmul@prod+2)& (0+255),f,b
  6641  0031B0  37A6               	rlcf	(___flmul@prod+3)& (0+255),f,b
  6642                           
  6643                           ; BSR set to: 0
  6644  0031B2  0100               	movlb	0	; () banked
  6645  0031B4  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  6646  0031B6  D002               	goto	l1401
  6647                           
  6648                           ; BSR set to: 0
  6649  0031B8  0100               	movlb	0	; () banked
  6650  0031BA  81A3               	bsf	___flmul@prod& (0+255),0,b
  6651  0031BC                     l1401:
  6652                           
  6653                           ; BSR set to: 0
  6654  0031BC  0100               	movlb	0	; () banked
  6655  0031BE  90D8               	bcf	status,0,c
  6656  0031C0  379E               	rlcf	___flmul@grs& (0+255),f,b
  6657  0031C2  379F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  6658  0031C4  37A0               	rlcf	(___flmul@grs+2)& (0+255),f,b
  6659  0031C6  37A1               	rlcf	(___flmul@grs+3)& (0+255),f,b
  6660  0031C8  0100               	movlb	0	; () banked
  6661  0031CA  07A7               	decf	___flmul@temp& (0+255),f,b
  6662  0031CC  A0D8               	btfss	status,0,c
  6663  0031CE  07A8               	decf	(___flmul@temp+1)& (0+255),f,b
  6664  0031D0                     l6333:
  6665                           
  6666                           ; BSR set to: 0
  6667  0031D0  0100               	movlb	0	; () banked
  6668  0031D2  AFA5               	btfss	(___flmul@prod+2)& (0+255),7,b
  6669  0031D4  D7E8               	goto	l6327
  6670                           
  6671                           ; BSR set to: 0
  6672                           
  6673                           ; BSR set to: 0
  6674  0031D6  0E00               	movlw	0
  6675  0031D8  0100               	movlb	0	; () banked
  6676  0031DA  6F9D               	movwf	___flmul@aexp& (0+255),b
  6677                           
  6678                           ; BSR set to: 0
  6679  0031DC  0100               	movlb	0	; () banked
  6680  0031DE  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  6681  0031E0  D024               	goto	l1403
  6682                           
  6683                           ; BSR set to: 0
  6684  0031E2  0EFF               	movlw	255
  6685  0031E4  0100               	movlb	0	; () banked
  6686  0031E6  159E               	andwf	___flmul@grs& (0+255),w,b
  6687  0031E8  0100               	movlb	0	; () banked
  6688  0031EA  6F98               	movwf	??___flmul& (0+255),b
  6689  0031EC  0EFF               	movlw	255
  6690  0031EE  0100               	movlb	0	; () banked
  6691  0031F0  159F               	andwf	(___flmul@grs+1)& (0+255),w,b
  6692  0031F2  0100               	movlb	0	; () banked
  6693  0031F4  6F99               	movwf	(??___flmul+1)& (0+255),b
  6694  0031F6  0EFF               	movlw	255
  6695  0031F8  0100               	movlb	0	; () banked
  6696  0031FA  15A0               	andwf	(___flmul@grs+2)& (0+255),w,b
  6697  0031FC  0100               	movlb	0	; () banked
  6698  0031FE  6F9A               	movwf	(??___flmul+2)& (0+255),b
  6699  003200  0E7F               	movlw	127
  6700  003202  0100               	movlb	0	; () banked
  6701  003204  15A1               	andwf	(___flmul@grs+3)& (0+255),w,b
  6702  003206  0100               	movlb	0	; () banked
  6703  003208  6F9B               	movwf	(??___flmul+3)& (0+255),b
  6704  00320A  0100               	movlb	0	; () banked
  6705  00320C  5198               	movf	??___flmul& (0+255),w,b
  6706  00320E  0100               	movlb	0	; () banked
  6707  003210  1199               	iorwf	(??___flmul+1)& (0+255),w,b
  6708  003212  0100               	movlb	0	; () banked
  6709  003214  119A               	iorwf	(??___flmul+2)& (0+255),w,b
  6710  003216  0100               	movlb	0	; () banked
  6711  003218  119B               	iorwf	(??___flmul+3)& (0+255),w,b
  6712  00321A  A4D8               	btfss	status,2,c
  6713  00321C  D003               	goto	l6343
  6714                           
  6715                           ; BSR set to: 0
  6716                           
  6717                           ; BSR set to: 0
  6718  00321E  0100               	movlb	0	; () banked
  6719  003220  A1A3               	btfss	___flmul@prod& (0+255),0,b
  6720  003222  D003               	goto	l1403
  6721  003224                     l6343:
  6722                           
  6723                           ; BSR set to: 0
  6724  003224  0E01               	movlw	1
  6725  003226  0100               	movlb	0	; () banked
  6726  003228  6F9D               	movwf	___flmul@aexp& (0+255),b
  6727  00322A                     l1403:
  6728                           
  6729                           ; BSR set to: 0
  6730  00322A  0100               	movlb	0	; () banked
  6731  00322C  519D               	movf	___flmul@aexp& (0+255),w,b
  6732  00322E  0100               	movlb	0	; () banked
  6733  003230  B4D8               	btfsc	status,2,c
  6734  003232  D023               	goto	l6353
  6735                           
  6736                           ; BSR set to: 0
  6737  003234  0E01               	movlw	1
  6738  003236  0100               	movlb	0	; () banked
  6739  003238  27A3               	addwf	___flmul@prod& (0+255),f,b
  6740  00323A  0E00               	movlw	0
  6741  00323C  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6742  00323E  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6743  003240  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6744                           
  6745                           ; BSR set to: 0
  6746  003242  0100               	movlb	0	; () banked
  6747  003244  A1A6               	btfss	(___flmul@prod+3)& (0+255),0,b
  6748  003246  D019               	goto	l6353
  6749                           
  6750                           ; BSR set to: 0
  6751  003248  C0A3  F098         	movff	___flmul@prod,??___flmul
  6752  00324C  C0A4  F099         	movff	___flmul@prod+1,??___flmul+1
  6753  003250  C0A5  F09A         	movff	___flmul@prod+2,??___flmul+2
  6754  003254  C0A6  F09B         	movff	___flmul@prod+3,??___flmul+3
  6755  003258  0100               	movlb	0	; () banked
  6756  00325A  359B               	rlcf	(??___flmul+3)& (0+255),w,b
  6757  00325C  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  6758  00325E  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  6759  003260  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  6760  003262  3398               	rrcf	??___flmul& (0+255),f,b
  6761  003264  C098  F0A3         	movff	??___flmul,___flmul@prod
  6762  003268  C099  F0A4         	movff	??___flmul+1,___flmul@prod+1
  6763  00326C  C09A  F0A5         	movff	??___flmul+2,___flmul@prod+2
  6764  003270  C09B  F0A6         	movff	??___flmul+3,___flmul@prod+3
  6765                           
  6766                           ; BSR set to: 0
  6767  003274  0100               	movlb	0	; () banked
  6768  003276  4BA7               	infsnz	___flmul@temp& (0+255),f,b
  6769  003278  2BA8               	incf	(___flmul@temp+1)& (0+255),f,b
  6770  00327A                     l6353:
  6771                           
  6772                           ; BSR set to: 0
  6773  00327A  0100               	movlb	0	; () banked
  6774  00327C  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6775  00327E  D010               	goto	l6357
  6776  003280  0100               	movlb	0	; () banked
  6777  003282  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6778  003284  E104               	bnz	u7860
  6779  003286  0100               	movlb	0	; () banked
  6780  003288  29A7               	incf	___flmul@temp& (0+255),w,b
  6781  00328A  A0D8               	btfss	status,0,c
  6782  00328C  D009               	goto	l6357
  6783  00328E                     u7860:
  6784                           
  6785                           ; BSR set to: 0
  6786  00328E  0E00               	movlw	0
  6787  003290  0100               	movlb	0	; () banked
  6788  003292  6FA3               	movwf	___flmul@prod& (0+255),b
  6789  003294  0E00               	movlw	0
  6790  003296  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  6791  003298  0E80               	movlw	128
  6792  00329A  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  6793  00329C  0E7F               	movlw	127
  6794  00329E  D02B               	goto	L2
  6795  0032A0                     l6357:
  6796                           
  6797                           ; BSR set to: 0
  6798  0032A0  0100               	movlb	0	; () banked
  6799  0032A2  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6800  0032A4  D007               	goto	l6359
  6801  0032A6  0100               	movlb	0	; () banked
  6802  0032A8  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6803  0032AA  E111               	bnz	l1411
  6804  0032AC  0100               	movlb	0	; () banked
  6805  0032AE  05A7               	decf	___flmul@temp& (0+255),w,b
  6806  0032B0  B0D8               	btfsc	status,0,c
  6807  0032B2  D00D               	goto	l1411
  6808  0032B4                     l6359:
  6809                           
  6810                           ; BSR set to: 0
  6811  0032B4  0E00               	movlw	0
  6812  0032B6  0100               	movlb	0	; () banked
  6813  0032B8  6FA3               	movwf	___flmul@prod& (0+255),b
  6814  0032BA  0E00               	movlw	0
  6815  0032BC  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  6816  0032BE  0E00               	movlw	0
  6817  0032C0  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  6818  0032C2  0E00               	movlw	0
  6819  0032C4  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  6820  0032C6  0E00               	movlw	0
  6821  0032C8  0100               	movlb	0	; () banked
  6822  0032CA  6F9C               	movwf	___flmul@sign& (0+255),b
  6823  0032CC  D015               	goto	l6369
  6824  0032CE                     l1411:
  6825                           
  6826                           ; BSR set to: 0
  6827  0032CE  C0A7  F0A2         	movff	___flmul@temp,___flmul@bexp
  6828                           
  6829                           ; BSR set to: 0
  6830  0032D2  0EFF               	movlw	255
  6831  0032D4  0100               	movlb	0	; () banked
  6832  0032D6  17A3               	andwf	___flmul@prod& (0+255),f,b
  6833  0032D8  0EFF               	movlw	255
  6834  0032DA  17A4               	andwf	(___flmul@prod+1)& (0+255),f,b
  6835  0032DC  0E7F               	movlw	127
  6836  0032DE  17A5               	andwf	(___flmul@prod+2)& (0+255),f,b
  6837  0032E0  0E00               	movlw	0
  6838  0032E2  17A6               	andwf	(___flmul@prod+3)& (0+255),f,b
  6839                           
  6840                           ; BSR set to: 0
  6841  0032E4  0100               	movlb	0	; () banked
  6842  0032E6  A1A2               	btfss	___flmul@bexp& (0+255),0,b
  6843  0032E8  D002               	goto	l6367
  6844                           
  6845                           ; BSR set to: 0
  6846  0032EA  0100               	movlb	0	; () banked
  6847  0032EC  8FA5               	bsf	(___flmul@prod+2)& (0+255),7,b
  6848  0032EE                     l6367:
  6849                           
  6850                           ; BSR set to: 0
  6851  0032EE  0100               	movlb	0	; () banked
  6852  0032F0  90D8               	bcf	status,0,c
  6853  0032F2  31A2               	rrcf	___flmul@bexp& (0+255),w,b
  6854  0032F4  0100               	movlb	0	; () banked
  6855  0032F6                     L2:
  6856  0032F6  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  6857  0032F8                     l6369:
  6858                           
  6859                           ; BSR set to: 0
  6860  0032F8  0100               	movlb	0	; () banked
  6861  0032FA  519C               	movf	___flmul@sign& (0+255),w,b
  6862  0032FC  0100               	movlb	0	; () banked
  6863  0032FE  13A6               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6864                           
  6865                           ; BSR set to: 0
  6866  003300  C0A3  F090         	movff	___flmul@prod,?___flmul
  6867  003304  C0A4  F091         	movff	___flmul@prod+1,?___flmul+1
  6868  003308  C0A5  F092         	movff	___flmul@prod+2,?___flmul+2
  6869  00330C  C0A6  F093         	movff	___flmul@prod+3,?___flmul+3
  6870  003310  0012               	return	
  6871  003312                     __end_of___flmul:
  6872                           	opt stack 0
  6873                           tblptru	equ	0xFF8
  6874                           tblptrh	equ	0xFF7
  6875                           tblptrl	equ	0xFF6
  6876                           tablat	equ	0xFF5
  6877                           prodh	equ	0xFF4
  6878                           prodl	equ	0xFF3
  6879                           postinc0	equ	0xFEE
  6880                           wreg	equ	0xFE8
  6881                           postdec1	equ	0xFE5
  6882                           fsr1l	equ	0xFE1
  6883                           postinc2	equ	0xFDE
  6884                           postdec2	equ	0xFDD
  6885                           fsr2h	equ	0xFDA
  6886                           fsr2l	equ	0xFD9
  6887                           status	equ	0xFD8
  6888                           
  6889 ;; *************** function ___fladd *****************
  6890 ;; Defined at:
  6891 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  6892 ;; Parameters:    Size  Location     Type
  6893 ;;  b               4   77[BANK0 ] unsigned char 
  6894 ;;  a               4   81[BANK0 ] unsigned char 
  6895 ;; Auto vars:     Size  Location     Type
  6896 ;;  grs             1   96[BANK0 ] unsigned char 
  6897 ;;  bexp            1   95[BANK0 ] unsigned char 
  6898 ;;  aexp            1   94[BANK0 ] unsigned char 
  6899 ;;  signs           1   93[BANK0 ] unsigned char 
  6900 ;; Return value:  Size  Location     Type
  6901 ;;                  4   77[BANK0 ] unsigned char 
  6902 ;; Registers used:
  6903 ;;		wreg, status,2, status,0
  6904 ;; Tracked objects:
  6905 ;;		On entry : 0/0
  6906 ;;		On exit  : 0/0
  6907 ;;		Unchanged: 0/0
  6908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6909 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6910 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6911 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6912 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6913 ;;Total ram usage:       20 bytes
  6914 ;; Hardware stack levels used:    1
  6915 ;; Hardware stack levels required when called:    4
  6916 ;; This function calls:
  6917 ;;		Nothing
  6918 ;; This function is called by:
  6919 ;;		_park_routine
  6920 ;;		_parallelo
  6921 ;;		_matematica
  6922 ;;		_asin
  6923 ;;		_atan
  6924 ;;		_cos
  6925 ;;		_eval_poly
  6926 ;;		_sin
  6927 ;;		___flsub
  6928 ;;		_floor
  6929 ;; This function uses a non-reentrant model
  6930 ;;
  6931                           
  6932                           	psect	text20
  6933  0029C4                     __ptext20:
  6934                           	opt stack 0
  6935  0029C4                     ___fladd:
  6936                           	opt stack 21
  6937                           
  6938                           ; BSR set to: 0
  6939                           ;incstack = 0
  6940  0029C4  0100               	movlb	0	; () banked
  6941  0029C6  51B0               	movf	(___fladd@b+3)& (0+255),w,b
  6942  0029C8  0B80               	andlw	128
  6943  0029CA  0100               	movlb	0	; () banked
  6944  0029CC  6FBD               	movwf	___fladd@signs& (0+255),b
  6945  0029CE  0100               	movlb	0	; () banked
  6946  0029D0  51B0               	movf	(___fladd@b+3)& (0+255),w,b
  6947  0029D2  25B0               	addwf	(___fladd@b+3)& (0+255),w,b
  6948  0029D4  0100               	movlb	0	; () banked
  6949  0029D6  6FBF               	movwf	___fladd@bexp& (0+255),b
  6950                           
  6951                           ; BSR set to: 0
  6952  0029D8  0100               	movlb	0	; () banked
  6953  0029DA  AFAF               	btfss	(___fladd@b+2)& (0+255),7,b
  6954  0029DC  D002               	goto	l6049
  6955                           
  6956                           ; BSR set to: 0
  6957  0029DE  0100               	movlb	0	; () banked
  6958  0029E0  81BF               	bsf	___fladd@bexp& (0+255),0,b
  6959  0029E2                     l6049:
  6960                           
  6961                           ; BSR set to: 0
  6962  0029E2  0100               	movlb	0	; () banked
  6963  0029E4  51BF               	movf	___fladd@bexp& (0+255),w,b
  6964  0029E6  0100               	movlb	0	; () banked
  6965  0029E8  B4D8               	btfsc	status,2,c
  6966  0029EA  D012               	goto	l6059
  6967                           
  6968                           ; BSR set to: 0
  6969  0029EC  0100               	movlb	0	; () banked
  6970  0029EE  29BF               	incf	___fladd@bexp& (0+255),w,b
  6971  0029F0  A4D8               	btfss	status,2,c
  6972  0029F2  D009               	goto	l6055
  6973                           
  6974                           ; BSR set to: 0
  6975  0029F4  0E00               	movlw	0
  6976  0029F6  0100               	movlb	0	; () banked
  6977  0029F8  6FAD               	movwf	___fladd@b& (0+255),b
  6978  0029FA  0E00               	movlw	0
  6979  0029FC  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  6980  0029FE  0E00               	movlw	0
  6981  002A00  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  6982  002A02  0E00               	movlw	0
  6983  002A04  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  6984  002A06                     l6055:
  6985                           
  6986                           ; BSR set to: 0
  6987  002A06  0100               	movlb	0	; () banked
  6988  002A08  8FAF               	bsf	(___fladd@b+2)& (0+255),7,b
  6989                           
  6990                           ; BSR set to: 0
  6991  002A0A  0E00               	movlw	0
  6992  002A0C  0100               	movlb	0	; () banked
  6993  002A0E  D008               	goto	L3
  6994  002A10                     l6059:
  6995                           
  6996                           ; BSR set to: 0
  6997  002A10  0E00               	movlw	0
  6998  002A12  0100               	movlb	0	; () banked
  6999  002A14  6FAD               	movwf	___fladd@b& (0+255),b
  7000  002A16  0E00               	movlw	0
  7001  002A18  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  7002  002A1A  0E00               	movlw	0
  7003  002A1C  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  7004  002A1E  0E00               	movlw	0
  7005  002A20                     L3:
  7006  002A20  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  7007                           
  7008                           ; BSR set to: 0
  7009                           
  7010                           ; BSR set to: 0
  7011  002A22  0100               	movlb	0	; () banked
  7012  002A24  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  7013  002A26  0B80               	andlw	128
  7014  002A28  0100               	movlb	0	; () banked
  7015  002A2A  6FBE               	movwf	___fladd@aexp& (0+255),b
  7016                           
  7017                           ; BSR set to: 0
  7018  002A2C  0100               	movlb	0	; () banked
  7019  002A2E  51BD               	movf	___fladd@signs& (0+255),w,b
  7020  002A30  0100               	movlb	0	; () banked
  7021  002A32  19BE               	xorwf	___fladd@aexp& (0+255),w,b
  7022  002A34  B4D8               	btfsc	status,2,c
  7023  002A36  D002               	goto	l6067
  7024                           
  7025                           ; BSR set to: 0
  7026  002A38  0100               	movlb	0	; () banked
  7027  002A3A  8DBD               	bsf	___fladd@signs& (0+255),6,b
  7028  002A3C                     l6067:
  7029                           
  7030                           ; BSR set to: 0
  7031  002A3C  0100               	movlb	0	; () banked
  7032  002A3E  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  7033  002A40  25B4               	addwf	(___fladd@a+3)& (0+255),w,b
  7034  002A42  0100               	movlb	0	; () banked
  7035  002A44  6FBE               	movwf	___fladd@aexp& (0+255),b
  7036                           
  7037                           ; BSR set to: 0
  7038  002A46  0100               	movlb	0	; () banked
  7039  002A48  AFB3               	btfss	(___fladd@a+2)& (0+255),7,b
  7040  002A4A  D002               	goto	l6073
  7041                           
  7042                           ; BSR set to: 0
  7043  002A4C  0100               	movlb	0	; () banked
  7044  002A4E  81BE               	bsf	___fladd@aexp& (0+255),0,b
  7045  002A50                     l6073:
  7046                           
  7047                           ; BSR set to: 0
  7048  002A50  0100               	movlb	0	; () banked
  7049  002A52  51BE               	movf	___fladd@aexp& (0+255),w,b
  7050  002A54  0100               	movlb	0	; () banked
  7051  002A56  B4D8               	btfsc	status,2,c
  7052  002A58  D012               	goto	l6083
  7053                           
  7054                           ; BSR set to: 0
  7055  002A5A  0100               	movlb	0	; () banked
  7056  002A5C  29BE               	incf	___fladd@aexp& (0+255),w,b
  7057  002A5E  A4D8               	btfss	status,2,c
  7058  002A60  D009               	goto	l6079
  7059                           
  7060                           ; BSR set to: 0
  7061  002A62  0E00               	movlw	0
  7062  002A64  0100               	movlb	0	; () banked
  7063  002A66  6FB1               	movwf	___fladd@a& (0+255),b
  7064  002A68  0E00               	movlw	0
  7065  002A6A  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  7066  002A6C  0E00               	movlw	0
  7067  002A6E  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  7068  002A70  0E00               	movlw	0
  7069  002A72  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  7070  002A74                     l6079:
  7071                           
  7072                           ; BSR set to: 0
  7073  002A74  0100               	movlb	0	; () banked
  7074  002A76  8FB3               	bsf	(___fladd@a+2)& (0+255),7,b
  7075                           
  7076                           ; BSR set to: 0
  7077  002A78  0E00               	movlw	0
  7078  002A7A  0100               	movlb	0	; () banked
  7079  002A7C  D008               	goto	L4
  7080  002A7E                     l6083:
  7081                           
  7082                           ; BSR set to: 0
  7083  002A7E  0E00               	movlw	0
  7084  002A80  0100               	movlb	0	; () banked
  7085  002A82  6FB1               	movwf	___fladd@a& (0+255),b
  7086  002A84  0E00               	movlw	0
  7087  002A86  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  7088  002A88  0E00               	movlw	0
  7089  002A8A  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  7090  002A8C  0E00               	movlw	0
  7091  002A8E                     L4:
  7092  002A8E  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  7093                           
  7094                           ; BSR set to: 0
  7095                           
  7096                           ; BSR set to: 0
  7097  002A90  0100               	movlb	0	; () banked
  7098  002A92  51BF               	movf	___fladd@bexp& (0+255),w,b
  7099  002A94  0100               	movlb	0	; () banked
  7100  002A96  5DBE               	subwf	___fladd@aexp& (0+255),w,b
  7101  002A98  B0D8               	btfsc	status,0,c
  7102  002A9A  D024               	goto	l6121
  7103                           
  7104                           ; BSR set to: 0
  7105  002A9C  0100               	movlb	0	; () banked
  7106  002A9E  ADBD               	btfss	___fladd@signs& (0+255),6,b
  7107  002AA0  D003               	goto	l6091
  7108                           
  7109                           ; BSR set to: 0
  7110  002AA2  0E80               	movlw	128
  7111  002AA4  0100               	movlb	0	; () banked
  7112  002AA6  1BBD               	xorwf	___fladd@signs& (0+255),f,b
  7113  002AA8                     l6091:
  7114                           
  7115                           ; BSR set to: 0
  7116  002AA8  C0BF  F0C0         	movff	___fladd@bexp,___fladd@grs
  7117                           
  7118                           ; BSR set to: 0
  7119  002AAC  C0BE  F0BF         	movff	___fladd@aexp,___fladd@bexp
  7120                           
  7121                           ; BSR set to: 0
  7122  002AB0  C0C0  F0BE         	movff	___fladd@grs,___fladd@aexp
  7123                           
  7124                           ; BSR set to: 0
  7125  002AB4  C0AD  F0C0         	movff	___fladd@b,___fladd@grs
  7126                           
  7127                           ; BSR set to: 0
  7128  002AB8  C0B1  F0AD         	movff	___fladd@a,___fladd@b
  7129                           
  7130                           ; BSR set to: 0
  7131  002ABC  C0C0  F0B1         	movff	___fladd@grs,___fladd@a
  7132                           
  7133                           ; BSR set to: 0
  7134  002AC0  C0AE  F0C0         	movff	___fladd@b+1,___fladd@grs
  7135                           
  7136                           ; BSR set to: 0
  7137  002AC4  C0B2  F0AE         	movff	___fladd@a+1,___fladd@b+1
  7138                           
  7139                           ; BSR set to: 0
  7140  002AC8  C0C0  F0B2         	movff	___fladd@grs,___fladd@a+1
  7141                           
  7142                           ; BSR set to: 0
  7143  002ACC  C0AF  F0C0         	movff	___fladd@b+2,___fladd@grs
  7144                           
  7145                           ; BSR set to: 0
  7146  002AD0  C0B3  F0AF         	movff	___fladd@a+2,___fladd@b+2
  7147                           
  7148                           ; BSR set to: 0
  7149  002AD4  C0C0  F0B3         	movff	___fladd@grs,___fladd@a+2
  7150                           
  7151                           ; BSR set to: 0
  7152  002AD8  C0B0  F0C0         	movff	___fladd@b+3,___fladd@grs
  7153                           
  7154                           ; BSR set to: 0
  7155  002ADC  C0B4  F0B0         	movff	___fladd@a+3,___fladd@b+3
  7156                           
  7157                           ; BSR set to: 0
  7158  002AE0  C0C0  F0B4         	movff	___fladd@grs,___fladd@a+3
  7159  002AE4                     l6121:
  7160                           
  7161                           ; BSR set to: 0
  7162  002AE4  0E00               	movlw	0
  7163  002AE6  0100               	movlb	0	; () banked
  7164  002AE8  6FC0               	movwf	___fladd@grs& (0+255),b
  7165                           
  7166                           ; BSR set to: 0
  7167  002AEA  0100               	movlb	0	; () banked
  7168  002AEC  51BF               	movf	___fladd@bexp& (0+255),w,b
  7169  002AEE  0100               	movlb	0	; () banked
  7170  002AF0  6FB5               	movwf	??___fladd& (0+255),b
  7171  002AF2  6BB6               	clrf	(??___fladd+1)& (0+255),b
  7172  002AF4  0100               	movlb	0	; () banked
  7173  002AF6  1FB5               	comf	??___fladd& (0+255),f,b
  7174  002AF8  1FB6               	comf	(??___fladd+1)& (0+255),f,b
  7175  002AFA  4BB5               	infsnz	??___fladd& (0+255),f,b
  7176  002AFC  2BB6               	incf	(??___fladd+1)& (0+255),f,b
  7177  002AFE  0100               	movlb	0	; () banked
  7178  002B00  51BE               	movf	___fladd@aexp& (0+255),w,b
  7179  002B02  0100               	movlb	0	; () banked
  7180  002B04  6FB7               	movwf	(??___fladd+2)& (0+255),b
  7181  002B06  6BB8               	clrf	(??___fladd+3)& (0+255),b
  7182  002B08  0100               	movlb	0	; () banked
  7183  002B0A  51B5               	movf	??___fladd& (0+255),w,b
  7184  002B0C  0100               	movlb	0	; () banked
  7185  002B0E  27B7               	addwf	(??___fladd+2)& (0+255),f,b
  7186  002B10  0100               	movlb	0	; () banked
  7187  002B12  51B6               	movf	(??___fladd+1)& (0+255),w,b
  7188  002B14  0100               	movlb	0	; () banked
  7189  002B16  23B8               	addwfc	(??___fladd+3)& (0+255),f,b
  7190  002B18  0100               	movlb	0	; () banked
  7191  002B1A  BFB8               	btfsc	(??___fladd+3)& (0+255),7,b
  7192  002B1C  D03D               	goto	l1309
  7193  002B1E  0100               	movlb	0	; () banked
  7194  002B20  51B8               	movf	(??___fladd+3)& (0+255),w,b
  7195  002B22  E105               	bnz	u7400
  7196  002B24  0E1A               	movlw	26
  7197  002B26  0100               	movlb	0	; () banked
  7198  002B28  5DB7               	subwf	(??___fladd+2)& (0+255),w,b
  7199  002B2A  A0D8               	btfss	status,0,c
  7200  002B2C  D035               	goto	l1309
  7201  002B2E                     u7400:
  7202                           
  7203                           ; BSR set to: 0
  7204  002B2E  0100               	movlb	0	; () banked
  7205  002B30  51AD               	movf	___fladd@b& (0+255),w,b
  7206  002B32  0100               	movlb	0	; () banked
  7207  002B34  11AE               	iorwf	(___fladd@b+1)& (0+255),w,b
  7208  002B36  0100               	movlb	0	; () banked
  7209  002B38  11AF               	iorwf	(___fladd@b+2)& (0+255),w,b
  7210  002B3A  0100               	movlb	0	; () banked
  7211  002B3C  11B0               	iorwf	(___fladd@b+3)& (0+255),w,b
  7212  002B3E  B4D8               	btfsc	status,2,c
  7213  002B40  D002               	goto	u7410
  7214  002B42  0E01               	movlw	1
  7215  002B44  D001               	goto	u7420
  7216  002B46                     u7410:
  7217  002B46  0E00               	movlw	0
  7218  002B48                     u7420:
  7219  002B48  0100               	movlb	0	; () banked
  7220  002B4A  6FC0               	movwf	___fladd@grs& (0+255),b
  7221                           
  7222                           ; BSR set to: 0
  7223  002B4C  0E00               	movlw	0
  7224  002B4E  0100               	movlb	0	; () banked
  7225  002B50  6FAD               	movwf	___fladd@b& (0+255),b
  7226  002B52  0E00               	movlw	0
  7227  002B54  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  7228  002B56  0E00               	movlw	0
  7229  002B58  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  7230  002B5A  0E00               	movlw	0
  7231  002B5C  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  7232                           
  7233                           ; BSR set to: 0
  7234  002B5E  C0BE  F0BF         	movff	___fladd@aexp,___fladd@bexp
  7235  002B62  D020               	goto	l1308
  7236  002B64                     l1310:
  7237                           
  7238                           ; BSR set to: 0
  7239  002B64  0100               	movlb	0	; () banked
  7240  002B66  A1C0               	btfss	___fladd@grs& (0+255),0,b
  7241  002B68  D007               	goto	l6133
  7242                           
  7243                           ; BSR set to: 0
  7244  002B6A  0100               	movlb	0	; () banked
  7245  002B6C  90D8               	bcf	status,0,c
  7246  002B6E  31C0               	rrcf	___fladd@grs& (0+255),w,b
  7247  002B70  0901               	iorlw	1
  7248  002B72  0100               	movlb	0	; () banked
  7249  002B74  6FC0               	movwf	___fladd@grs& (0+255),b
  7250  002B76  D003               	goto	l6135
  7251  002B78                     l6133:
  7252                           
  7253                           ; BSR set to: 0
  7254  002B78  0100               	movlb	0	; () banked
  7255  002B7A  90D8               	bcf	status,0,c
  7256  002B7C  33C0               	rrcf	___fladd@grs& (0+255),f,b
  7257  002B7E                     l6135:
  7258                           
  7259                           ; BSR set to: 0
  7260  002B7E  0100               	movlb	0	; () banked
  7261  002B80  A1AD               	btfss	___fladd@b& (0+255),0,b
  7262  002B82  D002               	goto	l6139
  7263                           
  7264                           ; BSR set to: 0
  7265  002B84  0100               	movlb	0	; () banked
  7266  002B86  8FC0               	bsf	___fladd@grs& (0+255),7,b
  7267  002B88                     l6139:
  7268                           
  7269                           ; BSR set to: 0
  7270  002B88  0100               	movlb	0	; () banked
  7271  002B8A  35B0               	rlcf	(___fladd@b+3)& (0+255),w,b
  7272  002B8C  33B0               	rrcf	(___fladd@b+3)& (0+255),f,b
  7273  002B8E  33AF               	rrcf	(___fladd@b+2)& (0+255),f,b
  7274  002B90  33AE               	rrcf	(___fladd@b+1)& (0+255),f,b
  7275  002B92  33AD               	rrcf	___fladd@b& (0+255),f,b
  7276                           
  7277                           ; BSR set to: 0
  7278  002B94  0100               	movlb	0	; () banked
  7279  002B96  2BBF               	incf	___fladd@bexp& (0+255),f,b
  7280  002B98                     l1309:
  7281                           
  7282                           ; BSR set to: 0
  7283  002B98  0100               	movlb	0	; () banked
  7284  002B9A  51BE               	movf	___fladd@aexp& (0+255),w,b
  7285  002B9C  0100               	movlb	0	; () banked
  7286  002B9E  5DBF               	subwf	___fladd@bexp& (0+255),w,b
  7287  002BA0  A0D8               	btfss	status,0,c
  7288  002BA2  D7E0               	goto	l1310
  7289  002BA4                     l1308:
  7290                           
  7291                           ; BSR set to: 0
  7292  002BA4  0100               	movlb	0	; () banked
  7293  002BA6  BDBD               	btfsc	___fladd@signs& (0+255),6,b
  7294  002BA8  D03F               	goto	l6167
  7295                           
  7296                           ; BSR set to: 0
  7297  002BAA  0100               	movlb	0	; () banked
  7298  002BAC  51BF               	movf	___fladd@bexp& (0+255),w,b
  7299  002BAE  0100               	movlb	0	; () banked
  7300  002BB0  A4D8               	btfss	status,2,c
  7301  002BB2  D00A               	goto	l6149
  7302                           
  7303                           ; BSR set to: 0
  7304  002BB4  0E00               	movlw	0
  7305  002BB6  0100               	movlb	0	; () banked
  7306  002BB8  6FAD               	movwf	?___fladd& (0+255),b
  7307  002BBA  0E00               	movlw	0
  7308  002BBC  6FAE               	movwf	(?___fladd+1)& (0+255),b
  7309  002BBE  0E00               	movlw	0
  7310  002BC0  6FAF               	movwf	(?___fladd+2)& (0+255),b
  7311  002BC2  0E00               	movlw	0
  7312  002BC4  6FB0               	movwf	(?___fladd+3)& (0+255),b
  7313                           
  7314                           ; BSR set to: 0
  7315  002BC6  0012               	return	
  7316  002BC8                     l6149:
  7317                           
  7318                           ; BSR set to: 0
  7319  002BC8  0100               	movlb	0	; () banked
  7320  002BCA  51B1               	movf	___fladd@a& (0+255),w,b
  7321  002BCC  0100               	movlb	0	; () banked
  7322  002BCE  27AD               	addwf	___fladd@b& (0+255),f,b
  7323  002BD0  0100               	movlb	0	; () banked
  7324  002BD2  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  7325  002BD4  0100               	movlb	0	; () banked
  7326  002BD6  23AE               	addwfc	(___fladd@b+1)& (0+255),f,b
  7327  002BD8  0100               	movlb	0	; () banked
  7328  002BDA  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  7329  002BDC  0100               	movlb	0	; () banked
  7330  002BDE  23AF               	addwfc	(___fladd@b+2)& (0+255),f,b
  7331  002BE0  0100               	movlb	0	; () banked
  7332  002BE2  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  7333  002BE4  0100               	movlb	0	; () banked
  7334  002BE6  23B0               	addwfc	(___fladd@b+3)& (0+255),f,b
  7335                           
  7336                           ; BSR set to: 0
  7337  002BE8  0100               	movlb	0	; () banked
  7338  002BEA  A1B0               	btfss	(___fladd@b+3)& (0+255),0,b
  7339  002BEC  D0CC               	goto	l6203
  7340                           
  7341                           ; BSR set to: 0
  7342  002BEE  0100               	movlb	0	; () banked
  7343  002BF0  A1C0               	btfss	___fladd@grs& (0+255),0,b
  7344  002BF2  D009               	goto	l6157
  7345                           
  7346                           ; BSR set to: 0
  7347  002BF4  0100               	movlb	0	; () banked
  7348  002BF6  90D8               	bcf	status,0,c
  7349  002BF8  33C0               	rrcf	___fladd@grs& (0+255),f,b
  7350  002BFA  0100               	movlb	0	; () banked
  7351  002BFC  51C0               	movf	___fladd@grs& (0+255),w,b
  7352  002BFE  0901               	iorlw	1
  7353  002C00  0100               	movlb	0	; () banked
  7354  002C02  6FC0               	movwf	___fladd@grs& (0+255),b
  7355  002C04  D003               	goto	l6159
  7356  002C06                     l6157:
  7357                           
  7358                           ; BSR set to: 0
  7359  002C06  0100               	movlb	0	; () banked
  7360  002C08  90D8               	bcf	status,0,c
  7361  002C0A  33C0               	rrcf	___fladd@grs& (0+255),f,b
  7362  002C0C                     l6159:
  7363                           
  7364                           ; BSR set to: 0
  7365  002C0C  0100               	movlb	0	; () banked
  7366  002C0E  A1AD               	btfss	___fladd@b& (0+255),0,b
  7367  002C10  D002               	goto	l6163
  7368                           
  7369                           ; BSR set to: 0
  7370  002C12  0100               	movlb	0	; () banked
  7371  002C14  8FC0               	bsf	___fladd@grs& (0+255),7,b
  7372  002C16                     l6163:
  7373                           
  7374                           ; BSR set to: 0
  7375  002C16  0100               	movlb	0	; () banked
  7376  002C18  35B0               	rlcf	(___fladd@b+3)& (0+255),w,b
  7377  002C1A  33B0               	rrcf	(___fladd@b+3)& (0+255),f,b
  7378  002C1C  33AF               	rrcf	(___fladd@b+2)& (0+255),f,b
  7379  002C1E  33AE               	rrcf	(___fladd@b+1)& (0+255),f,b
  7380  002C20  33AD               	rrcf	___fladd@b& (0+255),f,b
  7381                           
  7382                           ; BSR set to: 0
  7383  002C22  0100               	movlb	0	; () banked
  7384  002C24  2BBF               	incf	___fladd@bexp& (0+255),f,b
  7385                           
  7386                           ; BSR set to: 0
  7387  002C26  D0AF               	goto	l6203
  7388  002C28                     l6167:
  7389                           
  7390                           ; BSR set to: 0
  7391  002C28  0100               	movlb	0	; () banked
  7392  002C2A  51B1               	movf	___fladd@a& (0+255),w,b
  7393  002C2C  0100               	movlb	0	; () banked
  7394  002C2E  5DAD               	subwf	___fladd@b& (0+255),w,b
  7395  002C30  0100               	movlb	0	; () banked
  7396  002C32  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  7397  002C34  0100               	movlb	0	; () banked
  7398  002C36  59AE               	subwfb	(___fladd@b+1)& (0+255),w,b
  7399  002C38  0100               	movlb	0	; () banked
  7400  002C3A  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  7401  002C3C  0100               	movlb	0	; () banked
  7402  002C3E  59AF               	subwfb	(___fladd@b+2)& (0+255),w,b
  7403  002C40  0100               	movlb	0	; () banked
  7404  002C42  51B0               	movf	(___fladd@b+3)& (0+255),w,b
  7405  002C44  0A80               	xorlw	128
  7406  002C46  0100               	movlb	0	; () banked
  7407  002C48  6FB5               	movwf	??___fladd& (0+255),b
  7408  002C4A  0100               	movlb	0	; () banked
  7409  002C4C  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  7410  002C4E  0A80               	xorlw	128
  7411  002C50  0100               	movlb	0	; () banked
  7412  002C52  59B5               	subwfb	??___fladd& (0+255),w,b
  7413  002C54  B0D8               	btfsc	status,0,c
  7414  002C56  D050               	goto	l6177
  7415                           
  7416                           ; BSR set to: 0
  7417  002C58  C0AD  F0B5         	movff	___fladd@b,??___fladd
  7418  002C5C  C0AE  F0B6         	movff	___fladd@b+1,??___fladd+1
  7419  002C60  C0AF  F0B7         	movff	___fladd@b+2,??___fladd+2
  7420  002C64  C0B0  F0B8         	movff	___fladd@b+3,??___fladd+3
  7421  002C68  0100               	movlb	0	; () banked
  7422  002C6A  1FB5               	comf	??___fladd& (0+255),f,b
  7423  002C6C  1FB6               	comf	(??___fladd+1)& (0+255),f,b
  7424  002C6E  1FB7               	comf	(??___fladd+2)& (0+255),f,b
  7425  002C70  1FB8               	comf	(??___fladd+3)& (0+255),f,b
  7426  002C72  2BB5               	incf	??___fladd& (0+255),f,b
  7427  002C74  0E00               	movlw	0
  7428  002C76  23B6               	addwfc	(??___fladd+1)& (0+255),f,b
  7429  002C78  23B7               	addwfc	(??___fladd+2)& (0+255),f,b
  7430  002C7A  23B8               	addwfc	(??___fladd+3)& (0+255),f,b
  7431  002C7C  0100               	movlb	0	; () banked
  7432  002C7E  51B1               	movf	___fladd@a& (0+255),w,b
  7433  002C80  0100               	movlb	0	; () banked
  7434  002C82  25B5               	addwf	??___fladd& (0+255),w,b
  7435  002C84  0100               	movlb	0	; () banked
  7436  002C86  6FB9               	movwf	(??___fladd+4)& (0+255),b
  7437  002C88  0100               	movlb	0	; () banked
  7438  002C8A  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  7439  002C8C  0100               	movlb	0	; () banked
  7440  002C8E  21B6               	addwfc	(??___fladd+1)& (0+255),w,b
  7441  002C90  0100               	movlb	0	; () banked
  7442  002C92  6FBA               	movwf	(??___fladd+5)& (0+255),b
  7443  002C94  0100               	movlb	0	; () banked
  7444  002C96  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  7445  002C98  0100               	movlb	0	; () banked
  7446  002C9A  21B7               	addwfc	(??___fladd+2)& (0+255),w,b
  7447  002C9C  0100               	movlb	0	; () banked
  7448  002C9E  6FBB               	movwf	(??___fladd+6)& (0+255),b
  7449  002CA0  0100               	movlb	0	; () banked
  7450  002CA2  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  7451  002CA4  0100               	movlb	0	; () banked
  7452  002CA6  21B8               	addwfc	(??___fladd+3)& (0+255),w,b
  7453  002CA8  0100               	movlb	0	; () banked
  7454  002CAA  6FBC               	movwf	(??___fladd+7)& (0+255),b
  7455  002CAC  0EFF               	movlw	255
  7456  002CAE  0100               	movlb	0	; () banked
  7457  002CB0  25B9               	addwf	(??___fladd+4)& (0+255),w,b
  7458  002CB2  0100               	movlb	0	; () banked
  7459  002CB4  6FAD               	movwf	___fladd@b& (0+255),b
  7460  002CB6  0EFF               	movlw	255
  7461  002CB8  0100               	movlb	0	; () banked
  7462  002CBA  21BA               	addwfc	(??___fladd+5)& (0+255),w,b
  7463  002CBC  0100               	movlb	0	; () banked
  7464  002CBE  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  7465  002CC0  0EFF               	movlw	255
  7466  002CC2  0100               	movlb	0	; () banked
  7467  002CC4  21BB               	addwfc	(??___fladd+6)& (0+255),w,b
  7468  002CC6  0100               	movlb	0	; () banked
  7469  002CC8  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  7470  002CCA  0EFF               	movlw	255
  7471  002CCC  0100               	movlb	0	; () banked
  7472  002CCE  21BC               	addwfc	(??___fladd+7)& (0+255),w,b
  7473  002CD0  0100               	movlb	0	; () banked
  7474  002CD2  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  7475  002CD4  0E80               	movlw	128
  7476  002CD6  0100               	movlb	0	; () banked
  7477  002CD8  1BBD               	xorwf	___fladd@signs& (0+255),f,b
  7478                           
  7479                           ; BSR set to: 0
  7480  002CDA  0100               	movlb	0	; () banked
  7481  002CDC  6DC0               	negf	___fladd@grs& (0+255),b
  7482                           
  7483                           ; BSR set to: 0
  7484  002CDE  0100               	movlb	0	; () banked
  7485  002CE0  51C0               	movf	___fladd@grs& (0+255),w,b
  7486  002CE2  0100               	movlb	0	; () banked
  7487  002CE4  A4D8               	btfss	status,2,c
  7488  002CE6  D018               	goto	l1325
  7489                           
  7490                           ; BSR set to: 0
  7491  002CE8  0E01               	movlw	1
  7492  002CEA  0100               	movlb	0	; () banked
  7493  002CEC  27AD               	addwf	___fladd@b& (0+255),f,b
  7494  002CEE  0E00               	movlw	0
  7495  002CF0  23AE               	addwfc	(___fladd@b+1)& (0+255),f,b
  7496  002CF2  23AF               	addwfc	(___fladd@b+2)& (0+255),f,b
  7497  002CF4  23B0               	addwfc	(___fladd@b+3)& (0+255),f,b
  7498                           
  7499                           ; BSR set to: 0
  7500  002CF6  D010               	goto	l1325
  7501  002CF8                     l6177:
  7502                           
  7503                           ; BSR set to: 0
  7504  002CF8  0100               	movlb	0	; () banked
  7505  002CFA  51B1               	movf	___fladd@a& (0+255),w,b
  7506  002CFC  0100               	movlb	0	; () banked
  7507  002CFE  5FAD               	subwf	___fladd@b& (0+255),f,b
  7508  002D00  0100               	movlb	0	; () banked
  7509  002D02  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  7510  002D04  0100               	movlb	0	; () banked
  7511  002D06  5BAE               	subwfb	(___fladd@b+1)& (0+255),f,b
  7512  002D08  0100               	movlb	0	; () banked
  7513  002D0A  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  7514  002D0C  0100               	movlb	0	; () banked
  7515  002D0E  5BAF               	subwfb	(___fladd@b+2)& (0+255),f,b
  7516  002D10  0100               	movlb	0	; () banked
  7517  002D12  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  7518  002D14  0100               	movlb	0	; () banked
  7519  002D16  5BB0               	subwfb	(___fladd@b+3)& (0+255),f,b
  7520  002D18                     l1325:
  7521                           
  7522                           ; BSR set to: 0
  7523  002D18  0100               	movlb	0	; () banked
  7524  002D1A  51AD               	movf	___fladd@b& (0+255),w,b
  7525  002D1C  0100               	movlb	0	; () banked
  7526  002D1E  11AE               	iorwf	(___fladd@b+1)& (0+255),w,b
  7527  002D20  0100               	movlb	0	; () banked
  7528  002D22  11AF               	iorwf	(___fladd@b+2)& (0+255),w,b
  7529  002D24  0100               	movlb	0	; () banked
  7530  002D26  11B0               	iorwf	(___fladd@b+3)& (0+255),w,b
  7531  002D28  A4D8               	btfss	status,2,c
  7532  002D2A  D02A               	goto	l6201
  7533                           
  7534                           ; BSR set to: 0
  7535  002D2C  0100               	movlb	0	; () banked
  7536  002D2E  51C0               	movf	___fladd@grs& (0+255),w,b
  7537  002D30  0100               	movlb	0	; () banked
  7538  002D32  A4D8               	btfss	status,2,c
  7539  002D34  D025               	goto	l6201
  7540                           
  7541                           ; BSR set to: 0
  7542  002D36  0E00               	movlw	0
  7543  002D38  0100               	movlb	0	; () banked
  7544  002D3A  6FAD               	movwf	?___fladd& (0+255),b
  7545  002D3C  0E00               	movlw	0
  7546  002D3E  6FAE               	movwf	(?___fladd+1)& (0+255),b
  7547  002D40  0E00               	movlw	0
  7548  002D42  6FAF               	movwf	(?___fladd+2)& (0+255),b
  7549  002D44  0E00               	movlw	0
  7550  002D46  6FB0               	movwf	(?___fladd+3)& (0+255),b
  7551                           
  7552                           ; BSR set to: 0
  7553  002D48  0012               	return	
  7554  002D4A                     l6185:
  7555                           
  7556                           ; BSR set to: 0
  7557  002D4A  0100               	movlb	0	; () banked
  7558  002D4C  90D8               	bcf	status,0,c
  7559  002D4E  37AD               	rlcf	___fladd@b& (0+255),f,b
  7560  002D50  37AE               	rlcf	(___fladd@b+1)& (0+255),f,b
  7561  002D52  37AF               	rlcf	(___fladd@b+2)& (0+255),f,b
  7562  002D54  37B0               	rlcf	(___fladd@b+3)& (0+255),f,b
  7563                           
  7564                           ; BSR set to: 0
  7565  002D56  0100               	movlb	0	; () banked
  7566  002D58  AFC0               	btfss	___fladd@grs& (0+255),7,b
  7567  002D5A  D002               	goto	l6191
  7568                           
  7569                           ; BSR set to: 0
  7570  002D5C  0100               	movlb	0	; () banked
  7571  002D5E  81AD               	bsf	___fladd@b& (0+255),0,b
  7572  002D60                     l6191:
  7573                           
  7574                           ; BSR set to: 0
  7575  002D60  0100               	movlb	0	; () banked
  7576  002D62  A1C0               	btfss	___fladd@grs& (0+255),0,b
  7577  002D64  D003               	goto	l6195
  7578                           
  7579                           ; BSR set to: 0
  7580  002D66  80D8               	bsf	status,0,c
  7581  002D68  0100               	movlb	0	; () banked
  7582  002D6A  D002               	goto	L5
  7583  002D6C                     l6195:
  7584                           
  7585                           ; BSR set to: 0
  7586  002D6C  0100               	movlb	0	; () banked
  7587  002D6E  90D8               	bcf	status,0,c
  7588  002D70                     L5:
  7589  002D70  37C0               	rlcf	___fladd@grs& (0+255),f,b
  7590                           
  7591                           ; BSR set to: 0
  7592                           
  7593                           ; BSR set to: 0
  7594  002D72  0100               	movlb	0	; () banked
  7595  002D74  51BF               	movf	___fladd@bexp& (0+255),w,b
  7596  002D76  0100               	movlb	0	; () banked
  7597  002D78  B4D8               	btfsc	status,2,c
  7598  002D7A  D002               	goto	l6201
  7599                           
  7600                           ; BSR set to: 0
  7601  002D7C  0100               	movlb	0	; () banked
  7602  002D7E  07BF               	decf	___fladd@bexp& (0+255),f,b
  7603  002D80                     l6201:
  7604                           
  7605                           ; BSR set to: 0
  7606  002D80  0100               	movlb	0	; () banked
  7607  002D82  AFAF               	btfss	(___fladd@b+2)& (0+255),7,b
  7608  002D84  D7E2               	goto	l6185
  7609  002D86                     l6203:
  7610                           
  7611                           ; BSR set to: 0
  7612  002D86  0E00               	movlw	0
  7613  002D88  0100               	movlb	0	; () banked
  7614  002D8A  6FBE               	movwf	___fladd@aexp& (0+255),b
  7615                           
  7616                           ; BSR set to: 0
  7617  002D8C  0100               	movlb	0	; () banked
  7618  002D8E  AFC0               	btfss	___fladd@grs& (0+255),7,b
  7619  002D90  D00D               	goto	l1334
  7620                           
  7621                           ; BSR set to: 0
  7622  002D92  C0C0  F0B5         	movff	___fladd@grs,??___fladd
  7623  002D96  0E7F               	movlw	127
  7624  002D98  0100               	movlb	0	; () banked
  7625  002D9A  17B5               	andwf	??___fladd& (0+255),f,b
  7626  002D9C  A4D8               	btfss	status,2,c
  7627  002D9E  D003               	goto	l6211
  7628                           
  7629                           ; BSR set to: 0
  7630                           
  7631                           ; BSR set to: 0
  7632  002DA0  0100               	movlb	0	; () banked
  7633  002DA2  A1AD               	btfss	___fladd@b& (0+255),0,b
  7634  002DA4  D003               	goto	l1334
  7635  002DA6                     l6211:
  7636                           
  7637                           ; BSR set to: 0
  7638  002DA6  0E01               	movlw	1
  7639  002DA8  0100               	movlb	0	; () banked
  7640  002DAA  6FBE               	movwf	___fladd@aexp& (0+255),b
  7641  002DAC                     l1334:
  7642                           
  7643                           ; BSR set to: 0
  7644  002DAC  0100               	movlb	0	; () banked
  7645  002DAE  51BE               	movf	___fladd@aexp& (0+255),w,b
  7646  002DB0  0100               	movlb	0	; () banked
  7647  002DB2  B4D8               	btfsc	status,2,c
  7648  002DB4  D026               	goto	l6221
  7649                           
  7650                           ; BSR set to: 0
  7651  002DB6  0E01               	movlw	1
  7652  002DB8  0100               	movlb	0	; () banked
  7653  002DBA  27AD               	addwf	___fladd@b& (0+255),f,b
  7654  002DBC  0E00               	movlw	0
  7655  002DBE  23AE               	addwfc	(___fladd@b+1)& (0+255),f,b
  7656  002DC0  23AF               	addwfc	(___fladd@b+2)& (0+255),f,b
  7657  002DC2  23B0               	addwfc	(___fladd@b+3)& (0+255),f,b
  7658                           
  7659                           ; BSR set to: 0
  7660  002DC4  0100               	movlb	0	; () banked
  7661  002DC6  A1B0               	btfss	(___fladd@b+3)& (0+255),0,b
  7662  002DC8  D01C               	goto	l6221
  7663                           
  7664                           ; BSR set to: 0
  7665  002DCA  C0AD  F0B5         	movff	___fladd@b,??___fladd
  7666  002DCE  C0AE  F0B6         	movff	___fladd@b+1,??___fladd+1
  7667  002DD2  C0AF  F0B7         	movff	___fladd@b+2,??___fladd+2
  7668  002DD6  C0B0  F0B8         	movff	___fladd@b+3,??___fladd+3
  7669  002DDA  0100               	movlb	0	; () banked
  7670  002DDC  35B8               	rlcf	(??___fladd+3)& (0+255),w,b
  7671  002DDE  33B8               	rrcf	(??___fladd+3)& (0+255),f,b
  7672  002DE0  33B7               	rrcf	(??___fladd+2)& (0+255),f,b
  7673  002DE2  33B6               	rrcf	(??___fladd+1)& (0+255),f,b
  7674  002DE4  33B5               	rrcf	??___fladd& (0+255),f,b
  7675  002DE6  C0B5  F0AD         	movff	??___fladd,___fladd@b
  7676  002DEA  C0B6  F0AE         	movff	??___fladd+1,___fladd@b+1
  7677  002DEE  C0B7  F0AF         	movff	??___fladd+2,___fladd@b+2
  7678  002DF2  C0B8  F0B0         	movff	??___fladd+3,___fladd@b+3
  7679  002DF6  0100               	movlb	0	; () banked
  7680  002DF8  29BF               	incf	___fladd@bexp& (0+255),w,b
  7681  002DFA  B4D8               	btfsc	status,2,c
  7682  002DFC  D002               	goto	l6221
  7683                           
  7684                           ; BSR set to: 0
  7685  002DFE  0100               	movlb	0	; () banked
  7686  002E00  2BBF               	incf	___fladd@bexp& (0+255),f,b
  7687  002E02                     l6221:
  7688                           
  7689                           ; BSR set to: 0
  7690  002E02  0100               	movlb	0	; () banked
  7691  002E04  29BF               	incf	___fladd@bexp& (0+255),w,b
  7692  002E06  B4D8               	btfsc	status,2,c
  7693  002E08  D005               	goto	l6225
  7694                           
  7695                           ; BSR set to: 0
  7696  002E0A  0100               	movlb	0	; () banked
  7697  002E0C  51BF               	movf	___fladd@bexp& (0+255),w,b
  7698  002E0E  0100               	movlb	0	; () banked
  7699  002E10  A4D8               	btfss	status,2,c
  7700  002E12  D011               	goto	l6229
  7701  002E14                     l6225:
  7702                           
  7703                           ; BSR set to: 0
  7704  002E14  0E00               	movlw	0
  7705  002E16  0100               	movlb	0	; () banked
  7706  002E18  6FAD               	movwf	___fladd@b& (0+255),b
  7707  002E1A  0E00               	movlw	0
  7708  002E1C  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  7709  002E1E  0E00               	movlw	0
  7710  002E20  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  7711  002E22  0E00               	movlw	0
  7712  002E24  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  7713  002E26  0100               	movlb	0	; () banked
  7714  002E28  51BF               	movf	___fladd@bexp& (0+255),w,b
  7715  002E2A  0100               	movlb	0	; () banked
  7716  002E2C  A4D8               	btfss	status,2,c
  7717  002E2E  D003               	goto	l6229
  7718                           
  7719                           ; BSR set to: 0
  7720  002E30  0E00               	movlw	0
  7721  002E32  0100               	movlb	0	; () banked
  7722  002E34  6FBD               	movwf	___fladd@signs& (0+255),b
  7723  002E36                     l6229:
  7724                           
  7725                           ; BSR set to: 0
  7726  002E36  0100               	movlb	0	; () banked
  7727  002E38  A1BF               	btfss	___fladd@bexp& (0+255),0,b
  7728  002E3A  D003               	goto	l6233
  7729                           
  7730                           ; BSR set to: 0
  7731  002E3C  0100               	movlb	0	; () banked
  7732  002E3E  8FAF               	bsf	(___fladd@b+2)& (0+255),7,b
  7733  002E40  D002               	goto	l6235
  7734  002E42                     l6233:
  7735                           
  7736                           ; BSR set to: 0
  7737  002E42  0100               	movlb	0	; () banked
  7738  002E44  9FAF               	bcf	(___fladd@b+2)& (0+255),7,b
  7739  002E46                     l6235:
  7740                           
  7741                           ; BSR set to: 0
  7742  002E46  0100               	movlb	0	; () banked
  7743  002E48  90D8               	bcf	status,0,c
  7744  002E4A  31BF               	rrcf	___fladd@bexp& (0+255),w,b
  7745  002E4C  0100               	movlb	0	; () banked
  7746  002E4E  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  7747                           
  7748                           ; BSR set to: 0
  7749  002E50  0100               	movlb	0	; () banked
  7750  002E52  AFBD               	btfss	___fladd@signs& (0+255),7,b
  7751  002E54  D002               	goto	l6241
  7752                           
  7753                           ; BSR set to: 0
  7754  002E56  0100               	movlb	0	; () banked
  7755  002E58  8FB0               	bsf	(___fladd@b+3)& (0+255),7,b
  7756  002E5A                     l6241:
  7757                           
  7758                           ; BSR set to: 0
  7759  002E5A  C0AD  F0AD         	movff	___fladd@b,?___fladd
  7760  002E5E  C0AE  F0AE         	movff	___fladd@b+1,?___fladd+1
  7761  002E62  C0AF  F0AF         	movff	___fladd@b+2,?___fladd+2
  7762  002E66  C0B0  F0B0         	movff	___fladd@b+3,?___fladd+3
  7763  002E6A  0012               	return	
  7764  002E6C                     __end_of___fladd:
  7765                           	opt stack 0
  7766                           tblptru	equ	0xFF8
  7767                           tblptrh	equ	0xFF7
  7768                           tblptrl	equ	0xFF6
  7769                           tablat	equ	0xFF5
  7770                           prodh	equ	0xFF4
  7771                           prodl	equ	0xFF3
  7772                           postinc0	equ	0xFEE
  7773                           wreg	equ	0xFE8
  7774                           postdec1	equ	0xFE5
  7775                           fsr1l	equ	0xFE1
  7776                           postinc2	equ	0xFDE
  7777                           postdec2	equ	0xFDD
  7778                           fsr2h	equ	0xFDA
  7779                           fsr2l	equ	0xFD9
  7780                           status	equ	0xFD8
  7781                           
  7782 ;; *************** function ___flge *****************
  7783 ;; Defined at:
  7784 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  7785 ;; Parameters:    Size  Location     Type
  7786 ;;  ff1             4   81[BANK0 ] unsigned char 
  7787 ;;  ff2             4   85[BANK0 ] unsigned char 
  7788 ;; Auto vars:     Size  Location     Type
  7789 ;;		None
  7790 ;; Return value:  Size  Location     Type
  7791 ;;		None               void
  7792 ;; Registers used:
  7793 ;;		wreg, status,2, status,0
  7794 ;; Tracked objects:
  7795 ;;		On entry : 0/0
  7796 ;;		On exit  : 0/0
  7797 ;;		Unchanged: 0/0
  7798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7799 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7801 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7802 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7803 ;;Total ram usage:       12 bytes
  7804 ;; Hardware stack levels used:    1
  7805 ;; Hardware stack levels required when called:    4
  7806 ;; This function calls:
  7807 ;;		Nothing
  7808 ;; This function is called by:
  7809 ;;		_parallelo
  7810 ;;		_asin
  7811 ;;		_atan
  7812 ;;		_cos
  7813 ;;		_sin
  7814 ;;		_floor
  7815 ;; This function uses a non-reentrant model
  7816 ;;
  7817                           
  7818                           	psect	text21
  7819  00515C                     __ptext21:
  7820                           	opt stack 0
  7821  00515C                     ___flge:
  7822                           	opt stack 22
  7823                           
  7824                           ; BSR set to: 0
  7825                           ;incstack = 0
  7826  00515C  0E00               	movlw	0
  7827  00515E  0100               	movlb	0	; () banked
  7828  005160  15B1               	andwf	___flge@ff1& (0+255),w,b
  7829  005162  0100               	movlb	0	; () banked
  7830  005164  6FB9               	movwf	??___flge& (0+255),b
  7831  005166  0E00               	movlw	0
  7832  005168  0100               	movlb	0	; () banked
  7833  00516A  15B2               	andwf	(___flge@ff1+1)& (0+255),w,b
  7834  00516C  0100               	movlb	0	; () banked
  7835  00516E  6FBA               	movwf	(??___flge+1)& (0+255),b
  7836  005170  0E80               	movlw	128
  7837  005172  0100               	movlb	0	; () banked
  7838  005174  15B3               	andwf	(___flge@ff1+2)& (0+255),w,b
  7839  005176  0100               	movlb	0	; () banked
  7840  005178  6FBB               	movwf	(??___flge+2)& (0+255),b
  7841  00517A  0E7F               	movlw	127
  7842  00517C  0100               	movlb	0	; () banked
  7843  00517E  15B4               	andwf	(___flge@ff1+3)& (0+255),w,b
  7844  005180  0100               	movlb	0	; () banked
  7845  005182  6FBC               	movwf	(??___flge+3)& (0+255),b
  7846  005184  0100               	movlb	0	; () banked
  7847  005186  51B9               	movf	??___flge& (0+255),w,b
  7848  005188  0100               	movlb	0	; () banked
  7849  00518A  11BA               	iorwf	(??___flge+1)& (0+255),w,b
  7850  00518C  0100               	movlb	0	; () banked
  7851  00518E  11BB               	iorwf	(??___flge+2)& (0+255),w,b
  7852  005190  0100               	movlb	0	; () banked
  7853  005192  11BC               	iorwf	(??___flge+3)& (0+255),w,b
  7854  005194  A4D8               	btfss	status,2,c
  7855  005196  D009               	goto	l6379
  7856                           
  7857                           ; BSR set to: 0
  7858  005198  0E00               	movlw	0
  7859  00519A  0100               	movlb	0	; () banked
  7860  00519C  6FB1               	movwf	___flge@ff1& (0+255),b
  7861  00519E  0E00               	movlw	0
  7862  0051A0  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  7863  0051A2  0E00               	movlw	0
  7864  0051A4  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  7865  0051A6  0E00               	movlw	0
  7866  0051A8  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  7867  0051AA                     l6379:
  7868                           
  7869                           ; BSR set to: 0
  7870  0051AA  0E00               	movlw	0
  7871  0051AC  0100               	movlb	0	; () banked
  7872  0051AE  15B5               	andwf	___flge@ff2& (0+255),w,b
  7873  0051B0  0100               	movlb	0	; () banked
  7874  0051B2  6FB9               	movwf	??___flge& (0+255),b
  7875  0051B4  0E00               	movlw	0
  7876  0051B6  0100               	movlb	0	; () banked
  7877  0051B8  15B6               	andwf	(___flge@ff2+1)& (0+255),w,b
  7878  0051BA  0100               	movlb	0	; () banked
  7879  0051BC  6FBA               	movwf	(??___flge+1)& (0+255),b
  7880  0051BE  0E80               	movlw	128
  7881  0051C0  0100               	movlb	0	; () banked
  7882  0051C2  15B7               	andwf	(___flge@ff2+2)& (0+255),w,b
  7883  0051C4  0100               	movlb	0	; () banked
  7884  0051C6  6FBB               	movwf	(??___flge+2)& (0+255),b
  7885  0051C8  0E7F               	movlw	127
  7886  0051CA  0100               	movlb	0	; () banked
  7887  0051CC  15B8               	andwf	(___flge@ff2+3)& (0+255),w,b
  7888  0051CE  0100               	movlb	0	; () banked
  7889  0051D0  6FBC               	movwf	(??___flge+3)& (0+255),b
  7890  0051D2  0100               	movlb	0	; () banked
  7891  0051D4  51B9               	movf	??___flge& (0+255),w,b
  7892  0051D6  0100               	movlb	0	; () banked
  7893  0051D8  11BA               	iorwf	(??___flge+1)& (0+255),w,b
  7894  0051DA  0100               	movlb	0	; () banked
  7895  0051DC  11BB               	iorwf	(??___flge+2)& (0+255),w,b
  7896  0051DE  0100               	movlb	0	; () banked
  7897  0051E0  11BC               	iorwf	(??___flge+3)& (0+255),w,b
  7898  0051E2  A4D8               	btfss	status,2,c
  7899  0051E4  D009               	goto	l6383
  7900                           
  7901                           ; BSR set to: 0
  7902  0051E6  0E00               	movlw	0
  7903  0051E8  0100               	movlb	0	; () banked
  7904  0051EA  6FB5               	movwf	___flge@ff2& (0+255),b
  7905  0051EC  0E00               	movlw	0
  7906  0051EE  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  7907  0051F0  0E00               	movlw	0
  7908  0051F2  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  7909  0051F4  0E00               	movlw	0
  7910  0051F6  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  7911  0051F8                     l6383:
  7912                           
  7913                           ; BSR set to: 0
  7914  0051F8  0100               	movlb	0	; () banked
  7915  0051FA  AFB4               	btfss	(___flge@ff1+3)& (0+255),7,b
  7916  0051FC  D026               	goto	l6387
  7917                           
  7918                           ; BSR set to: 0
  7919  0051FE  C0B1  F0B9         	movff	___flge@ff1,??___flge
  7920  005202  C0B2  F0BA         	movff	___flge@ff1+1,??___flge+1
  7921  005206  C0B3  F0BB         	movff	___flge@ff1+2,??___flge+2
  7922  00520A  C0B4  F0BC         	movff	___flge@ff1+3,??___flge+3
  7923  00520E  0100               	movlb	0	; () banked
  7924  005210  1FB9               	comf	??___flge& (0+255),f,b
  7925  005212  1FBA               	comf	(??___flge+1)& (0+255),f,b
  7926  005214  1FBB               	comf	(??___flge+2)& (0+255),f,b
  7927  005216  1FBC               	comf	(??___flge+3)& (0+255),f,b
  7928  005218  2BB9               	incf	??___flge& (0+255),f,b
  7929  00521A  0E00               	movlw	0
  7930  00521C  23BA               	addwfc	(??___flge+1)& (0+255),f,b
  7931  00521E  23BB               	addwfc	(??___flge+2)& (0+255),f,b
  7932  005220  23BC               	addwfc	(??___flge+3)& (0+255),f,b
  7933  005222  0E00               	movlw	0
  7934  005224  0100               	movlb	0	; () banked
  7935  005226  25B9               	addwf	??___flge& (0+255),w,b
  7936  005228  0100               	movlb	0	; () banked
  7937  00522A  6FB1               	movwf	___flge@ff1& (0+255),b
  7938  00522C  0E00               	movlw	0
  7939  00522E  0100               	movlb	0	; () banked
  7940  005230  21BA               	addwfc	(??___flge+1)& (0+255),w,b
  7941  005232  0100               	movlb	0	; () banked
  7942  005234  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  7943  005236  0E00               	movlw	0
  7944  005238  0100               	movlb	0	; () banked
  7945  00523A  21BB               	addwfc	(??___flge+2)& (0+255),w,b
  7946  00523C  0100               	movlb	0	; () banked
  7947  00523E  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  7948  005240  0E80               	movlw	128
  7949  005242  0100               	movlb	0	; () banked
  7950  005244  21BC               	addwfc	(??___flge+3)& (0+255),w,b
  7951  005246  0100               	movlb	0	; () banked
  7952  005248  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  7953  00524A                     l6387:
  7954                           
  7955                           ; BSR set to: 0
  7956  00524A  0100               	movlb	0	; () banked
  7957  00524C  AFB8               	btfss	(___flge@ff2+3)& (0+255),7,b
  7958  00524E  D026               	goto	l1056
  7959                           
  7960                           ; BSR set to: 0
  7961  005250  C0B5  F0B9         	movff	___flge@ff2,??___flge
  7962  005254  C0B6  F0BA         	movff	___flge@ff2+1,??___flge+1
  7963  005258  C0B7  F0BB         	movff	___flge@ff2+2,??___flge+2
  7964  00525C  C0B8  F0BC         	movff	___flge@ff2+3,??___flge+3
  7965  005260  0100               	movlb	0	; () banked
  7966  005262  1FB9               	comf	??___flge& (0+255),f,b
  7967  005264  1FBA               	comf	(??___flge+1)& (0+255),f,b
  7968  005266  1FBB               	comf	(??___flge+2)& (0+255),f,b
  7969  005268  1FBC               	comf	(??___flge+3)& (0+255),f,b
  7970  00526A  2BB9               	incf	??___flge& (0+255),f,b
  7971  00526C  0E00               	movlw	0
  7972  00526E  23BA               	addwfc	(??___flge+1)& (0+255),f,b
  7973  005270  23BB               	addwfc	(??___flge+2)& (0+255),f,b
  7974  005272  23BC               	addwfc	(??___flge+3)& (0+255),f,b
  7975  005274  0E00               	movlw	0
  7976  005276  0100               	movlb	0	; () banked
  7977  005278  25B9               	addwf	??___flge& (0+255),w,b
  7978  00527A  0100               	movlb	0	; () banked
  7979  00527C  6FB5               	movwf	___flge@ff2& (0+255),b
  7980  00527E  0E00               	movlw	0
  7981  005280  0100               	movlb	0	; () banked
  7982  005282  21BA               	addwfc	(??___flge+1)& (0+255),w,b
  7983  005284  0100               	movlb	0	; () banked
  7984  005286  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  7985  005288  0E00               	movlw	0
  7986  00528A  0100               	movlb	0	; () banked
  7987  00528C  21BB               	addwfc	(??___flge+2)& (0+255),w,b
  7988  00528E  0100               	movlb	0	; () banked
  7989  005290  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  7990  005292  0E80               	movlw	128
  7991  005294  0100               	movlb	0	; () banked
  7992  005296  21BC               	addwfc	(??___flge+3)& (0+255),w,b
  7993  005298  0100               	movlb	0	; () banked
  7994  00529A  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  7995  00529C                     l1056:
  7996                           
  7997                           ; BSR set to: 0
  7998  00529C  0E00               	movlw	0
  7999  00529E  0100               	movlb	0	; () banked
  8000  0052A0  1BB1               	xorwf	___flge@ff1& (0+255),f,b
  8001  0052A2  0E00               	movlw	0
  8002  0052A4  1BB2               	xorwf	(___flge@ff1+1)& (0+255),f,b
  8003  0052A6  0E00               	movlw	0
  8004  0052A8  1BB3               	xorwf	(___flge@ff1+2)& (0+255),f,b
  8005  0052AA  0E80               	movlw	128
  8006  0052AC  1BB4               	xorwf	(___flge@ff1+3)& (0+255),f,b
  8007  0052AE  0E00               	movlw	0
  8008  0052B0  0100               	movlb	0	; () banked
  8009  0052B2  1BB5               	xorwf	___flge@ff2& (0+255),f,b
  8010  0052B4  0E00               	movlw	0
  8011  0052B6  1BB6               	xorwf	(___flge@ff2+1)& (0+255),f,b
  8012  0052B8  0E00               	movlw	0
  8013  0052BA  1BB7               	xorwf	(___flge@ff2+2)& (0+255),f,b
  8014  0052BC  0E80               	movlw	128
  8015  0052BE  1BB8               	xorwf	(___flge@ff2+3)& (0+255),f,b
  8016  0052C0  0100               	movlb	0	; () banked
  8017  0052C2  51B5               	movf	___flge@ff2& (0+255),w,b
  8018  0052C4  0100               	movlb	0	; () banked
  8019  0052C6  5DB1               	subwf	___flge@ff1& (0+255),w,b
  8020  0052C8  0100               	movlb	0	; () banked
  8021  0052CA  51B6               	movf	(___flge@ff2+1)& (0+255),w,b
  8022  0052CC  0100               	movlb	0	; () banked
  8023  0052CE  59B2               	subwfb	(___flge@ff1+1)& (0+255),w,b
  8024  0052D0  0100               	movlb	0	; () banked
  8025  0052D2  51B7               	movf	(___flge@ff2+2)& (0+255),w,b
  8026  0052D4  0100               	movlb	0	; () banked
  8027  0052D6  59B3               	subwfb	(___flge@ff1+2)& (0+255),w,b
  8028  0052D8  0100               	movlb	0	; () banked
  8029  0052DA  51B8               	movf	(___flge@ff2+3)& (0+255),w,b
  8030  0052DC  0100               	movlb	0	; () banked
  8031  0052DE  59B4               	subwfb	(___flge@ff1+3)& (0+255),w,b
  8032  0052E0  B0D8               	btfsc	status,0,c
  8033  0052E2  D002               	goto	l6393
  8034                           
  8035                           ; BSR set to: 0
  8036  0052E4  90D8               	bcf	status,0,c
  8037  0052E6  0012               	return	
  8038  0052E8                     l6393:
  8039                           
  8040                           ; BSR set to: 0
  8041  0052E8  80D8               	bsf	status,0,c
  8042                           
  8043                           ; BSR set to: 0
  8044  0052EA  0012               	return	
  8045  0052EC                     __end_of___flge:
  8046                           	opt stack 0
  8047                           tblptru	equ	0xFF8
  8048                           tblptrh	equ	0xFF7
  8049                           tblptrl	equ	0xFF6
  8050                           tablat	equ	0xFF5
  8051                           prodh	equ	0xFF4
  8052                           prodl	equ	0xFF3
  8053                           postinc0	equ	0xFEE
  8054                           wreg	equ	0xFE8
  8055                           postdec1	equ	0xFE5
  8056                           fsr1l	equ	0xFE1
  8057                           postinc2	equ	0xFDE
  8058                           postdec2	equ	0xFDD
  8059                           fsr2h	equ	0xFDA
  8060                           fsr2l	equ	0xFD9
  8061                           status	equ	0xFD8
  8062                           
  8063 ;; *************** function ___fldiv *****************
  8064 ;; Defined at:
  8065 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
  8066 ;; Parameters:    Size  Location     Type
  8067 ;;  b               4   23[BANK0 ] unsigned char 
  8068 ;;  a               4   27[BANK0 ] unsigned char 
  8069 ;; Auto vars:     Size  Location     Type
  8070 ;;  grs             4   42[BANK0 ] unsigned long 
  8071 ;;  rem             4   36[BANK0 ] unsigned long 
  8072 ;;  new_exp         2   40[BANK0 ] int 
  8073 ;;  aexp            1   47[BANK0 ] unsigned char 
  8074 ;;  bexp            1   46[BANK0 ] unsigned char 
  8075 ;;  sign            1   35[BANK0 ] unsigned char 
  8076 ;; Return value:  Size  Location     Type
  8077 ;;                  4   23[BANK0 ] unsigned char 
  8078 ;; Registers used:
  8079 ;;		wreg, status,2, status,0
  8080 ;; Tracked objects:
  8081 ;;		On entry : 0/0
  8082 ;;		On exit  : 0/0
  8083 ;;		Unchanged: 0/0
  8084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8085 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8086 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8087 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8088 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8089 ;;Total ram usage:       25 bytes
  8090 ;; Hardware stack levels used:    1
  8091 ;; Hardware stack levels required when called:    4
  8092 ;; This function calls:
  8093 ;;		Nothing
  8094 ;; This function is called by:
  8095 ;;		_parallelo
  8096 ;;		_matematica
  8097 ;;		_asin
  8098 ;;		_atan
  8099 ;;		_sin
  8100 ;; This function uses a non-reentrant model
  8101 ;;
  8102                           
  8103                           	psect	text22
  8104  0036DC                     __ptext22:
  8105                           	opt stack 0
  8106  0036DC                     ___fldiv:
  8107                           	opt stack 22
  8108                           
  8109                           ; BSR set to: 0
  8110                           ;incstack = 0
  8111  0036DC  0100               	movlb	0	; () banked
  8112  0036DE  517A               	movf	(___fldiv@b+3)& (0+255),w,b
  8113  0036E0  0B80               	andlw	128
  8114  0036E2  0100               	movlb	0	; () banked
  8115  0036E4  6F83               	movwf	___fldiv@sign& (0+255),b
  8116  0036E6  0100               	movlb	0	; () banked
  8117  0036E8  517A               	movf	(___fldiv@b+3)& (0+255),w,b
  8118  0036EA  257A               	addwf	(___fldiv@b+3)& (0+255),w,b
  8119  0036EC  0100               	movlb	0	; () banked
  8120  0036EE  6F8E               	movwf	___fldiv@bexp& (0+255),b
  8121                           
  8122                           ; BSR set to: 0
  8123  0036F0  0100               	movlb	0	; () banked
  8124  0036F2  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
  8125  0036F4  D002               	goto	l6513
  8126                           
  8127                           ; BSR set to: 0
  8128  0036F6  0100               	movlb	0	; () banked
  8129  0036F8  818E               	bsf	___fldiv@bexp& (0+255),0,b
  8130  0036FA                     l6513:
  8131                           
  8132                           ; BSR set to: 0
  8133  0036FA  0100               	movlb	0	; () banked
  8134  0036FC  518E               	movf	___fldiv@bexp& (0+255),w,b
  8135  0036FE  0100               	movlb	0	; () banked
  8136  003700  B4D8               	btfsc	status,2,c
  8137  003702  D012               	goto	l6523
  8138                           
  8139                           ; BSR set to: 0
  8140  003704  0100               	movlb	0	; () banked
  8141  003706  298E               	incf	___fldiv@bexp& (0+255),w,b
  8142  003708  A4D8               	btfss	status,2,c
  8143  00370A  D009               	goto	l6519
  8144                           
  8145                           ; BSR set to: 0
  8146  00370C  0E00               	movlw	0
  8147  00370E  0100               	movlb	0	; () banked
  8148  003710  6F77               	movwf	___fldiv@b& (0+255),b
  8149  003712  0E00               	movlw	0
  8150  003714  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  8151  003716  0E00               	movlw	0
  8152  003718  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  8153  00371A  0E00               	movlw	0
  8154  00371C  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8155  00371E                     l6519:
  8156                           
  8157                           ; BSR set to: 0
  8158  00371E  0100               	movlb	0	; () banked
  8159  003720  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
  8160                           
  8161                           ; BSR set to: 0
  8162  003722  0E00               	movlw	0
  8163  003724  0100               	movlb	0	; () banked
  8164  003726  D008               	goto	L6
  8165  003728                     l6523:
  8166                           
  8167                           ; BSR set to: 0
  8168  003728  0E00               	movlw	0
  8169  00372A  0100               	movlb	0	; () banked
  8170  00372C  6F77               	movwf	___fldiv@b& (0+255),b
  8171  00372E  0E00               	movlw	0
  8172  003730  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  8173  003732  0E00               	movlw	0
  8174  003734  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  8175  003736  0E00               	movlw	0
  8176  003738                     L6:
  8177  003738  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8178                           
  8179                           ; BSR set to: 0
  8180                           
  8181                           ; BSR set to: 0
  8182  00373A  0100               	movlb	0	; () banked
  8183  00373C  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  8184  00373E  0B80               	andlw	128
  8185  003740  0100               	movlb	0	; () banked
  8186  003742  1B83               	xorwf	___fldiv@sign& (0+255),f,b
  8187                           
  8188                           ; BSR set to: 0
  8189  003744  0100               	movlb	0	; () banked
  8190  003746  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  8191  003748  257E               	addwf	(___fldiv@a+3)& (0+255),w,b
  8192  00374A  0100               	movlb	0	; () banked
  8193  00374C  6F8F               	movwf	___fldiv@aexp& (0+255),b
  8194                           
  8195                           ; BSR set to: 0
  8196  00374E  0100               	movlb	0	; () banked
  8197  003750  AF7D               	btfss	(___fldiv@a+2)& (0+255),7,b
  8198  003752  D002               	goto	l6533
  8199                           
  8200                           ; BSR set to: 0
  8201  003754  0100               	movlb	0	; () banked
  8202  003756  818F               	bsf	___fldiv@aexp& (0+255),0,b
  8203  003758                     l6533:
  8204                           
  8205                           ; BSR set to: 0
  8206  003758  0100               	movlb	0	; () banked
  8207  00375A  518F               	movf	___fldiv@aexp& (0+255),w,b
  8208  00375C  0100               	movlb	0	; () banked
  8209  00375E  B4D8               	btfsc	status,2,c
  8210  003760  D012               	goto	l6543
  8211                           
  8212                           ; BSR set to: 0
  8213  003762  0100               	movlb	0	; () banked
  8214  003764  298F               	incf	___fldiv@aexp& (0+255),w,b
  8215  003766  A4D8               	btfss	status,2,c
  8216  003768  D009               	goto	l6539
  8217                           
  8218                           ; BSR set to: 0
  8219  00376A  0E00               	movlw	0
  8220  00376C  0100               	movlb	0	; () banked
  8221  00376E  6F7B               	movwf	___fldiv@a& (0+255),b
  8222  003770  0E00               	movlw	0
  8223  003772  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  8224  003774  0E00               	movlw	0
  8225  003776  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  8226  003778  0E00               	movlw	0
  8227  00377A  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  8228  00377C                     l6539:
  8229                           
  8230                           ; BSR set to: 0
  8231  00377C  0100               	movlb	0	; () banked
  8232  00377E  8F7D               	bsf	(___fldiv@a+2)& (0+255),7,b
  8233                           
  8234                           ; BSR set to: 0
  8235  003780  0E00               	movlw	0
  8236  003782  0100               	movlb	0	; () banked
  8237  003784  D008               	goto	L7
  8238  003786                     l6543:
  8239                           
  8240                           ; BSR set to: 0
  8241  003786  0E00               	movlw	0
  8242  003788  0100               	movlb	0	; () banked
  8243  00378A  6F7B               	movwf	___fldiv@a& (0+255),b
  8244  00378C  0E00               	movlw	0
  8245  00378E  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  8246  003790  0E00               	movlw	0
  8247  003792  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  8248  003794  0E00               	movlw	0
  8249  003796                     L7:
  8250  003796  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  8251                           
  8252                           ; BSR set to: 0
  8253                           
  8254                           ; BSR set to: 0
  8255  003798  0100               	movlb	0	; () banked
  8256  00379A  517B               	movf	___fldiv@a& (0+255),w,b
  8257  00379C  0100               	movlb	0	; () banked
  8258  00379E  117C               	iorwf	(___fldiv@a+1)& (0+255),w,b
  8259  0037A0  0100               	movlb	0	; () banked
  8260  0037A2  117D               	iorwf	(___fldiv@a+2)& (0+255),w,b
  8261  0037A4  0100               	movlb	0	; () banked
  8262  0037A6  117E               	iorwf	(___fldiv@a+3)& (0+255),w,b
  8263  0037A8  A4D8               	btfss	status,2,c
  8264  0037AA  D017               	goto	l6555
  8265                           
  8266                           ; BSR set to: 0
  8267  0037AC  0E00               	movlw	0
  8268  0037AE  0100               	movlb	0	; () banked
  8269  0037B0  6F77               	movwf	___fldiv@b& (0+255),b
  8270  0037B2  0E00               	movlw	0
  8271  0037B4  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  8272  0037B6  0E00               	movlw	0
  8273  0037B8  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  8274  0037BA  0E00               	movlw	0
  8275  0037BC  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8276                           
  8277                           ; BSR set to: 0
  8278  0037BE  0100               	movlb	0	; () banked
  8279  0037C0  0E80               	movlw	128
  8280  0037C2  1379               	iorwf	(___fldiv@b+2)& (0+255),f,b
  8281  0037C4  0E7F               	movlw	127
  8282  0037C6  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
  8283                           
  8284                           ; BSR set to: 0
  8285  0037C8  C077  F077         	movff	___fldiv@b,?___fldiv
  8286  0037CC  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
  8287  0037D0  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
  8288  0037D4  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
  8289                           
  8290                           ; BSR set to: 0
  8291  0037D8  0012               	return	
  8292  0037DA                     l6555:
  8293                           
  8294                           ; BSR set to: 0
  8295  0037DA  0100               	movlb	0	; () banked
  8296  0037DC  518E               	movf	___fldiv@bexp& (0+255),w,b
  8297  0037DE  0100               	movlb	0	; () banked
  8298  0037E0  A4D8               	btfss	status,2,c
  8299  0037E2  D012               	goto	l6563
  8300                           
  8301                           ; BSR set to: 0
  8302  0037E4  0E00               	movlw	0
  8303  0037E6  0100               	movlb	0	; () banked
  8304  0037E8  6F77               	movwf	___fldiv@b& (0+255),b
  8305  0037EA  0E00               	movlw	0
  8306  0037EC  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  8307  0037EE  0E00               	movlw	0
  8308  0037F0  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  8309  0037F2  0E00               	movlw	0
  8310  0037F4  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8311                           
  8312                           ; BSR set to: 0
  8313  0037F6  C077  F077         	movff	___fldiv@b,?___fldiv
  8314  0037FA  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
  8315  0037FE  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
  8316  003802  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
  8317                           
  8318                           ; BSR set to: 0
  8319  003806  0012               	return	
  8320  003808                     l6563:
  8321                           
  8322                           ; BSR set to: 0
  8323  003808  0100               	movlb	0	; () banked
  8324  00380A  518F               	movf	___fldiv@aexp& (0+255),w,b
  8325  00380C  0100               	movlb	0	; () banked
  8326  00380E  6F7F               	movwf	??___fldiv& (0+255),b
  8327  003810  6B80               	clrf	(??___fldiv+1)& (0+255),b
  8328  003812  0100               	movlb	0	; () banked
  8329  003814  1F7F               	comf	??___fldiv& (0+255),f,b
  8330  003816  1F80               	comf	(??___fldiv+1)& (0+255),f,b
  8331  003818  4B7F               	infsnz	??___fldiv& (0+255),f,b
  8332  00381A  2B80               	incf	(??___fldiv+1)& (0+255),f,b
  8333  00381C  0100               	movlb	0	; () banked
  8334  00381E  518E               	movf	___fldiv@bexp& (0+255),w,b
  8335  003820  0100               	movlb	0	; () banked
  8336  003822  6F81               	movwf	(??___fldiv+2)& (0+255),b
  8337  003824  6B82               	clrf	(??___fldiv+3)& (0+255),b
  8338  003826  0100               	movlb	0	; () banked
  8339  003828  517F               	movf	??___fldiv& (0+255),w,b
  8340  00382A  0100               	movlb	0	; () banked
  8341  00382C  2781               	addwf	(??___fldiv+2)& (0+255),f,b
  8342  00382E  0100               	movlb	0	; () banked
  8343  003830  5180               	movf	(??___fldiv+1)& (0+255),w,b
  8344  003832  0100               	movlb	0	; () banked
  8345  003834  2382               	addwfc	(??___fldiv+3)& (0+255),f,b
  8346  003836  0E7F               	movlw	127
  8347  003838  0100               	movlb	0	; () banked
  8348  00383A  2581               	addwf	(??___fldiv+2)& (0+255),w,b
  8349  00383C  0100               	movlb	0	; () banked
  8350  00383E  6F88               	movwf	___fldiv@new_exp& (0+255),b
  8351  003840  0E00               	movlw	0
  8352  003842  0100               	movlb	0	; () banked
  8353  003844  2182               	addwfc	(??___fldiv+3)& (0+255),w,b
  8354  003846  0100               	movlb	0	; () banked
  8355  003848  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8356                           
  8357                           ; BSR set to: 0
  8358  00384A  C077  F084         	movff	___fldiv@b,___fldiv@rem
  8359  00384E  C078  F085         	movff	___fldiv@b+1,___fldiv@rem+1
  8360  003852  C079  F086         	movff	___fldiv@b+2,___fldiv@rem+2
  8361  003856  C07A  F087         	movff	___fldiv@b+3,___fldiv@rem+3
  8362                           
  8363                           ; BSR set to: 0
  8364  00385A  0E00               	movlw	0
  8365  00385C  0100               	movlb	0	; () banked
  8366  00385E  6F77               	movwf	___fldiv@b& (0+255),b
  8367  003860  0E00               	movlw	0
  8368  003862  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  8369  003864  0E00               	movlw	0
  8370  003866  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  8371  003868  0E00               	movlw	0
  8372  00386A  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8373                           
  8374                           ; BSR set to: 0
  8375  00386C  0E00               	movlw	0
  8376  00386E  0100               	movlb	0	; () banked
  8377  003870  6F8A               	movwf	___fldiv@grs& (0+255),b
  8378  003872  0E00               	movlw	0
  8379  003874  6F8B               	movwf	(___fldiv@grs+1)& (0+255),b
  8380  003876  0E00               	movlw	0
  8381  003878  6F8C               	movwf	(___fldiv@grs+2)& (0+255),b
  8382  00387A  0E00               	movlw	0
  8383  00387C  6F8D               	movwf	(___fldiv@grs+3)& (0+255),b
  8384                           
  8385                           ; BSR set to: 0
  8386  00387E  0E00               	movlw	0
  8387  003880  0100               	movlb	0	; () banked
  8388  003882  6F8F               	movwf	___fldiv@aexp& (0+255),b
  8389  003884  D042               	goto	l1364
  8390  003886                     l6573:
  8391                           
  8392                           ; BSR set to: 0
  8393  003886  0100               	movlb	0	; () banked
  8394  003888  518F               	movf	___fldiv@aexp& (0+255),w,b
  8395  00388A  0100               	movlb	0	; () banked
  8396  00388C  B4D8               	btfsc	status,2,c
  8397  00388E  D017               	goto	l6581
  8398                           
  8399                           ; BSR set to: 0
  8400  003890  0100               	movlb	0	; () banked
  8401  003892  90D8               	bcf	status,0,c
  8402  003894  3784               	rlcf	___fldiv@rem& (0+255),f,b
  8403  003896  3785               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  8404  003898  3786               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  8405  00389A  3787               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  8406  00389C  0100               	movlb	0	; () banked
  8407  00389E  90D8               	bcf	status,0,c
  8408  0038A0  3777               	rlcf	___fldiv@b& (0+255),f,b
  8409  0038A2  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
  8410  0038A4  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
  8411  0038A6  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
  8412                           
  8413                           ; BSR set to: 0
  8414  0038A8  0100               	movlb	0	; () banked
  8415  0038AA  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
  8416  0038AC  D002               	goto	l1367
  8417                           
  8418                           ; BSR set to: 0
  8419  0038AE  0100               	movlb	0	; () banked
  8420  0038B0  8177               	bsf	___fldiv@b& (0+255),0,b
  8421  0038B2                     l1367:
  8422                           
  8423                           ; BSR set to: 0
  8424  0038B2  0100               	movlb	0	; () banked
  8425  0038B4  90D8               	bcf	status,0,c
  8426  0038B6  378A               	rlcf	___fldiv@grs& (0+255),f,b
  8427  0038B8  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  8428  0038BA  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  8429  0038BC  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  8430  0038BE                     l6581:
  8431                           
  8432                           ; BSR set to: 0
  8433  0038BE  0100               	movlb	0	; () banked
  8434  0038C0  517B               	movf	___fldiv@a& (0+255),w,b
  8435  0038C2  0100               	movlb	0	; () banked
  8436  0038C4  5D84               	subwf	___fldiv@rem& (0+255),w,b
  8437  0038C6  0100               	movlb	0	; () banked
  8438  0038C8  517C               	movf	(___fldiv@a+1)& (0+255),w,b
  8439  0038CA  0100               	movlb	0	; () banked
  8440  0038CC  5985               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  8441  0038CE  0100               	movlb	0	; () banked
  8442  0038D0  517D               	movf	(___fldiv@a+2)& (0+255),w,b
  8443  0038D2  0100               	movlb	0	; () banked
  8444  0038D4  5986               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  8445  0038D6  0100               	movlb	0	; () banked
  8446  0038D8  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  8447  0038DA  0100               	movlb	0	; () banked
  8448  0038DC  5987               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  8449  0038DE  A0D8               	btfss	status,0,c
  8450  0038E0  D012               	goto	l6587
  8451                           
  8452                           ; BSR set to: 0
  8453  0038E2  0100               	movlb	0	; () banked
  8454  0038E4  8D8D               	bsf	(___fldiv@grs+3)& (0+255),6,b
  8455                           
  8456                           ; BSR set to: 0
  8457  0038E6  0100               	movlb	0	; () banked
  8458  0038E8  517B               	movf	___fldiv@a& (0+255),w,b
  8459  0038EA  0100               	movlb	0	; () banked
  8460  0038EC  5F84               	subwf	___fldiv@rem& (0+255),f,b
  8461  0038EE  0100               	movlb	0	; () banked
  8462  0038F0  517C               	movf	(___fldiv@a+1)& (0+255),w,b
  8463  0038F2  0100               	movlb	0	; () banked
  8464  0038F4  5B85               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  8465  0038F6  0100               	movlb	0	; () banked
  8466  0038F8  517D               	movf	(___fldiv@a+2)& (0+255),w,b
  8467  0038FA  0100               	movlb	0	; () banked
  8468  0038FC  5B86               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  8469  0038FE  0100               	movlb	0	; () banked
  8470  003900  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  8471  003902  0100               	movlb	0	; () banked
  8472  003904  5B87               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  8473  003906                     l6587:
  8474                           
  8475                           ; BSR set to: 0
  8476  003906  0100               	movlb	0	; () banked
  8477  003908  2B8F               	incf	___fldiv@aexp& (0+255),f,b
  8478  00390A                     l1364:
  8479                           
  8480                           ; BSR set to: 0
  8481  00390A  0E19               	movlw	25
  8482  00390C  0100               	movlb	0	; () banked
  8483  00390E  658F               	cpfsgt	___fldiv@aexp& (0+255),b
  8484  003910  D7BA               	goto	l6573
  8485                           
  8486                           ; BSR set to: 0
  8487                           
  8488                           ; BSR set to: 0
  8489  003912  0100               	movlb	0	; () banked
  8490  003914  5184               	movf	___fldiv@rem& (0+255),w,b
  8491  003916  0100               	movlb	0	; () banked
  8492  003918  1185               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  8493  00391A  0100               	movlb	0	; () banked
  8494  00391C  1186               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  8495  00391E  0100               	movlb	0	; () banked
  8496  003920  1187               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  8497  003922  B4D8               	btfsc	status,2,c
  8498  003924  D018               	goto	l6599
  8499                           
  8500                           ; BSR set to: 0
  8501  003926  0100               	movlb	0	; () banked
  8502  003928  818A               	bsf	___fldiv@grs& (0+255),0,b
  8503                           
  8504                           ; BSR set to: 0
  8505  00392A  D015               	goto	l6599
  8506  00392C                     l6593:
  8507                           
  8508                           ; BSR set to: 0
  8509  00392C  0100               	movlb	0	; () banked
  8510  00392E  90D8               	bcf	status,0,c
  8511  003930  3777               	rlcf	___fldiv@b& (0+255),f,b
  8512  003932  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
  8513  003934  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
  8514  003936  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
  8515                           
  8516                           ; BSR set to: 0
  8517  003938  0100               	movlb	0	; () banked
  8518  00393A  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
  8519  00393C  D002               	goto	l1373
  8520                           
  8521                           ; BSR set to: 0
  8522  00393E  0100               	movlb	0	; () banked
  8523  003940  8177               	bsf	___fldiv@b& (0+255),0,b
  8524  003942                     l1373:
  8525                           
  8526                           ; BSR set to: 0
  8527  003942  0100               	movlb	0	; () banked
  8528  003944  90D8               	bcf	status,0,c
  8529  003946  378A               	rlcf	___fldiv@grs& (0+255),f,b
  8530  003948  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  8531  00394A  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  8532  00394C  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  8533  00394E  0100               	movlb	0	; () banked
  8534  003950  0788               	decf	___fldiv@new_exp& (0+255),f,b
  8535  003952  A0D8               	btfss	status,0,c
  8536  003954  0789               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  8537  003956                     l6599:
  8538                           
  8539                           ; BSR set to: 0
  8540  003956  0100               	movlb	0	; () banked
  8541  003958  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
  8542  00395A  D7E8               	goto	l6593
  8543                           
  8544                           ; BSR set to: 0
  8545                           
  8546                           ; BSR set to: 0
  8547  00395C  0E00               	movlw	0
  8548  00395E  0100               	movlb	0	; () banked
  8549  003960  6F8F               	movwf	___fldiv@aexp& (0+255),b
  8550                           
  8551                           ; BSR set to: 0
  8552  003962  0100               	movlb	0	; () banked
  8553  003964  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
  8554  003966  D024               	goto	l1375
  8555                           
  8556                           ; BSR set to: 0
  8557  003968  0EFF               	movlw	255
  8558  00396A  0100               	movlb	0	; () banked
  8559  00396C  158A               	andwf	___fldiv@grs& (0+255),w,b
  8560  00396E  0100               	movlb	0	; () banked
  8561  003970  6F7F               	movwf	??___fldiv& (0+255),b
  8562  003972  0EFF               	movlw	255
  8563  003974  0100               	movlb	0	; () banked
  8564  003976  158B               	andwf	(___fldiv@grs+1)& (0+255),w,b
  8565  003978  0100               	movlb	0	; () banked
  8566  00397A  6F80               	movwf	(??___fldiv+1)& (0+255),b
  8567  00397C  0EFF               	movlw	255
  8568  00397E  0100               	movlb	0	; () banked
  8569  003980  158C               	andwf	(___fldiv@grs+2)& (0+255),w,b
  8570  003982  0100               	movlb	0	; () banked
  8571  003984  6F81               	movwf	(??___fldiv+2)& (0+255),b
  8572  003986  0E7F               	movlw	127
  8573  003988  0100               	movlb	0	; () banked
  8574  00398A  158D               	andwf	(___fldiv@grs+3)& (0+255),w,b
  8575  00398C  0100               	movlb	0	; () banked
  8576  00398E  6F82               	movwf	(??___fldiv+3)& (0+255),b
  8577  003990  0100               	movlb	0	; () banked
  8578  003992  517F               	movf	??___fldiv& (0+255),w,b
  8579  003994  0100               	movlb	0	; () banked
  8580  003996  1180               	iorwf	(??___fldiv+1)& (0+255),w,b
  8581  003998  0100               	movlb	0	; () banked
  8582  00399A  1181               	iorwf	(??___fldiv+2)& (0+255),w,b
  8583  00399C  0100               	movlb	0	; () banked
  8584  00399E  1182               	iorwf	(??___fldiv+3)& (0+255),w,b
  8585  0039A0  A4D8               	btfss	status,2,c
  8586  0039A2  D003               	goto	l6609
  8587                           
  8588                           ; BSR set to: 0
  8589                           
  8590                           ; BSR set to: 0
  8591  0039A4  0100               	movlb	0	; () banked
  8592  0039A6  A177               	btfss	___fldiv@b& (0+255),0,b
  8593  0039A8  D003               	goto	l1375
  8594  0039AA                     l6609:
  8595                           
  8596                           ; BSR set to: 0
  8597  0039AA  0E01               	movlw	1
  8598  0039AC  0100               	movlb	0	; () banked
  8599  0039AE  6F8F               	movwf	___fldiv@aexp& (0+255),b
  8600  0039B0                     l1375:
  8601                           
  8602                           ; BSR set to: 0
  8603  0039B0  0100               	movlb	0	; () banked
  8604  0039B2  518F               	movf	___fldiv@aexp& (0+255),w,b
  8605  0039B4  0100               	movlb	0	; () banked
  8606  0039B6  B4D8               	btfsc	status,2,c
  8607  0039B8  D023               	goto	l6619
  8608                           
  8609                           ; BSR set to: 0
  8610  0039BA  0E01               	movlw	1
  8611  0039BC  0100               	movlb	0	; () banked
  8612  0039BE  2777               	addwf	___fldiv@b& (0+255),f,b
  8613  0039C0  0E00               	movlw	0
  8614  0039C2  2378               	addwfc	(___fldiv@b+1)& (0+255),f,b
  8615  0039C4  2379               	addwfc	(___fldiv@b+2)& (0+255),f,b
  8616  0039C6  237A               	addwfc	(___fldiv@b+3)& (0+255),f,b
  8617                           
  8618                           ; BSR set to: 0
  8619  0039C8  0100               	movlb	0	; () banked
  8620  0039CA  A17A               	btfss	(___fldiv@b+3)& (0+255),0,b
  8621  0039CC  D019               	goto	l6619
  8622                           
  8623                           ; BSR set to: 0
  8624  0039CE  C077  F07F         	movff	___fldiv@b,??___fldiv
  8625  0039D2  C078  F080         	movff	___fldiv@b+1,??___fldiv+1
  8626  0039D6  C079  F081         	movff	___fldiv@b+2,??___fldiv+2
  8627  0039DA  C07A  F082         	movff	___fldiv@b+3,??___fldiv+3
  8628  0039DE  0100               	movlb	0	; () banked
  8629  0039E0  3582               	rlcf	(??___fldiv+3)& (0+255),w,b
  8630  0039E2  3382               	rrcf	(??___fldiv+3)& (0+255),f,b
  8631  0039E4  3381               	rrcf	(??___fldiv+2)& (0+255),f,b
  8632  0039E6  3380               	rrcf	(??___fldiv+1)& (0+255),f,b
  8633  0039E8  337F               	rrcf	??___fldiv& (0+255),f,b
  8634  0039EA  C07F  F077         	movff	??___fldiv,___fldiv@b
  8635  0039EE  C080  F078         	movff	??___fldiv+1,___fldiv@b+1
  8636  0039F2  C081  F079         	movff	??___fldiv+2,___fldiv@b+2
  8637  0039F6  C082  F07A         	movff	??___fldiv+3,___fldiv@b+3
  8638                           
  8639                           ; BSR set to: 0
  8640  0039FA  0100               	movlb	0	; () banked
  8641  0039FC  4B88               	infsnz	___fldiv@new_exp& (0+255),f,b
  8642  0039FE  2B89               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  8643  003A00                     l6619:
  8644                           
  8645                           ; BSR set to: 0
  8646  003A00  0100               	movlb	0	; () banked
  8647  003A02  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  8648  003A04  D014               	goto	l6623
  8649  003A06  0100               	movlb	0	; () banked
  8650  003A08  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  8651  003A0A  E104               	bnz	u8340
  8652  003A0C  0100               	movlb	0	; () banked
  8653  003A0E  2988               	incf	___fldiv@new_exp& (0+255),w,b
  8654  003A10  A0D8               	btfss	status,0,c
  8655  003A12  D00D               	goto	l6623
  8656  003A14                     u8340:
  8657                           
  8658                           ; BSR set to: 0
  8659  003A14  0E00               	movlw	0
  8660  003A16  0100               	movlb	0	; () banked
  8661  003A18  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8662  003A1A  6988               	setf	___fldiv@new_exp& (0+255),b
  8663  003A1C  0E00               	movlw	0
  8664  003A1E  0100               	movlb	0	; () banked
  8665  003A20  6F77               	movwf	___fldiv@b& (0+255),b
  8666  003A22  0E00               	movlw	0
  8667  003A24  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  8668  003A26  0E00               	movlw	0
  8669  003A28  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  8670  003A2A  0E00               	movlw	0
  8671  003A2C  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8672  003A2E                     l6623:
  8673                           
  8674                           ; BSR set to: 0
  8675  003A2E  0100               	movlb	0	; () banked
  8676  003A30  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  8677  003A32  D007               	goto	l6625
  8678  003A34  0100               	movlb	0	; () banked
  8679  003A36  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  8680  003A38  E115               	bnz	l6627
  8681  003A3A  0100               	movlb	0	; () banked
  8682  003A3C  0588               	decf	___fldiv@new_exp& (0+255),w,b
  8683  003A3E  B0D8               	btfsc	status,0,c
  8684  003A40  D011               	goto	l6627
  8685  003A42                     l6625:
  8686                           
  8687                           ; BSR set to: 0
  8688  003A42  0E00               	movlw	0
  8689  003A44  0100               	movlb	0	; () banked
  8690  003A46  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8691  003A48  0E00               	movlw	0
  8692  003A4A  6F88               	movwf	___fldiv@new_exp& (0+255),b
  8693  003A4C  0E00               	movlw	0
  8694  003A4E  0100               	movlb	0	; () banked
  8695  003A50  6F77               	movwf	___fldiv@b& (0+255),b
  8696  003A52  0E00               	movlw	0
  8697  003A54  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  8698  003A56  0E00               	movlw	0
  8699  003A58  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  8700  003A5A  0E00               	movlw	0
  8701  003A5C  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8702  003A5E  0E00               	movlw	0
  8703  003A60  0100               	movlb	0	; () banked
  8704  003A62  6F83               	movwf	___fldiv@sign& (0+255),b
  8705  003A64                     l6627:
  8706                           
  8707                           ; BSR set to: 0
  8708  003A64  C088  F08E         	movff	___fldiv@new_exp,___fldiv@bexp
  8709                           
  8710                           ; BSR set to: 0
  8711  003A68  0100               	movlb	0	; () banked
  8712  003A6A  A18E               	btfss	___fldiv@bexp& (0+255),0,b
  8713  003A6C  D003               	goto	l6633
  8714                           
  8715                           ; BSR set to: 0
  8716  003A6E  0100               	movlb	0	; () banked
  8717  003A70  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
  8718  003A72  D002               	goto	l6635
  8719  003A74                     l6633:
  8720                           
  8721                           ; BSR set to: 0
  8722  003A74  0100               	movlb	0	; () banked
  8723  003A76  9F79               	bcf	(___fldiv@b+2)& (0+255),7,b
  8724  003A78                     l6635:
  8725                           
  8726                           ; BSR set to: 0
  8727  003A78  0100               	movlb	0	; () banked
  8728  003A7A  90D8               	bcf	status,0,c
  8729  003A7C  318E               	rrcf	___fldiv@bexp& (0+255),w,b
  8730  003A7E  0100               	movlb	0	; () banked
  8731  003A80  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8732                           
  8733                           ; BSR set to: 0
  8734  003A82  0100               	movlb	0	; () banked
  8735  003A84  5183               	movf	___fldiv@sign& (0+255),w,b
  8736  003A86  0100               	movlb	0	; () banked
  8737  003A88  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
  8738                           
  8739                           ; BSR set to: 0
  8740  003A8A  C077  F077         	movff	___fldiv@b,?___fldiv
  8741  003A8E  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
  8742  003A92  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
  8743  003A96  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
  8744  003A9A  0012               	return	
  8745  003A9C                     __end_of___fldiv:
  8746                           	opt stack 0
  8747                           tblptru	equ	0xFF8
  8748                           tblptrh	equ	0xFF7
  8749                           tblptrl	equ	0xFF6
  8750                           tablat	equ	0xFF5
  8751                           prodh	equ	0xFF4
  8752                           prodl	equ	0xFF3
  8753                           postinc0	equ	0xFEE
  8754                           wreg	equ	0xFE8
  8755                           postdec1	equ	0xFE5
  8756                           fsr1l	equ	0xFE1
  8757                           postinc2	equ	0xFDE
  8758                           postdec2	equ	0xFDD
  8759                           fsr2h	equ	0xFDA
  8760                           fsr2l	equ	0xFD9
  8761                           status	equ	0xFD8
  8762                           
  8763 ;; *************** function _delay_s *****************
  8764 ;; Defined at:
  8765 ;;		line 102 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
  8766 ;; Parameters:    Size  Location     Type
  8767 ;;  value_s         1    wreg     unsigned char 
  8768 ;; Auto vars:     Size  Location     Type
  8769 ;;  value_s         1   31[BANK0 ] unsigned char 
  8770 ;;  repeat_loop     1   32[BANK0 ] unsigned char 
  8771 ;; Return value:  Size  Location     Type
  8772 ;;		None               void
  8773 ;; Registers used:
  8774 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8775 ;; Tracked objects:
  8776 ;;		On entry : 0/0
  8777 ;;		On exit  : 0/0
  8778 ;;		Unchanged: 0/0
  8779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8781 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8783 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8784 ;;Total ram usage:        2 bytes
  8785 ;; Hardware stack levels used:    1
  8786 ;; Hardware stack levels required when called:    6
  8787 ;; This function calls:
  8788 ;;		_delay_ms
  8789 ;; This function is called by:
  8790 ;;		_park_routine
  8791 ;; This function uses a non-reentrant model
  8792 ;;
  8793                           
  8794                           	psect	text23
  8795  005D1C                     __ptext23:
  8796                           	opt stack 0
  8797  005D1C                     _delay_s:
  8798                           	opt stack 23
  8799                           
  8800                           ; BSR set to: 0
  8801                           ;incstack = 0
  8802                           ;delay_s@value_s stored from wreg
  8803  005D1C  0100               	movlb	0	; () banked
  8804  005D1E  6F7F               	movwf	delay_s@value_s& (0+255),b
  8805                           
  8806                           ;src\delay.c: 104: unsigned char repeat_loop;
  8807                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
  8808  005D20  0E00               	movlw	0
  8809  005D22  0100               	movlb	0	; () banked
  8810  005D24  6F80               	movwf	delay_s@repeat_loop& (0+255),b
  8811  005D26  D009               	goto	l5429
  8812  005D28                     l5425:
  8813                           
  8814                           ; BSR set to: 0
  8815                           ;src\delay.c: 107: delay_ms (1000);
  8816  005D28  0E03               	movlw	3
  8817  005D2A  0100               	movlb	0	; () banked
  8818  005D2C  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  8819  005D2E  0EE8               	movlw	232
  8820  005D30  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  8821  005D32  EC24  F02E         	call	_delay_ms	;wreg free
  8822  005D36  0100               	movlb	0	; () banked
  8823  005D38  2B80               	incf	delay_s@repeat_loop& (0+255),f,b
  8824  005D3A                     l5429:
  8825                           
  8826                           ; BSR set to: 0
  8827  005D3A  0100               	movlb	0	; () banked
  8828  005D3C  517F               	movf	delay_s@value_s& (0+255),w,b
  8829  005D3E  0100               	movlb	0	; () banked
  8830  005D40  5D80               	subwf	delay_s@repeat_loop& (0+255),w,b
  8831  005D42  B0D8               	btfsc	status,0,c
  8832  005D44  0012               	return	
  8833  005D46  D7F0               	goto	l5425
  8834  005D48                     __end_of_delay_s:
  8835                           	opt stack 0
  8836                           tblptru	equ	0xFF8
  8837                           tblptrh	equ	0xFF7
  8838                           tblptrl	equ	0xFF6
  8839                           tablat	equ	0xFF5
  8840                           prodh	equ	0xFF4
  8841                           prodl	equ	0xFF3
  8842                           postinc0	equ	0xFEE
  8843                           wreg	equ	0xFE8
  8844                           postdec1	equ	0xFE5
  8845                           fsr1l	equ	0xFE1
  8846                           postinc2	equ	0xFDE
  8847                           postdec2	equ	0xFDD
  8848                           fsr2h	equ	0xFDA
  8849                           fsr2l	equ	0xFD9
  8850                           status	equ	0xFD8
  8851                           
  8852 ;; *************** function _delay_ms *****************
  8853 ;; Defined at:
  8854 ;;		line 61 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
  8855 ;; Parameters:    Size  Location     Type
  8856 ;;  value_ms        2   29[BANK0 ] unsigned int 
  8857 ;; Auto vars:     Size  Location     Type
  8858 ;;		None
  8859 ;; Return value:  Size  Location     Type
  8860 ;;		None               void
  8861 ;; Registers used:
  8862 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8863 ;; Tracked objects:
  8864 ;;		On entry : 0/0
  8865 ;;		On exit  : 0/0
  8866 ;;		Unchanged: 0/0
  8867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8868 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8871 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8872 ;;Total ram usage:        2 bytes
  8873 ;; Hardware stack levels used:    1
  8874 ;; Hardware stack levels required when called:    5
  8875 ;; This function calls:
  8876 ;;		___wmul
  8877 ;; This function is called by:
  8878 ;;		_delay_s
  8879 ;; This function uses a non-reentrant model
  8880 ;;
  8881                           
  8882                           	psect	text24
  8883  005C48                     __ptext24:
  8884                           	opt stack 0
  8885  005C48                     _delay_ms:
  8886                           	opt stack 23
  8887                           
  8888                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  8889                           
  8890                           ; BSR set to: 0
  8891                           ;incstack = 0
  8892  005C48  C0E7  F077         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  8893  005C4C  0100               	movlb	0	; () banked
  8894  005C4E  6B78               	clrf	(___wmul@multiplier+1)& (0+255),b
  8895  005C50  C07D  F079         	movff	delay_ms@value_ms,___wmul@multiplicand
  8896  005C54  C07E  F07A         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  8897  005C58  EC5D  F02E         	call	___wmul	;wreg free
  8898  005C5C  C077  F0E1         	movff	?___wmul,_clock_counter_reference	;volatile
  8899  005C60  C078  F0E2         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  8900                           
  8901                           ;src\delay.c: 75: while (clock_counter_reference) {
  8902  005C64  D007               	goto	l569
  8903  005C66                     l5279:
  8904                           
  8905                           ;src\delay.c: 85: _delay(240);
  8906  005C66  0E50               	movlw	80
  8907  005C68                     u9067:
  8908  005C68  2EE8               	decfsz	wreg,f,c
  8909  005C6A  D7FE               	goto	u9067
  8910                           
  8911                           ;src\delay.c: 88: clock_counter_reference--;
  8912  005C6C  0100               	movlb	0	; () banked
  8913  005C6E  07E1               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  8914  005C70  A0D8               	btfss	status,0,c
  8915  005C72  07E2               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  8916  005C74                     l569:
  8917  005C74  0100               	movlb	0	; () banked
  8918  005C76  51E1               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  8919  005C78  0100               	movlb	0	; () banked
  8920  005C7A  11E2               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  8921  005C7C  B4D8               	btfsc	status,2,c
  8922  005C7E  0012               	return	
  8923  005C80  D7F2               	goto	l5279
  8924  005C82                     __end_of_delay_ms:
  8925                           	opt stack 0
  8926                           tblptru	equ	0xFF8
  8927                           tblptrh	equ	0xFF7
  8928                           tblptrl	equ	0xFF6
  8929                           tablat	equ	0xFF5
  8930                           prodh	equ	0xFF4
  8931                           prodl	equ	0xFF3
  8932                           postinc0	equ	0xFEE
  8933                           wreg	equ	0xFE8
  8934                           postdec1	equ	0xFE5
  8935                           fsr1l	equ	0xFE1
  8936                           postinc2	equ	0xFDE
  8937                           postdec2	equ	0xFDD
  8938                           fsr2h	equ	0xFDA
  8939                           fsr2l	equ	0xFD9
  8940                           status	equ	0xFD8
  8941                           
  8942 ;; *************** function ___wmul *****************
  8943 ;; Defined at:
  8944 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  8945 ;; Parameters:    Size  Location     Type
  8946 ;;  multiplier      2   23[BANK0 ] unsigned int 
  8947 ;;  multiplicand    2   25[BANK0 ] unsigned int 
  8948 ;; Auto vars:     Size  Location     Type
  8949 ;;  product         2   27[BANK0 ] unsigned int 
  8950 ;; Return value:  Size  Location     Type
  8951 ;;                  2   23[BANK0 ] unsigned int 
  8952 ;; Registers used:
  8953 ;;		wreg, status,2, status,0, prodl, prodh
  8954 ;; Tracked objects:
  8955 ;;		On entry : 0/0
  8956 ;;		On exit  : 0/0
  8957 ;;		Unchanged: 0/0
  8958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8959 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8960 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8962 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8963 ;;Total ram usage:        6 bytes
  8964 ;; Hardware stack levels used:    1
  8965 ;; Hardware stack levels required when called:    4
  8966 ;; This function calls:
  8967 ;;		Nothing
  8968 ;; This function is called by:
  8969 ;;		_delay_ms
  8970 ;; This function uses a non-reentrant model
  8971 ;;
  8972                           
  8973                           	psect	text25
  8974  005CBA                     __ptext25:
  8975                           	opt stack 0
  8976  005CBA                     ___wmul:
  8977                           	opt stack 23
  8978                           
  8979                           ; BSR set to: 0
  8980                           ;incstack = 0
  8981  005CBA  0100               	movlb	0	; () banked
  8982  005CBC  5177               	movf	___wmul@multiplier& (0+255),w,b
  8983  005CBE  0100               	movlb	0	; () banked
  8984  005CC0  0379               	mulwf	___wmul@multiplicand& (0+255),b
  8985  005CC2  CFF3 F07B          	movff	prodl,___wmul@product
  8986  005CC6  CFF4 F07C          	movff	prodh,___wmul@product+1
  8987  005CCA  0100               	movlb	0	; () banked
  8988  005CCC  5177               	movf	___wmul@multiplier& (0+255),w,b
  8989  005CCE  0100               	movlb	0	; () banked
  8990  005CD0  037A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  8991  005CD2  50F3               	movf	prodl,w,c
  8992  005CD4  0100               	movlb	0	; () banked
  8993  005CD6  277C               	addwf	(___wmul@product+1)& (0+255),f,b
  8994  005CD8  0100               	movlb	0	; () banked
  8995  005CDA  5178               	movf	(___wmul@multiplier+1)& (0+255),w,b
  8996  005CDC  0100               	movlb	0	; () banked
  8997  005CDE  0379               	mulwf	___wmul@multiplicand& (0+255),b
  8998  005CE0  50F3               	movf	prodl,w,c
  8999  005CE2  0100               	movlb	0	; () banked
  9000  005CE4  277C               	addwf	(___wmul@product+1)& (0+255),f,b
  9001                           
  9002                           ; BSR set to: 0
  9003  005CE6  C07B  F077         	movff	___wmul@product,?___wmul
  9004  005CEA  C07C  F078         	movff	___wmul@product+1,?___wmul+1
  9005  005CEE  0012               	return	
  9006  005CF0                     __end_of___wmul:
  9007                           	opt stack 0
  9008                           tblptru	equ	0xFF8
  9009                           tblptrh	equ	0xFF7
  9010                           tblptrl	equ	0xFF6
  9011                           tablat	equ	0xFF5
  9012                           prodh	equ	0xFF4
  9013                           prodl	equ	0xFF3
  9014                           postinc0	equ	0xFEE
  9015                           wreg	equ	0xFE8
  9016                           postdec1	equ	0xFE5
  9017                           fsr1l	equ	0xFE1
  9018                           postinc2	equ	0xFDE
  9019                           postdec2	equ	0xFDD
  9020                           fsr2h	equ	0xFDA
  9021                           fsr2l	equ	0xFD9
  9022                           status	equ	0xFD8
  9023                           
  9024 ;; *************** function _can_send *****************
  9025 ;; Defined at:
  9026 ;;		line 338 in file "parcheggio.c"
  9027 ;; Parameters:    Size  Location     Type
  9028 ;;		None
  9029 ;; Auto vars:     Size  Location     Type
  9030 ;;  data_correct    0   39[BANK0 ] unsigned char [0]
  9031 ;; Return value:  Size  Location     Type
  9032 ;;		None               void
  9033 ;; Registers used:
  9034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9035 ;; Tracked objects:
  9036 ;;		On entry : 0/0
  9037 ;;		On exit  : 0/0
  9038 ;;		Unchanged: 0/0
  9039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9044 ;;Total ram usage:        0 bytes
  9045 ;; Hardware stack levels used:    1
  9046 ;; Hardware stack levels required when called:    5
  9047 ;; This function calls:
  9048 ;;		_CANisTxReady
  9049 ;;		_CANsendMessage
  9050 ;; This function is called by:
  9051 ;;		_park_routine
  9052 ;;		_parallelo
  9053 ;; This function uses a non-reentrant model
  9054 ;;
  9055                           
  9056                           	psect	text26
  9057  0052EC                     __ptext26:
  9058                           	opt stack 0
  9059  0052EC                     _can_send:
  9060                           	opt stack 23
  9061                           
  9062                           ;parcheggio.c: 339: if (PORTBbits.RB5 == 1) {
  9063                           
  9064                           ; BSR set to: 0
  9065                           ;incstack = 0
  9066  0052EC  AA81               	btfss	3969,5,c	;volatile
  9067  0052EE  D063               	goto	l5311
  9068  0052F0                     l5291:
  9069  0052F0  ECA4  F02E         	call	_CANisTxReady	;wreg free
  9070  0052F4  06E8               	decf	wreg,f,c
  9071  0052F6  A4D8               	btfss	status,2,c
  9072  0052F8  D7FB               	goto	l5291
  9073                           
  9074                           ;parcheggio.c: 341: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG &
      +                           CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  9075  0052FA  0E05               	movlw	5
  9076  0052FC  0100               	movlb	0	; () banked
  9077  0052FE  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  9078  005300  0E00               	movlw	0
  9079  005302  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  9080  005304  0E00               	movlw	0
  9081  005306  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  9082  005308  0E00               	movlw	0
  9083  00530A  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  9084  00530C  0E73               	movlw	low _data_steering
  9085  00530E  0100               	movlb	0	; () banked
  9086  005310  6F7B               	movwf	CANsendMessage@data& (0+255),b
  9087  005312  0E01               	movlw	high _data_steering
  9088  005314  0100               	movlb	0	; () banked
  9089  005316  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  9090  005318  0E08               	movlw	8
  9091  00531A  0100               	movlb	0	; () banked
  9092  00531C  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  9093  00531E  0EBC               	movlw	188
  9094  005320  0100               	movlb	0	; () banked
  9095  005322  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  9096  005324  EC2C  F00C         	call	_CANsendMessage	;wreg free
  9097                           
  9098                           ;parcheggio.c: 342: data_speed[0] = set_speed;
  9099  005328  C0E5  F16B         	movff	_set_speed,_data_speed
  9100                           
  9101                           ;parcheggio.c: 343: data_speed[1] = (set_speed >> 8);
  9102  00532C  0100               	movlb	0	; () banked
  9103  00532E  51E6               	movf	(_set_speed+1)& (0+255),w,b
  9104  005330  0101               	movlb	1	; () banked
  9105  005332  6F6C               	movwf	(_data_speed+1)& (0+255),b
  9106                           
  9107                           ; BSR set to: 1
  9108                           ;parcheggio.c: 344: data_speed[2] = dir;
  9109  005334  0E00               	movlw	0
  9110  005336  B444               	btfsc	_dir/(0+8),_dir& (0+7),c
  9111  005338  0E01               	movlw	1
  9112  00533A  0101               	movlb	1	; () banked
  9113  00533C  6F6D               	movwf	(_data_speed+2)& (0+255),b
  9114  00533E                     l5301:
  9115  00533E  ECA4  F02E         	call	_CANisTxReady	;wreg free
  9116  005342  06E8               	decf	wreg,f,c
  9117  005344  A4D8               	btfss	status,2,c
  9118  005346  D7FB               	goto	l5301
  9119                           
  9120                           ;parcheggio.c: 346: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  9121  005348  0E03               	movlw	3
  9122  00534A  0100               	movlb	0	; () banked
  9123  00534C  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  9124  00534E  0E00               	movlw	0
  9125  005350  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  9126  005352  0E00               	movlw	0
  9127  005354  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  9128  005356  0E00               	movlw	0
  9129  005358  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  9130  00535A  0E6B               	movlw	low _data_speed
  9131  00535C  0100               	movlb	0	; () banked
  9132  00535E  6F7B               	movwf	CANsendMessage@data& (0+255),b
  9133  005360  0E01               	movlw	high _data_speed
  9134  005362  0100               	movlb	0	; () banked
  9135  005364  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  9136  005366  0E08               	movlw	8
  9137  005368  0100               	movlb	0	; () banked
  9138  00536A  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  9139  00536C  0EBC               	movlw	188
  9140  00536E  0100               	movlb	0	; () banked
  9141  005370  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  9142  005372  EC2C  F00C         	call	_CANsendMessage	;wreg free
  9143  005376                     l5305:
  9144  005376  ECA4  F02E         	call	_CANisTxReady	;wreg free
  9145  00537A  06E8               	decf	wreg,f,c
  9146  00537C  A4D8               	btfss	status,2,c
  9147  00537E  D7FB               	goto	l5305
  9148                           
  9149                           ;parcheggio.c: 348: data_brake[1] = 0;
  9150  005380  0E00               	movlw	0
  9151  005382  0101               	movlb	1	; () banked
  9152  005384  6F5C               	movwf	(_data_brake+1)& (0+255),b
  9153                           
  9154                           ; BSR set to: 1
  9155                           ;parcheggio.c: 349: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  9156  005386  0E04               	movlw	4
  9157  005388  0100               	movlb	0	; () banked
  9158  00538A  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  9159  00538C  0E00               	movlw	0
  9160  00538E  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  9161  005390  0E00               	movlw	0
  9162  005392  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  9163  005394  0E00               	movlw	0
  9164  005396  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  9165  005398  0E5B               	movlw	low _data_brake
  9166  00539A  0100               	movlb	0	; () banked
  9167  00539C  6F7B               	movwf	CANsendMessage@data& (0+255),b
  9168  00539E  0E01               	movlw	high _data_brake
  9169  0053A0  0100               	movlb	0	; () banked
  9170  0053A2  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  9171  0053A4  0E08               	movlw	8
  9172  0053A6  0100               	movlb	0	; () banked
  9173  0053A8  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  9174  0053AA  0EBC               	movlw	188
  9175  0053AC  0100               	movlb	0	; () banked
  9176  0053AE  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  9177  0053B0  EC2C  F00C         	call	_CANsendMessage	;wreg free
  9178                           
  9179                           ;parcheggio.c: 350: } else {
  9180  0053B4  0012               	return	
  9181  0053B6                     l5311:
  9182                           
  9183                           ;parcheggio.c: 351: CANsendMessage(0b00000001110, data_correction, 8, CAN_CONFIG_STD_MSG
      +                           & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  9184  0053B6  0E0E               	movlw	14
  9185  0053B8  0100               	movlb	0	; () banked
  9186  0053BA  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  9187  0053BC  0E00               	movlw	0
  9188  0053BE  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  9189  0053C0  0E00               	movlw	0
  9190  0053C2  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  9191  0053C4  0E00               	movlw	0
  9192  0053C6  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  9193  0053C8  0E63               	movlw	low _data_correction
  9194  0053CA  0100               	movlb	0	; () banked
  9195  0053CC  6F7B               	movwf	CANsendMessage@data& (0+255),b
  9196  0053CE  0E01               	movlw	high _data_correction
  9197  0053D0  0100               	movlb	0	; () banked
  9198  0053D2  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  9199  0053D4  0E08               	movlw	8
  9200  0053D6  0100               	movlb	0	; () banked
  9201  0053D8  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  9202  0053DA  0EBC               	movlw	188
  9203  0053DC  0100               	movlb	0	; () banked
  9204  0053DE  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  9205  0053E0  EC2C  F00C         	call	_CANsendMessage	;wreg free
  9206                           
  9207                           ;parcheggio.c: 352: unsigned char data_correction1[];
  9208                           ;parcheggio.c: 353: data_correction1[0] = data_correction[0];
  9209  0053E4  EE20  F087         	lfsr	2,can_send@data_correction1
  9210  0053E8  C163  FFDF         	movff	_data_correction,indf2
  9211                           
  9212                           ;parcheggio.c: 354: data_correction1[1] = 0;
  9213  0053EC  0E00               	movlw	0
  9214  0053EE  CFE8 F088          	movff	wreg,can_send@data_correction1+1
  9215                           
  9216                           ;parcheggio.c: 355: CANsendMessage(0xAA, data_correction1, 8, CAN_CONFIG_STD_MSG & CAN_N
      +                          ORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  9217  0053F2  0EAA               	movlw	170
  9218  0053F4  0100               	movlb	0	; () banked
  9219  0053F6  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  9220  0053F8  0E00               	movlw	0
  9221  0053FA  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  9222  0053FC  0E00               	movlw	0
  9223  0053FE  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  9224  005400  0E00               	movlw	0
  9225  005402  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  9226  005404  0E87               	movlw	low can_send@data_correction1
  9227  005406  0100               	movlb	0	; () banked
  9228  005408  6F7B               	movwf	CANsendMessage@data& (0+255),b
  9229  00540A  0E00               	movlw	high can_send@data_correction1
  9230  00540C  0100               	movlb	0	; () banked
  9231  00540E  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  9232  005410  0E08               	movlw	8
  9233  005412  0100               	movlb	0	; () banked
  9234  005414  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  9235  005416  0EBC               	movlw	188
  9236  005418  0100               	movlb	0	; () banked
  9237  00541A  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  9238  00541C  EC2C  F00C         	call	_CANsendMessage	;wreg free
  9239  005420  0012               	return	
  9240  005422                     __end_of_can_send:
  9241                           	opt stack 0
  9242                           tblptru	equ	0xFF8
  9243                           tblptrh	equ	0xFF7
  9244                           tblptrl	equ	0xFF6
  9245                           tablat	equ	0xFF5
  9246                           prodh	equ	0xFF4
  9247                           prodl	equ	0xFF3
  9248                           postinc0	equ	0xFEE
  9249                           wreg	equ	0xFE8
  9250                           postdec1	equ	0xFE5
  9251                           fsr1l	equ	0xFE1
  9252                           indf2	equ	0xFDF
  9253                           postinc2	equ	0xFDE
  9254                           postdec2	equ	0xFDD
  9255                           fsr2h	equ	0xFDA
  9256                           fsr2l	equ	0xFD9
  9257                           status	equ	0xFD8
  9258                           
  9259 ;; *************** function _CANsendMessage *****************
  9260 ;; Defined at:
  9261 ;;		line 294 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  9262 ;; Parameters:    Size  Location     Type
  9263 ;;  identifier      4   23[BANK0 ] unsigned long 
  9264 ;;  data            2   27[BANK0 ] PTR unsigned char 
  9265 ;;		 -> can_send@data_correction1(0), data_correction(8), data_speed(8), data_test(8), 
  9266 ;;		 -> data_brake(8), data_steering(8), data(8), 
  9267 ;;  dataLength      1   29[BANK0 ] unsigned char 
  9268 ;;  flags           1   30[BANK0 ] enum E16335
  9269 ;; Auto vars:     Size  Location     Type
  9270 ;;  tamp            4   35[BANK0 ] unsigned long 
  9271 ;; Return value:  Size  Location     Type
  9272 ;;		None               void
  9273 ;; Registers used:
  9274 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9275 ;; Tracked objects:
  9276 ;;		On entry : 0/0
  9277 ;;		On exit  : 0/0
  9278 ;;		Unchanged: 0/0
  9279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9280 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9281 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9282 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9283 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9284 ;;Total ram usage:       16 bytes
  9285 ;; Hardware stack levels used:    1
  9286 ;; Hardware stack levels required when called:    4
  9287 ;; This function calls:
  9288 ;;		Nothing
  9289 ;; This function is called by:
  9290 ;;		_park_search
  9291 ;;		_park_routine
  9292 ;;		_can_send
  9293 ;; This function uses a non-reentrant model
  9294 ;;
  9295                           
  9296                           	psect	text27
  9297  001858                     __ptext27:
  9298                           	opt stack 0
  9299  001858                     _CANsendMessage:
  9300                           	opt stack 23
  9301                           
  9302                           ;inc\CANlib.h: 296: unsigned long tamp;
  9303                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  9304                           
  9305                           ;incstack = 0
  9306  001858  010F               	movlb	15	; () banked
  9307  00185A  B740               	btfsc	64,3,b	;volatile
  9308  00185C  D13F               	goto	l363
  9309                           
  9310                           ; BSR set to: 15
  9311                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  9312  00185E  C07D  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  9313                           
  9314                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  9315  001862  0100               	movlb	0	; () banked
  9316  001864  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  9317  001866  D003               	goto	l364
  9318                           
  9319                           ; BSR set to: 0
  9320                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  9321  001868  010F               	movlb	15	; () banked
  9322  00186A  8D45               	bsf	69,6,b	;volatile
  9323  00186C  D002               	goto	l365
  9324  00186E                     l364:
  9325                           
  9326                           ; BSR set to: 0
  9327                           ;inc\CANlib.h: 302: else
  9328                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  9329  00186E  010F               	movlb	15	; () banked
  9330  001870  9D45               	bcf	69,6,b	;volatile
  9331  001872                     l365:
  9332                           
  9333                           ; BSR set to: 15
  9334                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  9335  001872  0100               	movlb	0	; () banked
  9336  001874  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  9337  001876  D079               	goto	l366
  9338                           
  9339                           ; BSR set to: 0
  9340                           ;inc\CANlib.h: 306: {
  9341                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  9342  001878  0100               	movlb	0	; () banked
  9343  00187A  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  9344  00187C  0100               	movlb	0	; () banked
  9345  00187E  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9346  001880  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  9347  001882  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  9348  001884  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  9349                           
  9350                           ; BSR set to: 0
  9351                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  9352  001886  C083  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  9353                           
  9354                           ; BSR set to: 0
  9355                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  9356  00188A  0E00               	movlw	0
  9357  00188C  0100               	movlb	0	; () banked
  9358  00188E  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  9359  001890  0100               	movlb	0	; () banked
  9360  001892  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9361  001894  0EFF               	movlw	255
  9362  001896  0100               	movlb	0	; () banked
  9363  001898  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  9364  00189A  0100               	movlb	0	; () banked
  9365  00189C  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  9366  00189E  0E00               	movlw	0
  9367  0018A0  0100               	movlb	0	; () banked
  9368  0018A2  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  9369  0018A4  0100               	movlb	0	; () banked
  9370  0018A6  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  9371  0018A8  0E00               	movlw	0
  9372  0018AA  0100               	movlb	0	; () banked
  9373  0018AC  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  9374  0018AE  0100               	movlb	0	; () banked
  9375  0018B0  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  9376                           
  9377                           ; BSR set to: 0
  9378                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  9379  0018B2  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  9380  0018B6  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  9381  0018BA  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  9382  0018BE  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  9383  0018C2  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  9384  0018C6  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  9385  0018CA  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  9386  0018CE  0100               	movlb	0	; () banked
  9387  0018D0  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  9388  0018D2  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9389  0018D6  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9390  0018DA  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9391  0018DE  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9392                           
  9393                           ; BSR set to: 0
  9394                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  9395  0018E2  C083  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  9396                           
  9397                           ; BSR set to: 0
  9398                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  9399  0018E6  0E00               	movlw	0
  9400  0018E8  010F               	movlb	15	; () banked
  9401  0018EA  6F42               	movwf	66,b	;volatile
  9402                           
  9403                           ; BSR set to: 15
  9404                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  9405  0018EC  010F               	movlb	15	; () banked
  9406  0018EE  8742               	bsf	66,3,b	;volatile
  9407                           
  9408                           ; BSR set to: 15
  9409                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  9410  0018F0  0100               	movlb	0	; () banked
  9411  0018F2  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  9412  0018F4  D002               	goto	l367
  9413                           
  9414                           ; BSR set to: 0
  9415                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  9416  0018F6  010F               	movlb	15	; () banked
  9417  0018F8  8142               	bsf	66,0,b	;volatile
  9418  0018FA                     l367:
  9419                           
  9420                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  9421  0018FA  0100               	movlb	0	; () banked
  9422  0018FC  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  9423  0018FE  D002               	goto	l368
  9424                           
  9425                           ; BSR set to: 0
  9426                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  9427  001900  010F               	movlb	15	; () banked
  9428  001902  8342               	bsf	66,1,b	;volatile
  9429  001904                     l368:
  9430                           
  9431                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  9432  001904  0100               	movlb	0	; () banked
  9433  001906  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  9434  001908  D002               	goto	l369
  9435                           
  9436                           ; BSR set to: 0
  9437                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  9438  00190A  010F               	movlb	15	; () banked
  9439  00190C  8B42               	bsf	66,5,b	;volatile
  9440  00190E                     l369:
  9441                           
  9442                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  9443  00190E  0100               	movlb	0	; () banked
  9444  001910  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  9445  001912  D002               	goto	l370
  9446                           
  9447                           ; BSR set to: 0
  9448                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  9449  001914  010F               	movlb	15	; () banked
  9450  001916  8D42               	bsf	66,6,b	;volatile
  9451  001918                     l370:
  9452                           
  9453                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  9454  001918  0100               	movlb	0	; () banked
  9455  00191A  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  9456  00191C  D002               	goto	l4483
  9457                           
  9458                           ; BSR set to: 0
  9459                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  9460  00191E  010F               	movlb	15	; () banked
  9461  001920  8F42               	bsf	66,7,b	;volatile
  9462  001922                     l4483:
  9463                           
  9464                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  9465  001922  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  9466  001926  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  9467  00192A  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  9468  00192E  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  9469  001932  0E16               	movlw	22
  9470  001934  D006               	goto	u4870
  9471  001936                     u4875:
  9472  001936  0100               	movlb	0	; () banked
  9473  001938  90D8               	bcf	status,0,c
  9474  00193A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  9475  00193C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  9476  00193E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  9477  001940  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  9478  001942                     u4870:
  9479  001942  2EE8               	decfsz	wreg,f,c
  9480  001944  D7F8               	goto	u4875
  9481  001946  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9482  00194A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9483  00194E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9484  001952  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9485                           
  9486                           ; BSR set to: 0
  9487                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  9488  001956  0100               	movlb	0	; () banked
  9489  001958  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  9490  00195A  0100               	movlb	0	; () banked
  9491  00195C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9492  00195E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  9493  001960  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  9494  001962  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  9495                           
  9496                           ; BSR set to: 0
  9497                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  9498  001964  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  9499                           
  9500                           ;inc\CANlib.h: 332: }
  9501  001968  D059               	goto	l4503
  9502  00196A                     l366:
  9503                           
  9504                           ; BSR set to: 0
  9505                           ;inc\CANlib.h: 334: else
  9506                           ;inc\CANlib.h: 336: {
  9507                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  9508  00196A  010F               	movlb	15	; () banked
  9509  00196C  9742               	bcf	66,3,b	;volatile
  9510                           
  9511                           ; BSR set to: 15
  9512                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  9513  00196E  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  9514  001972  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  9515  001976  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  9516  00197A  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  9517  00197E  0E04               	movlw	4
  9518  001980  D006               	goto	u4880
  9519  001982                     u4885:
  9520  001982  0100               	movlb	0	; () banked
  9521  001984  90D8               	bcf	status,0,c
  9522  001986  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  9523  001988  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  9524  00198A  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  9525  00198C  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  9526  00198E                     u4880:
  9527  00198E  2EE8               	decfsz	wreg,f,c
  9528  001990  D7F8               	goto	u4885
  9529  001992  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9530  001996  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9531  00199A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9532  00199E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9533                           
  9534                           ; BSR set to: 0
  9535                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  9536  0019A2  0100               	movlb	0	; () banked
  9537  0019A4  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  9538  0019A6  0100               	movlb	0	; () banked
  9539  0019A8  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9540  0019AA  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  9541  0019AC  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  9542  0019AE  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  9543                           
  9544                           ; BSR set to: 0
  9545                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  9546  0019B0  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  9547                           
  9548                           ; BSR set to: 0
  9549                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  9550  0019B4  0E07               	movlw	7
  9551  0019B6  0100               	movlb	0	; () banked
  9552  0019B8  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  9553  0019BA  0100               	movlb	0	; () banked
  9554  0019BC  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9555  0019BE  0E00               	movlw	0
  9556  0019C0  0100               	movlb	0	; () banked
  9557  0019C2  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  9558  0019C4  0100               	movlb	0	; () banked
  9559  0019C6  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  9560  0019C8  0E00               	movlw	0
  9561  0019CA  0100               	movlb	0	; () banked
  9562  0019CC  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  9563  0019CE  0100               	movlb	0	; () banked
  9564  0019D0  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  9565  0019D2  0E00               	movlw	0
  9566  0019D4  0100               	movlb	0	; () banked
  9567  0019D6  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  9568  0019D8  0100               	movlb	0	; () banked
  9569  0019DA  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  9570                           
  9571                           ; BSR set to: 0
  9572                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  9573  0019DC  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  9574  0019E0  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  9575  0019E4  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  9576  0019E8  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  9577  0019EC  0E05               	movlw	5
  9578  0019EE                     u4895:
  9579  0019EE  90D8               	bcf	status,0,c
  9580  0019F0  0100               	movlb	0	; () banked
  9581  0019F2  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  9582  0019F4  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  9583  0019F6  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  9584  0019F8  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  9585  0019FA  2EE8               	decfsz	wreg,f,c
  9586  0019FC  D7F8               	goto	u4895
  9587  0019FE  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9588  001A02  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9589  001A06  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9590  001A0A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9591                           
  9592                           ; BSR set to: 0
  9593                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  9594  001A0E  010F               	movlb	15	; () banked
  9595  001A10  5142               	movf	66,w,b	;volatile
  9596  001A12  0B1F               	andlw	31
  9597  001A14  010F               	movlb	15	; () banked
  9598  001A16  6F42               	movwf	66,b	;volatile
  9599                           
  9600                           ; BSR set to: 15
  9601                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  9602  001A18  C083  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  9603  001A1C                     l4503:
  9604                           
  9605                           ;inc\CANlib.h: 347: }
  9606                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  9607  001A1C  0100               	movlb	0	; () banked
  9608  001A1E  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  9609  001A20  D003               	goto	l373
  9610                           
  9611                           ; BSR set to: 0
  9612                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  9613  001A22  010F               	movlb	15	; () banked
  9614  001A24  8140               	bsf	64,0,b	;volatile
  9615  001A26  D002               	goto	l374
  9616  001A28                     l373:
  9617                           
  9618                           ; BSR set to: 0
  9619                           ;inc\CANlib.h: 351: else
  9620                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  9621  001A28  010F               	movlb	15	; () banked
  9622  001A2A  9140               	bcf	64,0,b	;volatile
  9623  001A2C                     l374:
  9624                           
  9625                           ; BSR set to: 15
  9626                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  9627  001A2C  0100               	movlb	0	; () banked
  9628  001A2E  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  9629  001A30  D003               	goto	l375
  9630                           
  9631                           ; BSR set to: 0
  9632                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  9633  001A32  010F               	movlb	15	; () banked
  9634  001A34  8340               	bsf	64,1,b	;volatile
  9635  001A36  D002               	goto	l4509
  9636  001A38                     l375:
  9637                           
  9638                           ; BSR set to: 0
  9639                           ;inc\CANlib.h: 355: else
  9640                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  9641  001A38  010F               	movlb	15	; () banked
  9642  001A3A  9340               	bcf	64,1,b	;volatile
  9643  001A3C                     l4509:
  9644                           
  9645                           ; BSR set to: 15
  9646                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  9647  001A3C  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  9648  001A40  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  9649  001A44  50DF               	movf	indf2,w,c
  9650  001A46  010F               	movlb	15	; () banked
  9651  001A48  6F46               	movwf	70,b	;volatile
  9652                           
  9653                           ; BSR set to: 15
  9654                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  9655  001A4A  0100               	movlb	0	; () banked
  9656  001A4C  EE20 F001          	lfsr	2,1
  9657  001A50  517B               	movf	CANsendMessage@data& (0+255),w,b
  9658  001A52  26D9               	addwf	fsr2l,f,c
  9659  001A54  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9660  001A56  22DA               	addwfc	fsr2h,f,c
  9661  001A58  50DF               	movf	indf2,w,c
  9662  001A5A  010F               	movlb	15	; () banked
  9663  001A5C  6F47               	movwf	71,b	;volatile
  9664                           
  9665                           ; BSR set to: 15
  9666                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  9667  001A5E  0100               	movlb	0	; () banked
  9668  001A60  EE20 F002          	lfsr	2,2
  9669  001A64  517B               	movf	CANsendMessage@data& (0+255),w,b
  9670  001A66  26D9               	addwf	fsr2l,f,c
  9671  001A68  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9672  001A6A  22DA               	addwfc	fsr2h,f,c
  9673  001A6C  50DF               	movf	indf2,w,c
  9674  001A6E  010F               	movlb	15	; () banked
  9675  001A70  6F48               	movwf	72,b	;volatile
  9676                           
  9677                           ; BSR set to: 15
  9678                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  9679  001A72  0100               	movlb	0	; () banked
  9680  001A74  EE20 F003          	lfsr	2,3
  9681  001A78  517B               	movf	CANsendMessage@data& (0+255),w,b
  9682  001A7A  26D9               	addwf	fsr2l,f,c
  9683  001A7C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9684  001A7E  22DA               	addwfc	fsr2h,f,c
  9685  001A80  50DF               	movf	indf2,w,c
  9686  001A82  010F               	movlb	15	; () banked
  9687  001A84  6F49               	movwf	73,b	;volatile
  9688                           
  9689                           ; BSR set to: 15
  9690                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  9691  001A86  0100               	movlb	0	; () banked
  9692  001A88  EE20 F004          	lfsr	2,4
  9693  001A8C  517B               	movf	CANsendMessage@data& (0+255),w,b
  9694  001A8E  26D9               	addwf	fsr2l,f,c
  9695  001A90  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9696  001A92  22DA               	addwfc	fsr2h,f,c
  9697  001A94  50DF               	movf	indf2,w,c
  9698  001A96  010F               	movlb	15	; () banked
  9699  001A98  6F4A               	movwf	74,b	;volatile
  9700                           
  9701                           ; BSR set to: 15
  9702                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  9703  001A9A  0100               	movlb	0	; () banked
  9704  001A9C  EE20 F005          	lfsr	2,5
  9705  001AA0  517B               	movf	CANsendMessage@data& (0+255),w,b
  9706  001AA2  26D9               	addwf	fsr2l,f,c
  9707  001AA4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9708  001AA6  22DA               	addwfc	fsr2h,f,c
  9709  001AA8  50DF               	movf	indf2,w,c
  9710  001AAA  010F               	movlb	15	; () banked
  9711  001AAC  6F4B               	movwf	75,b	;volatile
  9712                           
  9713                           ; BSR set to: 15
  9714                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  9715  001AAE  0100               	movlb	0	; () banked
  9716  001AB0  EE20 F006          	lfsr	2,6
  9717  001AB4  517B               	movf	CANsendMessage@data& (0+255),w,b
  9718  001AB6  26D9               	addwf	fsr2l,f,c
  9719  001AB8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9720  001ABA  22DA               	addwfc	fsr2h,f,c
  9721  001ABC  50DF               	movf	indf2,w,c
  9722  001ABE  010F               	movlb	15	; () banked
  9723  001AC0  6F4C               	movwf	76,b	;volatile
  9724                           
  9725                           ; BSR set to: 15
  9726                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  9727  001AC2  0100               	movlb	0	; () banked
  9728  001AC4  EE20 F007          	lfsr	2,7
  9729  001AC8  517B               	movf	CANsendMessage@data& (0+255),w,b
  9730  001ACA  26D9               	addwf	fsr2l,f,c
  9731  001ACC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9732  001ACE  22DA               	addwfc	fsr2h,f,c
  9733  001AD0  50DF               	movf	indf2,w,c
  9734  001AD2  010F               	movlb	15	; () banked
  9735  001AD4  6F4D               	movwf	77,b	;volatile
  9736                           
  9737                           ; BSR set to: 15
  9738                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  9739  001AD6  010F               	movlb	15	; () banked
  9740  001AD8  8740               	bsf	64,3,b	;volatile
  9741                           
  9742                           ; BSR set to: 15
  9743                           ;inc\CANlib.h: 368: return;
  9744  001ADA  0012               	return	
  9745  001ADC                     l363:
  9746                           
  9747                           ; BSR set to: 15
  9748                           ;inc\CANlib.h: 369: }
  9749                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  9750  001ADC  010F               	movlb	15	; () banked
  9751  001ADE  B730               	btfsc	48,3,b	;volatile
  9752  001AE0  D13F               	goto	l378
  9753                           
  9754                           ; BSR set to: 15
  9755                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  9756  001AE2  C07D  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  9757                           
  9758                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  9759  001AE6  0100               	movlb	0	; () banked
  9760  001AE8  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  9761  001AEA  D003               	goto	l379
  9762                           
  9763                           ; BSR set to: 0
  9764                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  9765  001AEC  010F               	movlb	15	; () banked
  9766  001AEE  8D35               	bsf	53,6,b	;volatile
  9767  001AF0  D002               	goto	l380
  9768  001AF2                     l379:
  9769                           
  9770                           ; BSR set to: 0
  9771                           ;inc\CANlib.h: 378: else
  9772                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  9773  001AF2  010F               	movlb	15	; () banked
  9774  001AF4  9D35               	bcf	53,6,b	;volatile
  9775  001AF6                     l380:
  9776                           
  9777                           ; BSR set to: 15
  9778                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  9779  001AF6  0100               	movlb	0	; () banked
  9780  001AF8  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  9781  001AFA  D079               	goto	l381
  9782                           
  9783                           ; BSR set to: 0
  9784                           ;inc\CANlib.h: 382: {
  9785                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  9786  001AFC  0100               	movlb	0	; () banked
  9787  001AFE  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  9788  001B00  0100               	movlb	0	; () banked
  9789  001B02  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9790  001B04  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  9791  001B06  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  9792  001B08  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  9793                           
  9794                           ; BSR set to: 0
  9795                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  9796  001B0A  C083  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  9797                           
  9798                           ; BSR set to: 0
  9799                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  9800  001B0E  0E00               	movlw	0
  9801  001B10  0100               	movlb	0	; () banked
  9802  001B12  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  9803  001B14  0100               	movlb	0	; () banked
  9804  001B16  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9805  001B18  0EFF               	movlw	255
  9806  001B1A  0100               	movlb	0	; () banked
  9807  001B1C  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  9808  001B1E  0100               	movlb	0	; () banked
  9809  001B20  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  9810  001B22  0E00               	movlw	0
  9811  001B24  0100               	movlb	0	; () banked
  9812  001B26  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  9813  001B28  0100               	movlb	0	; () banked
  9814  001B2A  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  9815  001B2C  0E00               	movlw	0
  9816  001B2E  0100               	movlb	0	; () banked
  9817  001B30  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  9818  001B32  0100               	movlb	0	; () banked
  9819  001B34  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  9820                           
  9821                           ; BSR set to: 0
  9822                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  9823  001B36  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  9824  001B3A  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  9825  001B3E  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  9826  001B42  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  9827  001B46  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  9828  001B4A  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  9829  001B4E  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  9830  001B52  0100               	movlb	0	; () banked
  9831  001B54  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  9832  001B56  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9833  001B5A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9834  001B5E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9835  001B62  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9836                           
  9837                           ; BSR set to: 0
  9838                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  9839  001B66  C083  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  9840                           
  9841                           ; BSR set to: 0
  9842                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  9843  001B6A  0E00               	movlw	0
  9844  001B6C  010F               	movlb	15	; () banked
  9845  001B6E  6F32               	movwf	50,b	;volatile
  9846                           
  9847                           ; BSR set to: 15
  9848                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  9849  001B70  010F               	movlb	15	; () banked
  9850  001B72  8732               	bsf	50,3,b	;volatile
  9851                           
  9852                           ; BSR set to: 15
  9853                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  9854  001B74  0100               	movlb	0	; () banked
  9855  001B76  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  9856  001B78  D002               	goto	l382
  9857                           
  9858                           ; BSR set to: 0
  9859                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  9860  001B7A  010F               	movlb	15	; () banked
  9861  001B7C  8132               	bsf	50,0,b	;volatile
  9862  001B7E                     l382:
  9863                           
  9864                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  9865  001B7E  0100               	movlb	0	; () banked
  9866  001B80  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  9867  001B82  D002               	goto	l383
  9868                           
  9869                           ; BSR set to: 0
  9870                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  9871  001B84  010F               	movlb	15	; () banked
  9872  001B86  8332               	bsf	50,1,b	;volatile
  9873  001B88                     l383:
  9874                           
  9875                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  9876  001B88  0100               	movlb	0	; () banked
  9877  001B8A  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  9878  001B8C  D002               	goto	l384
  9879                           
  9880                           ; BSR set to: 0
  9881                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  9882  001B8E  010F               	movlb	15	; () banked
  9883  001B90  8B32               	bsf	50,5,b	;volatile
  9884  001B92                     l384:
  9885                           
  9886                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  9887  001B92  0100               	movlb	0	; () banked
  9888  001B94  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  9889  001B96  D002               	goto	l385
  9890                           
  9891                           ; BSR set to: 0
  9892                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  9893  001B98  010F               	movlb	15	; () banked
  9894  001B9A  8D32               	bsf	50,6,b	;volatile
  9895  001B9C                     l385:
  9896                           
  9897                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  9898  001B9C  0100               	movlb	0	; () banked
  9899  001B9E  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  9900  001BA0  D002               	goto	l4559
  9901                           
  9902                           ; BSR set to: 0
  9903                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  9904  001BA2  010F               	movlb	15	; () banked
  9905  001BA4  8F32               	bsf	50,7,b	;volatile
  9906  001BA6                     l4559:
  9907                           
  9908                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  9909  001BA6  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  9910  001BAA  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  9911  001BAE  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  9912  001BB2  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  9913  001BB6  0E16               	movlw	22
  9914  001BB8  D006               	goto	u5000
  9915  001BBA                     u5005:
  9916  001BBA  0100               	movlb	0	; () banked
  9917  001BBC  90D8               	bcf	status,0,c
  9918  001BBE  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  9919  001BC0  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  9920  001BC2  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  9921  001BC4  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  9922  001BC6                     u5000:
  9923  001BC6  2EE8               	decfsz	wreg,f,c
  9924  001BC8  D7F8               	goto	u5005
  9925  001BCA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9926  001BCE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9927  001BD2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9928  001BD6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9929                           
  9930                           ; BSR set to: 0
  9931                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  9932  001BDA  0100               	movlb	0	; () banked
  9933  001BDC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  9934  001BDE  0100               	movlb	0	; () banked
  9935  001BE0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9936  001BE2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  9937  001BE4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  9938  001BE6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  9939                           
  9940                           ; BSR set to: 0
  9941                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  9942  001BE8  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  9943                           
  9944                           ;inc\CANlib.h: 407: }
  9945  001BEC  D059               	goto	l4579
  9946  001BEE                     l381:
  9947                           
  9948                           ; BSR set to: 0
  9949                           ;inc\CANlib.h: 409: else
  9950                           ;inc\CANlib.h: 411: {
  9951                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  9952  001BEE  010F               	movlb	15	; () banked
  9953  001BF0  9732               	bcf	50,3,b	;volatile
  9954                           
  9955                           ; BSR set to: 15
  9956                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  9957  001BF2  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  9958  001BF6  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  9959  001BFA  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  9960  001BFE  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  9961  001C02  0E04               	movlw	4
  9962  001C04  D006               	goto	u5010
  9963  001C06                     u5015:
  9964  001C06  0100               	movlb	0	; () banked
  9965  001C08  90D8               	bcf	status,0,c
  9966  001C0A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  9967  001C0C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  9968  001C0E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  9969  001C10  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  9970  001C12                     u5010:
  9971  001C12  2EE8               	decfsz	wreg,f,c
  9972  001C14  D7F8               	goto	u5015
  9973  001C16  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9974  001C1A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9975  001C1E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9976  001C22  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9977                           
  9978                           ; BSR set to: 0
  9979                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  9980  001C26  0100               	movlb	0	; () banked
  9981  001C28  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  9982  001C2A  0100               	movlb	0	; () banked
  9983  001C2C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9984  001C2E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  9985  001C30  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  9986  001C32  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  9987                           
  9988                           ; BSR set to: 0
  9989                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  9990  001C34  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  9991                           
  9992                           ; BSR set to: 0
  9993                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  9994  001C38  0E07               	movlw	7
  9995  001C3A  0100               	movlb	0	; () banked
  9996  001C3C  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  9997  001C3E  0100               	movlb	0	; () banked
  9998  001C40  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9999  001C42  0E00               	movlw	0
 10000  001C44  0100               	movlb	0	; () banked
 10001  001C46  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 10002  001C48  0100               	movlb	0	; () banked
 10003  001C4A  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 10004  001C4C  0E00               	movlw	0
 10005  001C4E  0100               	movlb	0	; () banked
 10006  001C50  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 10007  001C52  0100               	movlb	0	; () banked
 10008  001C54  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 10009  001C56  0E00               	movlw	0
 10010  001C58  0100               	movlb	0	; () banked
 10011  001C5A  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 10012  001C5C  0100               	movlb	0	; () banked
 10013  001C5E  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 10014                           
 10015                           ; BSR set to: 0
 10016                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 10017  001C60  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
 10018  001C64  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 10019  001C68  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 10020  001C6C  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 10021  001C70  0E05               	movlw	5
 10022  001C72                     u5025:
 10023  001C72  90D8               	bcf	status,0,c
 10024  001C74  0100               	movlb	0	; () banked
 10025  001C76  377F               	rlcf	??_CANsendMessage& (0+255),f,b
 10026  001C78  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 10027  001C7A  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 10028  001C7C  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 10029  001C7E  2EE8               	decfsz	wreg,f,c
 10030  001C80  D7F8               	goto	u5025
 10031  001C82  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
 10032  001C86  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 10033  001C8A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 10034  001C8E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 10035                           
 10036                           ; BSR set to: 0
 10037                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 10038  001C92  010F               	movlb	15	; () banked
 10039  001C94  5132               	movf	50,w,b	;volatile
 10040  001C96  0B1F               	andlw	31
 10041  001C98  010F               	movlb	15	; () banked
 10042  001C9A  6F32               	movwf	50,b	;volatile
 10043                           
 10044                           ; BSR set to: 15
 10045                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 10046  001C9C  C083  FF32         	movff	CANsendMessage@tamp,3890	;volatile
 10047  001CA0                     l4579:
 10048                           
 10049                           ;inc\CANlib.h: 422: }
 10050                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 10051  001CA0  0100               	movlb	0	; () banked
 10052  001CA2  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
 10053  001CA4  D003               	goto	l388
 10054                           
 10055                           ; BSR set to: 0
 10056                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 10057  001CA6  010F               	movlb	15	; () banked
 10058  001CA8  8130               	bsf	48,0,b	;volatile
 10059  001CAA  D002               	goto	l389
 10060  001CAC                     l388:
 10061                           
 10062                           ; BSR set to: 0
 10063                           ;inc\CANlib.h: 426: else
 10064                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 10065  001CAC  010F               	movlb	15	; () banked
 10066  001CAE  9130               	bcf	48,0,b	;volatile
 10067  001CB0                     l389:
 10068                           
 10069                           ; BSR set to: 15
 10070                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 10071  001CB0  0100               	movlb	0	; () banked
 10072  001CB2  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
 10073  001CB4  D003               	goto	l390
 10074                           
 10075                           ; BSR set to: 0
 10076                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 10077  001CB6  010F               	movlb	15	; () banked
 10078  001CB8  8330               	bsf	48,1,b	;volatile
 10079  001CBA  D002               	goto	l4585
 10080  001CBC                     l390:
 10081                           
 10082                           ; BSR set to: 0
 10083                           ;inc\CANlib.h: 430: else
 10084                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 10085  001CBC  010F               	movlb	15	; () banked
 10086  001CBE  9330               	bcf	48,1,b	;volatile
 10087  001CC0                     l4585:
 10088                           
 10089                           ; BSR set to: 15
 10090                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 10091  001CC0  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
 10092  001CC4  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
 10093  001CC8  50DF               	movf	indf2,w,c
 10094  001CCA  010F               	movlb	15	; () banked
 10095  001CCC  6F36               	movwf	54,b	;volatile
 10096                           
 10097                           ; BSR set to: 15
 10098                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 10099  001CCE  0100               	movlb	0	; () banked
 10100  001CD0  EE20 F001          	lfsr	2,1
 10101  001CD4  517B               	movf	CANsendMessage@data& (0+255),w,b
 10102  001CD6  26D9               	addwf	fsr2l,f,c
 10103  001CD8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10104  001CDA  22DA               	addwfc	fsr2h,f,c
 10105  001CDC  50DF               	movf	indf2,w,c
 10106  001CDE  010F               	movlb	15	; () banked
 10107  001CE0  6F37               	movwf	55,b	;volatile
 10108                           
 10109                           ; BSR set to: 15
 10110                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 10111  001CE2  0100               	movlb	0	; () banked
 10112  001CE4  EE20 F002          	lfsr	2,2
 10113  001CE8  517B               	movf	CANsendMessage@data& (0+255),w,b
 10114  001CEA  26D9               	addwf	fsr2l,f,c
 10115  001CEC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10116  001CEE  22DA               	addwfc	fsr2h,f,c
 10117  001CF0  50DF               	movf	indf2,w,c
 10118  001CF2  010F               	movlb	15	; () banked
 10119  001CF4  6F38               	movwf	56,b	;volatile
 10120                           
 10121                           ; BSR set to: 15
 10122                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 10123  001CF6  0100               	movlb	0	; () banked
 10124  001CF8  EE20 F003          	lfsr	2,3
 10125  001CFC  517B               	movf	CANsendMessage@data& (0+255),w,b
 10126  001CFE  26D9               	addwf	fsr2l,f,c
 10127  001D00  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10128  001D02  22DA               	addwfc	fsr2h,f,c
 10129  001D04  50DF               	movf	indf2,w,c
 10130  001D06  010F               	movlb	15	; () banked
 10131  001D08  6F39               	movwf	57,b	;volatile
 10132                           
 10133                           ; BSR set to: 15
 10134                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 10135  001D0A  0100               	movlb	0	; () banked
 10136  001D0C  EE20 F004          	lfsr	2,4
 10137  001D10  517B               	movf	CANsendMessage@data& (0+255),w,b
 10138  001D12  26D9               	addwf	fsr2l,f,c
 10139  001D14  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10140  001D16  22DA               	addwfc	fsr2h,f,c
 10141  001D18  50DF               	movf	indf2,w,c
 10142  001D1A  010F               	movlb	15	; () banked
 10143  001D1C  6F3A               	movwf	58,b	;volatile
 10144                           
 10145                           ; BSR set to: 15
 10146                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 10147  001D1E  0100               	movlb	0	; () banked
 10148  001D20  EE20 F005          	lfsr	2,5
 10149  001D24  517B               	movf	CANsendMessage@data& (0+255),w,b
 10150  001D26  26D9               	addwf	fsr2l,f,c
 10151  001D28  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10152  001D2A  22DA               	addwfc	fsr2h,f,c
 10153  001D2C  50DF               	movf	indf2,w,c
 10154  001D2E  010F               	movlb	15	; () banked
 10155  001D30  6F3B               	movwf	59,b	;volatile
 10156                           
 10157                           ; BSR set to: 15
 10158                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 10159  001D32  0100               	movlb	0	; () banked
 10160  001D34  EE20 F006          	lfsr	2,6
 10161  001D38  517B               	movf	CANsendMessage@data& (0+255),w,b
 10162  001D3A  26D9               	addwf	fsr2l,f,c
 10163  001D3C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10164  001D3E  22DA               	addwfc	fsr2h,f,c
 10165  001D40  50DF               	movf	indf2,w,c
 10166  001D42  010F               	movlb	15	; () banked
 10167  001D44  6F3C               	movwf	60,b	;volatile
 10168                           
 10169                           ; BSR set to: 15
 10170                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 10171  001D46  0100               	movlb	0	; () banked
 10172  001D48  EE20 F007          	lfsr	2,7
 10173  001D4C  517B               	movf	CANsendMessage@data& (0+255),w,b
 10174  001D4E  26D9               	addwf	fsr2l,f,c
 10175  001D50  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10176  001D52  22DA               	addwfc	fsr2h,f,c
 10177  001D54  50DF               	movf	indf2,w,c
 10178  001D56  010F               	movlb	15	; () banked
 10179  001D58  6F3D               	movwf	61,b	;volatile
 10180                           
 10181                           ; BSR set to: 15
 10182                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 10183  001D5A  010F               	movlb	15	; () banked
 10184  001D5C  8730               	bsf	48,3,b	;volatile
 10185                           
 10186                           ; BSR set to: 15
 10187                           ;inc\CANlib.h: 444: return;
 10188  001D5E  0012               	return	
 10189  001D60                     l378:
 10190                           
 10191                           ; BSR set to: 15
 10192                           ;inc\CANlib.h: 445: }
 10193                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 10194  001D60  010F               	movlb	15	; () banked
 10195  001D62  B720               	btfsc	32,3,b	;volatile
 10196  001D64  0012               	return	
 10197                           
 10198                           ; BSR set to: 15
 10199                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 10200  001D66  C07D  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
 10201                           
 10202                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 10203  001D6A  0100               	movlb	0	; () banked
 10204  001D6C  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
 10205  001D6E  D003               	goto	l393
 10206                           
 10207                           ; BSR set to: 0
 10208                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 10209  001D70  010F               	movlb	15	; () banked
 10210  001D72  8D25               	bsf	37,6,b	;volatile
 10211  001D74  D002               	goto	l394
 10212  001D76                     l393:
 10213                           
 10214                           ; BSR set to: 0
 10215                           ;inc\CANlib.h: 454: else
 10216                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 10217  001D76  010F               	movlb	15	; () banked
 10218  001D78  9D25               	bcf	37,6,b	;volatile
 10219  001D7A                     l394:
 10220                           
 10221                           ; BSR set to: 15
 10222                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 10223  001D7A  0100               	movlb	0	; () banked
 10224  001D7C  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
 10225  001D7E  D079               	goto	l395
 10226                           
 10227                           ; BSR set to: 0
 10228                           ;inc\CANlib.h: 458: {
 10229                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 10230  001D80  0100               	movlb	0	; () banked
 10231  001D82  5177               	movf	CANsendMessage@identifier& (0+255),w,b
 10232  001D84  0100               	movlb	0	; () banked
 10233  001D86  6F83               	movwf	CANsendMessage@tamp& (0+255),b
 10234  001D88  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 10235  001D8A  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 10236  001D8C  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 10237                           
 10238                           ; BSR set to: 0
 10239                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 10240  001D8E  C083  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 10241                           
 10242                           ; BSR set to: 0
 10243                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 10244  001D92  0E00               	movlw	0
 10245  001D94  0100               	movlb	0	; () banked
 10246  001D96  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
 10247  001D98  0100               	movlb	0	; () banked
 10248  001D9A  6F83               	movwf	CANsendMessage@tamp& (0+255),b
 10249  001D9C  0EFF               	movlw	255
 10250  001D9E  0100               	movlb	0	; () banked
 10251  001DA0  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 10252  001DA2  0100               	movlb	0	; () banked
 10253  001DA4  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 10254  001DA6  0E00               	movlw	0
 10255  001DA8  0100               	movlb	0	; () banked
 10256  001DAA  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 10257  001DAC  0100               	movlb	0	; () banked
 10258  001DAE  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 10259  001DB0  0E00               	movlw	0
 10260  001DB2  0100               	movlb	0	; () banked
 10261  001DB4  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 10262  001DB6  0100               	movlb	0	; () banked
 10263  001DB8  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 10264                           
 10265                           ; BSR set to: 0
 10266                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 10267  001DBA  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
 10268  001DBE  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 10269  001DC2  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 10270  001DC6  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 10271  001DCA  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
 10272  001DCE  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 10273  001DD2  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 10274  001DD6  0100               	movlb	0	; () banked
 10275  001DD8  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
 10276  001DDA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
 10277  001DDE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 10278  001DE2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 10279  001DE6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 10280                           
 10281                           ; BSR set to: 0
 10282                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 10283  001DEA  C083  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 10284                           
 10285                           ; BSR set to: 0
 10286                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 10287  001DEE  0E00               	movlw	0
 10288  001DF0  010F               	movlb	15	; () banked
 10289  001DF2  6F22               	movwf	34,b	;volatile
 10290                           
 10291                           ; BSR set to: 15
 10292                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 10293  001DF4  010F               	movlb	15	; () banked
 10294  001DF6  8722               	bsf	34,3,b	;volatile
 10295                           
 10296                           ; BSR set to: 15
 10297                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 10298  001DF8  0100               	movlb	0	; () banked
 10299  001DFA  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 10300  001DFC  D002               	goto	l396
 10301                           
 10302                           ; BSR set to: 0
 10303                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 10304  001DFE  010F               	movlb	15	; () banked
 10305  001E00  8122               	bsf	34,0,b	;volatile
 10306  001E02                     l396:
 10307                           
 10308                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 10309  001E02  0100               	movlb	0	; () banked
 10310  001E04  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 10311  001E06  D002               	goto	l397
 10312                           
 10313                           ; BSR set to: 0
 10314                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 10315  001E08  010F               	movlb	15	; () banked
 10316  001E0A  8322               	bsf	34,1,b	;volatile
 10317  001E0C                     l397:
 10318                           
 10319                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 10320  001E0C  0100               	movlb	0	; () banked
 10321  001E0E  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 10322  001E10  D002               	goto	l398
 10323                           
 10324                           ; BSR set to: 0
 10325                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 10326  001E12  010F               	movlb	15	; () banked
 10327  001E14  8B22               	bsf	34,5,b	;volatile
 10328  001E16                     l398:
 10329                           
 10330                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 10331  001E16  0100               	movlb	0	; () banked
 10332  001E18  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 10333  001E1A  D002               	goto	l399
 10334                           
 10335                           ; BSR set to: 0
 10336                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 10337  001E1C  010F               	movlb	15	; () banked
 10338  001E1E  8D22               	bsf	34,6,b	;volatile
 10339  001E20                     l399:
 10340                           
 10341                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 10342  001E20  0100               	movlb	0	; () banked
 10343  001E22  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 10344  001E24  D002               	goto	l4635
 10345                           
 10346                           ; BSR set to: 0
 10347                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 10348  001E26  010F               	movlb	15	; () banked
 10349  001E28  8F22               	bsf	34,7,b	;volatile
 10350  001E2A                     l4635:
 10351                           
 10352                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 10353  001E2A  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
 10354  001E2E  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 10355  001E32  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 10356  001E36  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 10357  001E3A  0E16               	movlw	22
 10358  001E3C  D006               	goto	u5130
 10359  001E3E                     u5135:
 10360  001E3E  0100               	movlb	0	; () banked
 10361  001E40  90D8               	bcf	status,0,c
 10362  001E42  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 10363  001E44  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 10364  001E46  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 10365  001E48  337F               	rrcf	??_CANsendMessage& (0+255),f,b
 10366  001E4A                     u5130:
 10367  001E4A  2EE8               	decfsz	wreg,f,c
 10368  001E4C  D7F8               	goto	u5135
 10369  001E4E  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
 10370  001E52  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 10371  001E56  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 10372  001E5A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 10373                           
 10374                           ; BSR set to: 0
 10375                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 10376  001E5E  0100               	movlb	0	; () banked
 10377  001E60  5183               	movf	CANsendMessage@tamp& (0+255),w,b
 10378  001E62  0100               	movlb	0	; () banked
 10379  001E64  6F83               	movwf	CANsendMessage@tamp& (0+255),b
 10380  001E66  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 10381  001E68  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 10382  001E6A  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 10383                           
 10384                           ; BSR set to: 0
 10385                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 10386  001E6C  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 10387                           
 10388                           ;inc\CANlib.h: 483: }
 10389  001E70  D059               	goto	l4655
 10390  001E72                     l395:
 10391                           
 10392                           ; BSR set to: 0
 10393                           ;inc\CANlib.h: 485: else
 10394                           ;inc\CANlib.h: 487: {
 10395                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 10396  001E72  010F               	movlb	15	; () banked
 10397  001E74  9722               	bcf	34,3,b	;volatile
 10398                           
 10399                           ; BSR set to: 15
 10400                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 10401  001E76  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
 10402  001E7A  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 10403  001E7E  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 10404  001E82  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 10405  001E86  0E04               	movlw	4
 10406  001E88  D006               	goto	u5140
 10407  001E8A                     u5145:
 10408  001E8A  0100               	movlb	0	; () banked
 10409  001E8C  90D8               	bcf	status,0,c
 10410  001E8E  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 10411  001E90  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 10412  001E92  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 10413  001E94  337F               	rrcf	??_CANsendMessage& (0+255),f,b
 10414  001E96                     u5140:
 10415  001E96  2EE8               	decfsz	wreg,f,c
 10416  001E98  D7F8               	goto	u5145
 10417  001E9A  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
 10418  001E9E  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 10419  001EA2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 10420  001EA6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 10421                           
 10422                           ; BSR set to: 0
 10423                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 10424  001EAA  0100               	movlb	0	; () banked
 10425  001EAC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
 10426  001EAE  0100               	movlb	0	; () banked
 10427  001EB0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
 10428  001EB2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 10429  001EB4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 10430  001EB6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 10431                           
 10432                           ; BSR set to: 0
 10433                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 10434  001EB8  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 10435                           
 10436                           ; BSR set to: 0
 10437                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 10438  001EBC  0E07               	movlw	7
 10439  001EBE  0100               	movlb	0	; () banked
 10440  001EC0  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
 10441  001EC2  0100               	movlb	0	; () banked
 10442  001EC4  6F83               	movwf	CANsendMessage@tamp& (0+255),b
 10443  001EC6  0E00               	movlw	0
 10444  001EC8  0100               	movlb	0	; () banked
 10445  001ECA  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 10446  001ECC  0100               	movlb	0	; () banked
 10447  001ECE  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 10448  001ED0  0E00               	movlw	0
 10449  001ED2  0100               	movlb	0	; () banked
 10450  001ED4  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 10451  001ED6  0100               	movlb	0	; () banked
 10452  001ED8  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 10453  001EDA  0E00               	movlw	0
 10454  001EDC  0100               	movlb	0	; () banked
 10455  001EDE  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 10456  001EE0  0100               	movlb	0	; () banked
 10457  001EE2  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 10458                           
 10459                           ; BSR set to: 0
 10460                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 10461  001EE4  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
 10462  001EE8  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 10463  001EEC  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 10464  001EF0  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 10465  001EF4  0E05               	movlw	5
 10466  001EF6                     u5155:
 10467  001EF6  90D8               	bcf	status,0,c
 10468  001EF8  0100               	movlb	0	; () banked
 10469  001EFA  377F               	rlcf	??_CANsendMessage& (0+255),f,b
 10470  001EFC  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 10471  001EFE  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 10472  001F00  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 10473  001F02  2EE8               	decfsz	wreg,f,c
 10474  001F04  D7F8               	goto	u5155
 10475  001F06  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
 10476  001F0A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 10477  001F0E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 10478  001F12  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 10479                           
 10480                           ; BSR set to: 0
 10481                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 10482  001F16  010F               	movlb	15	; () banked
 10483  001F18  5122               	movf	34,w,b	;volatile
 10484  001F1A  0B1F               	andlw	31
 10485  001F1C  010F               	movlb	15	; () banked
 10486  001F1E  6F22               	movwf	34,b	;volatile
 10487                           
 10488                           ; BSR set to: 15
 10489                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 10490  001F20  C083  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 10491  001F24                     l4655:
 10492                           
 10493                           ;inc\CANlib.h: 498: }
 10494                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 10495  001F24  0100               	movlb	0	; () banked
 10496  001F26  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
 10497  001F28  D003               	goto	l402
 10498                           
 10499                           ; BSR set to: 0
 10500                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 10501  001F2A  010F               	movlb	15	; () banked
 10502  001F2C  8120               	bsf	32,0,b	;volatile
 10503  001F2E  D002               	goto	l403
 10504  001F30                     l402:
 10505                           
 10506                           ; BSR set to: 0
 10507                           ;inc\CANlib.h: 502: else
 10508                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 10509  001F30  010F               	movlb	15	; () banked
 10510  001F32  9120               	bcf	32,0,b	;volatile
 10511  001F34                     l403:
 10512                           
 10513                           ; BSR set to: 15
 10514                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 10515  001F34  0100               	movlb	0	; () banked
 10516  001F36  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
 10517  001F38  D003               	goto	l404
 10518                           
 10519                           ; BSR set to: 0
 10520                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 10521  001F3A  010F               	movlb	15	; () banked
 10522  001F3C  8320               	bsf	32,1,b	;volatile
 10523  001F3E  D002               	goto	l4661
 10524  001F40                     l404:
 10525                           
 10526                           ; BSR set to: 0
 10527                           ;inc\CANlib.h: 506: else
 10528                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 10529  001F40  010F               	movlb	15	; () banked
 10530  001F42  9320               	bcf	32,1,b	;volatile
 10531  001F44                     l4661:
 10532                           
 10533                           ; BSR set to: 15
 10534                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 10535  001F44  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
 10536  001F48  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
 10537  001F4C  50DF               	movf	indf2,w,c
 10538  001F4E  010F               	movlb	15	; () banked
 10539  001F50  6F26               	movwf	38,b	;volatile
 10540                           
 10541                           ; BSR set to: 15
 10542                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 10543  001F52  0100               	movlb	0	; () banked
 10544  001F54  EE20 F001          	lfsr	2,1
 10545  001F58  517B               	movf	CANsendMessage@data& (0+255),w,b
 10546  001F5A  26D9               	addwf	fsr2l,f,c
 10547  001F5C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10548  001F5E  22DA               	addwfc	fsr2h,f,c
 10549  001F60  50DF               	movf	indf2,w,c
 10550  001F62  010F               	movlb	15	; () banked
 10551  001F64  6F27               	movwf	39,b	;volatile
 10552                           
 10553                           ; BSR set to: 15
 10554                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 10555  001F66  0100               	movlb	0	; () banked
 10556  001F68  EE20 F002          	lfsr	2,2
 10557  001F6C  517B               	movf	CANsendMessage@data& (0+255),w,b
 10558  001F6E  26D9               	addwf	fsr2l,f,c
 10559  001F70  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10560  001F72  22DA               	addwfc	fsr2h,f,c
 10561  001F74  50DF               	movf	indf2,w,c
 10562  001F76  010F               	movlb	15	; () banked
 10563  001F78  6F28               	movwf	40,b	;volatile
 10564                           
 10565                           ; BSR set to: 15
 10566                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 10567  001F7A  0100               	movlb	0	; () banked
 10568  001F7C  EE20 F003          	lfsr	2,3
 10569  001F80  517B               	movf	CANsendMessage@data& (0+255),w,b
 10570  001F82  26D9               	addwf	fsr2l,f,c
 10571  001F84  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10572  001F86  22DA               	addwfc	fsr2h,f,c
 10573  001F88  50DF               	movf	indf2,w,c
 10574  001F8A  010F               	movlb	15	; () banked
 10575  001F8C  6F29               	movwf	41,b	;volatile
 10576                           
 10577                           ; BSR set to: 15
 10578                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 10579  001F8E  0100               	movlb	0	; () banked
 10580  001F90  EE20 F004          	lfsr	2,4
 10581  001F94  517B               	movf	CANsendMessage@data& (0+255),w,b
 10582  001F96  26D9               	addwf	fsr2l,f,c
 10583  001F98  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10584  001F9A  22DA               	addwfc	fsr2h,f,c
 10585  001F9C  50DF               	movf	indf2,w,c
 10586  001F9E  010F               	movlb	15	; () banked
 10587  001FA0  6F2A               	movwf	42,b	;volatile
 10588                           
 10589                           ; BSR set to: 15
 10590                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 10591  001FA2  0100               	movlb	0	; () banked
 10592  001FA4  EE20 F005          	lfsr	2,5
 10593  001FA8  517B               	movf	CANsendMessage@data& (0+255),w,b
 10594  001FAA  26D9               	addwf	fsr2l,f,c
 10595  001FAC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10596  001FAE  22DA               	addwfc	fsr2h,f,c
 10597  001FB0  50DF               	movf	indf2,w,c
 10598  001FB2  010F               	movlb	15	; () banked
 10599  001FB4  6F2B               	movwf	43,b	;volatile
 10600                           
 10601                           ; BSR set to: 15
 10602                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 10603  001FB6  0100               	movlb	0	; () banked
 10604  001FB8  EE20 F006          	lfsr	2,6
 10605  001FBC  517B               	movf	CANsendMessage@data& (0+255),w,b
 10606  001FBE  26D9               	addwf	fsr2l,f,c
 10607  001FC0  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10608  001FC2  22DA               	addwfc	fsr2h,f,c
 10609  001FC4  50DF               	movf	indf2,w,c
 10610  001FC6  010F               	movlb	15	; () banked
 10611  001FC8  6F2C               	movwf	44,b	;volatile
 10612                           
 10613                           ; BSR set to: 15
 10614                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 10615  001FCA  0100               	movlb	0	; () banked
 10616  001FCC  EE20 F007          	lfsr	2,7
 10617  001FD0  517B               	movf	CANsendMessage@data& (0+255),w,b
 10618  001FD2  26D9               	addwf	fsr2l,f,c
 10619  001FD4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10620  001FD6  22DA               	addwfc	fsr2h,f,c
 10621  001FD8  50DF               	movf	indf2,w,c
 10622  001FDA  010F               	movlb	15	; () banked
 10623  001FDC  6F2D               	movwf	45,b	;volatile
 10624                           
 10625                           ; BSR set to: 15
 10626                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 10627  001FDE  010F               	movlb	15	; () banked
 10628  001FE0  8720               	bsf	32,3,b	;volatile
 10629                           
 10630                           ; BSR set to: 15
 10631                           ;inc\CANlib.h: 520: return;
 10632  001FE2  0012               	return	
 10633  001FE4                     __end_of_CANsendMessage:
 10634                           	opt stack 0
 10635                           tblptru	equ	0xFF8
 10636                           tblptrh	equ	0xFF7
 10637                           tblptrl	equ	0xFF6
 10638                           tablat	equ	0xFF5
 10639                           prodh	equ	0xFF4
 10640                           prodl	equ	0xFF3
 10641                           postinc0	equ	0xFEE
 10642                           wreg	equ	0xFE8
 10643                           postdec1	equ	0xFE5
 10644                           fsr1l	equ	0xFE1
 10645                           indf2	equ	0xFDF
 10646                           postinc2	equ	0xFDE
 10647                           postdec2	equ	0xFDD
 10648                           fsr2h	equ	0xFDA
 10649                           fsr2l	equ	0xFD9
 10650                           status	equ	0xFD8
 10651                           
 10652 ;; *************** function _CANisTxReady *****************
 10653 ;; Defined at:
 10654 ;;		line 1154 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 10655 ;; Parameters:    Size  Location     Type
 10656 ;;		None
 10657 ;; Auto vars:     Size  Location     Type
 10658 ;;		None
 10659 ;; Return value:  Size  Location     Type
 10660 ;;                  1    wreg      unsigned char 
 10661 ;; Registers used:
 10662 ;;		wreg, status,2
 10663 ;; Tracked objects:
 10664 ;;		On entry : 0/0
 10665 ;;		On exit  : 0/0
 10666 ;;		Unchanged: 0/0
 10667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10669 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10671 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10672 ;;Total ram usage:        1 bytes
 10673 ;; Hardware stack levels used:    1
 10674 ;; Hardware stack levels required when called:    4
 10675 ;; This function calls:
 10676 ;;		Nothing
 10677 ;; This function is called by:
 10678 ;;		_park_search
 10679 ;;		_can_send
 10680 ;; This function uses a non-reentrant model
 10681 ;;
 10682                           
 10683                           	psect	text28
 10684  005D48                     __ptext28:
 10685                           	opt stack 0
 10686  005D48                     _CANisTxReady:
 10687                           	opt stack 23
 10688                           
 10689                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 10690                           
 10691                           ; BSR set to: 15
 10692                           ;incstack = 0
 10693  005D48  0E01               	movlw	1
 10694  005D4A  0100               	movlb	0	; () banked
 10695  005D4C  6F77               	movwf	_CANisTxReady$2845& (0+255),b
 10696                           
 10697                           ; BSR set to: 0
 10698  005D4E  010F               	movlb	15	; () banked
 10699  005D50  A740               	btfss	64,3,b	;volatile
 10700  005D52  D009               	goto	l556
 10701                           
 10702                           ; BSR set to: 15
 10703  005D54  010F               	movlb	15	; () banked
 10704  005D56  A730               	btfss	48,3,b	;volatile
 10705  005D58  D006               	goto	l556
 10706                           
 10707                           ; BSR set to: 15
 10708  005D5A  010F               	movlb	15	; () banked
 10709  005D5C  A720               	btfss	32,3,b	;volatile
 10710  005D5E  D003               	goto	l556
 10711                           
 10712                           ; BSR set to: 15
 10713  005D60  0E00               	movlw	0
 10714  005D62  0100               	movlb	0	; () banked
 10715  005D64  6F77               	movwf	_CANisTxReady$2845& (0+255),b
 10716  005D66                     l556:
 10717  005D66  0100               	movlb	0	; () banked
 10718  005D68  5177               	movf	_CANisTxReady$2845& (0+255),w,b
 10719  005D6A  0012               	return	
 10720  005D6C                     __end_of_CANisTxReady:
 10721                           	opt stack 0
 10722                           tblptru	equ	0xFF8
 10723                           tblptrh	equ	0xFF7
 10724                           tblptrl	equ	0xFF6
 10725                           tablat	equ	0xFF5
 10726                           prodh	equ	0xFF4
 10727                           prodl	equ	0xFF3
 10728                           postinc0	equ	0xFEE
 10729                           wreg	equ	0xFE8
 10730                           postdec1	equ	0xFE5
 10731                           fsr1l	equ	0xFE1
 10732                           indf2	equ	0xFDF
 10733                           postinc2	equ	0xFDE
 10734                           postdec2	equ	0xFDD
 10735                           fsr2h	equ	0xFDA
 10736                           fsr2l	equ	0xFD9
 10737                           status	equ	0xFD8
 10738                           
 10739 ;; *************** function _configurazione *****************
 10740 ;; Defined at:
 10741 ;;		line 419 in file "parcheggio.c"
 10742 ;; Parameters:    Size  Location     Type
 10743 ;;		None
 10744 ;; Auto vars:     Size  Location     Type
 10745 ;;		None
 10746 ;; Return value:  Size  Location     Type
 10747 ;;		None               void
 10748 ;; Registers used:
 10749 ;;		wreg, status,2, status,0, cstack
 10750 ;; Tracked objects:
 10751 ;;		On entry : 0/0
 10752 ;;		On exit  : 0/0
 10753 ;;		Unchanged: 0/0
 10754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10759 ;;Total ram usage:        0 bytes
 10760 ;; Hardware stack levels used:    1
 10761 ;; Hardware stack levels required when called:    6
 10762 ;; This function calls:
 10763 ;;		_CANInitialize
 10764 ;; This function is called by:
 10765 ;;		_main
 10766 ;; This function uses a non-reentrant model
 10767 ;;
 10768                           
 10769                           	psect	text29
 10770  005AB6                     __ptext29:
 10771                           	opt stack 0
 10772  005AB6                     _configurazione:
 10773                           	opt stack 24
 10774                           
 10775                           ;parcheggio.c: 420: LATA = 0x00;
 10776                           
 10777                           ; BSR set to: 0
 10778                           ;incstack = 0
 10779  005AB6  0E00               	movlw	0
 10780  005AB8  6E89               	movwf	3977,c	;volatile
 10781                           
 10782                           ;parcheggio.c: 421: TRISA = 0b11110000;
 10783  005ABA  0EF0               	movlw	240
 10784  005ABC  6E92               	movwf	3986,c	;volatile
 10785                           
 10786                           ;parcheggio.c: 423: LATB = 0x00;
 10787  005ABE  0E00               	movlw	0
 10788  005AC0  6E8A               	movwf	3978,c	;volatile
 10789                           
 10790                           ;parcheggio.c: 424: TRISB = 0b10001010;
 10791  005AC2  0E8A               	movlw	138
 10792  005AC4  6E93               	movwf	3987,c	;volatile
 10793                           
 10794                           ;parcheggio.c: 426: LATC = 0x00;
 10795  005AC6  0E00               	movlw	0
 10796  005AC8  6E8B               	movwf	3979,c	;volatile
 10797                           
 10798                           ;parcheggio.c: 427: TRISC = 0b11111111;
 10799  005ACA  6894               	setf	3988,c	;volatile
 10800                           
 10801                           ;parcheggio.c: 429: ADCON1 = 0xFF;
 10802  005ACC  68C1               	setf	4033,c	;volatile
 10803                           
 10804                           ;parcheggio.c: 430: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG
      +                          _SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
 10805  005ACE  0E06               	movlw	6
 10806  005AD0  0100               	movlb	0	; () banked
 10807  005AD2  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 10808  005AD4  0E05               	movlw	5
 10809  005AD6  0100               	movlb	0	; () banked
 10810  005AD8  6F86               	movwf	CANInitialize@phaseSeg2& (0+255),b
 10811  005ADA  0E01               	movlw	1
 10812  005ADC  0100               	movlb	0	; () banked
 10813  005ADE  6F87               	movwf	CANInitialize@SJW& (0+255),b
 10814  005AE0  0E03               	movlw	3
 10815  005AE2  0100               	movlb	0	; () banked
 10816  005AE4  6F88               	movwf	CANInitialize@BRP& (0+255),b
 10817  005AE6  0E9D               	movlw	157
 10818  005AE8  0100               	movlb	0	; () banked
 10819  005AEA  6F89               	movwf	CANInitialize@flags& (0+255),b
 10820  005AEC  0E04               	movlw	4
 10821  005AEE  ECF7  F026         	call	_CANInitialize
 10822                           
 10823                           ;parcheggio.c: 432: RCONbits.IPEN = 1;
 10824  005AF2  8ED0               	bsf	4048,7,c	;volatile
 10825                           
 10826                           ;parcheggio.c: 433: PIR3bits.RXB1IF = 0;
 10827  005AF4  92A4               	bcf	4004,1,c	;volatile
 10828                           
 10829                           ;parcheggio.c: 434: PIR3bits.RXB0IF = 0;
 10830  005AF6  90A4               	bcf	4004,0,c	;volatile
 10831                           
 10832                           ;parcheggio.c: 435: IPR3bits.RXB1IP = 0;
 10833  005AF8  92A5               	bcf	4005,1,c	;volatile
 10834                           
 10835                           ;parcheggio.c: 436: IPR3bits.RXB0IP = 0;
 10836  005AFA  90A5               	bcf	4005,0,c	;volatile
 10837                           
 10838                           ;parcheggio.c: 437: PIE3bits.RXB1IE = 1;
 10839  005AFC  82A3               	bsf	4003,1,c	;volatile
 10840                           
 10841                           ;parcheggio.c: 438: PIE3bits.RXB0IE = 1;
 10842  005AFE  80A3               	bsf	4003,0,c	;volatile
 10843                           
 10844                           ;parcheggio.c: 439: INTCON2bits.TMR0IP = 0;
 10845  005B00  94F1               	bcf	intcon2,2,c	;volatile
 10846                           
 10847                           ;parcheggio.c: 440: T0CON = 0x80;
 10848  005B02  0E80               	movlw	128
 10849  005B04  6ED5               	movwf	4053,c	;volatile
 10850                           
 10851                           ;parcheggio.c: 441: T3CON = 0x11;
 10852  005B06  0E11               	movlw	17
 10853  005B08  6EB1               	movwf	4017,c	;volatile
 10854                           
 10855                           ;parcheggio.c: 442: TMR0H = 0x34;
 10856  005B0A  0E34               	movlw	52
 10857  005B0C  6ED7               	movwf	4055,c	;volatile
 10858                           
 10859                           ;parcheggio.c: 443: TMR0L = 0xE0;
 10860  005B0E  0EE0               	movlw	224
 10861  005B10  6ED6               	movwf	4054,c	;volatile
 10862                           
 10863                           ;parcheggio.c: 444: INTCONbits.TMR0IF = 0;
 10864  005B12  94F2               	bcf	intcon,2,c	;volatile
 10865                           
 10866                           ;parcheggio.c: 445: INTCONbits.TMR0IE = 1;
 10867  005B14  8AF2               	bsf	intcon,5,c	;volatile
 10868                           
 10869                           ;parcheggio.c: 446: INTCON2bits.INTEDG0 = 1;
 10870  005B16  8CF1               	bsf	intcon2,6,c	;volatile
 10871                           
 10872                           ;parcheggio.c: 447: INTCONbits.INT0IF = 0;
 10873  005B18  92F2               	bcf	intcon,1,c	;volatile
 10874                           
 10875                           ;parcheggio.c: 448: INTCONbits.INT0IE = 0;
 10876  005B1A  98F2               	bcf	intcon,4,c	;volatile
 10877                           
 10878                           ;parcheggio.c: 449: INTCONbits.GIEL = 1;
 10879  005B1C  8CF2               	bsf	intcon,6,c	;volatile
 10880                           
 10881                           ;parcheggio.c: 450: INTCONbits.GIEH = 1;
 10882  005B1E  8EF2               	bsf	intcon,7,c	;volatile
 10883  005B20  0012               	return		;funcret
 10884  005B22                     __end_of_configurazione:
 10885                           	opt stack 0
 10886                           tblptru	equ	0xFF8
 10887                           tblptrh	equ	0xFF7
 10888                           tblptrl	equ	0xFF6
 10889                           tablat	equ	0xFF5
 10890                           prodh	equ	0xFF4
 10891                           prodl	equ	0xFF3
 10892                           intcon	equ	0xFF2
 10893                           intcon2	equ	0xFF1
 10894                           postinc0	equ	0xFEE
 10895                           wreg	equ	0xFE8
 10896                           postdec1	equ	0xFE5
 10897                           fsr1l	equ	0xFE1
 10898                           indf2	equ	0xFDF
 10899                           postinc2	equ	0xFDE
 10900                           postdec2	equ	0xFDD
 10901                           fsr2h	equ	0xFDA
 10902                           fsr2l	equ	0xFD9
 10903                           status	equ	0xFD8
 10904                           
 10905 ;; *************** function _CANInitialize *****************
 10906 ;; Defined at:
 10907 ;;		line 218 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 10908 ;; Parameters:    Size  Location     Type
 10909 ;;  propSeg         1    wreg     unsigned char 
 10910 ;;  phaseSeg1       1   37[BANK0 ] unsigned char 
 10911 ;;  phaseSeg2       1   38[BANK0 ] unsigned char 
 10912 ;;  SJW             1   39[BANK0 ] unsigned char 
 10913 ;;  BRP             1   40[BANK0 ] unsigned char 
 10914 ;;  flags           1   41[BANK0 ] enum E16313
 10915 ;; Auto vars:     Size  Location     Type
 10916 ;;  propSeg         1   46[BANK0 ] unsigned char 
 10917 ;;  FilterConfig    1   48[BANK0 ] unsigned char 
 10918 ;;  FilterConfig    1   47[BANK0 ] unsigned char 
 10919 ;; Return value:  Size  Location     Type
 10920 ;;		None               void
 10921 ;; Registers used:
 10922 ;;		wreg, status,2, status,0, cstack
 10923 ;; Tracked objects:
 10924 ;;		On entry : 0/0
 10925 ;;		On exit  : 0/0
 10926 ;;		Unchanged: 0/0
 10927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10928 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10929 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10930 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10931 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10932 ;;Total ram usage:       12 bytes
 10933 ;; Hardware stack levels used:    1
 10934 ;; Hardware stack levels required when called:    5
 10935 ;; This function calls:
 10936 ;;		_CANOperationMode
 10937 ;;		_CANSetFilter
 10938 ;;		_CANSetMask
 10939 ;; This function is called by:
 10940 ;;		_configurazione
 10941 ;; This function uses a non-reentrant model
 10942 ;;
 10943                           
 10944                           	psect	text30
 10945  004DEE                     __ptext30:
 10946                           	opt stack 0
 10947  004DEE                     _CANInitialize:
 10948                           	opt stack 24
 10949                           
 10950                           ;incstack = 0
 10951                           ;CANInitialize@propSeg stored from wreg
 10952  004DEE  0100               	movlb	0	; () banked
 10953  004DF0  6F8E               	movwf	CANInitialize@propSeg& (0+255),b
 10954                           
 10955                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
 10956                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
 10957                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
 10958  004DF2  0E80               	movlw	128
 10959  004DF4  ECB6  F02E         	call	_CANOperationMode
 10960                           
 10961                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
 10962  004DF8  0E00               	movlw	0
 10963  004DFA  6E70               	movwf	3952,c	;volatile
 10964                           
 10965                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
 10966  004DFC  0E00               	movlw	0
 10967  004DFE  6E71               	movwf	3953,c	;volatile
 10968                           
 10969                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
 10970  004E00  0E00               	movlw	0
 10971  004E02  6E72               	movwf	3954,c	;volatile
 10972                           
 10973                           ;inc\CANlib.h: 229: SJW= SJW << 6;
 10974  004E04  0100               	movlb	0	; () banked
 10975  004E06  4187               	rrncf	CANInitialize@SJW& (0+255),w,b
 10976  004E08  42E8               	rrncf	wreg,f,c
 10977  004E0A  0BC0               	andlw	192
 10978  004E0C  0100               	movlb	0	; () banked
 10979  004E0E  6F87               	movwf	CANInitialize@SJW& (0+255),b
 10980                           
 10981                           ; BSR set to: 0
 10982                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
 10983  004E10  0100               	movlb	0	; () banked
 10984  004E12  5187               	movf	CANInitialize@SJW& (0+255),w,b
 10985  004E14  1270               	iorwf	3952,f,c	;volatile
 10986                           
 10987                           ; BSR set to: 0
 10988                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
 10989  004E16  0100               	movlb	0	; () banked
 10990  004E18  5188               	movf	CANInitialize@BRP& (0+255),w,b
 10991  004E1A  1270               	iorwf	3952,f,c	;volatile
 10992                           
 10993                           ; BSR set to: 0
 10994                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
 10995  004E1C  0100               	movlb	0	; () banked
 10996  004E1E  518E               	movf	CANInitialize@propSeg& (0+255),w,b
 10997  004E20  1271               	iorwf	3953,f,c	;volatile
 10998                           
 10999                           ; BSR set to: 0
 11000                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
 11001  004E22  0100               	movlb	0	; () banked
 11002  004E24  3985               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
 11003  004E26  42E8               	rrncf	wreg,f,c
 11004  004E28  0BF8               	andlw	248
 11005  004E2A  0100               	movlb	0	; () banked
 11006  004E2C  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 11007                           
 11008                           ; BSR set to: 0
 11009                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
 11010  004E2E  0100               	movlb	0	; () banked
 11011  004E30  5185               	movf	CANInitialize@phaseSeg1& (0+255),w,b
 11012  004E32  1271               	iorwf	3953,f,c	;volatile
 11013                           
 11014                           ; BSR set to: 0
 11015                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
 11016  004E34  0100               	movlb	0	; () banked
 11017  004E36  A589               	btfss	CANInitialize@flags& (0+255),2,b
 11018                           
 11019                           ; BSR set to: 0
 11020                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
 11021  004E38  8C71               	bsf	3953,6,c	;volatile
 11022                           
 11023                           ; BSR set to: 0
 11024                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
 11025  004E3A  0100               	movlb	0	; () banked
 11026  004E3C  B189               	btfsc	CANInitialize@flags& (0+255),0,b
 11027                           
 11028                           ; BSR set to: 0
 11029                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
 11030  004E3E  8E71               	bsf	3953,7,c	;volatile
 11031                           
 11032                           ; BSR set to: 0
 11033                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
 11034                           
 11035                           ; BSR set to: 0
 11036  004E40  0100               	movlb	0	; () banked
 11037  004E42  5186               	movf	CANInitialize@phaseSeg2& (0+255),w,b
 11038  004E44  1272               	iorwf	3954,f,c	;volatile
 11039                           
 11040                           ; BSR set to: 0
 11041                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
 11042  004E46  0100               	movlb	0	; () banked
 11043  004E48  B389               	btfsc	CANInitialize@flags& (0+255),1,b
 11044                           
 11045                           ; BSR set to: 0
 11046                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
 11047  004E4A  8C72               	bsf	3954,6,c	;volatile
 11048                           
 11049                           ; BSR set to: 0
 11050                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
 11051                           
 11052                           ; BSR set to: 0
 11053  004E4C  0100               	movlb	0	; () banked
 11054  004E4E  5189               	movf	CANInitialize@flags& (0+255),w,b
 11055  004E50  0B60               	andlw	96
 11056  004E52  6E60               	movwf	3936,c	;volatile
 11057                           
 11058                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
 11059  004E54  0100               	movlb	0	; () banked
 11060  004E56  5189               	movf	CANInitialize@flags& (0+255),w,b
 11061  004E58  0B10               	andlw	16
 11062  004E5A  0AFF               	xorlw	255
 11063  004E5C  B4D8               	btfsc	status,2,c
 11064                           
 11065                           ; BSR set to: 0
 11066                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
 11067  004E5E  8460               	bsf	3936,2,c	;volatile
 11068                           
 11069                           ; BSR set to: 0
 11070                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
 11071  004E60  CF60 FF50          	movff	3936,3920	;volatile
 11072                           
 11073                           ; BSR set to: 0
 11074                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
 11075  004E64  0E00               	movlw	0
 11076  004E66  0100               	movlb	0	; () banked
 11077  004E68  6F77               	movwf	CANSetMask@mask& (0+255),b
 11078  004E6A  0E00               	movlw	0
 11079  004E6C  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 11080  004E6E  0E00               	movlw	0
 11081  004E70  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 11082  004E72  0E00               	movlw	0
 11083  004E74  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 11084  004E76  0EF7               	movlw	247
 11085  004E78  0100               	movlb	0	; () banked
 11086  004E7A  6F7B               	movwf	CANSetMask@type& (0+255),b
 11087  004E7C  0E01               	movlw	1
 11088  004E7E  EC4E  F01D         	call	_CANSetMask
 11089                           
 11090                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
 11091  004E82  0E00               	movlw	0
 11092  004E84  0100               	movlb	0	; () banked
 11093  004E86  6F77               	movwf	CANSetMask@mask& (0+255),b
 11094  004E88  0E00               	movlw	0
 11095  004E8A  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 11096  004E8C  0E00               	movlw	0
 11097  004E8E  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 11098  004E90  0E00               	movlw	0
 11099  004E92  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 11100  004E94  0EF7               	movlw	247
 11101  004E96  0100               	movlb	0	; () banked
 11102  004E98  6F7B               	movwf	CANSetMask@type& (0+255),b
 11103  004E9A  0E02               	movlw	2
 11104  004E9C  EC4E  F01D         	call	_CANSetMask
 11105                           
 11106                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
 11107  004EA0  D00F               	goto	l5415
 11108  004EA2                     l5409:
 11109                           
 11110                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
 11111  004EA2  0EF7               	movlw	247
 11112  004EA4  0100               	movlb	0	; () banked
 11113  004EA6  6F8F               	movwf	CANInitialize@FilterConfig1& (0+255),b
 11114  004EA8  D007               	goto	l5411
 11115  004EAA                     l358:
 11116                           
 11117                           ; BSR set to: 0
 11118                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
 11119  004EAA  0100               	movlb	0	; () banked
 11120  004EAC  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 11121                           
 11122                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
 11123  004EAE  0100               	movlb	0	; () banked
 11124  004EB0  6990               	setf	CANInitialize@FilterConfig2& (0+255),b
 11125                           
 11126                           ;inc\CANlib.h: 273: break;
 11127  004EB2  D028               	goto	l5417
 11128  004EB4                     l359:
 11129                           
 11130                           ; BSR set to: 0
 11131                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
 11132  004EB4  0100               	movlb	0	; () banked
 11133  004EB6  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 11134  004EB8                     l5411:
 11135                           
 11136                           ; BSR set to: 0
 11137                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
 11138  004EB8  0EF7               	movlw	247
 11139  004EBA  0100               	movlb	0	; () banked
 11140  004EBC  6F90               	movwf	CANInitialize@FilterConfig2& (0+255),b
 11141                           
 11142                           ; BSR set to: 0
 11143                           ;inc\CANlib.h: 278: }
 11144                           
 11145                           ;inc\CANlib.h: 277: break;
 11146  004EBE  D022               	goto	l5417
 11147  004EC0                     l5415:
 11148  004EC0  0E9F               	movlw	159
 11149  004EC2  0100               	movlb	0	; () banked
 11150  004EC4  6F8A               	movwf	??_CANInitialize& (0+255),b
 11151  004EC6  0EFF               	movlw	255
 11152  004EC8  0100               	movlb	0	; () banked
 11153  004ECA  6F8B               	movwf	(??_CANInitialize+1)& (0+255),b
 11154  004ECC  0100               	movlb	0	; () banked
 11155  004ECE  5189               	movf	CANInitialize@flags& (0+255),w,b
 11156  004ED0  0B60               	andlw	96
 11157  004ED2  0100               	movlb	0	; () banked
 11158  004ED4  6F8C               	movwf	(??_CANInitialize+2)& (0+255),b
 11159  004ED6  6B8D               	clrf	(??_CANInitialize+3)& (0+255),b
 11160  004ED8  0100               	movlb	0	; () banked
 11161  004EDA  518A               	movf	??_CANInitialize& (0+255),w,b
 11162  004EDC  0100               	movlb	0	; () banked
 11163  004EDE  138C               	iorwf	(??_CANInitialize+2)& (0+255),f,b
 11164  004EE0  0100               	movlb	0	; () banked
 11165  004EE2  518B               	movf	(??_CANInitialize+1)& (0+255),w,b
 11166  004EE4  0100               	movlb	0	; () banked
 11167  004EE6  138D               	iorwf	(??_CANInitialize+3)& (0+255),f,b
 11168                           
 11169                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11170                           ; Switch size 1, requested type "space"
 11171                           ; Number of cases is 1, Range of values is 0 to 0
 11172                           ; switch strategies available:
 11173                           ; Name         Instructions Cycles
 11174                           ; simple_byte            4     3 (average)
 11175                           ;	Chosen strategy is simple_byte
 11176  004EE8  0100               	movlb	0	; () banked
 11177  004EEA  518D               	movf	(??_CANInitialize+3)& (0+255),w,b
 11178  004EEC  0A00               	xorlw	0	; case 0
 11179  004EEE  A4D8               	btfss	status,2,c
 11180  004EF0  D7E1               	goto	l359
 11181                           
 11182                           ; BSR set to: 0
 11183                           ; Switch size 1, requested type "space"
 11184                           ; Number of cases is 2, Range of values is 191 to 223
 11185                           ; switch strategies available:
 11186                           ; Name         Instructions Cycles
 11187                           ; simple_byte            7     4 (average)
 11188                           ;	Chosen strategy is simple_byte
 11189  004EF2  0100               	movlb	0	; () banked
 11190  004EF4  518C               	movf	(??_CANInitialize+2)& (0+255),w,b
 11191  004EF6  0ABF               	xorlw	191	; case 191
 11192  004EF8  B4D8               	btfsc	status,2,c
 11193  004EFA  D7D7               	goto	l358
 11194  004EFC  0A60               	xorlw	96	; case 223
 11195  004EFE  B4D8               	btfsc	status,2,c
 11196  004F00  D7D0               	goto	l5409
 11197  004F02  D7D8               	goto	l359
 11198  004F04                     l5417:
 11199                           
 11200                           ; BSR set to: 0
 11201                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
 11202  004F04  0E00               	movlw	0
 11203  004F06  0100               	movlb	0	; () banked
 11204  004F08  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11205  004F0A  0E00               	movlw	0
 11206  004F0C  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11207  004F0E  0E00               	movlw	0
 11208  004F10  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11209  004F12  0E00               	movlw	0
 11210  004F14  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11211  004F16  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11212  004F1A  0E00               	movlw	0
 11213  004F1C  ECA9  F006         	call	_CANSetFilter
 11214                           
 11215                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
 11216  004F20  0E00               	movlw	0
 11217  004F22  0100               	movlb	0	; () banked
 11218  004F24  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11219  004F26  0E00               	movlw	0
 11220  004F28  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11221  004F2A  0E00               	movlw	0
 11222  004F2C  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11223  004F2E  0E00               	movlw	0
 11224  004F30  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11225  004F32  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11226  004F36  0E01               	movlw	1
 11227  004F38  ECA9  F006         	call	_CANSetFilter
 11228                           
 11229                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
 11230  004F3C  0E00               	movlw	0
 11231  004F3E  0100               	movlb	0	; () banked
 11232  004F40  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11233  004F42  0E00               	movlw	0
 11234  004F44  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11235  004F46  0E00               	movlw	0
 11236  004F48  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11237  004F4A  0E00               	movlw	0
 11238  004F4C  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11239  004F4E  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11240  004F52  0E02               	movlw	2
 11241  004F54  ECA9  F006         	call	_CANSetFilter
 11242                           
 11243                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
 11244  004F58  0E00               	movlw	0
 11245  004F5A  0100               	movlb	0	; () banked
 11246  004F5C  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11247  004F5E  0E00               	movlw	0
 11248  004F60  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11249  004F62  0E00               	movlw	0
 11250  004F64  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11251  004F66  0E00               	movlw	0
 11252  004F68  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11253  004F6A  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11254  004F6E  0E03               	movlw	3
 11255  004F70  ECA9  F006         	call	_CANSetFilter
 11256                           
 11257                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
 11258  004F74  0E00               	movlw	0
 11259  004F76  0100               	movlb	0	; () banked
 11260  004F78  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11261  004F7A  0E00               	movlw	0
 11262  004F7C  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11263  004F7E  0E00               	movlw	0
 11264  004F80  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11265  004F82  0E00               	movlw	0
 11266  004F84  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11267  004F86  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11268  004F8A  0E04               	movlw	4
 11269  004F8C  ECA9  F006         	call	_CANSetFilter
 11270                           
 11271                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
 11272  004F90  0E00               	movlw	0
 11273  004F92  0100               	movlb	0	; () banked
 11274  004F94  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11275  004F96  0E00               	movlw	0
 11276  004F98  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11277  004F9A  0E00               	movlw	0
 11278  004F9C  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11279  004F9E  0E00               	movlw	0
 11280  004FA0  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11281  004FA2  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11282  004FA6  0E05               	movlw	5
 11283  004FA8  ECA9  F006         	call	_CANSetFilter
 11284                           
 11285                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
 11286  004FAC  0E00               	movlw	0
 11287  004FAE  ECB6  F02E         	call	_CANOperationMode
 11288  004FB2  0012               	return		;funcret
 11289  004FB4                     __end_of_CANInitialize:
 11290                           	opt stack 0
 11291                           tblptru	equ	0xFF8
 11292                           tblptrh	equ	0xFF7
 11293                           tblptrl	equ	0xFF6
 11294                           tablat	equ	0xFF5
 11295                           prodh	equ	0xFF4
 11296                           prodl	equ	0xFF3
 11297                           intcon	equ	0xFF2
 11298                           intcon2	equ	0xFF1
 11299                           postinc0	equ	0xFEE
 11300                           wreg	equ	0xFE8
 11301                           postdec1	equ	0xFE5
 11302                           fsr1l	equ	0xFE1
 11303                           indf2	equ	0xFDF
 11304                           postinc2	equ	0xFDE
 11305                           postdec2	equ	0xFDD
 11306                           fsr2h	equ	0xFDA
 11307                           fsr2l	equ	0xFD9
 11308                           status	equ	0xFD8
 11309                           
 11310 ;; *************** function _CANSetMask *****************
 11311 ;; Defined at:
 11312 ;;		line 640 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 11313 ;; Parameters:    Size  Location     Type
 11314 ;;  numBuffer       1    wreg     enum E16347
 11315 ;;  mask            4   23[BANK0 ] unsigned long 
 11316 ;;  type            1   27[BANK0 ] enum E16313
 11317 ;; Auto vars:     Size  Location     Type
 11318 ;;  numBuffer       1   32[BANK0 ] enum E16347
 11319 ;;  tamp            4   33[BANK0 ] unsigned long 
 11320 ;; Return value:  Size  Location     Type
 11321 ;;		None               void
 11322 ;; Registers used:
 11323 ;;		wreg, status,2, status,0
 11324 ;; Tracked objects:
 11325 ;;		On entry : 0/0
 11326 ;;		On exit  : 0/0
 11327 ;;		Unchanged: 0/0
 11328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11329 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11330 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11331 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11332 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11333 ;;Total ram usage:       14 bytes
 11334 ;; Hardware stack levels used:    1
 11335 ;; Hardware stack levels required when called:    4
 11336 ;; This function calls:
 11337 ;;		Nothing
 11338 ;; This function is called by:
 11339 ;;		_CANInitialize
 11340 ;; This function uses a non-reentrant model
 11341 ;;
 11342                           
 11343                           	psect	text31
 11344  003A9C                     __ptext31:
 11345                           	opt stack 0
 11346  003A9C                     _CANSetMask:
 11347                           	opt stack 24
 11348                           
 11349                           ;incstack = 0
 11350                           ;CANSetMask@numBuffer stored from wreg
 11351  003A9C  0100               	movlb	0	; () banked
 11352  003A9E  6F80               	movwf	CANSetMask@numBuffer& (0+255),b
 11353                           
 11354                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
 11355  003AA0  0100               	movlb	0	; () banked
 11356  003AA2  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 11357  003AA4  A4D8               	btfss	status,2,c
 11358  003AA6  D056               	goto	l4885
 11359                           
 11360                           ; BSR set to: 0
 11361  003AA8  0100               	movlb	0	; () banked
 11362  003AAA  297B               	incf	CANSetMask@type& (0+255),w,b
 11363  003AAC  A4D8               	btfss	status,2,c
 11364  003AAE  D052               	goto	l4885
 11365                           
 11366                           ; BSR set to: 0
 11367                           ;inc\CANlib.h: 644: {
 11368                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
 11369  003AB0  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11370  003AB4  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11371  003AB8  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11372  003ABC  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11373  003AC0  0E04               	movlw	4
 11374  003AC2  D006               	goto	u5470
 11375  003AC4                     u5475:
 11376  003AC4  0100               	movlb	0	; () banked
 11377  003AC6  90D8               	bcf	status,0,c
 11378  003AC8  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11379  003ACA  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11380  003ACC  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11381  003ACE  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11382  003AD0                     u5470:
 11383  003AD0  2EE8               	decfsz	wreg,f,c
 11384  003AD2  D7F8               	goto	u5475
 11385  003AD4  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11386  003AD8  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11387  003ADC  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11388  003AE0  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11389                           
 11390                           ; BSR set to: 0
 11391                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
 11392  003AE4  0100               	movlb	0	; () banked
 11393  003AE6  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11394  003AE8  0100               	movlb	0	; () banked
 11395  003AEA  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11396  003AEC  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11397  003AEE  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11398  003AF0  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11399                           
 11400                           ; BSR set to: 0
 11401                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
 11402  003AF2  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 11403                           
 11404                           ; BSR set to: 0
 11405                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
 11406  003AF6  0E07               	movlw	7
 11407  003AF8  0100               	movlb	0	; () banked
 11408  003AFA  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11409  003AFC  0100               	movlb	0	; () banked
 11410  003AFE  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11411  003B00  0E00               	movlw	0
 11412  003B02  0100               	movlb	0	; () banked
 11413  003B04  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11414  003B06  0100               	movlb	0	; () banked
 11415  003B08  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11416  003B0A  0E00               	movlw	0
 11417  003B0C  0100               	movlb	0	; () banked
 11418  003B0E  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11419  003B10  0100               	movlb	0	; () banked
 11420  003B12  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11421  003B14  0E00               	movlw	0
 11422  003B16  0100               	movlb	0	; () banked
 11423  003B18  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11424  003B1A  0100               	movlb	0	; () banked
 11425  003B1C  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11426                           
 11427                           ; BSR set to: 0
 11428                           ;inc\CANlib.h: 650: tamp = tamp << 5;
 11429  003B1E  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11430  003B22  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11431  003B26  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11432  003B2A  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11433  003B2E  0E05               	movlw	5
 11434  003B30                     u5485:
 11435  003B30  90D8               	bcf	status,0,c
 11436  003B32  0100               	movlb	0	; () banked
 11437  003B34  377C               	rlcf	??_CANSetMask& (0+255),f,b
 11438  003B36  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 11439  003B38  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 11440  003B3A  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 11441  003B3C  2EE8               	decfsz	wreg,f,c
 11442  003B3E  D7F8               	goto	u5485
 11443  003B40  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11444  003B44  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11445  003B48  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11446  003B4C  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11447                           
 11448                           ; BSR set to: 0
 11449                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
 11450  003B50  C081  FF19         	movff	CANSetMask@tamp,3865	;volatile
 11451  003B54                     l4885:
 11452                           
 11453                           ; BSR set to: 0
 11454                           ;inc\CANlib.h: 652: }
 11455                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
 11456  003B54  0E02               	movlw	2
 11457  003B56  0100               	movlb	0	; () banked
 11458  003B58  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 11459  003B5A  A4D8               	btfss	status,2,c
 11460  003B5C  D056               	goto	l4901
 11461                           
 11462                           ; BSR set to: 0
 11463  003B5E  0100               	movlb	0	; () banked
 11464  003B60  297B               	incf	CANSetMask@type& (0+255),w,b
 11465  003B62  A4D8               	btfss	status,2,c
 11466  003B64  D052               	goto	l4901
 11467                           
 11468                           ; BSR set to: 0
 11469                           ;inc\CANlib.h: 655: {
 11470                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
 11471  003B66  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11472  003B6A  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11473  003B6E  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11474  003B72  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11475  003B76  0E04               	movlw	4
 11476  003B78  D006               	goto	u5510
 11477  003B7A                     u5515:
 11478  003B7A  0100               	movlb	0	; () banked
 11479  003B7C  90D8               	bcf	status,0,c
 11480  003B7E  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11481  003B80  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11482  003B82  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11483  003B84  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11484  003B86                     u5510:
 11485  003B86  2EE8               	decfsz	wreg,f,c
 11486  003B88  D7F8               	goto	u5515
 11487  003B8A  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11488  003B8E  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11489  003B92  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11490  003B96  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11491                           
 11492                           ; BSR set to: 0
 11493                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
 11494  003B9A  0100               	movlb	0	; () banked
 11495  003B9C  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11496  003B9E  0100               	movlb	0	; () banked
 11497  003BA0  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11498  003BA2  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11499  003BA4  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11500  003BA6  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11501                           
 11502                           ; BSR set to: 0
 11503                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
 11504  003BA8  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 11505                           
 11506                           ; BSR set to: 0
 11507                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
 11508  003BAC  0E07               	movlw	7
 11509  003BAE  0100               	movlb	0	; () banked
 11510  003BB0  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11511  003BB2  0100               	movlb	0	; () banked
 11512  003BB4  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11513  003BB6  0E00               	movlw	0
 11514  003BB8  0100               	movlb	0	; () banked
 11515  003BBA  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11516  003BBC  0100               	movlb	0	; () banked
 11517  003BBE  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11518  003BC0  0E00               	movlw	0
 11519  003BC2  0100               	movlb	0	; () banked
 11520  003BC4  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11521  003BC6  0100               	movlb	0	; () banked
 11522  003BC8  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11523  003BCA  0E00               	movlw	0
 11524  003BCC  0100               	movlb	0	; () banked
 11525  003BCE  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11526  003BD0  0100               	movlb	0	; () banked
 11527  003BD2  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11528                           
 11529                           ; BSR set to: 0
 11530                           ;inc\CANlib.h: 661: tamp = tamp << 5;
 11531  003BD4  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11532  003BD8  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11533  003BDC  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11534  003BE0  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11535  003BE4  0E05               	movlw	5
 11536  003BE6                     u5525:
 11537  003BE6  90D8               	bcf	status,0,c
 11538  003BE8  0100               	movlb	0	; () banked
 11539  003BEA  377C               	rlcf	??_CANSetMask& (0+255),f,b
 11540  003BEC  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 11541  003BEE  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 11542  003BF0  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 11543  003BF2  2EE8               	decfsz	wreg,f,c
 11544  003BF4  D7F8               	goto	u5525
 11545  003BF6  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11546  003BFA  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11547  003BFE  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11548  003C02  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11549                           
 11550                           ; BSR set to: 0
 11551                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
 11552  003C06  C081  FF1D         	movff	CANSetMask@tamp,3869	;volatile
 11553  003C0A                     l4901:
 11554                           
 11555                           ; BSR set to: 0
 11556                           ;inc\CANlib.h: 663: }
 11557                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
 11558  003C0A  0100               	movlb	0	; () banked
 11559  003C0C  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 11560  003C0E  A4D8               	btfss	status,2,c
 11561  003C10  D087               	goto	l4933
 11562                           
 11563                           ; BSR set to: 0
 11564  003C12  0EF7               	movlw	247
 11565  003C14  0100               	movlb	0	; () banked
 11566  003C16  197B               	xorwf	CANSetMask@type& (0+255),w,b
 11567  003C18  A4D8               	btfss	status,2,c
 11568  003C1A  D082               	goto	l4933
 11569                           
 11570                           ; BSR set to: 0
 11571                           ;inc\CANlib.h: 666: {
 11572                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
 11573  003C1C  0100               	movlb	0	; () banked
 11574  003C1E  5177               	movf	CANSetMask@mask& (0+255),w,b
 11575  003C20  0100               	movlb	0	; () banked
 11576  003C22  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11577  003C24  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11578  003C26  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11579  003C28  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11580                           
 11581                           ; BSR set to: 0
 11582                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
 11583  003C2A  C081  FF1B         	movff	CANSetMask@tamp,3867	;volatile
 11584                           
 11585                           ; BSR set to: 0
 11586                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
 11587  003C2E  0E00               	movlw	0
 11588  003C30  0100               	movlb	0	; () banked
 11589  003C32  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11590  003C34  0100               	movlb	0	; () banked
 11591  003C36  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11592  003C38  0EFF               	movlw	255
 11593  003C3A  0100               	movlb	0	; () banked
 11594  003C3C  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11595  003C3E  0100               	movlb	0	; () banked
 11596  003C40  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11597  003C42  0E00               	movlw	0
 11598  003C44  0100               	movlb	0	; () banked
 11599  003C46  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11600  003C48  0100               	movlb	0	; () banked
 11601  003C4A  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11602  003C4C  0E00               	movlw	0
 11603  003C4E  0100               	movlb	0	; () banked
 11604  003C50  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11605  003C52  0100               	movlb	0	; () banked
 11606  003C54  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11607                           
 11608                           ; BSR set to: 0
 11609                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
 11610  003C56  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11611  003C5A  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11612  003C5E  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11613  003C62  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11614  003C66  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 11615  003C6A  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 11616  003C6E  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 11617  003C72  0100               	movlb	0	; () banked
 11618  003C74  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 11619  003C76  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11620  003C7A  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11621  003C7E  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11622  003C82  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11623                           
 11624                           ; BSR set to: 0
 11625                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
 11626  003C86  C081  FF1A         	movff	CANSetMask@tamp,3866	;volatile
 11627                           
 11628                           ; BSR set to: 0
 11629                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
 11630  003C8A  0100               	movlb	0	; () banked
 11631  003C8C  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 11632  003C8E  D003               	goto	l432
 11633                           
 11634                           ; BSR set to: 0
 11635                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
 11636  003C90  010F               	movlb	15	; () banked
 11637  003C92  8119               	bsf	25,0,b	;volatile
 11638  003C94  D002               	goto	l433
 11639  003C96                     l432:
 11640                           
 11641                           ; BSR set to: 0
 11642                           ;inc\CANlib.h: 676: else
 11643                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
 11644  003C96  010F               	movlb	15	; () banked
 11645  003C98  9119               	bcf	25,0,b	;volatile
 11646  003C9A                     l433:
 11647                           
 11648                           ; BSR set to: 15
 11649                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
 11650  003C9A  0100               	movlb	0	; () banked
 11651  003C9C  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 11652  003C9E  D003               	goto	l434
 11653                           
 11654                           ; BSR set to: 0
 11655                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
 11656  003CA0  010F               	movlb	15	; () banked
 11657  003CA2  8319               	bsf	25,1,b	;volatile
 11658  003CA4  D002               	goto	l435
 11659  003CA6                     l434:
 11660                           
 11661                           ; BSR set to: 0
 11662                           ;inc\CANlib.h: 681: else
 11663                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
 11664  003CA6  010F               	movlb	15	; () banked
 11665  003CA8  9319               	bcf	25,1,b	;volatile
 11666  003CAA                     l435:
 11667                           
 11668                           ; BSR set to: 15
 11669                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
 11670  003CAA  0100               	movlb	0	; () banked
 11671  003CAC  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 11672  003CAE  D003               	goto	l436
 11673                           
 11674                           ; BSR set to: 0
 11675                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
 11676  003CB0  010F               	movlb	15	; () banked
 11677  003CB2  8B19               	bsf	25,5,b	;volatile
 11678  003CB4  D002               	goto	l437
 11679  003CB6                     l436:
 11680                           
 11681                           ; BSR set to: 0
 11682                           ;inc\CANlib.h: 686: else
 11683                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
 11684  003CB6  010F               	movlb	15	; () banked
 11685  003CB8  9B19               	bcf	25,5,b	;volatile
 11686  003CBA                     l437:
 11687                           
 11688                           ; BSR set to: 15
 11689                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
 11690  003CBA  0100               	movlb	0	; () banked
 11691  003CBC  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 11692  003CBE  D003               	goto	l438
 11693                           
 11694                           ; BSR set to: 0
 11695                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
 11696  003CC0  010F               	movlb	15	; () banked
 11697  003CC2  8D19               	bsf	25,6,b	;volatile
 11698  003CC4  D002               	goto	l439
 11699  003CC6                     l438:
 11700                           
 11701                           ; BSR set to: 0
 11702                           ;inc\CANlib.h: 691: else
 11703                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
 11704  003CC6  010F               	movlb	15	; () banked
 11705  003CC8  9D19               	bcf	25,6,b	;volatile
 11706  003CCA                     l439:
 11707                           
 11708                           ; BSR set to: 15
 11709                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
 11710  003CCA  0100               	movlb	0	; () banked
 11711  003CCC  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 11712  003CCE  D003               	goto	l440
 11713                           
 11714                           ; BSR set to: 0
 11715                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
 11716  003CD0  010F               	movlb	15	; () banked
 11717  003CD2  8F19               	bsf	25,7,b	;volatile
 11718  003CD4  D002               	goto	l4927
 11719  003CD6                     l440:
 11720                           
 11721                           ; BSR set to: 0
 11722                           ;inc\CANlib.h: 696: else
 11723                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
 11724  003CD6  010F               	movlb	15	; () banked
 11725  003CD8  9F19               	bcf	25,7,b	;volatile
 11726  003CDA                     l4927:
 11727                           
 11728                           ; BSR set to: 15
 11729                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
 11730  003CDA  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11731  003CDE  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11732  003CE2  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11733  003CE6  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11734  003CEA  0E16               	movlw	22
 11735  003CEC  D006               	goto	u5600
 11736  003CEE                     u5605:
 11737  003CEE  0100               	movlb	0	; () banked
 11738  003CF0  90D8               	bcf	status,0,c
 11739  003CF2  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11740  003CF4  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11741  003CF6  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11742  003CF8  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11743  003CFA                     u5600:
 11744  003CFA  2EE8               	decfsz	wreg,f,c
 11745  003CFC  D7F8               	goto	u5605
 11746  003CFE  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11747  003D02  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11748  003D06  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11749  003D0A  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11750                           
 11751                           ; BSR set to: 0
 11752                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
 11753  003D0E  0100               	movlb	0	; () banked
 11754  003D10  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11755  003D12  0100               	movlb	0	; () banked
 11756  003D14  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11757  003D16  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11758  003D18  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11759  003D1A  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11760                           
 11761                           ; BSR set to: 0
 11762                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
 11763  003D1C  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 11764  003D20                     l4933:
 11765                           
 11766                           ; BSR set to: 0
 11767                           ;inc\CANlib.h: 702: }
 11768                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
 11769  003D20  0E02               	movlw	2
 11770  003D22  0100               	movlb	0	; () banked
 11771  003D24  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 11772  003D26  A4D8               	btfss	status,2,c
 11773  003D28  0012               	return	
 11774                           
 11775                           ; BSR set to: 0
 11776  003D2A  0EF7               	movlw	247
 11777  003D2C  0100               	movlb	0	; () banked
 11778  003D2E  197B               	xorwf	CANSetMask@type& (0+255),w,b
 11779  003D30  A4D8               	btfss	status,2,c
 11780  003D32  0012               	return	
 11781                           
 11782                           ; BSR set to: 0
 11783                           ;inc\CANlib.h: 705: {
 11784                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
 11785  003D34  0100               	movlb	0	; () banked
 11786  003D36  5177               	movf	CANSetMask@mask& (0+255),w,b
 11787  003D38  0100               	movlb	0	; () banked
 11788  003D3A  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11789  003D3C  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11790  003D3E  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11791  003D40  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11792                           
 11793                           ; BSR set to: 0
 11794                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
 11795  003D42  C081  FF1F         	movff	CANSetMask@tamp,3871	;volatile
 11796                           
 11797                           ; BSR set to: 0
 11798                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
 11799  003D46  0E00               	movlw	0
 11800  003D48  0100               	movlb	0	; () banked
 11801  003D4A  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11802  003D4C  0100               	movlb	0	; () banked
 11803  003D4E  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11804  003D50  0EFF               	movlw	255
 11805  003D52  0100               	movlb	0	; () banked
 11806  003D54  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11807  003D56  0100               	movlb	0	; () banked
 11808  003D58  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11809  003D5A  0E00               	movlw	0
 11810  003D5C  0100               	movlb	0	; () banked
 11811  003D5E  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11812  003D60  0100               	movlb	0	; () banked
 11813  003D62  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11814  003D64  0E00               	movlw	0
 11815  003D66  0100               	movlb	0	; () banked
 11816  003D68  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11817  003D6A  0100               	movlb	0	; () banked
 11818  003D6C  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11819                           
 11820                           ; BSR set to: 0
 11821                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
 11822  003D6E  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11823  003D72  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11824  003D76  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11825  003D7A  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11826  003D7E  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 11827  003D82  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 11828  003D86  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 11829  003D8A  0100               	movlb	0	; () banked
 11830  003D8C  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 11831  003D8E  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11832  003D92  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11833  003D96  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11834  003D9A  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11835                           
 11836                           ; BSR set to: 0
 11837                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
 11838  003D9E  C081  FF1E         	movff	CANSetMask@tamp,3870	;volatile
 11839                           
 11840                           ; BSR set to: 0
 11841                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
 11842  003DA2  0100               	movlb	0	; () banked
 11843  003DA4  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 11844  003DA6  D003               	goto	l443
 11845                           
 11846                           ; BSR set to: 0
 11847                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
 11848  003DA8  010F               	movlb	15	; () banked
 11849  003DAA  811D               	bsf	29,0,b	;volatile
 11850  003DAC  D002               	goto	l444
 11851  003DAE                     l443:
 11852                           
 11853                           ; BSR set to: 0
 11854                           ;inc\CANlib.h: 715: else
 11855                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
 11856  003DAE  010F               	movlb	15	; () banked
 11857  003DB0  911D               	bcf	29,0,b	;volatile
 11858  003DB2                     l444:
 11859                           
 11860                           ; BSR set to: 15
 11861                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
 11862  003DB2  0100               	movlb	0	; () banked
 11863  003DB4  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 11864  003DB6  D003               	goto	l445
 11865                           
 11866                           ; BSR set to: 0
 11867                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
 11868  003DB8  010F               	movlb	15	; () banked
 11869  003DBA  831D               	bsf	29,1,b	;volatile
 11870  003DBC  D002               	goto	l446
 11871  003DBE                     l445:
 11872                           
 11873                           ; BSR set to: 0
 11874                           ;inc\CANlib.h: 720: else
 11875                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
 11876  003DBE  010F               	movlb	15	; () banked
 11877  003DC0  931D               	bcf	29,1,b	;volatile
 11878  003DC2                     l446:
 11879                           
 11880                           ; BSR set to: 15
 11881                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
 11882  003DC2  0100               	movlb	0	; () banked
 11883  003DC4  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 11884  003DC6  D003               	goto	l447
 11885                           
 11886                           ; BSR set to: 0
 11887                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
 11888  003DC8  010F               	movlb	15	; () banked
 11889  003DCA  8B1D               	bsf	29,5,b	;volatile
 11890  003DCC  D002               	goto	l448
 11891  003DCE                     l447:
 11892                           
 11893                           ; BSR set to: 0
 11894                           ;inc\CANlib.h: 725: else
 11895                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
 11896  003DCE  010F               	movlb	15	; () banked
 11897  003DD0  9B1D               	bcf	29,5,b	;volatile
 11898  003DD2                     l448:
 11899                           
 11900                           ; BSR set to: 15
 11901                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
 11902  003DD2  0100               	movlb	0	; () banked
 11903  003DD4  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 11904  003DD6  D003               	goto	l449
 11905                           
 11906                           ; BSR set to: 0
 11907                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
 11908  003DD8  010F               	movlb	15	; () banked
 11909  003DDA  8D1D               	bsf	29,6,b	;volatile
 11910  003DDC  D002               	goto	l450
 11911  003DDE                     l449:
 11912                           
 11913                           ; BSR set to: 0
 11914                           ;inc\CANlib.h: 730: else
 11915                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
 11916  003DDE  010F               	movlb	15	; () banked
 11917  003DE0  9D1D               	bcf	29,6,b	;volatile
 11918  003DE2                     l450:
 11919                           
 11920                           ; BSR set to: 15
 11921                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
 11922  003DE2  0100               	movlb	0	; () banked
 11923  003DE4  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 11924  003DE6  D003               	goto	l451
 11925                           
 11926                           ; BSR set to: 0
 11927                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
 11928  003DE8  010F               	movlb	15	; () banked
 11929  003DEA  8F1D               	bsf	29,7,b	;volatile
 11930  003DEC  D002               	goto	l4959
 11931  003DEE                     l451:
 11932                           
 11933                           ; BSR set to: 0
 11934                           ;inc\CANlib.h: 735: else
 11935                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
 11936  003DEE  010F               	movlb	15	; () banked
 11937  003DF0  9F1D               	bcf	29,7,b	;volatile
 11938  003DF2                     l4959:
 11939                           
 11940                           ; BSR set to: 15
 11941                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
 11942  003DF2  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11943  003DF6  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11944  003DFA  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11945  003DFE  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11946  003E02  0E16               	movlw	22
 11947  003E04  D006               	goto	u5680
 11948  003E06                     u5685:
 11949  003E06  0100               	movlb	0	; () banked
 11950  003E08  90D8               	bcf	status,0,c
 11951  003E0A  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11952  003E0C  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11953  003E0E  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11954  003E10  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11955  003E12                     u5680:
 11956  003E12  2EE8               	decfsz	wreg,f,c
 11957  003E14  D7F8               	goto	u5685
 11958  003E16  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11959  003E1A  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11960  003E1E  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11961  003E22  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11962                           
 11963                           ; BSR set to: 0
 11964                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
 11965  003E26  0100               	movlb	0	; () banked
 11966  003E28  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11967  003E2A  0100               	movlb	0	; () banked
 11968  003E2C  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11969  003E2E  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11970  003E30  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11971  003E32  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11972                           
 11973                           ; BSR set to: 0
 11974                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
 11975  003E34  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 11976  003E38  0012               	return	
 11977  003E3A                     __end_of_CANSetMask:
 11978                           	opt stack 0
 11979                           tblptru	equ	0xFF8
 11980                           tblptrh	equ	0xFF7
 11981                           tblptrl	equ	0xFF6
 11982                           tablat	equ	0xFF5
 11983                           prodh	equ	0xFF4
 11984                           prodl	equ	0xFF3
 11985                           intcon	equ	0xFF2
 11986                           intcon2	equ	0xFF1
 11987                           postinc0	equ	0xFEE
 11988                           wreg	equ	0xFE8
 11989                           postdec1	equ	0xFE5
 11990                           fsr1l	equ	0xFE1
 11991                           indf2	equ	0xFDF
 11992                           postinc2	equ	0xFDE
 11993                           postdec2	equ	0xFDD
 11994                           fsr2h	equ	0xFDA
 11995                           fsr2l	equ	0xFD9
 11996                           status	equ	0xFD8
 11997                           
 11998 ;; *************** function _CANSetFilter *****************
 11999 ;; Defined at:
 12000 ;;		line 748 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 12001 ;; Parameters:    Size  Location     Type
 12002 ;;  numBuffer       1    wreg     enum E16350
 12003 ;;  filter          4   23[BANK0 ] unsigned long 
 12004 ;;  type            1   27[BANK0 ] enum E16313
 12005 ;; Auto vars:     Size  Location     Type
 12006 ;;  numBuffer       1   32[BANK0 ] enum E16350
 12007 ;;  tamp            4   33[BANK0 ] unsigned long 
 12008 ;; Return value:  Size  Location     Type
 12009 ;;		None               void
 12010 ;; Registers used:
 12011 ;;		wreg, status,2, status,0
 12012 ;; Tracked objects:
 12013 ;;		On entry : 0/0
 12014 ;;		On exit  : 0/0
 12015 ;;		Unchanged: 0/0
 12016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12017 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12018 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12019 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12020 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12021 ;;Total ram usage:       14 bytes
 12022 ;; Hardware stack levels used:    1
 12023 ;; Hardware stack levels required when called:    4
 12024 ;; This function calls:
 12025 ;;		Nothing
 12026 ;; This function is called by:
 12027 ;;		_CANInitialize
 12028 ;; This function uses a non-reentrant model
 12029 ;;
 12030                           
 12031                           	psect	text32
 12032  000D52                     __ptext32:
 12033                           	opt stack 0
 12034  000D52                     _CANSetFilter:
 12035                           	opt stack 24
 12036                           
 12037                           ; BSR set to: 0
 12038                           ;incstack = 0
 12039                           ;CANSetFilter@numBuffer stored from wreg
 12040  000D52  0100               	movlb	0	; () banked
 12041  000D54  6F80               	movwf	CANSetFilter@numBuffer& (0+255),b
 12042                           
 12043                           ;inc\CANlib.h: 750: unsigned long tamp;
 12044                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
 12045  000D56  0100               	movlb	0	; () banked
 12046  000D58  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 12047  000D5A  0100               	movlb	0	; () banked
 12048  000D5C  A4D8               	btfss	status,2,c
 12049  000D5E  D058               	goto	l4983
 12050                           
 12051                           ; BSR set to: 0
 12052  000D60  0100               	movlb	0	; () banked
 12053  000D62  297B               	incf	CANSetFilter@type& (0+255),w,b
 12054  000D64  A4D8               	btfss	status,2,c
 12055  000D66  D054               	goto	l4983
 12056                           
 12057                           ; BSR set to: 0
 12058                           ;inc\CANlib.h: 753: {
 12059                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
 12060  000D68  010F               	movlb	15	; () banked
 12061  000D6A  9701               	bcf	1,3,b	;volatile
 12062                           
 12063                           ; BSR set to: 15
 12064                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
 12065  000D6C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12066  000D70  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12067  000D74  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12068  000D78  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12069  000D7C  0E04               	movlw	4
 12070  000D7E  D006               	goto	u5710
 12071  000D80                     u5715:
 12072  000D80  0100               	movlb	0	; () banked
 12073  000D82  90D8               	bcf	status,0,c
 12074  000D84  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12075  000D86  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12076  000D88  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12077  000D8A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12078  000D8C                     u5710:
 12079  000D8C  2EE8               	decfsz	wreg,f,c
 12080  000D8E  D7F8               	goto	u5715
 12081  000D90  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12082  000D94  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12083  000D98  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12084  000D9C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12085                           
 12086                           ; BSR set to: 0
 12087                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
 12088  000DA0  0100               	movlb	0	; () banked
 12089  000DA2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12090  000DA4  0100               	movlb	0	; () banked
 12091  000DA6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12092  000DA8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12093  000DAA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12094  000DAC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12095                           
 12096                           ; BSR set to: 0
 12097                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
 12098  000DAE  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 12099                           
 12100                           ; BSR set to: 0
 12101                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
 12102  000DB2  0E07               	movlw	7
 12103  000DB4  0100               	movlb	0	; () banked
 12104  000DB6  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12105  000DB8  0100               	movlb	0	; () banked
 12106  000DBA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12107  000DBC  0E00               	movlw	0
 12108  000DBE  0100               	movlb	0	; () banked
 12109  000DC0  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12110  000DC2  0100               	movlb	0	; () banked
 12111  000DC4  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12112  000DC6  0E00               	movlw	0
 12113  000DC8  0100               	movlb	0	; () banked
 12114  000DCA  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12115  000DCC  0100               	movlb	0	; () banked
 12116  000DCE  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12117  000DD0  0E00               	movlw	0
 12118  000DD2  0100               	movlb	0	; () banked
 12119  000DD4  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12120  000DD6  0100               	movlb	0	; () banked
 12121  000DD8  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12122                           
 12123                           ; BSR set to: 0
 12124                           ;inc\CANlib.h: 761: tamp = tamp << 5;
 12125  000DDA  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12126  000DDE  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12127  000DE2  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12128  000DE6  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12129  000DEA  0E05               	movlw	5
 12130  000DEC                     u5725:
 12131  000DEC  90D8               	bcf	status,0,c
 12132  000DEE  0100               	movlb	0	; () banked
 12133  000DF0  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12134  000DF2  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12135  000DF4  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12136  000DF6  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12137  000DF8  2EE8               	decfsz	wreg,f,c
 12138  000DFA  D7F8               	goto	u5725
 12139  000DFC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12140  000E00  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12141  000E04  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12142  000E08  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12143                           
 12144                           ; BSR set to: 0
 12145                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
 12146  000E0C  C081  FF01         	movff	CANSetFilter@tamp,3841	;volatile
 12147  000E10                     l4983:
 12148                           
 12149                           ; BSR set to: 0
 12150                           ;inc\CANlib.h: 763: }
 12151                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
 12152  000E10  0100               	movlb	0	; () banked
 12153  000E12  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 12154  000E14  A4D8               	btfss	status,2,c
 12155  000E16  D058               	goto	l5001
 12156                           
 12157                           ; BSR set to: 0
 12158  000E18  0100               	movlb	0	; () banked
 12159  000E1A  297B               	incf	CANSetFilter@type& (0+255),w,b
 12160  000E1C  A4D8               	btfss	status,2,c
 12161  000E1E  D054               	goto	l5001
 12162                           
 12163                           ; BSR set to: 0
 12164                           ;inc\CANlib.h: 766: {
 12165                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
 12166  000E20  010F               	movlb	15	; () banked
 12167  000E22  9705               	bcf	5,3,b	;volatile
 12168                           
 12169                           ; BSR set to: 15
 12170                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
 12171  000E24  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12172  000E28  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12173  000E2C  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12174  000E30  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12175  000E34  0E04               	movlw	4
 12176  000E36  D006               	goto	u5750
 12177  000E38                     u5755:
 12178  000E38  0100               	movlb	0	; () banked
 12179  000E3A  90D8               	bcf	status,0,c
 12180  000E3C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12181  000E3E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12182  000E40  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12183  000E42  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12184  000E44                     u5750:
 12185  000E44  2EE8               	decfsz	wreg,f,c
 12186  000E46  D7F8               	goto	u5755
 12187  000E48  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12188  000E4C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12189  000E50  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12190  000E54  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12191                           
 12192                           ; BSR set to: 0
 12193                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
 12194  000E58  0100               	movlb	0	; () banked
 12195  000E5A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12196  000E5C  0100               	movlb	0	; () banked
 12197  000E5E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12198  000E60  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12199  000E62  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12200  000E64  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12201                           
 12202                           ; BSR set to: 0
 12203                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
 12204  000E66  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 12205                           
 12206                           ; BSR set to: 0
 12207                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
 12208  000E6A  0E07               	movlw	7
 12209  000E6C  0100               	movlb	0	; () banked
 12210  000E6E  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12211  000E70  0100               	movlb	0	; () banked
 12212  000E72  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12213  000E74  0E00               	movlw	0
 12214  000E76  0100               	movlb	0	; () banked
 12215  000E78  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12216  000E7A  0100               	movlb	0	; () banked
 12217  000E7C  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12218  000E7E  0E00               	movlw	0
 12219  000E80  0100               	movlb	0	; () banked
 12220  000E82  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12221  000E84  0100               	movlb	0	; () banked
 12222  000E86  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12223  000E88  0E00               	movlw	0
 12224  000E8A  0100               	movlb	0	; () banked
 12225  000E8C  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12226  000E8E  0100               	movlb	0	; () banked
 12227  000E90  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12228                           
 12229                           ; BSR set to: 0
 12230                           ;inc\CANlib.h: 774: tamp = tamp << 5;
 12231  000E92  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12232  000E96  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12233  000E9A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12234  000E9E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12235  000EA2  0E05               	movlw	5
 12236  000EA4                     u5765:
 12237  000EA4  90D8               	bcf	status,0,c
 12238  000EA6  0100               	movlb	0	; () banked
 12239  000EA8  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12240  000EAA  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12241  000EAC  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12242  000EAE  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12243  000EB0  2EE8               	decfsz	wreg,f,c
 12244  000EB2  D7F8               	goto	u5765
 12245  000EB4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12246  000EB8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12247  000EBC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12248  000EC0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12249                           
 12250                           ; BSR set to: 0
 12251                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
 12252  000EC4  C081  FF05         	movff	CANSetFilter@tamp,3845	;volatile
 12253  000EC8                     l5001:
 12254                           
 12255                           ; BSR set to: 0
 12256                           ;inc\CANlib.h: 776: }
 12257                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
 12258  000EC8  0E02               	movlw	2
 12259  000ECA  0100               	movlb	0	; () banked
 12260  000ECC  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12261  000ECE  A4D8               	btfss	status,2,c
 12262  000ED0  D058               	goto	l5019
 12263                           
 12264                           ; BSR set to: 0
 12265  000ED2  0100               	movlb	0	; () banked
 12266  000ED4  297B               	incf	CANSetFilter@type& (0+255),w,b
 12267  000ED6  A4D8               	btfss	status,2,c
 12268  000ED8  D054               	goto	l5019
 12269                           
 12270                           ; BSR set to: 0
 12271                           ;inc\CANlib.h: 779: {
 12272                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
 12273  000EDA  010F               	movlb	15	; () banked
 12274  000EDC  9709               	bcf	9,3,b	;volatile
 12275                           
 12276                           ; BSR set to: 15
 12277                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
 12278  000EDE  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12279  000EE2  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12280  000EE6  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12281  000EEA  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12282  000EEE  0E04               	movlw	4
 12283  000EF0  D006               	goto	u5790
 12284  000EF2                     u5795:
 12285  000EF2  0100               	movlb	0	; () banked
 12286  000EF4  90D8               	bcf	status,0,c
 12287  000EF6  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12288  000EF8  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12289  000EFA  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12290  000EFC  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12291  000EFE                     u5790:
 12292  000EFE  2EE8               	decfsz	wreg,f,c
 12293  000F00  D7F8               	goto	u5795
 12294  000F02  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12295  000F06  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12296  000F0A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12297  000F0E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12298                           
 12299                           ; BSR set to: 0
 12300                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
 12301  000F12  0100               	movlb	0	; () banked
 12302  000F14  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12303  000F16  0100               	movlb	0	; () banked
 12304  000F18  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12305  000F1A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12306  000F1C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12307  000F1E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12308                           
 12309                           ; BSR set to: 0
 12310                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
 12311  000F20  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 12312                           
 12313                           ; BSR set to: 0
 12314                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
 12315  000F24  0E07               	movlw	7
 12316  000F26  0100               	movlb	0	; () banked
 12317  000F28  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12318  000F2A  0100               	movlb	0	; () banked
 12319  000F2C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12320  000F2E  0E00               	movlw	0
 12321  000F30  0100               	movlb	0	; () banked
 12322  000F32  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12323  000F34  0100               	movlb	0	; () banked
 12324  000F36  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12325  000F38  0E00               	movlw	0
 12326  000F3A  0100               	movlb	0	; () banked
 12327  000F3C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12328  000F3E  0100               	movlb	0	; () banked
 12329  000F40  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12330  000F42  0E00               	movlw	0
 12331  000F44  0100               	movlb	0	; () banked
 12332  000F46  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12333  000F48  0100               	movlb	0	; () banked
 12334  000F4A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12335                           
 12336                           ; BSR set to: 0
 12337                           ;inc\CANlib.h: 787: tamp = tamp << 5;
 12338  000F4C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12339  000F50  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12340  000F54  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12341  000F58  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12342  000F5C  0E05               	movlw	5
 12343  000F5E                     u5805:
 12344  000F5E  90D8               	bcf	status,0,c
 12345  000F60  0100               	movlb	0	; () banked
 12346  000F62  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12347  000F64  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12348  000F66  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12349  000F68  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12350  000F6A  2EE8               	decfsz	wreg,f,c
 12351  000F6C  D7F8               	goto	u5805
 12352  000F6E  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12353  000F72  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12354  000F76  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12355  000F7A  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12356                           
 12357                           ; BSR set to: 0
 12358                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
 12359  000F7E  C081  FF09         	movff	CANSetFilter@tamp,3849	;volatile
 12360  000F82                     l5019:
 12361                           
 12362                           ; BSR set to: 0
 12363                           ;inc\CANlib.h: 789: }
 12364                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
 12365  000F82  0E03               	movlw	3
 12366  000F84  0100               	movlb	0	; () banked
 12367  000F86  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12368  000F88  A4D8               	btfss	status,2,c
 12369  000F8A  D058               	goto	l5037
 12370                           
 12371                           ; BSR set to: 0
 12372  000F8C  0100               	movlb	0	; () banked
 12373  000F8E  297B               	incf	CANSetFilter@type& (0+255),w,b
 12374  000F90  A4D8               	btfss	status,2,c
 12375  000F92  D054               	goto	l5037
 12376                           
 12377                           ; BSR set to: 0
 12378                           ;inc\CANlib.h: 792: {
 12379                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
 12380  000F94  010F               	movlb	15	; () banked
 12381  000F96  970D               	bcf	13,3,b	;volatile
 12382                           
 12383                           ; BSR set to: 15
 12384                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
 12385  000F98  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12386  000F9C  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12387  000FA0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12388  000FA4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12389  000FA8  0E04               	movlw	4
 12390  000FAA  D006               	goto	u5830
 12391  000FAC                     u5835:
 12392  000FAC  0100               	movlb	0	; () banked
 12393  000FAE  90D8               	bcf	status,0,c
 12394  000FB0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12395  000FB2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12396  000FB4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12397  000FB6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12398  000FB8                     u5830:
 12399  000FB8  2EE8               	decfsz	wreg,f,c
 12400  000FBA  D7F8               	goto	u5835
 12401  000FBC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12402  000FC0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12403  000FC4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12404  000FC8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12405                           
 12406                           ; BSR set to: 0
 12407                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
 12408  000FCC  0100               	movlb	0	; () banked
 12409  000FCE  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12410  000FD0  0100               	movlb	0	; () banked
 12411  000FD2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12412  000FD4  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12413  000FD6  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12414  000FD8  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12415                           
 12416                           ; BSR set to: 0
 12417                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
 12418  000FDA  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 12419                           
 12420                           ; BSR set to: 0
 12421                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
 12422  000FDE  0E07               	movlw	7
 12423  000FE0  0100               	movlb	0	; () banked
 12424  000FE2  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12425  000FE4  0100               	movlb	0	; () banked
 12426  000FE6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12427  000FE8  0E00               	movlw	0
 12428  000FEA  0100               	movlb	0	; () banked
 12429  000FEC  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12430  000FEE  0100               	movlb	0	; () banked
 12431  000FF0  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12432  000FF2  0E00               	movlw	0
 12433  000FF4  0100               	movlb	0	; () banked
 12434  000FF6  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12435  000FF8  0100               	movlb	0	; () banked
 12436  000FFA  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12437  000FFC  0E00               	movlw	0
 12438  000FFE  0100               	movlb	0	; () banked
 12439  001000  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12440  001002  0100               	movlb	0	; () banked
 12441  001004  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12442                           
 12443                           ; BSR set to: 0
 12444                           ;inc\CANlib.h: 800: tamp = tamp << 5;
 12445  001006  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12446  00100A  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12447  00100E  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12448  001012  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12449  001016  0E05               	movlw	5
 12450  001018                     u5845:
 12451  001018  90D8               	bcf	status,0,c
 12452  00101A  0100               	movlb	0	; () banked
 12453  00101C  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12454  00101E  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12455  001020  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12456  001022  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12457  001024  2EE8               	decfsz	wreg,f,c
 12458  001026  D7F8               	goto	u5845
 12459  001028  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12460  00102C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12461  001030  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12462  001034  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12463                           
 12464                           ; BSR set to: 0
 12465                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
 12466  001038  C081  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
 12467  00103C                     l5037:
 12468                           
 12469                           ; BSR set to: 0
 12470                           ;inc\CANlib.h: 802: }
 12471                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
 12472  00103C  0E04               	movlw	4
 12473  00103E  0100               	movlb	0	; () banked
 12474  001040  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12475  001042  A4D8               	btfss	status,2,c
 12476  001044  D058               	goto	l5055
 12477                           
 12478                           ; BSR set to: 0
 12479  001046  0100               	movlb	0	; () banked
 12480  001048  297B               	incf	CANSetFilter@type& (0+255),w,b
 12481  00104A  A4D8               	btfss	status,2,c
 12482  00104C  D054               	goto	l5055
 12483                           
 12484                           ; BSR set to: 0
 12485                           ;inc\CANlib.h: 805: {
 12486                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
 12487  00104E  010F               	movlb	15	; () banked
 12488  001050  9711               	bcf	17,3,b	;volatile
 12489                           
 12490                           ; BSR set to: 15
 12491                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
 12492  001052  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12493  001056  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12494  00105A  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12495  00105E  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12496  001062  0E04               	movlw	4
 12497  001064  D006               	goto	u5870
 12498  001066                     u5875:
 12499  001066  0100               	movlb	0	; () banked
 12500  001068  90D8               	bcf	status,0,c
 12501  00106A  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12502  00106C  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12503  00106E  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12504  001070  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12505  001072                     u5870:
 12506  001072  2EE8               	decfsz	wreg,f,c
 12507  001074  D7F8               	goto	u5875
 12508  001076  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12509  00107A  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12510  00107E  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12511  001082  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12512                           
 12513                           ; BSR set to: 0
 12514                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
 12515  001086  0100               	movlb	0	; () banked
 12516  001088  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12517  00108A  0100               	movlb	0	; () banked
 12518  00108C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12519  00108E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12520  001090  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12521  001092  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12522                           
 12523                           ; BSR set to: 0
 12524                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
 12525  001094  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 12526                           
 12527                           ; BSR set to: 0
 12528                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
 12529  001098  0E07               	movlw	7
 12530  00109A  0100               	movlb	0	; () banked
 12531  00109C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12532  00109E  0100               	movlb	0	; () banked
 12533  0010A0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12534  0010A2  0E00               	movlw	0
 12535  0010A4  0100               	movlb	0	; () banked
 12536  0010A6  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12537  0010A8  0100               	movlb	0	; () banked
 12538  0010AA  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12539  0010AC  0E00               	movlw	0
 12540  0010AE  0100               	movlb	0	; () banked
 12541  0010B0  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12542  0010B2  0100               	movlb	0	; () banked
 12543  0010B4  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12544  0010B6  0E00               	movlw	0
 12545  0010B8  0100               	movlb	0	; () banked
 12546  0010BA  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12547  0010BC  0100               	movlb	0	; () banked
 12548  0010BE  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12549                           
 12550                           ; BSR set to: 0
 12551                           ;inc\CANlib.h: 813: tamp = tamp << 5;
 12552  0010C0  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12553  0010C4  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12554  0010C8  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12555  0010CC  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12556  0010D0  0E05               	movlw	5
 12557  0010D2                     u5885:
 12558  0010D2  90D8               	bcf	status,0,c
 12559  0010D4  0100               	movlb	0	; () banked
 12560  0010D6  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12561  0010D8  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12562  0010DA  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12563  0010DC  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12564  0010DE  2EE8               	decfsz	wreg,f,c
 12565  0010E0  D7F8               	goto	u5885
 12566  0010E2  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12567  0010E6  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12568  0010EA  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12569  0010EE  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12570                           
 12571                           ; BSR set to: 0
 12572                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
 12573  0010F2  C081  FF11         	movff	CANSetFilter@tamp,3857	;volatile
 12574  0010F6                     l5055:
 12575                           
 12576                           ; BSR set to: 0
 12577                           ;inc\CANlib.h: 815: }
 12578                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
 12579  0010F6  0E05               	movlw	5
 12580  0010F8  0100               	movlb	0	; () banked
 12581  0010FA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12582  0010FC  A4D8               	btfss	status,2,c
 12583  0010FE  D058               	goto	l5073
 12584                           
 12585                           ; BSR set to: 0
 12586  001100  0100               	movlb	0	; () banked
 12587  001102  297B               	incf	CANSetFilter@type& (0+255),w,b
 12588  001104  A4D8               	btfss	status,2,c
 12589  001106  D054               	goto	l5073
 12590                           
 12591                           ; BSR set to: 0
 12592                           ;inc\CANlib.h: 818: {
 12593                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
 12594  001108  010F               	movlb	15	; () banked
 12595  00110A  9715               	bcf	21,3,b	;volatile
 12596                           
 12597                           ; BSR set to: 15
 12598                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
 12599  00110C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12600  001110  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12601  001114  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12602  001118  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12603  00111C  0E04               	movlw	4
 12604  00111E  D006               	goto	u5910
 12605  001120                     u5915:
 12606  001120  0100               	movlb	0	; () banked
 12607  001122  90D8               	bcf	status,0,c
 12608  001124  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12609  001126  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12610  001128  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12611  00112A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12612  00112C                     u5910:
 12613  00112C  2EE8               	decfsz	wreg,f,c
 12614  00112E  D7F8               	goto	u5915
 12615  001130  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12616  001134  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12617  001138  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12618  00113C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12619                           
 12620                           ; BSR set to: 0
 12621                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
 12622  001140  0100               	movlb	0	; () banked
 12623  001142  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12624  001144  0100               	movlb	0	; () banked
 12625  001146  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12626  001148  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12627  00114A  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12628  00114C  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12629                           
 12630                           ; BSR set to: 0
 12631                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
 12632  00114E  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 12633                           
 12634                           ; BSR set to: 0
 12635                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
 12636  001152  0E07               	movlw	7
 12637  001154  0100               	movlb	0	; () banked
 12638  001156  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12639  001158  0100               	movlb	0	; () banked
 12640  00115A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12641  00115C  0E00               	movlw	0
 12642  00115E  0100               	movlb	0	; () banked
 12643  001160  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12644  001162  0100               	movlb	0	; () banked
 12645  001164  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12646  001166  0E00               	movlw	0
 12647  001168  0100               	movlb	0	; () banked
 12648  00116A  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12649  00116C  0100               	movlb	0	; () banked
 12650  00116E  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12651  001170  0E00               	movlw	0
 12652  001172  0100               	movlb	0	; () banked
 12653  001174  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12654  001176  0100               	movlb	0	; () banked
 12655  001178  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12656                           
 12657                           ; BSR set to: 0
 12658                           ;inc\CANlib.h: 826: tamp = tamp << 5;
 12659  00117A  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12660  00117E  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12661  001182  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12662  001186  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12663  00118A  0E05               	movlw	5
 12664  00118C                     u5925:
 12665  00118C  90D8               	bcf	status,0,c
 12666  00118E  0100               	movlb	0	; () banked
 12667  001190  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12668  001192  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12669  001194  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12670  001196  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12671  001198  2EE8               	decfsz	wreg,f,c
 12672  00119A  D7F8               	goto	u5925
 12673  00119C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12674  0011A0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12675  0011A4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12676  0011A8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12677                           
 12678                           ; BSR set to: 0
 12679                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
 12680  0011AC  C081  FF15         	movff	CANSetFilter@tamp,3861	;volatile
 12681  0011B0                     l5073:
 12682                           
 12683                           ; BSR set to: 0
 12684                           ;inc\CANlib.h: 828: }
 12685                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
 12686  0011B0  0100               	movlb	0	; () banked
 12687  0011B2  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 12688  0011B4  0100               	movlb	0	; () banked
 12689  0011B6  A4D8               	btfss	status,2,c
 12690  0011B8  D089               	goto	l5107
 12691                           
 12692                           ; BSR set to: 0
 12693  0011BA  0EF7               	movlw	247
 12694  0011BC  0100               	movlb	0	; () banked
 12695  0011BE  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 12696  0011C0  A4D8               	btfss	status,2,c
 12697  0011C2  D084               	goto	l5107
 12698                           
 12699                           ; BSR set to: 0
 12700                           ;inc\CANlib.h: 832: {
 12701                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
 12702  0011C4  010F               	movlb	15	; () banked
 12703  0011C6  8701               	bsf	1,3,b	;volatile
 12704                           
 12705                           ; BSR set to: 15
 12706                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
 12707  0011C8  0100               	movlb	0	; () banked
 12708  0011CA  5177               	movf	CANSetFilter@filter& (0+255),w,b
 12709  0011CC  0100               	movlb	0	; () banked
 12710  0011CE  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12711  0011D0  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12712  0011D2  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12713  0011D4  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12714                           
 12715                           ; BSR set to: 0
 12716                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
 12717  0011D6  C081  FF03         	movff	CANSetFilter@tamp,3843	;volatile
 12718                           
 12719                           ; BSR set to: 0
 12720                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
 12721  0011DA  0E00               	movlw	0
 12722  0011DC  0100               	movlb	0	; () banked
 12723  0011DE  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12724  0011E0  0100               	movlb	0	; () banked
 12725  0011E2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12726  0011E4  0EFF               	movlw	255
 12727  0011E6  0100               	movlb	0	; () banked
 12728  0011E8  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12729  0011EA  0100               	movlb	0	; () banked
 12730  0011EC  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12731  0011EE  0E00               	movlw	0
 12732  0011F0  0100               	movlb	0	; () banked
 12733  0011F2  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12734  0011F4  0100               	movlb	0	; () banked
 12735  0011F6  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12736  0011F8  0E00               	movlw	0
 12737  0011FA  0100               	movlb	0	; () banked
 12738  0011FC  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12739  0011FE  0100               	movlb	0	; () banked
 12740  001200  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12741                           
 12742                           ; BSR set to: 0
 12743                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
 12744  001202  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12745  001206  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12746  00120A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12747  00120E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12748  001212  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 12749  001216  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 12750  00121A  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 12751  00121E  0100               	movlb	0	; () banked
 12752  001220  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 12753  001222  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12754  001226  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12755  00122A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12756  00122E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12757                           
 12758                           ; BSR set to: 0
 12759                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
 12760  001232  C081  FF02         	movff	CANSetFilter@tamp,3842	;volatile
 12761                           
 12762                           ; BSR set to: 0
 12763                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
 12764  001236  0100               	movlb	0	; () banked
 12765  001238  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 12766  00123A  D003               	goto	l463
 12767                           
 12768                           ; BSR set to: 0
 12769                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
 12770  00123C  010F               	movlb	15	; () banked
 12771  00123E  8101               	bsf	1,0,b	;volatile
 12772  001240  D002               	goto	l464
 12773  001242                     l463:
 12774                           
 12775                           ; BSR set to: 0
 12776                           ;inc\CANlib.h: 844: else
 12777                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
 12778  001242  010F               	movlb	15	; () banked
 12779  001244  9101               	bcf	1,0,b	;volatile
 12780  001246                     l464:
 12781                           
 12782                           ; BSR set to: 15
 12783                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
 12784  001246  0100               	movlb	0	; () banked
 12785  001248  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 12786  00124A  D003               	goto	l465
 12787                           
 12788                           ; BSR set to: 0
 12789                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
 12790  00124C  010F               	movlb	15	; () banked
 12791  00124E  8301               	bsf	1,1,b	;volatile
 12792  001250  D002               	goto	l466
 12793  001252                     l465:
 12794                           
 12795                           ; BSR set to: 0
 12796                           ;inc\CANlib.h: 849: else
 12797                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
 12798  001252  010F               	movlb	15	; () banked
 12799  001254  9301               	bcf	1,1,b	;volatile
 12800  001256                     l466:
 12801                           
 12802                           ; BSR set to: 15
 12803                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
 12804  001256  0100               	movlb	0	; () banked
 12805  001258  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 12806  00125A  D003               	goto	l467
 12807                           
 12808                           ; BSR set to: 0
 12809                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
 12810  00125C  010F               	movlb	15	; () banked
 12811  00125E  8B01               	bsf	1,5,b	;volatile
 12812  001260  D002               	goto	l468
 12813  001262                     l467:
 12814                           
 12815                           ; BSR set to: 0
 12816                           ;inc\CANlib.h: 854: else
 12817                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
 12818  001262  010F               	movlb	15	; () banked
 12819  001264  9B01               	bcf	1,5,b	;volatile
 12820  001266                     l468:
 12821                           
 12822                           ; BSR set to: 15
 12823                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
 12824  001266  0100               	movlb	0	; () banked
 12825  001268  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 12826  00126A  D003               	goto	l469
 12827                           
 12828                           ; BSR set to: 0
 12829                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
 12830  00126C  010F               	movlb	15	; () banked
 12831  00126E  8D01               	bsf	1,6,b	;volatile
 12832  001270  D002               	goto	l470
 12833  001272                     l469:
 12834                           
 12835                           ; BSR set to: 0
 12836                           ;inc\CANlib.h: 859: else
 12837                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
 12838  001272  010F               	movlb	15	; () banked
 12839  001274  9D01               	bcf	1,6,b	;volatile
 12840  001276                     l470:
 12841                           
 12842                           ; BSR set to: 15
 12843                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
 12844  001276  0100               	movlb	0	; () banked
 12845  001278  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 12846  00127A  D003               	goto	l471
 12847                           
 12848                           ; BSR set to: 0
 12849                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
 12850  00127C  010F               	movlb	15	; () banked
 12851  00127E  8F01               	bsf	1,7,b	;volatile
 12852  001280  D002               	goto	l5101
 12853  001282                     l471:
 12854                           
 12855                           ; BSR set to: 0
 12856                           ;inc\CANlib.h: 864: else
 12857                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
 12858  001282  010F               	movlb	15	; () banked
 12859  001284  9F01               	bcf	1,7,b	;volatile
 12860  001286                     l5101:
 12861                           
 12862                           ; BSR set to: 15
 12863                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
 12864  001286  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12865  00128A  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12866  00128E  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12867  001292  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12868  001296  0E16               	movlw	22
 12869  001298  D006               	goto	u6000
 12870  00129A                     u6005:
 12871  00129A  0100               	movlb	0	; () banked
 12872  00129C  90D8               	bcf	status,0,c
 12873  00129E  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12874  0012A0  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12875  0012A2  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12876  0012A4  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12877  0012A6                     u6000:
 12878  0012A6  2EE8               	decfsz	wreg,f,c
 12879  0012A8  D7F8               	goto	u6005
 12880  0012AA  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12881  0012AE  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12882  0012B2  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12883  0012B6  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12884                           
 12885                           ; BSR set to: 0
 12886                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
 12887  0012BA  0100               	movlb	0	; () banked
 12888  0012BC  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12889  0012BE  0100               	movlb	0	; () banked
 12890  0012C0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12891  0012C2  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12892  0012C4  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12893  0012C6  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12894                           
 12895                           ; BSR set to: 0
 12896                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
 12897  0012C8  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 12898  0012CC                     l5107:
 12899                           
 12900                           ; BSR set to: 0
 12901                           ;inc\CANlib.h: 870: }
 12902                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
 12903  0012CC  0100               	movlb	0	; () banked
 12904  0012CE  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 12905  0012D0  A4D8               	btfss	status,2,c
 12906  0012D2  D089               	goto	l5141
 12907                           
 12908                           ; BSR set to: 0
 12909  0012D4  0EF7               	movlw	247
 12910  0012D6  0100               	movlb	0	; () banked
 12911  0012D8  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 12912  0012DA  A4D8               	btfss	status,2,c
 12913  0012DC  D084               	goto	l5141
 12914                           
 12915                           ; BSR set to: 0
 12916                           ;inc\CANlib.h: 873: {
 12917                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
 12918  0012DE  010F               	movlb	15	; () banked
 12919  0012E0  8705               	bsf	5,3,b	;volatile
 12920                           
 12921                           ; BSR set to: 15
 12922                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
 12923  0012E2  0100               	movlb	0	; () banked
 12924  0012E4  5177               	movf	CANSetFilter@filter& (0+255),w,b
 12925  0012E6  0100               	movlb	0	; () banked
 12926  0012E8  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12927  0012EA  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12928  0012EC  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12929  0012EE  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12930                           
 12931                           ; BSR set to: 0
 12932                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
 12933  0012F0  C081  FF07         	movff	CANSetFilter@tamp,3847	;volatile
 12934                           
 12935                           ; BSR set to: 0
 12936                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
 12937  0012F4  0E00               	movlw	0
 12938  0012F6  0100               	movlb	0	; () banked
 12939  0012F8  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12940  0012FA  0100               	movlb	0	; () banked
 12941  0012FC  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12942  0012FE  0EFF               	movlw	255
 12943  001300  0100               	movlb	0	; () banked
 12944  001302  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12945  001304  0100               	movlb	0	; () banked
 12946  001306  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12947  001308  0E00               	movlw	0
 12948  00130A  0100               	movlb	0	; () banked
 12949  00130C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12950  00130E  0100               	movlb	0	; () banked
 12951  001310  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12952  001312  0E00               	movlw	0
 12953  001314  0100               	movlb	0	; () banked
 12954  001316  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12955  001318  0100               	movlb	0	; () banked
 12956  00131A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12957                           
 12958                           ; BSR set to: 0
 12959                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
 12960  00131C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12961  001320  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12962  001324  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12963  001328  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12964  00132C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 12965  001330  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 12966  001334  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 12967  001338  0100               	movlb	0	; () banked
 12968  00133A  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 12969  00133C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12970  001340  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12971  001344  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12972  001348  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12973                           
 12974                           ; BSR set to: 0
 12975                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
 12976  00134C  C081  FF06         	movff	CANSetFilter@tamp,3846	;volatile
 12977                           
 12978                           ; BSR set to: 0
 12979                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
 12980  001350  0100               	movlb	0	; () banked
 12981  001352  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 12982  001354  D003               	goto	l474
 12983                           
 12984                           ; BSR set to: 0
 12985                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
 12986  001356  010F               	movlb	15	; () banked
 12987  001358  8105               	bsf	5,0,b	;volatile
 12988  00135A  D002               	goto	l475
 12989  00135C                     l474:
 12990                           
 12991                           ; BSR set to: 0
 12992                           ;inc\CANlib.h: 885: else
 12993                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
 12994  00135C  010F               	movlb	15	; () banked
 12995  00135E  9105               	bcf	5,0,b	;volatile
 12996  001360                     l475:
 12997                           
 12998                           ; BSR set to: 15
 12999                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
 13000  001360  0100               	movlb	0	; () banked
 13001  001362  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13002  001364  D003               	goto	l476
 13003                           
 13004                           ; BSR set to: 0
 13005                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
 13006  001366  010F               	movlb	15	; () banked
 13007  001368  8305               	bsf	5,1,b	;volatile
 13008  00136A  D002               	goto	l477
 13009  00136C                     l476:
 13010                           
 13011                           ; BSR set to: 0
 13012                           ;inc\CANlib.h: 890: else
 13013                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
 13014  00136C  010F               	movlb	15	; () banked
 13015  00136E  9305               	bcf	5,1,b	;volatile
 13016  001370                     l477:
 13017                           
 13018                           ; BSR set to: 15
 13019                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
 13020  001370  0100               	movlb	0	; () banked
 13021  001372  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13022  001374  D003               	goto	l478
 13023                           
 13024                           ; BSR set to: 0
 13025                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
 13026  001376  010F               	movlb	15	; () banked
 13027  001378  8B05               	bsf	5,5,b	;volatile
 13028  00137A  D002               	goto	l479
 13029  00137C                     l478:
 13030                           
 13031                           ; BSR set to: 0
 13032                           ;inc\CANlib.h: 895: else
 13033                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
 13034  00137C  010F               	movlb	15	; () banked
 13035  00137E  9B05               	bcf	5,5,b	;volatile
 13036  001380                     l479:
 13037                           
 13038                           ; BSR set to: 15
 13039                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
 13040  001380  0100               	movlb	0	; () banked
 13041  001382  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13042  001384  D003               	goto	l480
 13043                           
 13044                           ; BSR set to: 0
 13045                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
 13046  001386  010F               	movlb	15	; () banked
 13047  001388  8D05               	bsf	5,6,b	;volatile
 13048  00138A  D002               	goto	l481
 13049  00138C                     l480:
 13050                           
 13051                           ; BSR set to: 0
 13052                           ;inc\CANlib.h: 900: else
 13053                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
 13054  00138C  010F               	movlb	15	; () banked
 13055  00138E  9D05               	bcf	5,6,b	;volatile
 13056  001390                     l481:
 13057                           
 13058                           ; BSR set to: 15
 13059                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
 13060  001390  0100               	movlb	0	; () banked
 13061  001392  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13062  001394  D003               	goto	l482
 13063                           
 13064                           ; BSR set to: 0
 13065                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
 13066  001396  010F               	movlb	15	; () banked
 13067  001398  8F05               	bsf	5,7,b	;volatile
 13068  00139A  D002               	goto	l5135
 13069  00139C                     l482:
 13070                           
 13071                           ; BSR set to: 0
 13072                           ;inc\CANlib.h: 905: else
 13073                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
 13074  00139C  010F               	movlb	15	; () banked
 13075  00139E  9F05               	bcf	5,7,b	;volatile
 13076  0013A0                     l5135:
 13077                           
 13078                           ; BSR set to: 15
 13079                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
 13080  0013A0  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13081  0013A4  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13082  0013A8  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13083  0013AC  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13084  0013B0  0E16               	movlw	22
 13085  0013B2  D006               	goto	u6080
 13086  0013B4                     u6085:
 13087  0013B4  0100               	movlb	0	; () banked
 13088  0013B6  90D8               	bcf	status,0,c
 13089  0013B8  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13090  0013BA  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13091  0013BC  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13092  0013BE  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13093  0013C0                     u6080:
 13094  0013C0  2EE8               	decfsz	wreg,f,c
 13095  0013C2  D7F8               	goto	u6085
 13096  0013C4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13097  0013C8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13098  0013CC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13099  0013D0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13100                           
 13101                           ; BSR set to: 0
 13102                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
 13103  0013D4  0100               	movlb	0	; () banked
 13104  0013D6  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13105  0013D8  0100               	movlb	0	; () banked
 13106  0013DA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13107  0013DC  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13108  0013DE  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13109  0013E0  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13110                           
 13111                           ; BSR set to: 0
 13112                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
 13113  0013E2  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 13114  0013E6                     l5141:
 13115                           
 13116                           ; BSR set to: 0
 13117                           ;inc\CANlib.h: 911: }
 13118                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
 13119  0013E6  0E02               	movlw	2
 13120  0013E8  0100               	movlb	0	; () banked
 13121  0013EA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13122  0013EC  A4D8               	btfss	status,2,c
 13123  0013EE  D089               	goto	l5175
 13124                           
 13125                           ; BSR set to: 0
 13126  0013F0  0EF7               	movlw	247
 13127  0013F2  0100               	movlb	0	; () banked
 13128  0013F4  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13129  0013F6  A4D8               	btfss	status,2,c
 13130  0013F8  D084               	goto	l5175
 13131                           
 13132                           ; BSR set to: 0
 13133                           ;inc\CANlib.h: 915: {
 13134                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
 13135  0013FA  010F               	movlb	15	; () banked
 13136  0013FC  8709               	bsf	9,3,b	;volatile
 13137                           
 13138                           ; BSR set to: 15
 13139                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
 13140  0013FE  0100               	movlb	0	; () banked
 13141  001400  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13142  001402  0100               	movlb	0	; () banked
 13143  001404  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13144  001406  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13145  001408  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13146  00140A  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13147                           
 13148                           ; BSR set to: 0
 13149                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
 13150  00140C  C081  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
 13151                           
 13152                           ; BSR set to: 0
 13153                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
 13154  001410  0E00               	movlw	0
 13155  001412  0100               	movlb	0	; () banked
 13156  001414  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13157  001416  0100               	movlb	0	; () banked
 13158  001418  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13159  00141A  0EFF               	movlw	255
 13160  00141C  0100               	movlb	0	; () banked
 13161  00141E  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13162  001420  0100               	movlb	0	; () banked
 13163  001422  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13164  001424  0E00               	movlw	0
 13165  001426  0100               	movlb	0	; () banked
 13166  001428  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13167  00142A  0100               	movlb	0	; () banked
 13168  00142C  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13169  00142E  0E00               	movlw	0
 13170  001430  0100               	movlb	0	; () banked
 13171  001432  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13172  001434  0100               	movlb	0	; () banked
 13173  001436  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13174                           
 13175                           ; BSR set to: 0
 13176                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
 13177  001438  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13178  00143C  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13179  001440  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13180  001444  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13181  001448  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13182  00144C  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13183  001450  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13184  001454  0100               	movlb	0	; () banked
 13185  001456  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13186  001458  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13187  00145C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13188  001460  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13189  001464  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13190                           
 13191                           ; BSR set to: 0
 13192                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
 13193  001468  C081  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
 13194                           
 13195                           ; BSR set to: 0
 13196                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
 13197  00146C  0100               	movlb	0	; () banked
 13198  00146E  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13199  001470  D003               	goto	l485
 13200                           
 13201                           ; BSR set to: 0
 13202                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
 13203  001472  010F               	movlb	15	; () banked
 13204  001474  8109               	bsf	9,0,b	;volatile
 13205  001476  D002               	goto	l486
 13206  001478                     l485:
 13207                           
 13208                           ; BSR set to: 0
 13209                           ;inc\CANlib.h: 927: else
 13210                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
 13211  001478  010F               	movlb	15	; () banked
 13212  00147A  9109               	bcf	9,0,b	;volatile
 13213  00147C                     l486:
 13214                           
 13215                           ; BSR set to: 15
 13216                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
 13217  00147C  0100               	movlb	0	; () banked
 13218  00147E  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13219  001480  D003               	goto	l487
 13220                           
 13221                           ; BSR set to: 0
 13222                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
 13223  001482  010F               	movlb	15	; () banked
 13224  001484  8309               	bsf	9,1,b	;volatile
 13225  001486  D002               	goto	l488
 13226  001488                     l487:
 13227                           
 13228                           ; BSR set to: 0
 13229                           ;inc\CANlib.h: 932: else
 13230                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
 13231  001488  010F               	movlb	15	; () banked
 13232  00148A  9309               	bcf	9,1,b	;volatile
 13233  00148C                     l488:
 13234                           
 13235                           ; BSR set to: 15
 13236                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
 13237  00148C  0100               	movlb	0	; () banked
 13238  00148E  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13239  001490  D003               	goto	l489
 13240                           
 13241                           ; BSR set to: 0
 13242                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
 13243  001492  010F               	movlb	15	; () banked
 13244  001494  8B09               	bsf	9,5,b	;volatile
 13245  001496  D002               	goto	l490
 13246  001498                     l489:
 13247                           
 13248                           ; BSR set to: 0
 13249                           ;inc\CANlib.h: 937: else
 13250                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
 13251  001498  010F               	movlb	15	; () banked
 13252  00149A  9B09               	bcf	9,5,b	;volatile
 13253  00149C                     l490:
 13254                           
 13255                           ; BSR set to: 15
 13256                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
 13257  00149C  0100               	movlb	0	; () banked
 13258  00149E  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13259  0014A0  D003               	goto	l491
 13260                           
 13261                           ; BSR set to: 0
 13262                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
 13263  0014A2  010F               	movlb	15	; () banked
 13264  0014A4  8D09               	bsf	9,6,b	;volatile
 13265  0014A6  D002               	goto	l492
 13266  0014A8                     l491:
 13267                           
 13268                           ; BSR set to: 0
 13269                           ;inc\CANlib.h: 942: else
 13270                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
 13271  0014A8  010F               	movlb	15	; () banked
 13272  0014AA  9D09               	bcf	9,6,b	;volatile
 13273  0014AC                     l492:
 13274                           
 13275                           ; BSR set to: 15
 13276                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
 13277  0014AC  0100               	movlb	0	; () banked
 13278  0014AE  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13279  0014B0  D003               	goto	l493
 13280                           
 13281                           ; BSR set to: 0
 13282                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
 13283  0014B2  010F               	movlb	15	; () banked
 13284  0014B4  8F09               	bsf	9,7,b	;volatile
 13285  0014B6  D002               	goto	l5169
 13286  0014B8                     l493:
 13287                           
 13288                           ; BSR set to: 0
 13289                           ;inc\CANlib.h: 947: else
 13290                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
 13291  0014B8  010F               	movlb	15	; () banked
 13292  0014BA  9F09               	bcf	9,7,b	;volatile
 13293  0014BC                     l5169:
 13294                           
 13295                           ; BSR set to: 15
 13296                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
 13297  0014BC  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13298  0014C0  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13299  0014C4  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13300  0014C8  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13301  0014CC  0E16               	movlw	22
 13302  0014CE  D006               	goto	u6160
 13303  0014D0                     u6165:
 13304  0014D0  0100               	movlb	0	; () banked
 13305  0014D2  90D8               	bcf	status,0,c
 13306  0014D4  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13307  0014D6  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13308  0014D8  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13309  0014DA  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13310  0014DC                     u6160:
 13311  0014DC  2EE8               	decfsz	wreg,f,c
 13312  0014DE  D7F8               	goto	u6165
 13313  0014E0  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13314  0014E4  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13315  0014E8  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13316  0014EC  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13317                           
 13318                           ; BSR set to: 0
 13319                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
 13320  0014F0  0100               	movlb	0	; () banked
 13321  0014F2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13322  0014F4  0100               	movlb	0	; () banked
 13323  0014F6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13324  0014F8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13325  0014FA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13326  0014FC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13327                           
 13328                           ; BSR set to: 0
 13329                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
 13330  0014FE  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 13331  001502                     l5175:
 13332                           
 13333                           ; BSR set to: 0
 13334                           ;inc\CANlib.h: 953: }
 13335                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
 13336  001502  0E03               	movlw	3
 13337  001504  0100               	movlb	0	; () banked
 13338  001506  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13339  001508  A4D8               	btfss	status,2,c
 13340  00150A  D089               	goto	l5209
 13341                           
 13342                           ; BSR set to: 0
 13343  00150C  0EF7               	movlw	247
 13344  00150E  0100               	movlb	0	; () banked
 13345  001510  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13346  001512  A4D8               	btfss	status,2,c
 13347  001514  D084               	goto	l5209
 13348                           
 13349                           ; BSR set to: 0
 13350                           ;inc\CANlib.h: 956: {
 13351                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
 13352  001516  010F               	movlb	15	; () banked
 13353  001518  870D               	bsf	13,3,b	;volatile
 13354                           
 13355                           ; BSR set to: 15
 13356                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
 13357  00151A  0100               	movlb	0	; () banked
 13358  00151C  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13359  00151E  0100               	movlb	0	; () banked
 13360  001520  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13361  001522  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13362  001524  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13363  001526  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13364                           
 13365                           ; BSR set to: 0
 13366                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
 13367  001528  C081  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
 13368                           
 13369                           ; BSR set to: 0
 13370                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
 13371  00152C  0E00               	movlw	0
 13372  00152E  0100               	movlb	0	; () banked
 13373  001530  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13374  001532  0100               	movlb	0	; () banked
 13375  001534  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13376  001536  0EFF               	movlw	255
 13377  001538  0100               	movlb	0	; () banked
 13378  00153A  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13379  00153C  0100               	movlb	0	; () banked
 13380  00153E  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13381  001540  0E00               	movlw	0
 13382  001542  0100               	movlb	0	; () banked
 13383  001544  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13384  001546  0100               	movlb	0	; () banked
 13385  001548  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13386  00154A  0E00               	movlw	0
 13387  00154C  0100               	movlb	0	; () banked
 13388  00154E  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13389  001550  0100               	movlb	0	; () banked
 13390  001552  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13391                           
 13392                           ; BSR set to: 0
 13393                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
 13394  001554  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13395  001558  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13396  00155C  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13397  001560  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13398  001564  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13399  001568  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13400  00156C  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13401  001570  0100               	movlb	0	; () banked
 13402  001572  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13403  001574  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13404  001578  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13405  00157C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13406  001580  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13407                           
 13408                           ; BSR set to: 0
 13409                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
 13410  001584  C081  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
 13411                           
 13412                           ; BSR set to: 0
 13413                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
 13414  001588  0100               	movlb	0	; () banked
 13415  00158A  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13416  00158C  D003               	goto	l496
 13417                           
 13418                           ; BSR set to: 0
 13419                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
 13420  00158E  010F               	movlb	15	; () banked
 13421  001590  810D               	bsf	13,0,b	;volatile
 13422  001592  D002               	goto	l497
 13423  001594                     l496:
 13424                           
 13425                           ; BSR set to: 0
 13426                           ;inc\CANlib.h: 968: else
 13427                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
 13428  001594  010F               	movlb	15	; () banked
 13429  001596  910D               	bcf	13,0,b	;volatile
 13430  001598                     l497:
 13431                           
 13432                           ; BSR set to: 15
 13433                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
 13434  001598  0100               	movlb	0	; () banked
 13435  00159A  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13436  00159C  D003               	goto	l498
 13437                           
 13438                           ; BSR set to: 0
 13439                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
 13440  00159E  010F               	movlb	15	; () banked
 13441  0015A0  830D               	bsf	13,1,b	;volatile
 13442  0015A2  D002               	goto	l499
 13443  0015A4                     l498:
 13444                           
 13445                           ; BSR set to: 0
 13446                           ;inc\CANlib.h: 973: else
 13447                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
 13448  0015A4  010F               	movlb	15	; () banked
 13449  0015A6  930D               	bcf	13,1,b	;volatile
 13450  0015A8                     l499:
 13451                           
 13452                           ; BSR set to: 15
 13453                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
 13454  0015A8  0100               	movlb	0	; () banked
 13455  0015AA  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13456  0015AC  D003               	goto	l500
 13457                           
 13458                           ; BSR set to: 0
 13459                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
 13460  0015AE  010F               	movlb	15	; () banked
 13461  0015B0  8B0D               	bsf	13,5,b	;volatile
 13462  0015B2  D002               	goto	l501
 13463  0015B4                     l500:
 13464                           
 13465                           ; BSR set to: 0
 13466                           ;inc\CANlib.h: 978: else
 13467                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
 13468  0015B4  010F               	movlb	15	; () banked
 13469  0015B6  9B0D               	bcf	13,5,b	;volatile
 13470  0015B8                     l501:
 13471                           
 13472                           ; BSR set to: 15
 13473                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
 13474  0015B8  0100               	movlb	0	; () banked
 13475  0015BA  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13476  0015BC  D003               	goto	l502
 13477                           
 13478                           ; BSR set to: 0
 13479                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
 13480  0015BE  010F               	movlb	15	; () banked
 13481  0015C0  8D0D               	bsf	13,6,b	;volatile
 13482  0015C2  D002               	goto	l503
 13483  0015C4                     l502:
 13484                           
 13485                           ; BSR set to: 0
 13486                           ;inc\CANlib.h: 983: else
 13487                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
 13488  0015C4  010F               	movlb	15	; () banked
 13489  0015C6  9D0D               	bcf	13,6,b	;volatile
 13490  0015C8                     l503:
 13491                           
 13492                           ; BSR set to: 15
 13493                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
 13494  0015C8  0100               	movlb	0	; () banked
 13495  0015CA  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13496  0015CC  D003               	goto	l504
 13497                           
 13498                           ; BSR set to: 0
 13499                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
 13500  0015CE  010F               	movlb	15	; () banked
 13501  0015D0  8F0D               	bsf	13,7,b	;volatile
 13502  0015D2  D002               	goto	l5203
 13503  0015D4                     l504:
 13504                           
 13505                           ; BSR set to: 0
 13506                           ;inc\CANlib.h: 988: else
 13507                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
 13508  0015D4  010F               	movlb	15	; () banked
 13509  0015D6  9F0D               	bcf	13,7,b	;volatile
 13510  0015D8                     l5203:
 13511                           
 13512                           ; BSR set to: 15
 13513                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
 13514  0015D8  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13515  0015DC  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13516  0015E0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13517  0015E4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13518  0015E8  0E16               	movlw	22
 13519  0015EA  D006               	goto	u6240
 13520  0015EC                     u6245:
 13521  0015EC  0100               	movlb	0	; () banked
 13522  0015EE  90D8               	bcf	status,0,c
 13523  0015F0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13524  0015F2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13525  0015F4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13526  0015F6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13527  0015F8                     u6240:
 13528  0015F8  2EE8               	decfsz	wreg,f,c
 13529  0015FA  D7F8               	goto	u6245
 13530  0015FC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13531  001600  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13532  001604  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13533  001608  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13534                           
 13535                           ; BSR set to: 0
 13536                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
 13537  00160C  0100               	movlb	0	; () banked
 13538  00160E  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13539  001610  0100               	movlb	0	; () banked
 13540  001612  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13541  001614  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13542  001616  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13543  001618  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13544                           
 13545                           ; BSR set to: 0
 13546                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
 13547  00161A  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 13548  00161E                     l5209:
 13549                           
 13550                           ; BSR set to: 0
 13551                           ;inc\CANlib.h: 994: }
 13552                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
 13553  00161E  0E04               	movlw	4
 13554  001620  0100               	movlb	0	; () banked
 13555  001622  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13556  001624  A4D8               	btfss	status,2,c
 13557  001626  D089               	goto	l5243
 13558                           
 13559                           ; BSR set to: 0
 13560  001628  0EF7               	movlw	247
 13561  00162A  0100               	movlb	0	; () banked
 13562  00162C  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13563  00162E  A4D8               	btfss	status,2,c
 13564  001630  D084               	goto	l5243
 13565                           
 13566                           ; BSR set to: 0
 13567                           ;inc\CANlib.h: 997: {
 13568                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
 13569  001632  010F               	movlb	15	; () banked
 13570  001634  8711               	bsf	17,3,b	;volatile
 13571                           
 13572                           ; BSR set to: 15
 13573                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
 13574  001636  0100               	movlb	0	; () banked
 13575  001638  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13576  00163A  0100               	movlb	0	; () banked
 13577  00163C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13578  00163E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13579  001640  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13580  001642  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13581                           
 13582                           ; BSR set to: 0
 13583                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
 13584  001644  C081  FF13         	movff	CANSetFilter@tamp,3859	;volatile
 13585                           
 13586                           ; BSR set to: 0
 13587                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
 13588  001648  0E00               	movlw	0
 13589  00164A  0100               	movlb	0	; () banked
 13590  00164C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13591  00164E  0100               	movlb	0	; () banked
 13592  001650  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13593  001652  0EFF               	movlw	255
 13594  001654  0100               	movlb	0	; () banked
 13595  001656  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13596  001658  0100               	movlb	0	; () banked
 13597  00165A  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13598  00165C  0E00               	movlw	0
 13599  00165E  0100               	movlb	0	; () banked
 13600  001660  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13601  001662  0100               	movlb	0	; () banked
 13602  001664  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13603  001666  0E00               	movlw	0
 13604  001668  0100               	movlb	0	; () banked
 13605  00166A  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13606  00166C  0100               	movlb	0	; () banked
 13607  00166E  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13608                           
 13609                           ; BSR set to: 0
 13610                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
 13611  001670  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13612  001674  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13613  001678  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13614  00167C  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13615  001680  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13616  001684  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13617  001688  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13618  00168C  0100               	movlb	0	; () banked
 13619  00168E  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13620  001690  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13621  001694  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13622  001698  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13623  00169C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13624                           
 13625                           ; BSR set to: 0
 13626                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
 13627  0016A0  C081  FF12         	movff	CANSetFilter@tamp,3858	;volatile
 13628                           
 13629                           ; BSR set to: 0
 13630                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
 13631  0016A4  0100               	movlb	0	; () banked
 13632  0016A6  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13633  0016A8  D003               	goto	l507
 13634                           
 13635                           ; BSR set to: 0
 13636                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
 13637  0016AA  010F               	movlb	15	; () banked
 13638  0016AC  8111               	bsf	17,0,b	;volatile
 13639  0016AE  D002               	goto	l508
 13640  0016B0                     l507:
 13641                           
 13642                           ; BSR set to: 0
 13643                           ;inc\CANlib.h: 1009: else
 13644                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
 13645  0016B0  010F               	movlb	15	; () banked
 13646  0016B2  9111               	bcf	17,0,b	;volatile
 13647  0016B4                     l508:
 13648                           
 13649                           ; BSR set to: 15
 13650                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
 13651  0016B4  0100               	movlb	0	; () banked
 13652  0016B6  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13653  0016B8  D003               	goto	l509
 13654                           
 13655                           ; BSR set to: 0
 13656                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
 13657  0016BA  010F               	movlb	15	; () banked
 13658  0016BC  8311               	bsf	17,1,b	;volatile
 13659  0016BE  D002               	goto	l510
 13660  0016C0                     l509:
 13661                           
 13662                           ; BSR set to: 0
 13663                           ;inc\CANlib.h: 1014: else
 13664                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
 13665  0016C0  010F               	movlb	15	; () banked
 13666  0016C2  9311               	bcf	17,1,b	;volatile
 13667  0016C4                     l510:
 13668                           
 13669                           ; BSR set to: 15
 13670                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
 13671  0016C4  0100               	movlb	0	; () banked
 13672  0016C6  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13673  0016C8  D003               	goto	l511
 13674                           
 13675                           ; BSR set to: 0
 13676                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
 13677  0016CA  010F               	movlb	15	; () banked
 13678  0016CC  8B11               	bsf	17,5,b	;volatile
 13679  0016CE  D002               	goto	l512
 13680  0016D0                     l511:
 13681                           
 13682                           ; BSR set to: 0
 13683                           ;inc\CANlib.h: 1019: else
 13684                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
 13685  0016D0  010F               	movlb	15	; () banked
 13686  0016D2  9B11               	bcf	17,5,b	;volatile
 13687  0016D4                     l512:
 13688                           
 13689                           ; BSR set to: 15
 13690                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
 13691  0016D4  0100               	movlb	0	; () banked
 13692  0016D6  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13693  0016D8  D003               	goto	l513
 13694                           
 13695                           ; BSR set to: 0
 13696                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
 13697  0016DA  010F               	movlb	15	; () banked
 13698  0016DC  8D11               	bsf	17,6,b	;volatile
 13699  0016DE  D002               	goto	l514
 13700  0016E0                     l513:
 13701                           
 13702                           ; BSR set to: 0
 13703                           ;inc\CANlib.h: 1024: else
 13704                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
 13705  0016E0  010F               	movlb	15	; () banked
 13706  0016E2  9D11               	bcf	17,6,b	;volatile
 13707  0016E4                     l514:
 13708                           
 13709                           ; BSR set to: 15
 13710                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
 13711  0016E4  0100               	movlb	0	; () banked
 13712  0016E6  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13713  0016E8  D003               	goto	l515
 13714                           
 13715                           ; BSR set to: 0
 13716                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
 13717  0016EA  010F               	movlb	15	; () banked
 13718  0016EC  8F11               	bsf	17,7,b	;volatile
 13719  0016EE  D002               	goto	l5237
 13720  0016F0                     l515:
 13721                           
 13722                           ; BSR set to: 0
 13723                           ;inc\CANlib.h: 1029: else
 13724                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
 13725  0016F0  010F               	movlb	15	; () banked
 13726  0016F2  9F11               	bcf	17,7,b	;volatile
 13727  0016F4                     l5237:
 13728                           
 13729                           ; BSR set to: 15
 13730                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
 13731  0016F4  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13732  0016F8  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13733  0016FC  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13734  001700  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13735  001704  0E16               	movlw	22
 13736  001706  D006               	goto	u6320
 13737  001708                     u6325:
 13738  001708  0100               	movlb	0	; () banked
 13739  00170A  90D8               	bcf	status,0,c
 13740  00170C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13741  00170E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13742  001710  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13743  001712  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13744  001714                     u6320:
 13745  001714  2EE8               	decfsz	wreg,f,c
 13746  001716  D7F8               	goto	u6325
 13747  001718  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13748  00171C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13749  001720  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13750  001724  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13751                           
 13752                           ; BSR set to: 0
 13753                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
 13754  001728  0100               	movlb	0	; () banked
 13755  00172A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13756  00172C  0100               	movlb	0	; () banked
 13757  00172E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13758  001730  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13759  001732  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13760  001734  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13761                           
 13762                           ; BSR set to: 0
 13763                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
 13764  001736  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 13765  00173A                     l5243:
 13766                           
 13767                           ; BSR set to: 0
 13768                           ;inc\CANlib.h: 1035: }
 13769                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
 13770  00173A  0E05               	movlw	5
 13771  00173C  0100               	movlb	0	; () banked
 13772  00173E  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13773  001740  A4D8               	btfss	status,2,c
 13774  001742  0012               	return	
 13775                           
 13776                           ; BSR set to: 0
 13777  001744  0EF7               	movlw	247
 13778  001746  0100               	movlb	0	; () banked
 13779  001748  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13780  00174A  A4D8               	btfss	status,2,c
 13781  00174C  0012               	return	
 13782                           
 13783                           ; BSR set to: 0
 13784                           ;inc\CANlib.h: 1038: {
 13785                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
 13786  00174E  010F               	movlb	15	; () banked
 13787  001750  8715               	bsf	21,3,b	;volatile
 13788                           
 13789                           ; BSR set to: 15
 13790                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
 13791  001752  0100               	movlb	0	; () banked
 13792  001754  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13793  001756  0100               	movlb	0	; () banked
 13794  001758  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13795  00175A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13796  00175C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13797  00175E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13798                           
 13799                           ; BSR set to: 0
 13800                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
 13801  001760  C081  FF17         	movff	CANSetFilter@tamp,3863	;volatile
 13802                           
 13803                           ; BSR set to: 0
 13804                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
 13805  001764  0E00               	movlw	0
 13806  001766  0100               	movlb	0	; () banked
 13807  001768  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13808  00176A  0100               	movlb	0	; () banked
 13809  00176C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13810  00176E  0EFF               	movlw	255
 13811  001770  0100               	movlb	0	; () banked
 13812  001772  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13813  001774  0100               	movlb	0	; () banked
 13814  001776  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13815  001778  0E00               	movlw	0
 13816  00177A  0100               	movlb	0	; () banked
 13817  00177C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13818  00177E  0100               	movlb	0	; () banked
 13819  001780  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13820  001782  0E00               	movlw	0
 13821  001784  0100               	movlb	0	; () banked
 13822  001786  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13823  001788  0100               	movlb	0	; () banked
 13824  00178A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13825                           
 13826                           ; BSR set to: 0
 13827                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
 13828  00178C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13829  001790  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13830  001794  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13831  001798  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13832  00179C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13833  0017A0  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13834  0017A4  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13835  0017A8  0100               	movlb	0	; () banked
 13836  0017AA  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13837  0017AC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13838  0017B0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13839  0017B4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13840  0017B8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13841                           
 13842                           ; BSR set to: 0
 13843                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
 13844  0017BC  C081  FF16         	movff	CANSetFilter@tamp,3862	;volatile
 13845                           
 13846                           ; BSR set to: 0
 13847                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
 13848  0017C0  0100               	movlb	0	; () banked
 13849  0017C2  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13850  0017C4  D003               	goto	l518
 13851                           
 13852                           ; BSR set to: 0
 13853                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
 13854  0017C6  010F               	movlb	15	; () banked
 13855  0017C8  8115               	bsf	21,0,b	;volatile
 13856  0017CA  D002               	goto	l519
 13857  0017CC                     l518:
 13858                           
 13859                           ; BSR set to: 0
 13860                           ;inc\CANlib.h: 1050: else
 13861                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
 13862  0017CC  010F               	movlb	15	; () banked
 13863  0017CE  9115               	bcf	21,0,b	;volatile
 13864  0017D0                     l519:
 13865                           
 13866                           ; BSR set to: 15
 13867                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
 13868  0017D0  0100               	movlb	0	; () banked
 13869  0017D2  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13870  0017D4  D003               	goto	l520
 13871                           
 13872                           ; BSR set to: 0
 13873                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
 13874  0017D6  010F               	movlb	15	; () banked
 13875  0017D8  8315               	bsf	21,1,b	;volatile
 13876  0017DA  D002               	goto	l521
 13877  0017DC                     l520:
 13878                           
 13879                           ; BSR set to: 0
 13880                           ;inc\CANlib.h: 1055: else
 13881                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
 13882  0017DC  010F               	movlb	15	; () banked
 13883  0017DE  9315               	bcf	21,1,b	;volatile
 13884  0017E0                     l521:
 13885                           
 13886                           ; BSR set to: 15
 13887                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
 13888  0017E0  0100               	movlb	0	; () banked
 13889  0017E2  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13890  0017E4  D003               	goto	l522
 13891                           
 13892                           ; BSR set to: 0
 13893                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
 13894  0017E6  010F               	movlb	15	; () banked
 13895  0017E8  8B15               	bsf	21,5,b	;volatile
 13896  0017EA  D002               	goto	l523
 13897  0017EC                     l522:
 13898                           
 13899                           ; BSR set to: 0
 13900                           ;inc\CANlib.h: 1060: else
 13901                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
 13902  0017EC  010F               	movlb	15	; () banked
 13903  0017EE  9B15               	bcf	21,5,b	;volatile
 13904  0017F0                     l523:
 13905                           
 13906                           ; BSR set to: 15
 13907                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
 13908  0017F0  0100               	movlb	0	; () banked
 13909  0017F2  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13910  0017F4  D003               	goto	l524
 13911                           
 13912                           ; BSR set to: 0
 13913                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
 13914  0017F6  010F               	movlb	15	; () banked
 13915  0017F8  8D15               	bsf	21,6,b	;volatile
 13916  0017FA  D002               	goto	l525
 13917  0017FC                     l524:
 13918                           
 13919                           ; BSR set to: 0
 13920                           ;inc\CANlib.h: 1065: else
 13921                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
 13922  0017FC  010F               	movlb	15	; () banked
 13923  0017FE  9D15               	bcf	21,6,b	;volatile
 13924  001800                     l525:
 13925                           
 13926                           ; BSR set to: 15
 13927                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
 13928  001800  0100               	movlb	0	; () banked
 13929  001802  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13930  001804  D003               	goto	l526
 13931                           
 13932                           ; BSR set to: 0
 13933                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
 13934  001806  010F               	movlb	15	; () banked
 13935  001808  8F15               	bsf	21,7,b	;volatile
 13936  00180A  D002               	goto	l5271
 13937  00180C                     l526:
 13938                           
 13939                           ; BSR set to: 0
 13940                           ;inc\CANlib.h: 1070: else
 13941                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
 13942  00180C  010F               	movlb	15	; () banked
 13943  00180E  9F15               	bcf	21,7,b	;volatile
 13944  001810                     l5271:
 13945                           
 13946                           ; BSR set to: 15
 13947                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
 13948  001810  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13949  001814  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13950  001818  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13951  00181C  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13952  001820  0E16               	movlw	22
 13953  001822  D006               	goto	u6400
 13954  001824                     u6405:
 13955  001824  0100               	movlb	0	; () banked
 13956  001826  90D8               	bcf	status,0,c
 13957  001828  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13958  00182A  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13959  00182C  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13960  00182E  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13961  001830                     u6400:
 13962  001830  2EE8               	decfsz	wreg,f,c
 13963  001832  D7F8               	goto	u6405
 13964  001834  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13965  001838  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13966  00183C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13967  001840  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13968                           
 13969                           ; BSR set to: 0
 13970                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
 13971  001844  0100               	movlb	0	; () banked
 13972  001846  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13973  001848  0100               	movlb	0	; () banked
 13974  00184A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13975  00184C  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13976  00184E  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13977  001850  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13978                           
 13979                           ; BSR set to: 0
 13980                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
 13981  001852  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 13982  001856  0012               	return	
 13983  001858                     __end_of_CANSetFilter:
 13984                           	opt stack 0
 13985                           tblptru	equ	0xFF8
 13986                           tblptrh	equ	0xFF7
 13987                           tblptrl	equ	0xFF6
 13988                           tablat	equ	0xFF5
 13989                           prodh	equ	0xFF4
 13990                           prodl	equ	0xFF3
 13991                           intcon	equ	0xFF2
 13992                           intcon2	equ	0xFF1
 13993                           postinc0	equ	0xFEE
 13994                           wreg	equ	0xFE8
 13995                           postdec1	equ	0xFE5
 13996                           fsr1l	equ	0xFE1
 13997                           indf2	equ	0xFDF
 13998                           postinc2	equ	0xFDE
 13999                           postdec2	equ	0xFDD
 14000                           fsr2h	equ	0xFDA
 14001                           fsr2l	equ	0xFD9
 14002                           status	equ	0xFD8
 14003                           
 14004 ;; *************** function _CANOperationMode *****************
 14005 ;; Defined at:
 14006 ;;		line 206 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 14007 ;; Parameters:    Size  Location     Type
 14008 ;;  mode            1    wreg     enum E16307
 14009 ;; Auto vars:     Size  Location     Type
 14010 ;;  mode            1   23[BANK0 ] enum E16307
 14011 ;; Return value:  Size  Location     Type
 14012 ;;		None               void
 14013 ;; Registers used:
 14014 ;;		wreg, status,2, status,0
 14015 ;; Tracked objects:
 14016 ;;		On entry : 0/0
 14017 ;;		On exit  : 0/0
 14018 ;;		Unchanged: 0/0
 14019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14021 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14023 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14024 ;;Total ram usage:        1 bytes
 14025 ;; Hardware stack levels used:    1
 14026 ;; Hardware stack levels required when called:    4
 14027 ;; This function calls:
 14028 ;;		Nothing
 14029 ;; This function is called by:
 14030 ;;		_CANInitialize
 14031 ;; This function uses a non-reentrant model
 14032 ;;
 14033                           
 14034                           	psect	text33
 14035  005D6C                     __ptext33:
 14036                           	opt stack 0
 14037  005D6C                     _CANOperationMode:
 14038                           	opt stack 24
 14039                           
 14040                           ; BSR set to: 0
 14041                           ;incstack = 0
 14042                           ;CANOperationMode@mode stored from wreg
 14043  005D6C  0100               	movlb	0	; () banked
 14044  005D6E  6F77               	movwf	CANOperationMode@mode& (0+255),b
 14045                           
 14046                           ;inc\CANlib.h: 208: CANCON = mode;
 14047  005D70  C077  FF6F         	movff	CANOperationMode@mode,3951	;volatile
 14048  005D74                     l4867:
 14049  005D74  506E               	movf	3950,w,c	;volatile
 14050  005D76  0BE0               	andlw	224
 14051  005D78  0100               	movlb	0	; () banked
 14052  005D7A  1977               	xorwf	CANOperationMode@mode& (0+255),w,b
 14053  005D7C  B4D8               	btfsc	status,2,c
 14054  005D7E  0012               	return	
 14055  005D80  D7F9               	goto	l4867
 14056  005D82                     __end_of_CANOperationMode:
 14057                           	opt stack 0
 14058                           tblptru	equ	0xFF8
 14059                           tblptrh	equ	0xFF7
 14060                           tblptrl	equ	0xFF6
 14061                           tablat	equ	0xFF5
 14062                           prodh	equ	0xFF4
 14063                           prodl	equ	0xFF3
 14064                           intcon	equ	0xFF2
 14065                           intcon2	equ	0xFF1
 14066                           postinc0	equ	0xFEE
 14067                           wreg	equ	0xFE8
 14068                           postdec1	equ	0xFE5
 14069                           fsr1l	equ	0xFE1
 14070                           indf2	equ	0xFDF
 14071                           postinc2	equ	0xFDE
 14072                           postdec2	equ	0xFDD
 14073                           fsr2h	equ	0xFDA
 14074                           fsr2l	equ	0xFD9
 14075                           status	equ	0xFD8
 14076                           
 14077 ;; *************** function _can_interpreter *****************
 14078 ;; Defined at:
 14079 ;;		line 411 in file "parcheggio.c"
 14080 ;; Parameters:    Size  Location     Type
 14081 ;;		None
 14082 ;; Auto vars:     Size  Location     Type
 14083 ;;		None
 14084 ;; Return value:  Size  Location     Type
 14085 ;;		None               void
 14086 ;; Registers used:
 14087 ;;		wreg, status,2, status,0
 14088 ;; Tracked objects:
 14089 ;;		On entry : 0/0
 14090 ;;		On exit  : 0/0
 14091 ;;		Unchanged: 0/0
 14092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14095 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14096 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14097 ;;Total ram usage:        4 bytes
 14098 ;; Hardware stack levels used:    1
 14099 ;; Hardware stack levels required when called:    4
 14100 ;; This function calls:
 14101 ;;		Nothing
 14102 ;; This function is called by:
 14103 ;;		_main
 14104 ;; This function uses a non-reentrant model
 14105 ;;
 14106                           
 14107                           	psect	text34
 14108  005B22                     __ptext34:
 14109                           	opt stack 0
 14110  005B22                     _can_interpreter:
 14111                           	opt stack 26
 14112                           
 14113                           ;parcheggio.c: 412: left_speed = data_speed_rx[1];
 14114                           
 14115                           ; BSR set to: 0
 14116                           ;incstack = 0
 14117  005B22  C109  F038         	movff	_data_speed_rx+1,_left_speed
 14118  005B26  6A39               	clrf	_left_speed+1,c
 14119                           
 14120                           ;parcheggio.c: 413: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 14121  005B28  5038               	movf	_left_speed,w,c
 14122  005B2A  0100               	movlb	0	; () banked
 14123  005B2C  6F77               	movwf	??_can_interpreter& (0+255),b
 14124  005B2E  0101               	movlb	1	; () banked
 14125  005B30  5108               	movf	_data_speed_rx& (0+255),w,b
 14126  005B32  6E38               	movwf	_left_speed,c
 14127  005B34  C077  F039         	movff	??_can_interpreter,_left_speed+1
 14128                           
 14129                           ; BSR set to: 1
 14130                           ;parcheggio.c: 414: right_speed = data_speed_rx[3];
 14131  005B38  C10B  F03C         	movff	_data_speed_rx+3,_right_speed
 14132  005B3C  6A3D               	clrf	_right_speed+1,c
 14133                           
 14134                           ;parcheggio.c: 415: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 14135  005B3E  503C               	movf	_right_speed,w,c
 14136  005B40  0100               	movlb	0	; () banked
 14137  005B42  6F77               	movwf	??_can_interpreter& (0+255),b
 14138  005B44  0101               	movlb	1	; () banked
 14139  005B46  510A               	movf	(_data_speed_rx+2)& (0+255),w,b
 14140  005B48  6E3C               	movwf	_right_speed,c
 14141  005B4A  C077  F03D         	movff	??_can_interpreter,_right_speed+1
 14142                           
 14143                           ; BSR set to: 1
 14144                           ;parcheggio.c: 416: actual_speed = (right_speed + left_speed) / 2;
 14145  005B4E  5038               	movf	_left_speed,w,c
 14146  005B50  243C               	addwf	_right_speed,w,c
 14147  005B52  0100               	movlb	0	; () banked
 14148  005B54  6F77               	movwf	??_can_interpreter& (0+255),b
 14149  005B56  5039               	movf	_left_speed+1,w,c
 14150  005B58  203D               	addwfc	_right_speed+1,w,c
 14151  005B5A  0100               	movlb	0	; () banked
 14152  005B5C  6F78               	movwf	(??_can_interpreter+1)& (0+255),b
 14153  005B5E  90D8               	bcf	status,0,c
 14154  005B60  0100               	movlb	0	; () banked
 14155  005B62  3178               	rrcf	(??_can_interpreter+1)& (0+255),w,b
 14156  005B64  0100               	movlb	0	; () banked
 14157  005B66  6F79               	movwf	(??_can_interpreter+2)& (0+255),b
 14158  005B68  0100               	movlb	0	; () banked
 14159  005B6A  3177               	rrcf	??_can_interpreter& (0+255),w,b
 14160  005B6C  0100               	movlb	0	; () banked
 14161  005B6E  6FDF               	movwf	_actual_speed& (0+255),b
 14162  005B70  C079  F0E0         	movff	??_can_interpreter+2,_actual_speed+1
 14163                           
 14164                           ; BSR set to: 0
 14165  005B74  0012               	return		;funcret
 14166  005B76                     __end_of_can_interpreter:
 14167                           	opt stack 0
 14168                           tblptru	equ	0xFF8
 14169                           tblptrh	equ	0xFF7
 14170                           tblptrl	equ	0xFF6
 14171                           tablat	equ	0xFF5
 14172                           prodh	equ	0xFF4
 14173                           prodl	equ	0xFF3
 14174                           intcon	equ	0xFF2
 14175                           intcon2	equ	0xFF1
 14176                           postinc0	equ	0xFEE
 14177                           wreg	equ	0xFE8
 14178                           postdec1	equ	0xFE5
 14179                           fsr1l	equ	0xFE1
 14180                           indf2	equ	0xFDF
 14181                           postinc2	equ	0xFDE
 14182                           postdec2	equ	0xFDD
 14183                           fsr2h	equ	0xFDA
 14184                           fsr2l	equ	0xFD9
 14185                           status	equ	0xFD8
 14186                           
 14187 ;; *************** function _ISR_Bassa *****************
 14188 ;; Defined at:
 14189 ;;		line 109 in file "parcheggio.c"
 14190 ;; Parameters:    Size  Location     Type
 14191 ;;		None
 14192 ;; Auto vars:     Size  Location     Type
 14193 ;;  i               1   34[COMRAM] unsigned char 
 14194 ;;  gigi            1   33[COMRAM] unsigned char 
 14195 ;; Return value:  Size  Location     Type
 14196 ;;		None               void
 14197 ;; Registers used:
 14198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14199 ;; Tracked objects:
 14200 ;;		On entry : 0/0
 14201 ;;		On exit  : 0/0
 14202 ;;		Unchanged: 0/0
 14203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14205 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14206 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14207 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14208 ;;Total ram usage:       23 bytes
 14209 ;; Hardware stack levels used:    1
 14210 ;; Hardware stack levels required when called:    3
 14211 ;; This function calls:
 14212 ;;		_CANreceiveMessage
 14213 ;; This function is called by:
 14214 ;;		Interrupt level 1
 14215 ;; This function uses a non-reentrant model
 14216 ;;
 14217                           
 14218                           	psect	intcodelo
 14219  000018                     __pintcodelo:
 14220                           	opt stack 0
 14221  000018                     _ISR_Bassa:
 14222                           	opt stack 21
 14223                           
 14224                           ; BSR set to: 0
 14225                           ;incstack = 0
 14226  000018  8048               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 14227  00001A  CFD8 F011          	movff	status,??_ISR_Bassa+4
 14228  00001E  CFE8 F012          	movff	wreg,??_ISR_Bassa+5
 14229  000022  CFE0 F013          	movff	bsr,??_ISR_Bassa+6
 14230  000026  CFFA F014          	movff	pclath,??_ISR_Bassa+7
 14231  00002A  CFFB F015          	movff	pclatu,??_ISR_Bassa+8
 14232  00002E  CFE9 F016          	movff	fsr0l,??_ISR_Bassa+9
 14233  000032  CFEA F017          	movff	fsr0h,??_ISR_Bassa+10
 14234  000036  CFE1 F018          	movff	fsr1l,??_ISR_Bassa+11
 14235  00003A  CFE2 F019          	movff	fsr1h,??_ISR_Bassa+12
 14236  00003E  CFD9 F01A          	movff	fsr2l,??_ISR_Bassa+13
 14237  000042  CFDA F01B          	movff	fsr2h,??_ISR_Bassa+14
 14238  000046  CFF3 F01C          	movff	prodl,??_ISR_Bassa+15
 14239  00004A  CFF4 F01D          	movff	prodh,??_ISR_Bassa+16
 14240  00004E  CFF6 F01E          	movff	tblptrl,??_ISR_Bassa+17
 14241  000052  CFF7 F01F          	movff	tblptrh,??_ISR_Bassa+18
 14242  000056  CFF8 F020          	movff	tblptru,??_ISR_Bassa+19
 14243  00005A  CFF5 F021          	movff	tablat,??_ISR_Bassa+20
 14244                           
 14245                           ;parcheggio.c: 111: if (INTCONbits.TMR0IF == 1) {
 14246  00005E  A4F2               	btfss	intcon,2,c	;volatile
 14247  000060  D036               	goto	i1l5945
 14248                           
 14249                           ;parcheggio.c: 112: INTCONbits.INT0IE = 0;
 14250  000062  98F2               	bcf	intcon,4,c	;volatile
 14251                           
 14252                           ;parcheggio.c: 113: T0CONbits.TMR0ON = 0;
 14253  000064  9ED5               	bcf	4053,7,c	;volatile
 14254                           
 14255                           ;parcheggio.c: 114: TMR0H = 0x34;
 14256  000066  0E34               	movlw	52
 14257  000068  6ED7               	movwf	4055,c	;volatile
 14258                           
 14259                           ;parcheggio.c: 115: TMR0L = 0xE0;
 14260  00006A  0EE0               	movlw	224
 14261  00006C  6ED6               	movwf	4054,c	;volatile
 14262                           
 14263                           ;parcheggio.c: 116: T0CONbits.TMR0ON = 1;
 14264  00006E  8ED5               	bsf	4053,7,c	;volatile
 14265                           
 14266                           ;parcheggio.c: 117: if (distance_error == 1) {
 14267  000070  A644               	btfss	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14268  000072  D00C               	goto	i1l5915
 14269                           
 14270                           ;parcheggio.c: 118: sensor_distance[MUX_index] = 5000;
 14271  000074  5040               	movf	_MUX_index,w,c	;volatile
 14272  000076  0D02               	mullw	2
 14273  000078  0E24               	movlw	low _sensor_distance
 14274  00007A  24F3               	addwf	prodl,w,c
 14275  00007C  6ED9               	movwf	fsr2l,c
 14276  00007E  0E00               	movlw	high _sensor_distance
 14277  000080  20F4               	addwfc	prodh,w,c
 14278  000082  6EDA               	movwf	fsr2h,c
 14279  000084  0E88               	movlw	136
 14280  000086  6EDE               	movwf	postinc2,c
 14281  000088  0E13               	movlw	19
 14282  00008A  6EDD               	movwf	postdec2,c
 14283  00008C                     i1l5915:
 14284                           
 14285                           ;parcheggio.c: 119: }
 14286                           ;parcheggio.c: 120: MUX_index++;
 14287  00008C  2A40               	incf	_MUX_index,f,c	;volatile
 14288                           
 14289                           ;parcheggio.c: 121: if (MUX_index == 8) {
 14290  00008E  0E08               	movlw	8
 14291  000090  1840               	xorwf	_MUX_index,w,c	;volatile
 14292  000092  A4D8               	btfss	status,2,c
 14293  000094  D002               	goto	i1l695
 14294                           
 14295                           ;parcheggio.c: 122: MUX_index = 0;
 14296  000096  0E00               	movlw	0
 14297  000098  6E40               	movwf	_MUX_index,c	;volatile
 14298  00009A                     i1l695:
 14299                           
 14300                           ;parcheggio.c: 123: }
 14301                           ;parcheggio.c: 125: unsigned char gigi = 0;
 14302  00009A  0E00               	movlw	0
 14303  00009C  6E22               	movwf	ISR_Bassa@gigi,c
 14304                           
 14305                           ;parcheggio.c: 126: gigi = MUX_select[MUX_index];
 14306  00009E  5040               	movf	_MUX_index,w,c	;volatile
 14307  0000A0  0D01               	mullw	1
 14308  0000A2  0E00               	movlw	low _MUX_select
 14309  0000A4  24F3               	addwf	prodl,w,c
 14310  0000A6  6ED9               	movwf	fsr2l,c
 14311  0000A8  0E01               	movlw	high _MUX_select
 14312  0000AA  20F4               	addwfc	prodh,w,c
 14313  0000AC  6EDA               	movwf	fsr2h,c
 14314  0000AE  50DF               	movf	indf2,w,c
 14315  0000B0  6E22               	movwf	ISR_Bassa@gigi,c
 14316                           
 14317                           ;parcheggio.c: 127: PORTA = gigi;
 14318  0000B2  C022  FF80         	movff	ISR_Bassa@gigi,3968	;volatile
 14319                           
 14320                           ;parcheggio.c: 128: TRISBbits.RB0 = 0;
 14321  0000B6  9093               	bcf	3987,0,c	;volatile
 14322                           
 14323                           ;parcheggio.c: 129: LATBbits.LATB0 = 1;
 14324  0000B8  808A               	bsf	3978,0,c	;volatile
 14325                           
 14326                           ;parcheggio.c: 130: _delay((unsigned long)((15)*(16000000/4000000.0)));
 14327  0000BA  0E14               	movlw	20
 14328  0000BC                     i1u907_27:
 14329  0000BC  2EE8               	decfsz	wreg,f,c
 14330  0000BE  D7FE               	goto	i1u907_27
 14331                           
 14332                           ;parcheggio.c: 131: distance_error = 1;
 14333  0000C0  8644               	bsf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14334                           
 14335                           ;parcheggio.c: 132: LATBbits.LATB0 = 0;
 14336  0000C2  908A               	bcf	3978,0,c	;volatile
 14337                           
 14338                           ;parcheggio.c: 133: TRISBbits.RB0 = 1;
 14339  0000C4  8093               	bsf	3987,0,c	;volatile
 14340                           
 14341                           ;parcheggio.c: 134: INTCONbits.INT0IF = 0;
 14342  0000C6  92F2               	bcf	intcon,1,c	;volatile
 14343                           
 14344                           ;parcheggio.c: 135: INTCONbits.INT0IE = 1;
 14345  0000C8  88F2               	bsf	intcon,4,c	;volatile
 14346                           
 14347                           ;parcheggio.c: 136: INTCONbits.TMR0IF = 0;
 14348  0000CA  94F2               	bcf	intcon,2,c	;volatile
 14349                           
 14350                           ;parcheggio.c: 137: INTCON2bits.INTEDG0 = 1;
 14351  0000CC  8CF1               	bsf	intcon2,6,c	;volatile
 14352  0000CE                     i1l5945:
 14353                           
 14354                           ;parcheggio.c: 138: }
 14355                           ;parcheggio.c: 140: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
 14356  0000CE  A0A4               	btfss	4004,0,c	;volatile
 14357  0000D0  B2A4               	btfsc	4004,1,c	;volatile
 14358  0000D2  D001               	goto	i1l5949
 14359  0000D4  D09D               	goto	i1l709
 14360  0000D6                     i1l5949:
 14361                           
 14362                           ;parcheggio.c: 141: CANreceiveMessage(&msg);
 14363  0000D6  0E44               	movlw	low _msg
 14364  0000D8  6E01               	movwf	CANreceiveMessage@msg,c
 14365  0000DA  0E01               	movlw	high _msg
 14366  0000DC  6E02               	movwf	CANreceiveMessage@msg+1,c
 14367  0000DE  ECF2  F00F         	call	_CANreceiveMessage	;wreg free
 14368                           
 14369                           ;parcheggio.c: 142: if (msg.identifier == 0b00000001101) {
 14370  0000E2  0E0D               	movlw	13
 14371  0000E4  0101               	movlb	1	; () banked
 14372  0000E6  1944               	xorwf	_msg& (0+255),w,b
 14373  0000E8  0101               	movlb	1	; () banked
 14374  0000EA  1145               	iorwf	(_msg+1)& (0+255),w,b
 14375  0000EC  0101               	movlb	1	; () banked
 14376  0000EE  1146               	iorwf	(_msg+2)& (0+255),w,b
 14377  0000F0  0101               	movlb	1	; () banked
 14378  0000F2  1147               	iorwf	(_msg+3)& (0+255),w,b
 14379  0000F4  B4D8               	btfsc	status,2,c
 14380                           
 14381                           ; BSR set to: 1
 14382                           ;parcheggio.c: 143: asd = 0;
 14383  0000F6  9244               	bcf	_asd/(0+8),_asd& (0+7),c	;volatile
 14384                           
 14385                           ; BSR set to: 1
 14386                           ;parcheggio.c: 144: }
 14387                           ;parcheggio.c: 145: if ((msg.identifier == 0b00000000111) && (msg.RTR != 1)) {
 14388                           
 14389                           ; BSR set to: 1
 14390  0000F8  0E07               	movlw	7
 14391  0000FA  0101               	movlb	1	; () banked
 14392  0000FC  1944               	xorwf	_msg& (0+255),w,b
 14393  0000FE  0101               	movlb	1	; () banked
 14394  000100  1145               	iorwf	(_msg+1)& (0+255),w,b
 14395  000102  0101               	movlb	1	; () banked
 14396  000104  1146               	iorwf	(_msg+2)& (0+255),w,b
 14397  000106  0101               	movlb	1	; () banked
 14398  000108  1147               	iorwf	(_msg+3)& (0+255),w,b
 14399  00010A  A4D8               	btfss	status,2,c
 14400  00010C  D02D               	goto	i1l5971
 14401                           
 14402                           ; BSR set to: 1
 14403  00010E  0101               	movlb	1	; () banked
 14404  000110  0552               	decf	(_msg+14)& (0+255),w,b
 14405  000112  B4D8               	btfsc	status,2,c
 14406  000114  D029               	goto	i1l5971
 14407                           
 14408                           ; BSR set to: 1
 14409                           ;parcheggio.c: 146: distance_average = 0;
 14410  000116  0E00               	movlw	0
 14411  000118  0100               	movlb	0	; () banked
 14412  00011A  6FE4               	movwf	(_distance_average+1)& (0+255),b	;volatile
 14413  00011C  0E00               	movlw	0
 14414  00011E  6FE3               	movwf	_distance_average& (0+255),b	;volatile
 14415                           
 14416                           ; BSR set to: 0
 14417                           ;parcheggio.c: 147: distance_dx = msg.data[1];
 14418  000120  C149  F034         	movff	_msg+5,_distance_dx	;volatile
 14419  000124  6A35               	clrf	_distance_dx+1,c	;volatile
 14420                           
 14421                           ;parcheggio.c: 148: distance_dx = ((distance_dx << 8) | msg.data[0]);
 14422  000126  5034               	movf	_distance_dx,w,c	;volatile
 14423  000128  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 14424  00012A  0101               	movlb	1	; () banked
 14425  00012C  5148               	movf	(_msg+4)& (0+255),w,b
 14426  00012E  6E34               	movwf	_distance_dx,c	;volatile
 14427  000130  C00D  F035         	movff	??_ISR_Bassa,_distance_dx+1	;volatile
 14428                           
 14429                           ; BSR set to: 1
 14430                           ;parcheggio.c: 149: distance_sx = msg.data[3];
 14431  000134  C14B  F036         	movff	_msg+7,_distance_sx	;volatile
 14432  000138  6A37               	clrf	_distance_sx+1,c	;volatile
 14433                           
 14434                           ;parcheggio.c: 150: distance_sx = ((distance_sx << 8) | msg.data[2]);
 14435  00013A  5036               	movf	_distance_sx,w,c	;volatile
 14436  00013C  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 14437  00013E  0101               	movlb	1	; () banked
 14438  000140  514A               	movf	(_msg+6)& (0+255),w,b
 14439  000142  6E36               	movwf	_distance_sx,c	;volatile
 14440  000144  C00D  F037         	movff	??_ISR_Bassa,_distance_sx+1	;volatile
 14441                           
 14442                           ; BSR set to: 1
 14443                           ;parcheggio.c: 151: distance_average = (distance_sx + distance_dx) / 2;
 14444  000148  5034               	movf	_distance_dx,w,c	;volatile
 14445  00014A  2436               	addwf	_distance_sx,w,c	;volatile
 14446  00014C  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 14447  00014E  5035               	movf	_distance_dx+1,w,c	;volatile
 14448  000150  2037               	addwfc	_distance_sx+1,w,c	;volatile
 14449  000152  6E0E               	movwf	(??_ISR_Bassa+1)& (0+255),c
 14450  000154  90D8               	bcf	status,0,c
 14451  000156  300E               	rrcf	??_ISR_Bassa+1,w,c
 14452  000158  6E0F               	movwf	(??_ISR_Bassa+2)& (0+255),c
 14453  00015A  300D               	rrcf	??_ISR_Bassa,w,c
 14454  00015C  0100               	movlb	0	; () banked
 14455  00015E  6FE3               	movwf	_distance_average& (0+255),b	;volatile
 14456  000160  C00F  F0E4         	movff	??_ISR_Bassa+2,_distance_average+1	;volatile
 14457                           
 14458                           ; BSR set to: 0
 14459                           ;parcheggio.c: 152: distance_received = 1;
 14460  000164  8844               	bsf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
 14461                           
 14462                           ; BSR set to: 0
 14463                           ;parcheggio.c: 153: distance_received1 = 1;
 14464  000166  8A44               	bsf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
 14465  000168                     i1l5971:
 14466                           
 14467                           ;parcheggio.c: 154: }
 14468                           ;parcheggio.c: 155: if (msg.identifier == 0b00000001010) {
 14469  000168  0E0A               	movlw	10
 14470  00016A  0101               	movlb	1	; () banked
 14471  00016C  1944               	xorwf	_msg& (0+255),w,b
 14472  00016E  0101               	movlb	1	; () banked
 14473  000170  1145               	iorwf	(_msg+1)& (0+255),w,b
 14474  000172  0101               	movlb	1	; () banked
 14475  000174  1146               	iorwf	(_msg+2)& (0+255),w,b
 14476  000176  0101               	movlb	1	; () banked
 14477  000178  1147               	iorwf	(_msg+3)& (0+255),w,b
 14478  00017A  A4D8               	btfss	status,2,c
 14479  00017C  D00C               	goto	i1l5977
 14480                           
 14481                           ; BSR set to: 1
 14482                           ;parcheggio.c: 156: if (msg.data[0] == 1) {
 14483  00017E  0101               	movlb	1	; () banked
 14484  000180  0548               	decf	(_msg+4)& (0+255),w,b
 14485  000182  A4D8               	btfss	status,2,c
 14486  000184  D003               	goto	i1l702
 14487                           
 14488                           ; BSR set to: 1
 14489                           ;parcheggio.c: 157: activation = 1;
 14490  000186  8044               	bsf	_activation/(0+8),_activation& (0+7),c	;volatile
 14491                           
 14492                           ;parcheggio.c: 158: PORTBbits.RB6 = 1;
 14493  000188  8C81               	bsf	3969,6,c	;volatile
 14494                           
 14495                           ;parcheggio.c: 159: } else {
 14496  00018A  D005               	goto	i1l5977
 14497  00018C                     i1l702:
 14498                           
 14499                           ; BSR set to: 1
 14500                           ;parcheggio.c: 160: activation = 0;
 14501  00018C  9044               	bcf	_activation/(0+8),_activation& (0+7),c	;volatile
 14502                           
 14503                           ;parcheggio.c: 161: PORTBbits.RB4 = 0;
 14504  00018E  9881               	bcf	3969,4,c	;volatile
 14505                           
 14506                           ;parcheggio.c: 162: PORTBbits.RB5 = 0;
 14507  000190  9A81               	bcf	3969,5,c	;volatile
 14508                           
 14509                           ;parcheggio.c: 163: PORTBbits.RB6 = 0;
 14510  000192  9C81               	bcf	3969,6,c	;volatile
 14511                           
 14512                           ;parcheggio.c: 164: request_sent = 0;
 14513  000194  9045               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
 14514  000196                     i1l5977:
 14515                           
 14516                           ; BSR set to: 1
 14517                           ;parcheggio.c: 165: }
 14518                           ;parcheggio.c: 166: }
 14519                           ;parcheggio.c: 167: if (msg.identifier == 0b00000001100) {
 14520  000196  0E0C               	movlw	12
 14521  000198  0101               	movlb	1	; () banked
 14522  00019A  1944               	xorwf	_msg& (0+255),w,b
 14523  00019C  0101               	movlb	1	; () banked
 14524  00019E  1145               	iorwf	(_msg+1)& (0+255),w,b
 14525  0001A0  0101               	movlb	1	; () banked
 14526  0001A2  1146               	iorwf	(_msg+2)& (0+255),w,b
 14527  0001A4  0101               	movlb	1	; () banked
 14528  0001A6  1147               	iorwf	(_msg+3)& (0+255),w,b
 14529  0001A8  B4D8               	btfsc	status,2,c
 14530                           
 14531                           ; BSR set to: 1
 14532                           ;parcheggio.c: 168: start_operation = 1;
 14533  0001AA  8445               	bsf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 14534                           
 14535                           ; BSR set to: 1
 14536                           ;parcheggio.c: 169: }
 14537                           ;parcheggio.c: 170: if (msg.identifier == 0b00000000110) {
 14538                           
 14539                           ; BSR set to: 1
 14540  0001AC  0E06               	movlw	6
 14541  0001AE  0101               	movlb	1	; () banked
 14542  0001B0  1944               	xorwf	_msg& (0+255),w,b
 14543  0001B2  0101               	movlb	1	; () banked
 14544  0001B4  1145               	iorwf	(_msg+1)& (0+255),w,b
 14545  0001B6  0101               	movlb	1	; () banked
 14546  0001B8  1146               	iorwf	(_msg+2)& (0+255),w,b
 14547  0001BA  0101               	movlb	1	; () banked
 14548  0001BC  1147               	iorwf	(_msg+3)& (0+255),w,b
 14549  0001BE  A4D8               	btfss	status,2,c
 14550  0001C0  D025               	goto	i1l705
 14551                           
 14552                           ; BSR set to: 1
 14553                           ;parcheggio.c: 171: for (unsigned char i = 0; i < 8; i++) {
 14554  0001C2  0E00               	movlw	0
 14555  0001C4  6E23               	movwf	ISR_Bassa@i,c
 14556  0001C6                     i1l5985:
 14557                           
 14558                           ; BSR set to: 1
 14559  0001C6  0E07               	movlw	7
 14560  0001C8  6423               	cpfsgt	ISR_Bassa@i,c
 14561  0001CA  D001               	goto	i1l5989
 14562  0001CC  D014               	goto	i1l5995
 14563  0001CE                     i1l5989:
 14564                           
 14565                           ;parcheggio.c: 172: data_speed_rx[i] = msg.data[i];
 14566  0001CE  5023               	movf	ISR_Bassa@i,w,c
 14567  0001D0  0D01               	mullw	1
 14568  0001D2  0E48               	movlw	low (_msg+4)
 14569  0001D4  24F3               	addwf	prodl,w,c
 14570  0001D6  6ED9               	movwf	fsr2l,c
 14571  0001D8  0E01               	movlw	high (_msg+4)
 14572  0001DA  20F4               	addwfc	prodh,w,c
 14573  0001DC  6EDA               	movwf	fsr2h,c
 14574  0001DE  5023               	movf	ISR_Bassa@i,w,c
 14575  0001E0  0D01               	mullw	1
 14576  0001E2  0E08               	movlw	low _data_speed_rx
 14577  0001E4  24F3               	addwf	prodl,w,c
 14578  0001E6  6EE1               	movwf	fsr1l,c
 14579  0001E8  0E01               	movlw	high _data_speed_rx
 14580  0001EA  20F4               	addwfc	prodh,w,c
 14581  0001EC  6EE2               	movwf	fsr1h,c
 14582  0001EE  CFDF FFE7          	movff	indf2,indf1
 14583  0001F2  2A23               	incf	ISR_Bassa@i,f,c
 14584  0001F4  D7E8               	goto	i1l5985
 14585  0001F6                     i1l5995:
 14586                           
 14587                           ;parcheggio.c: 173: }
 14588                           ;parcheggio.c: 174: if (msg.identifier == 0b00000001101) {
 14589  0001F6  0E0D               	movlw	13
 14590  0001F8  0101               	movlb	1	; () banked
 14591  0001FA  1944               	xorwf	_msg& (0+255),w,b
 14592  0001FC  0101               	movlb	1	; () banked
 14593  0001FE  1145               	iorwf	(_msg+1)& (0+255),w,b
 14594  000200  0101               	movlb	1	; () banked
 14595  000202  1146               	iorwf	(_msg+2)& (0+255),w,b
 14596  000204  0101               	movlb	1	; () banked
 14597  000206  1147               	iorwf	(_msg+3)& (0+255),w,b
 14598  000208  B4D8               	btfsc	status,2,c
 14599                           
 14600                           ; BSR set to: 1
 14601                           ;parcheggio.c: 175: distance_wait = 0;
 14602  00020A  9C44               	bcf	_distance_wait/(0+8),_distance_wait& (0+7),c	;volatile
 14603  00020C                     i1l705:
 14604                           
 14605                           ; BSR set to: 1
 14606                           ;parcheggio.c: 176: }
 14607                           ;parcheggio.c: 178: }
 14608                           ;parcheggio.c: 180: PIR3bits.RXB0IF = 0;
 14609  00020C  90A4               	bcf	4004,0,c	;volatile
 14610                           
 14611                           ;parcheggio.c: 181: PIR3bits.RXB1IF = 0;
 14612  00020E  92A4               	bcf	4004,1,c	;volatile
 14613  000210                     i1l709:
 14614  000210  C021  FFF5         	movff	??_ISR_Bassa+20,tablat
 14615  000214  C020  FFF8         	movff	??_ISR_Bassa+19,tblptru
 14616  000218  C01F  FFF7         	movff	??_ISR_Bassa+18,tblptrh
 14617  00021C  C01E  FFF6         	movff	??_ISR_Bassa+17,tblptrl
 14618  000220  C01D  FFF4         	movff	??_ISR_Bassa+16,prodh
 14619  000224  C01C  FFF3         	movff	??_ISR_Bassa+15,prodl
 14620  000228  C01B  FFDA         	movff	??_ISR_Bassa+14,fsr2h
 14621  00022C  C01A  FFD9         	movff	??_ISR_Bassa+13,fsr2l
 14622  000230  C019  FFE2         	movff	??_ISR_Bassa+12,fsr1h
 14623  000234  C018  FFE1         	movff	??_ISR_Bassa+11,fsr1l
 14624  000238  C017  FFEA         	movff	??_ISR_Bassa+10,fsr0h
 14625  00023C  C016  FFE9         	movff	??_ISR_Bassa+9,fsr0l
 14626  000240  C015  FFFB         	movff	??_ISR_Bassa+8,pclatu
 14627  000244  C014  FFFA         	movff	??_ISR_Bassa+7,pclath
 14628  000248  C013  FFE0         	movff	??_ISR_Bassa+6,bsr
 14629  00024C  C012  FFE8         	movff	??_ISR_Bassa+5,wreg
 14630  000250  C011  FFD8         	movff	??_ISR_Bassa+4,status
 14631  000254  9048               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 14632  000256  0010               	retfie	
 14633  000258                     __end_of_ISR_Bassa:
 14634                           	opt stack 0
 14635                           pclatu	equ	0xFFB
 14636                           pclath	equ	0xFFA
 14637                           tblptru	equ	0xFF8
 14638                           tblptrh	equ	0xFF7
 14639                           tblptrl	equ	0xFF6
 14640                           tablat	equ	0xFF5
 14641                           prodh	equ	0xFF4
 14642                           prodl	equ	0xFF3
 14643                           intcon	equ	0xFF2
 14644                           intcon2	equ	0xFF1
 14645                           postinc0	equ	0xFEE
 14646                           fsr0h	equ	0xFEA
 14647                           fsr0l	equ	0xFE9
 14648                           wreg	equ	0xFE8
 14649                           indf1	equ	0xFE7
 14650                           postdec1	equ	0xFE5
 14651                           fsr1h	equ	0xFE2
 14652                           fsr1l	equ	0xFE1
 14653                           bsr	equ	0xFE0
 14654                           indf2	equ	0xFDF
 14655                           postinc2	equ	0xFDE
 14656                           postdec2	equ	0xFDD
 14657                           fsr2h	equ	0xFDA
 14658                           fsr2l	equ	0xFD9
 14659                           status	equ	0xFD8
 14660                           
 14661 ;; *************** function _CANreceiveMessage *****************
 14662 ;; Defined at:
 14663 ;;		line 528 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 14664 ;; Parameters:    Size  Location     Type
 14665 ;;  msg             2    0[COMRAM] PTR struct .
 14666 ;;		 -> msg(15), 
 14667 ;; Auto vars:     Size  Location     Type
 14668 ;;  tamp            1   11[COMRAM] unsigned char 
 14669 ;;  error           1   10[COMRAM] unsigned char 
 14670 ;; Return value:  Size  Location     Type
 14671 ;;                  1    wreg      unsigned char 
 14672 ;; Registers used:
 14673 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14674 ;; Tracked objects:
 14675 ;;		On entry : 0/0
 14676 ;;		On exit  : 0/0
 14677 ;;		Unchanged: 0/0
 14678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14679 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14680 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14681 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14682 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14683 ;;Total ram usage:       12 bytes
 14684 ;; Hardware stack levels used:    1
 14685 ;; Hardware stack levels required when called:    2
 14686 ;; This function calls:
 14687 ;;		Nothing
 14688 ;; This function is called by:
 14689 ;;		_ISR_Bassa
 14690 ;; This function uses a non-reentrant model
 14691 ;;
 14692                           
 14693                           	psect	text36
 14694  001FE4                     __ptext36:
 14695                           	opt stack 0
 14696  001FE4                     _CANreceiveMessage:
 14697                           	opt stack 21
 14698                           
 14699                           ;inc\CANlib.h: 530: BYTE tamp;
 14700                           ;inc\CANlib.h: 531: BYTE error = 0;
 14701                           
 14702                           ;incstack = 0
 14703  001FE4  0E00               	movlw	0
 14704  001FE6  6E0B               	movwf	CANreceiveMessage@error,c
 14705                           
 14706                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 14707  001FE8  BE74               	btfsc	3956,7,c	;volatile
 14708                           
 14709                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 14710  001FEA  800B               	bsf	CANreceiveMessage@error,0,c
 14711                           
 14712                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 14713  001FEC  BC74               	btfsc	3956,6,c	;volatile
 14714                           
 14715                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 14716  001FEE  820B               	bsf	CANreceiveMessage@error,1,c
 14717                           
 14718                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 14719  001FF0  010F               	movlb	15	; () banked
 14720  001FF2  AF50               	btfss	80,7,b	;volatile
 14721  001FF4  D143               	goto	i1l410
 14722                           
 14723                           ; BSR set to: 15
 14724                           ;inc\CANlib.h: 541: {
 14725                           ;inc\CANlib.h: 542: msg->identifier = 0;
 14726  001FF6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14727  001FFA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14728  001FFE  6ADE               	clrf	postinc2,c
 14729  002000  6ADE               	clrf	postinc2,c
 14730  002002  6ADE               	clrf	postinc2,c
 14731  002004  6ADD               	clrf	postdec2,c
 14732                           
 14733                           ; BSR set to: 15
 14734                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 14735  002006  EE20 F004          	lfsr	2,4
 14736  00200A  5001               	movf	CANreceiveMessage@msg,w,c
 14737  00200C  26D9               	addwf	fsr2l,f,c
 14738  00200E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14739  002010  22DA               	addwfc	fsr2h,f,c
 14740  002012  CF56 FFDF          	movff	3926,indf2	;volatile
 14741                           
 14742                           ; BSR set to: 15
 14743                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 14744  002016  EE20 F005          	lfsr	2,5
 14745  00201A  5001               	movf	CANreceiveMessage@msg,w,c
 14746  00201C  26D9               	addwf	fsr2l,f,c
 14747  00201E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14748  002020  22DA               	addwfc	fsr2h,f,c
 14749  002022  CF57 FFDF          	movff	3927,indf2	;volatile
 14750                           
 14751                           ; BSR set to: 15
 14752                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 14753  002026  EE20 F006          	lfsr	2,6
 14754  00202A  5001               	movf	CANreceiveMessage@msg,w,c
 14755  00202C  26D9               	addwf	fsr2l,f,c
 14756  00202E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14757  002030  22DA               	addwfc	fsr2h,f,c
 14758  002032  CF58 FFDF          	movff	3928,indf2	;volatile
 14759                           
 14760                           ; BSR set to: 15
 14761                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 14762  002036  EE20 F007          	lfsr	2,7
 14763  00203A  5001               	movf	CANreceiveMessage@msg,w,c
 14764  00203C  26D9               	addwf	fsr2l,f,c
 14765  00203E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14766  002040  22DA               	addwfc	fsr2h,f,c
 14767  002042  CF59 FFDF          	movff	3929,indf2	;volatile
 14768                           
 14769                           ; BSR set to: 15
 14770                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 14771  002046  EE20 F008          	lfsr	2,8
 14772  00204A  5001               	movf	CANreceiveMessage@msg,w,c
 14773  00204C  26D9               	addwf	fsr2l,f,c
 14774  00204E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14775  002050  22DA               	addwfc	fsr2h,f,c
 14776  002052  CF5A FFDF          	movff	3930,indf2	;volatile
 14777                           
 14778                           ; BSR set to: 15
 14779                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 14780  002056  EE20 F009          	lfsr	2,9
 14781  00205A  5001               	movf	CANreceiveMessage@msg,w,c
 14782  00205C  26D9               	addwf	fsr2l,f,c
 14783  00205E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14784  002060  22DA               	addwfc	fsr2h,f,c
 14785  002062  CF5B FFDF          	movff	3931,indf2	;volatile
 14786                           
 14787                           ; BSR set to: 15
 14788                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 14789  002066  EE20 F00A          	lfsr	2,10
 14790  00206A  5001               	movf	CANreceiveMessage@msg,w,c
 14791  00206C  26D9               	addwf	fsr2l,f,c
 14792  00206E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14793  002070  22DA               	addwfc	fsr2h,f,c
 14794  002072  CF5C FFDF          	movff	3932,indf2	;volatile
 14795                           
 14796                           ; BSR set to: 15
 14797                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 14798  002076  EE20 F00B          	lfsr	2,11
 14799  00207A  5001               	movf	CANreceiveMessage@msg,w,c
 14800  00207C  26D9               	addwf	fsr2l,f,c
 14801  00207E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14802  002080  22DA               	addwfc	fsr2h,f,c
 14803  002082  CF5D FFDF          	movff	3933,indf2	;volatile
 14804                           
 14805                           ; BSR set to: 15
 14806                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 14807  002086  EE20 F00E          	lfsr	2,14
 14808  00208A  5001               	movf	CANreceiveMessage@msg,w,c
 14809  00208C  26D9               	addwf	fsr2l,f,c
 14810  00208E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14811  002090  22DA               	addwfc	fsr2h,f,c
 14812  002092  010F               	movlb	15	; () banked
 14813  002094  AD55               	btfss	85,6,b	;volatile
 14814  002096  D002               	goto	i1u669_20
 14815  002098  0E01               	movlw	1
 14816  00209A  D001               	goto	i1u669_26
 14817  00209C                     i1u669_20:
 14818  00209C  0E00               	movlw	0
 14819  00209E                     i1u669_26:
 14820  00209E  6EDF               	movwf	indf2,c
 14821                           
 14822                           ; BSR set to: 15
 14823                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 14824  0020A0  EE20 F00D          	lfsr	2,13
 14825  0020A4  5001               	movf	CANreceiveMessage@msg,w,c
 14826  0020A6  26D9               	addwf	fsr2l,f,c
 14827  0020A8  5002               	movf	CANreceiveMessage@msg+1,w,c
 14828  0020AA  22DA               	addwfc	fsr2h,f,c
 14829  0020AC  010F               	movlb	15	; () banked
 14830  0020AE  5155               	movf	85,w,b	;volatile
 14831  0020B0  0B0F               	andlw	15
 14832  0020B2  6EDF               	movwf	indf2,c
 14833                           
 14834                           ; BSR set to: 15
 14835                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 14836  0020B4  EE20 F00C          	lfsr	2,12
 14837  0020B8  5001               	movf	CANreceiveMessage@msg,w,c
 14838  0020BA  26D9               	addwf	fsr2l,f,c
 14839  0020BC  5002               	movf	CANreceiveMessage@msg+1,w,c
 14840  0020BE  22DA               	addwfc	fsr2h,f,c
 14841  0020C0  010F               	movlb	15	; () banked
 14842  0020C2  A752               	btfss	82,3,b	;volatile
 14843  0020C4  D002               	goto	i1u670_20
 14844  0020C6  0E01               	movlw	1
 14845  0020C8  D001               	goto	i1u670_26
 14846  0020CA                     i1u670_20:
 14847  0020CA  0E00               	movlw	0
 14848  0020CC                     i1u670_26:
 14849  0020CC  6EDF               	movwf	indf2,c
 14850                           
 14851                           ; BSR set to: 15
 14852                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 14853  0020CE  010F               	movlb	15	; () banked
 14854  0020D0  B752               	btfsc	82,3,b	;volatile
 14855  0020D2  D044               	goto	i1l5553
 14856                           
 14857                           ; BSR set to: 15
 14858                           ;inc\CANlib.h: 559: {
 14859                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 14860  0020D4  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 14861  0020D8  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 14862  0020DA  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 14863  0020DC  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 14864  0020DE  0E03               	movlw	3
 14865  0020E0                     i1u672_25:
 14866  0020E0  90D8               	bcf	status,0,c
 14867  0020E2  3603               	rlcf	??_CANreceiveMessage,f,c
 14868  0020E4  3604               	rlcf	??_CANreceiveMessage+1,f,c
 14869  0020E6  3605               	rlcf	??_CANreceiveMessage+2,f,c
 14870  0020E8  3606               	rlcf	??_CANreceiveMessage+3,f,c
 14871  0020EA  2EE8               	decfsz	wreg,f,c
 14872  0020EC  D7F9               	goto	i1u672_25
 14873  0020EE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14874  0020F2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14875  0020F6  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 14876  0020FA  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 14877  0020FE  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 14878  002102  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 14879                           
 14880                           ; BSR set to: 15
 14881                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 14882  002106  010F               	movlb	15	; () banked
 14883  002108  3952               	swapf	82,w,b	;volatile
 14884  00210A  42E8               	rrncf	wreg,f,c
 14885  00210C  0B07               	andlw	7
 14886  00210E  0B07               	andlw	7
 14887  002110  6E0C               	movwf	CANreceiveMessage@tamp,c
 14888                           
 14889                           ; BSR set to: 15
 14890                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 14891  002112  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14892  002116  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14893  00211A  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 14894  00211E  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 14895  002122  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 14896  002126  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 14897  00212A  500C               	movf	CANreceiveMessage@tamp,w,c
 14898  00212C  2403               	addwf	??_CANreceiveMessage,w,c
 14899  00212E  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 14900  002130  0E00               	movlw	0
 14901  002132  2004               	addwfc	??_CANreceiveMessage+1,w,c
 14902  002134  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 14903  002136  0E00               	movlw	0
 14904  002138  2005               	addwfc	??_CANreceiveMessage+2,w,c
 14905  00213A  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 14906  00213C  0E00               	movlw	0
 14907  00213E  2006               	addwfc	??_CANreceiveMessage+3,w,c
 14908  002140  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 14909  002142  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14910  002146  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14911  00214A  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 14912  00214E  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 14913  002152  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 14914  002156  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 14915                           
 14916                           ;inc\CANlib.h: 563: }
 14917  00215A  D08D               	goto	i1l5579
 14918  00215C                     i1l5553:
 14919                           
 14920                           ; BSR set to: 15
 14921                           ;inc\CANlib.h: 564: else
 14922                           ;inc\CANlib.h: 565: {
 14923                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 14924  00215C  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
 14925  002160  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 14926  002162  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 14927  002164  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 14928  002166  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14929  00216A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14930  00216E  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 14931  002172  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 14932  002176  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 14933  00217A  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 14934                           
 14935                           ; BSR set to: 15
 14936                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 14937  00217E  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
 14938  002182  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 14939  002184  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 14940  002186  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 14941  002188  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 14942  00218C  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 14943  002190  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 14944  002194  6A03               	clrf	??_CANreceiveMessage,c
 14945  002196  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14946  00219A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14947  00219E  5003               	movf	??_CANreceiveMessage,w,c
 14948  0021A0  26DE               	addwf	postinc2,f,c
 14949  0021A2  5004               	movf	??_CANreceiveMessage+1,w,c
 14950  0021A4  22DE               	addwfc	postinc2,f,c
 14951  0021A6  5005               	movf	??_CANreceiveMessage+2,w,c
 14952  0021A8  22DE               	addwfc	postinc2,f,c
 14953  0021AA  5006               	movf	??_CANreceiveMessage+3,w,c
 14954  0021AC  22DE               	addwfc	postinc2,f,c
 14955                           
 14956                           ; BSR set to: 15
 14957                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 14958  0021AE  010F               	movlb	15	; () banked
 14959  0021B0  A152               	btfss	82,0,b	;volatile
 14960  0021B2  D00C               	goto	i1l5561
 14961                           
 14962                           ; BSR set to: 15
 14963                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 14964  0021B4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14965  0021B8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14966  0021BC  0E00               	movlw	0
 14967  0021BE  12DE               	iorwf	postinc2,f,c
 14968  0021C0  0E00               	movlw	0
 14969  0021C2  12DE               	iorwf	postinc2,f,c
 14970  0021C4  0E01               	movlw	1
 14971  0021C6  12DE               	iorwf	postinc2,f,c
 14972  0021C8  0E00               	movlw	0
 14973  0021CA  12DE               	iorwf	postinc2,f,c
 14974  0021CC                     i1l5561:
 14975                           
 14976                           ; BSR set to: 15
 14977                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 14978  0021CC  010F               	movlb	15	; () banked
 14979  0021CE  A352               	btfss	82,1,b	;volatile
 14980  0021D0  D00C               	goto	i1l5565
 14981                           
 14982                           ; BSR set to: 15
 14983                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 14984  0021D2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14985  0021D6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14986  0021DA  0E00               	movlw	0
 14987  0021DC  12DE               	iorwf	postinc2,f,c
 14988  0021DE  0E00               	movlw	0
 14989  0021E0  12DE               	iorwf	postinc2,f,c
 14990  0021E2  0E02               	movlw	2
 14991  0021E4  12DE               	iorwf	postinc2,f,c
 14992  0021E6  0E00               	movlw	0
 14993  0021E8  12DE               	iorwf	postinc2,f,c
 14994  0021EA                     i1l5565:
 14995                           
 14996                           ; BSR set to: 15
 14997                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 14998  0021EA  010F               	movlb	15	; () banked
 14999  0021EC  AB52               	btfss	82,5,b	;volatile
 15000  0021EE  D00C               	goto	i1l5569
 15001                           
 15002                           ; BSR set to: 15
 15003                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 15004  0021F0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15005  0021F4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15006  0021F8  0E00               	movlw	0
 15007  0021FA  12DE               	iorwf	postinc2,f,c
 15008  0021FC  0E00               	movlw	0
 15009  0021FE  12DE               	iorwf	postinc2,f,c
 15010  002200  0E04               	movlw	4
 15011  002202  12DE               	iorwf	postinc2,f,c
 15012  002204  0E00               	movlw	0
 15013  002206  12DE               	iorwf	postinc2,f,c
 15014  002208                     i1l5569:
 15015                           
 15016                           ; BSR set to: 15
 15017                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 15018  002208  010F               	movlb	15	; () banked
 15019  00220A  AD52               	btfss	82,6,b	;volatile
 15020  00220C  D00C               	goto	i1l5573
 15021                           
 15022                           ; BSR set to: 15
 15023                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 15024  00220E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15025  002212  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15026  002216  0E00               	movlw	0
 15027  002218  12DE               	iorwf	postinc2,f,c
 15028  00221A  0E00               	movlw	0
 15029  00221C  12DE               	iorwf	postinc2,f,c
 15030  00221E  0E08               	movlw	8
 15031  002220  12DE               	iorwf	postinc2,f,c
 15032  002222  0E00               	movlw	0
 15033  002224  12DE               	iorwf	postinc2,f,c
 15034  002226                     i1l5573:
 15035                           
 15036                           ; BSR set to: 15
 15037                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 15038  002226  010F               	movlb	15	; () banked
 15039  002228  AF52               	btfss	82,7,b	;volatile
 15040  00222A  D00C               	goto	i1l5577
 15041                           
 15042                           ; BSR set to: 15
 15043                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 15044  00222C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15045  002230  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15046  002234  0E00               	movlw	0
 15047  002236  12DE               	iorwf	postinc2,f,c
 15048  002238  0E00               	movlw	0
 15049  00223A  12DE               	iorwf	postinc2,f,c
 15050  00223C  0E10               	movlw	16
 15051  00223E  12DE               	iorwf	postinc2,f,c
 15052  002240  0E00               	movlw	0
 15053  002242  12DE               	iorwf	postinc2,f,c
 15054  002244                     i1l5577:
 15055                           
 15056                           ; BSR set to: 15
 15057                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 15058  002244  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 15059  002248  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15060  00224A  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15061  00224C  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15062  00224E  0E15               	movlw	21
 15063  002250                     i1u678_25:
 15064  002250  90D8               	bcf	status,0,c
 15065  002252  3603               	rlcf	??_CANreceiveMessage,f,c
 15066  002254  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15067  002256  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15068  002258  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15069  00225A  2EE8               	decfsz	wreg,f,c
 15070  00225C  D7F9               	goto	i1u678_25
 15071  00225E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15072  002262  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15073  002266  5003               	movf	??_CANreceiveMessage,w,c
 15074  002268  12DE               	iorwf	postinc2,f,c
 15075  00226A  5004               	movf	??_CANreceiveMessage+1,w,c
 15076  00226C  12DE               	iorwf	postinc2,f,c
 15077  00226E  5005               	movf	??_CANreceiveMessage+2,w,c
 15078  002270  12DE               	iorwf	postinc2,f,c
 15079  002272  5006               	movf	??_CANreceiveMessage+3,w,c
 15080  002274  12DE               	iorwf	postinc2,f,c
 15081  002276                     i1l5579:
 15082                           
 15083                           ; BSR set to: 15
 15084                           ;inc\CANlib.h: 581: }
 15085                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 15086  002276  010F               	movlb	15	; () banked
 15087  002278  9F50               	bcf	80,7,b	;volatile
 15088                           
 15089                           ; BSR set to: 15
 15090                           ;inc\CANlib.h: 584: return (error);
 15091                           ;	Return value of _CANreceiveMessage is never used
 15092  00227A  0012               	return	
 15093  00227C                     i1l410:
 15094                           
 15095                           ; BSR set to: 15
 15096                           ;inc\CANlib.h: 585: }
 15097                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 15098  00227C  AE60               	btfss	3936,7,c	;volatile
 15099  00227E  0012               	return	
 15100                           
 15101                           ; BSR set to: 15
 15102                           ;inc\CANlib.h: 588: {
 15103                           ;inc\CANlib.h: 589: msg->identifier = 0;
 15104  002280  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15105  002284  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15106  002288  6ADE               	clrf	postinc2,c
 15107  00228A  6ADE               	clrf	postinc2,c
 15108  00228C  6ADE               	clrf	postinc2,c
 15109  00228E  6ADD               	clrf	postdec2,c
 15110                           
 15111                           ; BSR set to: 15
 15112                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 15113  002290  EE20 F004          	lfsr	2,4
 15114  002294  5001               	movf	CANreceiveMessage@msg,w,c
 15115  002296  26D9               	addwf	fsr2l,f,c
 15116  002298  5002               	movf	CANreceiveMessage@msg+1,w,c
 15117  00229A  22DA               	addwfc	fsr2h,f,c
 15118  00229C  CF66 FFDF          	movff	3942,indf2	;volatile
 15119                           
 15120                           ; BSR set to: 15
 15121                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 15122  0022A0  EE20 F005          	lfsr	2,5
 15123  0022A4  5001               	movf	CANreceiveMessage@msg,w,c
 15124  0022A6  26D9               	addwf	fsr2l,f,c
 15125  0022A8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15126  0022AA  22DA               	addwfc	fsr2h,f,c
 15127  0022AC  CF67 FFDF          	movff	3943,indf2	;volatile
 15128                           
 15129                           ; BSR set to: 15
 15130                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 15131  0022B0  EE20 F006          	lfsr	2,6
 15132  0022B4  5001               	movf	CANreceiveMessage@msg,w,c
 15133  0022B6  26D9               	addwf	fsr2l,f,c
 15134  0022B8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15135  0022BA  22DA               	addwfc	fsr2h,f,c
 15136  0022BC  CF68 FFDF          	movff	3944,indf2	;volatile
 15137                           
 15138                           ; BSR set to: 15
 15139                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 15140  0022C0  EE20 F007          	lfsr	2,7
 15141  0022C4  5001               	movf	CANreceiveMessage@msg,w,c
 15142  0022C6  26D9               	addwf	fsr2l,f,c
 15143  0022C8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15144  0022CA  22DA               	addwfc	fsr2h,f,c
 15145  0022CC  CF69 FFDF          	movff	3945,indf2	;volatile
 15146                           
 15147                           ; BSR set to: 15
 15148                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 15149  0022D0  EE20 F008          	lfsr	2,8
 15150  0022D4  5001               	movf	CANreceiveMessage@msg,w,c
 15151  0022D6  26D9               	addwf	fsr2l,f,c
 15152  0022D8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15153  0022DA  22DA               	addwfc	fsr2h,f,c
 15154  0022DC  CF6A FFDF          	movff	3946,indf2	;volatile
 15155                           
 15156                           ; BSR set to: 15
 15157                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 15158  0022E0  EE20 F009          	lfsr	2,9
 15159  0022E4  5001               	movf	CANreceiveMessage@msg,w,c
 15160  0022E6  26D9               	addwf	fsr2l,f,c
 15161  0022E8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15162  0022EA  22DA               	addwfc	fsr2h,f,c
 15163  0022EC  CF6B FFDF          	movff	3947,indf2	;volatile
 15164                           
 15165                           ; BSR set to: 15
 15166                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 15167  0022F0  EE20 F00A          	lfsr	2,10
 15168  0022F4  5001               	movf	CANreceiveMessage@msg,w,c
 15169  0022F6  26D9               	addwf	fsr2l,f,c
 15170  0022F8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15171  0022FA  22DA               	addwfc	fsr2h,f,c
 15172  0022FC  CF6C FFDF          	movff	3948,indf2	;volatile
 15173                           
 15174                           ; BSR set to: 15
 15175                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 15176  002300  EE20 F00B          	lfsr	2,11
 15177  002304  5001               	movf	CANreceiveMessage@msg,w,c
 15178  002306  26D9               	addwf	fsr2l,f,c
 15179  002308  5002               	movf	CANreceiveMessage@msg+1,w,c
 15180  00230A  22DA               	addwfc	fsr2h,f,c
 15181  00230C  CF6D FFDF          	movff	3949,indf2	;volatile
 15182                           
 15183                           ; BSR set to: 15
 15184                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 15185  002310  EE20 F00E          	lfsr	2,14
 15186  002314  5001               	movf	CANreceiveMessage@msg,w,c
 15187  002316  26D9               	addwf	fsr2l,f,c
 15188  002318  5002               	movf	CANreceiveMessage@msg+1,w,c
 15189  00231A  22DA               	addwfc	fsr2h,f,c
 15190  00231C  AC65               	btfss	3941,6,c	;volatile
 15191  00231E  D002               	goto	i1u680_20
 15192  002320  0E01               	movlw	1
 15193  002322  D001               	goto	i1u680_26
 15194  002324                     i1u680_20:
 15195  002324  0E00               	movlw	0
 15196  002326                     i1u680_26:
 15197  002326  6EDF               	movwf	indf2,c
 15198                           
 15199                           ; BSR set to: 15
 15200                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 15201  002328  EE20 F00D          	lfsr	2,13
 15202  00232C  5001               	movf	CANreceiveMessage@msg,w,c
 15203  00232E  26D9               	addwf	fsr2l,f,c
 15204  002330  5002               	movf	CANreceiveMessage@msg+1,w,c
 15205  002332  22DA               	addwfc	fsr2h,f,c
 15206  002334  5065               	movf	3941,w,c	;volatile
 15207  002336  0B0F               	andlw	15
 15208  002338  6EDF               	movwf	indf2,c
 15209                           
 15210                           ; BSR set to: 15
 15211                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 15212  00233A  EE20 F00C          	lfsr	2,12
 15213  00233E  5001               	movf	CANreceiveMessage@msg,w,c
 15214  002340  26D9               	addwf	fsr2l,f,c
 15215  002342  5002               	movf	CANreceiveMessage@msg+1,w,c
 15216  002344  22DA               	addwfc	fsr2h,f,c
 15217  002346  A662               	btfss	3938,3,c	;volatile
 15218  002348  D002               	goto	i1u681_20
 15219  00234A  0E01               	movlw	1
 15220  00234C  D001               	goto	i1u681_26
 15221  00234E                     i1u681_20:
 15222  00234E  0E00               	movlw	0
 15223  002350                     i1u681_26:
 15224  002350  6EDF               	movwf	indf2,c
 15225                           
 15226                           ; BSR set to: 15
 15227                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 15228  002352  B662               	btfsc	3938,3,c	;volatile
 15229  002354  D043               	goto	i1l5615
 15230                           
 15231                           ; BSR set to: 15
 15232                           ;inc\CANlib.h: 606: {
 15233                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 15234  002356  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 15235  00235A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15236  00235C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15237  00235E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15238  002360  0E03               	movlw	3
 15239  002362                     i1u683_25:
 15240  002362  90D8               	bcf	status,0,c
 15241  002364  3603               	rlcf	??_CANreceiveMessage,f,c
 15242  002366  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15243  002368  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15244  00236A  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15245  00236C  2EE8               	decfsz	wreg,f,c
 15246  00236E  D7F9               	goto	i1u683_25
 15247  002370  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15248  002374  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15249  002378  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 15250  00237C  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 15251  002380  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 15252  002384  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 15253                           
 15254                           ; BSR set to: 15
 15255                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 15256  002388  3862               	swapf	3938,w,c	;volatile
 15257  00238A  42E8               	rrncf	wreg,f,c
 15258  00238C  0B07               	andlw	7
 15259  00238E  0B07               	andlw	7
 15260  002390  6E0C               	movwf	CANreceiveMessage@tamp,c
 15261                           
 15262                           ; BSR set to: 15
 15263                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 15264  002392  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15265  002396  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15266  00239A  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 15267  00239E  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 15268  0023A2  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 15269  0023A6  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 15270  0023AA  500C               	movf	CANreceiveMessage@tamp,w,c
 15271  0023AC  2403               	addwf	??_CANreceiveMessage,w,c
 15272  0023AE  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 15273  0023B0  0E00               	movlw	0
 15274  0023B2  2004               	addwfc	??_CANreceiveMessage+1,w,c
 15275  0023B4  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 15276  0023B6  0E00               	movlw	0
 15277  0023B8  2005               	addwfc	??_CANreceiveMessage+2,w,c
 15278  0023BA  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 15279  0023BC  0E00               	movlw	0
 15280  0023BE  2006               	addwfc	??_CANreceiveMessage+3,w,c
 15281  0023C0  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 15282  0023C2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15283  0023C6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15284  0023CA  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 15285  0023CE  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 15286  0023D2  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 15287  0023D6  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 15288                           
 15289                           ;inc\CANlib.h: 610: }
 15290  0023DA  D088               	goto	i1l5641
 15291  0023DC                     i1l5615:
 15292                           
 15293                           ; BSR set to: 15
 15294                           ;inc\CANlib.h: 611: else
 15295                           ;inc\CANlib.h: 612: {
 15296                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 15297  0023DC  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
 15298  0023E0  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15299  0023E2  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15300  0023E4  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15301  0023E6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15302  0023EA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15303  0023EE  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 15304  0023F2  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 15305  0023F6  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 15306  0023FA  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 15307                           
 15308                           ; BSR set to: 15
 15309                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 15310  0023FE  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
 15311  002402  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15312  002404  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15313  002406  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15314  002408  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 15315  00240C  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 15316  002410  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 15317  002414  6A03               	clrf	??_CANreceiveMessage,c
 15318  002416  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15319  00241A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15320  00241E  5003               	movf	??_CANreceiveMessage,w,c
 15321  002420  26DE               	addwf	postinc2,f,c
 15322  002422  5004               	movf	??_CANreceiveMessage+1,w,c
 15323  002424  22DE               	addwfc	postinc2,f,c
 15324  002426  5005               	movf	??_CANreceiveMessage+2,w,c
 15325  002428  22DE               	addwfc	postinc2,f,c
 15326  00242A  5006               	movf	??_CANreceiveMessage+3,w,c
 15327  00242C  22DE               	addwfc	postinc2,f,c
 15328                           
 15329                           ; BSR set to: 15
 15330                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 15331  00242E  A062               	btfss	3938,0,c	;volatile
 15332  002430  D00C               	goto	i1l5623
 15333                           
 15334                           ; BSR set to: 15
 15335                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 15336  002432  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15337  002436  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15338  00243A  0E00               	movlw	0
 15339  00243C  12DE               	iorwf	postinc2,f,c
 15340  00243E  0E00               	movlw	0
 15341  002440  12DE               	iorwf	postinc2,f,c
 15342  002442  0E01               	movlw	1
 15343  002444  12DE               	iorwf	postinc2,f,c
 15344  002446  0E00               	movlw	0
 15345  002448  12DE               	iorwf	postinc2,f,c
 15346  00244A                     i1l5623:
 15347                           
 15348                           ; BSR set to: 15
 15349                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 15350  00244A  A262               	btfss	3938,1,c	;volatile
 15351  00244C  D00C               	goto	i1l5627
 15352                           
 15353                           ; BSR set to: 15
 15354                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 15355  00244E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15356  002452  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15357  002456  0E00               	movlw	0
 15358  002458  12DE               	iorwf	postinc2,f,c
 15359  00245A  0E00               	movlw	0
 15360  00245C  12DE               	iorwf	postinc2,f,c
 15361  00245E  0E02               	movlw	2
 15362  002460  12DE               	iorwf	postinc2,f,c
 15363  002462  0E00               	movlw	0
 15364  002464  12DE               	iorwf	postinc2,f,c
 15365  002466                     i1l5627:
 15366                           
 15367                           ; BSR set to: 15
 15368                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 15369  002466  AA62               	btfss	3938,5,c	;volatile
 15370  002468  D00C               	goto	i1l5631
 15371                           
 15372                           ; BSR set to: 15
 15373                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 15374  00246A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15375  00246E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15376  002472  0E00               	movlw	0
 15377  002474  12DE               	iorwf	postinc2,f,c
 15378  002476  0E00               	movlw	0
 15379  002478  12DE               	iorwf	postinc2,f,c
 15380  00247A  0E04               	movlw	4
 15381  00247C  12DE               	iorwf	postinc2,f,c
 15382  00247E  0E00               	movlw	0
 15383  002480  12DE               	iorwf	postinc2,f,c
 15384  002482                     i1l5631:
 15385                           
 15386                           ; BSR set to: 15
 15387                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 15388  002482  AC62               	btfss	3938,6,c	;volatile
 15389  002484  D00C               	goto	i1l5635
 15390                           
 15391                           ; BSR set to: 15
 15392                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 15393  002486  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15394  00248A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15395  00248E  0E00               	movlw	0
 15396  002490  12DE               	iorwf	postinc2,f,c
 15397  002492  0E00               	movlw	0
 15398  002494  12DE               	iorwf	postinc2,f,c
 15399  002496  0E08               	movlw	8
 15400  002498  12DE               	iorwf	postinc2,f,c
 15401  00249A  0E00               	movlw	0
 15402  00249C  12DE               	iorwf	postinc2,f,c
 15403  00249E                     i1l5635:
 15404                           
 15405                           ; BSR set to: 15
 15406                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 15407  00249E  AE62               	btfss	3938,7,c	;volatile
 15408  0024A0  D00C               	goto	i1l5639
 15409                           
 15410                           ; BSR set to: 15
 15411                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 15412  0024A2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15413  0024A6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15414  0024AA  0E00               	movlw	0
 15415  0024AC  12DE               	iorwf	postinc2,f,c
 15416  0024AE  0E00               	movlw	0
 15417  0024B0  12DE               	iorwf	postinc2,f,c
 15418  0024B2  0E10               	movlw	16
 15419  0024B4  12DE               	iorwf	postinc2,f,c
 15420  0024B6  0E00               	movlw	0
 15421  0024B8  12DE               	iorwf	postinc2,f,c
 15422  0024BA                     i1l5639:
 15423                           
 15424                           ; BSR set to: 15
 15425                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 15426  0024BA  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 15427  0024BE  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15428  0024C0  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15429  0024C2  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15430  0024C4  0E15               	movlw	21
 15431  0024C6                     i1u689_25:
 15432  0024C6  90D8               	bcf	status,0,c
 15433  0024C8  3603               	rlcf	??_CANreceiveMessage,f,c
 15434  0024CA  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15435  0024CC  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15436  0024CE  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15437  0024D0  2EE8               	decfsz	wreg,f,c
 15438  0024D2  D7F9               	goto	i1u689_25
 15439  0024D4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15440  0024D8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15441  0024DC  5003               	movf	??_CANreceiveMessage,w,c
 15442  0024DE  12DE               	iorwf	postinc2,f,c
 15443  0024E0  5004               	movf	??_CANreceiveMessage+1,w,c
 15444  0024E2  12DE               	iorwf	postinc2,f,c
 15445  0024E4  5005               	movf	??_CANreceiveMessage+2,w,c
 15446  0024E6  12DE               	iorwf	postinc2,f,c
 15447  0024E8  5006               	movf	??_CANreceiveMessage+3,w,c
 15448  0024EA  12DE               	iorwf	postinc2,f,c
 15449  0024EC                     i1l5641:
 15450                           
 15451                           ; BSR set to: 15
 15452                           ;inc\CANlib.h: 629: }
 15453                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 15454  0024EC  9E60               	bcf	3936,7,c	;volatile
 15455                           
 15456                           ; BSR set to: 15
 15457                           ;inc\CANlib.h: 632: return (error);
 15458                           ;	Return value of _CANreceiveMessage is never used
 15459  0024EE  0012               	return	
 15460  0024F0                     __end_of_CANreceiveMessage:
 15461                           	opt stack 0
 15462                           pclatu	equ	0xFFB
 15463                           pclath	equ	0xFFA
 15464                           tblptru	equ	0xFF8
 15465                           tblptrh	equ	0xFF7
 15466                           tblptrl	equ	0xFF6
 15467                           tablat	equ	0xFF5
 15468                           prodh	equ	0xFF4
 15469                           prodl	equ	0xFF3
 15470                           intcon	equ	0xFF2
 15471                           intcon2	equ	0xFF1
 15472                           postinc0	equ	0xFEE
 15473                           fsr0h	equ	0xFEA
 15474                           fsr0l	equ	0xFE9
 15475                           wreg	equ	0xFE8
 15476                           indf1	equ	0xFE7
 15477                           postdec1	equ	0xFE5
 15478                           fsr1h	equ	0xFE2
 15479                           fsr1l	equ	0xFE1
 15480                           bsr	equ	0xFE0
 15481                           indf2	equ	0xFDF
 15482                           postinc2	equ	0xFDE
 15483                           postdec2	equ	0xFDD
 15484                           fsr2h	equ	0xFDA
 15485                           fsr2l	equ	0xFD9
 15486                           status	equ	0xFD8
 15487                           
 15488 ;; *************** function _ISR_Alta *****************
 15489 ;; Defined at:
 15490 ;;		line 91 in file "parcheggio.c"
 15491 ;; Parameters:    Size  Location     Type
 15492 ;;		None
 15493 ;; Auto vars:     Size  Location     Type
 15494 ;;		None
 15495 ;; Return value:  Size  Location     Type
 15496 ;;		None               void
 15497 ;; Registers used:
 15498 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15499 ;; Tracked objects:
 15500 ;;		On entry : 0/0
 15501 ;;		On exit  : 0/0
 15502 ;;		Unchanged: 0/0
 15503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15506 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15507 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15508 ;;Total ram usage:       16 bytes
 15509 ;; Hardware stack levels used:    1
 15510 ;; Hardware stack levels required when called:    1
 15511 ;; This function calls:
 15512 ;;		___lwdiv
 15513 ;; This function is called by:
 15514 ;;		Interrupt level 2
 15515 ;; This function uses a non-reentrant model
 15516 ;;
 15517                           
 15518                           	psect	intcode
 15519  000008                     __pintcode:
 15520                           	opt stack 0
 15521  000008                     _ISR_Alta:
 15522                           	opt stack 21
 15523                           
 15524                           ; BSR set to: 15
 15525                           ;incstack = 0
 15526  000008  8248               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 15527  00000A  CFFA F069          	movff	pclath,??_ISR_Alta+2
 15528  00000E  CFFB F06A          	movff	pclatu,??_ISR_Alta+3
 15529  000012  EF27  F02C         	goto	int_func
 15530                           pclatu	equ	0xFFB
 15531                           pclath	equ	0xFFA
 15532                           tblptru	equ	0xFF8
 15533                           tblptrh	equ	0xFF7
 15534                           tblptrl	equ	0xFF6
 15535                           tablat	equ	0xFF5
 15536                           prodh	equ	0xFF4
 15537                           prodl	equ	0xFF3
 15538                           intcon	equ	0xFF2
 15539                           intcon2	equ	0xFF1
 15540                           postinc0	equ	0xFEE
 15541                           fsr0h	equ	0xFEA
 15542                           fsr0l	equ	0xFE9
 15543                           wreg	equ	0xFE8
 15544                           indf1	equ	0xFE7
 15545                           postdec1	equ	0xFE5
 15546                           fsr1h	equ	0xFE2
 15547                           fsr1l	equ	0xFE1
 15548                           bsr	equ	0xFE0
 15549                           indf2	equ	0xFDF
 15550                           postinc2	equ	0xFDE
 15551                           postdec2	equ	0xFDD
 15552                           fsr2h	equ	0xFDA
 15553                           fsr2l	equ	0xFD9
 15554                           status	equ	0xFD8
 15555                           
 15556                           	psect	intcode_body
 15557  00584E                     __pintcode_body:
 15558                           	opt stack 21
 15559  00584E                     int_func:
 15560                           	opt stack 21
 15561  00584E  CFE9 F06B          	movff	fsr0l,??_ISR_Alta+4
 15562  005852  CFEA F06C          	movff	fsr0h,??_ISR_Alta+5
 15563  005856  CFE1 F06D          	movff	fsr1l,??_ISR_Alta+6
 15564  00585A  CFE2 F06E          	movff	fsr1h,??_ISR_Alta+7
 15565  00585E  CFD9 F06F          	movff	fsr2l,??_ISR_Alta+8
 15566  005862  CFDA F070          	movff	fsr2h,??_ISR_Alta+9
 15567  005866  CFF3 F071          	movff	prodl,??_ISR_Alta+10
 15568  00586A  CFF4 F072          	movff	prodh,??_ISR_Alta+11
 15569  00586E  CFF6 F073          	movff	tblptrl,??_ISR_Alta+12
 15570  005872  CFF7 F074          	movff	tblptrh,??_ISR_Alta+13
 15571  005876  CFF8 F075          	movff	tblptru,??_ISR_Alta+14
 15572  00587A  CFF5 F076          	movff	tablat,??_ISR_Alta+15
 15573                           
 15574                           ;parcheggio.c: 92: if (INTCON2bits.INTEDG0 == 1) {
 15575  00587E  ACF1               	btfss	intcon2,6,c	;volatile
 15576  005880  D007               	goto	i2l688
 15577                           
 15578                           ;parcheggio.c: 93: INTCON2bits.INTEDG0 = 0;
 15579  005882  9CF1               	bcf	intcon2,6,c	;volatile
 15580                           
 15581                           ;parcheggio.c: 94: TMR3H = 0;
 15582  005884  0E00               	movlw	0
 15583  005886  6EB3               	movwf	4019,c	;volatile
 15584                           
 15585                           ;parcheggio.c: 95: TMR3L = 0;
 15586  005888  0E00               	movlw	0
 15587  00588A  6EB2               	movwf	4018,c	;volatile
 15588                           
 15589                           ;parcheggio.c: 96: distance_error = 0;
 15590  00588C  9644               	bcf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 15591                           
 15592                           ;parcheggio.c: 97: } else {
 15593  00588E  D030               	goto	i2l7181
 15594  005890                     i2l688:
 15595                           
 15596                           ;parcheggio.c: 98: gianni = TMR3H;
 15597  005890  CFB3 F042          	movff	4019,_gianni	;volatile
 15598                           
 15599                           ;parcheggio.c: 99: asus = TMR3L;
 15600  005894  CFB2 F041          	movff	4018,_asus	;volatile
 15601                           
 15602                           ;parcheggio.c: 100: timerValue2 = gianni;
 15603  005898  C042  F03E         	movff	_gianni,_timerValue2	;volatile
 15604  00589C  6A3F               	clrf	_timerValue2+1,c	;volatile
 15605                           
 15606                           ;parcheggio.c: 101: timerValue2 = ((timerValue2 << 8) | (asus));
 15607  00589E  503E               	movf	_timerValue2,w,c	;volatile
 15608  0058A0  0100               	movlb	0	; () banked
 15609  0058A2  6F67               	movwf	??_ISR_Alta& (0+255),b
 15610  0058A4  5041               	movf	_asus,w,c	;volatile
 15611  0058A6  6E3E               	movwf	_timerValue2,c	;volatile
 15612  0058A8  C067  F03F         	movff	??_ISR_Alta,_timerValue2+1	;volatile
 15613                           
 15614                           ; BSR set to: 0
 15615                           ;parcheggio.c: 102: pulse_time = timerValue2 / 2;
 15616  0058AC  90D8               	bcf	status,0,c
 15617  0058AE  303F               	rrcf	_timerValue2+1,w,c	;volatile
 15618  0058B0  0100               	movlb	0	; () banked
 15619  0058B2  6F67               	movwf	??_ISR_Alta& (0+255),b
 15620  0058B4  303E               	rrcf	_timerValue2,w,c	;volatile
 15621  0058B6  6E3A               	movwf	_pulse_time,c	;volatile
 15622  0058B8  C067  F03B         	movff	??_ISR_Alta,_pulse_time+1	;volatile
 15623                           
 15624                           ; BSR set to: 0
 15625                           ;parcheggio.c: 103: sensor_distance[MUX_index] = pulse_time / 58;
 15626  0058BC  C03A  F060         	movff	_pulse_time,___lwdiv@dividend	;volatile
 15627  0058C0  C03B  F061         	movff	_pulse_time+1,___lwdiv@dividend+1	;volatile
 15628  0058C4  0E00               	movlw	0
 15629  0058C6  0100               	movlb	0	; () banked
 15630  0058C8  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 15631  0058CA  0E3A               	movlw	58
 15632  0058CC  6F62               	movwf	___lwdiv@divisor& (0+255),b
 15633  0058CE  EC1F  F02D         	call	___lwdiv	;wreg free
 15634  0058D2  5040               	movf	_MUX_index,w,c	;volatile
 15635  0058D4  0D02               	mullw	2
 15636  0058D6  0E24               	movlw	low _sensor_distance
 15637  0058D8  24F3               	addwf	prodl,w,c
 15638  0058DA  6ED9               	movwf	fsr2l,c
 15639  0058DC  0E00               	movlw	high _sensor_distance
 15640  0058DE  20F4               	addwfc	prodh,w,c
 15641  0058E0  6EDA               	movwf	fsr2h,c
 15642  0058E2  0100               	movlb	0	; () banked
 15643  0058E4  C060  FFDE         	movff	?___lwdiv,postinc2
 15644  0058E8  0100               	movlb	0	; () banked
 15645  0058EA  C061  FFDD         	movff	?___lwdiv+1,postdec2
 15646                           
 15647                           ; BSR set to: 0
 15648                           ;parcheggio.c: 104: INTCON2bits.INTEDG0 = 1;
 15649  0058EE  8CF1               	bsf	intcon2,6,c	;volatile
 15650  0058F0                     i2l7181:
 15651                           
 15652                           ;parcheggio.c: 105: }
 15653                           ;parcheggio.c: 106: INTCONbits.INT0IF = 0;
 15654  0058F0  92F2               	bcf	intcon,1,c	;volatile
 15655  0058F2  C076  FFF5         	movff	??_ISR_Alta+15,tablat
 15656  0058F6  C075  FFF8         	movff	??_ISR_Alta+14,tblptru
 15657  0058FA  C074  FFF7         	movff	??_ISR_Alta+13,tblptrh
 15658  0058FE  C073  FFF6         	movff	??_ISR_Alta+12,tblptrl
 15659  005902  C072  FFF4         	movff	??_ISR_Alta+11,prodh
 15660  005906  C071  FFF3         	movff	??_ISR_Alta+10,prodl
 15661  00590A  C070  FFDA         	movff	??_ISR_Alta+9,fsr2h
 15662  00590E  C06F  FFD9         	movff	??_ISR_Alta+8,fsr2l
 15663  005912  C06E  FFE2         	movff	??_ISR_Alta+7,fsr1h
 15664  005916  C06D  FFE1         	movff	??_ISR_Alta+6,fsr1l
 15665  00591A  C06C  FFEA         	movff	??_ISR_Alta+5,fsr0h
 15666  00591E  C06B  FFE9         	movff	??_ISR_Alta+4,fsr0l
 15667  005922  C06A  FFFB         	movff	??_ISR_Alta+3,pclatu
 15668  005926  C069  FFFA         	movff	??_ISR_Alta+2,pclath
 15669  00592A  9248               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 15670  00592C  0011               	retfie		f
 15671  00592E                     __end_of_ISR_Alta:
 15672                           	opt stack 0
 15673                           pclatu	equ	0xFFB
 15674                           pclath	equ	0xFFA
 15675                           tblptru	equ	0xFF8
 15676                           tblptrh	equ	0xFF7
 15677                           tblptrl	equ	0xFF6
 15678                           tablat	equ	0xFF5
 15679                           prodh	equ	0xFF4
 15680                           prodl	equ	0xFF3
 15681                           intcon	equ	0xFF2
 15682                           intcon2	equ	0xFF1
 15683                           postinc0	equ	0xFEE
 15684                           fsr0h	equ	0xFEA
 15685                           fsr0l	equ	0xFE9
 15686                           wreg	equ	0xFE8
 15687                           indf1	equ	0xFE7
 15688                           postdec1	equ	0xFE5
 15689                           fsr1h	equ	0xFE2
 15690                           fsr1l	equ	0xFE1
 15691                           bsr	equ	0xFE0
 15692                           indf2	equ	0xFDF
 15693                           postinc2	equ	0xFDE
 15694                           postdec2	equ	0xFDD
 15695                           fsr2h	equ	0xFDA
 15696                           fsr2l	equ	0xFD9
 15697                           status	equ	0xFD8
 15698                           
 15699 ;; *************** function ___lwdiv *****************
 15700 ;; Defined at:
 15701 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 15702 ;; Parameters:    Size  Location     Type
 15703 ;;  dividend        2    0[BANK0 ] unsigned int 
 15704 ;;  divisor         2    2[BANK0 ] unsigned int 
 15705 ;; Auto vars:     Size  Location     Type
 15706 ;;  quotient        2    5[BANK0 ] unsigned int 
 15707 ;;  counter         1    4[BANK0 ] unsigned char 
 15708 ;; Return value:  Size  Location     Type
 15709 ;;                  2    0[BANK0 ] unsigned int 
 15710 ;; Registers used:
 15711 ;;		wreg, status,2, status,0
 15712 ;; Tracked objects:
 15713 ;;		On entry : 0/0
 15714 ;;		On exit  : 0/0
 15715 ;;		Unchanged: 0/0
 15716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15717 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15718 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15720 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15721 ;;Total ram usage:        7 bytes
 15722 ;; Hardware stack levels used:    1
 15723 ;; This function calls:
 15724 ;;		Nothing
 15725 ;; This function is called by:
 15726 ;;		_ISR_Alta
 15727 ;; This function uses a non-reentrant model
 15728 ;;
 15729                           
 15730                           	psect	text38
 15731  005A3E                     __ptext38:
 15732                           	opt stack 0
 15733  005A3E                     ___lwdiv:
 15734                           	opt stack 21
 15735                           
 15736                           ;incstack = 0
 15737  005A3E  0E00               	movlw	0
 15738  005A40  0100               	movlb	0	; () banked
 15739  005A42  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 15740  005A44  0E00               	movlw	0
 15741  005A46  6F65               	movwf	___lwdiv@quotient& (0+255),b
 15742                           
 15743                           ; BSR set to: 0
 15744  005A48  0100               	movlb	0	; () banked
 15745  005A4A  5162               	movf	___lwdiv@divisor& (0+255),w,b
 15746  005A4C  0100               	movlb	0	; () banked
 15747  005A4E  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 15748  005A50  B4D8               	btfsc	status,2,c
 15749  005A52  D02C               	goto	i2l1256
 15750                           
 15751                           ; BSR set to: 0
 15752  005A54  0E01               	movlw	1
 15753  005A56  0100               	movlb	0	; () banked
 15754  005A58  6F64               	movwf	___lwdiv@counter& (0+255),b
 15755  005A5A  D006               	goto	i2l7151
 15756  005A5C                     i2l7149:
 15757                           
 15758                           ; BSR set to: 0
 15759  005A5C  0100               	movlb	0	; () banked
 15760  005A5E  90D8               	bcf	status,0,c
 15761  005A60  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 15762  005A62  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 15763  005A64  0100               	movlb	0	; () banked
 15764  005A66  2B64               	incf	___lwdiv@counter& (0+255),f,b
 15765  005A68                     i2l7151:
 15766                           
 15767                           ; BSR set to: 0
 15768  005A68  0100               	movlb	0	; () banked
 15769  005A6A  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 15770  005A6C  D7F7               	goto	i2l7149
 15771  005A6E                     i2l7153:
 15772                           
 15773                           ; BSR set to: 0
 15774  005A6E  0100               	movlb	0	; () banked
 15775  005A70  90D8               	bcf	status,0,c
 15776  005A72  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 15777  005A74  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 15778                           
 15779                           ; BSR set to: 0
 15780  005A76  0100               	movlb	0	; () banked
 15781  005A78  5162               	movf	___lwdiv@divisor& (0+255),w,b
 15782  005A7A  0100               	movlb	0	; () banked
 15783  005A7C  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 15784  005A7E  0100               	movlb	0	; () banked
 15785  005A80  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 15786  005A82  0100               	movlb	0	; () banked
 15787  005A84  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 15788  005A86  A0D8               	btfss	status,0,c
 15789  005A88  D00A               	goto	i2l7161
 15790                           
 15791                           ; BSR set to: 0
 15792  005A8A  0100               	movlb	0	; () banked
 15793  005A8C  5162               	movf	___lwdiv@divisor& (0+255),w,b
 15794  005A8E  0100               	movlb	0	; () banked
 15795  005A90  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 15796  005A92  0100               	movlb	0	; () banked
 15797  005A94  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 15798  005A96  0100               	movlb	0	; () banked
 15799  005A98  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 15800                           
 15801                           ; BSR set to: 0
 15802  005A9A  0100               	movlb	0	; () banked
 15803  005A9C  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 15804  005A9E                     i2l7161:
 15805                           
 15806                           ; BSR set to: 0
 15807  005A9E  0100               	movlb	0	; () banked
 15808  005AA0  90D8               	bcf	status,0,c
 15809  005AA2  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 15810  005AA4  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 15811                           
 15812                           ; BSR set to: 0
 15813  005AA6  0100               	movlb	0	; () banked
 15814  005AA8  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 15815  005AAA  D7E1               	goto	i2l7153
 15816  005AAC                     i2l1256:
 15817                           
 15818                           ; BSR set to: 0
 15819  005AAC  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 15820  005AB0  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 15821                           
 15822                           ; BSR set to: 0
 15823  005AB4  0012               	return		;funcret
 15824  005AB6                     __end_of___lwdiv:
 15825                           	opt stack 0
 15826                           pclatu	equ	0xFFB
 15827                           pclath	equ	0xFFA
 15828                           tblptru	equ	0xFF8
 15829                           tblptrh	equ	0xFF7
 15830                           tblptrl	equ	0xFF6
 15831                           tablat	equ	0xFF5
 15832                           prodh	equ	0xFF4
 15833                           prodl	equ	0xFF3
 15834                           intcon	equ	0xFF2
 15835                           intcon2	equ	0xFF1
 15836                           postinc0	equ	0xFEE
 15837                           fsr0h	equ	0xFEA
 15838                           fsr0l	equ	0xFE9
 15839                           wreg	equ	0xFE8
 15840                           indf1	equ	0xFE7
 15841                           postdec1	equ	0xFE5
 15842                           fsr1h	equ	0xFE2
 15843                           fsr1l	equ	0xFE1
 15844                           bsr	equ	0xFE0
 15845                           indf2	equ	0xFDF
 15846                           postinc2	equ	0xFDE
 15847                           postdec2	equ	0xFDD
 15848                           fsr2h	equ	0xFDA
 15849                           fsr2l	equ	0xFD9
 15850                           status	equ	0xFD8
 15851                           pclatu	equ	0xFFB
 15852                           pclath	equ	0xFFA
 15853                           tblptru	equ	0xFF8
 15854                           tblptrh	equ	0xFF7
 15855                           tblptrl	equ	0xFF6
 15856                           tablat	equ	0xFF5
 15857                           prodh	equ	0xFF4
 15858                           prodl	equ	0xFF3
 15859                           intcon	equ	0xFF2
 15860                           intcon2	equ	0xFF1
 15861                           postinc0	equ	0xFEE
 15862                           fsr0h	equ	0xFEA
 15863                           fsr0l	equ	0xFE9
 15864                           wreg	equ	0xFE8
 15865                           indf1	equ	0xFE7
 15866                           postdec1	equ	0xFE5
 15867                           fsr1h	equ	0xFE2
 15868                           fsr1l	equ	0xFE1
 15869                           bsr	equ	0xFE0
 15870                           indf2	equ	0xFDF
 15871                           postinc2	equ	0xFDE
 15872                           postdec2	equ	0xFDD
 15873                           fsr2h	equ	0xFDA
 15874                           fsr2l	equ	0xFD9
 15875                           status	equ	0xFD8
 15876                           
 15877                           	psect	param0
 15878  0000                     pclatu	equ	0xFFB
 15879                           pclath	equ	0xFFA
 15880                           tblptru	equ	0xFF8
 15881                           tblptrh	equ	0xFF7
 15882                           tblptrl	equ	0xFF6
 15883                           tablat	equ	0xFF5
 15884                           prodh	equ	0xFF4
 15885                           prodl	equ	0xFF3
 15886                           intcon	equ	0xFF2
 15887                           intcon2	equ	0xFF1
 15888                           postinc0	equ	0xFEE
 15889                           fsr0h	equ	0xFEA
 15890                           fsr0l	equ	0xFE9
 15891                           wreg	equ	0xFE8
 15892                           indf1	equ	0xFE7
 15893                           postdec1	equ	0xFE5
 15894                           fsr1h	equ	0xFE2
 15895                           fsr1l	equ	0xFE1
 15896                           bsr	equ	0xFE0
 15897                           indf2	equ	0xFDF
 15898                           postinc2	equ	0xFDE
 15899                           postdec2	equ	0xFDD
 15900                           fsr2h	equ	0xFDA
 15901                           fsr2l	equ	0xFD9
 15902                           status	equ	0xFD8
 15903                           
 15904                           	psect	temp
 15905  000048                     btemp:
 15906                           	opt stack 0
 15907  000048                     	ds	1
 15908  0000                     int$flags	set	btemp
 15909                           pclatu	equ	0xFFB
 15910                           pclath	equ	0xFFA
 15911                           tblptru	equ	0xFF8
 15912                           tblptrh	equ	0xFF7
 15913                           tblptrl	equ	0xFF6
 15914                           tablat	equ	0xFF5
 15915                           prodh	equ	0xFF4
 15916                           prodl	equ	0xFF3
 15917                           intcon	equ	0xFF2
 15918                           intcon2	equ	0xFF1
 15919                           postinc0	equ	0xFEE
 15920                           fsr0h	equ	0xFEA
 15921                           fsr0l	equ	0xFE9
 15922                           wreg	equ	0xFE8
 15923                           indf1	equ	0xFE7
 15924                           postdec1	equ	0xFE5
 15925                           fsr1h	equ	0xFE2
 15926                           fsr1l	equ	0xFE1
 15927                           bsr	equ	0xFE0
 15928                           indf2	equ	0xFDF
 15929                           postinc2	equ	0xFDE
 15930                           postdec2	equ	0xFDD
 15931                           fsr2h	equ	0xFDA
 15932                           fsr2l	equ	0xFD9
 15933                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    80
    Data        11
    BSS         179
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      71
    BANK0           160    119     136
    BANK1           256     85     224
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK1[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> can_send@data_correction1(BANK0[0]), data_correction(BANK1[8]), data_speed(BANK1[8]), data_test(BANK1[8]), 
		 -> data_brake(BANK1[8]), data_steering(BANK1[8]), data(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    None.

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _park_search->_parallelo
    _sin->_floor
    _floor->___xxtofl
    ___xxtofl->___fltol
    ___fltol->___fladd
    ___flsub->_floor
    _asin->_atan
    _sqrt->___fladd
    _atan->_eval_poly
    _fabs->___flneg
    ___flneg->___flmul
    _eval_poly->___fladd
    ___flmul->___fldiv
    ___fladd->___flneg
    ___flge->_fabs
    _delay_s->_delay_ms
    _delay_ms->___wmul
    _can_send->_CANsendMessage
    _configurazione->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask

Critical Paths under _ISR_Alta in BANK0

    _ISR_Alta->___lwdiv

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _parallelo->_asin
    _park_routine->_matematica
    _matematica->_cos
    _cos->_asin
    _sin->___flsub
    _floor->___xxtofl
    ___flsub->_floor
    _asin->_sqrt

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Alta in BANK3

    None.

Critical Paths under _ISR_Bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Alta in BANK4

    None.

Critical Paths under _ISR_Bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Alta in BANK5

    None.

Critical Paths under _ISR_Bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Alta in BANK6

    None.

Critical Paths under _ISR_Bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Alta in BANK7

    None.

Critical Paths under _ISR_Bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Alta in BANK8

    None.

Critical Paths under _ISR_Bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Alta in BANK9

    None.

Critical Paths under _ISR_Bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Alta in BANK10

    None.

Critical Paths under _ISR_Bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Alta in BANK11

    None.

Critical Paths under _ISR_Bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Alta in BANK12

    None.

Critical Paths under _ISR_Bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  236343
                    _can_interpreter
                     _configurazione
                       _park_routine
                        _park_search
 ---------------------------------------------------------------------------------
 (1) _park_search                                          2     2      0   86435
                                             45 BANK1      2     2      0
                       _CANisTxReady
                     _CANsendMessage
                           ___xxtofl
                                _abs
                          _parallelo
 ---------------------------------------------------------------------------------
 (2) _parallelo                                            2     2      0   79710
                                            117 BANK0      2     2      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _abs
                               _asin
                           _can_send
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     194
                                             23 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _park_routine                                         0     0      0  143974
                     _CANsendMessage
                            ___fladd
                            ___fltol
                           ___xxtofl
                           _can_send
                            _delay_s
                         _matematica
 ---------------------------------------------------------------------------------
 (2) _matematica                                          32    32      0  124911
                                             53 BANK1     32    32      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                               _asin
                                _cos
 ---------------------------------------------------------------------------------
 (3) _cos                                                 12     8      4   54115
                                             45 BANK1      8     4      4
                            ___fladd
                             ___flge
                               _asin (ARG)
                                _sin
 ---------------------------------------------------------------------------------
 (4) _sin                                                 17    13      4   46560
                                             20 BANK1     17    13      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                          _eval_poly
                              _floor
 ---------------------------------------------------------------------------------
 (5) _floor                                               10     6      4    9498
                                            115 BANK0      4     0      4
                                              6 BANK1      6     6      0
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (6) _frexp                                                8     2      6     452
                                             23 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     784
                                            107 BANK0      8     4      4
                                              0 BANK1      6     6      0
                            ___fltol (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     645
                                             97 BANK0     10     6      4
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    6161
                                             12 BANK1      8     0      8
                            ___fladd
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (3) _asin                                                36    32      4   54204
                                             21 BANK1     24    20      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                               _atan
                               _fabs
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _sqrt                                                29    25      4    1467
                                             97 BANK0      8     4      4
                                              0 BANK1     21    21      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (4) _atan                                                21    17      4   32321
                                            113 BANK0      4     0      4
                                              0 BANK1     17    17      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                          _eval_poly
                               _fabs
 ---------------------------------------------------------------------------------
 (4) _fabs                                                 4     0      4    1544
                                             77 BANK0      4     0      4
                            ___flneg
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4    1220
                                             73 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           16     8      8   12239
                                             97 BANK0     16     8      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    5387
                                             48 BANK0     25    17      8
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    5674
                                             77 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1498
                                             81 BANK0     12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4039
                                             23 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (2) _delay_s                                              2     2      0     419
                                             31 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             2     0      2     373
                                             29 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     287
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _can_send                                             0     0      0    5818
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (4) _CANsendMessage                                      16     8      8    5723
                                             23 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (4) _CANisTxReady                                         1     1      0      24
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _configurazione                                       0     0      0    5934
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             37 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      4     4      0       0
                                             23 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_Bassa                                           23    23      0    1251
                                             12 COMRAM    23    23      0
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (8) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_Alta                                            16    16      0     395
                                              7 BANK0     16    16      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (10) ___lwdiv                                             7     3      4     395
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _can_interpreter
   _configurazione
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _park_routine
     _CANsendMessage
     ___fladd
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
       ___flneg (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
     ___xxtofl
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _abs (ARG)
     _can_send
       _CANisTxReady
       _CANsendMessage
     _delay_s
       _delay_ms
         ___wmul
     _matematica
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___fldiv
       ___flmul
         ___fldiv (ARG)
       ___flneg
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _cos
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___flge
           _fabs (ARG)
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _asin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _atan
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___fldiv
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___flmul
               ___fldiv (ARG)
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _eval_poly
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _fabs
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           _fabs
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           _sqrt
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _sin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flsub
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             _floor (ARG)
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
               ___flge
                 _fabs (ARG)
                   ___flneg
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                   ___flneg (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
               ___xxtofl
                 ___fltol (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                     ___flneg (ARG)
                       ___fldiv (ARG)
                       ___flmul (ARG)
                         ___fldiv (ARG)
                 _abs (ARG)
               _frexp
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _floor
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___xxtofl
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                   ___flneg (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
               _abs (ARG)
             _frexp
   _park_search
     _CANisTxReady
     _CANsendMessage
     ___xxtofl
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _abs (ARG)
     _abs
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___flmul
         ___fldiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _abs (ARG)
       _abs
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)

 _ISR_Bassa (ROOT)
   _CANreceiveMessage

 _ISR_Alta (ROOT)
   ___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     55      E0       7       87.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     77      88       5       85.0%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     23      47       1       75.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AF      20        0.0%
DATA                 0      0     1AF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun May 01 21:33:42 2016

                ___fldiv@aexp 008F                  ___fldiv@bexp 008E                             _n 0130  
                           _x 013C                             _z 00DB          __end_of_CANSetFilter 1858  
                ___fldiv@sign 0083            delay_s@repeat_loop 0080                            bsr 000FE0  
         ___wmul@multiplicand 0079                   __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                 __CFG_OSC$HS 000000                    _MUX_select 0100                           l402 1F30  
                         l403 1F34                           l500 15B4                           l404 1F40  
                         l501 15B8                           l510 16C4                           l502 15C4  
                         l511 16D0                           l503 15C8                           l520 17DC  
                         l512 16D4                           l504 15D4                           l440 3CD6  
                         l432 3C96                           l521 17E0                           l513 16E0  
                         l433 3C9A                           l522 17EC                           l514 16E4  
                         l450 3DE2                           l434 3CA6                           l370 1918  
                         l523 17F0                           l515 16F0                           l507 16B0  
                         l451 3DEE                           l443 3DAE                           l435 3CAA  
                         l363 1ADC                           l524 17FC                           l508 16B4  
                         l444 3DB2                           l436 3CB6                           l380 1AF6  
                         l364 186E                           l525 1800                           l509 16C0  
                         l445 3DBE                           l437 3CBA                           l381 1BEE  
                         l373 1A28                           l365 1872                           l526 180C  
                         l518 17CC                           l470 1276                           l446 3DC2  
                         l438 3CC6                           l358 4EAA                           l390 1CBC  
                         l382 1B7E                           l374 1A2C                           l366 196A  
                         l519 17D0                           l471 1282                           l463 1242  
                         l447 3DCE                           l439 3CCA                           l359 4EB4  
                         l383 1B88                           l375 1A38                           l367 18FA  
                         l480 138C                           l464 1246                           l448 3DD2  
                         l384 1B92                           l368 1904                           l720 501A  
                         l481 1390                           l465 1252                           l449 3DDE  
                         l393 1D76                           l385 1B9C                           l369 190E  
                         l490 149C                           l482 139C                           l474 135C  
                         l466 1256                           l394 1D7A                           l378 1D60  
                         l491 14A8                           l475 1360                           l467 1262  
                         l395 1E72                           l379 1AF2                           l731 514E  
                         l492 14AC                           l476 136C                           l468 1266  
                         l556 5D66                           l396 1E02                           l388 1CAC  
                         l493 14B8                           l485 1478                           l477 1370  
                         l469 1272                           l397 1E0C                           l389 1CB0  
                         l486 147C                           l478 137C                           l398 1E16  
                         l742 44EE                           l718 5152                           l487 1488  
                         l479 1380                           l399 1E20                           l496 1594  
                         l488 148C                           l752 4674                           l497 1598  
                         l489 1498                           l569 5C74                           l498 15A4  
                         l746 4552                           l499 15A8                           l749 45EA  
                         l849 5D12                           l785 497E                           l779 49BC  
                __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000                           _abs 5CF0  
                         _asd 0221                           _dir 0222                           _cos 576A  
                         _jjj 0128                           _kkk 012C                           _msg 0144  
                         _sin 3E3A                           prod 000FF3                           wreg 000FE8  
                ___flmul@aexp 009D                  ___flmul@bexp 00A2               ?_configurazione 0001  
                ___flmul@sign 009C                  ___flmul@temp 00A7                  ___flmul@prod 00A3  
                __CFG_LVP$OFF 000000                  ___fltol@exp1 00CA                  __CFG_WDT$OFF 000000  
                        ?_abs 0077                          l1310 2B64                          l1056 529C  
                        l1401 31BC                          l1049 5C36                          l1411 32CE  
                        l1403 322A                          l1308 2BA4                          l1325 2D18  
                        l1309 2B98                          l1334 2DAC                          l1450 4D72  
                        l1451 4D8A                          l1443 4D16                          l1364 390A  
                        l1436 4C6A                          l1292 4140                          l1373 3942  
                        l1461 5534                          l1375 39B0                          l1367 38B2  
                        l5001 0EC8                          l1394 2F20                          l5101 1286  
                        l5203 15D8                          l5107 12CC                          l5019 0F82  
                        l5141 13E6                          l5037 103C                          l5301 533E  
                        ?_cos 01B0                          l5135 13A0                          l5055 10F6  
                        l4503 1A1C                          l5311 53B6                          l5209 161E  
                        l5073 11B0                          l5305 5376                          l6201 2D80  
                        l6121 2AE4                          l5243 173A                          l5411 4EB8  
                        l6211 2DA6                          l6203 2D86                          l7003 5078  
                        l5237 16F4                          l4509 1A3C                          l6221 2E02  
                        l6133 2B78                          l7013 50C0                          l5271 1810  
                        l5175 1502                          l5415 4EC0                          l6135 2B7E  
                        l6055 2A06                          l5169 14BC                          l5417 4F04  
                        l5409 4EA2                          l5425 5D28                          l6241 2E5A  
                        l6233 2E42                          l6225 2E14                          l6073 2A50  
                        l6049 29E2                          l6401 5CA8                          l7121 46CC  
                        l7009 5088                          l4635 1E2A                          l4483 1922  
                        l5291 52F0                          l6235 2E46                          l6163 2C16  
                        l6139 2B88                          l6091 2AA8                          l6083 2A7E  
                        l6067 2A3C                          l6059 2A10                          l6251 2E8A  
                        l6411 5684                          l7123 46D8                          l4901 3C0A  
                        l4661 1F44                          l5429 5D3A                          l6229 2E36  
                        l6157 2C06                          l6149 2BC8                          l6333 31D0  
                        l6261 2EC6                          l7037 4466                          l4655 1F24  
                        l4559 1BA6                          l5279 5C66                          l6191 2D60  
                        l6159 2C0C                          l6167 2C28                          l6079 2A74  
                        l6343 3224                          l6327 31A6                          l6431 5706  
                        l4585 1CC0                          l6513 36FA                          l6185 2D4A  
                        l6177 2CF8                          l6353 327A                          l6281 2F34  
                        l6257 2EAE                          l6441 573C                          l7073 4556  
                        l7137 4734                          l4579 1CA0                          l6523 3728  
                        l6195 2D6C                          l6275 2F08                          l6259 2EB4  
                        l6427 56F2                          l4933 3D20                          l6533 3758  
                        l6357 32A0                          l6285 2F48                          l6277 2F0E  
                        l6269 2EE4                          l6445 5758                          l6437 5722  
                        l6461 4CA2                          l4927 3CDA                          l6623 3A2E  
                        l6543 3786                          l6519 371E                          l6383 51F8  
                        l6367 32EE                          l6359 32B4                          l6711 33AE  
                        l6703 337C                          l6439 5732                          l6463 4CAA  
                        l6455 4C7A                          l6633 3A74                          l6625 3A42  
                        l6609 39AA                          l6393 52E8                          l6369 32F8  
                        l6705 338E                          l6473 4D54                          l6465 4CBA  
                        l4867 5D74                          l6635 3A78                          l6627 3A64  
                        l6619 3A00                          l6563 3808                          l6555 37DA  
                        l6539 377C                          l6387 524A                          l6379 51AA  
                        l6731 3420                          l6723 33F0                          l6475 4D64  
                        l6467 4CF8                          l4885 3B54                          l6581 38BE  
                        l6573 3886                          l6805 4BE2                          l6741 34A2  
                        l6821 3E70                          l7197 5BB4                          l4983 0E10  
                        l4959 3DF2                          l6743 34AA                          l6487 4DDC  
                        l6671 5462                          l6593 392C                          l6657 559C  
                        l6809 4BFA                          l6497 5954                          l6833 3F9A  
                        l6587 3906                          l6659 5640                          l6747 3530  
                        l6755 35A6                          l6691 3330                          l6675 5476  
                        l6749 356A                          l6837 4010                          l6933 499A  
                        l6599 3956                          l6775 36BC                          l6767 3686  
                        l6679 5498                          l6927 4940                          l6935 49A0  
                        l6793 4A8E                          l6881 43C0                          l6857 41B0  
                        ?_sin 0197                          l6789 4A1A                          l6869 42DE  
                        l6991 4FCA                          l6983 4FB6                          l6897 57F2  
                        _LATA 000F89                          _LATB 000F8A                          _LATC 000F8B  
                        u5000 1BC6                          u5010 1C12                          u5005 1BBA  
                        u5015 1C06                          u6000 12A6                          u5025 1C72  
                        u5130 1E4A                          u5140 1E96                          u6005 129A  
                        u5135 1E3E                          u5145 1E8A                          u5155 1EF6  
                        u5510 3B86                          u6400 1830                          u6320 1714  
                        u6240 15F8                          u6160 14DC                          u6080 13C0  
                        u5600 3CFA                          u5515 3B7A                          u6405 1824  
                        u6325 1708                          u6245 15EC                          u6165 14D0  
                        u6085 13B4                          u5605 3CEE                          u5525 3BE6  
                        u5710 0D8C                          u5470 3AD0                          u7400 2B2E  
                        u7410 2B46                          u8130 5986                          u5715 0D80  
                        u5475 3AC4                          u7420 2B48                          u5805 0F5E  
                        u5725 0DEC                          u5485 3B30                          u5910 112C  
                        u5830 0FB8                          u5750 0E44                          u4870 1942  
                        u5680 3E12                          u4880 198E                          u8138 598A  
                        u8410 5486                          u5915 1120                          u5835 0FAC  
                        u5755 0E38                          u4875 1936                          u8340 3A14  
                        u5925 118C                          u5845 1018                          u5765 0EA4  
                        u5685 3E06                          u4885 1982                          u5870 1072  
                        u5790 0EFE                          u4895 19EE                          u5875 1066  
                        u5795 0EF2                          u9067 5C68                          u8620 3F94  
                        u5885 10D2                          u8550 4A4A                          u8630 3F96  
                        u8711 47D4                          u8560 4A4C                          u8800 4FC6  
                        u8721 47E0                          u7860 328E                          u7780 3148  
                        u7960 56A4                          u8760 4998                          u7785 313C  
                        u8930 4502                          u7965 5698                          u8870 50D4  
                        u8970 46AA           __size_of_CANSetMask 039E                          abs@a 0077  
                        _alfa 011C                          _fabs 5C0A                          _data 0153  
                        _beta 0120                          _atan 49CE                          _asin 4152  
                        _main 5B76                          _asus 0041                          cos@f 01B0  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr0l 000FE9  
                        fsr2h 000FDA                          indf1 000FE7                          fsr1l 000FE1  
                        indf2 000FDF                          fsr2l 000FD9                          btemp 0048  
                        _sqrt 3312                          pclat 000FFA                          sin@f 0197  
                        sin@y 019B                          prodh 000FF4                          prodl 000FF3  
                        start 0258                 __CFG_IESO$OFF 000000               ___fldiv@new_exp 0088  
              delay_s@value_s 007F                 __CFG_MCLRE$ON 000000                  ___param_bank 000000  
            _CANOperationMode 5D6C                         ??_abs 0079                         ??_cos 00D7  
                       ??_sin 00D7    __size_of_CANreceiveMessage 050C                         ?_fabs 00AD  
               ___fltol@sign1 00C9                         ?_atan 00D1                         ?_asin 0198  
             __end_of___fladd 2E6C                         ?_main 0001               __end_of___fldiv 3A9C  
             __end_of___flneg 5CBA               __end_of___flmul 3312               __end_of___flsub 5C0A  
             __end_of___fltol 576A                         ?_sqrt 00C1                         _T0CON 000FD5  
                       _T3CON 000FB1            __size_of_ISR_Bassa 0240               __end_of___lwdiv 5AB6  
                       i1l410 227C                         i1l702 018C                         i1l705 020C  
                       i1l709 0210                         i1l695 009A                         i2l688 5890  
                       _TMR0H 000FD7                         _TMR0L 000FD6                         _TMR3H 000FB3  
                       _TMR3L 000FB2                         _PORTA 000F80                         _TRISA 000F92  
                       _TRISB 000F93                         _TRISC 000F94            __end_ofsin@coeff_a 0D41  
          __end_ofsin@coeff_b 0D51                 __CFG_PWRT$OFF 000000              __end_of_ISR_Alta 592E  
             __end_of_delay_s 5D48                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000            CANInitialize@flags 0089  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
                       _bordo 0124                         fabs@d 00AD                         _floor 5422  
                       _frexp 592E                         _errno 0142                         atan@f 00D1  
                       atan@x 0187                         atan@y 0183                         asin@x 0198  
                       asin@y 01A8      can_send@data_correction1 0087                __pbitbssCOMRAM 0220  
                       sin@x2 01A3                         tablat 000FF5          __end_of_CANisTxReady 5D6C  
                       sqrt@a 00C1                         sqrt@i 0184                         sqrt@p 0189  
                       status 000FD8                  ?_park_search 0001               __initialization 59C2  
                __end_of_fabs 5C48                  __end_of_atan 4C20                  __end_of_asin 4464  
                __end_of_main 5BC2                  __end_of_sqrt 36DC                        ??_fabs 00B1  
                      ??_atan 00D5                        ??_asin 00D5                        ??_main 00D7  
                      ??_sqrt 00C5                 __activetblptr 000003             _CANisTxReady$2845 0077  
                      _ADCON1 000FC1                        ?_floor 00D3                        ?_frexp 0077  
                      _CANCON 000F6F            _distance_received1 0225               __CFG_BBSIZ$1024 000000  
           _spazio_parcheggio 0046                        i2l1256 5AAC                        i1l5631 2482  
                      i1l5623 244A                        i1l5615 23DC                        i1l5641 24EC  
                      i1l5561 21CC                        i1l5553 215C                        i1l5635 249E  
                      i1l5627 2466                        i1l5573 2226                        i1l5565 21EA  
                      i1l5639 24BA                        i1l5577 2244                        i1l5569 2208  
                      i1l5579 2276                        i1l5915 008C                        i1l5945 00CE  
                      i1l5971 0168                        i1l5949 00D6                        i1l5985 01C6  
                      i1l5977 0196                        i1l5995 01F6                        i1l5989 01CE  
                      i2l7151 5A68                        i2l7161 5A9E                        i2l7153 5A6E  
                      i2l7149 5A5C                        i2l7181 58F0                        _RXB0D0 000F66  
                      _RXB0D1 000F67                        _RXB0D2 000F68                        _RXB0D3 000F69  
                      _RXB0D4 000F6A                        _RXB1D0 000F56                        _RXB0D5 000F6B  
                      _RXB1D1 000F57                        _RXB0D6 000F6C                        _RXB1D2 000F58  
                      _RXB0D7 000F6D                        _RXB1D3 000F59                        _RXB1D4 000F5A  
                      _RXB1D5 000F5B                        _RXB1D6 000F5C                        _RXB1D7 000F5D  
                      _TXB0D0 000F46                        _TXB0D1 000F47                        _TXB0D2 000F48  
                      _TXB0D3 000F49                        _TXB1D0 000F36                        _TXB0D4 000F4A  
                      _TXB1D1 000F37                        _TXB0D5 000F4B                        _TXB1D2 000F38  
                      _TXB0D6 000F4C                        _TXB1D3 000F39                        _TXB0D7 000F4D  
                      _TXB2D0 000F26                        _TXB1D4 000F3A                        _TXB2D1 000F27  
                      _TXB1D5 000F3B                        _TXB2D2 000F28                        _TXB1D6 000F3C  
                      _TXB2D3 000F29                        _TXB1D7 000F3D                        _TXB2D4 000F2A  
                      _TXB2D5 000F2B                        _TXB2D6 000F2C                        _TXB2D7 000F2D  
          CANsendMessage@data 007B              __end_of_can_send 5422            CANsendMessage@tamp 0083  
            __end_of___xxtofl 4DEE             __end_of_ISR_Bassa 0258              __end_of_delay_ms 5C82  
       __size_of_CANSetFilter 0B06                __CFG_XINST$OFF 000000                        ___flge 515C  
             _data_correction 0163                     ??___fladd 00B5                        ___wmul 5CBA  
                   ??___fldiv 007F                     ??___flneg 00AD                __CFG_STVREN$ON 000000  
                   ??___flmul 0098                     ??___flsub 00D7                     ??___fltol 00C5  
                   ??___lwdiv 0064                  ??_CANSetMask 007C                        _gianni 0042  
                      _raggio 01DC                        clear_0 59C8                        clear_1 59D4  
                      clear_2 59E4                     ??_delay_s 007F                        floor@i 0189  
                      floor@x 00D3               __CFG_BOREN$BOHW 000000                  __pdataCOMRAM 0046  
                      sin@sgn 01A7                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                  _CANSetFilter 0D52  
                  ___flge@ff1 00B1                    ___flge@ff2 00B5                  ___xxtofl@arg 0185  
                ___xxtofl@exp 0184                  ___xxtofl@val 00CB                    __accesstop 0060  
     __end_of__initialization 5A34            __end_of_CANSetMask 3E3A               __CFG_PBADEN$OFF 000000  
                  ___flneg@f1 00A9                 ?_park_routine 0001                  eval_poly@res 00CD  
               ___rparam_used 000000                    ___fltol@f1 00C1                __pcstackCOMRAM 0001  
                   ?_ISR_Alta 0001                  __pidataBANK0 5D8C                  __pidataBANK1 5D82  
               __end_of_floor 5546                 __end_of_frexp 59C2              ??_configurazione 0091  
       CANSetFilter@numBuffer 0080                  _actual_speed 00DF         __size_of_CANisTxReady 0024  
                     ??_floor 00D7                       ??_frexp 007D      __end_of_CANOperationMode 5D82  
                  __pbssBANK0 00D7                    __pbssBANK1 0100               _sensor_distance 0024  
          __size_of_eval_poly 0118                    _data_brake 015B                ??_park_routine 00D7  
               ISR_Bassa@gigi 0022       __size_of_CANsendMessage 078C                    _data_speed 016B  
                  _activation 0220      __size_of_can_interpreter 0054            __size_of_parallelo 028C  
        __size_of_park_search 01A8             _old_alignment_gap 0134                    ??_ISR_Alta 0067  
                     ?___flge 00B1                       ?___wmul 0077                       _CANSTAT 000F6E  
                _CANisTxReady 5D48                       _BRGCON1 000F70                       _BRGCON2 000F71  
                     _BRGCON3 000F72                     ?_can_send 0001                     ?___xxtofl 00CB  
      __size_of_CANInitialize 01C6                     ?_delay_ms 007D                       _RXB0DLC 000F65  
                     _RXB1DLC 000F55                       _RXB0CON 000F60                       _RXB1CON 000F50  
                     _TXB0DLC 000F45                       _TXB1DLC 000F35                       _TXB2DLC 000F25  
         CANsendMessage@flags 007E                       __Hparam 0000                    _left_speed 0038  
                     __Lparam 0000              delay_ms@value_ms 007D                       _Pminimo 0118  
             __size_of___flge 0190                    _matematica 24F0                       ___fladd 29C4  
                     ___fldiv 36DC                       ___flneg 5C82                       ___flmul 2E6C  
                     ___flsub 5BC2                       ___fltol 565E               __size_of___wmul 0036  
                     ___lwdiv 5A3E                  __psmallconst 0D00          CANInitialize@propSeg 008E  
                     __pcinit 59C2             __end_of_eval_poly 565E                       _delay_s 5D1C  
                     __ramtop 0D00                       __ptext0 5B76                       __ptext1 4FB4  
                     __ptext2 4742                       __ptext3 5CF0                       __ptext4 4464  
                     __ptext5 24F0                       __ptext6 576A                       __ptext7 3E3A  
                     __ptext8 5422                       __ptext9 592E                     _T0CONbits 000FD5  
                  ??_can_send 0087                  __size_of_abs 002C                  __size_of_cos 00E4  
             atan@val_squared 018C                  __size_of_sin 0318                    ??___xxtofl 00CF  
                     atan@val 0190             __end_of_parallelo 49CE                    ??_delay_ms 007F  
                     asin@sgn 019C        CANreceiveMessage@error 000B               _start_operation 022A  
              __pintcode_body 584E          end_of_initialization 5A34                       int_func 584E  
               _CANInitialize 4DEE                     _ISR_Bassa 0018                       postdec1 000FE5  
                     postdec2 000FDD                       postinc0 000FEE                       postinc2 000FDE  
                     sqrt@grs 018A                       sqrt@exp 018E             ??_can_interpreter 0077  
     _steering_correction_dir 022B                     _PORTBbits 000F81                CANSetMask@mask 0077  
              CANSetMask@tamp 0081                  _distance_set 0110                CANSetMask@type 007B  
        __end_of_park_routine 4742                   ___fladd@grs 00C0                 ___xxtofl@sign 0183  
                   _TRISBbits 000F93                   ___fldiv@grs 008A                   ___fldiv@rem 0084  
                   _MUX_index 0040                    _pulse_time 003A       _clock_counter_reference 00E1  
                 ___flmul@grs 009E                _CANsendMessage 1858              CANInitialize@BRP 0088  
            CANInitialize@SJW 0087                ?_CANInitialize 0085                    ?_ISR_Bassa 0001  
                 ?_matematica 0001                __end_of___flge 52EC             __size_of_ISR_Alta 5926  
              __end_of___wmul 5CF0                 __pidataCOMRAM 5D8A                    floor@expon 018D  
         start_initialization 59C2                    eval_poly@d 00C5                    eval_poly@n 00C7  
                  eval_poly@x 00C1                   __end_of_abs 5D1C                   __end_of_cos 584E  
                 __end_of_sin 4152           CANSetMask@numBuffer 0080                 _data_speed_rx 0108  
      __end_of_CANsendMessage 1FE4             ?_CANOperationMode 0001                 _data_steering 0173  
                  frexp@value 0077            ??_CANOperationMode 0077             _distance_received 0224  
  CANInitialize@FilterConfig1 008F    CANInitialize@FilterConfig2 0090           _steering_correction 0043  
                    ??___flge 00B9                      ??___wmul 007B                   __pdataBANK0 00E7  
                 __pdataBANK1 01D8              __CFG_LPT1OSC$OFF 000000                     ___fladd@a 00B1  
                   ___fladd@b 00AD        CANInitialize@phaseSeg1 0085        CANInitialize@phaseSeg2 0086  
                   ___fldiv@a 007B                     ___fldiv@b 0077                     ___flmul@a 0094  
                   ___flmul@b 0090                   __pbssCOMRAM 0024                     ___flsub@a 0193  
                   ___flsub@b 018F                 __pcstackBANK0 0060                 __pcstackBANK1 0183  
                 _BRGCON2bits 000F71                   _BRGCON3bits 000F72             __size_of_can_send 0136  
           __size_of___xxtofl 01CE             __size_of_delay_ms 003A               ?_CANsendMessage 0077  
         __size_of_matematica 04D4               ??_CANInitialize 008A                     _asin$3746 01AC  
                   _asin$3747 01A4                     _asin$3748 01A0                    sin@coeff_a 0D2D  
                  sin@coeff_b 0D41                 ??_park_search 01B0                 _alignment_gap 00D7  
          CANSetFilter@filter 0077                     _data_test 017B              ___lwdiv@dividend 0060  
                  ISR_Bassa@i 0023                   ??_ISR_Bassa 000D                     __pintcode 0008  
                    ?___fladd 00AD                      ?___fldiv 0077                      ?___flneg 00A9  
                    ?___flmul 0090                      ?___flsub 018F                      ?___fltol 00C1  
       __size_of_park_routine 02DE                      ?___lwdiv 0060                   __pintcodelo 0018  
                    ?_delay_s 0001                   __smallconst 0D00                   _COMSTATbits 000F74  
                   _eval_poly 5546                     _larghezza 01D8              ___lwdiv@quotient 0065  
              __size_of_floor 0124                __size_of_frexp 0094       __size_of_configurazione 006C  
                   _parallelo 4742         CANreceiveMessage@tamp 000C                _prima_sterzata 0138  
              ___wmul@product 007B                      _LATBbits 000F8A               _can_interpreter 5B22  
                   atan@recip 018B                  _park_routine 4464  _delay_quartz_frequency_value 00E7  
                    _IPR3bits 000FA5                      _PIE3bits 000FA3                      i1u670_20 20CA  
                    i1u670_26 20CC                      i1u680_20 2324                      i1u672_25 20E0  
                    i1u680_26 2326                      i1u681_20 234E                      i1u681_26 2350  
                    i1u683_25 2362                      i1u907_27 00BC                      i1u669_20 209C  
                    i1u669_26 209E                      _PIR3bits 000FA4                      i1u678_25 2250  
                    i1u689_25 24C6                      _RXB0EIDH 000F63                      _RXB0EIDL 000F64  
                    _RXB1EIDH 000F53                      _RXB1EIDL 000F54                      _ISR_Alta 0008  
                   _set_speed 00E5                      _RCONbits 000FD0              __CFG_WDTPS$32768 000000  
                    _RXB0SIDH 000F61                      _RXB0SIDL 000F62                      _RXF0EIDH 000F02  
                    _RXB1SIDH 000F51                      _RXF0EIDL 000F03                      _RXB1SIDL 000F52  
                    _RXF1EIDH 000F06                      _RXF1EIDL 000F07                      _RXF2EIDH 000F0A  
                    _RXF2EIDL 000F0B                      _RXF3EIDH 000F0E                      _RXF3EIDL 000F0F  
                    _RXF4EIDH 000F12                      _RXF4EIDL 000F13                      _RXF5EIDH 000F16  
                    _RXF5EIDL 000F17                      _RXF0SIDH 000F00                      _RXF0SIDL 000F01  
         __end_of_park_search 515C                      _TXB0EIDH 000F43                      _RXF1SIDH 000F04  
                    _TXB0EIDL 000F44                      _RXF1SIDL 000F05                      _TXB1EIDH 000F33  
                    _RXF2SIDH 000F08                      _TXB1EIDL 000F34                      _RXF2SIDL 000F09  
                    _TXB2EIDH 000F23                      _RXF3SIDH 000F0C                      _TXB2EIDL 000F24  
                    _RXF3SIDL 000F0D                      _RXF4SIDH 000F10                      _RXF4SIDL 000F11  
                    _RXF5SIDH 000F14                      _RXF5SIDL 000F15                      _RXM0EIDH 000F1A  
                    _RXM0EIDL 000F1B                      _TXB0SIDH 000F41                      _RXM1EIDH 000F1E  
                    _TXB0SIDL 000F42                      _RXM1EIDL 000F1F                      _TXB1SIDH 000F31  
                    _TXB1SIDL 000F32                      _TXB2SIDH 000F21                      _TXB2SIDL 000F22  
                    _RXM0SIDH 000F18                      _RXM0SIDL 000F19                      _RXM1SIDH 000F1C  
                    _RXM1SIDL 000F1D                   _distance_dx 0034                   _distance_sx 0036  
                    _RXERRCNT 000F75                      _TXERRCNT 000F76             ___wmul@multiplier 0077  
                  ?_eval_poly 00C1           __end_ofatan@coeff_a 0D19           __end_ofatan@coeff_b 0D2D  
               ?_CANSetFilter 0077                   _INTCON2bits 000FF1                     copy_data0 59FE  
                  _CANCONbits 000F6F                    ?_parallelo 0001              _distance_average 00E3  
                   frexp@eptr 007B                      __Hparam0 0000                      __Lparam0 0000  
                _RXB0SIDLbits 000F62                  _RXB1SIDLbits 000F52                  ??_matematica 00D7  
               _request_sent1 0229              __size_of___fladd 04A8                    _CANSetMask 3A9C  
            __size_of___fldiv 03C0              __size_of___flneg 0038              __size_of___flmul 04A6  
            __size_of___flsub 0048              __size_of___fltol 010C                      _cos$3749 01B4  
            __size_of___lwdiv 0078              __size_of_delay_s 002C                      _can_send 52EC  
                    ___xxtofl 4C20                  _RXF0SIDLbits 000F01                      _delay_ms 5C48  
             ___lwdiv@divisor 0062                  _RXF1SIDLbits 000F05               ___lwdiv@counter 0064  
              ??_CANSetFilter 007C                      __ptext10 4C20                      __ptext11 565E  
                    __ptext20 29C4                      __ptext12 5BC2                      __ptext21 515C  
                    __ptext13 4152                      __ptext30 4DEE                      __ptext22 36DC  
                    __ptext14 3312                      __ptext31 3A9C                      __ptext23 5D1C  
                    __ptext15 49CE                      __ptext32 0D52                      __ptext24 5C48  
                    __ptext16 5C0A                      __ptext33 5D6C                      __ptext25 5CBA  
                    __ptext17 5C82                      __ptext34 5B22                      __ptext26 52EC  
                    __ptext18 5546                      __ptext27 1858                      __ptext19 2E6C  
                    __ptext36 1FE4                      __ptext28 5D48                      __ptext29 5AB6  
                    __ptext38 5A3E                  _RXF2SIDLbits 000F09                      _sin$3750 019F  
     __end_of_can_interpreter 5B76                  _RXF3SIDLbits 000F0D                      _distance 0140  
          __end_of_matematica 29C4                  _RXF4SIDLbits 000F11                  _RXF5SIDLbits 000F15  
    CANsendMessage@dataLength 007D                 __size_of_fabs 003E                 __size_of_atan 0252  
               __size_of_asin 0312                 __size_of_main 004C                 __size_of_sqrt 03CA  
                 _park_search 4FB4          CANreceiveMessage@msg 0001                  _TXB0SIDLbits 000F42  
                _TXB1SIDLbits 000F32                  _TXB2SIDLbits 000F22                      int$flags 0048  
   __size_of_CANOperationMode 0016                 ?_CANisTxReady 0001                   atan@coeff_a 0D01  
                 atan@coeff_b 0D19                   _RXB0DLCbits 000F65                   _RXB1DLCbits 000F55  
                _RXM0SIDLbits 000F19                   _RXB0CONbits 000F60                   _RXB1CONbits 000F50  
           _CANreceiveMessage 1FE4                  _RXM1SIDLbits 000F1D                    _INTCONbits 000FF2  
                 ??_eval_poly 00C9              ??_CANsendMessage 007F            ?_CANreceiveMessage 0001  
                _request_sent 0228                     sqrt@tfrac 0185                _configurazione 5AB6  
    CANsendMessage@identifier 0077                   ??_parallelo 00D5                      intlevel1 0000  
                    intlevel2 0000              CANSetFilter@tamp 0081              CANSetFilter@type 007B  
         ??_CANreceiveMessage 0003           _old_data_correction 0227                   _TXB0DLCbits 000F45  
                 _right_speed 003C                   _TXB1DLCbits 000F35                   _TXB0CONbits 000F40  
                 _TXB2DLCbits 000F25                   _TXB1CONbits 000F30                   _TXB2CONbits 000F20  
        CANOperationMode@mode 0077                   ?_CANSetMask 0077                ??_CANisTxReady 0077  
              _distance_error 0223               _matematica$3740 01C0               _matematica$3741 01C4  
             _matematica$3742 01C8               _matematica$3743 01CC               _matematica$3744 01D0  
             _matematica$3745 01D4               _matematica$3738 01B8               _matematica$3739 01BC  
   __end_of_CANreceiveMessage 24F0                      sqrt@frac 0194                      sqrt@sign 0183  
                    sqrt@root 0190                   _timerValue2 003E        __end_of_configurazione 5B22  
               ___fladd@signs 00BD                 _distance_wait 0226              ?_can_interpreter 0001  
                ___fladd@aexp 00BE                  ___fladd@bexp 00BF         __end_of_CANInitialize 4FB4  
