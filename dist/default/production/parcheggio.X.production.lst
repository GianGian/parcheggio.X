

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sun Jun 05 17:21:19 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F2685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    63  0000                     
    64                           	psect	idataBANK0
    65  006700                     __pidataBANK0:
    66                           	opt stack 0
    67                           
    68                           ;initializer for _delay_quartz_frequency_value
    69  006700  10                 	db	16
    70                           
    71                           	psect	idataBANK1
    72  0066F6                     __pidataBANK1:
    73                           	opt stack 0
    74                           
    75                           ;initializer for _larghezza
    76  0066F6  0000               	dw	0
    77  0066F8  4200               	dw	16896
    78                           
    79                           ;initializer for ISR_Bassa@F15917
    80  0066FA  03                 	db	3
    81  0066FB  06                 	db	6
    82                           
    83                           ;initializer for _raggio
    84  0066FC  0000               	dw	0
    85  0066FE  4234               	dw	16948
    86                           
    87                           	psect	smallconst
    88  000D00                     __psmallconst:
    89                           	opt stack 0
    90  000D00  00                 	db	0
    91  000D01                     atan@coeff_a:
    92                           	opt stack 0
    93  000D01  3C06               	dw	15366
    94  000D03  4204               	dw	16900
    95  000D05  9F7D               	dw	40829
    96  000D07  426A               	dw	17002
    97  000D09  905C               	dw	36956
    98  000D0B  4201               	dw	16897
    99  000D0D  4D60               	dw	19808
   100  000D0F  40BB               	dw	16571
   101  000D11  EC51               	dw	60497
   102  000D13  3E47               	dw	15943
   103  000D15  8DDE               	dw	36318
   104  000D17  BB1F               	dw	47903
   105  000D19                     __end_ofatan@coeff_a:
   106                           	opt stack 0
   107  000D19                     atan@coeff_b:
   108                           	opt stack 0
   109  000D19  3C06               	dw	15366
   110  000D1B  4204               	dw	16900
   111  000D1D  59C0               	dw	22976
   112  000D1F  428B               	dw	17035
   113  000D21  0474               	dw	1140
   114  000D23  4244               	dw	16964
   115  000D25  9BF9               	dw	39929
   116  000D27  414F               	dw	16719
   117  000D29  0000               	dw	0
   118  000D2B  3F80               	dw	16256
   119  000D2D                     __end_ofatan@coeff_b:
   120                           	opt stack 0
   121  000D2D                     sin@coeff_a:
   122                           	opt stack 0
   123  000D2D  F3EC               	dw	62444
   124  000D2F  484A               	dw	18506
   125  000D31  9535               	dw	38197
   126  000D33  C795               	dw	51093
   127  000D35  C117               	dw	49431
   128  000D37  45DC               	dw	17884
   129  000D39  DBFD               	dw	56317
   130  000D3B  C36D               	dw	50029
   131  000D3D  B372               	dw	45938
   132  000D3F  4033               	dw	16435
   133  000D41                     __end_ofsin@coeff_a:
   134                           	opt stack 0
   135  000D41                     sin@coeff_b:
   136                           	opt stack 0
   137  000D41  342B               	dw	13355
   138  000D43  4801               	dw	18433
   139  000D45  9D7F               	dw	40319
   140  000D47  45B0               	dw	17840
   141  000D49  FFE7               	dw	65511
   142  000D4B  42D9               	dw	17113
   143  000D4D  0000               	dw	0
   144  000D4F  3F80               	dw	16256
   145  000D51                     __end_ofsin@coeff_b:
   146                           	opt stack 0
   147  0000                     _RXB1CON	set	3920
   148  0000                     _RXB1CONbits	set	3920
   149  0000                     _RXB1D0	set	3926
   150  0000                     _RXB1D1	set	3927
   151  0000                     _RXB1D2	set	3928
   152  0000                     _RXB1D3	set	3929
   153  0000                     _RXB1D4	set	3930
   154  0000                     _RXB1D5	set	3931
   155  0000                     _RXB1D6	set	3932
   156  0000                     _RXB1D7	set	3933
   157  0000                     _RXB1DLC	set	3925
   158  0000                     _RXB1DLCbits	set	3925
   159  0000                     _RXB1EIDH	set	3923
   160  0000                     _RXB1EIDL	set	3924
   161  0000                     _RXB1SIDH	set	3921
   162  0000                     _RXB1SIDL	set	3922
   163  0000                     _RXB1SIDLbits	set	3922
   164  0000                     _RXF0EIDH	set	3842
   165  0000                     _RXF0EIDL	set	3843
   166  0000                     _RXF0SIDH	set	3840
   167  0000                     _RXF0SIDL	set	3841
   168  0000                     _RXF0SIDLbits	set	3841
   169  0000                     _RXF1EIDH	set	3846
   170  0000                     _RXF1EIDL	set	3847
   171  0000                     _RXF1SIDH	set	3844
   172  0000                     _RXF1SIDL	set	3845
   173  0000                     _RXF1SIDLbits	set	3845
   174  0000                     _RXF2EIDH	set	3850
   175  0000                     _RXF2EIDL	set	3851
   176  0000                     _RXF2SIDH	set	3848
   177  0000                     _RXF2SIDL	set	3849
   178  0000                     _RXF2SIDLbits	set	3849
   179  0000                     _RXF3EIDH	set	3854
   180  0000                     _RXF3EIDL	set	3855
   181  0000                     _RXF3SIDH	set	3852
   182  0000                     _RXF3SIDL	set	3853
   183  0000                     _RXF3SIDLbits	set	3853
   184  0000                     _RXF4EIDH	set	3858
   185  0000                     _RXF4EIDL	set	3859
   186  0000                     _RXF4SIDH	set	3856
   187  0000                     _RXF4SIDL	set	3857
   188  0000                     _RXF4SIDLbits	set	3857
   189  0000                     _RXF5EIDH	set	3862
   190  0000                     _RXF5EIDL	set	3863
   191  0000                     _RXF5SIDH	set	3860
   192  0000                     _RXF5SIDL	set	3861
   193  0000                     _RXF5SIDLbits	set	3861
   194  0000                     _RXM0EIDH	set	3866
   195  0000                     _RXM0EIDL	set	3867
   196  0000                     _RXM0SIDH	set	3864
   197  0000                     _RXM0SIDL	set	3865
   198  0000                     _RXM0SIDLbits	set	3865
   199  0000                     _RXM1EIDH	set	3870
   200  0000                     _RXM1EIDL	set	3871
   201  0000                     _RXM1SIDH	set	3868
   202  0000                     _RXM1SIDL	set	3869
   203  0000                     _RXM1SIDLbits	set	3869
   204  0000                     _TXB0CONbits	set	3904
   205  0000                     _TXB0D0	set	3910
   206  0000                     _TXB0D1	set	3911
   207  0000                     _TXB0D2	set	3912
   208  0000                     _TXB0D3	set	3913
   209  0000                     _TXB0D4	set	3914
   210  0000                     _TXB0D5	set	3915
   211  0000                     _TXB0D6	set	3916
   212  0000                     _TXB0D7	set	3917
   213  0000                     _TXB0DLC	set	3909
   214  0000                     _TXB0DLCbits	set	3909
   215  0000                     _TXB0EIDH	set	3907
   216  0000                     _TXB0EIDL	set	3908
   217  0000                     _TXB0SIDH	set	3905
   218  0000                     _TXB0SIDL	set	3906
   219  0000                     _TXB0SIDLbits	set	3906
   220  0000                     _TXB1CONbits	set	3888
   221  0000                     _TXB1D0	set	3894
   222  0000                     _TXB1D1	set	3895
   223  0000                     _TXB1D2	set	3896
   224  0000                     _TXB1D3	set	3897
   225  0000                     _TXB1D4	set	3898
   226  0000                     _TXB1D5	set	3899
   227  0000                     _TXB1D6	set	3900
   228  0000                     _TXB1D7	set	3901
   229  0000                     _TXB1DLC	set	3893
   230  0000                     _TXB1DLCbits	set	3893
   231  0000                     _TXB1EIDH	set	3891
   232  0000                     _TXB1EIDL	set	3892
   233  0000                     _TXB1SIDH	set	3889
   234  0000                     _TXB1SIDL	set	3890
   235  0000                     _TXB1SIDLbits	set	3890
   236  0000                     _TXB2CONbits	set	3872
   237  0000                     _TXB2D0	set	3878
   238  0000                     _TXB2D1	set	3879
   239  0000                     _TXB2D2	set	3880
   240  0000                     _TXB2D3	set	3881
   241  0000                     _TXB2D4	set	3882
   242  0000                     _TXB2D5	set	3883
   243  0000                     _TXB2D6	set	3884
   244  0000                     _TXB2D7	set	3885
   245  0000                     _TXB2DLC	set	3877
   246  0000                     _TXB2DLCbits	set	3877
   247  0000                     _TXB2EIDH	set	3875
   248  0000                     _TXB2EIDL	set	3876
   249  0000                     _TXB2SIDH	set	3873
   250  0000                     _TXB2SIDL	set	3874
   251  0000                     _TXB2SIDLbits	set	3874
   252  0000                     _ADCON1	set	4033
   253  0000                     _BRGCON1	set	3952
   254  0000                     _BRGCON2	set	3953
   255  0000                     _BRGCON2bits	set	3953
   256  0000                     _BRGCON3	set	3954
   257  0000                     _BRGCON3bits	set	3954
   258  0000                     _CANCON	set	3951
   259  0000                     _CANCONbits	set	3951
   260  0000                     _CANSTAT	set	3950
   261  0000                     _COMSTATbits	set	3956
   262  0000                     _INTCON2bits	set	4081
   263  0000                     _INTCONbits	set	4082
   264  0000                     _IPR3bits	set	4005
   265  0000                     _LATA	set	3977
   266  0000                     _LATB	set	3978
   267  0000                     _LATBbits	set	3978
   268  0000                     _LATC	set	3979
   269  0000                     _PIE3bits	set	4003
   270  0000                     _PIR3bits	set	4004
   271  0000                     _PORTA	set	3968
   272  0000                     _PORTBbits	set	3969
   273  0000                     _RCONbits	set	4048
   274  0000                     _RXB0CON	set	3936
   275  0000                     _RXB0CONbits	set	3936
   276  0000                     _RXB0D0	set	3942
   277  0000                     _RXB0D1	set	3943
   278  0000                     _RXB0D2	set	3944
   279  0000                     _RXB0D3	set	3945
   280  0000                     _RXB0D4	set	3946
   281  0000                     _RXB0D5	set	3947
   282  0000                     _RXB0D6	set	3948
   283  0000                     _RXB0D7	set	3949
   284  0000                     _RXB0DLC	set	3941
   285  0000                     _RXB0DLCbits	set	3941
   286  0000                     _RXB0EIDH	set	3939
   287  0000                     _RXB0EIDL	set	3940
   288  0000                     _RXB0SIDH	set	3937
   289  0000                     _RXB0SIDL	set	3938
   290  0000                     _RXB0SIDLbits	set	3938
   291  0000                     _RXERRCNT	set	3957
   292  0000                     _T0CON	set	4053
   293  0000                     _T0CONbits	set	4053
   294  0000                     _T3CON	set	4017
   295  0000                     _TMR0H	set	4055
   296  0000                     _TMR0L	set	4054
   297  0000                     _TMR3H	set	4019
   298  0000                     _TMR3L	set	4018
   299  0000                     _TRISA	set	3986
   300  0000                     _TRISB	set	3987
   301  0000                     _TRISBbits	set	3987
   302  0000                     _TRISC	set	3988
   303  0000                     _TXERRCNT	set	3958
   304                           
   305                           ; #config settings
   306  000D51  00                 	db	0	; dummy byte at the end
   307  0000                     
   308                           	psect	cinit
   309  00643A                     __pcinit:
   310                           	opt stack 0
   311  00643A                     start_initialization:
   312                           	opt stack 0
   313  00643A                     __initialization:
   314                           	opt stack 0
   315                           
   316                           ; Clear objects allocated to BANK1 (169 bytes)
   317  00643A  EE01  F000         	lfsr	0,__pbssBANK1
   318  00643E  0EA9               	movlw	169
   319  006440                     clear_0:
   320  006440  6AEE               	clrf	postinc0,c
   321  006442  06E8               	decf	wreg,f,c
   322  006444  E1FD               	bnz	clear_0
   323                           
   324                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   325  006446  6A44               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   326  006448  6A43               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   327                           
   328                           ; Clear objects allocated to COMRAM (27 bytes)
   329  00644A  EE00  F028         	lfsr	0,__pbssCOMRAM
   330  00644E  0E1B               	movlw	27
   331  006450                     clear_1:
   332  006450  6AEE               	clrf	postinc0,c
   333  006452  06E8               	decf	wreg,f,c
   334  006454  E1FD               	bnz	clear_1
   335                           
   336                           ; Initialize objects allocated to BANK1 (10 bytes)
   337                           ; load TBLPTR registers with __pidataBANK1
   338  006456  0EF6               	movlw	low __pidataBANK1
   339  006458  6EF6               	movwf	tblptrl,c
   340  00645A  0E66               	movlw	high __pidataBANK1
   341  00645C  6EF7               	movwf	tblptrh,c
   342  00645E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   343  006460  6EF8               	movwf	tblptru,c
   344  006462  EE01  F0F6         	lfsr	0,__pdataBANK1
   345  006466  EE10 F00A          	lfsr	1,10
   346  00646A                     copy_data0:
   347  00646A  0009               	tblrd		*+
   348  00646C  CFF5 FFEE          	movff	tablat,postinc0
   349  006470  50E5               	movf	postdec1,w,c
   350  006472  50E1               	movf	fsr1l,w,c
   351  006474  E1FA               	bnz	copy_data0
   352                           
   353                           ; Initialize objects allocated to BANK0 (1 bytes)
   354                           ; load TBLPTR registers with __pidataBANK0
   355  006476  0E00               	movlw	low __pidataBANK0
   356  006478  6EF6               	movwf	tblptrl,c
   357  00647A  0E67               	movlw	high __pidataBANK0
   358  00647C  6EF7               	movwf	tblptrh,c
   359  00647E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   360  006480  6EF8               	movwf	tblptru,c
   361  006482  0009               	tblrd		*+	;fetch initializer
   362  006484  CFF5 F0E6          	movff	tablat,__pdataBANK0
   363  006488                     end_of_initialization:
   364                           	opt stack 0
   365  006488                     __end_of__initialization:
   366                           	opt stack 0
   367  006488  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   368  00648A  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   369  00648C  0100               	movlb	0
   370  00648E  EF05  F02E         	goto	_main	;jump to C main() function
   371                           tblptru	equ	0xFF8
   372                           tblptrh	equ	0xFF7
   373                           tblptrl	equ	0xFF6
   374                           tablat	equ	0xFF5
   375                           postinc0	equ	0xFEE
   376                           wreg	equ	0xFE8
   377                           postdec1	equ	0xFE5
   378                           fsr1l	equ	0xFE1
   379                           
   380                           	psect	bitbssCOMRAM
   381  000218                     __pbitbssCOMRAM:
   382                           	opt stack 0
   383  000218                     _MUX_toggle:
   384                           	opt stack 0
   385  000218                     	ds	1
   386  000219                     _activation:
   387                           	opt stack 0
   388  000219                     	ds	1
   389  00021A                     _asd:
   390                           	opt stack 0
   391  00021A                     	ds	1
   392  00021B                     _avvicinamento:
   393                           	opt stack 0
   394  00021B                     	ds	1
   395  00021C                     _dir:
   396                           	opt stack 0
   397  00021C                     	ds	1
   398  00021D                     _distance_error:
   399                           	opt stack 0
   400  00021D                     	ds	1
   401  00021E                     _distance_received:
   402                           	opt stack 0
   403  00021E                     	ds	1
   404  00021F                     _distance_received1:
   405                           	opt stack 0
   406  00021F                     	ds	1
   407  000220                     _distance_wait:
   408                           	opt stack 0
   409  000220                     	ds	1
   410  000221                     _first:
   411                           	opt stack 0
   412  000221                     	ds	1
   413  000222                     _new_distance:
   414                           	opt stack 0
   415  000222                     	ds	1
   416  000223                     _old_dir_correction:
   417                           	opt stack 0
   418  000223                     	ds	1
   419  000224                     _request_sent:
   420                           	opt stack 0
   421  000224                     	ds	1
   422  000225                     _request_sent1:
   423                           	opt stack 0
   424  000225                     	ds	1
   425  000226                     _start_operation:
   426                           	opt stack 0
   427  000226                     	ds	1
   428  000227                     _steering_correction_dir:
   429                           	opt stack 0
   430  000227                     	ds	1
   431                           tblptru	equ	0xFF8
   432                           tblptrh	equ	0xFF7
   433                           tblptrl	equ	0xFF6
   434                           tablat	equ	0xFF5
   435                           postinc0	equ	0xFEE
   436                           wreg	equ	0xFE8
   437                           postdec1	equ	0xFE5
   438                           fsr1l	equ	0xFE1
   439                           
   440                           	psect	bssCOMRAM
   441  000028                     __pbssCOMRAM:
   442                           	opt stack 0
   443  000028                     _alignment_gap:
   444                           	opt stack 0
   445  000028                     	ds	4
   446  00002C                     _x:
   447                           	opt stack 0
   448  00002C                     	ds	4
   449  000030                     _z:
   450                           	opt stack 0
   451  000030                     	ds	4
   452  000034                     _clock_counter_reference:
   453                           	opt stack 0
   454  000034                     	ds	2
   455  000036                     _distance_average:
   456                           	opt stack 0
   457  000036                     	ds	2
   458  000038                     _distance_dx:
   459                           	opt stack 0
   460  000038                     	ds	2
   461  00003A                     _distance_sx:
   462                           	opt stack 0
   463  00003A                     	ds	2
   464  00003C                     _timerValue2:
   465                           	opt stack 0
   466  00003C                     	ds	2
   467  00003E                     _MUX_index:
   468                           	opt stack 0
   469  00003E                     	ds	1
   470  00003F                     _TMR3H_temp:
   471                           	opt stack 0
   472  00003F                     	ds	1
   473  000040                     _TMR3L_temp:
   474                           	opt stack 0
   475  000040                     	ds	1
   476  000041                     _counter:
   477                           	opt stack 0
   478  000041                     	ds	1
   479  000042                     _steering_correction:
   480                           	opt stack 0
   481  000042                     	ds	1
   482                           tblptru	equ	0xFF8
   483                           tblptrh	equ	0xFF7
   484                           tblptrl	equ	0xFF6
   485                           tablat	equ	0xFF5
   486                           postinc0	equ	0xFEE
   487                           wreg	equ	0xFE8
   488                           postdec1	equ	0xFE5
   489                           fsr1l	equ	0xFE1
   490                           
   491                           	psect	dataBANK0
   492  0000E6                     __pdataBANK0:
   493                           	opt stack 0
   494  0000E6                     _delay_quartz_frequency_value:
   495                           	opt stack 0
   496  0000E6                     	ds	1
   497                           tblptru	equ	0xFF8
   498                           tblptrh	equ	0xFF7
   499                           tblptrl	equ	0xFF6
   500                           tablat	equ	0xFF5
   501                           postinc0	equ	0xFEE
   502                           wreg	equ	0xFE8
   503                           postdec1	equ	0xFE5
   504                           fsr1l	equ	0xFE1
   505                           
   506                           	psect	bssBANK1
   507  000100                     __pbssBANK1:
   508                           	opt stack 0
   509  000100                     _sensor_distance:
   510                           	opt stack 0
   511  000100                     	ds	16
   512  000110                     _MUX_select:
   513                           	opt stack 0
   514  000110                     	ds	8
   515  000118                     _data_speed_rx:
   516                           	opt stack 0
   517  000118                     	ds	8
   518  000120                     _distance_set:
   519                           	opt stack 0
   520  000120                     	ds	8
   521  000128                     _sensor_distance_old:
   522                           	opt stack 0
   523  000128                     	ds	8
   524  000130                     _J_var:
   525                           	opt stack 0
   526  000130                     	ds	4
   527  000134                     _K_var:
   528                           	opt stack 0
   529  000134                     	ds	4
   530  000138                     _Pmin:
   531                           	opt stack 0
   532  000138                     	ds	4
   533  00013C                     _alfa:
   534                           	opt stack 0
   535  00013C                     	ds	4
   536  000140                     _beta:
   537                           	opt stack 0
   538  000140                     	ds	4
   539  000144                     _bordo:
   540                           	opt stack 0
   541  000144                     	ds	4
   542  000148                     _n:
   543                           	opt stack 0
   544  000148                     	ds	4
   545  00014C                     _old_alignment_gap:
   546                           	opt stack 0
   547  00014C                     	ds	4
   548  000150                     _prima_sterzata:
   549                           	opt stack 0
   550  000150                     	ds	4
   551  000154                     _actual_speed:
   552                           	opt stack 0
   553  000154                     	ds	2
   554  000156                     _distance:
   555                           	opt stack 0
   556  000156                     	ds	2
   557  000158                     _errno:
   558                           	opt stack 0
   559  000158                     	ds	2
   560  00015A                     _left_speed:
   561                           	opt stack 0
   562  00015A                     	ds	2
   563  00015C                     _pulse_time:
   564                           	opt stack 0
   565  00015C                     	ds	2
   566  00015E                     _right_speed:
   567                           	opt stack 0
   568  00015E                     	ds	2
   569  000160                     _set_speed:
   570                           	opt stack 0
   571  000160                     	ds	2
   572  000162                     _msg:
   573                           	opt stack 0
   574  000162                     	ds	15
   575  000171                     _data:
   576                           	opt stack 0
   577  000171                     	ds	8
   578  000179                     _data_brake:
   579                           	opt stack 0
   580  000179                     	ds	8
   581  000181                     _data_correction:
   582                           	opt stack 0
   583  000181                     	ds	8
   584  000189                     _data_speed:
   585                           	opt stack 0
   586  000189                     	ds	8
   587  000191                     _data_steering:
   588                           	opt stack 0
   589  000191                     	ds	8
   590  000199                     _data_test:
   591                           	opt stack 0
   592  000199                     	ds	8
   593  0001A1                     _sensor_distance_short:
   594                           	opt stack 0
   595  0001A1                     	ds	8
   596                           tblptru	equ	0xFF8
   597                           tblptrh	equ	0xFF7
   598                           tblptrl	equ	0xFF6
   599                           tablat	equ	0xFF5
   600                           postinc0	equ	0xFEE
   601                           wreg	equ	0xFE8
   602                           postdec1	equ	0xFE5
   603                           fsr1l	equ	0xFE1
   604                           
   605                           	psect	dataBANK1
   606  0001F6                     __pdataBANK1:
   607                           	opt stack 0
   608  0001F6                     _larghezza:
   609                           	opt stack 0
   610  0001F6                     	ds	4
   611  0001FA                     ISR_Bassa@F15917:
   612                           	opt stack 0
   613  0001FA                     	ds	2
   614  0001FC                     _raggio:
   615                           	opt stack 0
   616  0001FC                     	ds	4
   617                           tblptru	equ	0xFF8
   618                           tblptrh	equ	0xFF7
   619                           tblptrl	equ	0xFF6
   620                           tablat	equ	0xFF5
   621                           postinc0	equ	0xFEE
   622                           wreg	equ	0xFE8
   623                           postdec1	equ	0xFE5
   624                           fsr1l	equ	0xFE1
   625                           
   626                           	psect	cstackBANK2
   627  000200                     __pcstackBANK2:
   628                           	opt stack 0
   629  000200                     _park_routine$3690:
   630                           	opt stack 0
   631                           
   632                           ; 4 bytes @ 0x0
   633  000200                     	ds	4
   634  000204                     _park_routine$3691:
   635                           	opt stack 0
   636                           
   637                           ; 4 bytes @ 0x4
   638  000204                     	ds	4
   639  000208                     ??_main:
   640                           
   641                           ; 1 bytes @ 0x8
   642  000208                     	ds	4
   643                           tblptru	equ	0xFF8
   644                           tblptrh	equ	0xFF7
   645                           tblptrl	equ	0xFF6
   646                           tablat	equ	0xFF5
   647                           postinc0	equ	0xFEE
   648                           wreg	equ	0xFE8
   649                           postdec1	equ	0xFE5
   650                           fsr1l	equ	0xFE1
   651                           
   652                           	psect	cstackBANK1
   653  0001A9                     __pcstackBANK1:
   654                           	opt stack 0
   655  0001A9                     ?___flsub:
   656                           	opt stack 0
   657  0001A9                     atan@y:
   658                           	opt stack 0
   659  0001A9                     ___flsub@b:
   660                           	opt stack 0
   661                           
   662                           ; 4 bytes @ 0x0
   663  0001A9                     	ds	4
   664  0001AD                     atan@x:
   665                           	opt stack 0
   666  0001AD                     ___flsub@a:
   667                           	opt stack 0
   668                           
   669                           ; 4 bytes @ 0x4
   670  0001AD                     	ds	4
   671  0001B1                     ?_sin:
   672                           	opt stack 0
   673  0001B1                     atan@recip:
   674                           	opt stack 0
   675  0001B1                     sin@f:
   676                           	opt stack 0
   677                           
   678                           ; 4 bytes @ 0x8
   679  0001B1                     	ds	1
   680  0001B2                     atan@val_squared:
   681                           	opt stack 0
   682                           
   683                           ; 4 bytes @ 0x9
   684  0001B2                     	ds	3
   685  0001B5                     sin@y:
   686                           	opt stack 0
   687                           
   688                           ; 4 bytes @ 0xC
   689  0001B5                     	ds	1
   690  0001B6                     atan@val:
   691                           	opt stack 0
   692                           
   693                           ; 4 bytes @ 0xD
   694  0001B6                     	ds	3
   695  0001B9                     _sin$3703:
   696                           	opt stack 0
   697                           
   698                           ; 4 bytes @ 0x10
   699  0001B9                     	ds	1
   700  0001BA                     asin@sgn:
   701                           	opt stack 0
   702                           
   703                           ; 4 bytes @ 0x11
   704  0001BA                     	ds	3
   705  0001BD                     sin@x2:
   706                           	opt stack 0
   707                           
   708                           ; 4 bytes @ 0x14
   709  0001BD                     	ds	1
   710  0001BE                     _asin$3701:
   711                           	opt stack 0
   712                           
   713                           ; 4 bytes @ 0x15
   714  0001BE                     	ds	3
   715  0001C1                     sin@sgn:
   716                           	opt stack 0
   717                           
   718                           ; 1 bytes @ 0x18
   719  0001C1                     	ds	1
   720  0001C2                     _asin$3700:
   721                           	opt stack 0
   722                           
   723                           ; 4 bytes @ 0x19
   724  0001C2                     	ds	4
   725  0001C6                     asin@y:
   726                           	opt stack 0
   727                           
   728                           ; 4 bytes @ 0x1D
   729  0001C6                     	ds	4
   730  0001CA                     _asin$3699:
   731                           	opt stack 0
   732                           
   733                           ; 4 bytes @ 0x21
   734  0001CA                     	ds	4
   735  0001CE                     ??_park_search:
   736  0001CE                     ?_cos:
   737                           	opt stack 0
   738  0001CE                     cos@f:
   739                           	opt stack 0
   740                           
   741                           ; 4 bytes @ 0x25
   742  0001CE                     	ds	4
   743  0001D2                     _cos$3702:
   744                           	opt stack 0
   745                           
   746                           ; 4 bytes @ 0x29
   747  0001D2                     	ds	4
   748  0001D6                     _matematica$3692:
   749                           	opt stack 0
   750                           
   751                           ; 4 bytes @ 0x2D
   752  0001D6                     	ds	4
   753  0001DA                     _matematica$3693:
   754                           	opt stack 0
   755                           
   756                           ; 4 bytes @ 0x31
   757  0001DA                     	ds	4
   758  0001DE                     _matematica$3694:
   759                           	opt stack 0
   760                           
   761                           ; 4 bytes @ 0x35
   762  0001DE                     	ds	4
   763  0001E2                     _matematica$3695:
   764                           	opt stack 0
   765                           
   766                           ; 4 bytes @ 0x39
   767  0001E2                     	ds	4
   768  0001E6                     _matematica$3697:
   769                           	opt stack 0
   770                           
   771                           ; 4 bytes @ 0x3D
   772  0001E6                     	ds	4
   773  0001EA                     _matematica$3698:
   774                           	opt stack 0
   775                           
   776                           ; 4 bytes @ 0x41
   777  0001EA                     	ds	4
   778  0001EE                     _matematica$3696:
   779                           	opt stack 0
   780                           
   781                           ; 4 bytes @ 0x45
   782  0001EE                     	ds	4
   783  0001F2                     ??_park_routine:
   784                           
   785                           ; 1 bytes @ 0x49
   786  0001F2                     	ds	4
   787                           tblptru	equ	0xFF8
   788                           tblptrh	equ	0xFF7
   789                           tblptrl	equ	0xFF6
   790                           tablat	equ	0xFF5
   791                           postinc0	equ	0xFEE
   792                           wreg	equ	0xFE8
   793                           postdec1	equ	0xFE5
   794                           fsr1l	equ	0xFE1
   795                           
   796                           	psect	cstackBANK0
   797  000060                     __pcstackBANK0:
   798                           	opt stack 0
   799  000060                     ??_ISR_Bassa:
   800                           
   801                           ; 1 bytes @ 0x0
   802  000060                     	ds	21
   803  000075                     ISR_Bassa@MUX_index_collision:
   804                           	opt stack 0
   805                           
   806                           ; 2 bytes @ 0x15
   807  000075                     	ds	2
   808  000077                     ISR_Bassa@PORTA_temp:
   809                           	opt stack 0
   810                           
   811                           ; 1 bytes @ 0x17
   812  000077                     	ds	1
   813  000078                     ISR_Bassa@i:
   814                           	opt stack 0
   815                           
   816                           ; 1 bytes @ 0x18
   817  000078                     	ds	1
   818  000079                     ?_abs:
   819                           	opt stack 0
   820  000079                     ?___wmul:
   821                           	opt stack 0
   822  000079                     ?___fldiv:
   823                           	opt stack 0
   824  000079                     CANOperationMode@mode:
   825                           	opt stack 0
   826  000079                     _CANisTxReady$2796:
   827                           	opt stack 0
   828  000079                     ___wmul@multiplier:
   829                           	opt stack 0
   830  000079                     abs@a:
   831                           	opt stack 0
   832  000079                     CANsendMessage@identifier:
   833                           	opt stack 0
   834  000079                     CANSetMask@mask:
   835                           	opt stack 0
   836  000079                     CANSetFilter@filter:
   837                           	opt stack 0
   838  000079                     ___fldiv@b:
   839                           	opt stack 0
   840  000079                     frexp@value:
   841                           	opt stack 0
   842                           
   843                           ; 4 bytes @ 0x19
   844  000079                     	ds	2
   845  00007B                     ??_abs:
   846  00007B                     ___wmul@multiplicand:
   847                           	opt stack 0
   848                           
   849                           ; 2 bytes @ 0x1B
   850  00007B                     	ds	2
   851  00007D                     CANSetMask@type:
   852                           	opt stack 0
   853  00007D                     CANSetFilter@type:
   854                           	opt stack 0
   855  00007D                     CANsendMessage@data:
   856                           	opt stack 0
   857  00007D                     ___wmul@product:
   858                           	opt stack 0
   859  00007D                     frexp@eptr:
   860                           	opt stack 0
   861  00007D                     ___fldiv@a:
   862                           	opt stack 0
   863                           
   864                           ; 4 bytes @ 0x1D
   865  00007D                     	ds	1
   866  00007E                     ??_CANSetMask:
   867  00007E                     ??_CANSetFilter:
   868                           
   869                           ; 1 bytes @ 0x1E
   870  00007E                     	ds	1
   871  00007F                     ??_frexp:
   872  00007F                     CANsendMessage@dataLength:
   873                           	opt stack 0
   874  00007F                     delay_ms@value_ms:
   875                           	opt stack 0
   876                           
   877                           ; 2 bytes @ 0x1F
   878  00007F                     	ds	1
   879  000080                     CANsendMessage@flags:
   880                           	opt stack 0
   881                           
   882                           ; 1 bytes @ 0x20
   883  000080                     	ds	1
   884  000081                     ??___fldiv:
   885  000081                     ??_CANsendMessage:
   886  000081                     delay_s@value_s:
   887                           	opt stack 0
   888                           
   889                           ; 1 bytes @ 0x21
   890  000081                     	ds	1
   891  000082                     CANSetMask@numBuffer:
   892                           	opt stack 0
   893  000082                     CANSetFilter@numBuffer:
   894                           	opt stack 0
   895  000082                     delay_s@repeat_loop:
   896                           	opt stack 0
   897                           
   898                           ; 1 bytes @ 0x22
   899  000082                     	ds	1
   900  000083                     CANSetMask@tamp:
   901                           	opt stack 0
   902  000083                     CANSetFilter@tamp:
   903                           	opt stack 0
   904                           
   905                           ; 4 bytes @ 0x23
   906  000083                     	ds	2
   907  000085                     ___fldiv@sign:
   908                           	opt stack 0
   909  000085                     CANsendMessage@tamp:
   910                           	opt stack 0
   911                           
   912                           ; 4 bytes @ 0x25
   913  000085                     	ds	1
   914  000086                     ___fldiv@rem:
   915                           	opt stack 0
   916                           
   917                           ; 4 bytes @ 0x26
   918  000086                     	ds	1
   919  000087                     CANInitialize@phaseSeg1:
   920                           	opt stack 0
   921                           
   922                           ; 1 bytes @ 0x27
   923  000087                     	ds	1
   924  000088                     CANInitialize@phaseSeg2:
   925                           	opt stack 0
   926                           
   927                           ; 1 bytes @ 0x28
   928  000088                     	ds	1
   929  000089                     CANInitialize@SJW:
   930                           	opt stack 0
   931                           
   932                           ; 1 bytes @ 0x29
   933  000089                     	ds	1
   934  00008A                     CANInitialize@BRP:
   935                           	opt stack 0
   936  00008A                     ___fldiv@new_exp:
   937                           	opt stack 0
   938                           
   939                           ; 2 bytes @ 0x2A
   940  00008A                     	ds	1
   941  00008B                     CANInitialize@flags:
   942                           	opt stack 0
   943                           
   944                           ; 1 bytes @ 0x2B
   945  00008B                     	ds	1
   946  00008C                     ??_CANInitialize:
   947  00008C                     ___fldiv@grs:
   948                           	opt stack 0
   949                           
   950                           ; 4 bytes @ 0x2C
   951  00008C                     	ds	4
   952  000090                     CANInitialize@propSeg:
   953                           	opt stack 0
   954  000090                     ___fldiv@bexp:
   955                           	opt stack 0
   956                           
   957                           ; 1 bytes @ 0x30
   958  000090                     	ds	1
   959  000091                     CANInitialize@FilterConfig1:
   960                           	opt stack 0
   961  000091                     ___fldiv@aexp:
   962                           	opt stack 0
   963                           
   964                           ; 1 bytes @ 0x31
   965  000091                     	ds	1
   966  000092                     ?___flmul:
   967                           	opt stack 0
   968  000092                     CANInitialize@FilterConfig2:
   969                           	opt stack 0
   970  000092                     ___flmul@b:
   971                           	opt stack 0
   972                           
   973                           ; 4 bytes @ 0x32
   974  000092                     	ds	1
   975  000093                     
   976                           ; 1 bytes @ 0x33
   977  000093                     	ds	3
   978  000096                     ___flmul@a:
   979                           	opt stack 0
   980                           
   981                           ; 4 bytes @ 0x36
   982  000096                     	ds	4
   983  00009A                     ??___flmul:
   984                           
   985                           ; 1 bytes @ 0x3A
   986  00009A                     	ds	4
   987  00009E                     ___flmul@sign:
   988                           	opt stack 0
   989                           
   990                           ; 1 bytes @ 0x3E
   991  00009E                     	ds	1
   992  00009F                     ___flmul@aexp:
   993                           	opt stack 0
   994                           
   995                           ; 1 bytes @ 0x3F
   996  00009F                     	ds	1
   997  0000A0                     ___flmul@grs:
   998                           	opt stack 0
   999                           
  1000                           ; 4 bytes @ 0x40
  1001  0000A0                     	ds	4
  1002  0000A4                     ___flmul@bexp:
  1003                           	opt stack 0
  1004                           
  1005                           ; 1 bytes @ 0x44
  1006  0000A4                     	ds	1
  1007  0000A5                     ___flmul@prod:
  1008                           	opt stack 0
  1009                           
  1010                           ; 4 bytes @ 0x45
  1011  0000A5                     	ds	4
  1012  0000A9                     ___flmul@temp:
  1013                           	opt stack 0
  1014                           
  1015                           ; 2 bytes @ 0x49
  1016  0000A9                     	ds	2
  1017  0000AB                     ?___fladd:
  1018                           	opt stack 0
  1019  0000AB                     ___fladd@b:
  1020                           	opt stack 0
  1021                           
  1022                           ; 4 bytes @ 0x4B
  1023  0000AB                     	ds	4
  1024  0000AF                     ___fladd@a:
  1025                           	opt stack 0
  1026                           
  1027                           ; 4 bytes @ 0x4F
  1028  0000AF                     	ds	4
  1029  0000B3                     ??___fladd:
  1030                           
  1031                           ; 1 bytes @ 0x53
  1032  0000B3                     	ds	8
  1033  0000BB                     ___fladd@signs:
  1034                           	opt stack 0
  1035                           
  1036                           ; 1 bytes @ 0x5B
  1037  0000BB                     	ds	1
  1038  0000BC                     ___fladd@aexp:
  1039                           	opt stack 0
  1040                           
  1041                           ; 1 bytes @ 0x5C
  1042  0000BC                     	ds	1
  1043  0000BD                     ___fladd@bexp:
  1044                           	opt stack 0
  1045                           
  1046                           ; 1 bytes @ 0x5D
  1047  0000BD                     	ds	1
  1048  0000BE                     ___fladd@grs:
  1049                           	opt stack 0
  1050                           
  1051                           ; 1 bytes @ 0x5E
  1052  0000BE                     	ds	1
  1053  0000BF                     ?_eval_poly:
  1054                           	opt stack 0
  1055  0000BF                     ?___flneg:
  1056                           	opt stack 0
  1057  0000BF                     eval_poly@x:
  1058                           	opt stack 0
  1059  0000BF                     ___flneg@f1:
  1060                           	opt stack 0
  1061                           
  1062                           ; 4 bytes @ 0x5F
  1063  0000BF                     	ds	4
  1064  0000C3                     ?_sqrt:
  1065                           	opt stack 0
  1066  0000C3                     ?_fabs:
  1067                           	opt stack 0
  1068  0000C3                     ?___fltol:
  1069                           	opt stack 0
  1070  0000C3                     eval_poly@d:
  1071                           	opt stack 0
  1072  0000C3                     fabs@d:
  1073                           	opt stack 0
  1074  0000C3                     ___fltol@f1:
  1075                           	opt stack 0
  1076  0000C3                     sqrt@a:
  1077                           	opt stack 0
  1078                           
  1079                           ; 4 bytes @ 0x63
  1080  0000C3                     	ds	2
  1081  0000C5                     eval_poly@n:
  1082                           	opt stack 0
  1083                           
  1084                           ; 2 bytes @ 0x65
  1085  0000C5                     	ds	2
  1086  0000C7                     ??_sqrt:
  1087  0000C7                     ??_eval_poly:
  1088  0000C7                     ??___fltol:
  1089  0000C7                     ___flge@ff1:
  1090                           	opt stack 0
  1091                           
  1092                           ; 4 bytes @ 0x67
  1093  0000C7                     	ds	4
  1094  0000CB                     ___fltol@sign1:
  1095                           	opt stack 0
  1096  0000CB                     sqrt@sign:
  1097                           	opt stack 0
  1098  0000CB                     eval_poly@res:
  1099                           	opt stack 0
  1100  0000CB                     ___flge@ff2:
  1101                           	opt stack 0
  1102                           
  1103                           ; 4 bytes @ 0x6B
  1104  0000CB                     	ds	1
  1105  0000CC                     ___fltol@exp1:
  1106                           	opt stack 0
  1107  0000CC                     sqrt@i:
  1108                           	opt stack 0
  1109                           
  1110                           ; 1 bytes @ 0x6C
  1111  0000CC                     	ds	1
  1112  0000CD                     ?___xxtofl:
  1113                           	opt stack 0
  1114  0000CD                     sqrt@tfrac:
  1115                           	opt stack 0
  1116  0000CD                     ___xxtofl@val:
  1117                           	opt stack 0
  1118                           
  1119                           ; 4 bytes @ 0x6D
  1120  0000CD                     	ds	2
  1121  0000CF                     ??___flge:
  1122                           
  1123                           ; 1 bytes @ 0x6F
  1124  0000CF                     	ds	2
  1125  0000D1                     ??___xxtofl:
  1126  0000D1                     sqrt@p:
  1127                           	opt stack 0
  1128                           
  1129                           ; 1 bytes @ 0x71
  1130  0000D1                     	ds	1
  1131  0000D2                     sqrt@grs:
  1132                           	opt stack 0
  1133                           
  1134                           ; 4 bytes @ 0x72
  1135  0000D2                     	ds	1
  1136  0000D3                     ?_atan:
  1137                           	opt stack 0
  1138  0000D3                     atan@f:
  1139                           	opt stack 0
  1140                           
  1141                           ; 4 bytes @ 0x73
  1142  0000D3                     	ds	2
  1143  0000D5                     ___xxtofl@sign:
  1144                           	opt stack 0
  1145                           
  1146                           ; 1 bytes @ 0x75
  1147  0000D5                     	ds	1
  1148  0000D6                     ___xxtofl@exp:
  1149                           	opt stack 0
  1150  0000D6                     sqrt@exp:
  1151                           	opt stack 0
  1152                           
  1153                           ; 2 bytes @ 0x76
  1154  0000D6                     	ds	1
  1155  0000D7                     ___xxtofl@arg:
  1156                           	opt stack 0
  1157                           
  1158                           ; 4 bytes @ 0x77
  1159  0000D7                     	ds	1
  1160  0000D8                     sqrt@root:
  1161                           	opt stack 0
  1162                           
  1163                           ; 4 bytes @ 0x78
  1164  0000D8                     	ds	3
  1165  0000DB                     ?_floor:
  1166                           	opt stack 0
  1167  0000DB                     floor@x:
  1168                           	opt stack 0
  1169                           
  1170                           ; 4 bytes @ 0x7B
  1171  0000DB                     	ds	1
  1172  0000DC                     sqrt@frac:
  1173                           	opt stack 0
  1174                           
  1175                           ; 4 bytes @ 0x7C
  1176  0000DC                     	ds	3
  1177  0000DF                     floor@i:
  1178                           	opt stack 0
  1179                           
  1180                           ; 4 bytes @ 0x7F
  1181  0000DF                     	ds	1
  1182  0000E0                     ?_asin:
  1183                           	opt stack 0
  1184  0000E0                     asin@x:
  1185                           	opt stack 0
  1186                           
  1187                           ; 4 bytes @ 0x80
  1188  0000E0                     	ds	3
  1189  0000E3                     floor@expon:
  1190                           	opt stack 0
  1191                           
  1192                           ; 2 bytes @ 0x83
  1193  0000E3                     	ds	1
  1194  0000E4                     ??_parallelo:
  1195  0000E4                     
  1196                           ; 1 bytes @ 0x84
  1197  0000E4                     	ds	1
  1198  0000E5                     
  1199                           ; 1 bytes @ 0x85
  1200  0000E5                     	ds	1
  1201                           tblptru	equ	0xFF8
  1202                           tblptrh	equ	0xFF7
  1203                           tblptrl	equ	0xFF6
  1204                           tablat	equ	0xFF5
  1205                           postinc0	equ	0xFEE
  1206                           wreg	equ	0xFE8
  1207                           postdec1	equ	0xFE5
  1208                           fsr1l	equ	0xFE1
  1209                           
  1210                           	psect	cstackCOMRAM
  1211  000001                     __pcstackCOMRAM:
  1212                           	opt stack 0
  1213  000001                     ?___lwdiv:
  1214                           	opt stack 0
  1215  000001                     ___lwdiv@dividend:
  1216                           	opt stack 0
  1217                           
  1218                           ; 2 bytes @ 0x0
  1219  000001                     	ds	2
  1220  000003                     ___lwdiv@divisor:
  1221                           	opt stack 0
  1222                           
  1223                           ; 2 bytes @ 0x2
  1224  000003                     	ds	2
  1225  000005                     ___lwdiv@quotient:
  1226                           	opt stack 0
  1227                           
  1228                           ; 2 bytes @ 0x4
  1229  000005                     	ds	2
  1230  000007                     ___lwdiv@counter:
  1231                           	opt stack 0
  1232                           
  1233                           ; 1 bytes @ 0x6
  1234  000007                     	ds	1
  1235  000008                     ??_ISR_Alta:
  1236                           
  1237                           ; 1 bytes @ 0x7
  1238  000008                     	ds	16
  1239  000018                     ?i1___wmul:
  1240                           	opt stack 0
  1241  000018                     CANreceiveMessage@msg:
  1242                           	opt stack 0
  1243  000018                     i1___wmul@multiplier:
  1244                           	opt stack 0
  1245  000018                     i1CANsendMessage@identifier:
  1246                           	opt stack 0
  1247                           
  1248                           ; 4 bytes @ 0x17
  1249  000018                     	ds	2
  1250  00001A                     ??_CANreceiveMessage:
  1251  00001A                     i1___wmul@multiplicand:
  1252                           	opt stack 0
  1253                           
  1254                           ; 2 bytes @ 0x19
  1255  00001A                     	ds	2
  1256  00001C                     i1CANsendMessage@data:
  1257                           	opt stack 0
  1258  00001C                     i1___wmul@product:
  1259                           	opt stack 0
  1260                           
  1261                           ; 2 bytes @ 0x1B
  1262  00001C                     	ds	2
  1263  00001E                     i1CANsendMessage@dataLength:
  1264                           	opt stack 0
  1265  00001E                     i1delay_ms@value_ms:
  1266                           	opt stack 0
  1267                           
  1268                           ; 2 bytes @ 0x1D
  1269  00001E                     	ds	1
  1270  00001F                     i1CANsendMessage@flags:
  1271                           	opt stack 0
  1272                           
  1273                           ; 1 bytes @ 0x1E
  1274  00001F                     	ds	1
  1275  000020                     ??i1_CANsendMessage:
  1276  000020                     
  1277                           ; 1 bytes @ 0x1F
  1278  000020                     	ds	2
  1279  000022                     CANreceiveMessage@error:
  1280                           	opt stack 0
  1281                           
  1282                           ; 1 bytes @ 0x21
  1283  000022                     	ds	1
  1284  000023                     CANreceiveMessage@tamp:
  1285                           	opt stack 0
  1286                           
  1287                           ; 1 bytes @ 0x22
  1288  000023                     	ds	1
  1289  000024                     i1CANsendMessage@tamp:
  1290                           	opt stack 0
  1291                           
  1292                           ; 4 bytes @ 0x23
  1293  000024                     	ds	4
  1294                           tblptru	equ	0xFF8
  1295                           tblptrh	equ	0xFF7
  1296                           tblptrl	equ	0xFF6
  1297                           tablat	equ	0xFF5
  1298                           postinc0	equ	0xFEE
  1299                           wreg	equ	0xFE8
  1300                           postdec1	equ	0xFE5
  1301                           fsr1l	equ	0xFE1
  1302                           
  1303 ;;
  1304 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1305 ;;
  1306 ;; *************** function _main *****************
  1307 ;; Defined at:
  1308 ;;		line 232 in file "parcheggio.c"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;		None
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;		None
  1313 ;; Return value:  Size  Location     Type
  1314 ;;                  1    wreg      void 
  1315 ;; Registers used:
  1316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1324 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  1325 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  1326 ;;Total ram usage:        4 bytes
  1327 ;; Hardware stack levels required when called:   11
  1328 ;; This function calls:
  1329 ;;		_CANisTxReady
  1330 ;;		_CANsendMessage
  1331 ;;		_configurations
  1332 ;;		_delay_ms
  1333 ;;		_park_routine
  1334 ;;		_park_search
  1335 ;; This function is called by:
  1336 ;;		Startup code after reset
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339                           
  1340                           	psect	text0
  1341  005C0A                     __ptext0:
  1342                           	opt stack 0
  1343  005C0A                     _main:
  1344                           	opt stack 20
  1345                           
  1346                           ;parcheggio.c: 233: MUX_select[0] = 0b00000000;
  1347                           
  1348                           ;incstack = 0
  1349  005C0A  0E00               	movlw	0
  1350  005C0C  0101               	movlb	1	; () banked
  1351  005C0E  6F10               	movwf	_MUX_select& (0+255),b	;volatile
  1352                           
  1353                           ;parcheggio.c: 234: MUX_select[1] = 0b00000001;
  1354  005C10  0E01               	movlw	1
  1355  005C12  0101               	movlb	1	; () banked
  1356  005C14  6F11               	movwf	(_MUX_select+1)& (0+255),b	;volatile
  1357                           
  1358                           ;parcheggio.c: 235: MUX_select[2] = 0b00000010;
  1359  005C16  0E02               	movlw	2
  1360  005C18  0101               	movlb	1	; () banked
  1361  005C1A  6F12               	movwf	(_MUX_select+2)& (0+255),b	;volatile
  1362                           
  1363                           ;parcheggio.c: 236: MUX_select[3] = 0b00000011;
  1364  005C1C  0E03               	movlw	3
  1365  005C1E  0101               	movlb	1	; () banked
  1366  005C20  6F13               	movwf	(_MUX_select+3)& (0+255),b	;volatile
  1367                           
  1368                           ;parcheggio.c: 237: MUX_select[4] = 0b00000100;
  1369  005C22  0E04               	movlw	4
  1370  005C24  0101               	movlb	1	; () banked
  1371  005C26  6F14               	movwf	(_MUX_select+4)& (0+255),b	;volatile
  1372                           
  1373                           ;parcheggio.c: 238: MUX_select[5] = 0b00000101;
  1374  005C28  0E05               	movlw	5
  1375  005C2A  0101               	movlb	1	; () banked
  1376  005C2C  6F15               	movwf	(_MUX_select+5)& (0+255),b	;volatile
  1377                           
  1378                           ;parcheggio.c: 239: MUX_select[6] = 0b00000110;
  1379  005C2E  0E06               	movlw	6
  1380  005C30  0101               	movlb	1	; () banked
  1381  005C32  6F16               	movwf	(_MUX_select+6)& (0+255),b	;volatile
  1382                           
  1383                           ;parcheggio.c: 240: MUX_select[7] = 0b00000111;
  1384  005C34  0E07               	movlw	7
  1385  005C36  0101               	movlb	1	; () banked
  1386  005C38  6F17               	movwf	(_MUX_select+7)& (0+255),b	;volatile
  1387                           
  1388                           ; BSR set to: 1
  1389                           ;parcheggio.c: 242: configurations();
  1390  005C3A  ECE7  F031         	call	_configurations	;wreg free
  1391                           
  1392                           ;parcheggio.c: 244: PORTBbits.RB4 = 0;
  1393  005C3E  9881               	bcf	3969,4,c	;volatile
  1394                           
  1395                           ;parcheggio.c: 245: PORTBbits.RB5 = 0;
  1396  005C40  9A81               	bcf	3969,5,c	;volatile
  1397                           
  1398                           ;parcheggio.c: 246: PORTBbits.RB6 = 0;
  1399  005C42  9C81               	bcf	3969,6,c	;volatile
  1400                           
  1401                           ;parcheggio.c: 248: request_sent = 0;
  1402  005C44  9844               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1403                           
  1404                           ;parcheggio.c: 249: start_operation = 0;
  1405  005C46  9C44               	bcf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  1406                           
  1407                           ;parcheggio.c: 250: delay_ms(500);
  1408  005C48  0E01               	movlw	1
  1409  005C4A  0100               	movlb	0	; () banked
  1410  005C4C  6F80               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1411  005C4E  0EF4               	movlw	244
  1412  005C50  6F7F               	movwf	delay_ms@value_ms& (0+255),b
  1413  005C52  ECEC  F032         	call	_delay_ms	;wreg free
  1414                           
  1415                           ;parcheggio.c: 253: while (activation != 1) {
  1416                           
  1417                           ;parcheggio.c: 252: while (1) {
  1418  005C56  D033               	goto	l8704
  1419  005C58                     l8696:
  1420                           
  1421                           ;parcheggio.c: 254: delay_ms(10);
  1422  005C58  0E00               	movlw	0
  1423  005C5A  0100               	movlb	0	; () banked
  1424  005C5C  6F80               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1425  005C5E  0E0A               	movlw	10
  1426  005C60  6F7F               	movwf	delay_ms@value_ms& (0+255),b
  1427  005C62  ECEC  F032         	call	_delay_ms	;wreg free
  1428  005C66                     l8698:
  1429  005C66  EC5E  F033         	call	_CANisTxReady	;wreg free
  1430  005C6A  0900               	iorlw	0
  1431  005C6C  B4D8               	btfsc	status,2,c
  1432  005C6E  D7FB               	goto	l8698
  1433                           
  1434                           ;parcheggio.c: 256: PORTBbits.RB4 = ~PORTBbits.RB4;
  1435  005C70  A881               	btfss	3969,4,c	;volatile
  1436  005C72  D002               	goto	u11890
  1437  005C74  0E01               	movlw	1
  1438  005C76  D001               	goto	u11896
  1439  005C78                     u11890:
  1440  005C78  0E00               	movlw	0
  1441  005C7A                     u11896:
  1442  005C7A  0AFF               	xorlw	255
  1443  005C7C  0102               	movlb	2	; () banked
  1444  005C7E  6F08               	movwf	??_main& (0+255),b
  1445  005C80  0102               	movlb	2	; () banked
  1446  005C82  3B08               	swapf	??_main& (0+255),f,b
  1447  005C84  5081               	movf	3969,w,c	;volatile
  1448  005C86  0102               	movlb	2	; () banked
  1449  005C88  1908               	xorwf	??_main& (0+255),w,b
  1450  005C8A  0BEF               	andlw	-17
  1451  005C8C  1908               	xorwf	??_main& (0+255),w,b
  1452  005C8E  6E81               	movwf	3969,c	;volatile
  1453                           
  1454                           ; BSR set to: 2
  1455                           ;parcheggio.c: 257: CANsendMessage(0b00000010001, sensor_distance_short, 2, CAN_CONFIG_S
      +                          TD_MSG & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1456  005C90  0E11               	movlw	17
  1457  005C92  0100               	movlb	0	; () banked
  1458  005C94  6F79               	movwf	CANsendMessage@identifier& (0+255),b
  1459  005C96  0E00               	movlw	0
  1460  005C98  6F7A               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1461  005C9A  0E00               	movlw	0
  1462  005C9C  6F7B               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1463  005C9E  0E00               	movlw	0
  1464  005CA0  6F7C               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1465  005CA2  0EA1               	movlw	low _sensor_distance_short
  1466  005CA4  0100               	movlb	0	; () banked
  1467  005CA6  6F7D               	movwf	CANsendMessage@data& (0+255),b
  1468  005CA8  0E01               	movlw	high _sensor_distance_short
  1469  005CAA  0100               	movlb	0	; () banked
  1470  005CAC  6F7E               	movwf	(CANsendMessage@data+1)& (0+255),b
  1471  005CAE  0E02               	movlw	2
  1472  005CB0  0100               	movlb	0	; () banked
  1473  005CB2  6F7F               	movwf	CANsendMessage@dataLength& (0+255),b
  1474  005CB4  0EBC               	movlw	188
  1475  005CB6  0100               	movlb	0	; () banked
  1476  005CB8  6F80               	movwf	CANsendMessage@flags& (0+255),b
  1477  005CBA  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1478  005CBE                     l8704:
  1479  005CBE  A243               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1480  005CC0  D7CB               	goto	l8696
  1481                           
  1482                           ;parcheggio.c: 258: }
  1483                           ;parcheggio.c: 260: park_search();
  1484  005CC2  EC89  F02A         	call	_park_search	;wreg free
  1485                           
  1486                           ;parcheggio.c: 262: left_speed = data_speed_rx[1];
  1487  005CC6  C119  F15A         	movff	_data_speed_rx+1,_left_speed	;volatile
  1488  005CCA  0101               	movlb	1	; () banked
  1489  005CCC  6B5B               	clrf	(_left_speed+1)& (0+255),b	;volatile
  1490                           
  1491                           ; BSR set to: 1
  1492                           ;parcheggio.c: 263: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
  1493  005CCE  0101               	movlb	1	; () banked
  1494  005CD0  515A               	movf	_left_speed& (0+255),w,b	;volatile
  1495  005CD2  0102               	movlb	2	; () banked
  1496  005CD4  6F08               	movwf	??_main& (0+255),b
  1497  005CD6  0101               	movlb	1	; () banked
  1498  005CD8  5118               	movf	_data_speed_rx& (0+255),w,b	;volatile
  1499  005CDA  0101               	movlb	1	; () banked
  1500  005CDC  6F5A               	movwf	_left_speed& (0+255),b	;volatile
  1501  005CDE  C208  F15B         	movff	??_main,_left_speed+1	;volatile
  1502                           
  1503                           ; BSR set to: 1
  1504                           ;parcheggio.c: 264: right_speed = data_speed_rx[3];
  1505  005CE2  C11B  F15E         	movff	_data_speed_rx+3,_right_speed	;volatile
  1506  005CE6  0101               	movlb	1	; () banked
  1507  005CE8  6B5F               	clrf	(_right_speed+1)& (0+255),b	;volatile
  1508                           
  1509                           ; BSR set to: 1
  1510                           ;parcheggio.c: 265: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
  1511  005CEA  0101               	movlb	1	; () banked
  1512  005CEC  515E               	movf	_right_speed& (0+255),w,b	;volatile
  1513  005CEE  0102               	movlb	2	; () banked
  1514  005CF0  6F08               	movwf	??_main& (0+255),b
  1515  005CF2  0101               	movlb	1	; () banked
  1516  005CF4  511A               	movf	(_data_speed_rx+2)& (0+255),w,b	;volatile
  1517  005CF6  0101               	movlb	1	; () banked
  1518  005CF8  6F5E               	movwf	_right_speed& (0+255),b	;volatile
  1519  005CFA  C208  F15F         	movff	??_main,_right_speed+1	;volatile
  1520                           
  1521                           ; BSR set to: 1
  1522                           ;parcheggio.c: 266: actual_speed = (right_speed + left_speed) / 2;
  1523  005CFE  0101               	movlb	1	; () banked
  1524  005D00  515A               	movf	_left_speed& (0+255),w,b	;volatile
  1525  005D02  0101               	movlb	1	; () banked
  1526  005D04  255E               	addwf	_right_speed& (0+255),w,b	;volatile
  1527  005D06  0102               	movlb	2	; () banked
  1528  005D08  6F08               	movwf	??_main& (0+255),b
  1529  005D0A  0101               	movlb	1	; () banked
  1530  005D0C  515B               	movf	(_left_speed+1)& (0+255),w,b	;volatile
  1531  005D0E  0101               	movlb	1	; () banked
  1532  005D10  215F               	addwfc	(_right_speed+1)& (0+255),w,b	;volatile
  1533  005D12  0102               	movlb	2	; () banked
  1534  005D14  6F09               	movwf	(??_main+1)& (0+255),b
  1535  005D16  90D8               	bcf	status,0,c
  1536  005D18  0102               	movlb	2	; () banked
  1537  005D1A  3109               	rrcf	(??_main+1)& (0+255),w,b
  1538  005D1C  0102               	movlb	2	; () banked
  1539  005D1E  6F0A               	movwf	(??_main+2)& (0+255),b
  1540  005D20  0102               	movlb	2	; () banked
  1541  005D22  3108               	rrcf	??_main& (0+255),w,b
  1542  005D24  0101               	movlb	1	; () banked
  1543  005D26  6F54               	movwf	_actual_speed& (0+255),b	;volatile
  1544  005D28  C20A  F155         	movff	??_main+2,_actual_speed+1	;volatile
  1545                           
  1546                           ; BSR set to: 1
  1547                           ;parcheggio.c: 268: park_routine();
  1548  005D2C  EC2C  F01D         	call	_park_routine	;wreg free
  1549  005D30  D7C6               	goto	l8704
  1550  005D32                     __end_of_main:
  1551                           	opt stack 0
  1552                           tblptru	equ	0xFF8
  1553                           tblptrh	equ	0xFF7
  1554                           tblptrl	equ	0xFF6
  1555                           tablat	equ	0xFF5
  1556                           postinc0	equ	0xFEE
  1557                           wreg	equ	0xFE8
  1558                           postdec1	equ	0xFE5
  1559                           fsr1l	equ	0xFE1
  1560                           status	equ	0xFD8
  1561                           
  1562 ;; *************** function _park_search *****************
  1563 ;; Defined at:
  1564 ;;		line 272 in file "parcheggio.c"
  1565 ;; Parameters:    Size  Location     Type
  1566 ;;		None
  1567 ;; Auto vars:     Size  Location     Type
  1568 ;;		None
  1569 ;; Return value:  Size  Location     Type
  1570 ;;                  1    wreg      void 
  1571 ;; Registers used:
  1572 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1580 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1581 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1582 ;;Total ram usage:        2 bytes
  1583 ;; Hardware stack levels used:    1
  1584 ;; Hardware stack levels required when called:   10
  1585 ;; This function calls:
  1586 ;;		_CANisTxReady
  1587 ;;		_CANsendMessage
  1588 ;;		___xxtofl
  1589 ;;		_abs
  1590 ;;		_parallelo
  1591 ;; This function is called by:
  1592 ;;		_main
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           	psect	text1
  1597  005512                     __ptext1:
  1598                           	opt stack 0
  1599  005512                     _park_search:
  1600                           	opt stack 20
  1601                           
  1602                           ;parcheggio.c: 273: while ((activation == 1) && (PORTBbits.RB5 == 0)) {
  1603                           
  1604                           ;incstack = 0
  1605  005512  D0E4               	goto	l744
  1606  005514                     l8104:
  1607                           
  1608                           ;parcheggio.c: 274: parallelo();
  1609  005514  EC25  F028         	call	_parallelo	;wreg free
  1610                           
  1611                           ;parcheggio.c: 276: if (sensor_distance[0] > 50) {
  1612  005518  0101               	movlb	1	; () banked
  1613  00551A  5101               	movf	(_sensor_distance+1)& (0+255),w,b	;volatile
  1614  00551C  E105               	bnz	u10860
  1615  00551E  0E33               	movlw	51
  1616  005520  0101               	movlb	1	; () banked
  1617  005522  5D00               	subwf	_sensor_distance& (0+255),w,b	;volatile
  1618  005524  A0D8               	btfss	status,0,c
  1619  005526  D029               	goto	l746
  1620  005528                     u10860:
  1621                           
  1622                           ; BSR set to: 1
  1623                           ;parcheggio.c: 277: if (request_sent == 0) {
  1624  005528  B844               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1625  00552A  D025               	goto	l8120
  1626  00552C                     l8112:
  1627  00552C  EC5E  F033         	call	_CANisTxReady	;wreg free
  1628  005530  0900               	iorlw	0
  1629  005532  B4D8               	btfsc	status,2,c
  1630  005534  D7FB               	goto	l8112
  1631                           
  1632                           ;parcheggio.c: 279: CANsendMessage(0b00000001010, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1633  005536  0E0A               	movlw	10
  1634  005538  0100               	movlb	0	; () banked
  1635  00553A  6F79               	movwf	CANsendMessage@identifier& (0+255),b
  1636  00553C  0E00               	movlw	0
  1637  00553E  6F7A               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1638  005540  0E00               	movlw	0
  1639  005542  6F7B               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1640  005544  0E00               	movlw	0
  1641  005546  6F7C               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1642  005548  0E71               	movlw	low _data
  1643  00554A  0100               	movlb	0	; () banked
  1644  00554C  6F7D               	movwf	CANsendMessage@data& (0+255),b
  1645  00554E  0E01               	movlw	high _data
  1646  005550  0100               	movlb	0	; () banked
  1647  005552  6F7E               	movwf	(CANsendMessage@data+1)& (0+255),b
  1648  005554  0E08               	movlw	8
  1649  005556  0100               	movlb	0	; () banked
  1650  005558  6F7F               	movwf	CANsendMessage@dataLength& (0+255),b
  1651  00555A  0EFC               	movlw	252
  1652  00555C  0100               	movlb	0	; () banked
  1653  00555E  6F80               	movwf	CANsendMessage@flags& (0+255),b
  1654  005560  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1655                           
  1656                           ;parcheggio.c: 280: request_sent = 1;
  1657  005564  8844               	bsf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1658                           
  1659                           ;parcheggio.c: 281: alignment_gap = 0;
  1660  005566  0E00               	movlw	0
  1661  005568  6E28               	movwf	_alignment_gap,c	;volatile
  1662  00556A  0E00               	movlw	0
  1663  00556C  6E29               	movwf	_alignment_gap+1,c	;volatile
  1664  00556E  0E00               	movlw	0
  1665  005570  6E2A               	movwf	_alignment_gap+2,c	;volatile
  1666  005572  0E00               	movlw	0
  1667  005574  6E2B               	movwf	_alignment_gap+3,c	;volatile
  1668  005576                     l8120:
  1669                           
  1670                           ;parcheggio.c: 282: }
  1671                           ;parcheggio.c: 283: LATBbits.LATB4 = 1;
  1672  005576  888A               	bsf	3978,4,c	;volatile
  1673                           
  1674                           ;parcheggio.c: 284: } else {
  1675  005578  D031               	goto	l8124
  1676  00557A                     l746:
  1677                           
  1678                           ; BSR set to: 1
  1679                           ;parcheggio.c: 285: LATBbits.LATB4 = 0;
  1680  00557A  988A               	bcf	3978,4,c	;volatile
  1681                           
  1682                           ; BSR set to: 1
  1683                           ;parcheggio.c: 286: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  1684  00557C  EE21  F002         	lfsr	2,_sensor_distance+2	;volatile
  1685  005580  CFDE F1CE          	movff	postinc2,??_park_search
  1686  005584  CFDD F1CF          	movff	postdec2,??_park_search+1
  1687  005588  0101               	movlb	1	; () banked
  1688  00558A  1FCE               	comf	??_park_search& (0+255),f,b
  1689  00558C  1FCF               	comf	(??_park_search+1)& (0+255),f,b
  1690  00558E  4BCE               	infsnz	??_park_search& (0+255),f,b
  1691  005590  2BCF               	incf	(??_park_search+1)& (0+255),f,b
  1692  005592  0101               	movlb	1	; () banked
  1693  005594  5100               	movf	_sensor_distance& (0+255),w,b	;volatile
  1694  005596  0101               	movlb	1	; () banked
  1695  005598  25CE               	addwf	??_park_search& (0+255),w,b
  1696  00559A  0100               	movlb	0	; () banked
  1697  00559C  6F79               	movwf	abs@a& (0+255),b
  1698  00559E  0101               	movlb	1	; () banked
  1699  0055A0  5101               	movf	(_sensor_distance+1)& (0+255),w,b	;volatile
  1700  0055A2  0101               	movlb	1	; () banked
  1701  0055A4  21CF               	addwfc	(??_park_search+1)& (0+255),w,b
  1702  0055A6  0100               	movlb	0	; () banked
  1703  0055A8  6F7A               	movwf	(abs@a+1)& (0+255),b
  1704  0055AA  EC1F  F033         	call	_abs	;wreg free
  1705  0055AE  0100               	movlb	0	; () banked
  1706  0055B0  C079  F0CD         	movff	?_abs,___xxtofl@val
  1707  0055B4  0100               	movlb	0	; () banked
  1708  0055B6  C07A  F0CE         	movff	?_abs+1,___xxtofl@val+1
  1709  0055BA  0100               	movlb	0	; () banked
  1710  0055BC  0E00               	movlw	0
  1711  0055BE  BFCE               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1712  0055C0  0EFF               	movlw	-1
  1713  0055C2  6FCF               	movwf	(___xxtofl@val+2)& (0+255),b
  1714  0055C4  6FD0               	movwf	(___xxtofl@val+3)& (0+255),b
  1715  0055C6  0E01               	movlw	1
  1716  0055C8  EC73  F02B         	call	___xxtofl
  1717  0055CC  C0CD  F028         	movff	?___xxtofl,_alignment_gap	;volatile
  1718  0055D0  C0CE  F029         	movff	?___xxtofl+1,_alignment_gap+1	;volatile
  1719  0055D4  C0CF  F02A         	movff	?___xxtofl+2,_alignment_gap+2	;volatile
  1720  0055D8  C0D0  F02B         	movff	?___xxtofl+3,_alignment_gap+3	;volatile
  1721  0055DC                     l8124:
  1722                           
  1723                           ;parcheggio.c: 287: }
  1724                           ;parcheggio.c: 289: if ((sensor_distance[0] < 50) && (request_sent == 1)&&(sensor_distan
      +                          ce[1] < 50)) {
  1725  0055DC  0101               	movlb	1	; () banked
  1726  0055DE  5101               	movf	(_sensor_distance+1)& (0+255),w,b	;volatile
  1727  0055E0  E12B               	bnz	l8136
  1728  0055E2  0E32               	movlw	50
  1729  0055E4  0101               	movlb	1	; () banked
  1730  0055E6  5D00               	subwf	_sensor_distance& (0+255),w,b	;volatile
  1731  0055E8  A0D8               	btfss	status,0,c
  1732                           
  1733                           ; BSR set to: 1
  1734  0055EA  A844               	btfss	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1735  0055EC  D025               	goto	l8136
  1736                           
  1737                           ; BSR set to: 1
  1738  0055EE  0101               	movlb	1	; () banked
  1739  0055F0  5103               	movf	(_sensor_distance+3)& (0+255),w,b	;volatile
  1740  0055F2  E122               	bnz	l8136
  1741  0055F4  0E32               	movlw	50
  1742  0055F6  0101               	movlb	1	; () banked
  1743  0055F8  5D02               	subwf	(_sensor_distance+2)& (0+255),w,b	;volatile
  1744  0055FA  B0D8               	btfsc	status,0,c
  1745  0055FC  D01D               	goto	l8136
  1746                           
  1747                           ; BSR set to: 1
  1748                           ;parcheggio.c: 290: request_sent = 0;
  1749  0055FE  9844               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1750  005600                     l8132:
  1751  005600  EC5E  F033         	call	_CANisTxReady	;wreg free
  1752  005604  0900               	iorlw	0
  1753  005606  B4D8               	btfsc	status,2,c
  1754  005608  D7FB               	goto	l8132
  1755                           
  1756                           ;parcheggio.c: 292: CANsendMessage(0b00000001001, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1757  00560A  0E09               	movlw	9
  1758  00560C  0100               	movlb	0	; () banked
  1759  00560E  6F79               	movwf	CANsendMessage@identifier& (0+255),b
  1760  005610  0E00               	movlw	0
  1761  005612  6F7A               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1762  005614  0E00               	movlw	0
  1763  005616  6F7B               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1764  005618  0E00               	movlw	0
  1765  00561A  6F7C               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1766  00561C  0E71               	movlw	low _data
  1767  00561E  0100               	movlb	0	; () banked
  1768  005620  6F7D               	movwf	CANsendMessage@data& (0+255),b
  1769  005622  0E01               	movlw	high _data
  1770  005624  0100               	movlb	0	; () banked
  1771  005626  6F7E               	movwf	(CANsendMessage@data+1)& (0+255),b
  1772  005628  0E08               	movlw	8
  1773  00562A  0100               	movlb	0	; () banked
  1774  00562C  6F7F               	movwf	CANsendMessage@dataLength& (0+255),b
  1775  00562E  0EFC               	movlw	252
  1776  005630  0100               	movlb	0	; () banked
  1777  005632  6F80               	movwf	CANsendMessage@flags& (0+255),b
  1778  005634  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1779  005638                     l8136:
  1780                           
  1781                           ;parcheggio.c: 293: }
  1782                           ;parcheggio.c: 295: if (distance_received == 1) {
  1783  005638  AC43               	btfss	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1784  00563A  D050               	goto	l744
  1785                           
  1786                           ;parcheggio.c: 296: if (distance_average > 65) {
  1787  00563C  5037               	movf	_distance_average+1,w,c	;volatile
  1788  00563E  E104               	bnz	u10940
  1789  005640  0E42               	movlw	66
  1790  005642  5C36               	subwf	_distance_average,w,c	;volatile
  1791  005644  A0D8               	btfss	status,0,c
  1792  005646  D048               	goto	l757
  1793  005648                     u10940:
  1794                           
  1795                           ;parcheggio.c: 297: PORTBbits.RB5 = 1;
  1796  005648  8A81               	bsf	3969,5,c	;volatile
  1797                           
  1798                           ;parcheggio.c: 298: data[0] = 1;
  1799  00564A  0E01               	movlw	1
  1800  00564C  0101               	movlb	1	; () banked
  1801  00564E  6F71               	movwf	_data& (0+255),b	;volatile
  1802                           
  1803                           ; BSR set to: 1
  1804                           ;parcheggio.c: 299: CANsendMessage(0b00000001101, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  1805  005650  0E0D               	movlw	13
  1806  005652  0100               	movlb	0	; () banked
  1807  005654  6F79               	movwf	CANsendMessage@identifier& (0+255),b
  1808  005656  0E00               	movlw	0
  1809  005658  6F7A               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1810  00565A  0E00               	movlw	0
  1811  00565C  6F7B               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1812  00565E  0E00               	movlw	0
  1813  005660  6F7C               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1814  005662  0E71               	movlw	low _data
  1815  005664  0100               	movlb	0	; () banked
  1816  005666  6F7D               	movwf	CANsendMessage@data& (0+255),b
  1817  005668  0E01               	movlw	high _data
  1818  00566A  0100               	movlb	0	; () banked
  1819  00566C  6F7E               	movwf	(CANsendMessage@data+1)& (0+255),b
  1820  00566E  0E01               	movlw	1
  1821  005670  0100               	movlb	0	; () banked
  1822  005672  6F7F               	movwf	CANsendMessage@dataLength& (0+255),b
  1823  005674  0EBC               	movlw	188
  1824  005676  0100               	movlb	0	; () banked
  1825  005678  6F80               	movwf	CANsendMessage@flags& (0+255),b
  1826  00567A  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1827                           
  1828                           ;parcheggio.c: 300: if ((request_sent1 == 0)&&(sensor_distance[0] < 40)) {
  1829  00567E  BA44               	btfsc	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1830  005680  D02D               	goto	l744
  1831  005682  0101               	movlb	1	; () banked
  1832  005684  5101               	movf	(_sensor_distance+1)& (0+255),w,b	;volatile
  1833  005686  E12A               	bnz	l744
  1834  005688  0E28               	movlw	40
  1835  00568A  0101               	movlb	1	; () banked
  1836  00568C  5D00               	subwf	_sensor_distance& (0+255),w,b	;volatile
  1837  00568E  B0D8               	btfsc	status,0,c
  1838  005690  D025               	goto	l744
  1839                           
  1840                           ; BSR set to: 1
  1841                           ;parcheggio.c: 301: data_test[0] = 50;
  1842  005692  0E32               	movlw	50
  1843  005694  0101               	movlb	1	; () banked
  1844  005696  6F99               	movwf	_data_test& (0+255),b	;volatile
  1845                           
  1846                           ; BSR set to: 1
  1847                           ;parcheggio.c: 302: asd = 1;
  1848  005698  8443               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  1849  00569A                     l8154:
  1850  00569A  EC5E  F033         	call	_CANisTxReady	;wreg free
  1851  00569E  0900               	iorlw	0
  1852  0056A0  B4D8               	btfsc	status,2,c
  1853  0056A2  D7FB               	goto	l8154
  1854                           
  1855                           ;parcheggio.c: 304: CANsendMessage(0b00000001111, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1856  0056A4  0E0F               	movlw	15
  1857  0056A6  0100               	movlb	0	; () banked
  1858  0056A8  6F79               	movwf	CANsendMessage@identifier& (0+255),b
  1859  0056AA  0E00               	movlw	0
  1860  0056AC  6F7A               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1861  0056AE  0E00               	movlw	0
  1862  0056B0  6F7B               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1863  0056B2  0E00               	movlw	0
  1864  0056B4  6F7C               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1865  0056B6  0E99               	movlw	low _data_test
  1866  0056B8  0100               	movlb	0	; () banked
  1867  0056BA  6F7D               	movwf	CANsendMessage@data& (0+255),b
  1868  0056BC  0E01               	movlw	high _data_test
  1869  0056BE  0100               	movlb	0	; () banked
  1870  0056C0  6F7E               	movwf	(CANsendMessage@data+1)& (0+255),b
  1871  0056C2  0E08               	movlw	8
  1872  0056C4  0100               	movlb	0	; () banked
  1873  0056C6  6F7F               	movwf	CANsendMessage@dataLength& (0+255),b
  1874  0056C8  0EBC               	movlw	188
  1875  0056CA  0100               	movlb	0	; () banked
  1876  0056CC  6F80               	movwf	CANsendMessage@flags& (0+255),b
  1877  0056CE  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1878                           
  1879                           ;parcheggio.c: 306: distance_received1 = 0;
  1880  0056D2  9E43               	bcf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
  1881                           
  1882                           ;parcheggio.c: 307: request_sent1 = 1;
  1883  0056D4  8A44               	bsf	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1884                           
  1885                           ;parcheggio.c: 308: }
  1886                           ;parcheggio.c: 309: } else {
  1887  0056D6  D002               	goto	l744
  1888  0056D8                     l757:
  1889                           
  1890                           ;parcheggio.c: 310: distance_received = 0;
  1891  0056D8  9C43               	bcf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1892                           
  1893                           ;parcheggio.c: 311: PORTBbits.RB5 = 0;
  1894  0056DA  9A81               	bcf	3969,5,c	;volatile
  1895  0056DC                     l744:
  1896  0056DC  A243               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1897  0056DE  0012               	return	
  1898  0056E0  BA81               	btfsc	3969,5,c	;volatile
  1899  0056E2  0012               	return	
  1900  0056E4  D717               	goto	l8104
  1901  0056E6                     __end_of_park_search:
  1902                           	opt stack 0
  1903                           tblptru	equ	0xFF8
  1904                           tblptrh	equ	0xFF7
  1905                           tblptrl	equ	0xFF6
  1906                           tablat	equ	0xFF5
  1907                           postinc0	equ	0xFEE
  1908                           wreg	equ	0xFE8
  1909                           postdec1	equ	0xFE5
  1910                           fsr1l	equ	0xFE1
  1911                           postinc2	equ	0xFDE
  1912                           postdec2	equ	0xFDD
  1913                           status	equ	0xFD8
  1914                           
  1915 ;; *************** function _park_routine *****************
  1916 ;; Defined at:
  1917 ;;		line 317 in file "parcheggio.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;		None
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;		None
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  1    wreg      void 
  1924 ;; Registers used:
  1925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1932 ;;      Locals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  1933 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1934 ;;      Totals:         0       0       4       8       0       0       0       0       0       0       0       0       
      +0       0
  1935 ;;Total ram usage:       12 bytes
  1936 ;; Hardware stack levels used:    1
  1937 ;; Hardware stack levels required when called:   10
  1938 ;; This function calls:
  1939 ;;		_CANisTxReady
  1940 ;;		_CANsendMessage
  1941 ;;		___fladd
  1942 ;;		___flneg
  1943 ;;		___fltol
  1944 ;;		___xxtofl
  1945 ;;		_can_send
  1946 ;;		_delay_ms
  1947 ;;		_delay_s
  1948 ;;		_matematica
  1949 ;;		_parallelo
  1950 ;; This function is called by:
  1951 ;;		_main
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954                           
  1955                           	psect	text2
  1956  003A58                     __ptext2:
  1957                           	opt stack 0
  1958  003A58                     _park_routine:
  1959                           	opt stack 20
  1960                           
  1961                           ;parcheggio.c: 318: avvicinamento = 0;
  1962                           
  1963                           ;incstack = 0
  1964  003A58  9643               	bcf	_avvicinamento/(0+8),_avvicinamento& (0+7),c	;volatile
  1965                           
  1966                           ;parcheggio.c: 319: data_correction[0] = 0;
  1967  003A5A  0E00               	movlw	0
  1968  003A5C  0101               	movlb	1	; () banked
  1969  003A5E  6F81               	movwf	_data_correction& (0+255),b	;volatile
  1970                           
  1971                           ; BSR set to: 1
  1972                           ;parcheggio.c: 320: parallelo();
  1973  003A60  EC25  F028         	call	_parallelo	;wreg free
  1974                           
  1975                           ;parcheggio.c: 322: while ((asd == 1)&&(PORTBbits.RB5 == 1) && (activation == 1)) {
  1976  003A64  D03E               	goto	l8184
  1977  003A66                     l8170:
  1978                           
  1979                           ;parcheggio.c: 323: delay_ms(200);
  1980  003A66  0E00               	movlw	0
  1981  003A68  0100               	movlb	0	; () banked
  1982  003A6A  6F80               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1983  003A6C  0EC8               	movlw	200
  1984  003A6E  6F7F               	movwf	delay_ms@value_ms& (0+255),b
  1985  003A70  ECEC  F032         	call	_delay_ms	;wreg free
  1986                           
  1987                           ;parcheggio.c: 324: PORTBbits.RB6 = ~PORTBbits.RB6;
  1988  003A74  AC81               	btfss	3969,6,c	;volatile
  1989  003A76  D002               	goto	u11000
  1990  003A78  0E01               	movlw	1
  1991  003A7A  D001               	goto	u11006
  1992  003A7C                     u11000:
  1993  003A7C  0E00               	movlw	0
  1994  003A7E                     u11006:
  1995  003A7E  0AFF               	xorlw	255
  1996  003A80  0101               	movlb	1	; () banked
  1997  003A82  6FF2               	movwf	??_park_routine& (0+255),b
  1998  003A84  0101               	movlb	1	; () banked
  1999  003A86  3BF2               	swapf	??_park_routine& (0+255),f,b
  2000  003A88  47F2               	rlncf	??_park_routine& (0+255),f,b
  2001  003A8A  47F2               	rlncf	??_park_routine& (0+255),f,b
  2002  003A8C  5081               	movf	3969,w,c	;volatile
  2003  003A8E  0101               	movlb	1	; () banked
  2004  003A90  19F2               	xorwf	??_park_routine& (0+255),w,b
  2005  003A92  0BBF               	andlw	-65
  2006  003A94  19F2               	xorwf	??_park_routine& (0+255),w,b
  2007  003A96  6E81               	movwf	3969,c	;volatile
  2008                           
  2009                           ; BSR set to: 1
  2010                           ;parcheggio.c: 325: parallelo();
  2011  003A98  EC25  F028         	call	_parallelo	;wreg free
  2012                           
  2013                           ;parcheggio.c: 326: if (data_correction[0] > 30) {
  2014  003A9C  0E1E               	movlw	30
  2015  003A9E  0101               	movlb	1	; () banked
  2016  003AA0  6581               	cpfsgt	_data_correction& (0+255),b	;volatile
  2017  003AA2  D003               	goto	l8180
  2018                           
  2019                           ; BSR set to: 1
  2020                           ;parcheggio.c: 327: data_correction[0] = 0;
  2021  003AA4  0E00               	movlw	0
  2022  003AA6  0101               	movlb	1	; () banked
  2023  003AA8  6F81               	movwf	_data_correction& (0+255),b	;volatile
  2024  003AAA                     l8180:
  2025  003AAA  EC5E  F033         	call	_CANisTxReady	;wreg free
  2026  003AAE  0900               	iorlw	0
  2027  003AB0  B4D8               	btfsc	status,2,c
  2028  003AB2  D7FB               	goto	l8180
  2029                           
  2030                           ;parcheggio.c: 330: CANsendMessage(0b00000010000, data_correction, 8, CAN_CONFIG_STD_MSG
      +                           & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2031  003AB4  0E10               	movlw	16
  2032  003AB6  0100               	movlb	0	; () banked
  2033  003AB8  6F79               	movwf	CANsendMessage@identifier& (0+255),b
  2034  003ABA  0E00               	movlw	0
  2035  003ABC  6F7A               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2036  003ABE  0E00               	movlw	0
  2037  003AC0  6F7B               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2038  003AC2  0E00               	movlw	0
  2039  003AC4  6F7C               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2040  003AC6  0E81               	movlw	low _data_correction
  2041  003AC8  0100               	movlb	0	; () banked
  2042  003ACA  6F7D               	movwf	CANsendMessage@data& (0+255),b
  2043  003ACC  0E01               	movlw	high _data_correction
  2044  003ACE  0100               	movlb	0	; () banked
  2045  003AD0  6F7E               	movwf	(CANsendMessage@data+1)& (0+255),b
  2046  003AD2  0E08               	movlw	8
  2047  003AD4  0100               	movlb	0	; () banked
  2048  003AD6  6F7F               	movwf	CANsendMessage@dataLength& (0+255),b
  2049  003AD8  0EBC               	movlw	188
  2050  003ADA  0100               	movlb	0	; () banked
  2051  003ADC  6F80               	movwf	CANsendMessage@flags& (0+255),b
  2052  003ADE  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2053  003AE2                     l8184:
  2054  003AE2  B443               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2055  003AE4  AA81               	btfss	3969,5,c	;volatile
  2056  003AE6  D002               	goto	l777
  2057  003AE8  B243               	btfsc	_activation/(0+8),_activation& (0+7),c	;volatile
  2058  003AEA  D7BD               	goto	l8170
  2059  003AEC                     l777:
  2060                           
  2061                           ;parcheggio.c: 331: }
  2062                           ;parcheggio.c: 333: if ((PORTBbits.RB5 == 1) && (activation == 1)) {
  2063  003AEC  BA81               	btfsc	3969,5,c	;volatile
  2064  003AEE  A243               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  2065  003AF0  D02F               	goto	l8204
  2066                           
  2067                           ;parcheggio.c: 334: PORTBbits.RB6 = 0;
  2068  003AF2  9C81               	bcf	3969,6,c	;volatile
  2069                           
  2070                           ;parcheggio.c: 335: data[0] = 2;
  2071  003AF4  0E02               	movlw	2
  2072  003AF6  0101               	movlb	1	; () banked
  2073  003AF8  6F71               	movwf	_data& (0+255),b	;volatile
  2074                           
  2075                           ; BSR set to: 1
  2076                           ;parcheggio.c: 336: CANsendMessage(0b00000001101, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  2077  003AFA  0E0D               	movlw	13
  2078  003AFC  0100               	movlb	0	; () banked
  2079  003AFE  6F79               	movwf	CANsendMessage@identifier& (0+255),b
  2080  003B00  0E00               	movlw	0
  2081  003B02  6F7A               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2082  003B04  0E00               	movlw	0
  2083  003B06  6F7B               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2084  003B08  0E00               	movlw	0
  2085  003B0A  6F7C               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2086  003B0C  0E71               	movlw	low _data
  2087  003B0E  0100               	movlb	0	; () banked
  2088  003B10  6F7D               	movwf	CANsendMessage@data& (0+255),b
  2089  003B12  0E01               	movlw	high _data
  2090  003B14  0100               	movlb	0	; () banked
  2091  003B16  6F7E               	movwf	(CANsendMessage@data+1)& (0+255),b
  2092  003B18  0E01               	movlw	1
  2093  003B1A  0100               	movlb	0	; () banked
  2094  003B1C  6F7F               	movwf	CANsendMessage@dataLength& (0+255),b
  2095  003B1E  0EBC               	movlw	188
  2096  003B20  0100               	movlb	0	; () banked
  2097  003B22  6F80               	movwf	CANsendMessage@flags& (0+255),b
  2098  003B24  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2099                           
  2100                           ;parcheggio.c: 337: }
  2101                           ;parcheggio.c: 339: while ((start_operation != 1)&&(activation == 1)) {
  2102  003B28  D013               	goto	l8204
  2103  003B2A                     l780:
  2104                           
  2105                           ;parcheggio.c: 340: if (first == 0) {
  2106  003B2A  B244               	btfsc	_first/(0+8),_first& (0+7),c	;volatile
  2107  003B2C  D011               	goto	l8204
  2108                           
  2109                           ;parcheggio.c: 341: set_speed = 0;
  2110  003B2E  0E00               	movlw	0
  2111  003B30  0101               	movlb	1	; () banked
  2112  003B32  6F61               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2113  003B34  0E00               	movlw	0
  2114  003B36  6F60               	movwf	_set_speed& (0+255),b	;volatile
  2115                           
  2116                           ;parcheggio.c: 342: data_steering[0] = 90;
  2117  003B38  0E5A               	movlw	90
  2118  003B3A  0101               	movlb	1	; () banked
  2119  003B3C  6F91               	movwf	_data_steering& (0+255),b	;volatile
  2120                           
  2121                           ;parcheggio.c: 343: data_brake [0] = 0;
  2122  003B3E  0E00               	movlw	0
  2123  003B40  0101               	movlb	1	; () banked
  2124  003B42  6F79               	movwf	_data_brake& (0+255),b	;volatile
  2125                           
  2126                           ;parcheggio.c: 344: data_brake [1] = 1;
  2127  003B44  0E01               	movlw	1
  2128  003B46  0101               	movlb	1	; () banked
  2129  003B48  6F7A               	movwf	(_data_brake+1)& (0+255),b	;volatile
  2130                           
  2131                           ; BSR set to: 1
  2132                           ;parcheggio.c: 345: can_send();
  2133  003B4A  EC3D  F030         	call	_can_send	;wreg free
  2134                           
  2135                           ;parcheggio.c: 346: first = 1;
  2136  003B4E  8244               	bsf	_first/(0+8),_first& (0+7),c	;volatile
  2137  003B50                     l8204:
  2138  003B50  AC44               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2139  003B52  A243               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  2140  003B54  D1CA               	goto	l8314
  2141  003B56  D7E9               	goto	l780
  2142  003B58                     l786:
  2143                           
  2144                           ;parcheggio.c: 351: LATBbits.LATB4 = 1;
  2145  003B58  888A               	bsf	3978,4,c	;volatile
  2146                           
  2147                           ;parcheggio.c: 353: bordo = (sensor_distance[0] + sensor_distance[1]) / 2;
  2148  003B5A  0101               	movlb	1	; () banked
  2149  003B5C  5100               	movf	_sensor_distance& (0+255),w,b	;volatile
  2150  003B5E  0101               	movlb	1	; () banked
  2151  003B60  2502               	addwf	(_sensor_distance+2)& (0+255),w,b	;volatile
  2152  003B62  0101               	movlb	1	; () banked
  2153  003B64  6FF2               	movwf	??_park_routine& (0+255),b
  2154  003B66  0101               	movlb	1	; () banked
  2155  003B68  5101               	movf	(_sensor_distance+1)& (0+255),w,b	;volatile
  2156  003B6A  0101               	movlb	1	; () banked
  2157  003B6C  2103               	addwfc	(_sensor_distance+3)& (0+255),w,b	;volatile
  2158  003B6E  0101               	movlb	1	; () banked
  2159  003B70  6FF3               	movwf	(??_park_routine+1)& (0+255),b
  2160  003B72  90D8               	bcf	status,0,c
  2161  003B74  0101               	movlb	1	; () banked
  2162  003B76  31F3               	rrcf	(??_park_routine+1)& (0+255),w,b
  2163  003B78  0101               	movlb	1	; () banked
  2164  003B7A  6FF5               	movwf	(??_park_routine+3)& (0+255),b
  2165  003B7C  0101               	movlb	1	; () banked
  2166  003B7E  31F2               	rrcf	??_park_routine& (0+255),w,b
  2167  003B80  0101               	movlb	1	; () banked
  2168  003B82  6FF4               	movwf	(??_park_routine+2)& (0+255),b
  2169  003B84  C1F4  F0CD         	movff	??_park_routine+2,___xxtofl@val
  2170  003B88  C1F5  F0CE         	movff	??_park_routine+3,___xxtofl@val+1
  2171  003B8C  0100               	movlb	0	; () banked
  2172  003B8E  6BCF               	clrf	(___xxtofl@val+2)& (0+255),b
  2173  003B90  6BD0               	clrf	(___xxtofl@val+3)& (0+255),b
  2174  003B92  0E00               	movlw	0
  2175  003B94  EC73  F02B         	call	___xxtofl
  2176  003B98  C0CD  F144         	movff	?___xxtofl,_bordo	;volatile
  2177  003B9C  C0CE  F145         	movff	?___xxtofl+1,_bordo+1	;volatile
  2178  003BA0  C0CF  F146         	movff	?___xxtofl+2,_bordo+2	;volatile
  2179  003BA4  C0D0  F147         	movff	?___xxtofl+3,_bordo+3	;volatile
  2180                           
  2181                           ;parcheggio.c: 354: matematica();
  2182  003BA8  EC3A  F013         	call	_matematica	;wreg free
  2183                           
  2184                           ;parcheggio.c: 355: set_speed = 0;
  2185  003BAC  0E00               	movlw	0
  2186  003BAE  0101               	movlb	1	; () banked
  2187  003BB0  6F61               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2188  003BB2  0E00               	movlw	0
  2189  003BB4  6F60               	movwf	_set_speed& (0+255),b	;volatile
  2190                           
  2191                           ; BSR set to: 1
  2192                           ;parcheggio.c: 356: data_steering[0] = 90;
  2193  003BB6  0E5A               	movlw	90
  2194  003BB8  0101               	movlb	1	; () banked
  2195  003BBA  6F91               	movwf	_data_steering& (0+255),b	;volatile
  2196                           
  2197                           ; BSR set to: 1
  2198                           ;parcheggio.c: 357: data_brake [0] = 0;
  2199  003BBC  0E00               	movlw	0
  2200  003BBE  0101               	movlb	1	; () banked
  2201  003BC0  6F79               	movwf	_data_brake& (0+255),b	;volatile
  2202                           
  2203                           ; BSR set to: 1
  2204                           ;parcheggio.c: 358: data_brake [1] = 1;
  2205  003BC2  0E01               	movlw	1
  2206  003BC4  0101               	movlb	1	; () banked
  2207  003BC6  6F7A               	movwf	(_data_brake+1)& (0+255),b	;volatile
  2208                           
  2209                           ; BSR set to: 1
  2210                           ;parcheggio.c: 359: can_send();
  2211  003BC8  EC3D  F030         	call	_can_send	;wreg free
  2212                           
  2213                           ;parcheggio.c: 360: delay_s(1);
  2214  003BCC  0E01               	movlw	1
  2215  003BCE  EC35  F033         	call	_delay_s
  2216                           
  2217                           ;parcheggio.c: 362: data_brake [0] = 3;
  2218  003BD2  0E03               	movlw	3
  2219  003BD4  0101               	movlb	1	; () banked
  2220  003BD6  6F79               	movwf	_data_brake& (0+255),b	;volatile
  2221                           
  2222                           ; BSR set to: 1
  2223                           ;parcheggio.c: 363: data_brake [1] = 1;
  2224  003BD8  0E01               	movlw	1
  2225  003BDA  0101               	movlb	1	; () banked
  2226  003BDC  6F7A               	movwf	(_data_brake+1)& (0+255),b	;volatile
  2227                           
  2228                           ; BSR set to: 1
  2229                           ;parcheggio.c: 365: set_speed = 300;
  2230  003BDE  0E01               	movlw	1
  2231  003BE0  0101               	movlb	1	; () banked
  2232  003BE2  6F61               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2233  003BE4  0E2C               	movlw	44
  2234  003BE6  6F60               	movwf	_set_speed& (0+255),b	;volatile
  2235                           
  2236                           ; BSR set to: 1
  2237                           ;parcheggio.c: 366: dir = 0;
  2238  003BE8  9843               	bcf	_dir/(0+8),_dir& (0+7),c	;volatile
  2239                           
  2240                           ; BSR set to: 1
  2241                           ;parcheggio.c: 367: data_steering[0] = 90;
  2242  003BEA  0E5A               	movlw	90
  2243  003BEC  0101               	movlb	1	; () banked
  2244  003BEE  6F91               	movwf	_data_steering& (0+255),b	;volatile
  2245                           
  2246                           ; BSR set to: 1
  2247                           ;parcheggio.c: 368: data_test[0] = ((60 + Pmin + 5)-(n + 15));
  2248  003BF0  0E00               	movlw	0
  2249  003BF2  0100               	movlb	0	; () banked
  2250  003BF4  6FAF               	movwf	___fladd@a& (0+255),b
  2251  003BF6  0E00               	movlw	0
  2252  003BF8  6FB0               	movwf	(___fladd@a+1)& (0+255),b
  2253  003BFA  0E70               	movlw	112
  2254  003BFC  6FB1               	movwf	(___fladd@a+2)& (0+255),b
  2255  003BFE  0E41               	movlw	65
  2256  003C00  6FB2               	movwf	(___fladd@a+3)& (0+255),b
  2257  003C02  C148  F0AB         	movff	_n,___fladd@b	;volatile
  2258  003C06  C149  F0AC         	movff	_n+1,___fladd@b+1	;volatile
  2259  003C0A  C14A  F0AD         	movff	_n+2,___fladd@b+2	;volatile
  2260  003C0E  C14B  F0AE         	movff	_n+3,___fladd@b+3	;volatile
  2261  003C12  EC85  F018         	call	___fladd	;wreg free
  2262  003C16  C0AB  F0BF         	movff	?___fladd,___flneg@f1
  2263  003C1A  C0AC  F0C0         	movff	?___fladd+1,___flneg@f1+1
  2264  003C1E  C0AD  F0C1         	movff	?___fladd+2,___flneg@f1+2
  2265  003C22  C0AE  F0C2         	movff	?___fladd+3,___flneg@f1+3
  2266  003C26  ECB5  F032         	call	___flneg	;wreg free
  2267  003C2A  C0BF  F200         	movff	?___flneg,_park_routine$3690
  2268  003C2E  C0C0  F201         	movff	?___flneg+1,_park_routine$3690+1
  2269  003C32  C0C1  F202         	movff	?___flneg+2,_park_routine$3690+2
  2270  003C36  C0C2  F203         	movff	?___flneg+3,_park_routine$3690+3
  2271                           
  2272                           ;parcheggio.c: 368: data_test[0] = ((60 + Pmin + 5)-(n + 15));
  2273  003C3A  C138  F0AF         	movff	_Pmin,___fladd@a	;volatile
  2274  003C3E  C139  F0B0         	movff	_Pmin+1,___fladd@a+1	;volatile
  2275  003C42  C13A  F0B1         	movff	_Pmin+2,___fladd@a+2	;volatile
  2276  003C46  C13B  F0B2         	movff	_Pmin+3,___fladd@a+3	;volatile
  2277  003C4A  C200  F0AB         	movff	_park_routine$3690,___fladd@b
  2278  003C4E  C201  F0AC         	movff	_park_routine$3690+1,___fladd@b+1
  2279  003C52  C202  F0AD         	movff	_park_routine$3690+2,___fladd@b+2
  2280  003C56  C203  F0AE         	movff	_park_routine$3690+3,___fladd@b+3
  2281  003C5A  EC85  F018         	call	___fladd	;wreg free
  2282  003C5E  C0AB  F204         	movff	?___fladd,_park_routine$3691
  2283  003C62  C0AC  F205         	movff	?___fladd+1,_park_routine$3691+1
  2284  003C66  C0AD  F206         	movff	?___fladd+2,_park_routine$3691+2
  2285  003C6A  C0AE  F207         	movff	?___fladd+3,_park_routine$3691+3
  2286                           
  2287                           ;parcheggio.c: 368: data_test[0] = ((60 + Pmin + 5)-(n + 15));
  2288  003C6E  0E00               	movlw	0
  2289  003C70  0100               	movlb	0	; () banked
  2290  003C72  6FAF               	movwf	___fladd@a& (0+255),b
  2291  003C74  0E00               	movlw	0
  2292  003C76  6FB0               	movwf	(___fladd@a+1)& (0+255),b
  2293  003C78  0E82               	movlw	130
  2294  003C7A  6FB1               	movwf	(___fladd@a+2)& (0+255),b
  2295  003C7C  0E42               	movlw	66
  2296  003C7E  6FB2               	movwf	(___fladd@a+3)& (0+255),b
  2297  003C80  C204  F0AB         	movff	_park_routine$3691,___fladd@b
  2298  003C84  C205  F0AC         	movff	_park_routine$3691+1,___fladd@b+1
  2299  003C88  C206  F0AD         	movff	_park_routine$3691+2,___fladd@b+2
  2300  003C8C  C207  F0AE         	movff	_park_routine$3691+3,___fladd@b+3
  2301  003C90  EC85  F018         	call	___fladd	;wreg free
  2302  003C94  C0AB  F0C3         	movff	?___fladd,___fltol@f1
  2303  003C98  C0AC  F0C4         	movff	?___fladd+1,___fltol@f1+1
  2304  003C9C  C0AD  F0C5         	movff	?___fladd+2,___fltol@f1+2
  2305  003CA0  C0AE  F0C6         	movff	?___fladd+3,___fltol@f1+3
  2306  003CA4  ECB7  F02F         	call	___fltol	;wreg free
  2307  003CA8  0100               	movlb	0	; () banked
  2308  003CAA  51C3               	movf	?___fltol& (0+255),w,b
  2309  003CAC  0101               	movlb	1	; () banked
  2310  003CAE  6F99               	movwf	_data_test& (0+255),b	;volatile
  2311                           
  2312                           ; BSR set to: 1
  2313                           ;parcheggio.c: 369: asd = 1;
  2314  003CB0  8443               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2315                           
  2316                           ; BSR set to: 1
  2317                           ;parcheggio.c: 370: CANsendMessage(0b00000001111, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2318  003CB2  0E0F               	movlw	15
  2319  003CB4  0100               	movlb	0	; () banked
  2320  003CB6  6F79               	movwf	CANsendMessage@identifier& (0+255),b
  2321  003CB8  0E00               	movlw	0
  2322  003CBA  6F7A               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2323  003CBC  0E00               	movlw	0
  2324  003CBE  6F7B               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2325  003CC0  0E00               	movlw	0
  2326  003CC2  6F7C               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2327  003CC4  0E99               	movlw	low _data_test
  2328  003CC6  0100               	movlb	0	; () banked
  2329  003CC8  6F7D               	movwf	CANsendMessage@data& (0+255),b
  2330  003CCA  0E01               	movlw	high _data_test
  2331  003CCC  0100               	movlb	0	; () banked
  2332  003CCE  6F7E               	movwf	(CANsendMessage@data+1)& (0+255),b
  2333  003CD0  0E08               	movlw	8
  2334  003CD2  0100               	movlb	0	; () banked
  2335  003CD4  6F7F               	movwf	CANsendMessage@dataLength& (0+255),b
  2336  003CD6  0EBC               	movlw	188
  2337  003CD8  0100               	movlb	0	; () banked
  2338  003CDA  6F80               	movwf	CANsendMessage@flags& (0+255),b
  2339  003CDC  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2340                           
  2341                           ;parcheggio.c: 371: can_send();
  2342  003CE0  EC3D  F030         	call	_can_send	;wreg free
  2343  003CE4                     l787:
  2344  003CE4  B443               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2345  003CE6  D7FE               	goto	l787
  2346                           
  2347                           ;parcheggio.c: 374: set_speed = 0;
  2348  003CE8  0E00               	movlw	0
  2349  003CEA  0101               	movlb	1	; () banked
  2350  003CEC  6F61               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2351  003CEE  0E00               	movlw	0
  2352  003CF0  6F60               	movwf	_set_speed& (0+255),b	;volatile
  2353                           
  2354                           ;parcheggio.c: 375: data_steering[0] = 90;
  2355  003CF2  0E5A               	movlw	90
  2356  003CF4  0101               	movlb	1	; () banked
  2357  003CF6  6F91               	movwf	_data_steering& (0+255),b	;volatile
  2358                           
  2359                           ;parcheggio.c: 376: data_brake [0] = 0;
  2360  003CF8  0E00               	movlw	0
  2361  003CFA  0101               	movlb	1	; () banked
  2362  003CFC  6F79               	movwf	_data_brake& (0+255),b	;volatile
  2363                           
  2364                           ;parcheggio.c: 377: data_brake [1] = 1;
  2365  003CFE  0E01               	movlw	1
  2366  003D00  0101               	movlb	1	; () banked
  2367  003D02  6F7A               	movwf	(_data_brake+1)& (0+255),b	;volatile
  2368                           
  2369                           ; BSR set to: 1
  2370                           ;parcheggio.c: 378: can_send();
  2371  003D04  EC3D  F030         	call	_can_send	;wreg free
  2372                           
  2373                           ;parcheggio.c: 379: delay_s(1);
  2374  003D08  0E01               	movlw	1
  2375  003D0A  EC35  F033         	call	_delay_s
  2376                           
  2377                           ;parcheggio.c: 381: data_brake [0] = 3;
  2378  003D0E  0E03               	movlw	3
  2379  003D10  0101               	movlb	1	; () banked
  2380  003D12  6F79               	movwf	_data_brake& (0+255),b	;volatile
  2381                           
  2382                           ; BSR set to: 1
  2383                           ;parcheggio.c: 382: data_brake [1] = 1;
  2384  003D14  0E01               	movlw	1
  2385  003D16  0101               	movlb	1	; () banked
  2386  003D18  6F7A               	movwf	(_data_brake+1)& (0+255),b	;volatile
  2387                           
  2388                           ; BSR set to: 1
  2389                           ;parcheggio.c: 383: set_speed = 300;
  2390  003D1A  0E01               	movlw	1
  2391  003D1C  0101               	movlb	1	; () banked
  2392  003D1E  6F61               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2393  003D20  0E2C               	movlw	44
  2394  003D22  6F60               	movwf	_set_speed& (0+255),b	;volatile
  2395                           
  2396                           ; BSR set to: 1
  2397                           ;parcheggio.c: 384: dir = 0;
  2398  003D24  9843               	bcf	_dir/(0+8),_dir& (0+7),c	;volatile
  2399                           
  2400                           ; BSR set to: 1
  2401                           ;parcheggio.c: 385: data_steering[0] = 180;
  2402  003D26  0EB4               	movlw	180
  2403  003D28  0101               	movlb	1	; () banked
  2404  003D2A  6F91               	movwf	_data_steering& (0+255),b	;volatile
  2405                           
  2406                           ; BSR set to: 1
  2407                           ;parcheggio.c: 386: data_test[0] = prima_sterzata;
  2408  003D2C  C150  F0C3         	movff	_prima_sterzata,___fltol@f1	;volatile
  2409  003D30  C151  F0C4         	movff	_prima_sterzata+1,___fltol@f1+1	;volatile
  2410  003D34  C152  F0C5         	movff	_prima_sterzata+2,___fltol@f1+2	;volatile
  2411  003D38  C153  F0C6         	movff	_prima_sterzata+3,___fltol@f1+3	;volatile
  2412  003D3C  ECB7  F02F         	call	___fltol	;wreg free
  2413  003D40  0100               	movlb	0	; () banked
  2414  003D42  51C3               	movf	?___fltol& (0+255),w,b
  2415  003D44  0101               	movlb	1	; () banked
  2416  003D46  6F99               	movwf	_data_test& (0+255),b	;volatile
  2417                           
  2418                           ; BSR set to: 1
  2419                           ;parcheggio.c: 387: asd = 1;
  2420  003D48  8443               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2421                           
  2422                           ; BSR set to: 1
  2423                           ;parcheggio.c: 388: CANsendMessage(0b00000001111, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2424  003D4A  0E0F               	movlw	15
  2425  003D4C  0100               	movlb	0	; () banked
  2426  003D4E  6F79               	movwf	CANsendMessage@identifier& (0+255),b
  2427  003D50  0E00               	movlw	0
  2428  003D52  6F7A               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2429  003D54  0E00               	movlw	0
  2430  003D56  6F7B               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2431  003D58  0E00               	movlw	0
  2432  003D5A  6F7C               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2433  003D5C  0E99               	movlw	low _data_test
  2434  003D5E  0100               	movlb	0	; () banked
  2435  003D60  6F7D               	movwf	CANsendMessage@data& (0+255),b
  2436  003D62  0E01               	movlw	high _data_test
  2437  003D64  0100               	movlb	0	; () banked
  2438  003D66  6F7E               	movwf	(CANsendMessage@data+1)& (0+255),b
  2439  003D68  0E08               	movlw	8
  2440  003D6A  0100               	movlb	0	; () banked
  2441  003D6C  6F7F               	movwf	CANsendMessage@dataLength& (0+255),b
  2442  003D6E  0EBC               	movlw	188
  2443  003D70  0100               	movlb	0	; () banked
  2444  003D72  6F80               	movwf	CANsendMessage@flags& (0+255),b
  2445  003D74  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2446                           
  2447                           ;parcheggio.c: 389: can_send();
  2448  003D78  EC3D  F030         	call	_can_send	;wreg free
  2449  003D7C                     l790:
  2450  003D7C  B443               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2451  003D7E  D7FE               	goto	l790
  2452                           
  2453                           ;parcheggio.c: 391: set_speed = 300;
  2454  003D80  0E01               	movlw	1
  2455  003D82  0101               	movlb	1	; () banked
  2456  003D84  6F61               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2457  003D86  0E2C               	movlw	44
  2458  003D88  6F60               	movwf	_set_speed& (0+255),b	;volatile
  2459                           
  2460                           ;parcheggio.c: 392: data_steering[0] = 0;
  2461  003D8A  0E00               	movlw	0
  2462  003D8C  0101               	movlb	1	; () banked
  2463  003D8E  6F91               	movwf	_data_steering& (0+255),b	;volatile
  2464                           
  2465                           ; BSR set to: 1
  2466                           ;parcheggio.c: 393: asd = 1;
  2467  003D90  8443               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2468                           
  2469                           ; BSR set to: 1
  2470                           ;parcheggio.c: 394: data_test[0] = prima_sterzata + 9;
  2471  003D92  0E00               	movlw	0
  2472  003D94  0100               	movlb	0	; () banked
  2473  003D96  6FAF               	movwf	___fladd@a& (0+255),b
  2474  003D98  0E00               	movlw	0
  2475  003D9A  6FB0               	movwf	(___fladd@a+1)& (0+255),b
  2476  003D9C  0E10               	movlw	16
  2477  003D9E  6FB1               	movwf	(___fladd@a+2)& (0+255),b
  2478  003DA0  0E41               	movlw	65
  2479  003DA2  6FB2               	movwf	(___fladd@a+3)& (0+255),b
  2480  003DA4  C150  F0AB         	movff	_prima_sterzata,___fladd@b	;volatile
  2481  003DA8  C151  F0AC         	movff	_prima_sterzata+1,___fladd@b+1	;volatile
  2482  003DAC  C152  F0AD         	movff	_prima_sterzata+2,___fladd@b+2	;volatile
  2483  003DB0  C153  F0AE         	movff	_prima_sterzata+3,___fladd@b+3	;volatile
  2484  003DB4  EC85  F018         	call	___fladd	;wreg free
  2485  003DB8  C0AB  F0C3         	movff	?___fladd,___fltol@f1
  2486  003DBC  C0AC  F0C4         	movff	?___fladd+1,___fltol@f1+1
  2487  003DC0  C0AD  F0C5         	movff	?___fladd+2,___fltol@f1+2
  2488  003DC4  C0AE  F0C6         	movff	?___fladd+3,___fltol@f1+3
  2489  003DC8  ECB7  F02F         	call	___fltol	;wreg free
  2490  003DCC  0100               	movlb	0	; () banked
  2491  003DCE  51C3               	movf	?___fltol& (0+255),w,b
  2492  003DD0  0101               	movlb	1	; () banked
  2493  003DD2  6F99               	movwf	_data_test& (0+255),b	;volatile
  2494                           
  2495                           ; BSR set to: 1
  2496                           ;parcheggio.c: 395: CANsendMessage(0b00000001111, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2497  003DD4  0E0F               	movlw	15
  2498  003DD6  0100               	movlb	0	; () banked
  2499  003DD8  6F79               	movwf	CANsendMessage@identifier& (0+255),b
  2500  003DDA  0E00               	movlw	0
  2501  003DDC  6F7A               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2502  003DDE  0E00               	movlw	0
  2503  003DE0  6F7B               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2504  003DE2  0E00               	movlw	0
  2505  003DE4  6F7C               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2506  003DE6  0E99               	movlw	low _data_test
  2507  003DE8  0100               	movlb	0	; () banked
  2508  003DEA  6F7D               	movwf	CANsendMessage@data& (0+255),b
  2509  003DEC  0E01               	movlw	high _data_test
  2510  003DEE  0100               	movlb	0	; () banked
  2511  003DF0  6F7E               	movwf	(CANsendMessage@data+1)& (0+255),b
  2512  003DF2  0E08               	movlw	8
  2513  003DF4  0100               	movlb	0	; () banked
  2514  003DF6  6F7F               	movwf	CANsendMessage@dataLength& (0+255),b
  2515  003DF8  0EBC               	movlw	188
  2516  003DFA  0100               	movlb	0	; () banked
  2517  003DFC  6F80               	movwf	CANsendMessage@flags& (0+255),b
  2518  003DFE  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2519                           
  2520                           ;parcheggio.c: 396: can_send();
  2521  003E02  EC3D  F030         	call	_can_send	;wreg free
  2522  003E06                     l793:
  2523  003E06  B443               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2524  003E08  D7FE               	goto	l793
  2525                           
  2526                           ;parcheggio.c: 398: data_brake [0] = 0;
  2527  003E0A  0E00               	movlw	0
  2528  003E0C  0101               	movlb	1	; () banked
  2529  003E0E  6F79               	movwf	_data_brake& (0+255),b	;volatile
  2530                           
  2531                           ;parcheggio.c: 399: data_brake [1] = 1;
  2532  003E10  0E01               	movlw	1
  2533  003E12  0101               	movlb	1	; () banked
  2534  003E14  6F7A               	movwf	(_data_brake+1)& (0+255),b	;volatile
  2535                           
  2536                           ;parcheggio.c: 400: set_speed = 0;
  2537  003E16  0E00               	movlw	0
  2538  003E18  0101               	movlb	1	; () banked
  2539  003E1A  6F61               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2540  003E1C  0E00               	movlw	0
  2541  003E1E  6F60               	movwf	_set_speed& (0+255),b	;volatile
  2542                           
  2543                           ;parcheggio.c: 401: data_steering[0] = 90;
  2544  003E20  0E5A               	movlw	90
  2545  003E22  0101               	movlb	1	; () banked
  2546  003E24  6F91               	movwf	_data_steering& (0+255),b	;volatile
  2547                           
  2548                           ; BSR set to: 1
  2549                           ;parcheggio.c: 402: can_send();
  2550  003E26  EC3D  F030         	call	_can_send	;wreg free
  2551                           
  2552                           ;parcheggio.c: 403: delay_s(1);
  2553  003E2A  0E01               	movlw	1
  2554  003E2C  EC35  F033         	call	_delay_s
  2555                           
  2556                           ;parcheggio.c: 404: avvicinamento = 1;
  2557  003E30  8643               	bsf	_avvicinamento/(0+8),_avvicinamento& (0+7),c	;volatile
  2558                           
  2559                           ;parcheggio.c: 405: if (sensor_distance [6] > 20) {
  2560  003E32  0101               	movlb	1	; () banked
  2561  003E34  510D               	movf	(_sensor_distance+13)& (0+255),w,b	;volatile
  2562  003E36  E105               	bnz	u11140
  2563  003E38  0E15               	movlw	21
  2564  003E3A  0101               	movlb	1	; () banked
  2565  003E3C  5D0C               	subwf	(_sensor_distance+12)& (0+255),w,b	;volatile
  2566  003E3E  A0D8               	btfss	status,0,c
  2567  003E40  D019               	goto	l8298
  2568  003E42                     u11140:
  2569                           
  2570                           ; BSR set to: 1
  2571                           ;parcheggio.c: 406: data_brake [0] = 3;
  2572  003E42  0E03               	movlw	3
  2573  003E44  0101               	movlb	1	; () banked
  2574  003E46  6F79               	movwf	_data_brake& (0+255),b	;volatile
  2575                           
  2576                           ;parcheggio.c: 407: data_brake [1] = 1;
  2577  003E48  0E01               	movlw	1
  2578  003E4A  0101               	movlb	1	; () banked
  2579  003E4C  6F7A               	movwf	(_data_brake+1)& (0+255),b	;volatile
  2580                           
  2581                           ;parcheggio.c: 408: set_speed = 300;
  2582  003E4E  0E01               	movlw	1
  2583  003E50  0101               	movlb	1	; () banked
  2584  003E52  6F61               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2585  003E54  0E2C               	movlw	44
  2586  003E56  6F60               	movwf	_set_speed& (0+255),b	;volatile
  2587                           
  2588                           ;parcheggio.c: 409: data_steering[0] = 90;
  2589  003E58  0E5A               	movlw	90
  2590  003E5A  0101               	movlb	1	; () banked
  2591  003E5C  6F91               	movwf	_data_steering& (0+255),b	;volatile
  2592                           
  2593                           ; BSR set to: 1
  2594                           ;parcheggio.c: 410: dir = 1;
  2595  003E5E  8843               	bsf	_dir/(0+8),_dir& (0+7),c	;volatile
  2596                           
  2597                           ; BSR set to: 1
  2598                           ;parcheggio.c: 411: can_send();
  2599  003E60  EC3D  F030         	call	_can_send	;wreg free
  2600  003E64                     l8296:
  2601  003E64  0101               	movlb	1	; () banked
  2602  003E66  510D               	movf	(_sensor_distance+13)& (0+255),w,b	;volatile
  2603  003E68  E1FD               	bnz	l8296
  2604  003E6A  0E15               	movlw	21
  2605  003E6C  0101               	movlb	1	; () banked
  2606  003E6E  5D0C               	subwf	(_sensor_distance+12)& (0+255),w,b	;volatile
  2607  003E70  B0D8               	btfsc	status,0,c
  2608  003E72  D7F8               	goto	l8296
  2609  003E74                     l8298:
  2610                           
  2611                           ; BSR set to: 1
  2612                           ;parcheggio.c: 413: }
  2613                           ;parcheggio.c: 414: data_brake [0] = 0;
  2614  003E74  0E00               	movlw	0
  2615  003E76  0101               	movlb	1	; () banked
  2616  003E78  6F79               	movwf	_data_brake& (0+255),b	;volatile
  2617                           
  2618                           ;parcheggio.c: 415: data_brake [1] = 1;
  2619  003E7A  0E01               	movlw	1
  2620  003E7C  0101               	movlb	1	; () banked
  2621  003E7E  6F7A               	movwf	(_data_brake+1)& (0+255),b	;volatile
  2622                           
  2623                           ;parcheggio.c: 416: set_speed = 0;
  2624  003E80  0E00               	movlw	0
  2625  003E82  0101               	movlb	1	; () banked
  2626  003E84  6F61               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2627  003E86  0E00               	movlw	0
  2628  003E88  6F60               	movwf	_set_speed& (0+255),b	;volatile
  2629                           
  2630                           ;parcheggio.c: 417: data_steering[0] = 90;
  2631  003E8A  0E5A               	movlw	90
  2632  003E8C  0101               	movlb	1	; () banked
  2633  003E8E  6F91               	movwf	_data_steering& (0+255),b	;volatile
  2634                           
  2635                           ; BSR set to: 1
  2636                           ;parcheggio.c: 418: dir = 0;
  2637  003E90  9843               	bcf	_dir/(0+8),_dir& (0+7),c	;volatile
  2638                           
  2639                           ; BSR set to: 1
  2640                           ;parcheggio.c: 419: can_send();
  2641  003E92  EC3D  F030         	call	_can_send	;wreg free
  2642                           
  2643                           ;parcheggio.c: 420: delay_s(1);
  2644  003E96  0E01               	movlw	1
  2645  003E98  EC35  F033         	call	_delay_s
  2646                           
  2647                           ;parcheggio.c: 421: data[0] = 3;
  2648  003E9C  0E03               	movlw	3
  2649  003E9E  0101               	movlb	1	; () banked
  2650  003EA0  6F71               	movwf	_data& (0+255),b	;volatile
  2651  003EA2                     l8308:
  2652  003EA2  EC5E  F033         	call	_CANisTxReady	;wreg free
  2653  003EA6  0900               	iorlw	0
  2654  003EA8  B4D8               	btfsc	status,2,c
  2655  003EAA  D7FB               	goto	l8308
  2656                           
  2657                           ;parcheggio.c: 423: CANsendMessage(0b00000001101, data, 8, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  2658  003EAC  0E0D               	movlw	13
  2659  003EAE  0100               	movlb	0	; () banked
  2660  003EB0  6F79               	movwf	CANsendMessage@identifier& (0+255),b
  2661  003EB2  0E00               	movlw	0
  2662  003EB4  6F7A               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2663  003EB6  0E00               	movlw	0
  2664  003EB8  6F7B               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2665  003EBA  0E00               	movlw	0
  2666  003EBC  6F7C               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2667  003EBE  0E71               	movlw	low _data
  2668  003EC0  0100               	movlb	0	; () banked
  2669  003EC2  6F7D               	movwf	CANsendMessage@data& (0+255),b
  2670  003EC4  0E01               	movlw	high _data
  2671  003EC6  0100               	movlb	0	; () banked
  2672  003EC8  6F7E               	movwf	(CANsendMessage@data+1)& (0+255),b
  2673  003ECA  0E08               	movlw	8
  2674  003ECC  0100               	movlb	0	; () banked
  2675  003ECE  6F7F               	movwf	CANsendMessage@dataLength& (0+255),b
  2676  003ED0  0EBC               	movlw	188
  2677  003ED2  0100               	movlb	0	; () banked
  2678  003ED4  6F80               	movwf	CANsendMessage@flags& (0+255),b
  2679  003ED6  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2680                           
  2681                           ;parcheggio.c: 424: delay_ms(100);
  2682  003EDA  0E00               	movlw	0
  2683  003EDC  0100               	movlb	0	; () banked
  2684  003EDE  6F80               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2685  003EE0  0E64               	movlw	100
  2686  003EE2  6F7F               	movwf	delay_ms@value_ms& (0+255),b
  2687  003EE4  ECEC  F032         	call	_delay_ms	;wreg free
  2688  003EE8  00FF               	reset		;# 
  2689  003EEA                     l8314:
  2690  003EEA  AA81               	btfss	3969,5,c	;volatile
  2691  003EEC  0012               	return	
  2692  003EEE  A243               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  2693  003EF0  0012               	return	
  2694  003EF2  AC44               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2695  003EF4  0012               	return	
  2696  003EF6  D630               	goto	l786
  2697  003EF8                     __end_of_park_routine:
  2698                           	opt stack 0
  2699                           tblptru	equ	0xFF8
  2700                           tblptrh	equ	0xFF7
  2701                           tblptrl	equ	0xFF6
  2702                           tablat	equ	0xFF5
  2703                           postinc0	equ	0xFEE
  2704                           wreg	equ	0xFE8
  2705                           postdec1	equ	0xFE5
  2706                           fsr1l	equ	0xFE1
  2707                           postinc2	equ	0xFDE
  2708                           postdec2	equ	0xFDD
  2709                           status	equ	0xFD8
  2710                           
  2711 ;; *************** function _parallelo *****************
  2712 ;; Defined at:
  2713 ;;		line 452 in file "parcheggio.c"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;		None
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;		None
  2718 ;; Return value:  Size  Location     Type
  2719 ;;                  1    wreg      void 
  2720 ;; Registers used:
  2721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2729 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2730 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2731 ;;Total ram usage:        2 bytes
  2732 ;; Hardware stack levels used:    1
  2733 ;; Hardware stack levels required when called:    9
  2734 ;; This function calls:
  2735 ;;		___fladd
  2736 ;;		___fldiv
  2737 ;;		___flge
  2738 ;;		___flmul
  2739 ;;		___fltol
  2740 ;;		___xxtofl
  2741 ;;		_abs
  2742 ;;		_asin
  2743 ;;		_can_send
  2744 ;;		_sqrt
  2745 ;; This function is called by:
  2746 ;;		_park_search
  2747 ;;		_park_routine
  2748 ;; This function uses a non-reentrant model
  2749 ;;
  2750                           
  2751                           	psect	text3
  2752  00504A                     __ptext3:
  2753                           	opt stack 0
  2754  00504A                     _parallelo:
  2755                           	opt stack 20
  2756                           
  2757                           ;parcheggio.c: 453: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  2758                           
  2759                           ;incstack = 0
  2760  00504A  EE21  F002         	lfsr	2,_sensor_distance+2	;volatile
  2761  00504E  CFDE F0E4          	movff	postinc2,??_parallelo
  2762  005052  CFDD F0E5          	movff	postdec2,??_parallelo+1
  2763  005056  0100               	movlb	0	; () banked
  2764  005058  1FE4               	comf	??_parallelo& (0+255),f,b
  2765  00505A  1FE5               	comf	(??_parallelo+1)& (0+255),f,b
  2766  00505C  4BE4               	infsnz	??_parallelo& (0+255),f,b
  2767  00505E  2BE5               	incf	(??_parallelo+1)& (0+255),f,b
  2768  005060  0101               	movlb	1	; () banked
  2769  005062  5100               	movf	_sensor_distance& (0+255),w,b	;volatile
  2770  005064  0100               	movlb	0	; () banked
  2771  005066  25E4               	addwf	??_parallelo& (0+255),w,b
  2772  005068  0100               	movlb	0	; () banked
  2773  00506A  6F79               	movwf	abs@a& (0+255),b
  2774  00506C  0101               	movlb	1	; () banked
  2775  00506E  5101               	movf	(_sensor_distance+1)& (0+255),w,b	;volatile
  2776  005070  0100               	movlb	0	; () banked
  2777  005072  21E5               	addwfc	(??_parallelo+1)& (0+255),w,b
  2778  005074  0100               	movlb	0	; () banked
  2779  005076  6F7A               	movwf	(abs@a+1)& (0+255),b
  2780  005078  EC1F  F033         	call	_abs	;wreg free
  2781  00507C  0100               	movlb	0	; () banked
  2782  00507E  C079  F0CD         	movff	?_abs,___xxtofl@val
  2783  005082  0100               	movlb	0	; () banked
  2784  005084  C07A  F0CE         	movff	?_abs+1,___xxtofl@val+1
  2785  005088  0100               	movlb	0	; () banked
  2786  00508A  0E00               	movlw	0
  2787  00508C  BFCE               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2788  00508E  0EFF               	movlw	-1
  2789  005090  6FCF               	movwf	(___xxtofl@val+2)& (0+255),b
  2790  005092  6FD0               	movwf	(___xxtofl@val+3)& (0+255),b
  2791  005094  0E01               	movlw	1
  2792  005096  EC73  F02B         	call	___xxtofl
  2793  00509A  C0CD  F028         	movff	?___xxtofl,_alignment_gap	;volatile
  2794  00509E  C0CE  F029         	movff	?___xxtofl+1,_alignment_gap+1	;volatile
  2795  0050A2  C0CF  F02A         	movff	?___xxtofl+2,_alignment_gap+2	;volatile
  2796  0050A6  C0D0  F02B         	movff	?___xxtofl+3,_alignment_gap+3	;volatile
  2797                           
  2798                           ;parcheggio.c: 454: if (alignment_gap < 30) {
  2799  0050AA  C028  F0C7         	movff	_alignment_gap,___flge@ff1	;volatile
  2800  0050AE  C029  F0C8         	movff	_alignment_gap+1,___flge@ff1+1	;volatile
  2801  0050B2  C02A  F0C9         	movff	_alignment_gap+2,___flge@ff1+2	;volatile
  2802  0050B6  C02B  F0CA         	movff	_alignment_gap+3,___flge@ff1+3	;volatile
  2803  0050BA  0E00               	movlw	0
  2804  0050BC  0100               	movlb	0	; () banked
  2805  0050BE  6FCB               	movwf	___flge@ff2& (0+255),b
  2806  0050C0  0E00               	movlw	0
  2807  0050C2  6FCC               	movwf	(___flge@ff2+1)& (0+255),b
  2808  0050C4  0EF0               	movlw	240
  2809  0050C6  6FCD               	movwf	(___flge@ff2+2)& (0+255),b
  2810  0050C8  0E41               	movlw	65
  2811  0050CA  6FCE               	movwf	(___flge@ff2+3)& (0+255),b
  2812  0050CC  EC3D  F02D         	call	___flge	;wreg free
  2813  0050D0  0100               	movlb	0	; () banked
  2814  0050D2  B0D8               	btfsc	status,0,c
  2815  0050D4  D0EF               	goto	l7922
  2816                           
  2817                           ; BSR set to: 0
  2818                           ;parcheggio.c: 455: if ((sensor_distance[0] < 30) && (sensor_distance[1] < 30)) {
  2819  0050D6  0101               	movlb	1	; () banked
  2820  0050D8  5101               	movf	(_sensor_distance+1)& (0+255),w,b	;volatile
  2821  0050DA  E104               	bnz	u10551
  2822  0050DC  0E1E               	movlw	30
  2823  0050DE  0101               	movlb	1	; () banked
  2824  0050E0  5D00               	subwf	_sensor_distance& (0+255),w,b	;volatile
  2825  0050E2  B0D8               	btfsc	status,0,c
  2826  0050E4                     u10551:
  2827  0050E4  0012               	return	
  2828                           
  2829                           ; BSR set to: 1
  2830  0050E6  0101               	movlb	1	; () banked
  2831  0050E8  5103               	movf	(_sensor_distance+3)& (0+255),w,b	;volatile
  2832  0050EA  E104               	bnz	u10561
  2833  0050EC  0E1E               	movlw	30
  2834  0050EE  0101               	movlb	1	; () banked
  2835  0050F0  5D02               	subwf	(_sensor_distance+2)& (0+255),w,b	;volatile
  2836  0050F2  B0D8               	btfsc	status,0,c
  2837  0050F4                     u10561:
  2838  0050F4  0012               	return	
  2839                           
  2840                           ; BSR set to: 1
  2841                           ;parcheggio.c: 456: x = (((6)*(6)) + ((alignment_gap * alignment_gap)));
  2842  0050F6  C028  F096         	movff	_alignment_gap,___flmul@a	;volatile
  2843  0050FA  C029  F097         	movff	_alignment_gap+1,___flmul@a+1	;volatile
  2844  0050FE  C02A  F098         	movff	_alignment_gap+2,___flmul@a+2	;volatile
  2845  005102  C02B  F099         	movff	_alignment_gap+3,___flmul@a+3	;volatile
  2846  005106  C028  F092         	movff	_alignment_gap,___flmul@b	;volatile
  2847  00510A  C029  F093         	movff	_alignment_gap+1,___flmul@b+1	;volatile
  2848  00510E  C02A  F094         	movff	_alignment_gap+2,___flmul@b+2	;volatile
  2849  005112  C02B  F095         	movff	_alignment_gap+3,___flmul@b+3	;volatile
  2850  005116  ECD9  F01A         	call	___flmul	;wreg free
  2851  00511A  C092  F0AB         	movff	?___flmul,___fladd@b
  2852  00511E  C093  F0AC         	movff	?___flmul+1,___fladd@b+1
  2853  005122  C094  F0AD         	movff	?___flmul+2,___fladd@b+2
  2854  005126  C095  F0AE         	movff	?___flmul+3,___fladd@b+3
  2855  00512A  0E00               	movlw	0
  2856  00512C  0100               	movlb	0	; () banked
  2857  00512E  6FAF               	movwf	___fladd@a& (0+255),b
  2858  005130  0E00               	movlw	0
  2859  005132  6FB0               	movwf	(___fladd@a+1)& (0+255),b
  2860  005134  0E10               	movlw	16
  2861  005136  6FB1               	movwf	(___fladd@a+2)& (0+255),b
  2862  005138  0E42               	movlw	66
  2863  00513A  6FB2               	movwf	(___fladd@a+3)& (0+255),b
  2864  00513C  EC85  F018         	call	___fladd	;wreg free
  2865  005140  C0AB  F02C         	movff	?___fladd,_x	;volatile
  2866  005144  C0AC  F02D         	movff	?___fladd+1,_x+1	;volatile
  2867  005148  C0AD  F02E         	movff	?___fladd+2,_x+2	;volatile
  2868  00514C  C0AE  F02F         	movff	?___fladd+3,_x+3	;volatile
  2869                           
  2870                           ;parcheggio.c: 457: x = sqrt(x);
  2871  005150  C02C  F0C3         	movff	_x,sqrt@a	;volatile
  2872  005154  C02D  F0C4         	movff	_x+1,sqrt@a+1	;volatile
  2873  005158  C02E  F0C5         	movff	_x+2,sqrt@a+2	;volatile
  2874  00515C  C02F  F0C6         	movff	_x+3,sqrt@a+3	;volatile
  2875  005160  EC7C  F01F         	call	_sqrt	;wreg free
  2876  005164  C0C3  F02C         	movff	?_sqrt,_x	;volatile
  2877  005168  C0C4  F02D         	movff	?_sqrt+1,_x+1	;volatile
  2878  00516C  C0C5  F02E         	movff	?_sqrt+2,_x+2	;volatile
  2879  005170  C0C6  F02F         	movff	?_sqrt+3,_x+3	;volatile
  2880                           
  2881                           ;parcheggio.c: 458: z = alignment_gap / x;
  2882  005174  C028  F079         	movff	_alignment_gap,___fldiv@b	;volatile
  2883  005178  C029  F07A         	movff	_alignment_gap+1,___fldiv@b+1	;volatile
  2884  00517C  C02A  F07B         	movff	_alignment_gap+2,___fldiv@b+2	;volatile
  2885  005180  C02B  F07C         	movff	_alignment_gap+3,___fldiv@b+3	;volatile
  2886  005184  C02C  F07D         	movff	_x,___fldiv@a	;volatile
  2887  005188  C02D  F07E         	movff	_x+1,___fldiv@a+1	;volatile
  2888  00518C  C02E  F07F         	movff	_x+2,___fldiv@a+2	;volatile
  2889  005190  C02F  F080         	movff	_x+3,___fldiv@a+3	;volatile
  2890  005194  EC61  F021         	call	___fldiv	;wreg free
  2891  005198  C079  F030         	movff	?___fldiv,_z	;volatile
  2892  00519C  C07A  F031         	movff	?___fldiv+1,_z+1	;volatile
  2893  0051A0  C07B  F032         	movff	?___fldiv+2,_z+2	;volatile
  2894  0051A4  C07C  F033         	movff	?___fldiv+3,_z+3	;volatile
  2895                           
  2896                           ;parcheggio.c: 459: z = asin(z);
  2897  0051A8  C030  F0E0         	movff	_z,asin@x	;volatile
  2898  0051AC  C031  F0E1         	movff	_z+1,asin@x+1	;volatile
  2899  0051B0  C032  F0E2         	movff	_z+2,asin@x+2	;volatile
  2900  0051B4  C033  F0E3         	movff	_z+3,asin@x+3	;volatile
  2901  0051B8  EC9C  F026         	call	_asin	;wreg free
  2902  0051BC  C0E0  F030         	movff	?_asin,_z	;volatile
  2903  0051C0  C0E1  F031         	movff	?_asin+1,_z+1	;volatile
  2904  0051C4  C0E2  F032         	movff	?_asin+2,_z+2	;volatile
  2905  0051C8  C0E3  F033         	movff	?_asin+3,_z+3	;volatile
  2906                           
  2907                           ;parcheggio.c: 460: z = z / 3.14159265358979323846 * 180;
  2908  0051CC  0EDB               	movlw	219
  2909  0051CE  0100               	movlb	0	; () banked
  2910  0051D0  6F7D               	movwf	___fldiv@a& (0+255),b
  2911  0051D2  0E0F               	movlw	15
  2912  0051D4  6F7E               	movwf	(___fldiv@a+1)& (0+255),b
  2913  0051D6  0E49               	movlw	73
  2914  0051D8  6F7F               	movwf	(___fldiv@a+2)& (0+255),b
  2915  0051DA  0E40               	movlw	64
  2916  0051DC  6F80               	movwf	(___fldiv@a+3)& (0+255),b
  2917  0051DE  C030  F079         	movff	_z,___fldiv@b	;volatile
  2918  0051E2  C031  F07A         	movff	_z+1,___fldiv@b+1	;volatile
  2919  0051E6  C032  F07B         	movff	_z+2,___fldiv@b+2	;volatile
  2920  0051EA  C033  F07C         	movff	_z+3,___fldiv@b+3	;volatile
  2921  0051EE  EC61  F021         	call	___fldiv	;wreg free
  2922  0051F2  C079  F092         	movff	?___fldiv,___flmul@b
  2923  0051F6  C07A  F093         	movff	?___fldiv+1,___flmul@b+1
  2924  0051FA  C07B  F094         	movff	?___fldiv+2,___flmul@b+2
  2925  0051FE  C07C  F095         	movff	?___fldiv+3,___flmul@b+3
  2926  005202  0E00               	movlw	0
  2927  005204  0100               	movlb	0	; () banked
  2928  005206  6F96               	movwf	___flmul@a& (0+255),b
  2929  005208  0E00               	movlw	0
  2930  00520A  6F97               	movwf	(___flmul@a+1)& (0+255),b
  2931  00520C  0E34               	movlw	52
  2932  00520E  6F98               	movwf	(___flmul@a+2)& (0+255),b
  2933  005210  0E43               	movlw	67
  2934  005212  6F99               	movwf	(___flmul@a+3)& (0+255),b
  2935  005214  ECD9  F01A         	call	___flmul	;wreg free
  2936  005218  C092  F030         	movff	?___flmul,_z	;volatile
  2937  00521C  C093  F031         	movff	?___flmul+1,_z+1	;volatile
  2938  005220  C094  F032         	movff	?___flmul+2,_z+2	;volatile
  2939  005224  C095  F033         	movff	?___flmul+3,_z+3	;volatile
  2940                           
  2941                           ;parcheggio.c: 461: data_correction[0] = z;
  2942  005228  C030  F0C3         	movff	_z,___fltol@f1	;volatile
  2943  00522C  C031  F0C4         	movff	_z+1,___fltol@f1+1	;volatile
  2944  005230  C032  F0C5         	movff	_z+2,___fltol@f1+2	;volatile
  2945  005234  C033  F0C6         	movff	_z+3,___fltol@f1+3	;volatile
  2946  005238  ECB7  F02F         	call	___fltol	;wreg free
  2947  00523C  0100               	movlb	0	; () banked
  2948  00523E  51C3               	movf	?___fltol& (0+255),w,b
  2949  005240  0101               	movlb	1	; () banked
  2950  005242  6F81               	movwf	_data_correction& (0+255),b	;volatile
  2951                           
  2952                           ; BSR set to: 1
  2953                           ;parcheggio.c: 463: if (sensor_distance[0] < sensor_distance[1]) {
  2954  005244  0101               	movlb	1	; () banked
  2955  005246  5102               	movf	(_sensor_distance+2)& (0+255),w,b	;volatile
  2956  005248  0101               	movlb	1	; () banked
  2957  00524A  5D00               	subwf	_sensor_distance& (0+255),w,b	;volatile
  2958  00524C  0101               	movlb	1	; () banked
  2959  00524E  5103               	movf	(_sensor_distance+3)& (0+255),w,b	;volatile
  2960  005250  0101               	movlb	1	; () banked
  2961  005252  5901               	subwfb	(_sensor_distance+1)& (0+255),w,b	;volatile
  2962  005254  B0D8               	btfsc	status,0,c
  2963  005256  D002               	goto	l7914
  2964                           
  2965                           ; BSR set to: 1
  2966                           ;parcheggio.c: 464: data_correction[1] = 0;
  2967  005258  0E00               	movlw	0
  2968  00525A  D001               	goto	L1
  2969  00525C                     l7914:
  2970                           
  2971                           ; BSR set to: 1
  2972                           ;parcheggio.c: 466: data_correction[1] = 1;
  2973  00525C  0E01               	movlw	1
  2974  00525E                     L1:
  2975  00525E  0101               	movlb	1	; () banked
  2976  005260  6F82               	movwf	(_data_correction+1)& (0+255),b	;volatile
  2977                           
  2978                           ; BSR set to: 1
  2979                           ;parcheggio.c: 467: }
  2980                           ;parcheggio.c: 468: if ((old_alignment_gap != alignment_gap) || (old_dir_correction != d
      +                          ata_correction[1])) {
  2981                           
  2982                           ; BSR set to: 1
  2983  005262  5028               	movf	_alignment_gap,w,c	;volatile
  2984  005264  0101               	movlb	1	; () banked
  2985  005266  194C               	xorwf	_old_alignment_gap& (0+255),w,b	;volatile
  2986  005268  E114               	bnz	l832
  2987  00526A  5029               	movf	_alignment_gap+1,w,c	;volatile
  2988  00526C  0101               	movlb	1	; () banked
  2989  00526E  194D               	xorwf	(_old_alignment_gap+1)& (0+255),w,b	;volatile
  2990  005270  E110               	bnz	l832
  2991  005272  502A               	movf	_alignment_gap+2,w,c	;volatile
  2992  005274  0101               	movlb	1	; () banked
  2993  005276  194E               	xorwf	(_old_alignment_gap+2)& (0+255),w,b	;volatile
  2994  005278  E10C               	bnz	l832
  2995  00527A  502B               	movf	_alignment_gap+3,w,c	;volatile
  2996  00527C  0101               	movlb	1	; () banked
  2997  00527E  194F               	xorwf	(_old_alignment_gap+3)& (0+255),w,b	;volatile
  2998  005280  A4D8               	btfss	status,2,c
  2999  005282  D007               	goto	l832
  3000                           
  3001                           ; BSR set to: 1
  3002  005284  0E00               	movlw	0
  3003  005286  B644               	btfsc	_old_dir_correction/(0+8),_old_dir_correction& (0+7),c	;volatile
  3004  005288  0E01               	movlw	1
  3005  00528A  0101               	movlb	1	; () banked
  3006  00528C  1982               	xorwf	(_data_correction+1)& (0+255),w,b	;volatile
  3007  00528E  B4D8               	btfsc	status,2,c
  3008  005290  0012               	return	
  3009  005292                     l832:
  3010                           
  3011                           ; BSR set to: 1
  3012                           ;parcheggio.c: 469: old_alignment_gap = alignment_gap;
  3013  005292  C028  F14C         	movff	_alignment_gap,_old_alignment_gap	;volatile
  3014  005296  C029  F14D         	movff	_alignment_gap+1,_old_alignment_gap+1	;volatile
  3015  00529A  C02A  F14E         	movff	_alignment_gap+2,_old_alignment_gap+2	;volatile
  3016  00529E  C02B  F14F         	movff	_alignment_gap+3,_old_alignment_gap+3	;volatile
  3017                           
  3018                           ;parcheggio.c: 470: old_dir_correction = data_correction[1];
  3019  0052A2  0101               	movlb	1	; () banked
  3020  0052A4  A182               	btfss	(_data_correction+1)& (0+255),0,b	;volatile
  3021  0052A6  D002               	goto	u10600
  3022  0052A8  8644               	bsf	_old_dir_correction/(0+8),_old_dir_correction& (0+7),c	;volatile
  3023  0052AA  D001               	goto	l7920
  3024  0052AC                     u10600:
  3025  0052AC  9644               	bcf	_old_dir_correction/(0+8),_old_dir_correction& (0+7),c	;volatile
  3026  0052AE                     l7920:
  3027                           
  3028                           ;parcheggio.c: 471: can_send();
  3029  0052AE  EC3D  F030         	call	_can_send	;wreg free
  3030                           
  3031                           ;parcheggio.c: 472: }
  3032                           ;parcheggio.c: 473: }
  3033                           ;parcheggio.c: 474: } else {
  3034  0052B2  0012               	return	
  3035  0052B4                     l7922:
  3036                           
  3037                           ;parcheggio.c: 475: data_correction[0] = 0;
  3038  0052B4  0E00               	movlw	0
  3039  0052B6  0101               	movlb	1	; () banked
  3040  0052B8  6F81               	movwf	_data_correction& (0+255),b	;volatile
  3041                           
  3042                           ; BSR set to: 1
  3043                           ;parcheggio.c: 476: can_send();
  3044  0052BA  EC3D  F030         	call	_can_send	;wreg free
  3045  0052BE  0012               	return	
  3046  0052C0                     __end_of_parallelo:
  3047                           	opt stack 0
  3048                           tblptru	equ	0xFF8
  3049                           tblptrh	equ	0xFF7
  3050                           tblptrl	equ	0xFF6
  3051                           tablat	equ	0xFF5
  3052                           postinc0	equ	0xFEE
  3053                           wreg	equ	0xFE8
  3054                           postdec1	equ	0xFE5
  3055                           fsr1l	equ	0xFE1
  3056                           postinc2	equ	0xFDE
  3057                           postdec2	equ	0xFDD
  3058                           status	equ	0xFD8
  3059                           
  3060 ;; *************** function _can_send *****************
  3061 ;; Defined at:
  3062 ;;		line 429 in file "parcheggio.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;		None
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;		None
  3067 ;; Return value:  Size  Location     Type
  3068 ;;                  1    wreg      void 
  3069 ;; Registers used:
  3070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3071 ;; Tracked objects:
  3072 ;;		On entry : 0/0
  3073 ;;		On exit  : 0/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3080 ;;Total ram usage:        0 bytes
  3081 ;; Hardware stack levels used:    1
  3082 ;; Hardware stack levels required when called:    6
  3083 ;; This function calls:
  3084 ;;		_CANisTxReady
  3085 ;;		_CANsendMessage
  3086 ;; This function is called by:
  3087 ;;		_park_routine
  3088 ;;		_parallelo
  3089 ;; This function uses a non-reentrant model
  3090 ;;
  3091                           
  3092                           	psect	text4
  3093  00607A                     __ptext4:
  3094                           	opt stack 0
  3095  00607A                     _can_send:
  3096                           	opt stack 22
  3097                           
  3098                           ;parcheggio.c: 430: if (start_operation == 1) {
  3099                           
  3100                           ;incstack = 0
  3101  00607A  AC44               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  3102  00607C  D063               	goto	l7826
  3103  00607E                     l7806:
  3104  00607E  EC5E  F033         	call	_CANisTxReady	;wreg free
  3105  006082  06E8               	decf	wreg,f,c
  3106  006084  A4D8               	btfss	status,2,c
  3107  006086  D7FB               	goto	l7806
  3108                           
  3109                           ;parcheggio.c: 433: CANsendMessage(0b00000000111, data_steering, 8, CAN_CONFIG_STD_MSG &
      +                           CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3110  006088  0E07               	movlw	7
  3111  00608A  0100               	movlb	0	; () banked
  3112  00608C  6F79               	movwf	CANsendMessage@identifier& (0+255),b
  3113  00608E  0E00               	movlw	0
  3114  006090  6F7A               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3115  006092  0E00               	movlw	0
  3116  006094  6F7B               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3117  006096  0E00               	movlw	0
  3118  006098  6F7C               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3119  00609A  0E91               	movlw	low _data_steering
  3120  00609C  0100               	movlb	0	; () banked
  3121  00609E  6F7D               	movwf	CANsendMessage@data& (0+255),b
  3122  0060A0  0E01               	movlw	high _data_steering
  3123  0060A2  0100               	movlb	0	; () banked
  3124  0060A4  6F7E               	movwf	(CANsendMessage@data+1)& (0+255),b
  3125  0060A6  0E08               	movlw	8
  3126  0060A8  0100               	movlb	0	; () banked
  3127  0060AA  6F7F               	movwf	CANsendMessage@dataLength& (0+255),b
  3128  0060AC  0EBC               	movlw	188
  3129  0060AE  0100               	movlb	0	; () banked
  3130  0060B0  6F80               	movwf	CANsendMessage@flags& (0+255),b
  3131  0060B2  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3132                           
  3133                           ;parcheggio.c: 436: data_speed[0] = set_speed;
  3134  0060B6  C160  F189         	movff	_set_speed,_data_speed	;volatile
  3135                           
  3136                           ;parcheggio.c: 437: data_speed[1] = (set_speed >> 8);
  3137  0060BA  0101               	movlb	1	; () banked
  3138  0060BC  5161               	movf	(_set_speed+1)& (0+255),w,b	;volatile
  3139  0060BE  0101               	movlb	1	; () banked
  3140  0060C0  6F8A               	movwf	(_data_speed+1)& (0+255),b	;volatile
  3141                           
  3142                           ; BSR set to: 1
  3143                           ;parcheggio.c: 438: data_speed[2] = dir;
  3144  0060C2  0E00               	movlw	0
  3145  0060C4  B843               	btfsc	_dir/(0+8),_dir& (0+7),c	;volatile
  3146  0060C6  0E01               	movlw	1
  3147  0060C8  0101               	movlb	1	; () banked
  3148  0060CA  6F8B               	movwf	(_data_speed+2)& (0+255),b	;volatile
  3149  0060CC                     l7816:
  3150  0060CC  EC5E  F033         	call	_CANisTxReady	;wreg free
  3151  0060D0  06E8               	decf	wreg,f,c
  3152  0060D2  A4D8               	btfss	status,2,c
  3153  0060D4  D7FB               	goto	l7816
  3154                           
  3155                           ;parcheggio.c: 440: CANsendMessage(0b00000000101, data_speed, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3156  0060D6  0E05               	movlw	5
  3157  0060D8  0100               	movlb	0	; () banked
  3158  0060DA  6F79               	movwf	CANsendMessage@identifier& (0+255),b
  3159  0060DC  0E00               	movlw	0
  3160  0060DE  6F7A               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3161  0060E0  0E00               	movlw	0
  3162  0060E2  6F7B               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3163  0060E4  0E00               	movlw	0
  3164  0060E6  6F7C               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3165  0060E8  0E89               	movlw	low _data_speed
  3166  0060EA  0100               	movlb	0	; () banked
  3167  0060EC  6F7D               	movwf	CANsendMessage@data& (0+255),b
  3168  0060EE  0E01               	movlw	high _data_speed
  3169  0060F0  0100               	movlb	0	; () banked
  3170  0060F2  6F7E               	movwf	(CANsendMessage@data+1)& (0+255),b
  3171  0060F4  0E08               	movlw	8
  3172  0060F6  0100               	movlb	0	; () banked
  3173  0060F8  6F7F               	movwf	CANsendMessage@dataLength& (0+255),b
  3174  0060FA  0EBC               	movlw	188
  3175  0060FC  0100               	movlb	0	; () banked
  3176  0060FE  6F80               	movwf	CANsendMessage@flags& (0+255),b
  3177  006100  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3178                           
  3179                           ;parcheggio.c: 443: data_brake[1] = 0;
  3180  006104  0E00               	movlw	0
  3181  006106  0101               	movlb	1	; () banked
  3182  006108  6F7A               	movwf	(_data_brake+1)& (0+255),b	;volatile
  3183  00610A                     l7822:
  3184  00610A  EC5E  F033         	call	_CANisTxReady	;wreg free
  3185  00610E  06E8               	decf	wreg,f,c
  3186  006110  A4D8               	btfss	status,2,c
  3187  006112  D7FB               	goto	l7822
  3188                           
  3189                           ;parcheggio.c: 445: CANsendMessage(0b00000000110, data_brake, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3190  006114  0E06               	movlw	6
  3191  006116  0100               	movlb	0	; () banked
  3192  006118  6F79               	movwf	CANsendMessage@identifier& (0+255),b
  3193  00611A  0E00               	movlw	0
  3194  00611C  6F7A               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3195  00611E  0E00               	movlw	0
  3196  006120  6F7B               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3197  006122  0E00               	movlw	0
  3198  006124  6F7C               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3199  006126  0E79               	movlw	low _data_brake
  3200  006128  0100               	movlb	0	; () banked
  3201  00612A  6F7D               	movwf	CANsendMessage@data& (0+255),b
  3202  00612C  0E01               	movlw	high _data_brake
  3203  00612E  0100               	movlb	0	; () banked
  3204  006130  6F7E               	movwf	(CANsendMessage@data+1)& (0+255),b
  3205  006132  0E08               	movlw	8
  3206  006134  0100               	movlb	0	; () banked
  3207  006136  6F7F               	movwf	CANsendMessage@dataLength& (0+255),b
  3208  006138  0EBC               	movlw	188
  3209  00613A  0100               	movlb	0	; () banked
  3210  00613C  6F80               	movwf	CANsendMessage@flags& (0+255),b
  3211  00613E  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3212                           
  3213                           ;parcheggio.c: 446: } else {
  3214  006142  0012               	return	
  3215  006144                     l7826:
  3216  006144  EC5E  F033         	call	_CANisTxReady	;wreg free
  3217  006148  06E8               	decf	wreg,f,c
  3218  00614A  A4D8               	btfss	status,2,c
  3219  00614C  D7FB               	goto	l7826
  3220                           
  3221                           ;parcheggio.c: 448: CANsendMessage(0b00000010000, data_correction, 8, CAN_CONFIG_STD_MSG
      +                           & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3222  00614E  0E10               	movlw	16
  3223  006150  0100               	movlb	0	; () banked
  3224  006152  6F79               	movwf	CANsendMessage@identifier& (0+255),b
  3225  006154  0E00               	movlw	0
  3226  006156  6F7A               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3227  006158  0E00               	movlw	0
  3228  00615A  6F7B               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3229  00615C  0E00               	movlw	0
  3230  00615E  6F7C               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3231  006160  0E81               	movlw	low _data_correction
  3232  006162  0100               	movlb	0	; () banked
  3233  006164  6F7D               	movwf	CANsendMessage@data& (0+255),b
  3234  006166  0E01               	movlw	high _data_correction
  3235  006168  0100               	movlb	0	; () banked
  3236  00616A  6F7E               	movwf	(CANsendMessage@data+1)& (0+255),b
  3237  00616C  0E08               	movlw	8
  3238  00616E  0100               	movlb	0	; () banked
  3239  006170  6F7F               	movwf	CANsendMessage@dataLength& (0+255),b
  3240  006172  0EBC               	movlw	188
  3241  006174  0100               	movlb	0	; () banked
  3242  006176  6F80               	movwf	CANsendMessage@flags& (0+255),b
  3243  006178  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3244  00617C  0012               	return	
  3245  00617E                     __end_of_can_send:
  3246                           	opt stack 0
  3247                           tblptru	equ	0xFF8
  3248                           tblptrh	equ	0xFF7
  3249                           tblptrl	equ	0xFF6
  3250                           tablat	equ	0xFF5
  3251                           postinc0	equ	0xFEE
  3252                           wreg	equ	0xFE8
  3253                           postdec1	equ	0xFE5
  3254                           fsr1l	equ	0xFE1
  3255                           postinc2	equ	0xFDE
  3256                           postdec2	equ	0xFDD
  3257                           status	equ	0xFD8
  3258                           
  3259 ;; *************** function _CANsendMessage *****************
  3260 ;; Defined at:
  3261 ;;		line 294 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;  identifier      4   25[BANK0 ] unsigned long 
  3264 ;;  data            2   29[BANK0 ] PTR unsigned char 
  3265 ;;		 -> data_speed(8), data_brake(8), data_steering(8), data_correction(8), 
  3266 ;;		 -> data_test(8), data(8), sensor_distance_short(8), 
  3267 ;;  dataLength      1   31[BANK0 ] unsigned char 
  3268 ;;  flags           1   32[BANK0 ] enum E15421
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;  tamp            4   37[BANK0 ] unsigned long 
  3271 ;; Return value:  Size  Location     Type
  3272 ;;                  1    wreg      void 
  3273 ;; Registers used:
  3274 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3280 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3281 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3282 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3283 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3284 ;;Total ram usage:       16 bytes
  3285 ;; Hardware stack levels used:    1
  3286 ;; Hardware stack levels required when called:    5
  3287 ;; This function calls:
  3288 ;;		Nothing
  3289 ;; This function is called by:
  3290 ;;		_main
  3291 ;;		_park_search
  3292 ;;		_park_routine
  3293 ;;		_can_send
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297                           	psect	text5
  3298  001858                     __ptext5:
  3299                           	opt stack 0
  3300  001858                     _CANsendMessage:
  3301                           	opt stack 22
  3302                           
  3303                           ;inc\CANlib.h: 296: unsigned long tamp;
  3304                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  3305                           
  3306                           ;incstack = 0
  3307  001858  010F               	movlb	15	; () banked
  3308  00185A  B740               	btfsc	64,3,b	;volatile
  3309  00185C  D13F               	goto	l361
  3310                           
  3311                           ; BSR set to: 15
  3312                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  3313  00185E  C07F  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  3314                           
  3315                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  3316  001862  0100               	movlb	0	; () banked
  3317  001864  AD80               	btfss	CANsendMessage@flags& (0+255),6,b
  3318  001866  D003               	goto	l362
  3319                           
  3320                           ; BSR set to: 0
  3321                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  3322  001868  010F               	movlb	15	; () banked
  3323  00186A  8D45               	bsf	69,6,b	;volatile
  3324  00186C  D002               	goto	l363
  3325  00186E                     l362:
  3326                           
  3327                           ; BSR set to: 0
  3328                           ;inc\CANlib.h: 302: else
  3329                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  3330  00186E  010F               	movlb	15	; () banked
  3331  001870  9D45               	bcf	69,6,b	;volatile
  3332  001872                     l363:
  3333                           
  3334                           ; BSR set to: 15
  3335                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  3336  001872  0100               	movlb	0	; () banked
  3337  001874  A780               	btfss	CANsendMessage@flags& (0+255),3,b
  3338  001876  D079               	goto	l364
  3339                           
  3340                           ; BSR set to: 0
  3341                           ;inc\CANlib.h: 306: {
  3342                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  3343  001878  0100               	movlb	0	; () banked
  3344  00187A  5179               	movf	CANsendMessage@identifier& (0+255),w,b
  3345  00187C  0100               	movlb	0	; () banked
  3346  00187E  6F85               	movwf	CANsendMessage@tamp& (0+255),b
  3347  001880  6B86               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3348  001882  6B87               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3349  001884  6B88               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3350                           
  3351                           ; BSR set to: 0
  3352                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  3353  001886  C085  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  3354                           
  3355                           ; BSR set to: 0
  3356                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  3357  00188A  0E00               	movlw	0
  3358  00188C  0100               	movlb	0	; () banked
  3359  00188E  1579               	andwf	CANsendMessage@identifier& (0+255),w,b
  3360  001890  0100               	movlb	0	; () banked
  3361  001892  6F85               	movwf	CANsendMessage@tamp& (0+255),b
  3362  001894  0EFF               	movlw	255
  3363  001896  0100               	movlb	0	; () banked
  3364  001898  157A               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3365  00189A  0100               	movlb	0	; () banked
  3366  00189C  6F86               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3367  00189E  0E00               	movlw	0
  3368  0018A0  0100               	movlb	0	; () banked
  3369  0018A2  157B               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3370  0018A4  0100               	movlb	0	; () banked
  3371  0018A6  6F87               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3372  0018A8  0E00               	movlw	0
  3373  0018AA  0100               	movlb	0	; () banked
  3374  0018AC  157C               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3375  0018AE  0100               	movlb	0	; () banked
  3376  0018B0  6F88               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3377                           
  3378                           ; BSR set to: 0
  3379                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  3380  0018B2  C085  F081         	movff	CANsendMessage@tamp,??_CANsendMessage
  3381  0018B6  C086  F082         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3382  0018BA  C087  F083         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3383  0018BE  C088  F084         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3384  0018C2  C082  F081         	movff	??_CANsendMessage+1,??_CANsendMessage
  3385  0018C6  C083  F082         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  3386  0018CA  C084  F083         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  3387  0018CE  0100               	movlb	0	; () banked
  3388  0018D0  6B84               	clrf	(??_CANsendMessage+3)& (0+255),b
  3389  0018D2  C081  F085         	movff	??_CANsendMessage,CANsendMessage@tamp
  3390  0018D6  C082  F086         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3391  0018DA  C083  F087         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3392  0018DE  C084  F088         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  3396  0018E2  C085  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  3397                           
  3398                           ; BSR set to: 0
  3399                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  3400  0018E6  0E00               	movlw	0
  3401  0018E8  010F               	movlb	15	; () banked
  3402  0018EA  6F42               	movwf	66,b	;volatile
  3403                           
  3404                           ; BSR set to: 15
  3405                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  3406  0018EC  010F               	movlb	15	; () banked
  3407  0018EE  8742               	bsf	66,3,b	;volatile
  3408                           
  3409                           ; BSR set to: 15
  3410                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  3411  0018F0  0100               	movlb	0	; () banked
  3412  0018F2  A17B               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  3413  0018F4  D002               	goto	l365
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  3417  0018F6  010F               	movlb	15	; () banked
  3418  0018F8  8142               	bsf	66,0,b	;volatile
  3419  0018FA                     l365:
  3420                           
  3421                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  3422  0018FA  0100               	movlb	0	; () banked
  3423  0018FC  A37B               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  3424  0018FE  D002               	goto	l366
  3425                           
  3426                           ; BSR set to: 0
  3427                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  3428  001900  010F               	movlb	15	; () banked
  3429  001902  8342               	bsf	66,1,b	;volatile
  3430  001904                     l366:
  3431                           
  3432                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  3433  001904  0100               	movlb	0	; () banked
  3434  001906  A57B               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  3435  001908  D002               	goto	l367
  3436                           
  3437                           ; BSR set to: 0
  3438                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  3439  00190A  010F               	movlb	15	; () banked
  3440  00190C  8B42               	bsf	66,5,b	;volatile
  3441  00190E                     l367:
  3442                           
  3443                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  3444  00190E  0100               	movlb	0	; () banked
  3445  001910  A77B               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  3446  001912  D002               	goto	l368
  3447                           
  3448                           ; BSR set to: 0
  3449                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  3450  001914  010F               	movlb	15	; () banked
  3451  001916  8D42               	bsf	66,6,b	;volatile
  3452  001918                     l368:
  3453                           
  3454                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  3455  001918  0100               	movlb	0	; () banked
  3456  00191A  A97B               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  3457  00191C  D002               	goto	l7410
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  3461  00191E  010F               	movlb	15	; () banked
  3462  001920  8F42               	bsf	66,7,b	;volatile
  3463  001922                     l7410:
  3464                           
  3465                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  3466  001922  C079  F081         	movff	CANsendMessage@identifier,??_CANsendMessage
  3467  001926  C07A  F082         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3468  00192A  C07B  F083         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3469  00192E  C07C  F084         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3470  001932  0E16               	movlw	22
  3471  001934  D006               	goto	u9850
  3472  001936                     u9855:
  3473  001936  0100               	movlb	0	; () banked
  3474  001938  90D8               	bcf	status,0,c
  3475  00193A  3384               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3476  00193C  3383               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3477  00193E  3382               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3478  001940  3381               	rrcf	??_CANsendMessage& (0+255),f,b
  3479  001942                     u9850:
  3480  001942  2EE8               	decfsz	wreg,f,c
  3481  001944  D7F8               	goto	u9855
  3482  001946  C081  F085         	movff	??_CANsendMessage,CANsendMessage@tamp
  3483  00194A  C082  F086         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3484  00194E  C083  F087         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3485  001952  C084  F088         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  3489  001956  0100               	movlb	0	; () banked
  3490  001958  5185               	movf	CANsendMessage@tamp& (0+255),w,b
  3491  00195A  0100               	movlb	0	; () banked
  3492  00195C  6F85               	movwf	CANsendMessage@tamp& (0+255),b
  3493  00195E  6B86               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3494  001960  6B87               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3495  001962  6B88               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3496                           
  3497                           ; BSR set to: 0
  3498                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  3499  001964  C085  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  3500                           
  3501                           ;inc\CANlib.h: 332: }
  3502  001968  D059               	goto	l7430
  3503  00196A                     l364:
  3504                           
  3505                           ; BSR set to: 0
  3506                           ;inc\CANlib.h: 334: else
  3507                           ;inc\CANlib.h: 336: {
  3508                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  3509  00196A  010F               	movlb	15	; () banked
  3510  00196C  9742               	bcf	66,3,b	;volatile
  3511                           
  3512                           ; BSR set to: 15
  3513                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  3514  00196E  C079  F081         	movff	CANsendMessage@identifier,??_CANsendMessage
  3515  001972  C07A  F082         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3516  001976  C07B  F083         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3517  00197A  C07C  F084         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3518  00197E  0E04               	movlw	4
  3519  001980  D006               	goto	u9860
  3520  001982                     u9865:
  3521  001982  0100               	movlb	0	; () banked
  3522  001984  90D8               	bcf	status,0,c
  3523  001986  3384               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3524  001988  3383               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3525  00198A  3382               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3526  00198C  3381               	rrcf	??_CANsendMessage& (0+255),f,b
  3527  00198E                     u9860:
  3528  00198E  2EE8               	decfsz	wreg,f,c
  3529  001990  D7F8               	goto	u9865
  3530  001992  C081  F085         	movff	??_CANsendMessage,CANsendMessage@tamp
  3531  001996  C082  F086         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3532  00199A  C083  F087         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3533  00199E  C084  F088         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  3537  0019A2  0100               	movlb	0	; () banked
  3538  0019A4  5185               	movf	CANsendMessage@tamp& (0+255),w,b
  3539  0019A6  0100               	movlb	0	; () banked
  3540  0019A8  6F85               	movwf	CANsendMessage@tamp& (0+255),b
  3541  0019AA  6B86               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3542  0019AC  6B87               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3543  0019AE  6B88               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  3547  0019B0  C085  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  3551  0019B4  0E07               	movlw	7
  3552  0019B6  0100               	movlb	0	; () banked
  3553  0019B8  1579               	andwf	CANsendMessage@identifier& (0+255),w,b
  3554  0019BA  0100               	movlb	0	; () banked
  3555  0019BC  6F85               	movwf	CANsendMessage@tamp& (0+255),b
  3556  0019BE  0E00               	movlw	0
  3557  0019C0  0100               	movlb	0	; () banked
  3558  0019C2  157A               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3559  0019C4  0100               	movlb	0	; () banked
  3560  0019C6  6F86               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3561  0019C8  0E00               	movlw	0
  3562  0019CA  0100               	movlb	0	; () banked
  3563  0019CC  157B               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3564  0019CE  0100               	movlb	0	; () banked
  3565  0019D0  6F87               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3566  0019D2  0E00               	movlw	0
  3567  0019D4  0100               	movlb	0	; () banked
  3568  0019D6  157C               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3569  0019D8  0100               	movlb	0	; () banked
  3570  0019DA  6F88               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3571                           
  3572                           ; BSR set to: 0
  3573                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  3574  0019DC  C085  F081         	movff	CANsendMessage@tamp,??_CANsendMessage
  3575  0019E0  C086  F082         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3576  0019E4  C087  F083         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3577  0019E8  C088  F084         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3578  0019EC  0E05               	movlw	5
  3579  0019EE                     u9875:
  3580  0019EE  90D8               	bcf	status,0,c
  3581  0019F0  0100               	movlb	0	; () banked
  3582  0019F2  3781               	rlcf	??_CANsendMessage& (0+255),f,b
  3583  0019F4  3782               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  3584  0019F6  3783               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  3585  0019F8  3784               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  3586  0019FA  2EE8               	decfsz	wreg,f,c
  3587  0019FC  D7F8               	goto	u9875
  3588  0019FE  C081  F085         	movff	??_CANsendMessage,CANsendMessage@tamp
  3589  001A02  C082  F086         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3590  001A06  C083  F087         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3591  001A0A  C084  F088         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3592                           
  3593                           ; BSR set to: 0
  3594                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  3595  001A0E  010F               	movlb	15	; () banked
  3596  001A10  5142               	movf	66,w,b	;volatile
  3597  001A12  0B1F               	andlw	31
  3598  001A14  010F               	movlb	15	; () banked
  3599  001A16  6F42               	movwf	66,b	;volatile
  3600                           
  3601                           ; BSR set to: 15
  3602                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  3603  001A18  C085  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  3604  001A1C                     l7430:
  3605                           
  3606                           ;inc\CANlib.h: 347: }
  3607                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  3608  001A1C  0100               	movlb	0	; () banked
  3609  001A1E  A180               	btfss	CANsendMessage@flags& (0+255),0,b
  3610  001A20  D003               	goto	l371
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  3614  001A22  010F               	movlb	15	; () banked
  3615  001A24  8140               	bsf	64,0,b	;volatile
  3616  001A26  D002               	goto	l372
  3617  001A28                     l371:
  3618                           
  3619                           ; BSR set to: 0
  3620                           ;inc\CANlib.h: 351: else
  3621                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  3622  001A28  010F               	movlb	15	; () banked
  3623  001A2A  9140               	bcf	64,0,b	;volatile
  3624  001A2C                     l372:
  3625                           
  3626                           ; BSR set to: 15
  3627                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  3628  001A2C  0100               	movlb	0	; () banked
  3629  001A2E  A380               	btfss	CANsendMessage@flags& (0+255),1,b
  3630  001A30  D003               	goto	l373
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  3634  001A32  010F               	movlb	15	; () banked
  3635  001A34  8340               	bsf	64,1,b	;volatile
  3636  001A36  D002               	goto	l7436
  3637  001A38                     l373:
  3638                           
  3639                           ; BSR set to: 0
  3640                           ;inc\CANlib.h: 355: else
  3641                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  3642  001A38  010F               	movlb	15	; () banked
  3643  001A3A  9340               	bcf	64,1,b	;volatile
  3644  001A3C                     l7436:
  3645                           
  3646                           ; BSR set to: 15
  3647                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  3648  001A3C  C07D  FFD9         	movff	CANsendMessage@data,fsr2l
  3649  001A40  C07E  FFDA         	movff	CANsendMessage@data+1,fsr2h
  3650  001A44  50DF               	movf	indf2,w,c
  3651  001A46  010F               	movlb	15	; () banked
  3652  001A48  6F46               	movwf	70,b	;volatile
  3653                           
  3654                           ; BSR set to: 15
  3655                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  3656  001A4A  0100               	movlb	0	; () banked
  3657  001A4C  EE20 F001          	lfsr	2,1
  3658  001A50  517D               	movf	CANsendMessage@data& (0+255),w,b
  3659  001A52  26D9               	addwf	fsr2l,f,c
  3660  001A54  517E               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3661  001A56  22DA               	addwfc	fsr2h,f,c
  3662  001A58  50DF               	movf	indf2,w,c
  3663  001A5A  010F               	movlb	15	; () banked
  3664  001A5C  6F47               	movwf	71,b	;volatile
  3665                           
  3666                           ; BSR set to: 15
  3667                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  3668  001A5E  0100               	movlb	0	; () banked
  3669  001A60  EE20 F002          	lfsr	2,2
  3670  001A64  517D               	movf	CANsendMessage@data& (0+255),w,b
  3671  001A66  26D9               	addwf	fsr2l,f,c
  3672  001A68  517E               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3673  001A6A  22DA               	addwfc	fsr2h,f,c
  3674  001A6C  50DF               	movf	indf2,w,c
  3675  001A6E  010F               	movlb	15	; () banked
  3676  001A70  6F48               	movwf	72,b	;volatile
  3677                           
  3678                           ; BSR set to: 15
  3679                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  3680  001A72  0100               	movlb	0	; () banked
  3681  001A74  EE20 F003          	lfsr	2,3
  3682  001A78  517D               	movf	CANsendMessage@data& (0+255),w,b
  3683  001A7A  26D9               	addwf	fsr2l,f,c
  3684  001A7C  517E               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3685  001A7E  22DA               	addwfc	fsr2h,f,c
  3686  001A80  50DF               	movf	indf2,w,c
  3687  001A82  010F               	movlb	15	; () banked
  3688  001A84  6F49               	movwf	73,b	;volatile
  3689                           
  3690                           ; BSR set to: 15
  3691                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  3692  001A86  0100               	movlb	0	; () banked
  3693  001A88  EE20 F004          	lfsr	2,4
  3694  001A8C  517D               	movf	CANsendMessage@data& (0+255),w,b
  3695  001A8E  26D9               	addwf	fsr2l,f,c
  3696  001A90  517E               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3697  001A92  22DA               	addwfc	fsr2h,f,c
  3698  001A94  50DF               	movf	indf2,w,c
  3699  001A96  010F               	movlb	15	; () banked
  3700  001A98  6F4A               	movwf	74,b	;volatile
  3701                           
  3702                           ; BSR set to: 15
  3703                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  3704  001A9A  0100               	movlb	0	; () banked
  3705  001A9C  EE20 F005          	lfsr	2,5
  3706  001AA0  517D               	movf	CANsendMessage@data& (0+255),w,b
  3707  001AA2  26D9               	addwf	fsr2l,f,c
  3708  001AA4  517E               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3709  001AA6  22DA               	addwfc	fsr2h,f,c
  3710  001AA8  50DF               	movf	indf2,w,c
  3711  001AAA  010F               	movlb	15	; () banked
  3712  001AAC  6F4B               	movwf	75,b	;volatile
  3713                           
  3714                           ; BSR set to: 15
  3715                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  3716  001AAE  0100               	movlb	0	; () banked
  3717  001AB0  EE20 F006          	lfsr	2,6
  3718  001AB4  517D               	movf	CANsendMessage@data& (0+255),w,b
  3719  001AB6  26D9               	addwf	fsr2l,f,c
  3720  001AB8  517E               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3721  001ABA  22DA               	addwfc	fsr2h,f,c
  3722  001ABC  50DF               	movf	indf2,w,c
  3723  001ABE  010F               	movlb	15	; () banked
  3724  001AC0  6F4C               	movwf	76,b	;volatile
  3725                           
  3726                           ; BSR set to: 15
  3727                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  3728  001AC2  0100               	movlb	0	; () banked
  3729  001AC4  EE20 F007          	lfsr	2,7
  3730  001AC8  517D               	movf	CANsendMessage@data& (0+255),w,b
  3731  001ACA  26D9               	addwf	fsr2l,f,c
  3732  001ACC  517E               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3733  001ACE  22DA               	addwfc	fsr2h,f,c
  3734  001AD0  50DF               	movf	indf2,w,c
  3735  001AD2  010F               	movlb	15	; () banked
  3736  001AD4  6F4D               	movwf	77,b	;volatile
  3737                           
  3738                           ; BSR set to: 15
  3739                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  3740  001AD6  010F               	movlb	15	; () banked
  3741  001AD8  8740               	bsf	64,3,b	;volatile
  3742                           
  3743                           ; BSR set to: 15
  3744                           ;inc\CANlib.h: 368: return;
  3745  001ADA  0012               	return	
  3746  001ADC                     l361:
  3747                           
  3748                           ; BSR set to: 15
  3749                           ;inc\CANlib.h: 369: }
  3750                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  3751  001ADC  010F               	movlb	15	; () banked
  3752  001ADE  B730               	btfsc	48,3,b	;volatile
  3753  001AE0  D13F               	goto	l376
  3754                           
  3755                           ; BSR set to: 15
  3756                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  3757  001AE2  C07F  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  3758                           
  3759                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  3760  001AE6  0100               	movlb	0	; () banked
  3761  001AE8  AD80               	btfss	CANsendMessage@flags& (0+255),6,b
  3762  001AEA  D003               	goto	l377
  3763                           
  3764                           ; BSR set to: 0
  3765                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  3766  001AEC  010F               	movlb	15	; () banked
  3767  001AEE  8D35               	bsf	53,6,b	;volatile
  3768  001AF0  D002               	goto	l378
  3769  001AF2                     l377:
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;inc\CANlib.h: 378: else
  3773                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  3774  001AF2  010F               	movlb	15	; () banked
  3775  001AF4  9D35               	bcf	53,6,b	;volatile
  3776  001AF6                     l378:
  3777                           
  3778                           ; BSR set to: 15
  3779                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  3780  001AF6  0100               	movlb	0	; () banked
  3781  001AF8  A780               	btfss	CANsendMessage@flags& (0+255),3,b
  3782  001AFA  D079               	goto	l379
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;inc\CANlib.h: 382: {
  3786                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  3787  001AFC  0100               	movlb	0	; () banked
  3788  001AFE  5179               	movf	CANsendMessage@identifier& (0+255),w,b
  3789  001B00  0100               	movlb	0	; () banked
  3790  001B02  6F85               	movwf	CANsendMessage@tamp& (0+255),b
  3791  001B04  6B86               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3792  001B06  6B87               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3793  001B08  6B88               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3794                           
  3795                           ; BSR set to: 0
  3796                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  3797  001B0A  C085  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  3798                           
  3799                           ; BSR set to: 0
  3800                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  3801  001B0E  0E00               	movlw	0
  3802  001B10  0100               	movlb	0	; () banked
  3803  001B12  1579               	andwf	CANsendMessage@identifier& (0+255),w,b
  3804  001B14  0100               	movlb	0	; () banked
  3805  001B16  6F85               	movwf	CANsendMessage@tamp& (0+255),b
  3806  001B18  0EFF               	movlw	255
  3807  001B1A  0100               	movlb	0	; () banked
  3808  001B1C  157A               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3809  001B1E  0100               	movlb	0	; () banked
  3810  001B20  6F86               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3811  001B22  0E00               	movlw	0
  3812  001B24  0100               	movlb	0	; () banked
  3813  001B26  157B               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3814  001B28  0100               	movlb	0	; () banked
  3815  001B2A  6F87               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3816  001B2C  0E00               	movlw	0
  3817  001B2E  0100               	movlb	0	; () banked
  3818  001B30  157C               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3819  001B32  0100               	movlb	0	; () banked
  3820  001B34  6F88               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3821                           
  3822                           ; BSR set to: 0
  3823                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  3824  001B36  C085  F081         	movff	CANsendMessage@tamp,??_CANsendMessage
  3825  001B3A  C086  F082         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3826  001B3E  C087  F083         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3827  001B42  C088  F084         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3828  001B46  C082  F081         	movff	??_CANsendMessage+1,??_CANsendMessage
  3829  001B4A  C083  F082         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  3830  001B4E  C084  F083         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  3831  001B52  0100               	movlb	0	; () banked
  3832  001B54  6B84               	clrf	(??_CANsendMessage+3)& (0+255),b
  3833  001B56  C081  F085         	movff	??_CANsendMessage,CANsendMessage@tamp
  3834  001B5A  C082  F086         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3835  001B5E  C083  F087         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3836  001B62  C084  F088         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3837                           
  3838                           ; BSR set to: 0
  3839                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  3840  001B66  C085  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  3841                           
  3842                           ; BSR set to: 0
  3843                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  3844  001B6A  0E00               	movlw	0
  3845  001B6C  010F               	movlb	15	; () banked
  3846  001B6E  6F32               	movwf	50,b	;volatile
  3847                           
  3848                           ; BSR set to: 15
  3849                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  3850  001B70  010F               	movlb	15	; () banked
  3851  001B72  8732               	bsf	50,3,b	;volatile
  3852                           
  3853                           ; BSR set to: 15
  3854                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  3855  001B74  0100               	movlb	0	; () banked
  3856  001B76  A17B               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  3857  001B78  D002               	goto	l380
  3858                           
  3859                           ; BSR set to: 0
  3860                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  3861  001B7A  010F               	movlb	15	; () banked
  3862  001B7C  8132               	bsf	50,0,b	;volatile
  3863  001B7E                     l380:
  3864                           
  3865                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  3866  001B7E  0100               	movlb	0	; () banked
  3867  001B80  A37B               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  3868  001B82  D002               	goto	l381
  3869                           
  3870                           ; BSR set to: 0
  3871                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  3872  001B84  010F               	movlb	15	; () banked
  3873  001B86  8332               	bsf	50,1,b	;volatile
  3874  001B88                     l381:
  3875                           
  3876                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  3877  001B88  0100               	movlb	0	; () banked
  3878  001B8A  A57B               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  3879  001B8C  D002               	goto	l382
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  3883  001B8E  010F               	movlb	15	; () banked
  3884  001B90  8B32               	bsf	50,5,b	;volatile
  3885  001B92                     l382:
  3886                           
  3887                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  3888  001B92  0100               	movlb	0	; () banked
  3889  001B94  A77B               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  3890  001B96  D002               	goto	l383
  3891                           
  3892                           ; BSR set to: 0
  3893                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  3894  001B98  010F               	movlb	15	; () banked
  3895  001B9A  8D32               	bsf	50,6,b	;volatile
  3896  001B9C                     l383:
  3897                           
  3898                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  3899  001B9C  0100               	movlb	0	; () banked
  3900  001B9E  A97B               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  3901  001BA0  D002               	goto	l7486
  3902                           
  3903                           ; BSR set to: 0
  3904                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  3905  001BA2  010F               	movlb	15	; () banked
  3906  001BA4  8F32               	bsf	50,7,b	;volatile
  3907  001BA6                     l7486:
  3908                           
  3909                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  3910  001BA6  C079  F081         	movff	CANsendMessage@identifier,??_CANsendMessage
  3911  001BAA  C07A  F082         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3912  001BAE  C07B  F083         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3913  001BB2  C07C  F084         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3914  001BB6  0E16               	movlw	22
  3915  001BB8  D006               	goto	u9980
  3916  001BBA                     u9985:
  3917  001BBA  0100               	movlb	0	; () banked
  3918  001BBC  90D8               	bcf	status,0,c
  3919  001BBE  3384               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3920  001BC0  3383               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3921  001BC2  3382               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3922  001BC4  3381               	rrcf	??_CANsendMessage& (0+255),f,b
  3923  001BC6                     u9980:
  3924  001BC6  2EE8               	decfsz	wreg,f,c
  3925  001BC8  D7F8               	goto	u9985
  3926  001BCA  C081  F085         	movff	??_CANsendMessage,CANsendMessage@tamp
  3927  001BCE  C082  F086         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3928  001BD2  C083  F087         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3929  001BD6  C084  F088         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3930                           
  3931                           ; BSR set to: 0
  3932                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  3933  001BDA  0100               	movlb	0	; () banked
  3934  001BDC  5185               	movf	CANsendMessage@tamp& (0+255),w,b
  3935  001BDE  0100               	movlb	0	; () banked
  3936  001BE0  6F85               	movwf	CANsendMessage@tamp& (0+255),b
  3937  001BE2  6B86               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3938  001BE4  6B87               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3939  001BE6  6B88               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  3943  001BE8  C085  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  3944                           
  3945                           ;inc\CANlib.h: 407: }
  3946  001BEC  D059               	goto	l7506
  3947  001BEE                     l379:
  3948                           
  3949                           ; BSR set to: 0
  3950                           ;inc\CANlib.h: 409: else
  3951                           ;inc\CANlib.h: 411: {
  3952                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  3953  001BEE  010F               	movlb	15	; () banked
  3954  001BF0  9732               	bcf	50,3,b	;volatile
  3955                           
  3956                           ; BSR set to: 15
  3957                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  3958  001BF2  C079  F081         	movff	CANsendMessage@identifier,??_CANsendMessage
  3959  001BF6  C07A  F082         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3960  001BFA  C07B  F083         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3961  001BFE  C07C  F084         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3962  001C02  0E04               	movlw	4
  3963  001C04  D006               	goto	u9990
  3964  001C06                     u9995:
  3965  001C06  0100               	movlb	0	; () banked
  3966  001C08  90D8               	bcf	status,0,c
  3967  001C0A  3384               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3968  001C0C  3383               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3969  001C0E  3382               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3970  001C10  3381               	rrcf	??_CANsendMessage& (0+255),f,b
  3971  001C12                     u9990:
  3972  001C12  2EE8               	decfsz	wreg,f,c
  3973  001C14  D7F8               	goto	u9995
  3974  001C16  C081  F085         	movff	??_CANsendMessage,CANsendMessage@tamp
  3975  001C1A  C082  F086         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3976  001C1E  C083  F087         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3977  001C22  C084  F088         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3978                           
  3979                           ; BSR set to: 0
  3980                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  3981  001C26  0100               	movlb	0	; () banked
  3982  001C28  5185               	movf	CANsendMessage@tamp& (0+255),w,b
  3983  001C2A  0100               	movlb	0	; () banked
  3984  001C2C  6F85               	movwf	CANsendMessage@tamp& (0+255),b
  3985  001C2E  6B86               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3986  001C30  6B87               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3987  001C32  6B88               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3988                           
  3989                           ; BSR set to: 0
  3990                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  3991  001C34  C085  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  3992                           
  3993                           ; BSR set to: 0
  3994                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  3995  001C38  0E07               	movlw	7
  3996  001C3A  0100               	movlb	0	; () banked
  3997  001C3C  1579               	andwf	CANsendMessage@identifier& (0+255),w,b
  3998  001C3E  0100               	movlb	0	; () banked
  3999  001C40  6F85               	movwf	CANsendMessage@tamp& (0+255),b
  4000  001C42  0E00               	movlw	0
  4001  001C44  0100               	movlb	0	; () banked
  4002  001C46  157A               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  4003  001C48  0100               	movlb	0	; () banked
  4004  001C4A  6F86               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  4005  001C4C  0E00               	movlw	0
  4006  001C4E  0100               	movlb	0	; () banked
  4007  001C50  157B               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  4008  001C52  0100               	movlb	0	; () banked
  4009  001C54  6F87               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  4010  001C56  0E00               	movlw	0
  4011  001C58  0100               	movlb	0	; () banked
  4012  001C5A  157C               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  4013  001C5C  0100               	movlb	0	; () banked
  4014  001C5E  6F88               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  4015                           
  4016                           ; BSR set to: 0
  4017                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  4018  001C60  C085  F081         	movff	CANsendMessage@tamp,??_CANsendMessage
  4019  001C64  C086  F082         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  4020  001C68  C087  F083         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  4021  001C6C  C088  F084         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  4022  001C70  0E05               	movlw	5
  4023  001C72                     u10005:
  4024  001C72  90D8               	bcf	status,0,c
  4025  001C74  0100               	movlb	0	; () banked
  4026  001C76  3781               	rlcf	??_CANsendMessage& (0+255),f,b
  4027  001C78  3782               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  4028  001C7A  3783               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  4029  001C7C  3784               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  4030  001C7E  2EE8               	decfsz	wreg,f,c
  4031  001C80  D7F8               	goto	u10005
  4032  001C82  C081  F085         	movff	??_CANsendMessage,CANsendMessage@tamp
  4033  001C86  C082  F086         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4034  001C8A  C083  F087         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4035  001C8E  C084  F088         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4036                           
  4037                           ; BSR set to: 0
  4038                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  4039  001C92  010F               	movlb	15	; () banked
  4040  001C94  5132               	movf	50,w,b	;volatile
  4041  001C96  0B1F               	andlw	31
  4042  001C98  010F               	movlb	15	; () banked
  4043  001C9A  6F32               	movwf	50,b	;volatile
  4044                           
  4045                           ; BSR set to: 15
  4046                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  4047  001C9C  C085  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  4048  001CA0                     l7506:
  4049                           
  4050                           ;inc\CANlib.h: 422: }
  4051                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  4052  001CA0  0100               	movlb	0	; () banked
  4053  001CA2  A180               	btfss	CANsendMessage@flags& (0+255),0,b
  4054  001CA4  D003               	goto	l386
  4055                           
  4056                           ; BSR set to: 0
  4057                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  4058  001CA6  010F               	movlb	15	; () banked
  4059  001CA8  8130               	bsf	48,0,b	;volatile
  4060  001CAA  D002               	goto	l387
  4061  001CAC                     l386:
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;inc\CANlib.h: 426: else
  4065                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  4066  001CAC  010F               	movlb	15	; () banked
  4067  001CAE  9130               	bcf	48,0,b	;volatile
  4068  001CB0                     l387:
  4069                           
  4070                           ; BSR set to: 15
  4071                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  4072  001CB0  0100               	movlb	0	; () banked
  4073  001CB2  A380               	btfss	CANsendMessage@flags& (0+255),1,b
  4074  001CB4  D003               	goto	l388
  4075                           
  4076                           ; BSR set to: 0
  4077                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  4078  001CB6  010F               	movlb	15	; () banked
  4079  001CB8  8330               	bsf	48,1,b	;volatile
  4080  001CBA  D002               	goto	l7512
  4081  001CBC                     l388:
  4082                           
  4083                           ; BSR set to: 0
  4084                           ;inc\CANlib.h: 430: else
  4085                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  4086  001CBC  010F               	movlb	15	; () banked
  4087  001CBE  9330               	bcf	48,1,b	;volatile
  4088  001CC0                     l7512:
  4089                           
  4090                           ; BSR set to: 15
  4091                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  4092  001CC0  C07D  FFD9         	movff	CANsendMessage@data,fsr2l
  4093  001CC4  C07E  FFDA         	movff	CANsendMessage@data+1,fsr2h
  4094  001CC8  50DF               	movf	indf2,w,c
  4095  001CCA  010F               	movlb	15	; () banked
  4096  001CCC  6F36               	movwf	54,b	;volatile
  4097                           
  4098                           ; BSR set to: 15
  4099                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  4100  001CCE  0100               	movlb	0	; () banked
  4101  001CD0  EE20 F001          	lfsr	2,1
  4102  001CD4  517D               	movf	CANsendMessage@data& (0+255),w,b
  4103  001CD6  26D9               	addwf	fsr2l,f,c
  4104  001CD8  517E               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4105  001CDA  22DA               	addwfc	fsr2h,f,c
  4106  001CDC  50DF               	movf	indf2,w,c
  4107  001CDE  010F               	movlb	15	; () banked
  4108  001CE0  6F37               	movwf	55,b	;volatile
  4109                           
  4110                           ; BSR set to: 15
  4111                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  4112  001CE2  0100               	movlb	0	; () banked
  4113  001CE4  EE20 F002          	lfsr	2,2
  4114  001CE8  517D               	movf	CANsendMessage@data& (0+255),w,b
  4115  001CEA  26D9               	addwf	fsr2l,f,c
  4116  001CEC  517E               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4117  001CEE  22DA               	addwfc	fsr2h,f,c
  4118  001CF0  50DF               	movf	indf2,w,c
  4119  001CF2  010F               	movlb	15	; () banked
  4120  001CF4  6F38               	movwf	56,b	;volatile
  4121                           
  4122                           ; BSR set to: 15
  4123                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  4124  001CF6  0100               	movlb	0	; () banked
  4125  001CF8  EE20 F003          	lfsr	2,3
  4126  001CFC  517D               	movf	CANsendMessage@data& (0+255),w,b
  4127  001CFE  26D9               	addwf	fsr2l,f,c
  4128  001D00  517E               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4129  001D02  22DA               	addwfc	fsr2h,f,c
  4130  001D04  50DF               	movf	indf2,w,c
  4131  001D06  010F               	movlb	15	; () banked
  4132  001D08  6F39               	movwf	57,b	;volatile
  4133                           
  4134                           ; BSR set to: 15
  4135                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  4136  001D0A  0100               	movlb	0	; () banked
  4137  001D0C  EE20 F004          	lfsr	2,4
  4138  001D10  517D               	movf	CANsendMessage@data& (0+255),w,b
  4139  001D12  26D9               	addwf	fsr2l,f,c
  4140  001D14  517E               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4141  001D16  22DA               	addwfc	fsr2h,f,c
  4142  001D18  50DF               	movf	indf2,w,c
  4143  001D1A  010F               	movlb	15	; () banked
  4144  001D1C  6F3A               	movwf	58,b	;volatile
  4145                           
  4146                           ; BSR set to: 15
  4147                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  4148  001D1E  0100               	movlb	0	; () banked
  4149  001D20  EE20 F005          	lfsr	2,5
  4150  001D24  517D               	movf	CANsendMessage@data& (0+255),w,b
  4151  001D26  26D9               	addwf	fsr2l,f,c
  4152  001D28  517E               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4153  001D2A  22DA               	addwfc	fsr2h,f,c
  4154  001D2C  50DF               	movf	indf2,w,c
  4155  001D2E  010F               	movlb	15	; () banked
  4156  001D30  6F3B               	movwf	59,b	;volatile
  4157                           
  4158                           ; BSR set to: 15
  4159                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  4160  001D32  0100               	movlb	0	; () banked
  4161  001D34  EE20 F006          	lfsr	2,6
  4162  001D38  517D               	movf	CANsendMessage@data& (0+255),w,b
  4163  001D3A  26D9               	addwf	fsr2l,f,c
  4164  001D3C  517E               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4165  001D3E  22DA               	addwfc	fsr2h,f,c
  4166  001D40  50DF               	movf	indf2,w,c
  4167  001D42  010F               	movlb	15	; () banked
  4168  001D44  6F3C               	movwf	60,b	;volatile
  4169                           
  4170                           ; BSR set to: 15
  4171                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  4172  001D46  0100               	movlb	0	; () banked
  4173  001D48  EE20 F007          	lfsr	2,7
  4174  001D4C  517D               	movf	CANsendMessage@data& (0+255),w,b
  4175  001D4E  26D9               	addwf	fsr2l,f,c
  4176  001D50  517E               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4177  001D52  22DA               	addwfc	fsr2h,f,c
  4178  001D54  50DF               	movf	indf2,w,c
  4179  001D56  010F               	movlb	15	; () banked
  4180  001D58  6F3D               	movwf	61,b	;volatile
  4181                           
  4182                           ; BSR set to: 15
  4183                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  4184  001D5A  010F               	movlb	15	; () banked
  4185  001D5C  8730               	bsf	48,3,b	;volatile
  4186                           
  4187                           ; BSR set to: 15
  4188                           ;inc\CANlib.h: 444: return;
  4189  001D5E  0012               	return	
  4190  001D60                     l376:
  4191                           
  4192                           ; BSR set to: 15
  4193                           ;inc\CANlib.h: 445: }
  4194                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  4195  001D60  010F               	movlb	15	; () banked
  4196  001D62  B720               	btfsc	32,3,b	;volatile
  4197  001D64  0012               	return	
  4198                           
  4199                           ; BSR set to: 15
  4200                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  4201  001D66  C07F  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  4202                           
  4203                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  4204  001D6A  0100               	movlb	0	; () banked
  4205  001D6C  AD80               	btfss	CANsendMessage@flags& (0+255),6,b
  4206  001D6E  D003               	goto	l391
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  4210  001D70  010F               	movlb	15	; () banked
  4211  001D72  8D25               	bsf	37,6,b	;volatile
  4212  001D74  D002               	goto	l392
  4213  001D76                     l391:
  4214                           
  4215                           ; BSR set to: 0
  4216                           ;inc\CANlib.h: 454: else
  4217                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  4218  001D76  010F               	movlb	15	; () banked
  4219  001D78  9D25               	bcf	37,6,b	;volatile
  4220  001D7A                     l392:
  4221                           
  4222                           ; BSR set to: 15
  4223                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  4224  001D7A  0100               	movlb	0	; () banked
  4225  001D7C  A780               	btfss	CANsendMessage@flags& (0+255),3,b
  4226  001D7E  D079               	goto	l393
  4227                           
  4228                           ; BSR set to: 0
  4229                           ;inc\CANlib.h: 458: {
  4230                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  4231  001D80  0100               	movlb	0	; () banked
  4232  001D82  5179               	movf	CANsendMessage@identifier& (0+255),w,b
  4233  001D84  0100               	movlb	0	; () banked
  4234  001D86  6F85               	movwf	CANsendMessage@tamp& (0+255),b
  4235  001D88  6B86               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4236  001D8A  6B87               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4237  001D8C  6B88               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4238                           
  4239                           ; BSR set to: 0
  4240                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  4241  001D8E  C085  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  4242                           
  4243                           ; BSR set to: 0
  4244                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  4245  001D92  0E00               	movlw	0
  4246  001D94  0100               	movlb	0	; () banked
  4247  001D96  1579               	andwf	CANsendMessage@identifier& (0+255),w,b
  4248  001D98  0100               	movlb	0	; () banked
  4249  001D9A  6F85               	movwf	CANsendMessage@tamp& (0+255),b
  4250  001D9C  0EFF               	movlw	255
  4251  001D9E  0100               	movlb	0	; () banked
  4252  001DA0  157A               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  4253  001DA2  0100               	movlb	0	; () banked
  4254  001DA4  6F86               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  4255  001DA6  0E00               	movlw	0
  4256  001DA8  0100               	movlb	0	; () banked
  4257  001DAA  157B               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  4258  001DAC  0100               	movlb	0	; () banked
  4259  001DAE  6F87               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  4260  001DB0  0E00               	movlw	0
  4261  001DB2  0100               	movlb	0	; () banked
  4262  001DB4  157C               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  4263  001DB6  0100               	movlb	0	; () banked
  4264  001DB8  6F88               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  4265                           
  4266                           ; BSR set to: 0
  4267                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  4268  001DBA  C085  F081         	movff	CANsendMessage@tamp,??_CANsendMessage
  4269  001DBE  C086  F082         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  4270  001DC2  C087  F083         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  4271  001DC6  C088  F084         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  4272  001DCA  C082  F081         	movff	??_CANsendMessage+1,??_CANsendMessage
  4273  001DCE  C083  F082         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  4274  001DD2  C084  F083         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  4275  001DD6  0100               	movlb	0	; () banked
  4276  001DD8  6B84               	clrf	(??_CANsendMessage+3)& (0+255),b
  4277  001DDA  C081  F085         	movff	??_CANsendMessage,CANsendMessage@tamp
  4278  001DDE  C082  F086         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4279  001DE2  C083  F087         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4280  001DE6  C084  F088         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  4284  001DEA  C085  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  4285                           
  4286                           ; BSR set to: 0
  4287                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  4288  001DEE  0E00               	movlw	0
  4289  001DF0  010F               	movlb	15	; () banked
  4290  001DF2  6F22               	movwf	34,b	;volatile
  4291                           
  4292                           ; BSR set to: 15
  4293                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  4294  001DF4  010F               	movlb	15	; () banked
  4295  001DF6  8722               	bsf	34,3,b	;volatile
  4296                           
  4297                           ; BSR set to: 15
  4298                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  4299  001DF8  0100               	movlb	0	; () banked
  4300  001DFA  A17B               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  4301  001DFC  D002               	goto	l394
  4302                           
  4303                           ; BSR set to: 0
  4304                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  4305  001DFE  010F               	movlb	15	; () banked
  4306  001E00  8122               	bsf	34,0,b	;volatile
  4307  001E02                     l394:
  4308                           
  4309                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  4310  001E02  0100               	movlb	0	; () banked
  4311  001E04  A37B               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  4312  001E06  D002               	goto	l395
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  4316  001E08  010F               	movlb	15	; () banked
  4317  001E0A  8322               	bsf	34,1,b	;volatile
  4318  001E0C                     l395:
  4319                           
  4320                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  4321  001E0C  0100               	movlb	0	; () banked
  4322  001E0E  A57B               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  4323  001E10  D002               	goto	l396
  4324                           
  4325                           ; BSR set to: 0
  4326                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  4327  001E12  010F               	movlb	15	; () banked
  4328  001E14  8B22               	bsf	34,5,b	;volatile
  4329  001E16                     l396:
  4330                           
  4331                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  4332  001E16  0100               	movlb	0	; () banked
  4333  001E18  A77B               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  4334  001E1A  D002               	goto	l397
  4335                           
  4336                           ; BSR set to: 0
  4337                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  4338  001E1C  010F               	movlb	15	; () banked
  4339  001E1E  8D22               	bsf	34,6,b	;volatile
  4340  001E20                     l397:
  4341                           
  4342                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  4343  001E20  0100               	movlb	0	; () banked
  4344  001E22  A97B               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  4345  001E24  D002               	goto	l7562
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  4349  001E26  010F               	movlb	15	; () banked
  4350  001E28  8F22               	bsf	34,7,b	;volatile
  4351  001E2A                     l7562:
  4352                           
  4353                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  4354  001E2A  C079  F081         	movff	CANsendMessage@identifier,??_CANsendMessage
  4355  001E2E  C07A  F082         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  4356  001E32  C07B  F083         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  4357  001E36  C07C  F084         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  4358  001E3A  0E16               	movlw	22
  4359  001E3C  D006               	goto	u10110
  4360  001E3E                     u10115:
  4361  001E3E  0100               	movlb	0	; () banked
  4362  001E40  90D8               	bcf	status,0,c
  4363  001E42  3384               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  4364  001E44  3383               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  4365  001E46  3382               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  4366  001E48  3381               	rrcf	??_CANsendMessage& (0+255),f,b
  4367  001E4A                     u10110:
  4368  001E4A  2EE8               	decfsz	wreg,f,c
  4369  001E4C  D7F8               	goto	u10115
  4370  001E4E  C081  F085         	movff	??_CANsendMessage,CANsendMessage@tamp
  4371  001E52  C082  F086         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4372  001E56  C083  F087         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4373  001E5A  C084  F088         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  4377  001E5E  0100               	movlb	0	; () banked
  4378  001E60  5185               	movf	CANsendMessage@tamp& (0+255),w,b
  4379  001E62  0100               	movlb	0	; () banked
  4380  001E64  6F85               	movwf	CANsendMessage@tamp& (0+255),b
  4381  001E66  6B86               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4382  001E68  6B87               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4383  001E6A  6B88               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4384                           
  4385                           ; BSR set to: 0
  4386                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  4387  001E6C  C085  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  4388                           
  4389                           ;inc\CANlib.h: 483: }
  4390  001E70  D059               	goto	l7582
  4391  001E72                     l393:
  4392                           
  4393                           ; BSR set to: 0
  4394                           ;inc\CANlib.h: 485: else
  4395                           ;inc\CANlib.h: 487: {
  4396                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  4397  001E72  010F               	movlb	15	; () banked
  4398  001E74  9722               	bcf	34,3,b	;volatile
  4399                           
  4400                           ; BSR set to: 15
  4401                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  4402  001E76  C079  F081         	movff	CANsendMessage@identifier,??_CANsendMessage
  4403  001E7A  C07A  F082         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  4404  001E7E  C07B  F083         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  4405  001E82  C07C  F084         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  4406  001E86  0E04               	movlw	4
  4407  001E88  D006               	goto	u10120
  4408  001E8A                     u10125:
  4409  001E8A  0100               	movlb	0	; () banked
  4410  001E8C  90D8               	bcf	status,0,c
  4411  001E8E  3384               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  4412  001E90  3383               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  4413  001E92  3382               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  4414  001E94  3381               	rrcf	??_CANsendMessage& (0+255),f,b
  4415  001E96                     u10120:
  4416  001E96  2EE8               	decfsz	wreg,f,c
  4417  001E98  D7F8               	goto	u10125
  4418  001E9A  C081  F085         	movff	??_CANsendMessage,CANsendMessage@tamp
  4419  001E9E  C082  F086         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4420  001EA2  C083  F087         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4421  001EA6  C084  F088         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  4425  001EAA  0100               	movlb	0	; () banked
  4426  001EAC  5185               	movf	CANsendMessage@tamp& (0+255),w,b
  4427  001EAE  0100               	movlb	0	; () banked
  4428  001EB0  6F85               	movwf	CANsendMessage@tamp& (0+255),b
  4429  001EB2  6B86               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4430  001EB4  6B87               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4431  001EB6  6B88               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4432                           
  4433                           ; BSR set to: 0
  4434                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  4435  001EB8  C085  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  4436                           
  4437                           ; BSR set to: 0
  4438                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  4439  001EBC  0E07               	movlw	7
  4440  001EBE  0100               	movlb	0	; () banked
  4441  001EC0  1579               	andwf	CANsendMessage@identifier& (0+255),w,b
  4442  001EC2  0100               	movlb	0	; () banked
  4443  001EC4  6F85               	movwf	CANsendMessage@tamp& (0+255),b
  4444  001EC6  0E00               	movlw	0
  4445  001EC8  0100               	movlb	0	; () banked
  4446  001ECA  157A               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  4447  001ECC  0100               	movlb	0	; () banked
  4448  001ECE  6F86               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  4449  001ED0  0E00               	movlw	0
  4450  001ED2  0100               	movlb	0	; () banked
  4451  001ED4  157B               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  4452  001ED6  0100               	movlb	0	; () banked
  4453  001ED8  6F87               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  4454  001EDA  0E00               	movlw	0
  4455  001EDC  0100               	movlb	0	; () banked
  4456  001EDE  157C               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  4457  001EE0  0100               	movlb	0	; () banked
  4458  001EE2  6F88               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  4459                           
  4460                           ; BSR set to: 0
  4461                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  4462  001EE4  C085  F081         	movff	CANsendMessage@tamp,??_CANsendMessage
  4463  001EE8  C086  F082         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  4464  001EEC  C087  F083         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  4465  001EF0  C088  F084         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  4466  001EF4  0E05               	movlw	5
  4467  001EF6                     u10135:
  4468  001EF6  90D8               	bcf	status,0,c
  4469  001EF8  0100               	movlb	0	; () banked
  4470  001EFA  3781               	rlcf	??_CANsendMessage& (0+255),f,b
  4471  001EFC  3782               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  4472  001EFE  3783               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  4473  001F00  3784               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  4474  001F02  2EE8               	decfsz	wreg,f,c
  4475  001F04  D7F8               	goto	u10135
  4476  001F06  C081  F085         	movff	??_CANsendMessage,CANsendMessage@tamp
  4477  001F0A  C082  F086         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4478  001F0E  C083  F087         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4479  001F12  C084  F088         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4480                           
  4481                           ; BSR set to: 0
  4482                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  4483  001F16  010F               	movlb	15	; () banked
  4484  001F18  5122               	movf	34,w,b	;volatile
  4485  001F1A  0B1F               	andlw	31
  4486  001F1C  010F               	movlb	15	; () banked
  4487  001F1E  6F22               	movwf	34,b	;volatile
  4488                           
  4489                           ; BSR set to: 15
  4490                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  4491  001F20  C085  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  4492  001F24                     l7582:
  4493                           
  4494                           ;inc\CANlib.h: 498: }
  4495                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  4496  001F24  0100               	movlb	0	; () banked
  4497  001F26  A180               	btfss	CANsendMessage@flags& (0+255),0,b
  4498  001F28  D003               	goto	l400
  4499                           
  4500                           ; BSR set to: 0
  4501                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  4502  001F2A  010F               	movlb	15	; () banked
  4503  001F2C  8120               	bsf	32,0,b	;volatile
  4504  001F2E  D002               	goto	l401
  4505  001F30                     l400:
  4506                           
  4507                           ; BSR set to: 0
  4508                           ;inc\CANlib.h: 502: else
  4509                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  4510  001F30  010F               	movlb	15	; () banked
  4511  001F32  9120               	bcf	32,0,b	;volatile
  4512  001F34                     l401:
  4513                           
  4514                           ; BSR set to: 15
  4515                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  4516  001F34  0100               	movlb	0	; () banked
  4517  001F36  A380               	btfss	CANsendMessage@flags& (0+255),1,b
  4518  001F38  D003               	goto	l402
  4519                           
  4520                           ; BSR set to: 0
  4521                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  4522  001F3A  010F               	movlb	15	; () banked
  4523  001F3C  8320               	bsf	32,1,b	;volatile
  4524  001F3E  D002               	goto	l7588
  4525  001F40                     l402:
  4526                           
  4527                           ; BSR set to: 0
  4528                           ;inc\CANlib.h: 506: else
  4529                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  4530  001F40  010F               	movlb	15	; () banked
  4531  001F42  9320               	bcf	32,1,b	;volatile
  4532  001F44                     l7588:
  4533                           
  4534                           ; BSR set to: 15
  4535                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  4536  001F44  C07D  FFD9         	movff	CANsendMessage@data,fsr2l
  4537  001F48  C07E  FFDA         	movff	CANsendMessage@data+1,fsr2h
  4538  001F4C  50DF               	movf	indf2,w,c
  4539  001F4E  010F               	movlb	15	; () banked
  4540  001F50  6F26               	movwf	38,b	;volatile
  4541                           
  4542                           ; BSR set to: 15
  4543                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  4544  001F52  0100               	movlb	0	; () banked
  4545  001F54  EE20 F001          	lfsr	2,1
  4546  001F58  517D               	movf	CANsendMessage@data& (0+255),w,b
  4547  001F5A  26D9               	addwf	fsr2l,f,c
  4548  001F5C  517E               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4549  001F5E  22DA               	addwfc	fsr2h,f,c
  4550  001F60  50DF               	movf	indf2,w,c
  4551  001F62  010F               	movlb	15	; () banked
  4552  001F64  6F27               	movwf	39,b	;volatile
  4553                           
  4554                           ; BSR set to: 15
  4555                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  4556  001F66  0100               	movlb	0	; () banked
  4557  001F68  EE20 F002          	lfsr	2,2
  4558  001F6C  517D               	movf	CANsendMessage@data& (0+255),w,b
  4559  001F6E  26D9               	addwf	fsr2l,f,c
  4560  001F70  517E               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4561  001F72  22DA               	addwfc	fsr2h,f,c
  4562  001F74  50DF               	movf	indf2,w,c
  4563  001F76  010F               	movlb	15	; () banked
  4564  001F78  6F28               	movwf	40,b	;volatile
  4565                           
  4566                           ; BSR set to: 15
  4567                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  4568  001F7A  0100               	movlb	0	; () banked
  4569  001F7C  EE20 F003          	lfsr	2,3
  4570  001F80  517D               	movf	CANsendMessage@data& (0+255),w,b
  4571  001F82  26D9               	addwf	fsr2l,f,c
  4572  001F84  517E               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4573  001F86  22DA               	addwfc	fsr2h,f,c
  4574  001F88  50DF               	movf	indf2,w,c
  4575  001F8A  010F               	movlb	15	; () banked
  4576  001F8C  6F29               	movwf	41,b	;volatile
  4577                           
  4578                           ; BSR set to: 15
  4579                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  4580  001F8E  0100               	movlb	0	; () banked
  4581  001F90  EE20 F004          	lfsr	2,4
  4582  001F94  517D               	movf	CANsendMessage@data& (0+255),w,b
  4583  001F96  26D9               	addwf	fsr2l,f,c
  4584  001F98  517E               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4585  001F9A  22DA               	addwfc	fsr2h,f,c
  4586  001F9C  50DF               	movf	indf2,w,c
  4587  001F9E  010F               	movlb	15	; () banked
  4588  001FA0  6F2A               	movwf	42,b	;volatile
  4589                           
  4590                           ; BSR set to: 15
  4591                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  4592  001FA2  0100               	movlb	0	; () banked
  4593  001FA4  EE20 F005          	lfsr	2,5
  4594  001FA8  517D               	movf	CANsendMessage@data& (0+255),w,b
  4595  001FAA  26D9               	addwf	fsr2l,f,c
  4596  001FAC  517E               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4597  001FAE  22DA               	addwfc	fsr2h,f,c
  4598  001FB0  50DF               	movf	indf2,w,c
  4599  001FB2  010F               	movlb	15	; () banked
  4600  001FB4  6F2B               	movwf	43,b	;volatile
  4601                           
  4602                           ; BSR set to: 15
  4603                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  4604  001FB6  0100               	movlb	0	; () banked
  4605  001FB8  EE20 F006          	lfsr	2,6
  4606  001FBC  517D               	movf	CANsendMessage@data& (0+255),w,b
  4607  001FBE  26D9               	addwf	fsr2l,f,c
  4608  001FC0  517E               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4609  001FC2  22DA               	addwfc	fsr2h,f,c
  4610  001FC4  50DF               	movf	indf2,w,c
  4611  001FC6  010F               	movlb	15	; () banked
  4612  001FC8  6F2C               	movwf	44,b	;volatile
  4613                           
  4614                           ; BSR set to: 15
  4615                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  4616  001FCA  0100               	movlb	0	; () banked
  4617  001FCC  EE20 F007          	lfsr	2,7
  4618  001FD0  517D               	movf	CANsendMessage@data& (0+255),w,b
  4619  001FD2  26D9               	addwf	fsr2l,f,c
  4620  001FD4  517E               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4621  001FD6  22DA               	addwfc	fsr2h,f,c
  4622  001FD8  50DF               	movf	indf2,w,c
  4623  001FDA  010F               	movlb	15	; () banked
  4624  001FDC  6F2D               	movwf	45,b	;volatile
  4625                           
  4626                           ; BSR set to: 15
  4627                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  4628  001FDE  010F               	movlb	15	; () banked
  4629  001FE0  8720               	bsf	32,3,b	;volatile
  4630                           
  4631                           ; BSR set to: 15
  4632                           ;inc\CANlib.h: 520: return;
  4633  001FE2  0012               	return	
  4634  001FE4                     __end_of_CANsendMessage:
  4635                           	opt stack 0
  4636                           tblptru	equ	0xFF8
  4637                           tblptrh	equ	0xFF7
  4638                           tblptrl	equ	0xFF6
  4639                           tablat	equ	0xFF5
  4640                           postinc0	equ	0xFEE
  4641                           wreg	equ	0xFE8
  4642                           postdec1	equ	0xFE5
  4643                           fsr1l	equ	0xFE1
  4644                           indf2	equ	0xFDF
  4645                           postinc2	equ	0xFDE
  4646                           postdec2	equ	0xFDD
  4647                           fsr2h	equ	0xFDA
  4648                           fsr2l	equ	0xFD9
  4649                           status	equ	0xFD8
  4650                           
  4651 ;; *************** function _CANisTxReady *****************
  4652 ;; Defined at:
  4653 ;;		line 1154 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4654 ;; Parameters:    Size  Location     Type
  4655 ;;		None
  4656 ;; Auto vars:     Size  Location     Type
  4657 ;;		None
  4658 ;; Return value:  Size  Location     Type
  4659 ;;                  1    wreg      unsigned char 
  4660 ;; Registers used:
  4661 ;;		wreg, status,2
  4662 ;; Tracked objects:
  4663 ;;		On entry : 0/0
  4664 ;;		On exit  : 0/0
  4665 ;;		Unchanged: 0/0
  4666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4668 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4670 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4671 ;;Total ram usage:        1 bytes
  4672 ;; Hardware stack levels used:    1
  4673 ;; Hardware stack levels required when called:    5
  4674 ;; This function calls:
  4675 ;;		Nothing
  4676 ;; This function is called by:
  4677 ;;		_main
  4678 ;;		_park_search
  4679 ;;		_park_routine
  4680 ;;		_can_send
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           
  4684                           	psect	text6
  4685  0066BC                     __ptext6:
  4686                           	opt stack 0
  4687  0066BC                     _CANisTxReady:
  4688                           	opt stack 22
  4689                           
  4690                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  4691                           
  4692                           ; BSR set to: 15
  4693                           ;incstack = 0
  4694  0066BC  0E01               	movlw	1
  4695  0066BE  0100               	movlb	0	; () banked
  4696  0066C0  6F79               	movwf	_CANisTxReady$2796& (0+255),b
  4697                           
  4698                           ; BSR set to: 0
  4699  0066C2  010F               	movlb	15	; () banked
  4700  0066C4  A740               	btfss	64,3,b	;volatile
  4701  0066C6  D009               	goto	l554
  4702                           
  4703                           ; BSR set to: 15
  4704  0066C8  010F               	movlb	15	; () banked
  4705  0066CA  A730               	btfss	48,3,b	;volatile
  4706  0066CC  D006               	goto	l554
  4707                           
  4708                           ; BSR set to: 15
  4709  0066CE  010F               	movlb	15	; () banked
  4710  0066D0  A720               	btfss	32,3,b	;volatile
  4711  0066D2  D003               	goto	l554
  4712                           
  4713                           ; BSR set to: 15
  4714  0066D4  0E00               	movlw	0
  4715  0066D6  0100               	movlb	0	; () banked
  4716  0066D8  6F79               	movwf	_CANisTxReady$2796& (0+255),b
  4717  0066DA                     l554:
  4718  0066DA  0100               	movlb	0	; () banked
  4719  0066DC  5179               	movf	_CANisTxReady$2796& (0+255),w,b
  4720  0066DE  0012               	return	
  4721  0066E0                     __end_of_CANisTxReady:
  4722                           	opt stack 0
  4723                           tblptru	equ	0xFF8
  4724                           tblptrh	equ	0xFF7
  4725                           tblptrl	equ	0xFF6
  4726                           tablat	equ	0xFF5
  4727                           postinc0	equ	0xFEE
  4728                           wreg	equ	0xFE8
  4729                           postdec1	equ	0xFE5
  4730                           fsr1l	equ	0xFE1
  4731                           indf2	equ	0xFDF
  4732                           postinc2	equ	0xFDE
  4733                           postdec2	equ	0xFDD
  4734                           fsr2h	equ	0xFDA
  4735                           fsr2l	equ	0xFD9
  4736                           status	equ	0xFD8
  4737                           
  4738 ;; *************** function _abs *****************
  4739 ;; Defined at:
  4740 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\abs.c"
  4741 ;; Parameters:    Size  Location     Type
  4742 ;;  a               2   25[BANK0 ] int 
  4743 ;; Auto vars:     Size  Location     Type
  4744 ;;		None
  4745 ;; Return value:  Size  Location     Type
  4746 ;;                  2   25[BANK0 ] int 
  4747 ;; Registers used:
  4748 ;;		wreg, status,2, status,0
  4749 ;; Tracked objects:
  4750 ;;		On entry : 0/0
  4751 ;;		On exit  : 0/0
  4752 ;;		Unchanged: 0/0
  4753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4754 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4756 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4757 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4758 ;;Total ram usage:        4 bytes
  4759 ;; Hardware stack levels used:    1
  4760 ;; Hardware stack levels required when called:    5
  4761 ;; This function calls:
  4762 ;;		Nothing
  4763 ;; This function is called by:
  4764 ;;		_park_search
  4765 ;;		_parallelo
  4766 ;; This function uses a non-reentrant model
  4767 ;;
  4768                           
  4769                           	psect	text7
  4770  00663E                     __ptext7:
  4771                           	opt stack 0
  4772  00663E                     _abs:
  4773                           	opt stack 23
  4774                           
  4775                           ; BSR set to: 0
  4776                           ;incstack = 0
  4777  00663E  0100               	movlb	0	; () banked
  4778  006640  AF7A               	btfss	(abs@a+1)& (0+255),7,b
  4779  006642  D00E               	goto	l890
  4780                           
  4781                           ; BSR set to: 0
  4782  006644  C079  F07B         	movff	abs@a,??_abs
  4783  006648  C07A  F07C         	movff	abs@a+1,??_abs+1
  4784  00664C  0100               	movlb	0	; () banked
  4785  00664E  1F7B               	comf	??_abs& (0+255),f,b
  4786  006650  1F7C               	comf	(??_abs+1)& (0+255),f,b
  4787  006652  4B7B               	infsnz	??_abs& (0+255),f,b
  4788  006654  2B7C               	incf	(??_abs+1)& (0+255),f,b
  4789  006656  C07B  F079         	movff	??_abs,?_abs
  4790  00665A  C07C  F07A         	movff	??_abs+1,?_abs+1
  4791  00665E  0012               	return	
  4792  006660                     l890:
  4793                           
  4794                           ; BSR set to: 0
  4795  006660  C079  F079         	movff	abs@a,?_abs
  4796  006664  C07A  F07A         	movff	abs@a+1,?_abs+1
  4797                           
  4798                           ; BSR set to: 0
  4799  006668  0012               	return		;funcret
  4800  00666A                     __end_of_abs:
  4801                           	opt stack 0
  4802                           tblptru	equ	0xFF8
  4803                           tblptrh	equ	0xFF7
  4804                           tblptrl	equ	0xFF6
  4805                           tablat	equ	0xFF5
  4806                           postinc0	equ	0xFEE
  4807                           wreg	equ	0xFE8
  4808                           postdec1	equ	0xFE5
  4809                           fsr1l	equ	0xFE1
  4810                           indf2	equ	0xFDF
  4811                           postinc2	equ	0xFDE
  4812                           postdec2	equ	0xFDD
  4813                           fsr2h	equ	0xFDA
  4814                           fsr2l	equ	0xFD9
  4815                           status	equ	0xFD8
  4816                           
  4817 ;; *************** function _matematica *****************
  4818 ;; Defined at:
  4819 ;;		line 480 in file "parcheggio.c"
  4820 ;; Parameters:    Size  Location     Type
  4821 ;;		None
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;		None
  4824 ;; Return value:  Size  Location     Type
  4825 ;;                  1    wreg      void 
  4826 ;; Registers used:
  4827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4828 ;; Tracked objects:
  4829 ;;		On entry : 0/0
  4830 ;;		On exit  : 0/0
  4831 ;;		Unchanged: 0/0
  4832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4834 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0
  4835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4836 ;;      Totals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0
  4837 ;;Total ram usage:       28 bytes
  4838 ;; Hardware stack levels used:    1
  4839 ;; Hardware stack levels required when called:    9
  4840 ;; This function calls:
  4841 ;;		___fladd
  4842 ;;		___fldiv
  4843 ;;		___flmul
  4844 ;;		___flneg
  4845 ;;		_asin
  4846 ;;		_cos
  4847 ;; This function is called by:
  4848 ;;		_park_routine
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           
  4852                           	psect	text8
  4853  002674                     __ptext8:
  4854                           	opt stack 0
  4855  002674                     _matematica:
  4856                           	opt stack 20
  4857                           
  4858                           ;parcheggio.c: 481: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4859                           
  4860                           ; BSR set to: 0
  4861                           ;incstack = 0
  4862  002674  C144  F0AF         	movff	_bordo,___fladd@a	;volatile
  4863  002678  C145  F0B0         	movff	_bordo+1,___fladd@a+1	;volatile
  4864  00267C  C146  F0B1         	movff	_bordo+2,___fladd@a+2	;volatile
  4865  002680  C147  F0B2         	movff	_bordo+3,___fladd@a+3	;volatile
  4866  002684  0E00               	movlw	0
  4867  002686  0100               	movlb	0	; () banked
  4868  002688  6F7D               	movwf	___fldiv@a& (0+255),b
  4869  00268A  0E00               	movlw	0
  4870  00268C  6F7E               	movwf	(___fldiv@a+1)& (0+255),b
  4871  00268E  0E00               	movlw	0
  4872  002690  6F7F               	movwf	(___fldiv@a+2)& (0+255),b
  4873  002692  0E40               	movlw	64
  4874  002694  6F80               	movwf	(___fldiv@a+3)& (0+255),b
  4875  002696  C1F6  F079         	movff	_larghezza,___fldiv@b	;volatile
  4876  00269A  C1F7  F07A         	movff	_larghezza+1,___fldiv@b+1	;volatile
  4877  00269E  C1F8  F07B         	movff	_larghezza+2,___fldiv@b+2	;volatile
  4878  0026A2  C1F9  F07C         	movff	_larghezza+3,___fldiv@b+3	;volatile
  4879  0026A6  EC61  F021         	call	___fldiv	;wreg free
  4880  0026AA  C079  F0AB         	movff	?___fldiv,___fladd@b
  4881  0026AE  C07A  F0AC         	movff	?___fldiv+1,___fladd@b+1
  4882  0026B2  C07B  F0AD         	movff	?___fldiv+2,___fladd@b+2
  4883  0026B6  C07C  F0AE         	movff	?___fldiv+3,___fladd@b+3
  4884  0026BA  EC85  F018         	call	___fladd	;wreg free
  4885  0026BE  C0AB  F0BF         	movff	?___fladd,___flneg@f1
  4886  0026C2  C0AC  F0C0         	movff	?___fladd+1,___flneg@f1+1
  4887  0026C6  C0AD  F0C1         	movff	?___fladd+2,___flneg@f1+2
  4888  0026CA  C0AE  F0C2         	movff	?___fladd+3,___flneg@f1+3
  4889  0026CE  ECB5  F032         	call	___flneg	;wreg free
  4890  0026D2  C0BF  F1D6         	movff	?___flneg,_matematica$3692
  4891  0026D6  C0C0  F1D7         	movff	?___flneg+1,_matematica$3692+1
  4892  0026DA  C0C1  F1D8         	movff	?___flneg+2,_matematica$3692+2
  4893  0026DE  C0C2  F1D9         	movff	?___flneg+3,_matematica$3692+3
  4894                           
  4895                           ;parcheggio.c: 481: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4896  0026E2  C1D6  F0AF         	movff	_matematica$3692,___fladd@a
  4897  0026E6  C1D7  F0B0         	movff	_matematica$3692+1,___fladd@a+1
  4898  0026EA  C1D8  F0B1         	movff	_matematica$3692+2,___fladd@a+2
  4899  0026EE  C1D9  F0B2         	movff	_matematica$3692+3,___fladd@a+3
  4900  0026F2  0E00               	movlw	0
  4901  0026F4  0100               	movlb	0	; () banked
  4902  0026F6  6F96               	movwf	___flmul@a& (0+255),b
  4903  0026F8  0E00               	movlw	0
  4904  0026FA  6F97               	movwf	(___flmul@a+1)& (0+255),b
  4905  0026FC  0E00               	movlw	0
  4906  0026FE  6F98               	movwf	(___flmul@a+2)& (0+255),b
  4907  002700  0E40               	movlw	64
  4908  002702  6F99               	movwf	(___flmul@a+3)& (0+255),b
  4909  002704  C1FC  F092         	movff	_raggio,___flmul@b	;volatile
  4910  002708  C1FD  F093         	movff	_raggio+1,___flmul@b+1	;volatile
  4911  00270C  C1FE  F094         	movff	_raggio+2,___flmul@b+2	;volatile
  4912  002710  C1FF  F095         	movff	_raggio+3,___flmul@b+3	;volatile
  4913  002714  ECD9  F01A         	call	___flmul	;wreg free
  4914  002718  C092  F0AB         	movff	?___flmul,___fladd@b
  4915  00271C  C093  F0AC         	movff	?___flmul+1,___fladd@b+1
  4916  002720  C094  F0AD         	movff	?___flmul+2,___fladd@b+2
  4917  002724  C095  F0AE         	movff	?___flmul+3,___fladd@b+3
  4918  002728  EC85  F018         	call	___fladd	;wreg free
  4919  00272C  C0AB  F1DA         	movff	?___fladd,_matematica$3693
  4920  002730  C0AC  F1DB         	movff	?___fladd+1,_matematica$3693+1
  4921  002734  C0AD  F1DC         	movff	?___fladd+2,_matematica$3693+2
  4922  002738  C0AE  F1DD         	movff	?___fladd+3,_matematica$3693+3
  4923                           
  4924                           ;parcheggio.c: 481: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4925  00273C  0E00               	movlw	0
  4926  00273E  0100               	movlb	0	; () banked
  4927  002740  6F7D               	movwf	___fldiv@a& (0+255),b
  4928  002742  0E00               	movlw	0
  4929  002744  6F7E               	movwf	(___fldiv@a+1)& (0+255),b
  4930  002746  0E00               	movlw	0
  4931  002748  6F7F               	movwf	(___fldiv@a+2)& (0+255),b
  4932  00274A  0E40               	movlw	64
  4933  00274C  6F80               	movwf	(___fldiv@a+3)& (0+255),b
  4934  00274E  C1F6  F079         	movff	_larghezza,___fldiv@b	;volatile
  4935  002752  C1F7  F07A         	movff	_larghezza+1,___fldiv@b+1	;volatile
  4936  002756  C1F8  F07B         	movff	_larghezza+2,___fldiv@b+2	;volatile
  4937  00275A  C1F9  F07C         	movff	_larghezza+3,___fldiv@b+3	;volatile
  4938  00275E  EC61  F021         	call	___fldiv	;wreg free
  4939  002762  C079  F0BF         	movff	?___fldiv,___flneg@f1
  4940  002766  C07A  F0C0         	movff	?___fldiv+1,___flneg@f1+1
  4941  00276A  C07B  F0C1         	movff	?___fldiv+2,___flneg@f1+2
  4942  00276E  C07C  F0C2         	movff	?___fldiv+3,___flneg@f1+3
  4943  002772  ECB5  F032         	call	___flneg	;wreg free
  4944  002776  C0BF  F0AF         	movff	?___flneg,___fladd@a
  4945  00277A  C0C0  F0B0         	movff	?___flneg+1,___fladd@a+1
  4946  00277E  C0C1  F0B1         	movff	?___flneg+2,___fladd@a+2
  4947  002782  C0C2  F0B2         	movff	?___flneg+3,___fladd@a+3
  4948  002786  C1DA  F0AB         	movff	_matematica$3693,___fladd@b
  4949  00278A  C1DB  F0AC         	movff	_matematica$3693+1,___fladd@b+1
  4950  00278E  C1DC  F0AD         	movff	_matematica$3693+2,___fladd@b+2
  4951  002792  C1DD  F0AE         	movff	_matematica$3693+3,___fladd@b+3
  4952  002796  EC85  F018         	call	___fladd	;wreg free
  4953  00279A  C0AB  F1DE         	movff	?___fladd,_matematica$3694
  4954  00279E  C0AC  F1DF         	movff	?___fladd+1,_matematica$3694+1
  4955  0027A2  C0AD  F1E0         	movff	?___fladd+2,_matematica$3694+2
  4956  0027A6  C0AE  F1E1         	movff	?___fladd+3,_matematica$3694+3
  4957                           
  4958                           ;parcheggio.c: 481: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4959  0027AA  C1DE  F079         	movff	_matematica$3694,___fldiv@b
  4960  0027AE  C1DF  F07A         	movff	_matematica$3694+1,___fldiv@b+1
  4961  0027B2  C1E0  F07B         	movff	_matematica$3694+2,___fldiv@b+2
  4962  0027B6  C1E1  F07C         	movff	_matematica$3694+3,___fldiv@b+3
  4963  0027BA  0E00               	movlw	0
  4964  0027BC  0100               	movlb	0	; () banked
  4965  0027BE  6F96               	movwf	___flmul@a& (0+255),b
  4966  0027C0  0E00               	movlw	0
  4967  0027C2  6F97               	movwf	(___flmul@a+1)& (0+255),b
  4968  0027C4  0E00               	movlw	0
  4969  0027C6  6F98               	movwf	(___flmul@a+2)& (0+255),b
  4970  0027C8  0E40               	movlw	64
  4971  0027CA  6F99               	movwf	(___flmul@a+3)& (0+255),b
  4972  0027CC  C1FC  F092         	movff	_raggio,___flmul@b	;volatile
  4973  0027D0  C1FD  F093         	movff	_raggio+1,___flmul@b+1	;volatile
  4974  0027D4  C1FE  F094         	movff	_raggio+2,___flmul@b+2	;volatile
  4975  0027D8  C1FF  F095         	movff	_raggio+3,___flmul@b+3	;volatile
  4976  0027DC  ECD9  F01A         	call	___flmul	;wreg free
  4977  0027E0  C092  F07D         	movff	?___flmul,___fldiv@a
  4978  0027E4  C093  F07E         	movff	?___flmul+1,___fldiv@a+1
  4979  0027E8  C094  F07F         	movff	?___flmul+2,___fldiv@a+2
  4980  0027EC  C095  F080         	movff	?___flmul+3,___fldiv@a+3
  4981  0027F0  EC61  F021         	call	___fldiv	;wreg free
  4982  0027F4  C079  F1E2         	movff	?___fldiv,_matematica$3695
  4983  0027F8  C07A  F1E3         	movff	?___fldiv+1,_matematica$3695+1
  4984  0027FC  C07B  F1E4         	movff	?___fldiv+2,_matematica$3695+2
  4985  002800  C07C  F1E5         	movff	?___fldiv+3,_matematica$3695+3
  4986                           
  4987                           ;parcheggio.c: 481: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4988  002804  C1E2  F0E0         	movff	_matematica$3695,asin@x
  4989  002808  C1E3  F0E1         	movff	_matematica$3695+1,asin@x+1
  4990  00280C  C1E4  F0E2         	movff	_matematica$3695+2,asin@x+2
  4991  002810  C1E5  F0E3         	movff	_matematica$3695+3,asin@x+3
  4992  002814  EC9C  F026         	call	_asin	;wreg free
  4993  002818  C0E0  F13C         	movff	?_asin,_alfa	;volatile
  4994  00281C  C0E1  F13D         	movff	?_asin+1,_alfa+1	;volatile
  4995  002820  C0E2  F13E         	movff	?_asin+2,_alfa+2	;volatile
  4996  002824  C0E3  F13F         	movff	?_asin+3,_alfa+3	;volatile
  4997                           
  4998                           ;parcheggio.c: 482: alfa = alfa / 3.14159265358979323846 * 180;
  4999  002828  0EDB               	movlw	219
  5000  00282A  0100               	movlb	0	; () banked
  5001  00282C  6F7D               	movwf	___fldiv@a& (0+255),b
  5002  00282E  0E0F               	movlw	15
  5003  002830  6F7E               	movwf	(___fldiv@a+1)& (0+255),b
  5004  002832  0E49               	movlw	73
  5005  002834  6F7F               	movwf	(___fldiv@a+2)& (0+255),b
  5006  002836  0E40               	movlw	64
  5007  002838  6F80               	movwf	(___fldiv@a+3)& (0+255),b
  5008  00283A  C13C  F079         	movff	_alfa,___fldiv@b	;volatile
  5009  00283E  C13D  F07A         	movff	_alfa+1,___fldiv@b+1	;volatile
  5010  002842  C13E  F07B         	movff	_alfa+2,___fldiv@b+2	;volatile
  5011  002846  C13F  F07C         	movff	_alfa+3,___fldiv@b+3	;volatile
  5012  00284A  EC61  F021         	call	___fldiv	;wreg free
  5013  00284E  C079  F092         	movff	?___fldiv,___flmul@b
  5014  002852  C07A  F093         	movff	?___fldiv+1,___flmul@b+1
  5015  002856  C07B  F094         	movff	?___fldiv+2,___flmul@b+2
  5016  00285A  C07C  F095         	movff	?___fldiv+3,___flmul@b+3
  5017  00285E  0E00               	movlw	0
  5018  002860  0100               	movlb	0	; () banked
  5019  002862  6F96               	movwf	___flmul@a& (0+255),b
  5020  002864  0E00               	movlw	0
  5021  002866  6F97               	movwf	(___flmul@a+1)& (0+255),b
  5022  002868  0E34               	movlw	52
  5023  00286A  6F98               	movwf	(___flmul@a+2)& (0+255),b
  5024  00286C  0E43               	movlw	67
  5025  00286E  6F99               	movwf	(___flmul@a+3)& (0+255),b
  5026  002870  ECD9  F01A         	call	___flmul	;wreg free
  5027  002874  C092  F13C         	movff	?___flmul,_alfa	;volatile
  5028  002878  C093  F13D         	movff	?___flmul+1,_alfa+1	;volatile
  5029  00287C  C094  F13E         	movff	?___flmul+2,_alfa+2	;volatile
  5030  002880  C095  F13F         	movff	?___flmul+3,_alfa+3	;volatile
  5031                           
  5032                           ;parcheggio.c: 483: beta = 90 - alfa;
  5033  002884  C13C  F0BF         	movff	_alfa,___flneg@f1	;volatile
  5034  002888  C13D  F0C0         	movff	_alfa+1,___flneg@f1+1	;volatile
  5035  00288C  C13E  F0C1         	movff	_alfa+2,___flneg@f1+2	;volatile
  5036  002890  C13F  F0C2         	movff	_alfa+3,___flneg@f1+3	;volatile
  5037  002894  ECB5  F032         	call	___flneg	;wreg free
  5038  002898  C0BF  F0AB         	movff	?___flneg,___fladd@b
  5039  00289C  C0C0  F0AC         	movff	?___flneg+1,___fladd@b+1
  5040  0028A0  C0C1  F0AD         	movff	?___flneg+2,___fladd@b+2
  5041  0028A4  C0C2  F0AE         	movff	?___flneg+3,___fladd@b+3
  5042  0028A8  0E00               	movlw	0
  5043  0028AA  0100               	movlb	0	; () banked
  5044  0028AC  6FAF               	movwf	___fladd@a& (0+255),b
  5045  0028AE  0E00               	movlw	0
  5046  0028B0  6FB0               	movwf	(___fladd@a+1)& (0+255),b
  5047  0028B2  0EB4               	movlw	180
  5048  0028B4  6FB1               	movwf	(___fladd@a+2)& (0+255),b
  5049  0028B6  0E42               	movlw	66
  5050  0028B8  6FB2               	movwf	(___fladd@a+3)& (0+255),b
  5051  0028BA  EC85  F018         	call	___fladd	;wreg free
  5052  0028BE  C0AB  F140         	movff	?___fladd,_beta	;volatile
  5053  0028C2  C0AC  F141         	movff	?___fladd+1,_beta+1	;volatile
  5054  0028C6  C0AD  F142         	movff	?___fladd+2,_beta+2	;volatile
  5055  0028CA  C0AE  F143         	movff	?___fladd+3,_beta+3	;volatile
  5056                           
  5057                           ;parcheggio.c: 484: alfa = (alfa * 3.14159265358979323846) / 180;
  5058  0028CE  0EDB               	movlw	219
  5059  0028D0  0100               	movlb	0	; () banked
  5060  0028D2  6F96               	movwf	___flmul@a& (0+255),b
  5061  0028D4  0E0F               	movlw	15
  5062  0028D6  6F97               	movwf	(___flmul@a+1)& (0+255),b
  5063  0028D8  0E49               	movlw	73
  5064  0028DA  6F98               	movwf	(___flmul@a+2)& (0+255),b
  5065  0028DC  0E40               	movlw	64
  5066  0028DE  6F99               	movwf	(___flmul@a+3)& (0+255),b
  5067  0028E0  C13C  F092         	movff	_alfa,___flmul@b	;volatile
  5068  0028E4  C13D  F093         	movff	_alfa+1,___flmul@b+1	;volatile
  5069  0028E8  C13E  F094         	movff	_alfa+2,___flmul@b+2	;volatile
  5070  0028EC  C13F  F095         	movff	_alfa+3,___flmul@b+3	;volatile
  5071  0028F0  ECD9  F01A         	call	___flmul	;wreg free
  5072  0028F4  C092  F079         	movff	?___flmul,___fldiv@b
  5073  0028F8  C093  F07A         	movff	?___flmul+1,___fldiv@b+1
  5074  0028FC  C094  F07B         	movff	?___flmul+2,___fldiv@b+2
  5075  002900  C095  F07C         	movff	?___flmul+3,___fldiv@b+3
  5076  002904  0E00               	movlw	0
  5077  002906  0100               	movlb	0	; () banked
  5078  002908  6F7D               	movwf	___fldiv@a& (0+255),b
  5079  00290A  0E00               	movlw	0
  5080  00290C  6F7E               	movwf	(___fldiv@a+1)& (0+255),b
  5081  00290E  0E34               	movlw	52
  5082  002910  6F7F               	movwf	(___fldiv@a+2)& (0+255),b
  5083  002912  0E43               	movlw	67
  5084  002914  6F80               	movwf	(___fldiv@a+3)& (0+255),b
  5085  002916  EC61  F021         	call	___fldiv	;wreg free
  5086  00291A  C079  F13C         	movff	?___fldiv,_alfa	;volatile
  5087  00291E  C07A  F13D         	movff	?___fldiv+1,_alfa+1	;volatile
  5088  002922  C07B  F13E         	movff	?___fldiv+2,_alfa+2	;volatile
  5089  002926  C07C  F13F         	movff	?___fldiv+3,_alfa+3	;volatile
  5090                           
  5091                           ;parcheggio.c: 485: n = cos(alfa);
  5092  00292A  C13C  F1CE         	movff	_alfa,cos@f	;volatile
  5093  00292E  C13D  F1CF         	movff	_alfa+1,cos@f+1	;volatile
  5094  002932  C13E  F1D0         	movff	_alfa+2,cos@f+2	;volatile
  5095  002936  C13F  F1D1         	movff	_alfa+3,cos@f+3	;volatile
  5096  00293A  ECBF  F030         	call	_cos	;wreg free
  5097  00293E  C1CE  F148         	movff	?_cos,_n	;volatile
  5098  002942  C1CF  F149         	movff	?_cos+1,_n+1	;volatile
  5099  002946  C1D0  F14A         	movff	?_cos+2,_n+2	;volatile
  5100  00294A  C1D1  F14B         	movff	?_cos+3,_n+3	;volatile
  5101                           
  5102                           ;parcheggio.c: 486: n = 2 * raggio *n;
  5103  00294E  C148  F096         	movff	_n,___flmul@a	;volatile
  5104  002952  C149  F097         	movff	_n+1,___flmul@a+1	;volatile
  5105  002956  C14A  F098         	movff	_n+2,___flmul@a+2	;volatile
  5106  00295A  C14B  F099         	movff	_n+3,___flmul@a+3	;volatile
  5107  00295E  C1FC  F092         	movff	_raggio,___flmul@b	;volatile
  5108  002962  C1FD  F093         	movff	_raggio+1,___flmul@b+1	;volatile
  5109  002966  C1FE  F094         	movff	_raggio+2,___flmul@b+2	;volatile
  5110  00296A  C1FF  F095         	movff	_raggio+3,___flmul@b+3	;volatile
  5111  00296E  ECD9  F01A         	call	___flmul	;wreg free
  5112  002972  C092  F1EE         	movff	?___flmul,_matematica$3696
  5113  002976  C093  F1EF         	movff	?___flmul+1,_matematica$3696+1
  5114  00297A  C094  F1F0         	movff	?___flmul+2,_matematica$3696+2
  5115  00297E  C095  F1F1         	movff	?___flmul+3,_matematica$3696+3
  5116                           
  5117                           ;parcheggio.c: 486: n = 2 * raggio *n;
  5118  002982  C1EE  F092         	movff	_matematica$3696,___flmul@b
  5119  002986  C1EF  F093         	movff	_matematica$3696+1,___flmul@b+1
  5120  00298A  C1F0  F094         	movff	_matematica$3696+2,___flmul@b+2
  5121  00298E  C1F1  F095         	movff	_matematica$3696+3,___flmul@b+3
  5122  002992  0E00               	movlw	0
  5123  002994  0100               	movlb	0	; () banked
  5124  002996  6F96               	movwf	___flmul@a& (0+255),b
  5125  002998  0E00               	movlw	0
  5126  00299A  6F97               	movwf	(___flmul@a+1)& (0+255),b
  5127  00299C  0E00               	movlw	0
  5128  00299E  6F98               	movwf	(___flmul@a+2)& (0+255),b
  5129  0029A0  0E40               	movlw	64
  5130  0029A2  6F99               	movwf	(___flmul@a+3)& (0+255),b
  5131  0029A4  ECD9  F01A         	call	___flmul	;wreg free
  5132  0029A8  C092  F148         	movff	?___flmul,_n	;volatile
  5133  0029AC  C093  F149         	movff	?___flmul+1,_n+1	;volatile
  5134  0029B0  C094  F14A         	movff	?___flmul+2,_n+2	;volatile
  5135  0029B4  C095  F14B         	movff	?___flmul+3,_n+3	;volatile
  5136                           
  5137                           ;parcheggio.c: 487: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  5138  0029B8  C140  F096         	movff	_beta,___flmul@a	;volatile
  5139  0029BC  C141  F097         	movff	_beta+1,___flmul@a+1	;volatile
  5140  0029C0  C142  F098         	movff	_beta+2,___flmul@a+2	;volatile
  5141  0029C4  C143  F099         	movff	_beta+3,___flmul@a+3	;volatile
  5142  0029C8  C1FC  F092         	movff	_raggio,___flmul@b	;volatile
  5143  0029CC  C1FD  F093         	movff	_raggio+1,___flmul@b+1	;volatile
  5144  0029D0  C1FE  F094         	movff	_raggio+2,___flmul@b+2	;volatile
  5145  0029D4  C1FF  F095         	movff	_raggio+3,___flmul@b+3	;volatile
  5146  0029D8  ECD9  F01A         	call	___flmul	;wreg free
  5147  0029DC  C092  F1EE         	movff	?___flmul,_matematica$3696
  5148  0029E0  C093  F1EF         	movff	?___flmul+1,_matematica$3696+1
  5149  0029E4  C094  F1F0         	movff	?___flmul+2,_matematica$3696+2
  5150  0029E8  C095  F1F1         	movff	?___flmul+3,_matematica$3696+3
  5151                           
  5152                           ;parcheggio.c: 487: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  5153  0029EC  0EDB               	movlw	219
  5154  0029EE  0100               	movlb	0	; () banked
  5155  0029F0  6F96               	movwf	___flmul@a& (0+255),b
  5156  0029F2  0E0F               	movlw	15
  5157  0029F4  6F97               	movwf	(___flmul@a+1)& (0+255),b
  5158  0029F6  0EC9               	movlw	201
  5159  0029F8  6F98               	movwf	(___flmul@a+2)& (0+255),b
  5160  0029FA  0E40               	movlw	64
  5161  0029FC  6F99               	movwf	(___flmul@a+3)& (0+255),b
  5162  0029FE  C1EE  F092         	movff	_matematica$3696,___flmul@b
  5163  002A02  C1EF  F093         	movff	_matematica$3696+1,___flmul@b+1
  5164  002A06  C1F0  F094         	movff	_matematica$3696+2,___flmul@b+2
  5165  002A0A  C1F1  F095         	movff	_matematica$3696+3,___flmul@b+3
  5166  002A0E  ECD9  F01A         	call	___flmul	;wreg free
  5167  002A12  C092  F079         	movff	?___flmul,___fldiv@b
  5168  002A16  C093  F07A         	movff	?___flmul+1,___fldiv@b+1
  5169  002A1A  C094  F07B         	movff	?___flmul+2,___fldiv@b+2
  5170  002A1E  C095  F07C         	movff	?___flmul+3,___fldiv@b+3
  5171  002A22  0E00               	movlw	0
  5172  002A24  0100               	movlb	0	; () banked
  5173  002A26  6F7D               	movwf	___fldiv@a& (0+255),b
  5174  002A28  0E00               	movlw	0
  5175  002A2A  6F7E               	movwf	(___fldiv@a+1)& (0+255),b
  5176  002A2C  0EB4               	movlw	180
  5177  002A2E  6F7F               	movwf	(___fldiv@a+2)& (0+255),b
  5178  002A30  0E43               	movlw	67
  5179  002A32  6F80               	movwf	(___fldiv@a+3)& (0+255),b
  5180  002A34  EC61  F021         	call	___fldiv	;wreg free
  5181  002A38  C079  F150         	movff	?___fldiv,_prima_sterzata	;volatile
  5182  002A3C  C07A  F151         	movff	?___fldiv+1,_prima_sterzata+1	;volatile
  5183  002A40  C07B  F152         	movff	?___fldiv+2,_prima_sterzata+2	;volatile
  5184  002A44  C07C  F153         	movff	?___fldiv+3,_prima_sterzata+3	;volatile
  5185                           
  5186                           ;parcheggio.c: 488: K_var = raggio + (2 * larghezza / 3);
  5187  002A48  0E00               	movlw	0
  5188  002A4A  0100               	movlb	0	; () banked
  5189  002A4C  6F7D               	movwf	___fldiv@a& (0+255),b
  5190  002A4E  0E00               	movlw	0
  5191  002A50  6F7E               	movwf	(___fldiv@a+1)& (0+255),b
  5192  002A52  0E40               	movlw	64
  5193  002A54  6F7F               	movwf	(___fldiv@a+2)& (0+255),b
  5194  002A56  0E40               	movlw	64
  5195  002A58  6F80               	movwf	(___fldiv@a+3)& (0+255),b
  5196  002A5A  0E00               	movlw	0
  5197  002A5C  0100               	movlb	0	; () banked
  5198  002A5E  6F96               	movwf	___flmul@a& (0+255),b
  5199  002A60  0E00               	movlw	0
  5200  002A62  6F97               	movwf	(___flmul@a+1)& (0+255),b
  5201  002A64  0E00               	movlw	0
  5202  002A66  6F98               	movwf	(___flmul@a+2)& (0+255),b
  5203  002A68  0E40               	movlw	64
  5204  002A6A  6F99               	movwf	(___flmul@a+3)& (0+255),b
  5205  002A6C  C1F6  F092         	movff	_larghezza,___flmul@b	;volatile
  5206  002A70  C1F7  F093         	movff	_larghezza+1,___flmul@b+1	;volatile
  5207  002A74  C1F8  F094         	movff	_larghezza+2,___flmul@b+2	;volatile
  5208  002A78  C1F9  F095         	movff	_larghezza+3,___flmul@b+3	;volatile
  5209  002A7C  ECD9  F01A         	call	___flmul	;wreg free
  5210  002A80  C092  F079         	movff	?___flmul,___fldiv@b
  5211  002A84  C093  F07A         	movff	?___flmul+1,___fldiv@b+1
  5212  002A88  C094  F07B         	movff	?___flmul+2,___fldiv@b+2
  5213  002A8C  C095  F07C         	movff	?___flmul+3,___fldiv@b+3
  5214  002A90  EC61  F021         	call	___fldiv	;wreg free
  5215  002A94  C079  F0AB         	movff	?___fldiv,___fladd@b
  5216  002A98  C07A  F0AC         	movff	?___fldiv+1,___fladd@b+1
  5217  002A9C  C07B  F0AD         	movff	?___fldiv+2,___fladd@b+2
  5218  002AA0  C07C  F0AE         	movff	?___fldiv+3,___fladd@b+3
  5219  002AA4  C1FC  F0AF         	movff	_raggio,___fladd@a	;volatile
  5220  002AA8  C1FD  F0B0         	movff	_raggio+1,___fladd@a+1	;volatile
  5221  002AAC  C1FE  F0B1         	movff	_raggio+2,___fladd@a+2	;volatile
  5222  002AB0  C1FF  F0B2         	movff	_raggio+3,___fladd@a+3	;volatile
  5223  002AB4  EC85  F018         	call	___fladd	;wreg free
  5224  002AB8  C0AB  F134         	movff	?___fladd,_K_var	;volatile
  5225  002ABC  C0AC  F135         	movff	?___fladd+1,_K_var+1	;volatile
  5226  002AC0  C0AD  F136         	movff	?___fladd+2,_K_var+2	;volatile
  5227  002AC4  C0AE  F137         	movff	?___fladd+3,_K_var+3	;volatile
  5228                           
  5229                           ;parcheggio.c: 489: J_var = raggio - (2 * larghezza / 3);
  5230  002AC8  0E00               	movlw	0
  5231  002ACA  0100               	movlb	0	; () banked
  5232  002ACC  6F7D               	movwf	___fldiv@a& (0+255),b
  5233  002ACE  0E00               	movlw	0
  5234  002AD0  6F7E               	movwf	(___fldiv@a+1)& (0+255),b
  5235  002AD2  0E40               	movlw	64
  5236  002AD4  6F7F               	movwf	(___fldiv@a+2)& (0+255),b
  5237  002AD6  0E40               	movlw	64
  5238  002AD8  6F80               	movwf	(___fldiv@a+3)& (0+255),b
  5239  002ADA  0E00               	movlw	0
  5240  002ADC  0100               	movlb	0	; () banked
  5241  002ADE  6F96               	movwf	___flmul@a& (0+255),b
  5242  002AE0  0E00               	movlw	0
  5243  002AE2  6F97               	movwf	(___flmul@a+1)& (0+255),b
  5244  002AE4  0E00               	movlw	0
  5245  002AE6  6F98               	movwf	(___flmul@a+2)& (0+255),b
  5246  002AE8  0E40               	movlw	64
  5247  002AEA  6F99               	movwf	(___flmul@a+3)& (0+255),b
  5248  002AEC  C1F6  F092         	movff	_larghezza,___flmul@b	;volatile
  5249  002AF0  C1F7  F093         	movff	_larghezza+1,___flmul@b+1	;volatile
  5250  002AF4  C1F8  F094         	movff	_larghezza+2,___flmul@b+2	;volatile
  5251  002AF8  C1F9  F095         	movff	_larghezza+3,___flmul@b+3	;volatile
  5252  002AFC  ECD9  F01A         	call	___flmul	;wreg free
  5253  002B00  C092  F079         	movff	?___flmul,___fldiv@b
  5254  002B04  C093  F07A         	movff	?___flmul+1,___fldiv@b+1
  5255  002B08  C094  F07B         	movff	?___flmul+2,___fldiv@b+2
  5256  002B0C  C095  F07C         	movff	?___flmul+3,___fldiv@b+3
  5257  002B10  EC61  F021         	call	___fldiv	;wreg free
  5258  002B14  C079  F0BF         	movff	?___fldiv,___flneg@f1
  5259  002B18  C07A  F0C0         	movff	?___fldiv+1,___flneg@f1+1
  5260  002B1C  C07B  F0C1         	movff	?___fldiv+2,___flneg@f1+2
  5261  002B20  C07C  F0C2         	movff	?___fldiv+3,___flneg@f1+3
  5262  002B24  ECB5  F032         	call	___flneg	;wreg free
  5263  002B28  C0BF  F0AB         	movff	?___flneg,___fladd@b
  5264  002B2C  C0C0  F0AC         	movff	?___flneg+1,___fladd@b+1
  5265  002B30  C0C1  F0AD         	movff	?___flneg+2,___fladd@b+2
  5266  002B34  C0C2  F0AE         	movff	?___flneg+3,___fladd@b+3
  5267  002B38  C1FC  F0AF         	movff	_raggio,___fladd@a	;volatile
  5268  002B3C  C1FD  F0B0         	movff	_raggio+1,___fladd@a+1	;volatile
  5269  002B40  C1FE  F0B1         	movff	_raggio+2,___fladd@a+2	;volatile
  5270  002B44  C1FF  F0B2         	movff	_raggio+3,___fladd@a+3	;volatile
  5271  002B48  EC85  F018         	call	___fladd	;wreg free
  5272  002B4C  C0AB  F130         	movff	?___fladd,_J_var	;volatile
  5273  002B50  C0AC  F131         	movff	?___fladd+1,_J_var+1	;volatile
  5274  002B54  C0AD  F132         	movff	?___fladd+2,_J_var+2	;volatile
  5275  002B58  C0AE  F133         	movff	?___fladd+3,_J_var+3	;volatile
  5276                           
  5277                           ;parcheggio.c: 490: Pmin = K_var * cos(asin((J_var / K_var)));
  5278  002B5C  C134  F07D         	movff	_K_var,___fldiv@a	;volatile
  5279  002B60  C135  F07E         	movff	_K_var+1,___fldiv@a+1	;volatile
  5280  002B64  C136  F07F         	movff	_K_var+2,___fldiv@a+2	;volatile
  5281  002B68  C137  F080         	movff	_K_var+3,___fldiv@a+3	;volatile
  5282  002B6C  C130  F079         	movff	_J_var,___fldiv@b	;volatile
  5283  002B70  C131  F07A         	movff	_J_var+1,___fldiv@b+1	;volatile
  5284  002B74  C132  F07B         	movff	_J_var+2,___fldiv@b+2	;volatile
  5285  002B78  C133  F07C         	movff	_J_var+3,___fldiv@b+3	;volatile
  5286  002B7C  EC61  F021         	call	___fldiv	;wreg free
  5287  002B80  C079  F1E6         	movff	?___fldiv,_matematica$3697
  5288  002B84  C07A  F1E7         	movff	?___fldiv+1,_matematica$3697+1
  5289  002B88  C07B  F1E8         	movff	?___fldiv+2,_matematica$3697+2
  5290  002B8C  C07C  F1E9         	movff	?___fldiv+3,_matematica$3697+3
  5291                           
  5292                           ;parcheggio.c: 490: Pmin = K_var * cos(asin((J_var / K_var)));
  5293  002B90  C1E6  F0E0         	movff	_matematica$3697,asin@x
  5294  002B94  C1E7  F0E1         	movff	_matematica$3697+1,asin@x+1
  5295  002B98  C1E8  F0E2         	movff	_matematica$3697+2,asin@x+2
  5296  002B9C  C1E9  F0E3         	movff	_matematica$3697+3,asin@x+3
  5297  002BA0  EC9C  F026         	call	_asin	;wreg free
  5298  002BA4  C0E0  F1CE         	movff	?_asin,cos@f
  5299  002BA8  C0E1  F1CF         	movff	?_asin+1,cos@f+1
  5300  002BAC  C0E2  F1D0         	movff	?_asin+2,cos@f+2
  5301  002BB0  C0E3  F1D1         	movff	?_asin+3,cos@f+3
  5302  002BB4  ECBF  F030         	call	_cos	;wreg free
  5303  002BB8  C1CE  F1EA         	movff	?_cos,_matematica$3698
  5304  002BBC  C1CF  F1EB         	movff	?_cos+1,_matematica$3698+1
  5305  002BC0  C1D0  F1EC         	movff	?_cos+2,_matematica$3698+2
  5306  002BC4  C1D1  F1ED         	movff	?_cos+3,_matematica$3698+3
  5307                           
  5308                           ;parcheggio.c: 490: Pmin = K_var * cos(asin((J_var / K_var)));
  5309  002BC8  C1EA  F092         	movff	_matematica$3698,___flmul@b
  5310  002BCC  C1EB  F093         	movff	_matematica$3698+1,___flmul@b+1
  5311  002BD0  C1EC  F094         	movff	_matematica$3698+2,___flmul@b+2
  5312  002BD4  C1ED  F095         	movff	_matematica$3698+3,___flmul@b+3
  5313  002BD8  C134  F096         	movff	_K_var,___flmul@a	;volatile
  5314  002BDC  C135  F097         	movff	_K_var+1,___flmul@a+1	;volatile
  5315  002BE0  C136  F098         	movff	_K_var+2,___flmul@a+2	;volatile
  5316  002BE4  C137  F099         	movff	_K_var+3,___flmul@a+3	;volatile
  5317  002BE8  ECD9  F01A         	call	___flmul	;wreg free
  5318  002BEC  C092  F138         	movff	?___flmul,_Pmin	;volatile
  5319  002BF0  C093  F139         	movff	?___flmul+1,_Pmin+1	;volatile
  5320  002BF4  C094  F13A         	movff	?___flmul+2,_Pmin+2	;volatile
  5321  002BF8  C095  F13B         	movff	?___flmul+3,_Pmin+3	;volatile
  5322  002BFC  0012               	return		;funcret
  5323  002BFE                     __end_of_matematica:
  5324                           	opt stack 0
  5325                           tblptru	equ	0xFF8
  5326                           tblptrh	equ	0xFF7
  5327                           tblptrl	equ	0xFF6
  5328                           tablat	equ	0xFF5
  5329                           postinc0	equ	0xFEE
  5330                           wreg	equ	0xFE8
  5331                           postdec1	equ	0xFE5
  5332                           fsr1l	equ	0xFE1
  5333                           indf2	equ	0xFDF
  5334                           postinc2	equ	0xFDE
  5335                           postdec2	equ	0xFDD
  5336                           fsr2h	equ	0xFDA
  5337                           fsr2l	equ	0xFD9
  5338                           status	equ	0xFD8
  5339                           
  5340 ;; *************** function _cos *****************
  5341 ;; Defined at:
  5342 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\cos.c"
  5343 ;; Parameters:    Size  Location     Type
  5344 ;;  f               4   37[BANK1 ] void 
  5345 ;; Auto vars:     Size  Location     Type
  5346 ;;		None
  5347 ;; Return value:  Size  Location     Type
  5348 ;;                  4   37[BANK1 ] void 
  5349 ;; Registers used:
  5350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5351 ;; Tracked objects:
  5352 ;;		On entry : 0/0
  5353 ;;		On exit  : 0/0
  5354 ;;		Unchanged: 0/0
  5355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5356 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5357 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5359 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5360 ;;Total ram usage:        8 bytes
  5361 ;; Hardware stack levels used:    1
  5362 ;; Hardware stack levels required when called:    8
  5363 ;; This function calls:
  5364 ;;		___fladd
  5365 ;;		___flge
  5366 ;;		_sin
  5367 ;; This function is called by:
  5368 ;;		_matematica
  5369 ;; This function uses a non-reentrant model
  5370 ;;
  5371                           
  5372                           	psect	text9
  5373  00617E                     __ptext9:
  5374                           	opt stack 0
  5375  00617E                     _cos:
  5376                           	opt stack 20
  5377                           
  5378                           ;incstack = 0
  5379  00617E  0EDB               	movlw	219
  5380  006180  0100               	movlb	0	; () banked
  5381  006182  6FC7               	movwf	___flge@ff1& (0+255),b
  5382  006184  0E0F               	movlw	15
  5383  006186  6FC8               	movwf	(___flge@ff1+1)& (0+255),b
  5384  006188  0E49               	movlw	73
  5385  00618A  6FC9               	movwf	(___flge@ff1+2)& (0+255),b
  5386  00618C  0E40               	movlw	64
  5387  00618E  6FCA               	movwf	(___flge@ff1+3)& (0+255),b
  5388  006190  C1CE  F0CB         	movff	cos@f,___flge@ff2
  5389  006194  C1CF  F0CC         	movff	cos@f+1,___flge@ff2+1
  5390  006198  C1D0  F0CD         	movff	cos@f+2,___flge@ff2+2
  5391  00619C  C1D1  F0CE         	movff	cos@f+3,___flge@ff2+3
  5392  0061A0  EC3D  F02D         	call	___flge	;wreg free
  5393  0061A4  0100               	movlb	0	; () banked
  5394  0061A6  B0D8               	btfsc	status,0,c
  5395  0061A8  D02E               	goto	l7876
  5396                           
  5397                           ; BSR set to: 0
  5398  0061AA  C1CE  F0AB         	movff	cos@f,___fladd@b
  5399  0061AE  C1CF  F0AC         	movff	cos@f+1,___fladd@b+1
  5400  0061B2  C1D0  F0AD         	movff	cos@f+2,___fladd@b+2
  5401  0061B6  C1D1  F0AE         	movff	cos@f+3,___fladd@b+3
  5402  0061BA  0EE4               	movlw	228
  5403  0061BC  0100               	movlb	0	; () banked
  5404  0061BE  6FAF               	movwf	___fladd@a& (0+255),b
  5405  0061C0  0ECB               	movlw	203
  5406  0061C2  6FB0               	movwf	(___fladd@a+1)& (0+255),b
  5407  0061C4  0E96               	movlw	150
  5408  0061C6  6FB1               	movwf	(___fladd@a+2)& (0+255),b
  5409  0061C8  0EC0               	movlw	192
  5410  0061CA  6FB2               	movwf	(___fladd@a+3)& (0+255),b
  5411  0061CC  EC85  F018         	call	___fladd	;wreg free
  5412  0061D0  C0AB  F1D2         	movff	?___fladd,_cos$3702
  5413  0061D4  C0AC  F1D3         	movff	?___fladd+1,_cos$3702+1
  5414  0061D8  C0AD  F1D4         	movff	?___fladd+2,_cos$3702+2
  5415  0061DC  C0AE  F1D5         	movff	?___fladd+3,_cos$3702+3
  5416  0061E0  C1D2  F1B1         	movff	_cos$3702,sin@f
  5417  0061E4  C1D3  F1B2         	movff	_cos$3702+1,sin@f+1
  5418  0061E8  C1D4  F1B3         	movff	_cos$3702+2,sin@f+2
  5419  0061EC  C1D5  F1B4         	movff	_cos$3702+3,sin@f+3
  5420  0061F0  EC10  F025         	call	_sin	;wreg free
  5421  0061F4  C1B1  F1CE         	movff	?_sin,?_cos
  5422  0061F8  C1B2  F1CF         	movff	?_sin+1,?_cos+1
  5423  0061FC  C1B3  F1D0         	movff	?_sin+2,?_cos+2
  5424  006200  C1B4  F1D1         	movff	?_sin+3,?_cos+3
  5425  006204  0012               	return	
  5426  006206                     l7876:
  5427  006206  C1CE  F0AB         	movff	cos@f,___fladd@b
  5428  00620A  C1CF  F0AC         	movff	cos@f+1,___fladd@b+1
  5429  00620E  C1D0  F0AD         	movff	cos@f+2,___fladd@b+2
  5430  006212  C1D1  F0AE         	movff	cos@f+3,___fladd@b+3
  5431  006216  0EDB               	movlw	219
  5432  006218  0100               	movlb	0	; () banked
  5433  00621A  6FAF               	movwf	___fladd@a& (0+255),b
  5434  00621C  0E0F               	movlw	15
  5435  00621E  6FB0               	movwf	(___fladd@a+1)& (0+255),b
  5436  006220  0EC9               	movlw	201
  5437  006222  6FB1               	movwf	(___fladd@a+2)& (0+255),b
  5438  006224  0E3F               	movlw	63
  5439  006226  6FB2               	movwf	(___fladd@a+3)& (0+255),b
  5440  006228  EC85  F018         	call	___fladd	;wreg free
  5441  00622C  C0AB  F1D2         	movff	?___fladd,_cos$3702
  5442  006230  C0AC  F1D3         	movff	?___fladd+1,_cos$3702+1
  5443  006234  C0AD  F1D4         	movff	?___fladd+2,_cos$3702+2
  5444  006238  C0AE  F1D5         	movff	?___fladd+3,_cos$3702+3
  5445  00623C  C1D2  F1B1         	movff	_cos$3702,sin@f
  5446  006240  C1D3  F1B2         	movff	_cos$3702+1,sin@f+1
  5447  006244  C1D4  F1B3         	movff	_cos$3702+2,sin@f+2
  5448  006248  C1D5  F1B4         	movff	_cos$3702+3,sin@f+3
  5449  00624C  EC10  F025         	call	_sin	;wreg free
  5450  006250  C1B1  F1CE         	movff	?_sin,?_cos
  5451  006254  C1B2  F1CF         	movff	?_sin+1,?_cos+1
  5452  006258  C1B3  F1D0         	movff	?_sin+2,?_cos+2
  5453  00625C  C1B4  F1D1         	movff	?_sin+3,?_cos+3
  5454  006260  0012               	return	
  5455  006262                     __end_of_cos:
  5456                           	opt stack 0
  5457                           tblptru	equ	0xFF8
  5458                           tblptrh	equ	0xFF7
  5459                           tblptrl	equ	0xFF6
  5460                           tablat	equ	0xFF5
  5461                           postinc0	equ	0xFEE
  5462                           wreg	equ	0xFE8
  5463                           postdec1	equ	0xFE5
  5464                           fsr1l	equ	0xFE1
  5465                           indf2	equ	0xFDF
  5466                           postinc2	equ	0xFDE
  5467                           postdec2	equ	0xFDD
  5468                           fsr2h	equ	0xFDA
  5469                           fsr2l	equ	0xFD9
  5470                           status	equ	0xFD8
  5471                           
  5472 ;; *************** function _sin *****************
  5473 ;; Defined at:
  5474 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sin.c"
  5475 ;; Parameters:    Size  Location     Type
  5476 ;;  f               4    8[BANK1 ] void 
  5477 ;; Auto vars:     Size  Location     Type
  5478 ;;  x2              4   20[BANK1 ] void 
  5479 ;;  y               4   12[BANK1 ] void 
  5480 ;;  sgn             1   24[BANK1 ] unsigned char 
  5481 ;; Return value:  Size  Location     Type
  5482 ;;                  4    8[BANK1 ] unsigned char 
  5483 ;; Registers used:
  5484 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5485 ;; Tracked objects:
  5486 ;;		On entry : 0/0
  5487 ;;		On exit  : 0/0
  5488 ;;		Unchanged: 0/0
  5489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5490 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5491 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  5492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5493 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  5494 ;;Total ram usage:       17 bytes
  5495 ;; Hardware stack levels used:    1
  5496 ;; Hardware stack levels required when called:    7
  5497 ;; This function calls:
  5498 ;;		___fladd
  5499 ;;		___fldiv
  5500 ;;		___flge
  5501 ;;		___flmul
  5502 ;;		___flneg
  5503 ;;		___flsub
  5504 ;;		_eval_poly
  5505 ;;		_floor
  5506 ;; This function is called by:
  5507 ;;		_cos
  5508 ;; This function uses a non-reentrant model
  5509 ;;
  5510                           
  5511                           	psect	text10
  5512  004A20                     __ptext10:
  5513                           	opt stack 0
  5514  004A20                     _sin:
  5515                           	opt stack 20
  5516                           
  5517                           ;incstack = 0
  5518  004A20  0E00               	movlw	0
  5519  004A22  0101               	movlb	1	; () banked
  5520  004A24  6FC1               	movwf	sin@sgn& (0+255),b
  5521                           
  5522                           ; BSR set to: 1
  5523  004A26  0101               	movlb	1	; () banked
  5524  004A28  AFB4               	btfss	(sin@f+3)& (0+255),7,b
  5525  004A2A  D015               	goto	l7762
  5526                           
  5527                           ; BSR set to: 1
  5528  004A2C  C1B1  F0BF         	movff	sin@f,___flneg@f1
  5529  004A30  C1B2  F0C0         	movff	sin@f+1,___flneg@f1+1
  5530  004A34  C1B3  F0C1         	movff	sin@f+2,___flneg@f1+2
  5531  004A38  C1B4  F0C2         	movff	sin@f+3,___flneg@f1+3
  5532  004A3C  ECB5  F032         	call	___flneg	;wreg free
  5533  004A40  C0BF  F1B1         	movff	?___flneg,sin@f
  5534  004A44  C0C0  F1B2         	movff	?___flneg+1,sin@f+1
  5535  004A48  C0C1  F1B3         	movff	?___flneg+2,sin@f+2
  5536  004A4C  C0C2  F1B4         	movff	?___flneg+3,sin@f+3
  5537  004A50  0E01               	movlw	1
  5538  004A52  0101               	movlb	1	; () banked
  5539  004A54  6FC1               	movwf	sin@sgn& (0+255),b
  5540  004A56                     l7762:
  5541                           
  5542                           ; BSR set to: 1
  5543  004A56  C1B1  F092         	movff	sin@f,___flmul@b
  5544  004A5A  C1B2  F093         	movff	sin@f+1,___flmul@b+1
  5545  004A5E  C1B3  F094         	movff	sin@f+2,___flmul@b+2
  5546  004A62  C1B4  F095         	movff	sin@f+3,___flmul@b+3
  5547  004A66  0E83               	movlw	131
  5548  004A68  0100               	movlb	0	; () banked
  5549  004A6A  6F96               	movwf	___flmul@a& (0+255),b
  5550  004A6C  0EF9               	movlw	249
  5551  004A6E  6F97               	movwf	(___flmul@a+1)& (0+255),b
  5552  004A70  0E22               	movlw	34
  5553  004A72  6F98               	movwf	(___flmul@a+2)& (0+255),b
  5554  004A74  0E3E               	movlw	62
  5555  004A76  6F99               	movwf	(___flmul@a+3)& (0+255),b
  5556  004A78  ECD9  F01A         	call	___flmul	;wreg free
  5557  004A7C  C092  F1B1         	movff	?___flmul,sin@f
  5558  004A80  C093  F1B2         	movff	?___flmul+1,sin@f+1
  5559  004A84  C094  F1B3         	movff	?___flmul+2,sin@f+2
  5560  004A88  C095  F1B4         	movff	?___flmul+3,sin@f+3
  5561  004A8C  C1B1  F1A9         	movff	sin@f,___flsub@b
  5562  004A90  C1B2  F1AA         	movff	sin@f+1,___flsub@b+1
  5563  004A94  C1B3  F1AB         	movff	sin@f+2,___flsub@b+2
  5564  004A98  C1B4  F1AC         	movff	sin@f+3,___flsub@b+3
  5565  004A9C  C1B1  F0DB         	movff	sin@f,floor@x
  5566  004AA0  C1B2  F0DC         	movff	sin@f+1,floor@x+1
  5567  004AA4  C1B3  F0DD         	movff	sin@f+2,floor@x+2
  5568  004AA8  C1B4  F0DE         	movff	sin@f+3,floor@x+3
  5569  004AAC  EC99  F02E         	call	_floor	;wreg free
  5570  004AB0  C0DB  F1AD         	movff	?_floor,___flsub@a
  5571  004AB4  C0DC  F1AE         	movff	?_floor+1,___flsub@a+1
  5572  004AB8  C0DD  F1AF         	movff	?_floor+2,___flsub@a+2
  5573  004ABC  C0DE  F1B0         	movff	?_floor+3,___flsub@a+3
  5574  004AC0  EC72  F032         	call	___flsub	;wreg free
  5575  004AC4  C1A9  F1B1         	movff	?___flsub,sin@f
  5576  004AC8  C1AA  F1B2         	movff	?___flsub+1,sin@f+1
  5577  004ACC  C1AB  F1B3         	movff	?___flsub+2,sin@f+2
  5578  004AD0  C1AC  F1B4         	movff	?___flsub+3,sin@f+3
  5579  004AD4  C1B1  F092         	movff	sin@f,___flmul@b
  5580  004AD8  C1B2  F093         	movff	sin@f+1,___flmul@b+1
  5581  004ADC  C1B3  F094         	movff	sin@f+2,___flmul@b+2
  5582  004AE0  C1B4  F095         	movff	sin@f+3,___flmul@b+3
  5583  004AE4  0E00               	movlw	0
  5584  004AE6  0100               	movlb	0	; () banked
  5585  004AE8  6F96               	movwf	___flmul@a& (0+255),b
  5586  004AEA  0E00               	movlw	0
  5587  004AEC  6F97               	movwf	(___flmul@a+1)& (0+255),b
  5588  004AEE  0E80               	movlw	128
  5589  004AF0  6F98               	movwf	(___flmul@a+2)& (0+255),b
  5590  004AF2  0E40               	movlw	64
  5591  004AF4  6F99               	movwf	(___flmul@a+3)& (0+255),b
  5592  004AF6  ECD9  F01A         	call	___flmul	;wreg free
  5593  004AFA  C092  F1B1         	movff	?___flmul,sin@f
  5594  004AFE  C093  F1B2         	movff	?___flmul+1,sin@f+1
  5595  004B02  C094  F1B3         	movff	?___flmul+2,sin@f+2
  5596  004B06  C095  F1B4         	movff	?___flmul+3,sin@f+3
  5597  004B0A  0E00               	movlw	0
  5598  004B0C  0100               	movlb	0	; () banked
  5599  004B0E  6FC7               	movwf	___flge@ff1& (0+255),b
  5600  004B10  0E00               	movlw	0
  5601  004B12  6FC8               	movwf	(___flge@ff1+1)& (0+255),b
  5602  004B14  0E00               	movlw	0
  5603  004B16  6FC9               	movwf	(___flge@ff1+2)& (0+255),b
  5604  004B18  0E40               	movlw	64
  5605  004B1A  6FCA               	movwf	(___flge@ff1+3)& (0+255),b
  5606  004B1C  C1B1  F0CB         	movff	sin@f,___flge@ff2
  5607  004B20  C1B2  F0CC         	movff	sin@f+1,___flge@ff2+1
  5608  004B24  C1B3  F0CD         	movff	sin@f+2,___flge@ff2+2
  5609  004B28  C1B4  F0CE         	movff	sin@f+3,___flge@ff2+3
  5610  004B2C  EC3D  F02D         	call	___flge	;wreg free
  5611  004B30  0100               	movlb	0	; () banked
  5612  004B32  B0D8               	btfsc	status,0,c
  5613  004B34  D025               	goto	l7774
  5614                           
  5615                           ; BSR set to: 0
  5616  004B36  C1B1  F1A9         	movff	sin@f,___flsub@b
  5617  004B3A  C1B2  F1AA         	movff	sin@f+1,___flsub@b+1
  5618  004B3E  C1B3  F1AB         	movff	sin@f+2,___flsub@b+2
  5619  004B42  C1B4  F1AC         	movff	sin@f+3,___flsub@b+3
  5620  004B46  0E00               	movlw	0
  5621  004B48  0101               	movlb	1	; () banked
  5622  004B4A  6FAD               	movwf	___flsub@a& (0+255),b
  5623  004B4C  0E00               	movlw	0
  5624  004B4E  6FAE               	movwf	(___flsub@a+1)& (0+255),b
  5625  004B50  0E00               	movlw	0
  5626  004B52  6FAF               	movwf	(___flsub@a+2)& (0+255),b
  5627  004B54  0E40               	movlw	64
  5628  004B56  6FB0               	movwf	(___flsub@a+3)& (0+255),b
  5629  004B58  EC72  F032         	call	___flsub	;wreg free
  5630  004B5C  C1A9  F1B1         	movff	?___flsub,sin@f
  5631  004B60  C1AA  F1B2         	movff	?___flsub+1,sin@f+1
  5632  004B64  C1AB  F1B3         	movff	?___flsub+2,sin@f+2
  5633  004B68  C1AC  F1B4         	movff	?___flsub+3,sin@f+3
  5634  004B6C  0101               	movlb	1	; () banked
  5635  004B6E  51C1               	movf	sin@sgn& (0+255),w,b
  5636  004B70  0101               	movlb	1	; () banked
  5637  004B72  A4D8               	btfss	status,2,c
  5638  004B74  D002               	goto	u10380
  5639  004B76  0E01               	movlw	1
  5640  004B78  D001               	goto	u10390
  5641  004B7A                     u10380:
  5642  004B7A  0E00               	movlw	0
  5643  004B7C                     u10390:
  5644  004B7C  0101               	movlb	1	; () banked
  5645  004B7E  6FC1               	movwf	sin@sgn& (0+255),b
  5646  004B80                     l7774:
  5647  004B80  0E00               	movlw	0
  5648  004B82  0100               	movlb	0	; () banked
  5649  004B84  6FC7               	movwf	___flge@ff1& (0+255),b
  5650  004B86  0E00               	movlw	0
  5651  004B88  6FC8               	movwf	(___flge@ff1+1)& (0+255),b
  5652  004B8A  0E80               	movlw	128
  5653  004B8C  6FC9               	movwf	(___flge@ff1+2)& (0+255),b
  5654  004B8E  0E3F               	movlw	63
  5655  004B90  6FCA               	movwf	(___flge@ff1+3)& (0+255),b
  5656  004B92  C1B1  F0CB         	movff	sin@f,___flge@ff2
  5657  004B96  C1B2  F0CC         	movff	sin@f+1,___flge@ff2+1
  5658  004B9A  C1B3  F0CD         	movff	sin@f+2,___flge@ff2+2
  5659  004B9E  C1B4  F0CE         	movff	sin@f+3,___flge@ff2+3
  5660  004BA2  EC3D  F02D         	call	___flge	;wreg free
  5661  004BA6  0100               	movlb	0	; () banked
  5662  004BA8  B0D8               	btfsc	status,0,c
  5663  004BAA  D025               	goto	l7778
  5664                           
  5665                           ; BSR set to: 0
  5666  004BAC  C1B1  F0BF         	movff	sin@f,___flneg@f1
  5667  004BB0  C1B2  F0C0         	movff	sin@f+1,___flneg@f1+1
  5668  004BB4  C1B3  F0C1         	movff	sin@f+2,___flneg@f1+2
  5669  004BB8  C1B4  F0C2         	movff	sin@f+3,___flneg@f1+3
  5670  004BBC  ECB5  F032         	call	___flneg	;wreg free
  5671  004BC0  C0BF  F0AB         	movff	?___flneg,___fladd@b
  5672  004BC4  C0C0  F0AC         	movff	?___flneg+1,___fladd@b+1
  5673  004BC8  C0C1  F0AD         	movff	?___flneg+2,___fladd@b+2
  5674  004BCC  C0C2  F0AE         	movff	?___flneg+3,___fladd@b+3
  5675  004BD0  0E00               	movlw	0
  5676  004BD2  0100               	movlb	0	; () banked
  5677  004BD4  6FAF               	movwf	___fladd@a& (0+255),b
  5678  004BD6  0E00               	movlw	0
  5679  004BD8  6FB0               	movwf	(___fladd@a+1)& (0+255),b
  5680  004BDA  0E00               	movlw	0
  5681  004BDC  6FB1               	movwf	(___fladd@a+2)& (0+255),b
  5682  004BDE  0E40               	movlw	64
  5683  004BE0  6FB2               	movwf	(___fladd@a+3)& (0+255),b
  5684  004BE2  EC85  F018         	call	___fladd	;wreg free
  5685  004BE6  C0AB  F1B1         	movff	?___fladd,sin@f
  5686  004BEA  C0AC  F1B2         	movff	?___fladd+1,sin@f+1
  5687  004BEE  C0AD  F1B3         	movff	?___fladd+2,sin@f+2
  5688  004BF2  C0AE  F1B4         	movff	?___fladd+3,sin@f+3
  5689  004BF6                     l7778:
  5690  004BF6  C1B1  F092         	movff	sin@f,___flmul@b
  5691  004BFA  C1B2  F093         	movff	sin@f+1,___flmul@b+1
  5692  004BFE  C1B3  F094         	movff	sin@f+2,___flmul@b+2
  5693  004C02  C1B4  F095         	movff	sin@f+3,___flmul@b+3
  5694  004C06  C1B1  F096         	movff	sin@f,___flmul@a
  5695  004C0A  C1B2  F097         	movff	sin@f+1,___flmul@a+1
  5696  004C0E  C1B3  F098         	movff	sin@f+2,___flmul@a+2
  5697  004C12  C1B4  F099         	movff	sin@f+3,___flmul@a+3
  5698  004C16  ECD9  F01A         	call	___flmul	;wreg free
  5699  004C1A  C092  F1BD         	movff	?___flmul,sin@x2
  5700  004C1E  C093  F1BE         	movff	?___flmul+1,sin@x2+1
  5701  004C22  C094  F1BF         	movff	?___flmul+2,sin@x2+2
  5702  004C26  C095  F1C0         	movff	?___flmul+3,sin@x2+3
  5703  004C2A  C1BD  F0BF         	movff	sin@x2,eval_poly@x
  5704  004C2E  C1BE  F0C0         	movff	sin@x2+1,eval_poly@x+1
  5705  004C32  C1BF  F0C1         	movff	sin@x2+2,eval_poly@x+2
  5706  004C36  C1C0  F0C2         	movff	sin@x2+3,eval_poly@x+3
  5707  004C3A  0E41               	movlw	low sin@coeff_b
  5708  004C3C  0100               	movlb	0	; () banked
  5709  004C3E  6FC3               	movwf	eval_poly@d& (0+255),b
  5710  004C40  0E0D               	movlw	high sin@coeff_b
  5711  004C42  0100               	movlb	0	; () banked
  5712  004C44  6FC4               	movwf	(eval_poly@d+1)& (0+255),b
  5713  004C46  0E00               	movlw	0
  5714  004C48  0100               	movlb	0	; () banked
  5715  004C4A  6FC6               	movwf	(eval_poly@n+1)& (0+255),b
  5716  004C4C  0E03               	movlw	3
  5717  004C4E  6FC5               	movwf	eval_poly@n& (0+255),b
  5718  004C50  EC2B  F02F         	call	_eval_poly	;wreg free
  5719  004C54  C0BF  F1B5         	movff	?_eval_poly,sin@y
  5720  004C58  C0C0  F1B6         	movff	?_eval_poly+1,sin@y+1
  5721  004C5C  C0C1  F1B7         	movff	?_eval_poly+2,sin@y+2
  5722  004C60  C0C2  F1B8         	movff	?_eval_poly+3,sin@y+3
  5723  004C64  C1B5  F07D         	movff	sin@y,___fldiv@a
  5724  004C68  C1B6  F07E         	movff	sin@y+1,___fldiv@a+1
  5725  004C6C  C1B7  F07F         	movff	sin@y+2,___fldiv@a+2
  5726  004C70  C1B8  F080         	movff	sin@y+3,___fldiv@a+3
  5727  004C74  0E00               	movlw	0
  5728  004C76  0100               	movlb	0	; () banked
  5729  004C78  6FC6               	movwf	(eval_poly@n+1)& (0+255),b
  5730  004C7A  0E04               	movlw	4
  5731  004C7C  6FC5               	movwf	eval_poly@n& (0+255),b
  5732  004C7E  0E2D               	movlw	low sin@coeff_a
  5733  004C80  0100               	movlb	0	; () banked
  5734  004C82  6FC3               	movwf	eval_poly@d& (0+255),b
  5735  004C84  0E0D               	movlw	high sin@coeff_a
  5736  004C86  0100               	movlb	0	; () banked
  5737  004C88  6FC4               	movwf	(eval_poly@d+1)& (0+255),b
  5738  004C8A  C1BD  F0BF         	movff	sin@x2,eval_poly@x
  5739  004C8E  C1BE  F0C0         	movff	sin@x2+1,eval_poly@x+1
  5740  004C92  C1BF  F0C1         	movff	sin@x2+2,eval_poly@x+2
  5741  004C96  C1C0  F0C2         	movff	sin@x2+3,eval_poly@x+3
  5742  004C9A  EC2B  F02F         	call	_eval_poly	;wreg free
  5743  004C9E  C0BF  F079         	movff	?_eval_poly,___fldiv@b
  5744  004CA2  C0C0  F07A         	movff	?_eval_poly+1,___fldiv@b+1
  5745  004CA6  C0C1  F07B         	movff	?_eval_poly+2,___fldiv@b+2
  5746  004CAA  C0C2  F07C         	movff	?_eval_poly+3,___fldiv@b+3
  5747  004CAE  EC61  F021         	call	___fldiv	;wreg free
  5748  004CB2  C079  F1B9         	movff	?___fldiv,_sin$3703
  5749  004CB6  C07A  F1BA         	movff	?___fldiv+1,_sin$3703+1
  5750  004CBA  C07B  F1BB         	movff	?___fldiv+2,_sin$3703+2
  5751  004CBE  C07C  F1BC         	movff	?___fldiv+3,_sin$3703+3
  5752  004CC2  C1B1  F092         	movff	sin@f,___flmul@b
  5753  004CC6  C1B2  F093         	movff	sin@f+1,___flmul@b+1
  5754  004CCA  C1B3  F094         	movff	sin@f+2,___flmul@b+2
  5755  004CCE  C1B4  F095         	movff	sin@f+3,___flmul@b+3
  5756  004CD2  C1B9  F096         	movff	_sin$3703,___flmul@a
  5757  004CD6  C1BA  F097         	movff	_sin$3703+1,___flmul@a+1
  5758  004CDA  C1BB  F098         	movff	_sin$3703+2,___flmul@a+2
  5759  004CDE  C1BC  F099         	movff	_sin$3703+3,___flmul@a+3
  5760  004CE2  ECD9  F01A         	call	___flmul	;wreg free
  5761  004CE6  C092  F1B1         	movff	?___flmul,sin@f
  5762  004CEA  C093  F1B2         	movff	?___flmul+1,sin@f+1
  5763  004CEE  C094  F1B3         	movff	?___flmul+2,sin@f+2
  5764  004CF2  C095  F1B4         	movff	?___flmul+3,sin@f+3
  5765  004CF6  0101               	movlb	1	; () banked
  5766  004CF8  51C1               	movf	sin@sgn& (0+255),w,b
  5767  004CFA  0101               	movlb	1	; () banked
  5768  004CFC  B4D8               	btfsc	status,2,c
  5769  004CFE  D013               	goto	l1333
  5770                           
  5771                           ; BSR set to: 1
  5772  004D00  C1B1  F0BF         	movff	sin@f,___flneg@f1
  5773  004D04  C1B2  F0C0         	movff	sin@f+1,___flneg@f1+1
  5774  004D08  C1B3  F0C1         	movff	sin@f+2,___flneg@f1+2
  5775  004D0C  C1B4  F0C2         	movff	sin@f+3,___flneg@f1+3
  5776  004D10  ECB5  F032         	call	___flneg	;wreg free
  5777  004D14  C0BF  F1B1         	movff	?___flneg,?_sin
  5778  004D18  C0C0  F1B2         	movff	?___flneg+1,?_sin+1
  5779  004D1C  C0C1  F1B3         	movff	?___flneg+2,?_sin+2
  5780  004D20  C0C2  F1B4         	movff	?___flneg+3,?_sin+3
  5781  004D24  0012               	return	
  5782  004D26                     l1333:
  5783                           
  5784                           ; BSR set to: 1
  5785  004D26  C1B1  F1B1         	movff	sin@f,?_sin
  5786  004D2A  C1B2  F1B2         	movff	sin@f+1,?_sin+1
  5787  004D2E  C1B3  F1B3         	movff	sin@f+2,?_sin+2
  5788  004D32  C1B4  F1B4         	movff	sin@f+3,?_sin+3
  5789  004D36  0012               	return		;funcret
  5790  004D38                     __end_of_sin:
  5791                           	opt stack 0
  5792                           tblptru	equ	0xFF8
  5793                           tblptrh	equ	0xFF7
  5794                           tblptrl	equ	0xFF6
  5795                           tablat	equ	0xFF5
  5796                           postinc0	equ	0xFEE
  5797                           wreg	equ	0xFE8
  5798                           postdec1	equ	0xFE5
  5799                           fsr1l	equ	0xFE1
  5800                           indf2	equ	0xFDF
  5801                           postinc2	equ	0xFDE
  5802                           postdec2	equ	0xFDD
  5803                           fsr2h	equ	0xFDA
  5804                           fsr2l	equ	0xFD9
  5805                           status	equ	0xFD8
  5806                           
  5807 ;; *************** function _floor *****************
  5808 ;; Defined at:
  5809 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\floor.c"
  5810 ;; Parameters:    Size  Location     Type
  5811 ;;  x               4  123[BANK0 ] unsigned char 
  5812 ;; Auto vars:     Size  Location     Type
  5813 ;;  i               4  127[BANK0 ] unsigned char 
  5814 ;;  expon           2  131[BANK0 ] int 
  5815 ;; Return value:  Size  Location     Type
  5816 ;;                  4  123[BANK0 ] int 
  5817 ;; Registers used:
  5818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5819 ;; Tracked objects:
  5820 ;;		On entry : 0/0
  5821 ;;		On exit  : 0/0
  5822 ;;		Unchanged: 0/0
  5823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5824 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5825 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5827 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5828 ;;Total ram usage:       10 bytes
  5829 ;; Hardware stack levels used:    1
  5830 ;; Hardware stack levels required when called:    6
  5831 ;; This function calls:
  5832 ;;		___fladd
  5833 ;;		___flge
  5834 ;;		___fltol
  5835 ;;		___xxtofl
  5836 ;;		_frexp
  5837 ;; This function is called by:
  5838 ;;		_sin
  5839 ;; This function uses a non-reentrant model
  5840 ;;
  5841                           
  5842                           	psect	text11
  5843  005D32                     __ptext11:
  5844                           	opt stack 0
  5845  005D32                     _floor:
  5846                           	opt stack 20
  5847                           
  5848                           ;incstack = 0
  5849  005D32  C0DB  F079         	movff	floor@x,frexp@value
  5850  005D36  C0DC  F07A         	movff	floor@x+1,frexp@value+1
  5851  005D3A  C0DD  F07B         	movff	floor@x+2,frexp@value+2
  5852  005D3E  C0DE  F07C         	movff	floor@x+3,frexp@value+3
  5853  005D42  0EE3               	movlw	low floor@expon
  5854  005D44  0100               	movlb	0	; () banked
  5855  005D46  6F7D               	movwf	frexp@eptr& (0+255),b
  5856  005D48  0E00               	movlw	high floor@expon
  5857  005D4A  0100               	movlb	0	; () banked
  5858  005D4C  6F7E               	movwf	(frexp@eptr+1)& (0+255),b
  5859  005D4E  EC9D  F031         	call	_frexp	;wreg free
  5860  005D52  0100               	movlb	0	; () banked
  5861  005D54  AFE4               	btfss	(floor@expon+1)& (0+255),7,b
  5862  005D56  D017               	goto	l7368
  5863                           
  5864                           ; BSR set to: 0
  5865  005D58  0100               	movlb	0	; () banked
  5866  005D5A  AFDE               	btfss	(floor@x+3)& (0+255),7,b
  5867  005D5C  D00A               	goto	l7364
  5868                           
  5869                           ; BSR set to: 0
  5870  005D5E  0E00               	movlw	0
  5871  005D60  0100               	movlb	0	; () banked
  5872  005D62  6FDB               	movwf	?_floor& (0+255),b
  5873  005D64  0E00               	movlw	0
  5874  005D66  6FDC               	movwf	(?_floor+1)& (0+255),b
  5875  005D68  0E80               	movlw	128
  5876  005D6A  6FDD               	movwf	(?_floor+2)& (0+255),b
  5877  005D6C  0EBF               	movlw	191
  5878  005D6E  6FDE               	movwf	(?_floor+3)& (0+255),b
  5879                           
  5880                           ; BSR set to: 0
  5881  005D70  0012               	return	
  5882  005D72                     l7364:
  5883                           
  5884                           ; BSR set to: 0
  5885  005D72  0E00               	movlw	0
  5886  005D74  0100               	movlb	0	; () banked
  5887  005D76  6FDB               	movwf	?_floor& (0+255),b
  5888  005D78  0E00               	movlw	0
  5889  005D7A  6FDC               	movwf	(?_floor+1)& (0+255),b
  5890  005D7C  0E00               	movlw	0
  5891  005D7E  6FDD               	movwf	(?_floor+2)& (0+255),b
  5892  005D80  0E00               	movlw	0
  5893  005D82  6FDE               	movwf	(?_floor+3)& (0+255),b
  5894                           
  5895                           ; BSR set to: 0
  5896  005D84  0012               	return	
  5897  005D86                     l7368:
  5898                           
  5899                           ; BSR set to: 0
  5900  005D86  0100               	movlb	0	; () banked
  5901  005D88  51E4               	movf	(floor@expon+1)& (0+255),w,b
  5902  005D8A  E105               	bnz	u9750
  5903  005D8C  0E1D               	movlw	29
  5904  005D8E  0100               	movlb	0	; () banked
  5905  005D90  5DE3               	subwf	floor@expon& (0+255),w,b
  5906  005D92  A0D8               	btfss	status,0,c
  5907  005D94  D009               	goto	l7372
  5908  005D96                     u9750:
  5909                           
  5910                           ; BSR set to: 0
  5911  005D96  C0DB  F0DB         	movff	floor@x,?_floor
  5912  005D9A  C0DC  F0DC         	movff	floor@x+1,?_floor+1
  5913  005D9E  C0DD  F0DD         	movff	floor@x+2,?_floor+2
  5914  005DA2  C0DE  F0DE         	movff	floor@x+3,?_floor+3
  5915  005DA6  0012               	return	
  5916  005DA8                     l7372:
  5917                           
  5918                           ; BSR set to: 0
  5919  005DA8  C0DB  F0C3         	movff	floor@x,___fltol@f1
  5920  005DAC  C0DC  F0C4         	movff	floor@x+1,___fltol@f1+1
  5921  005DB0  C0DD  F0C5         	movff	floor@x+2,___fltol@f1+2
  5922  005DB4  C0DE  F0C6         	movff	floor@x+3,___fltol@f1+3
  5923  005DB8  ECB7  F02F         	call	___fltol	;wreg free
  5924  005DBC  C0C3  F0CD         	movff	?___fltol,___xxtofl@val
  5925  005DC0  C0C4  F0CE         	movff	?___fltol+1,___xxtofl@val+1
  5926  005DC4  C0C5  F0CF         	movff	?___fltol+2,___xxtofl@val+2
  5927  005DC8  C0C6  F0D0         	movff	?___fltol+3,___xxtofl@val+3
  5928  005DCC  0E01               	movlw	1
  5929  005DCE  EC73  F02B         	call	___xxtofl
  5930  005DD2  C0CD  F0DF         	movff	?___xxtofl,floor@i
  5931  005DD6  C0CE  F0E0         	movff	?___xxtofl+1,floor@i+1
  5932  005DDA  C0CF  F0E1         	movff	?___xxtofl+2,floor@i+2
  5933  005DDE  C0D0  F0E2         	movff	?___xxtofl+3,floor@i+3
  5934  005DE2  C0DB  F0C7         	movff	floor@x,___flge@ff1
  5935  005DE6  C0DC  F0C8         	movff	floor@x+1,___flge@ff1+1
  5936  005DEA  C0DD  F0C9         	movff	floor@x+2,___flge@ff1+2
  5937  005DEE  C0DE  F0CA         	movff	floor@x+3,___flge@ff1+3
  5938  005DF2  C0DF  F0CB         	movff	floor@i,___flge@ff2
  5939  005DF6  C0E0  F0CC         	movff	floor@i+1,___flge@ff2+1
  5940  005DFA  C0E1  F0CD         	movff	floor@i+2,___flge@ff2+2
  5941  005DFE  C0E2  F0CE         	movff	floor@i+3,___flge@ff2+3
  5942  005E02  EC3D  F02D         	call	___flge	;wreg free
  5943  005E06  0100               	movlb	0	; () banked
  5944  005E08  B0D8               	btfsc	status,0,c
  5945  005E0A  D01C               	goto	l1502
  5946                           
  5947                           ; BSR set to: 0
  5948  005E0C  C0DF  F0AB         	movff	floor@i,___fladd@b
  5949  005E10  C0E0  F0AC         	movff	floor@i+1,___fladd@b+1
  5950  005E14  C0E1  F0AD         	movff	floor@i+2,___fladd@b+2
  5951  005E18  C0E2  F0AE         	movff	floor@i+3,___fladd@b+3
  5952  005E1C  0E00               	movlw	0
  5953  005E1E  0100               	movlb	0	; () banked
  5954  005E20  6FAF               	movwf	___fladd@a& (0+255),b
  5955  005E22  0E00               	movlw	0
  5956  005E24  6FB0               	movwf	(___fladd@a+1)& (0+255),b
  5957  005E26  0E80               	movlw	128
  5958  005E28  6FB1               	movwf	(___fladd@a+2)& (0+255),b
  5959  005E2A  0EBF               	movlw	191
  5960  005E2C  6FB2               	movwf	(___fladd@a+3)& (0+255),b
  5961  005E2E  EC85  F018         	call	___fladd	;wreg free
  5962  005E32  C0AB  F0DB         	movff	?___fladd,?_floor
  5963  005E36  C0AC  F0DC         	movff	?___fladd+1,?_floor+1
  5964  005E3A  C0AD  F0DD         	movff	?___fladd+2,?_floor+2
  5965  005E3E  C0AE  F0DE         	movff	?___fladd+3,?_floor+3
  5966  005E42  0012               	return	
  5967  005E44                     l1502:
  5968                           
  5969                           ; BSR set to: 0
  5970  005E44  C0DF  F0DB         	movff	floor@i,?_floor
  5971  005E48  C0E0  F0DC         	movff	floor@i+1,?_floor+1
  5972  005E4C  C0E1  F0DD         	movff	floor@i+2,?_floor+2
  5973  005E50  C0E2  F0DE         	movff	floor@i+3,?_floor+3
  5974  005E54  0012               	return		;funcret
  5975  005E56                     __end_of_floor:
  5976                           	opt stack 0
  5977                           tblptru	equ	0xFF8
  5978                           tblptrh	equ	0xFF7
  5979                           tblptrl	equ	0xFF6
  5980                           tablat	equ	0xFF5
  5981                           postinc0	equ	0xFEE
  5982                           wreg	equ	0xFE8
  5983                           postdec1	equ	0xFE5
  5984                           fsr1l	equ	0xFE1
  5985                           indf2	equ	0xFDF
  5986                           postinc2	equ	0xFDE
  5987                           postdec2	equ	0xFDD
  5988                           fsr2h	equ	0xFDA
  5989                           fsr2l	equ	0xFD9
  5990                           status	equ	0xFD8
  5991                           
  5992 ;; *************** function _frexp *****************
  5993 ;; Defined at:
  5994 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\frexp.c"
  5995 ;; Parameters:    Size  Location     Type
  5996 ;;  value           4   25[BANK0 ] int 
  5997 ;;  eptr            2   29[BANK0 ] PTR int 
  5998 ;;		 -> floor@expon(2), 
  5999 ;; Auto vars:     Size  Location     Type
  6000 ;;		None
  6001 ;; Return value:  Size  Location     Type
  6002 ;;                  4   25[BANK0 ] PTR int 
  6003 ;; Registers used:
  6004 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6005 ;; Tracked objects:
  6006 ;;		On entry : 0/0
  6007 ;;		On exit  : 0/0
  6008 ;;		Unchanged: 0/0
  6009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6010 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6012 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6013 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6014 ;;Total ram usage:        8 bytes
  6015 ;; Hardware stack levels used:    1
  6016 ;; Hardware stack levels required when called:    5
  6017 ;; This function calls:
  6018 ;;		Nothing
  6019 ;; This function is called by:
  6020 ;;		_floor
  6021 ;; This function uses a non-reentrant model
  6022 ;;
  6023                           
  6024                           	psect	text12
  6025  00633A                     __ptext12:
  6026                           	opt stack 0
  6027  00633A                     _frexp:
  6028                           	opt stack 20
  6029                           
  6030                           ;incstack = 0
  6031  00633A  0100               	movlb	0	; () banked
  6032  00633C  5179               	movf	frexp@value& (0+255),w,b
  6033  00633E  0100               	movlb	0	; () banked
  6034  006340  117A               	iorwf	(frexp@value+1)& (0+255),w,b
  6035  006342  0100               	movlb	0	; () banked
  6036  006344  117B               	iorwf	(frexp@value+2)& (0+255),w,b
  6037  006346  0100               	movlb	0	; () banked
  6038  006348  117C               	iorwf	(frexp@value+3)& (0+255),w,b
  6039  00634A  A4D8               	btfss	status,2,c
  6040  00634C  D009               	goto	l7190
  6041                           
  6042                           ; BSR set to: 0
  6043  00634E  C07D  FFD9         	movff	frexp@eptr,fsr2l
  6044  006352  C07E  FFDA         	movff	frexp@eptr+1,fsr2h
  6045  006356  0E00               	movlw	0
  6046  006358  6EDE               	movwf	postinc2,c
  6047  00635A  0E00               	movlw	0
  6048  00635C  6EDD               	movwf	postdec2,c
  6049                           
  6050                           ; BSR set to: 0
  6051                           ;	Return value of _frexp is never used
  6052  00635E  0012               	return	
  6053  006360                     l7190:
  6054                           
  6055                           ; BSR set to: 0
  6056  006360  0100               	movlb	0	; () banked
  6057  006362  517C               	movf	(frexp@value+3)& (0+255),w,b
  6058  006364  0B7F               	andlw	127
  6059  006366  0100               	movlb	0	; () banked
  6060  006368  6F7F               	movwf	??_frexp& (0+255),b
  6061  00636A  6B80               	clrf	(??_frexp+1)& (0+255),b
  6062  00636C  90D8               	bcf	status,0,c
  6063  00636E  0100               	movlb	0	; () banked
  6064  006370  377F               	rlcf	??_frexp& (0+255),f,b
  6065  006372  3780               	rlcf	(??_frexp+1)& (0+255),f,b
  6066  006374  C07D  FFD9         	movff	frexp@eptr,fsr2l
  6067  006378  C07E  FFDA         	movff	frexp@eptr+1,fsr2h
  6068  00637C  C07F  FFDE         	movff	??_frexp,postinc2
  6069  006380  C080  FFDD         	movff	??_frexp+1,postdec2
  6070  006384  0100               	movlb	0	; () banked
  6071  006386  AF7B               	btfss	(frexp@value+2)& (0+255),7,b
  6072  006388  D004               	goto	u9470
  6073  00638A  0100               	movlb	0	; () banked
  6074  00638C  6B7F               	clrf	??_frexp& (0+255),b
  6075  00638E  2B7F               	incf	??_frexp& (0+255),f,b
  6076  006390  D002               	goto	u9478
  6077  006392                     u9470:
  6078  006392  0100               	movlb	0	; () banked
  6079  006394  6B7F               	clrf	??_frexp& (0+255),b
  6080  006396                     u9478:
  6081  006396  0100               	movlb	0	; () banked
  6082  006398  517F               	movf	??_frexp& (0+255),w,b
  6083  00639A  C07D  FFD9         	movff	frexp@eptr,fsr2l
  6084  00639E  C07E  FFDA         	movff	frexp@eptr+1,fsr2h
  6085  0063A2  12DE               	iorwf	postinc2,f,c
  6086  0063A4  0E00               	movlw	0
  6087  0063A6  12DD               	iorwf	postdec2,f,c
  6088                           
  6089                           ; BSR set to: 0
  6090  0063A8  C07D  FFD9         	movff	frexp@eptr,fsr2l
  6091  0063AC  C07E  FFDA         	movff	frexp@eptr+1,fsr2h
  6092  0063B0  0E82               	movlw	130
  6093  0063B2  26DE               	addwf	postinc2,f,c
  6094  0063B4  0EFF               	movlw	255
  6095  0063B6  22DD               	addwfc	postdec2,f,c
  6096                           
  6097                           ; BSR set to: 0
  6098  0063B8  0100               	movlb	0	; () banked
  6099  0063BA  817C               	bsf	(frexp@value+3)& (0+255),0,b
  6100  0063BC  837C               	bsf	(frexp@value+3)& (0+255),1,b
  6101  0063BE  857C               	bsf	(frexp@value+3)& (0+255),2,b
  6102  0063C0  877C               	bsf	(frexp@value+3)& (0+255),3,b
  6103  0063C2  897C               	bsf	(frexp@value+3)& (0+255),4,b
  6104  0063C4  8B7C               	bsf	(frexp@value+3)& (0+255),5,b
  6105  0063C6  9D7C               	bcf	(frexp@value+3)& (0+255),6,b
  6106                           
  6107                           ; BSR set to: 0
  6108  0063C8  0100               	movlb	0	; () banked
  6109  0063CA  9F7B               	bcf	(frexp@value+2)& (0+255),7,b
  6110  0063CC  0012               	return	
  6111  0063CE                     __end_of_frexp:
  6112                           	opt stack 0
  6113                           tblptru	equ	0xFF8
  6114                           tblptrh	equ	0xFF7
  6115                           tblptrl	equ	0xFF6
  6116                           tablat	equ	0xFF5
  6117                           postinc0	equ	0xFEE
  6118                           wreg	equ	0xFE8
  6119                           postdec1	equ	0xFE5
  6120                           fsr1l	equ	0xFE1
  6121                           indf2	equ	0xFDF
  6122                           postinc2	equ	0xFDE
  6123                           postdec2	equ	0xFDD
  6124                           fsr2h	equ	0xFDA
  6125                           fsr2l	equ	0xFD9
  6126                           status	equ	0xFD8
  6127                           
  6128 ;; *************** function ___xxtofl *****************
  6129 ;; Defined at:
  6130 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\xxtofl.c"
  6131 ;; Parameters:    Size  Location     Type
  6132 ;;  sign            1    wreg     unsigned char 
  6133 ;;  val             4  109[BANK0 ] long 
  6134 ;; Auto vars:     Size  Location     Type
  6135 ;;  sign            1  117[BANK0 ] unsigned char 
  6136 ;;  arg             4  119[BANK0 ] unsigned long 
  6137 ;;  exp             1  118[BANK0 ] unsigned char 
  6138 ;; Return value:  Size  Location     Type
  6139 ;;                  4  109[BANK0 ] unsigned char 
  6140 ;; Registers used:
  6141 ;;		wreg, status,2, status,0
  6142 ;; Tracked objects:
  6143 ;;		On entry : 0/0
  6144 ;;		On exit  : 0/0
  6145 ;;		Unchanged: 0/0
  6146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6147 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6148 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6149 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6150 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6151 ;;Total ram usage:       14 bytes
  6152 ;; Hardware stack levels used:    1
  6153 ;; Hardware stack levels required when called:    5
  6154 ;; This function calls:
  6155 ;;		Nothing
  6156 ;; This function is called by:
  6157 ;;		_park_search
  6158 ;;		_park_routine
  6159 ;;		_parallelo
  6160 ;;		_floor
  6161 ;; This function uses a non-reentrant model
  6162 ;;
  6163                           
  6164                           	psect	text13
  6165  0056E6                     __ptext13:
  6166                           	opt stack 0
  6167  0056E6                     ___xxtofl:
  6168                           	opt stack 23
  6169                           
  6170                           ; BSR set to: 0
  6171                           ;incstack = 0
  6172                           ;___xxtofl@sign stored from wreg
  6173  0056E6  0100               	movlb	0	; () banked
  6174  0056E8  6FD5               	movwf	___xxtofl@sign& (0+255),b
  6175  0056EA  0100               	movlb	0	; () banked
  6176  0056EC  51D5               	movf	___xxtofl@sign& (0+255),w,b
  6177  0056EE  0100               	movlb	0	; () banked
  6178  0056F0  B4D8               	btfsc	status,2,c
  6179  0056F2  D01E               	goto	l1477
  6180                           
  6181                           ; BSR set to: 0
  6182  0056F4  0100               	movlb	0	; () banked
  6183  0056F6  AFD0               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6184  0056F8  D01B               	goto	l1477
  6185                           
  6186                           ; BSR set to: 0
  6187  0056FA  C0CD  F0D1         	movff	___xxtofl@val,??___xxtofl
  6188  0056FE  C0CE  F0D2         	movff	___xxtofl@val+1,??___xxtofl+1
  6189  005702  C0CF  F0D3         	movff	___xxtofl@val+2,??___xxtofl+2
  6190  005706  C0D0  F0D4         	movff	___xxtofl@val+3,??___xxtofl+3
  6191  00570A  0100               	movlb	0	; () banked
  6192  00570C  1FD1               	comf	??___xxtofl& (0+255),f,b
  6193  00570E  1FD2               	comf	(??___xxtofl+1)& (0+255),f,b
  6194  005710  1FD3               	comf	(??___xxtofl+2)& (0+255),f,b
  6195  005712  1FD4               	comf	(??___xxtofl+3)& (0+255),f,b
  6196  005714  2BD1               	incf	??___xxtofl& (0+255),f,b
  6197  005716  0E00               	movlw	0
  6198  005718  23D2               	addwfc	(??___xxtofl+1)& (0+255),f,b
  6199  00571A  23D3               	addwfc	(??___xxtofl+2)& (0+255),f,b
  6200  00571C  23D4               	addwfc	(??___xxtofl+3)& (0+255),f,b
  6201  00571E  C0D1  F0D7         	movff	??___xxtofl,___xxtofl@arg
  6202  005722  C0D2  F0D8         	movff	??___xxtofl+1,___xxtofl@arg+1
  6203  005726  C0D3  F0D9         	movff	??___xxtofl+2,___xxtofl@arg+2
  6204  00572A  C0D4  F0DA         	movff	??___xxtofl+3,___xxtofl@arg+3
  6205  00572E  D008               	goto	l7148
  6206  005730                     l1477:
  6207                           
  6208                           ; BSR set to: 0
  6209  005730  C0CD  F0D7         	movff	___xxtofl@val,___xxtofl@arg
  6210  005734  C0CE  F0D8         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6211  005738  C0CF  F0D9         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6212  00573C  C0D0  F0DA         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6213  005740                     l7148:
  6214                           
  6215                           ; BSR set to: 0
  6216  005740  0100               	movlb	0	; () banked
  6217  005742  51CD               	movf	___xxtofl@val& (0+255),w,b
  6218  005744  0100               	movlb	0	; () banked
  6219  005746  11CE               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  6220  005748  0100               	movlb	0	; () banked
  6221  00574A  11CF               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  6222  00574C  0100               	movlb	0	; () banked
  6223  00574E  11D0               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  6224  005750  A4D8               	btfss	status,2,c
  6225  005752  D00A               	goto	l7154
  6226                           
  6227                           ; BSR set to: 0
  6228  005754  0E00               	movlw	0
  6229  005756  0100               	movlb	0	; () banked
  6230  005758  6FCD               	movwf	?___xxtofl& (0+255),b
  6231  00575A  0E00               	movlw	0
  6232  00575C  6FCE               	movwf	(?___xxtofl+1)& (0+255),b
  6233  00575E  0E00               	movlw	0
  6234  005760  6FCF               	movwf	(?___xxtofl+2)& (0+255),b
  6235  005762  0E00               	movlw	0
  6236  005764  6FD0               	movwf	(?___xxtofl+3)& (0+255),b
  6237                           
  6238                           ; BSR set to: 0
  6239  005766  0012               	return	
  6240  005768                     l7154:
  6241                           
  6242                           ; BSR set to: 0
  6243  005768  0E96               	movlw	150
  6244  00576A  0100               	movlb	0	; () banked
  6245  00576C  6FD6               	movwf	___xxtofl@exp& (0+255),b
  6246  00576E  D008               	goto	l7158
  6247  005770                     l7156:
  6248                           
  6249                           ; BSR set to: 0
  6250  005770  0100               	movlb	0	; () banked
  6251  005772  2BD6               	incf	___xxtofl@exp& (0+255),f,b
  6252  005774  0100               	movlb	0	; () banked
  6253  005776  90D8               	bcf	status,0,c
  6254  005778  33DA               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6255  00577A  33D9               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6256  00577C  33D8               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6257  00577E  33D7               	rrcf	___xxtofl@arg& (0+255),f,b
  6258  005780                     l7158:
  6259                           
  6260                           ; BSR set to: 0
  6261  005780  0E00               	movlw	0
  6262  005782  0100               	movlb	0	; () banked
  6263  005784  15D7               	andwf	___xxtofl@arg& (0+255),w,b
  6264  005786  0100               	movlb	0	; () banked
  6265  005788  6FD1               	movwf	??___xxtofl& (0+255),b
  6266  00578A  0E00               	movlw	0
  6267  00578C  0100               	movlb	0	; () banked
  6268  00578E  15D8               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6269  005790  0100               	movlb	0	; () banked
  6270  005792  6FD2               	movwf	(??___xxtofl+1)& (0+255),b
  6271  005794  0E00               	movlw	0
  6272  005796  0100               	movlb	0	; () banked
  6273  005798  15D9               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6274  00579A  0100               	movlb	0	; () banked
  6275  00579C  6FD3               	movwf	(??___xxtofl+2)& (0+255),b
  6276  00579E  0EFE               	movlw	254
  6277  0057A0  0100               	movlb	0	; () banked
  6278  0057A2  15DA               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6279  0057A4  0100               	movlb	0	; () banked
  6280  0057A6  6FD4               	movwf	(??___xxtofl+3)& (0+255),b
  6281  0057A8  0100               	movlb	0	; () banked
  6282  0057AA  51D1               	movf	??___xxtofl& (0+255),w,b
  6283  0057AC  0100               	movlb	0	; () banked
  6284  0057AE  11D2               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6285  0057B0  0100               	movlb	0	; () banked
  6286  0057B2  11D3               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6287  0057B4  0100               	movlb	0	; () banked
  6288  0057B6  11D4               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6289  0057B8  B4D8               	btfsc	status,2,c
  6290  0057BA  D010               	goto	l1484
  6291  0057BC  D7D9               	goto	l7156
  6292  0057BE                     l7160:
  6293                           
  6294                           ; BSR set to: 0
  6295  0057BE  0100               	movlb	0	; () banked
  6296  0057C0  2BD6               	incf	___xxtofl@exp& (0+255),f,b
  6297                           
  6298                           ; BSR set to: 0
  6299  0057C2  0E01               	movlw	1
  6300  0057C4  0100               	movlb	0	; () banked
  6301  0057C6  27D7               	addwf	___xxtofl@arg& (0+255),f,b
  6302  0057C8  0E00               	movlw	0
  6303  0057CA  23D8               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  6304  0057CC  23D9               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  6305  0057CE  23DA               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  6306                           
  6307                           ; BSR set to: 0
  6308  0057D0  0100               	movlb	0	; () banked
  6309  0057D2  90D8               	bcf	status,0,c
  6310  0057D4  33DA               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6311  0057D6  33D9               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6312  0057D8  33D8               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6313  0057DA  33D7               	rrcf	___xxtofl@arg& (0+255),f,b
  6314  0057DC                     l1484:
  6315                           
  6316                           ; BSR set to: 0
  6317  0057DC  0E00               	movlw	0
  6318  0057DE  0100               	movlb	0	; () banked
  6319  0057E0  15D7               	andwf	___xxtofl@arg& (0+255),w,b
  6320  0057E2  0100               	movlb	0	; () banked
  6321  0057E4  6FD1               	movwf	??___xxtofl& (0+255),b
  6322  0057E6  0E00               	movlw	0
  6323  0057E8  0100               	movlb	0	; () banked
  6324  0057EA  15D8               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6325  0057EC  0100               	movlb	0	; () banked
  6326  0057EE  6FD2               	movwf	(??___xxtofl+1)& (0+255),b
  6327  0057F0  0E00               	movlw	0
  6328  0057F2  0100               	movlb	0	; () banked
  6329  0057F4  15D9               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6330  0057F6  0100               	movlb	0	; () banked
  6331  0057F8  6FD3               	movwf	(??___xxtofl+2)& (0+255),b
  6332  0057FA  0EFF               	movlw	255
  6333  0057FC  0100               	movlb	0	; () banked
  6334  0057FE  15DA               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6335  005800  0100               	movlb	0	; () banked
  6336  005802  6FD4               	movwf	(??___xxtofl+3)& (0+255),b
  6337  005804  0100               	movlb	0	; () banked
  6338  005806  51D1               	movf	??___xxtofl& (0+255),w,b
  6339  005808  0100               	movlb	0	; () banked
  6340  00580A  11D2               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6341  00580C  0100               	movlb	0	; () banked
  6342  00580E  11D3               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6343  005810  0100               	movlb	0	; () banked
  6344  005812  11D4               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6345  005814  B4D8               	btfsc	status,2,c
  6346  005816  D009               	goto	l7168
  6347  005818  D7D2               	goto	l7160
  6348  00581A                     l7166:
  6349                           
  6350                           ; BSR set to: 0
  6351  00581A  0100               	movlb	0	; () banked
  6352  00581C  07D6               	decf	___xxtofl@exp& (0+255),f,b
  6353  00581E  0100               	movlb	0	; () banked
  6354  005820  90D8               	bcf	status,0,c
  6355  005822  37D7               	rlcf	___xxtofl@arg& (0+255),f,b
  6356  005824  37D8               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  6357  005826  37D9               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  6358  005828  37DA               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  6359  00582A                     l7168:
  6360                           
  6361                           ; BSR set to: 0
  6362  00582A  0100               	movlb	0	; () banked
  6363  00582C  BFD9               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  6364  00582E  D004               	goto	l1491
  6365                           
  6366                           ; BSR set to: 0
  6367  005830  0E02               	movlw	2
  6368  005832  0100               	movlb	0	; () banked
  6369  005834  61D6               	cpfslt	___xxtofl@exp& (0+255),b
  6370  005836  D7F1               	goto	l7166
  6371  005838                     l1491:
  6372                           
  6373                           ; BSR set to: 0
  6374  005838  0100               	movlb	0	; () banked
  6375  00583A  B1D6               	btfsc	___xxtofl@exp& (0+255),0,b
  6376  00583C  D009               	goto	l1492
  6377                           
  6378                           ; BSR set to: 0
  6379  00583E  0EFF               	movlw	255
  6380  005840  0100               	movlb	0	; () banked
  6381  005842  17D7               	andwf	___xxtofl@arg& (0+255),f,b
  6382  005844  0EFF               	movlw	255
  6383  005846  17D8               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  6384  005848  0E7F               	movlw	127
  6385  00584A  17D9               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  6386  00584C  0EFF               	movlw	255
  6387  00584E  17DA               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  6388  005850                     l1492:
  6389                           
  6390                           ; BSR set to: 0
  6391  005850  0100               	movlb	0	; () banked
  6392  005852  90D8               	bcf	status,0,c
  6393  005854  33D6               	rrcf	___xxtofl@exp& (0+255),f,b
  6394  005856  C0D6  F0D1         	movff	___xxtofl@exp,??___xxtofl
  6395  00585A  0100               	movlb	0	; () banked
  6396  00585C  6BD2               	clrf	(??___xxtofl+1)& (0+255),b
  6397  00585E  6BD3               	clrf	(??___xxtofl+2)& (0+255),b
  6398  005860  6BD4               	clrf	(??___xxtofl+3)& (0+255),b
  6399  005862  C0D1  F0D4         	movff	??___xxtofl,??___xxtofl+3
  6400  005866  0100               	movlb	0	; () banked
  6401  005868  6BD3               	clrf	(??___xxtofl+2)& (0+255),b
  6402  00586A  6BD2               	clrf	(??___xxtofl+1)& (0+255),b
  6403  00586C  6BD1               	clrf	??___xxtofl& (0+255),b
  6404  00586E  0100               	movlb	0	; () banked
  6405  005870  51D1               	movf	??___xxtofl& (0+255),w,b
  6406  005872  0100               	movlb	0	; () banked
  6407  005874  13D7               	iorwf	___xxtofl@arg& (0+255),f,b
  6408  005876  0100               	movlb	0	; () banked
  6409  005878  51D2               	movf	(??___xxtofl+1)& (0+255),w,b
  6410  00587A  0100               	movlb	0	; () banked
  6411  00587C  13D8               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  6412  00587E  0100               	movlb	0	; () banked
  6413  005880  51D3               	movf	(??___xxtofl+2)& (0+255),w,b
  6414  005882  0100               	movlb	0	; () banked
  6415  005884  13D9               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  6416  005886  0100               	movlb	0	; () banked
  6417  005888  51D4               	movf	(??___xxtofl+3)& (0+255),w,b
  6418  00588A  0100               	movlb	0	; () banked
  6419  00588C  13DA               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  6420                           
  6421                           ; BSR set to: 0
  6422  00588E  0100               	movlb	0	; () banked
  6423  005890  51D5               	movf	___xxtofl@sign& (0+255),w,b
  6424  005892  0100               	movlb	0	; () banked
  6425  005894  B4D8               	btfsc	status,2,c
  6426  005896  D005               	goto	l7180
  6427                           
  6428                           ; BSR set to: 0
  6429  005898  0100               	movlb	0	; () banked
  6430  00589A  AFD0               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6431  00589C  D002               	goto	l7180
  6432                           
  6433                           ; BSR set to: 0
  6434  00589E  0100               	movlb	0	; () banked
  6435  0058A0  8FDA               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  6436  0058A2                     l7180:
  6437                           
  6438                           ; BSR set to: 0
  6439  0058A2  C0D7  F0CD         	movff	___xxtofl@arg,?___xxtofl
  6440  0058A6  C0D8  F0CE         	movff	___xxtofl@arg+1,?___xxtofl+1
  6441  0058AA  C0D9  F0CF         	movff	___xxtofl@arg+2,?___xxtofl+2
  6442  0058AE  C0DA  F0D0         	movff	___xxtofl@arg+3,?___xxtofl+3
  6443  0058B2  0012               	return	
  6444  0058B4                     __end_of___xxtofl:
  6445                           	opt stack 0
  6446                           tblptru	equ	0xFF8
  6447                           tblptrh	equ	0xFF7
  6448                           tblptrl	equ	0xFF6
  6449                           tablat	equ	0xFF5
  6450                           postinc0	equ	0xFEE
  6451                           wreg	equ	0xFE8
  6452                           postdec1	equ	0xFE5
  6453                           fsr1l	equ	0xFE1
  6454                           indf2	equ	0xFDF
  6455                           postinc2	equ	0xFDE
  6456                           postdec2	equ	0xFDD
  6457                           fsr2h	equ	0xFDA
  6458                           fsr2l	equ	0xFD9
  6459                           status	equ	0xFD8
  6460                           
  6461 ;; *************** function ___fltol *****************
  6462 ;; Defined at:
  6463 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fltol.c"
  6464 ;; Parameters:    Size  Location     Type
  6465 ;;  f1              4   99[BANK0 ] unsigned char 
  6466 ;; Auto vars:     Size  Location     Type
  6467 ;;  exp1            1  108[BANK0 ] unsigned char 
  6468 ;;  sign1           1  107[BANK0 ] unsigned char 
  6469 ;; Return value:  Size  Location     Type
  6470 ;;                  4   99[BANK0 ] long 
  6471 ;; Registers used:
  6472 ;;		wreg, status,2, status,0
  6473 ;; Tracked objects:
  6474 ;;		On entry : 0/0
  6475 ;;		On exit  : 0/0
  6476 ;;		Unchanged: 0/0
  6477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6478 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6479 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6480 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6481 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6482 ;;Total ram usage:       10 bytes
  6483 ;; Hardware stack levels used:    1
  6484 ;; Hardware stack levels required when called:    5
  6485 ;; This function calls:
  6486 ;;		Nothing
  6487 ;; This function is called by:
  6488 ;;		_park_routine
  6489 ;;		_parallelo
  6490 ;;		_floor
  6491 ;; This function uses a non-reentrant model
  6492 ;;
  6493                           
  6494                           	psect	text14
  6495  005F6E                     __ptext14:
  6496                           	opt stack 0
  6497  005F6E                     ___fltol:
  6498                           	opt stack 23
  6499                           
  6500                           ; BSR set to: 0
  6501                           ;incstack = 0
  6502  005F6E  0100               	movlb	0	; () banked
  6503  005F70  35C5               	rlcf	(___fltol@f1+2)& (0+255),w,b
  6504  005F72  35C6               	rlcf	(___fltol@f1+3)& (0+255),w,b
  6505  005F74  0100               	movlb	0	; () banked
  6506  005F76  6FCC               	movwf	___fltol@exp1& (0+255),b
  6507  005F78  0100               	movlb	0	; () banked
  6508  005F7A  51CC               	movf	___fltol@exp1& (0+255),w,b
  6509  005F7C  A4D8               	btfss	status,2,c
  6510  005F7E  D00A               	goto	l7104
  6511                           
  6512                           ; BSR set to: 0
  6513  005F80  0E00               	movlw	0
  6514  005F82  0100               	movlb	0	; () banked
  6515  005F84  6FC3               	movwf	?___fltol& (0+255),b
  6516  005F86  0E00               	movlw	0
  6517  005F88  6FC4               	movwf	(?___fltol+1)& (0+255),b
  6518  005F8A  0E00               	movlw	0
  6519  005F8C  6FC5               	movwf	(?___fltol+2)& (0+255),b
  6520  005F8E  0E00               	movlw	0
  6521  005F90  6FC6               	movwf	(?___fltol+3)& (0+255),b
  6522                           
  6523                           ; BSR set to: 0
  6524  005F92  0012               	return	
  6525  005F94                     l7104:
  6526                           
  6527                           ; BSR set to: 0
  6528  005F94  C0C3  F0C7         	movff	___fltol@f1,??___fltol
  6529  005F98  C0C4  F0C8         	movff	___fltol@f1+1,??___fltol+1
  6530  005F9C  C0C5  F0C9         	movff	___fltol@f1+2,??___fltol+2
  6531  005FA0  C0C6  F0CA         	movff	___fltol@f1+3,??___fltol+3
  6532  005FA4  0E20               	movlw	32
  6533  005FA6  D006               	goto	u9300
  6534  005FA8                     u9305:
  6535  005FA8  0100               	movlb	0	; () banked
  6536  005FAA  90D8               	bcf	status,0,c
  6537  005FAC  33CA               	rrcf	(??___fltol+3)& (0+255),f,b
  6538  005FAE  33C9               	rrcf	(??___fltol+2)& (0+255),f,b
  6539  005FB0  33C8               	rrcf	(??___fltol+1)& (0+255),f,b
  6540  005FB2  33C7               	rrcf	??___fltol& (0+255),f,b
  6541  005FB4                     u9300:
  6542  005FB4  2EE8               	decfsz	wreg,f,c
  6543  005FB6  D7F8               	goto	u9305
  6544  005FB8  0100               	movlb	0	; () banked
  6545  005FBA  51C7               	movf	??___fltol& (0+255),w,b
  6546  005FBC  0100               	movlb	0	; () banked
  6547  005FBE  6FCB               	movwf	___fltol@sign1& (0+255),b
  6548                           
  6549                           ; BSR set to: 0
  6550  005FC0  0100               	movlb	0	; () banked
  6551  005FC2  8FC5               	bsf	(___fltol@f1+2)& (0+255),7,b
  6552                           
  6553                           ; BSR set to: 0
  6554  005FC4  0EFF               	movlw	255
  6555  005FC6  0100               	movlb	0	; () banked
  6556  005FC8  17C3               	andwf	___fltol@f1& (0+255),f,b
  6557  005FCA  0EFF               	movlw	255
  6558  005FCC  17C4               	andwf	(___fltol@f1+1)& (0+255),f,b
  6559  005FCE  0EFF               	movlw	255
  6560  005FD0  17C5               	andwf	(___fltol@f1+2)& (0+255),f,b
  6561  005FD2  0E00               	movlw	0
  6562  005FD4  17C6               	andwf	(___fltol@f1+3)& (0+255),f,b
  6563                           
  6564                           ; BSR set to: 0
  6565  005FD6  0E96               	movlw	150
  6566  005FD8  0100               	movlb	0	; () banked
  6567  005FDA  5FCC               	subwf	___fltol@exp1& (0+255),f,b
  6568                           
  6569                           ; BSR set to: 0
  6570  005FDC  0100               	movlb	0	; () banked
  6571  005FDE  AFCC               	btfss	___fltol@exp1& (0+255),7,b
  6572  005FE0  D01A               	goto	l7124
  6573                           
  6574                           ; BSR set to: 0
  6575  005FE2  0100               	movlb	0	; () banked
  6576  005FE4  51CC               	movf	___fltol@exp1& (0+255),w,b
  6577  005FE6  0A80               	xorlw	128
  6578  005FE8  0F97               	addlw	151
  6579  005FEA  B0D8               	btfsc	status,0,c
  6580  005FEC  D00A               	goto	l7120
  6581                           
  6582                           ; BSR set to: 0
  6583  005FEE  0E00               	movlw	0
  6584  005FF0  0100               	movlb	0	; () banked
  6585  005FF2  6FC3               	movwf	?___fltol& (0+255),b
  6586  005FF4  0E00               	movlw	0
  6587  005FF6  6FC4               	movwf	(?___fltol+1)& (0+255),b
  6588  005FF8  0E00               	movlw	0
  6589  005FFA  6FC5               	movwf	(?___fltol+2)& (0+255),b
  6590  005FFC  0E00               	movlw	0
  6591  005FFE  6FC6               	movwf	(?___fltol+3)& (0+255),b
  6592                           
  6593                           ; BSR set to: 0
  6594  006000  0012               	return	
  6595  006002                     l7120:
  6596                           
  6597                           ; BSR set to: 0
  6598  006002  0100               	movlb	0	; () banked
  6599  006004  90D8               	bcf	status,0,c
  6600  006006  33C6               	rrcf	(___fltol@f1+3)& (0+255),f,b
  6601  006008  33C5               	rrcf	(___fltol@f1+2)& (0+255),f,b
  6602  00600A  33C4               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6603  00600C  33C3               	rrcf	___fltol@f1& (0+255),f,b
  6604                           
  6605                           ; BSR set to: 0
  6606  00600E  0100               	movlb	0	; () banked
  6607  006010  3FCC               	incfsz	___fltol@exp1& (0+255),f,b
  6608  006012  D7F7               	goto	l7120
  6609                           
  6610                           ; BSR set to: 0
  6611  006014  D01B               	goto	l7134
  6612  006016                     l7124:
  6613                           
  6614                           ; BSR set to: 0
  6615  006016  0E1F               	movlw	31
  6616  006018  0100               	movlb	0	; () banked
  6617  00601A  65CC               	cpfsgt	___fltol@exp1& (0+255),b
  6618  00601C  D012               	goto	l7132
  6619                           
  6620                           ; BSR set to: 0
  6621  00601E  0E00               	movlw	0
  6622  006020  0100               	movlb	0	; () banked
  6623  006022  6FC3               	movwf	?___fltol& (0+255),b
  6624  006024  0E00               	movlw	0
  6625  006026  6FC4               	movwf	(?___fltol+1)& (0+255),b
  6626  006028  0E00               	movlw	0
  6627  00602A  6FC5               	movwf	(?___fltol+2)& (0+255),b
  6628  00602C  0E00               	movlw	0
  6629  00602E  6FC6               	movwf	(?___fltol+3)& (0+255),b
  6630                           
  6631                           ; BSR set to: 0
  6632  006030  0012               	return	
  6633  006032                     l7130:
  6634                           
  6635                           ; BSR set to: 0
  6636  006032  0100               	movlb	0	; () banked
  6637  006034  90D8               	bcf	status,0,c
  6638  006036  37C3               	rlcf	___fltol@f1& (0+255),f,b
  6639  006038  37C4               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6640  00603A  37C5               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6641  00603C  37C6               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6642  00603E  0100               	movlb	0	; () banked
  6643  006040  07CC               	decf	___fltol@exp1& (0+255),f,b
  6644  006042                     l7132:
  6645                           
  6646                           ; BSR set to: 0
  6647  006042  0100               	movlb	0	; () banked
  6648  006044  51CC               	movf	___fltol@exp1& (0+255),w,b
  6649  006046  0100               	movlb	0	; () banked
  6650  006048  A4D8               	btfss	status,2,c
  6651  00604A  D7F3               	goto	l7130
  6652  00604C                     l7134:
  6653                           
  6654                           ; BSR set to: 0
  6655  00604C  0100               	movlb	0	; () banked
  6656  00604E  51CB               	movf	___fltol@sign1& (0+255),w,b
  6657  006050  0100               	movlb	0	; () banked
  6658  006052  B4D8               	btfsc	status,2,c
  6659  006054  D009               	goto	l7138
  6660                           
  6661                           ; BSR set to: 0
  6662  006056  0100               	movlb	0	; () banked
  6663  006058  1FC6               	comf	(___fltol@f1+3)& (0+255),f,b
  6664  00605A  1FC5               	comf	(___fltol@f1+2)& (0+255),f,b
  6665  00605C  1FC4               	comf	(___fltol@f1+1)& (0+255),f,b
  6666  00605E  6DC3               	negf	___fltol@f1& (0+255),b
  6667  006060  0E00               	movlw	0
  6668  006062  23C4               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6669  006064  23C5               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6670  006066  23C6               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6671  006068                     l7138:
  6672                           
  6673                           ; BSR set to: 0
  6674  006068  C0C3  F0C3         	movff	___fltol@f1,?___fltol
  6675  00606C  C0C4  F0C4         	movff	___fltol@f1+1,?___fltol+1
  6676  006070  C0C5  F0C5         	movff	___fltol@f1+2,?___fltol+2
  6677  006074  C0C6  F0C6         	movff	___fltol@f1+3,?___fltol+3
  6678  006078  0012               	return	
  6679  00607A                     __end_of___fltol:
  6680                           	opt stack 0
  6681                           tblptru	equ	0xFF8
  6682                           tblptrh	equ	0xFF7
  6683                           tblptrl	equ	0xFF6
  6684                           tablat	equ	0xFF5
  6685                           postinc0	equ	0xFEE
  6686                           wreg	equ	0xFE8
  6687                           postdec1	equ	0xFE5
  6688                           fsr1l	equ	0xFE1
  6689                           indf2	equ	0xFDF
  6690                           postinc2	equ	0xFDE
  6691                           postdec2	equ	0xFDD
  6692                           fsr2h	equ	0xFDA
  6693                           fsr2l	equ	0xFD9
  6694                           status	equ	0xFD8
  6695                           
  6696 ;; *************** function ___flsub *****************
  6697 ;; Defined at:
  6698 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcadd.c"
  6699 ;; Parameters:    Size  Location     Type
  6700 ;;  b               4    0[BANK1 ] long 
  6701 ;;  a               4    4[BANK1 ] long 
  6702 ;; Auto vars:     Size  Location     Type
  6703 ;;		None
  6704 ;; Return value:  Size  Location     Type
  6705 ;;                  4    0[BANK1 ] long 
  6706 ;; Registers used:
  6707 ;;		wreg, status,2, status,0, cstack
  6708 ;; Tracked objects:
  6709 ;;		On entry : 0/0
  6710 ;;		On exit  : 0/0
  6711 ;;		Unchanged: 0/0
  6712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6713 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6716 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6717 ;;Total ram usage:        8 bytes
  6718 ;; Hardware stack levels used:    1
  6719 ;; Hardware stack levels required when called:    6
  6720 ;; This function calls:
  6721 ;;		___fladd
  6722 ;; This function is called by:
  6723 ;;		_sin
  6724 ;; This function uses a non-reentrant model
  6725 ;;
  6726                           
  6727                           	psect	text15
  6728  0064E4                     __ptext15:
  6729                           	opt stack 0
  6730  0064E4                     ___flsub:
  6731                           	opt stack 20
  6732                           
  6733                           ; BSR set to: 0
  6734                           ;incstack = 0
  6735  0064E4  0E00               	movlw	0
  6736  0064E6  0101               	movlb	1	; () banked
  6737  0064E8  1BAD               	xorwf	___flsub@a& (0+255),f,b
  6738  0064EA  0E00               	movlw	0
  6739  0064EC  1BAE               	xorwf	(___flsub@a+1)& (0+255),f,b
  6740  0064EE  0E00               	movlw	0
  6741  0064F0  1BAF               	xorwf	(___flsub@a+2)& (0+255),f,b
  6742  0064F2  0E80               	movlw	128
  6743  0064F4  1BB0               	xorwf	(___flsub@a+3)& (0+255),f,b
  6744                           
  6745                           ; BSR set to: 1
  6746  0064F6  C1A9  F0AB         	movff	___flsub@b,___fladd@b
  6747  0064FA  C1AA  F0AC         	movff	___flsub@b+1,___fladd@b+1
  6748  0064FE  C1AB  F0AD         	movff	___flsub@b+2,___fladd@b+2
  6749  006502  C1AC  F0AE         	movff	___flsub@b+3,___fladd@b+3
  6750  006506  C1AD  F0AF         	movff	___flsub@a,___fladd@a
  6751  00650A  C1AE  F0B0         	movff	___flsub@a+1,___fladd@a+1
  6752  00650E  C1AF  F0B1         	movff	___flsub@a+2,___fladd@a+2
  6753  006512  C1B0  F0B2         	movff	___flsub@a+3,___fladd@a+3
  6754  006516  EC85  F018         	call	___fladd	;wreg free
  6755  00651A  C0AB  F1A9         	movff	?___fladd,?___flsub
  6756  00651E  C0AC  F1AA         	movff	?___fladd+1,?___flsub+1
  6757  006522  C0AD  F1AB         	movff	?___fladd+2,?___flsub+2
  6758  006526  C0AE  F1AC         	movff	?___fladd+3,?___flsub+3
  6759  00652A  0012               	return	
  6760  00652C                     __end_of___flsub:
  6761                           	opt stack 0
  6762                           tblptru	equ	0xFF8
  6763                           tblptrh	equ	0xFF7
  6764                           tblptrl	equ	0xFF6
  6765                           tablat	equ	0xFF5
  6766                           postinc0	equ	0xFEE
  6767                           wreg	equ	0xFE8
  6768                           postdec1	equ	0xFE5
  6769                           fsr1l	equ	0xFE1
  6770                           indf2	equ	0xFDF
  6771                           postinc2	equ	0xFDE
  6772                           postdec2	equ	0xFDD
  6773                           fsr2h	equ	0xFDA
  6774                           fsr2l	equ	0xFD9
  6775                           status	equ	0xFD8
  6776                           
  6777 ;; *************** function _asin *****************
  6778 ;; Defined at:
  6779 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\asin.c"
  6780 ;; Parameters:    Size  Location     Type
  6781 ;;  x               4  128[BANK0 ] long 
  6782 ;; Auto vars:     Size  Location     Type
  6783 ;;  y               4   29[BANK1 ] long 
  6784 ;;  sgn             4   17[BANK1 ] long 
  6785 ;; Return value:  Size  Location     Type
  6786 ;;                  4  128[BANK0 ] long 
  6787 ;; Registers used:
  6788 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6789 ;; Tracked objects:
  6790 ;;		On entry : 0/0
  6791 ;;		On exit  : 0/0
  6792 ;;		Unchanged: 0/0
  6793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6794 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6795 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  6796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6797 ;;      Totals:         0       4      20       0       0       0       0       0       0       0       0       0       
      +0       0
  6798 ;;Total ram usage:       24 bytes
  6799 ;; Hardware stack levels used:    1
  6800 ;; Hardware stack levels required when called:    8
  6801 ;; This function calls:
  6802 ;;		___fladd
  6803 ;;		___fldiv
  6804 ;;		___flge
  6805 ;;		___flmul
  6806 ;;		___flneg
  6807 ;;		_atan
  6808 ;;		_fabs
  6809 ;;		_sqrt
  6810 ;; This function is called by:
  6811 ;;		_parallelo
  6812 ;;		_matematica
  6813 ;; This function uses a non-reentrant model
  6814 ;;
  6815                           
  6816                           	psect	text16
  6817  004D38                     __ptext16:
  6818                           	opt stack 0
  6819  004D38                     _asin:
  6820                           	opt stack 20
  6821                           
  6822                           ;incstack = 0
  6823  004D38  0E00               	movlw	0
  6824  004D3A  0100               	movlb	0	; () banked
  6825  004D3C  6FC7               	movwf	___flge@ff1& (0+255),b
  6826  004D3E  0E00               	movlw	0
  6827  004D40  6FC8               	movwf	(___flge@ff1+1)& (0+255),b
  6828  004D42  0E80               	movlw	128
  6829  004D44  6FC9               	movwf	(___flge@ff1+2)& (0+255),b
  6830  004D46  0E3F               	movlw	63
  6831  004D48  6FCA               	movwf	(___flge@ff1+3)& (0+255),b
  6832  004D4A  C0E0  F0C3         	movff	asin@x,fabs@d
  6833  004D4E  C0E1  F0C4         	movff	asin@x+1,fabs@d+1
  6834  004D52  C0E2  F0C5         	movff	asin@x+2,fabs@d+2
  6835  004D56  C0E3  F0C6         	movff	asin@x+3,fabs@d+3
  6836  004D5A  EC96  F032         	call	_fabs	;wreg free
  6837  004D5E  C0C3  F0CB         	movff	?_fabs,___flge@ff2
  6838  004D62  C0C4  F0CC         	movff	?_fabs+1,___flge@ff2+1
  6839  004D66  C0C5  F0CD         	movff	?_fabs+2,___flge@ff2+2
  6840  004D6A  C0C6  F0CE         	movff	?_fabs+3,___flge@ff2+3
  6841  004D6E  EC3D  F02D         	call	___flge	;wreg free
  6842  004D72  0100               	movlb	0	; () banked
  6843  004D74  B0D8               	btfsc	status,0,c
  6844  004D76  D00F               	goto	l7836
  6845                           
  6846                           ; BSR set to: 0
  6847  004D78  0E00               	movlw	0
  6848  004D7A  0101               	movlb	1	; () banked
  6849  004D7C  6F59               	movwf	(_errno+1)& (0+255),b
  6850  004D7E  0E21               	movlw	33
  6851  004D80  6F58               	movwf	_errno& (0+255),b
  6852  004D82  0E00               	movlw	0
  6853  004D84  0100               	movlb	0	; () banked
  6854  004D86  6FE0               	movwf	?_asin& (0+255),b
  6855  004D88  0E00               	movlw	0
  6856  004D8A  6FE1               	movwf	(?_asin+1)& (0+255),b
  6857  004D8C  0E00               	movlw	0
  6858  004D8E  6FE2               	movwf	(?_asin+2)& (0+255),b
  6859  004D90  0E00               	movlw	0
  6860  004D92  6FE3               	movwf	(?_asin+3)& (0+255),b
  6861                           
  6862                           ; BSR set to: 0
  6863  004D94  0012               	return	
  6864  004D96                     l7836:
  6865                           
  6866                           ; BSR set to: 0
  6867  004D96  0E00               	movlw	0
  6868  004D98  0101               	movlb	1	; () banked
  6869  004D9A  6FBA               	movwf	asin@sgn& (0+255),b
  6870  004D9C  0E00               	movlw	0
  6871  004D9E  6FBB               	movwf	(asin@sgn+1)& (0+255),b
  6872  004DA0  0E80               	movlw	128
  6873  004DA2  6FBC               	movwf	(asin@sgn+2)& (0+255),b
  6874  004DA4  0E3F               	movlw	63
  6875  004DA6  6FBD               	movwf	(asin@sgn+3)& (0+255),b
  6876                           
  6877                           ; BSR set to: 1
  6878  004DA8  C0E0  F096         	movff	asin@x,___flmul@a
  6879  004DAC  C0E1  F097         	movff	asin@x+1,___flmul@a+1
  6880  004DB0  C0E2  F098         	movff	asin@x+2,___flmul@a+2
  6881  004DB4  C0E3  F099         	movff	asin@x+3,___flmul@a+3
  6882  004DB8  C0E0  F092         	movff	asin@x,___flmul@b
  6883  004DBC  C0E1  F093         	movff	asin@x+1,___flmul@b+1
  6884  004DC0  C0E2  F094         	movff	asin@x+2,___flmul@b+2
  6885  004DC4  C0E3  F095         	movff	asin@x+3,___flmul@b+3
  6886  004DC8  ECD9  F01A         	call	___flmul	;wreg free
  6887  004DCC  C092  F0BF         	movff	?___flmul,___flneg@f1
  6888  004DD0  C093  F0C0         	movff	?___flmul+1,___flneg@f1+1
  6889  004DD4  C094  F0C1         	movff	?___flmul+2,___flneg@f1+2
  6890  004DD8  C095  F0C2         	movff	?___flmul+3,___flneg@f1+3
  6891  004DDC  ECB5  F032         	call	___flneg	;wreg free
  6892  004DE0  C0BF  F0AB         	movff	?___flneg,___fladd@b
  6893  004DE4  C0C0  F0AC         	movff	?___flneg+1,___fladd@b+1
  6894  004DE8  C0C1  F0AD         	movff	?___flneg+2,___fladd@b+2
  6895  004DEC  C0C2  F0AE         	movff	?___flneg+3,___fladd@b+3
  6896  004DF0  0E00               	movlw	0
  6897  004DF2  0100               	movlb	0	; () banked
  6898  004DF4  6FAF               	movwf	___fladd@a& (0+255),b
  6899  004DF6  0E00               	movlw	0
  6900  004DF8  6FB0               	movwf	(___fladd@a+1)& (0+255),b
  6901  004DFA  0E80               	movlw	128
  6902  004DFC  6FB1               	movwf	(___fladd@a+2)& (0+255),b
  6903  004DFE  0E3F               	movlw	63
  6904  004E00  6FB2               	movwf	(___fladd@a+3)& (0+255),b
  6905  004E02  EC85  F018         	call	___fladd	;wreg free
  6906  004E06  C0AB  F0C3         	movff	?___fladd,sqrt@a
  6907  004E0A  C0AC  F0C4         	movff	?___fladd+1,sqrt@a+1
  6908  004E0E  C0AD  F0C5         	movff	?___fladd+2,sqrt@a+2
  6909  004E12  C0AE  F0C6         	movff	?___fladd+3,sqrt@a+3
  6910  004E16  EC7C  F01F         	call	_sqrt	;wreg free
  6911  004E1A  C0C3  F1C6         	movff	?_sqrt,asin@y
  6912  004E1E  C0C4  F1C7         	movff	?_sqrt+1,asin@y+1
  6913  004E22  C0C5  F1C8         	movff	?_sqrt+2,asin@y+2
  6914  004E26  C0C6  F1C9         	movff	?_sqrt+3,asin@y+3
  6915  004E2A  C0E0  F0C3         	movff	asin@x,fabs@d
  6916  004E2E  C0E1  F0C4         	movff	asin@x+1,fabs@d+1
  6917  004E32  C0E2  F0C5         	movff	asin@x+2,fabs@d+2
  6918  004E36  C0E3  F0C6         	movff	asin@x+3,fabs@d+3
  6919  004E3A  EC96  F032         	call	_fabs	;wreg free
  6920  004E3E  C0C3  F0C7         	movff	?_fabs,___flge@ff1
  6921  004E42  C0C4  F0C8         	movff	?_fabs+1,___flge@ff1+1
  6922  004E46  C0C5  F0C9         	movff	?_fabs+2,___flge@ff1+2
  6923  004E4A  C0C6  F0CA         	movff	?_fabs+3,___flge@ff1+3
  6924  004E4E  0E8F               	movlw	143
  6925  004E50  0100               	movlb	0	; () banked
  6926  004E52  6FCB               	movwf	___flge@ff2& (0+255),b
  6927  004E54  0EC2               	movlw	194
  6928  004E56  6FCC               	movwf	(___flge@ff2+1)& (0+255),b
  6929  004E58  0E35               	movlw	53
  6930  004E5A  6FCD               	movwf	(___flge@ff2+2)& (0+255),b
  6931  004E5C  0E3F               	movlw	63
  6932  004E5E  6FCE               	movwf	(___flge@ff2+3)& (0+255),b
  6933  004E60  EC3D  F02D         	call	___flge	;wreg free
  6934  004E64  0100               	movlb	0	; () banked
  6935  004E66  B0D8               	btfsc	status,0,c
  6936  004E68  D02D               	goto	l7848
  6937                           
  6938                           ; BSR set to: 0
  6939  004E6A  C0E0  F079         	movff	asin@x,___fldiv@b
  6940  004E6E  C0E1  F07A         	movff	asin@x+1,___fldiv@b+1
  6941  004E72  C0E2  F07B         	movff	asin@x+2,___fldiv@b+2
  6942  004E76  C0E3  F07C         	movff	asin@x+3,___fldiv@b+3
  6943  004E7A  C1C6  F07D         	movff	asin@y,___fldiv@a
  6944  004E7E  C1C7  F07E         	movff	asin@y+1,___fldiv@a+1
  6945  004E82  C1C8  F07F         	movff	asin@y+2,___fldiv@a+2
  6946  004E86  C1C9  F080         	movff	asin@y+3,___fldiv@a+3
  6947  004E8A  EC61  F021         	call	___fldiv	;wreg free
  6948  004E8E  C079  F1CA         	movff	?___fldiv,_asin$3699
  6949  004E92  C07A  F1CB         	movff	?___fldiv+1,_asin$3699+1
  6950  004E96  C07B  F1CC         	movff	?___fldiv+2,_asin$3699+2
  6951  004E9A  C07C  F1CD         	movff	?___fldiv+3,_asin$3699+3
  6952  004E9E  C1CA  F0D3         	movff	_asin$3699,atan@f
  6953  004EA2  C1CB  F0D4         	movff	_asin$3699+1,atan@f+1
  6954  004EA6  C1CC  F0D5         	movff	_asin$3699+2,atan@f+2
  6955  004EAA  C1CD  F0D6         	movff	_asin$3699+3,atan@f+3
  6956  004EAE  EC60  F029         	call	_atan	;wreg free
  6957  004EB2  C0D3  F0E0         	movff	?_atan,?_asin
  6958  004EB6  C0D4  F0E1         	movff	?_atan+1,?_asin+1
  6959  004EBA  C0D5  F0E2         	movff	?_atan+2,?_asin+2
  6960  004EBE  C0D6  F0E3         	movff	?_atan+3,?_asin+3
  6961  004EC2  0012               	return	
  6962  004EC4                     l7848:
  6963  004EC4  0100               	movlb	0	; () banked
  6964  004EC6  AFE3               	btfss	(asin@x+3)& (0+255),7,b
  6965  004EC8  D06E               	goto	l7860
  6966                           
  6967                           ; BSR set to: 0
  6968  004ECA  C0E0  F07D         	movff	asin@x,___fldiv@a
  6969  004ECE  C0E1  F07E         	movff	asin@x+1,___fldiv@a+1
  6970  004ED2  C0E2  F07F         	movff	asin@x+2,___fldiv@a+2
  6971  004ED6  C0E3  F080         	movff	asin@x+3,___fldiv@a+3
  6972  004EDA  C1C6  F0BF         	movff	asin@y,___flneg@f1
  6973  004EDE  C1C7  F0C0         	movff	asin@y+1,___flneg@f1+1
  6974  004EE2  C1C8  F0C1         	movff	asin@y+2,___flneg@f1+2
  6975  004EE6  C1C9  F0C2         	movff	asin@y+3,___flneg@f1+3
  6976  004EEA  ECB5  F032         	call	___flneg	;wreg free
  6977  004EEE  C0BF  F079         	movff	?___flneg,___fldiv@b
  6978  004EF2  C0C0  F07A         	movff	?___flneg+1,___fldiv@b+1
  6979  004EF6  C0C1  F07B         	movff	?___flneg+2,___fldiv@b+2
  6980  004EFA  C0C2  F07C         	movff	?___flneg+3,___fldiv@b+3
  6981  004EFE  EC61  F021         	call	___fldiv	;wreg free
  6982  004F02  C079  F1CA         	movff	?___fldiv,_asin$3699
  6983  004F06  C07A  F1CB         	movff	?___fldiv+1,_asin$3699+1
  6984  004F0A  C07B  F1CC         	movff	?___fldiv+2,_asin$3699+2
  6985  004F0E  C07C  F1CD         	movff	?___fldiv+3,_asin$3699+3
  6986  004F12  C1CA  F0D3         	movff	_asin$3699,atan@f
  6987  004F16  C1CB  F0D4         	movff	_asin$3699+1,atan@f+1
  6988  004F1A  C1CC  F0D5         	movff	_asin$3699+2,atan@f+2
  6989  004F1E  C1CD  F0D6         	movff	_asin$3699+3,atan@f+3
  6990  004F22  EC60  F029         	call	_atan	;wreg free
  6991  004F26  C0D3  F1C2         	movff	?_atan,_asin$3700
  6992  004F2A  C0D4  F1C3         	movff	?_atan+1,_asin$3700+1
  6993  004F2E  C0D5  F1C4         	movff	?_atan+2,_asin$3700+2
  6994  004F32  C0D6  F1C5         	movff	?_atan+3,_asin$3700+3
  6995  004F36  0EDB               	movlw	219
  6996  004F38  0100               	movlb	0	; () banked
  6997  004F3A  6FAF               	movwf	___fladd@a& (0+255),b
  6998  004F3C  0E0F               	movlw	15
  6999  004F3E  6FB0               	movwf	(___fladd@a+1)& (0+255),b
  7000  004F40  0EC9               	movlw	201
  7001  004F42  6FB1               	movwf	(___fladd@a+2)& (0+255),b
  7002  004F44  0E3F               	movlw	63
  7003  004F46  6FB2               	movwf	(___fladd@a+3)& (0+255),b
  7004  004F48  C1C2  F0BF         	movff	_asin$3700,___flneg@f1
  7005  004F4C  C1C3  F0C0         	movff	_asin$3700+1,___flneg@f1+1
  7006  004F50  C1C4  F0C1         	movff	_asin$3700+2,___flneg@f1+2
  7007  004F54  C1C5  F0C2         	movff	_asin$3700+3,___flneg@f1+3
  7008  004F58  ECB5  F032         	call	___flneg	;wreg free
  7009  004F5C  C0BF  F0AB         	movff	?___flneg,___fladd@b
  7010  004F60  C0C0  F0AC         	movff	?___flneg+1,___fladd@b+1
  7011  004F64  C0C1  F0AD         	movff	?___flneg+2,___fladd@b+2
  7012  004F68  C0C2  F0AE         	movff	?___flneg+3,___fladd@b+3
  7013  004F6C  EC85  F018         	call	___fladd	;wreg free
  7014  004F70  C0AB  F1BE         	movff	?___fladd,_asin$3701
  7015  004F74  C0AC  F1BF         	movff	?___fladd+1,_asin$3701+1
  7016  004F78  C0AD  F1C0         	movff	?___fladd+2,_asin$3701+2
  7017  004F7C  C0AE  F1C1         	movff	?___fladd+3,_asin$3701+3
  7018  004F80  C1BE  F0BF         	movff	_asin$3701,___flneg@f1
  7019  004F84  C1BF  F0C0         	movff	_asin$3701+1,___flneg@f1+1
  7020  004F88  C1C0  F0C1         	movff	_asin$3701+2,___flneg@f1+2
  7021  004F8C  C1C1  F0C2         	movff	_asin$3701+3,___flneg@f1+3
  7022  004F90  ECB5  F032         	call	___flneg	;wreg free
  7023  004F94  C0BF  F0E0         	movff	?___flneg,?_asin
  7024  004F98  C0C0  F0E1         	movff	?___flneg+1,?_asin+1
  7025  004F9C  C0C1  F0E2         	movff	?___flneg+2,?_asin+2
  7026  004FA0  C0C2  F0E3         	movff	?___flneg+3,?_asin+3
  7027  004FA4  0012               	return	
  7028  004FA6                     l7860:
  7029  004FA6  C0E0  F07D         	movff	asin@x,___fldiv@a
  7030  004FAA  C0E1  F07E         	movff	asin@x+1,___fldiv@a+1
  7031  004FAE  C0E2  F07F         	movff	asin@x+2,___fldiv@a+2
  7032  004FB2  C0E3  F080         	movff	asin@x+3,___fldiv@a+3
  7033  004FB6  C1C6  F079         	movff	asin@y,___fldiv@b
  7034  004FBA  C1C7  F07A         	movff	asin@y+1,___fldiv@b+1
  7035  004FBE  C1C8  F07B         	movff	asin@y+2,___fldiv@b+2
  7036  004FC2  C1C9  F07C         	movff	asin@y+3,___fldiv@b+3
  7037  004FC6  EC61  F021         	call	___fldiv	;wreg free
  7038  004FCA  C079  F1CA         	movff	?___fldiv,_asin$3699
  7039  004FCE  C07A  F1CB         	movff	?___fldiv+1,_asin$3699+1
  7040  004FD2  C07B  F1CC         	movff	?___fldiv+2,_asin$3699+2
  7041  004FD6  C07C  F1CD         	movff	?___fldiv+3,_asin$3699+3
  7042  004FDA  C1CA  F0D3         	movff	_asin$3699,atan@f
  7043  004FDE  C1CB  F0D4         	movff	_asin$3699+1,atan@f+1
  7044  004FE2  C1CC  F0D5         	movff	_asin$3699+2,atan@f+2
  7045  004FE6  C1CD  F0D6         	movff	_asin$3699+3,atan@f+3
  7046  004FEA  EC60  F029         	call	_atan	;wreg free
  7047  004FEE  C0D3  F1C2         	movff	?_atan,_asin$3700
  7048  004FF2  C0D4  F1C3         	movff	?_atan+1,_asin$3700+1
  7049  004FF6  C0D5  F1C4         	movff	?_atan+2,_asin$3700+2
  7050  004FFA  C0D6  F1C5         	movff	?_atan+3,_asin$3700+3
  7051  004FFE  C1C2  F0BF         	movff	_asin$3700,___flneg@f1
  7052  005002  C1C3  F0C0         	movff	_asin$3700+1,___flneg@f1+1
  7053  005006  C1C4  F0C1         	movff	_asin$3700+2,___flneg@f1+2
  7054  00500A  C1C5  F0C2         	movff	_asin$3700+3,___flneg@f1+3
  7055  00500E  ECB5  F032         	call	___flneg	;wreg free
  7056  005012  C0BF  F0AB         	movff	?___flneg,___fladd@b
  7057  005016  C0C0  F0AC         	movff	?___flneg+1,___fladd@b+1
  7058  00501A  C0C1  F0AD         	movff	?___flneg+2,___fladd@b+2
  7059  00501E  C0C2  F0AE         	movff	?___flneg+3,___fladd@b+3
  7060  005022  0EDB               	movlw	219
  7061  005024  0100               	movlb	0	; () banked
  7062  005026  6FAF               	movwf	___fladd@a& (0+255),b
  7063  005028  0E0F               	movlw	15
  7064  00502A  6FB0               	movwf	(___fladd@a+1)& (0+255),b
  7065  00502C  0EC9               	movlw	201
  7066  00502E  6FB1               	movwf	(___fladd@a+2)& (0+255),b
  7067  005030  0E3F               	movlw	63
  7068  005032  6FB2               	movwf	(___fladd@a+3)& (0+255),b
  7069  005034  EC85  F018         	call	___fladd	;wreg free
  7070  005038  C0AB  F0E0         	movff	?___fladd,?_asin
  7071  00503C  C0AC  F0E1         	movff	?___fladd+1,?_asin+1
  7072  005040  C0AD  F0E2         	movff	?___fladd+2,?_asin+2
  7073  005044  C0AE  F0E3         	movff	?___fladd+3,?_asin+3
  7074  005048  0012               	return	
  7075  00504A                     __end_of_asin:
  7076                           	opt stack 0
  7077                           tblptru	equ	0xFF8
  7078                           tblptrh	equ	0xFF7
  7079                           tblptrl	equ	0xFF6
  7080                           tablat	equ	0xFF5
  7081                           postinc0	equ	0xFEE
  7082                           wreg	equ	0xFE8
  7083                           postdec1	equ	0xFE5
  7084                           fsr1l	equ	0xFE1
  7085                           indf2	equ	0xFDF
  7086                           postinc2	equ	0xFDE
  7087                           postdec2	equ	0xFDD
  7088                           fsr2h	equ	0xFDA
  7089                           fsr2l	equ	0xFD9
  7090                           status	equ	0xFD8
  7091                           
  7092 ;; *************** function _sqrt *****************
  7093 ;; Defined at:
  7094 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcsqrt.c"
  7095 ;; Parameters:    Size  Location     Type
  7096 ;;  a               4   99[BANK0 ] long 
  7097 ;; Auto vars:     Size  Location     Type
  7098 ;;  frac            4  124[BANK0 ] unsigned long 
  7099 ;;  root            4  120[BANK0 ] struct .
  7100 ;;  grs             4  114[BANK0 ] unsigned long 
  7101 ;;  tfrac           4  109[BANK0 ] unsigned long 
  7102 ;;  exp             2  118[BANK0 ] int 
  7103 ;;  p               1  113[BANK0 ] unsigned char 
  7104 ;;  i               1  108[BANK0 ] unsigned char 
  7105 ;;  sign            1  107[BANK0 ] unsigned char 
  7106 ;; Return value:  Size  Location     Type
  7107 ;;                  4   99[BANK0 ] unsigned char 
  7108 ;; Registers used:
  7109 ;;		wreg, status,2, status,0
  7110 ;; Tracked objects:
  7111 ;;		On entry : 0/0
  7112 ;;		On exit  : 0/0
  7113 ;;		Unchanged: 0/0
  7114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7115 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7116 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7117 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7118 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7119 ;;Total ram usage:       29 bytes
  7120 ;; Hardware stack levels used:    1
  7121 ;; Hardware stack levels required when called:    5
  7122 ;; This function calls:
  7123 ;;		Nothing
  7124 ;; This function is called by:
  7125 ;;		_parallelo
  7126 ;;		_asin
  7127 ;; This function uses a non-reentrant model
  7128 ;;
  7129                           
  7130                           	psect	text17
  7131  003EF8                     __ptext17:
  7132                           	opt stack 0
  7133  003EF8                     _sqrt:
  7134                           	opt stack 23
  7135                           
  7136                           ;incstack = 0
  7137  003EF8  0100               	movlb	0	; () banked
  7138  003EFA  51C6               	movf	(sqrt@a+3)& (0+255),w,b
  7139  003EFC  0B80               	andlw	128
  7140  003EFE  0100               	movlb	0	; () banked
  7141  003F00  6FCB               	movwf	sqrt@sign& (0+255),b
  7142  003F02  0100               	movlb	0	; () banked
  7143  003F04  51C6               	movf	(sqrt@a+3)& (0+255),w,b
  7144  003F06  25C6               	addwf	(sqrt@a+3)& (0+255),w,b
  7145  003F08  0100               	movlb	0	; () banked
  7146  003F0A  6FD1               	movwf	sqrt@p& (0+255),b
  7147                           
  7148                           ; BSR set to: 0
  7149  003F0C  0100               	movlb	0	; () banked
  7150  003F0E  AFC5               	btfss	(sqrt@a+2)& (0+255),7,b
  7151  003F10  D002               	goto	l7626
  7152                           
  7153                           ; BSR set to: 0
  7154  003F12  0100               	movlb	0	; () banked
  7155  003F14  81D1               	bsf	sqrt@p& (0+255),0,b
  7156  003F16                     l7626:
  7157                           
  7158                           ; BSR set to: 0
  7159  003F16  C0D1  F0D6         	movff	sqrt@p,sqrt@exp
  7160  003F1A  0100               	movlb	0	; () banked
  7161  003F1C  6BD7               	clrf	(sqrt@exp+1)& (0+255),b
  7162                           
  7163                           ; BSR set to: 0
  7164  003F1E  0EFF               	movlw	255
  7165  003F20  0100               	movlb	0	; () banked
  7166  003F22  15C3               	andwf	sqrt@a& (0+255),w,b
  7167  003F24  0100               	movlb	0	; () banked
  7168  003F26  6FDC               	movwf	sqrt@frac& (0+255),b
  7169  003F28  0EFF               	movlw	255
  7170  003F2A  0100               	movlb	0	; () banked
  7171  003F2C  15C4               	andwf	(sqrt@a+1)& (0+255),w,b
  7172  003F2E  0100               	movlb	0	; () banked
  7173  003F30  6FDD               	movwf	(sqrt@frac+1)& (0+255),b
  7174  003F32  0E7F               	movlw	127
  7175  003F34  0100               	movlb	0	; () banked
  7176  003F36  15C5               	andwf	(sqrt@a+2)& (0+255),w,b
  7177  003F38  0100               	movlb	0	; () banked
  7178  003F3A  6FDE               	movwf	(sqrt@frac+2)& (0+255),b
  7179  003F3C  0E00               	movlw	0
  7180  003F3E  0100               	movlb	0	; () banked
  7181  003F40  15C6               	andwf	(sqrt@a+3)& (0+255),w,b
  7182  003F42  0100               	movlb	0	; () banked
  7183  003F44  6FDF               	movwf	(sqrt@frac+3)& (0+255),b
  7184                           
  7185                           ; BSR set to: 0
  7186  003F46  0100               	movlb	0	; () banked
  7187  003F48  51D6               	movf	sqrt@exp& (0+255),w,b
  7188  003F4A  0100               	movlb	0	; () banked
  7189  003F4C  11D7               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7190  003F4E  B4D8               	btfsc	status,2,c
  7191  003F50  D008               	goto	l7638
  7192                           
  7193                           ; BSR set to: 0
  7194  003F52  0100               	movlb	0	; () banked
  7195  003F54  8FDE               	bsf	(sqrt@frac+2)& (0+255),7,b
  7196                           
  7197                           ; BSR set to: 0
  7198  003F56  0100               	movlb	0	; () banked
  7199  003F58  29D6               	incf	sqrt@exp& (0+255),w,b
  7200  003F5A  0100               	movlb	0	; () banked
  7201  003F5C  11D7               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7202  003F5E  A4D8               	btfss	status,2,c
  7203  003F60  D009               	goto	l7640
  7204  003F62                     l7638:
  7205                           
  7206                           ; BSR set to: 0
  7207  003F62  0E00               	movlw	0
  7208  003F64  0100               	movlb	0	; () banked
  7209  003F66  6FDC               	movwf	sqrt@frac& (0+255),b
  7210  003F68  0E00               	movlw	0
  7211  003F6A  6FDD               	movwf	(sqrt@frac+1)& (0+255),b
  7212  003F6C  0E00               	movlw	0
  7213  003F6E  6FDE               	movwf	(sqrt@frac+2)& (0+255),b
  7214  003F70  0E00               	movlw	0
  7215  003F72  6FDF               	movwf	(sqrt@frac+3)& (0+255),b
  7216  003F74                     l7640:
  7217                           
  7218                           ; BSR set to: 0
  7219  003F74  0100               	movlb	0	; () banked
  7220  003F76  51D6               	movf	sqrt@exp& (0+255),w,b
  7221  003F78  0100               	movlb	0	; () banked
  7222  003F7A  11D7               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7223  003F7C  A4D8               	btfss	status,2,c
  7224  003F7E  D00A               	goto	l7646
  7225                           
  7226                           ; BSR set to: 0
  7227  003F80  0E00               	movlw	0
  7228  003F82  0100               	movlb	0	; () banked
  7229  003F84  6FC3               	movwf	?_sqrt& (0+255),b
  7230  003F86  0E00               	movlw	0
  7231  003F88  6FC4               	movwf	(?_sqrt+1)& (0+255),b
  7232  003F8A  0E00               	movlw	0
  7233  003F8C  6FC5               	movwf	(?_sqrt+2)& (0+255),b
  7234  003F8E  0E00               	movlw	0
  7235  003F90  6FC6               	movwf	(?_sqrt+3)& (0+255),b
  7236                           
  7237                           ; BSR set to: 0
  7238  003F92  0012               	return	
  7239  003F94                     l7646:
  7240                           
  7241                           ; BSR set to: 0
  7242  003F94  0100               	movlb	0	; () banked
  7243  003F96  51CB               	movf	sqrt@sign& (0+255),w,b
  7244  003F98  0100               	movlb	0	; () banked
  7245  003F9A  B4D8               	btfsc	status,2,c
  7246  003F9C  D01C               	goto	l7658
  7247                           
  7248                           ; BSR set to: 0
  7249  003F9E  0E00               	movlw	0
  7250  003FA0  0100               	movlb	0	; () banked
  7251  003FA2  6FD8               	movwf	sqrt@root& (0+255),b
  7252  003FA4  0E00               	movlw	0
  7253  003FA6  6FD9               	movwf	(sqrt@root+1)& (0+255),b
  7254  003FA8  0E40               	movlw	64
  7255  003FAA  6FDA               	movwf	(sqrt@root+2)& (0+255),b
  7256  003FAC  0E00               	movlw	0
  7257  003FAE  6FDB               	movwf	(sqrt@root+3)& (0+255),b
  7258                           
  7259                           ; BSR set to: 0
  7260  003FB0  0100               	movlb	0	; () banked
  7261  003FB2  0E80               	movlw	128
  7262  003FB4  13DA               	iorwf	(sqrt@root+2)& (0+255),f,b
  7263  003FB6  0EFF               	movlw	255
  7264  003FB8  13DB               	iorwf	(sqrt@root+3)& (0+255),f,b
  7265                           
  7266                           ; BSR set to: 0
  7267  003FBA  0E00               	movlw	0
  7268  003FBC  0101               	movlb	1	; () banked
  7269  003FBE  6F59               	movwf	(_errno+1)& (0+255),b
  7270  003FC0  0E21               	movlw	33
  7271  003FC2  6F58               	movwf	_errno& (0+255),b
  7272                           
  7273                           ; BSR set to: 1
  7274  003FC4  C0D8  F0C3         	movff	sqrt@root,?_sqrt
  7275  003FC8  C0D9  F0C4         	movff	sqrt@root+1,?_sqrt+1
  7276  003FCC  C0DA  F0C5         	movff	sqrt@root+2,?_sqrt+2
  7277  003FD0  C0DB  F0C6         	movff	sqrt@root+3,?_sqrt+3
  7278                           
  7279                           ; BSR set to: 1
  7280  003FD4  0012               	return	
  7281  003FD6                     l7658:
  7282  003FD6  0100               	movlb	0	; () banked
  7283  003FD8  29D6               	incf	sqrt@exp& (0+255),w,b
  7284  003FDA  0100               	movlb	0	; () banked
  7285  003FDC  11D7               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7286  003FDE  A4D8               	btfss	status,2,c
  7287  003FE0  D012               	goto	l7666
  7288                           
  7289                           ; BSR set to: 0
  7290  003FE2  0E00               	movlw	0
  7291  003FE4  0100               	movlb	0	; () banked
  7292  003FE6  6FD8               	movwf	sqrt@root& (0+255),b
  7293  003FE8  0E00               	movlw	0
  7294  003FEA  6FD9               	movwf	(sqrt@root+1)& (0+255),b
  7295  003FEC  0E80               	movlw	128
  7296  003FEE  6FDA               	movwf	(sqrt@root+2)& (0+255),b
  7297  003FF0  0E7F               	movlw	127
  7298  003FF2  6FDB               	movwf	(sqrt@root+3)& (0+255),b
  7299                           
  7300                           ; BSR set to: 0
  7301  003FF4  C0D8  F0C3         	movff	sqrt@root,?_sqrt
  7302  003FF8  C0D9  F0C4         	movff	sqrt@root+1,?_sqrt+1
  7303  003FFC  C0DA  F0C5         	movff	sqrt@root+2,?_sqrt+2
  7304  004000  C0DB  F0C6         	movff	sqrt@root+3,?_sqrt+3
  7305                           
  7306                           ; BSR set to: 0
  7307  004004  0012               	return	
  7308  004006                     l7666:
  7309                           
  7310                           ; BSR set to: 0
  7311  004006  0100               	movlb	0	; () banked
  7312  004008  0E81               	movlw	129
  7313  00400A  27D6               	addwf	sqrt@exp& (0+255),f,b
  7314  00400C  0EFF               	movlw	255
  7315  00400E  23D7               	addwfc	(sqrt@exp+1)& (0+255),f,b
  7316  004010  0100               	movlb	0	; () banked
  7317  004012  51D6               	movf	sqrt@exp& (0+255),w,b
  7318  004014  0B01               	andlw	1
  7319  004016  0100               	movlb	0	; () banked
  7320  004018  6FD1               	movwf	sqrt@p& (0+255),b
  7321  00401A  0100               	movlb	0	; () banked
  7322  00401C  35D7               	rlcf	(sqrt@exp+1)& (0+255),w,b
  7323  00401E  33D7               	rrcf	(sqrt@exp+1)& (0+255),f,b
  7324  004020  33D6               	rrcf	sqrt@exp& (0+255),f,b
  7325  004022  0E7F               	movlw	127
  7326  004024  0100               	movlb	0	; () banked
  7327  004026  27D6               	addwf	sqrt@exp& (0+255),f,b
  7328  004028  0E00               	movlw	0
  7329  00402A  23D7               	addwfc	(sqrt@exp+1)& (0+255),f,b
  7330  00402C  90D8               	bcf	status,0,c
  7331  00402E  0100               	movlb	0	; () banked
  7332  004030  35DC               	rlcf	sqrt@frac& (0+255),w,b
  7333  004032  0100               	movlb	0	; () banked
  7334  004034  6FCD               	movwf	sqrt@tfrac& (0+255),b
  7335  004036  0100               	movlb	0	; () banked
  7336  004038  35DD               	rlcf	(sqrt@frac+1)& (0+255),w,b
  7337  00403A  0100               	movlb	0	; () banked
  7338  00403C  6FCE               	movwf	(sqrt@tfrac+1)& (0+255),b
  7339  00403E  0100               	movlb	0	; () banked
  7340  004040  35DE               	rlcf	(sqrt@frac+2)& (0+255),w,b
  7341  004042  0100               	movlb	0	; () banked
  7342  004044  6FCF               	movwf	(sqrt@tfrac+2)& (0+255),b
  7343  004046  0100               	movlb	0	; () banked
  7344  004048  35DF               	rlcf	(sqrt@frac+3)& (0+255),w,b
  7345  00404A  0100               	movlb	0	; () banked
  7346  00404C  6FD0               	movwf	(sqrt@tfrac+3)& (0+255),b
  7347                           
  7348                           ; BSR set to: 0
  7349  00404E  0E00               	movlw	0
  7350  004050  0100               	movlb	0	; () banked
  7351  004052  6FDC               	movwf	sqrt@frac& (0+255),b
  7352  004054  0E00               	movlw	0
  7353  004056  6FDD               	movwf	(sqrt@frac+1)& (0+255),b
  7354  004058  0E00               	movlw	0
  7355  00405A  6FDE               	movwf	(sqrt@frac+2)& (0+255),b
  7356  00405C  0E00               	movlw	0
  7357  00405E  6FDF               	movwf	(sqrt@frac+3)& (0+255),b
  7358                           
  7359                           ; BSR set to: 0
  7360  004060  0E00               	movlw	0
  7361  004062  0100               	movlb	0	; () banked
  7362  004064  6FD2               	movwf	sqrt@grs& (0+255),b
  7363  004066  0E00               	movlw	0
  7364  004068  6FD3               	movwf	(sqrt@grs+1)& (0+255),b
  7365  00406A  0E00               	movlw	0
  7366  00406C  6FD4               	movwf	(sqrt@grs+2)& (0+255),b
  7367  00406E  0E01               	movlw	1
  7368  004070  6FD5               	movwf	(sqrt@grs+3)& (0+255),b
  7369                           
  7370                           ; BSR set to: 0
  7371  004072  0100               	movlb	0	; () banked
  7372  004074  51D1               	movf	sqrt@p& (0+255),w,b
  7373  004076  0100               	movlb	0	; () banked
  7374  004078  B4D8               	btfsc	status,2,c
  7375  00407A  D006               	goto	l7676
  7376                           
  7377                           ; BSR set to: 0
  7378  00407C  0100               	movlb	0	; () banked
  7379  00407E  90D8               	bcf	status,0,c
  7380  004080  37CD               	rlcf	sqrt@tfrac& (0+255),f,b
  7381  004082  37CE               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  7382  004084  37CF               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  7383  004086  37D0               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  7384  004088                     l7676:
  7385                           
  7386                           ; BSR set to: 0
  7387  004088  0E00               	movlw	0
  7388  00408A  0100               	movlb	0	; () banked
  7389  00408C  6FCC               	movwf	sqrt@i& (0+255),b
  7390  00408E  D07E               	goto	l7690
  7391  004090                     l7678:
  7392                           
  7393                           ; BSR set to: 0
  7394  004090  0100               	movlb	0	; () banked
  7395  004092  51D2               	movf	sqrt@grs& (0+255),w,b
  7396  004094  0100               	movlb	0	; () banked
  7397  004096  13DC               	iorwf	sqrt@frac& (0+255),f,b
  7398  004098  0100               	movlb	0	; () banked
  7399  00409A  51D3               	movf	(sqrt@grs+1)& (0+255),w,b
  7400  00409C  0100               	movlb	0	; () banked
  7401  00409E  13DD               	iorwf	(sqrt@frac+1)& (0+255),f,b
  7402  0040A0  0100               	movlb	0	; () banked
  7403  0040A2  51D4               	movf	(sqrt@grs+2)& (0+255),w,b
  7404  0040A4  0100               	movlb	0	; () banked
  7405  0040A6  13DE               	iorwf	(sqrt@frac+2)& (0+255),f,b
  7406  0040A8  0100               	movlb	0	; () banked
  7407  0040AA  51D5               	movf	(sqrt@grs+3)& (0+255),w,b
  7408  0040AC  0100               	movlb	0	; () banked
  7409  0040AE  13DF               	iorwf	(sqrt@frac+3)& (0+255),f,b
  7410  0040B0  0100               	movlb	0	; () banked
  7411  0040B2  51DC               	movf	sqrt@frac& (0+255),w,b
  7412  0040B4  0100               	movlb	0	; () banked
  7413  0040B6  5DCD               	subwf	sqrt@tfrac& (0+255),w,b
  7414  0040B8  0100               	movlb	0	; () banked
  7415  0040BA  51DD               	movf	(sqrt@frac+1)& (0+255),w,b
  7416  0040BC  0100               	movlb	0	; () banked
  7417  0040BE  59CE               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
  7418  0040C0  0100               	movlb	0	; () banked
  7419  0040C2  51DE               	movf	(sqrt@frac+2)& (0+255),w,b
  7420  0040C4  0100               	movlb	0	; () banked
  7421  0040C6  59CF               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
  7422  0040C8  0100               	movlb	0	; () banked
  7423  0040CA  51DF               	movf	(sqrt@frac+3)& (0+255),w,b
  7424  0040CC  0100               	movlb	0	; () banked
  7425  0040CE  59D0               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
  7426  0040D0  A0D8               	btfss	status,0,c
  7427  0040D2  D021               	goto	l7682
  7428                           
  7429                           ; BSR set to: 0
  7430  0040D4  0100               	movlb	0	; () banked
  7431  0040D6  51DC               	movf	sqrt@frac& (0+255),w,b
  7432  0040D8  0100               	movlb	0	; () banked
  7433  0040DA  5FCD               	subwf	sqrt@tfrac& (0+255),f,b
  7434  0040DC  0100               	movlb	0	; () banked
  7435  0040DE  51DD               	movf	(sqrt@frac+1)& (0+255),w,b
  7436  0040E0  0100               	movlb	0	; () banked
  7437  0040E2  5BCE               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
  7438  0040E4  0100               	movlb	0	; () banked
  7439  0040E6  51DE               	movf	(sqrt@frac+2)& (0+255),w,b
  7440  0040E8  0100               	movlb	0	; () banked
  7441  0040EA  5BCF               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
  7442  0040EC  0100               	movlb	0	; () banked
  7443  0040EE  51DF               	movf	(sqrt@frac+3)& (0+255),w,b
  7444  0040F0  0100               	movlb	0	; () banked
  7445  0040F2  5BD0               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
  7446  0040F4  0100               	movlb	0	; () banked
  7447  0040F6  51D2               	movf	sqrt@grs& (0+255),w,b
  7448  0040F8  0100               	movlb	0	; () banked
  7449  0040FA  27DC               	addwf	sqrt@frac& (0+255),f,b
  7450  0040FC  0100               	movlb	0	; () banked
  7451  0040FE  51D3               	movf	(sqrt@grs+1)& (0+255),w,b
  7452  004100  0100               	movlb	0	; () banked
  7453  004102  23DD               	addwfc	(sqrt@frac+1)& (0+255),f,b
  7454  004104  0100               	movlb	0	; () banked
  7455  004106  51D4               	movf	(sqrt@grs+2)& (0+255),w,b
  7456  004108  0100               	movlb	0	; () banked
  7457  00410A  23DE               	addwfc	(sqrt@frac+2)& (0+255),f,b
  7458  00410C  0100               	movlb	0	; () banked
  7459  00410E  51D5               	movf	(sqrt@grs+3)& (0+255),w,b
  7460  004110  0100               	movlb	0	; () banked
  7461  004112  23DF               	addwfc	(sqrt@frac+3)& (0+255),f,b
  7462  004114  D01D               	goto	l7684
  7463  004116                     l7682:
  7464                           
  7465                           ; BSR set to: 0
  7466  004116  C0D2  F0C7         	movff	sqrt@grs,??_sqrt
  7467  00411A  C0D3  F0C8         	movff	sqrt@grs+1,??_sqrt+1
  7468  00411E  C0D4  F0C9         	movff	sqrt@grs+2,??_sqrt+2
  7469  004122  C0D5  F0CA         	movff	sqrt@grs+3,??_sqrt+3
  7470  004126  0100               	movlb	0	; () banked
  7471  004128  1FC7               	comf	??_sqrt& (0+255),f,b
  7472  00412A  1FC8               	comf	(??_sqrt+1)& (0+255),f,b
  7473  00412C  1FC9               	comf	(??_sqrt+2)& (0+255),f,b
  7474  00412E  1FCA               	comf	(??_sqrt+3)& (0+255),f,b
  7475  004130  0100               	movlb	0	; () banked
  7476  004132  51C7               	movf	??_sqrt& (0+255),w,b
  7477  004134  0100               	movlb	0	; () banked
  7478  004136  17DC               	andwf	sqrt@frac& (0+255),f,b
  7479  004138  0100               	movlb	0	; () banked
  7480  00413A  51C8               	movf	(??_sqrt+1)& (0+255),w,b
  7481  00413C  0100               	movlb	0	; () banked
  7482  00413E  17DD               	andwf	(sqrt@frac+1)& (0+255),f,b
  7483  004140  0100               	movlb	0	; () banked
  7484  004142  51C9               	movf	(??_sqrt+2)& (0+255),w,b
  7485  004144  0100               	movlb	0	; () banked
  7486  004146  17DE               	andwf	(sqrt@frac+2)& (0+255),f,b
  7487  004148  0100               	movlb	0	; () banked
  7488  00414A  51CA               	movf	(??_sqrt+3)& (0+255),w,b
  7489  00414C  0100               	movlb	0	; () banked
  7490  00414E  17DF               	andwf	(sqrt@frac+3)& (0+255),f,b
  7491  004150                     l7684:
  7492                           
  7493                           ; BSR set to: 0
  7494  004150  C0D2  F0C7         	movff	sqrt@grs,??_sqrt
  7495  004154  C0D3  F0C8         	movff	sqrt@grs+1,??_sqrt+1
  7496  004158  C0D4  F0C9         	movff	sqrt@grs+2,??_sqrt+2
  7497  00415C  C0D5  F0CA         	movff	sqrt@grs+3,??_sqrt+3
  7498  004160  0100               	movlb	0	; () banked
  7499  004162  90D8               	bcf	status,0,c
  7500  004164  33CA               	rrcf	(??_sqrt+3)& (0+255),f,b
  7501  004166  33C9               	rrcf	(??_sqrt+2)& (0+255),f,b
  7502  004168  33C8               	rrcf	(??_sqrt+1)& (0+255),f,b
  7503  00416A  33C7               	rrcf	??_sqrt& (0+255),f,b
  7504  00416C  C0C7  F0D2         	movff	??_sqrt,sqrt@grs
  7505  004170  C0C8  F0D3         	movff	??_sqrt+1,sqrt@grs+1
  7506  004174  C0C9  F0D4         	movff	??_sqrt+2,sqrt@grs+2
  7507  004178  C0CA  F0D5         	movff	??_sqrt+3,sqrt@grs+3
  7508                           
  7509                           ; BSR set to: 0
  7510  00417C  0100               	movlb	0	; () banked
  7511  00417E  90D8               	bcf	status,0,c
  7512  004180  37CD               	rlcf	sqrt@tfrac& (0+255),f,b
  7513  004182  37CE               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  7514  004184  37CF               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  7515  004186  37D0               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  7516                           
  7517                           ; BSR set to: 0
  7518  004188  0100               	movlb	0	; () banked
  7519  00418A  2BCC               	incf	sqrt@i& (0+255),f,b
  7520  00418C                     l7690:
  7521                           
  7522                           ; BSR set to: 0
  7523  00418C  0E18               	movlw	24
  7524  00418E  0100               	movlb	0	; () banked
  7525  004190  65CC               	cpfsgt	sqrt@i& (0+255),b
  7526  004192  D77E               	goto	l7678
  7527                           
  7528                           ; BSR set to: 0
  7529                           
  7530                           ; BSR set to: 0
  7531  004194  C0DC  F0C7         	movff	sqrt@frac,??_sqrt
  7532  004198  C0DD  F0C8         	movff	sqrt@frac+1,??_sqrt+1
  7533  00419C  C0DE  F0C9         	movff	sqrt@frac+2,??_sqrt+2
  7534  0041A0  C0DF  F0CA         	movff	sqrt@frac+3,??_sqrt+3
  7535  0041A4  0100               	movlb	0	; () banked
  7536  0041A6  90D8               	bcf	status,0,c
  7537  0041A8  33CA               	rrcf	(??_sqrt+3)& (0+255),f,b
  7538  0041AA  33C9               	rrcf	(??_sqrt+2)& (0+255),f,b
  7539  0041AC  33C8               	rrcf	(??_sqrt+1)& (0+255),f,b
  7540  0041AE  33C7               	rrcf	??_sqrt& (0+255),f,b
  7541  0041B0  C0C7  F0DC         	movff	??_sqrt,sqrt@frac
  7542  0041B4  C0C8  F0DD         	movff	??_sqrt+1,sqrt@frac+1
  7543  0041B8  C0C9  F0DE         	movff	??_sqrt+2,sqrt@frac+2
  7544  0041BC  C0CA  F0DF         	movff	??_sqrt+3,sqrt@frac+3
  7545                           
  7546                           ; BSR set to: 0
  7547  0041C0  0E01               	movlw	1
  7548  0041C2  0100               	movlb	0	; () banked
  7549  0041C4  15DC               	andwf	sqrt@frac& (0+255),w,b
  7550  0041C6  0100               	movlb	0	; () banked
  7551  0041C8  6FD2               	movwf	sqrt@grs& (0+255),b
  7552  0041CA  0E00               	movlw	0
  7553  0041CC  0100               	movlb	0	; () banked
  7554  0041CE  15DD               	andwf	(sqrt@frac+1)& (0+255),w,b
  7555  0041D0  0100               	movlb	0	; () banked
  7556  0041D2  6FD3               	movwf	(sqrt@grs+1)& (0+255),b
  7557  0041D4  0E00               	movlw	0
  7558  0041D6  0100               	movlb	0	; () banked
  7559  0041D8  15DE               	andwf	(sqrt@frac+2)& (0+255),w,b
  7560  0041DA  0100               	movlb	0	; () banked
  7561  0041DC  6FD4               	movwf	(sqrt@grs+2)& (0+255),b
  7562  0041DE  0E00               	movlw	0
  7563  0041E0  0100               	movlb	0	; () banked
  7564  0041E2  15DF               	andwf	(sqrt@frac+3)& (0+255),w,b
  7565  0041E4  0100               	movlb	0	; () banked
  7566  0041E6  6FD5               	movwf	(sqrt@grs+3)& (0+255),b
  7567                           
  7568                           ; BSR set to: 0
  7569  0041E8  C0DC  F0C7         	movff	sqrt@frac,??_sqrt
  7570  0041EC  C0DD  F0C8         	movff	sqrt@frac+1,??_sqrt+1
  7571  0041F0  C0DE  F0C9         	movff	sqrt@frac+2,??_sqrt+2
  7572  0041F4  C0DF  F0CA         	movff	sqrt@frac+3,??_sqrt+3
  7573  0041F8  0100               	movlb	0	; () banked
  7574  0041FA  90D8               	bcf	status,0,c
  7575  0041FC  33CA               	rrcf	(??_sqrt+3)& (0+255),f,b
  7576  0041FE  33C9               	rrcf	(??_sqrt+2)& (0+255),f,b
  7577  004200  33C8               	rrcf	(??_sqrt+1)& (0+255),f,b
  7578  004202  33C7               	rrcf	??_sqrt& (0+255),f,b
  7579  004204  C0C7  F0DC         	movff	??_sqrt,sqrt@frac
  7580  004208  C0C8  F0DD         	movff	??_sqrt+1,sqrt@frac+1
  7581  00420C  C0C9  F0DE         	movff	??_sqrt+2,sqrt@frac+2
  7582  004210  C0CA  F0DF         	movff	??_sqrt+3,sqrt@frac+3
  7583  004214  0100               	movlb	0	; () banked
  7584  004216  51D2               	movf	sqrt@grs& (0+255),w,b
  7585  004218  0100               	movlb	0	; () banked
  7586  00421A  27DC               	addwf	sqrt@frac& (0+255),f,b
  7587  00421C  0100               	movlb	0	; () banked
  7588  00421E  51D3               	movf	(sqrt@grs+1)& (0+255),w,b
  7589  004220  0100               	movlb	0	; () banked
  7590  004222  23DD               	addwfc	(sqrt@frac+1)& (0+255),f,b
  7591  004224  0100               	movlb	0	; () banked
  7592  004226  51D4               	movf	(sqrt@grs+2)& (0+255),w,b
  7593  004228  0100               	movlb	0	; () banked
  7594  00422A  23DE               	addwfc	(sqrt@frac+2)& (0+255),f,b
  7595  00422C  0100               	movlb	0	; () banked
  7596  00422E  51D5               	movf	(sqrt@grs+3)& (0+255),w,b
  7597  004230  0100               	movlb	0	; () banked
  7598  004232  23DF               	addwfc	(sqrt@frac+3)& (0+255),f,b
  7599                           
  7600                           ; BSR set to: 0
  7601  004234  0100               	movlb	0	; () banked
  7602  004236  A1DF               	btfss	(sqrt@frac+3)& (0+255),0,b
  7603  004238  D019               	goto	l7702
  7604                           
  7605                           ; BSR set to: 0
  7606  00423A  C0DC  F0C7         	movff	sqrt@frac,??_sqrt
  7607  00423E  C0DD  F0C8         	movff	sqrt@frac+1,??_sqrt+1
  7608  004242  C0DE  F0C9         	movff	sqrt@frac+2,??_sqrt+2
  7609  004246  C0DF  F0CA         	movff	sqrt@frac+3,??_sqrt+3
  7610  00424A  0100               	movlb	0	; () banked
  7611  00424C  90D8               	bcf	status,0,c
  7612  00424E  33CA               	rrcf	(??_sqrt+3)& (0+255),f,b
  7613  004250  33C9               	rrcf	(??_sqrt+2)& (0+255),f,b
  7614  004252  33C8               	rrcf	(??_sqrt+1)& (0+255),f,b
  7615  004254  33C7               	rrcf	??_sqrt& (0+255),f,b
  7616  004256  C0C7  F0DC         	movff	??_sqrt,sqrt@frac
  7617  00425A  C0C8  F0DD         	movff	??_sqrt+1,sqrt@frac+1
  7618  00425E  C0C9  F0DE         	movff	??_sqrt+2,sqrt@frac+2
  7619  004262  C0CA  F0DF         	movff	??_sqrt+3,sqrt@frac+3
  7620  004266  0100               	movlb	0	; () banked
  7621  004268  4BD6               	infsnz	sqrt@exp& (0+255),f,b
  7622  00426A  2BD7               	incf	(sqrt@exp+1)& (0+255),f,b
  7623  00426C                     l7702:
  7624                           
  7625                           ; BSR set to: 0
  7626  00426C  0EFF               	movlw	255
  7627  00426E  0100               	movlb	0	; () banked
  7628  004270  15DC               	andwf	sqrt@frac& (0+255),w,b
  7629  004272  0100               	movlb	0	; () banked
  7630  004274  6FD8               	movwf	sqrt@root& (0+255),b
  7631  004276  0EFF               	movlw	255
  7632  004278  0100               	movlb	0	; () banked
  7633  00427A  15DD               	andwf	(sqrt@frac+1)& (0+255),w,b
  7634  00427C  0100               	movlb	0	; () banked
  7635  00427E  6FD9               	movwf	(sqrt@root+1)& (0+255),b
  7636  004280  0E7F               	movlw	127
  7637  004282  0100               	movlb	0	; () banked
  7638  004284  15DE               	andwf	(sqrt@frac+2)& (0+255),w,b
  7639  004286  0100               	movlb	0	; () banked
  7640  004288  6FDA               	movwf	(sqrt@root+2)& (0+255),b
  7641  00428A  0E00               	movlw	0
  7642  00428C  0100               	movlb	0	; () banked
  7643  00428E  15DF               	andwf	(sqrt@frac+3)& (0+255),w,b
  7644  004290  0100               	movlb	0	; () banked
  7645  004292  6FDB               	movwf	(sqrt@root+3)& (0+255),b
  7646                           
  7647                           ; BSR set to: 0
  7648  004294  C0D6  F0D1         	movff	sqrt@exp,sqrt@p
  7649                           
  7650                           ; BSR set to: 0
  7651  004298  0100               	movlb	0	; () banked
  7652  00429A  A1D1               	btfss	sqrt@p& (0+255),0,b
  7653  00429C  D002               	goto	l7710
  7654                           
  7655                           ; BSR set to: 0
  7656  00429E  0100               	movlb	0	; () banked
  7657  0042A0  8FDA               	bsf	(sqrt@root+2)& (0+255),7,b
  7658  0042A2                     l7710:
  7659                           
  7660                           ; BSR set to: 0
  7661  0042A2  0100               	movlb	0	; () banked
  7662  0042A4  90D8               	bcf	status,0,c
  7663  0042A6  31D1               	rrcf	sqrt@p& (0+255),w,b
  7664  0042A8  0100               	movlb	0	; () banked
  7665  0042AA  6FDB               	movwf	(sqrt@root+3)& (0+255),b
  7666                           
  7667                           ; BSR set to: 0
  7668  0042AC  0100               	movlb	0	; () banked
  7669  0042AE  9FDB               	bcf	(sqrt@root+3)& (0+255),7,b
  7670                           
  7671                           ; BSR set to: 0
  7672  0042B0  C0D8  F0C3         	movff	sqrt@root,?_sqrt
  7673  0042B4  C0D9  F0C4         	movff	sqrt@root+1,?_sqrt+1
  7674  0042B8  C0DA  F0C5         	movff	sqrt@root+2,?_sqrt+2
  7675  0042BC  C0DB  F0C6         	movff	sqrt@root+3,?_sqrt+3
  7676  0042C0  0012               	return	
  7677  0042C2                     __end_of_sqrt:
  7678                           	opt stack 0
  7679                           tblptru	equ	0xFF8
  7680                           tblptrh	equ	0xFF7
  7681                           tblptrl	equ	0xFF6
  7682                           tablat	equ	0xFF5
  7683                           postinc0	equ	0xFEE
  7684                           wreg	equ	0xFE8
  7685                           postdec1	equ	0xFE5
  7686                           fsr1l	equ	0xFE1
  7687                           indf2	equ	0xFDF
  7688                           postinc2	equ	0xFDE
  7689                           postdec2	equ	0xFDD
  7690                           fsr2h	equ	0xFDA
  7691                           fsr2l	equ	0xFD9
  7692                           status	equ	0xFD8
  7693                           
  7694 ;; *************** function _atan *****************
  7695 ;; Defined at:
  7696 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\atan.c"
  7697 ;; Parameters:    Size  Location     Type
  7698 ;;  f               4  115[BANK0 ] unsigned char 
  7699 ;; Auto vars:     Size  Location     Type
  7700 ;;  val             4   13[BANK1 ] unsigned char 
  7701 ;;  val_squared     4    9[BANK1 ] unsigned char 
  7702 ;;  x               4    4[BANK1 ] unsigned char 
  7703 ;;  y               4    0[BANK1 ] unsigned char 
  7704 ;;  recip           1    8[BANK1 ] unsigned char 
  7705 ;; Return value:  Size  Location     Type
  7706 ;;                  4  115[BANK0 ] unsigned char 
  7707 ;; Registers used:
  7708 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7709 ;; Tracked objects:
  7710 ;;		On entry : 0/0
  7711 ;;		On exit  : 0/0
  7712 ;;		Unchanged: 0/0
  7713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7714 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7715 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  7716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7717 ;;      Totals:         0       4      17       0       0       0       0       0       0       0       0       0       
      +0       0
  7718 ;;Total ram usage:       21 bytes
  7719 ;; Hardware stack levels used:    1
  7720 ;; Hardware stack levels required when called:    7
  7721 ;; This function calls:
  7722 ;;		___fladd
  7723 ;;		___fldiv
  7724 ;;		___flge
  7725 ;;		___flmul
  7726 ;;		___flneg
  7727 ;;		_eval_poly
  7728 ;;		_fabs
  7729 ;; This function is called by:
  7730 ;;		_asin
  7731 ;; This function uses a non-reentrant model
  7732 ;;
  7733                           
  7734                           	psect	text18
  7735  0052C0                     __ptext18:
  7736                           	opt stack 0
  7737  0052C0                     _atan:
  7738                           	opt stack 20
  7739                           
  7740                           ;incstack = 0
  7741  0052C0  C0D3  F0C3         	movff	atan@f,fabs@d
  7742  0052C4  C0D4  F0C4         	movff	atan@f+1,fabs@d+1
  7743  0052C8  C0D5  F0C5         	movff	atan@f+2,fabs@d+2
  7744  0052CC  C0D6  F0C6         	movff	atan@f+3,fabs@d+3
  7745  0052D0  EC96  F032         	call	_fabs	;wreg free
  7746  0052D4  C0C3  F1B6         	movff	?_fabs,atan@val
  7747  0052D8  C0C4  F1B7         	movff	?_fabs+1,atan@val+1
  7748  0052DC  C0C5  F1B8         	movff	?_fabs+2,atan@val+2
  7749  0052E0  C0C6  F1B9         	movff	?_fabs+3,atan@val+3
  7750  0052E4  0101               	movlb	1	; () banked
  7751  0052E6  51B6               	movf	atan@val& (0+255),w,b
  7752  0052E8  0101               	movlb	1	; () banked
  7753  0052EA  11B7               	iorwf	(atan@val+1)& (0+255),w,b
  7754  0052EC  0101               	movlb	1	; () banked
  7755  0052EE  11B8               	iorwf	(atan@val+2)& (0+255),w,b
  7756  0052F0  0101               	movlb	1	; () banked
  7757  0052F2  11B9               	iorwf	(atan@val+3)& (0+255),w,b
  7758  0052F4  A4D8               	btfss	status,2,c
  7759  0052F6  D00A               	goto	l7730
  7760                           
  7761                           ; BSR set to: 1
  7762  0052F8  0E00               	movlw	0
  7763  0052FA  0100               	movlb	0	; () banked
  7764  0052FC  6FD3               	movwf	?_atan& (0+255),b
  7765  0052FE  0E00               	movlw	0
  7766  005300  6FD4               	movwf	(?_atan+1)& (0+255),b
  7767  005302  0E00               	movlw	0
  7768  005304  6FD5               	movwf	(?_atan+2)& (0+255),b
  7769  005306  0E00               	movlw	0
  7770  005308  6FD6               	movwf	(?_atan+3)& (0+255),b
  7771                           
  7772                           ; BSR set to: 0
  7773  00530A  0012               	return	
  7774  00530C                     l7730:
  7775  00530C  0E00               	movlw	0
  7776  00530E  0100               	movlb	0	; () banked
  7777  005310  6FC7               	movwf	___flge@ff1& (0+255),b
  7778  005312  0E00               	movlw	0
  7779  005314  6FC8               	movwf	(___flge@ff1+1)& (0+255),b
  7780  005316  0E80               	movlw	128
  7781  005318  6FC9               	movwf	(___flge@ff1+2)& (0+255),b
  7782  00531A  0E3F               	movlw	63
  7783  00531C  6FCA               	movwf	(___flge@ff1+3)& (0+255),b
  7784  00531E  C1B6  F0CB         	movff	atan@val,___flge@ff2
  7785  005322  C1B7  F0CC         	movff	atan@val+1,___flge@ff2+1
  7786  005326  C1B8  F0CD         	movff	atan@val+2,___flge@ff2+2
  7787  00532A  C1B9  F0CE         	movff	atan@val+3,___flge@ff2+3
  7788  00532E  EC3D  F02D         	call	___flge	;wreg free
  7789  005332  0100               	movlb	0	; () banked
  7790  005334  B0D8               	btfsc	status,0,c
  7791  005336  D002               	goto	u10310
  7792  005338  0E01               	movlw	1
  7793  00533A  D001               	goto	u10320
  7794  00533C                     u10310:
  7795  00533C  0E00               	movlw	0
  7796  00533E                     u10320:
  7797  00533E  0101               	movlb	1	; () banked
  7798  005340  6FB1               	movwf	atan@recip& (0+255),b
  7799  005342  0101               	movlb	1	; () banked
  7800  005344  51B1               	movf	atan@recip& (0+255),w,b
  7801  005346  B4D8               	btfsc	status,2,c
  7802  005348  D01B               	goto	l7734
  7803                           
  7804                           ; BSR set to: 1
  7805  00534A  0E00               	movlw	0
  7806  00534C  0100               	movlb	0	; () banked
  7807  00534E  6F79               	movwf	___fldiv@b& (0+255),b
  7808  005350  0E00               	movlw	0
  7809  005352  6F7A               	movwf	(___fldiv@b+1)& (0+255),b
  7810  005354  0E80               	movlw	128
  7811  005356  6F7B               	movwf	(___fldiv@b+2)& (0+255),b
  7812  005358  0E3F               	movlw	63
  7813  00535A  6F7C               	movwf	(___fldiv@b+3)& (0+255),b
  7814  00535C  C1B6  F07D         	movff	atan@val,___fldiv@a
  7815  005360  C1B7  F07E         	movff	atan@val+1,___fldiv@a+1
  7816  005364  C1B8  F07F         	movff	atan@val+2,___fldiv@a+2
  7817  005368  C1B9  F080         	movff	atan@val+3,___fldiv@a+3
  7818  00536C  EC61  F021         	call	___fldiv	;wreg free
  7819  005370  C079  F1B6         	movff	?___fldiv,atan@val
  7820  005374  C07A  F1B7         	movff	?___fldiv+1,atan@val+1
  7821  005378  C07B  F1B8         	movff	?___fldiv+2,atan@val+2
  7822  00537C  C07C  F1B9         	movff	?___fldiv+3,atan@val+3
  7823  005380                     l7734:
  7824  005380  C1B6  F092         	movff	atan@val,___flmul@b
  7825  005384  C1B7  F093         	movff	atan@val+1,___flmul@b+1
  7826  005388  C1B8  F094         	movff	atan@val+2,___flmul@b+2
  7827  00538C  C1B9  F095         	movff	atan@val+3,___flmul@b+3
  7828  005390  C1B6  F096         	movff	atan@val,___flmul@a
  7829  005394  C1B7  F097         	movff	atan@val+1,___flmul@a+1
  7830  005398  C1B8  F098         	movff	atan@val+2,___flmul@a+2
  7831  00539C  C1B9  F099         	movff	atan@val+3,___flmul@a+3
  7832  0053A0  ECD9  F01A         	call	___flmul	;wreg free
  7833  0053A4  C092  F1B2         	movff	?___flmul,atan@val_squared
  7834  0053A8  C093  F1B3         	movff	?___flmul+1,atan@val_squared+1
  7835  0053AC  C094  F1B4         	movff	?___flmul+2,atan@val_squared+2
  7836  0053B0  C095  F1B5         	movff	?___flmul+3,atan@val_squared+3
  7837  0053B4  C1B2  F0BF         	movff	atan@val_squared,eval_poly@x
  7838  0053B8  C1B3  F0C0         	movff	atan@val_squared+1,eval_poly@x+1
  7839  0053BC  C1B4  F0C1         	movff	atan@val_squared+2,eval_poly@x+2
  7840  0053C0  C1B5  F0C2         	movff	atan@val_squared+3,eval_poly@x+3
  7841  0053C4  0E19               	movlw	low atan@coeff_b
  7842  0053C6  0100               	movlb	0	; () banked
  7843  0053C8  6FC3               	movwf	eval_poly@d& (0+255),b
  7844  0053CA  0E0D               	movlw	high atan@coeff_b
  7845  0053CC  0100               	movlb	0	; () banked
  7846  0053CE  6FC4               	movwf	(eval_poly@d+1)& (0+255),b
  7847  0053D0  0E00               	movlw	0
  7848  0053D2  0100               	movlb	0	; () banked
  7849  0053D4  6FC6               	movwf	(eval_poly@n+1)& (0+255),b
  7850  0053D6  0E04               	movlw	4
  7851  0053D8  6FC5               	movwf	eval_poly@n& (0+255),b
  7852  0053DA  EC2B  F02F         	call	_eval_poly	;wreg free
  7853  0053DE  C0BF  F1A9         	movff	?_eval_poly,atan@y
  7854  0053E2  C0C0  F1AA         	movff	?_eval_poly+1,atan@y+1
  7855  0053E6  C0C1  F1AB         	movff	?_eval_poly+2,atan@y+2
  7856  0053EA  C0C2  F1AC         	movff	?_eval_poly+3,atan@y+3
  7857  0053EE  C1B2  F0BF         	movff	atan@val_squared,eval_poly@x
  7858  0053F2  C1B3  F0C0         	movff	atan@val_squared+1,eval_poly@x+1
  7859  0053F6  C1B4  F0C1         	movff	atan@val_squared+2,eval_poly@x+2
  7860  0053FA  C1B5  F0C2         	movff	atan@val_squared+3,eval_poly@x+3
  7861  0053FE  0E01               	movlw	low atan@coeff_a
  7862  005400  0100               	movlb	0	; () banked
  7863  005402  6FC3               	movwf	eval_poly@d& (0+255),b
  7864  005404  0E0D               	movlw	high atan@coeff_a
  7865  005406  0100               	movlb	0	; () banked
  7866  005408  6FC4               	movwf	(eval_poly@d+1)& (0+255),b
  7867  00540A  0E00               	movlw	0
  7868  00540C  0100               	movlb	0	; () banked
  7869  00540E  6FC6               	movwf	(eval_poly@n+1)& (0+255),b
  7870  005410  0E05               	movlw	5
  7871  005412  6FC5               	movwf	eval_poly@n& (0+255),b
  7872  005414  EC2B  F02F         	call	_eval_poly	;wreg free
  7873  005418  C0BF  F1AD         	movff	?_eval_poly,atan@x
  7874  00541C  C0C0  F1AE         	movff	?_eval_poly+1,atan@x+1
  7875  005420  C0C1  F1AF         	movff	?_eval_poly+2,atan@x+2
  7876  005424  C0C2  F1B0         	movff	?_eval_poly+3,atan@x+3
  7877  005428  C1B6  F092         	movff	atan@val,___flmul@b
  7878  00542C  C1B7  F093         	movff	atan@val+1,___flmul@b+1
  7879  005430  C1B8  F094         	movff	atan@val+2,___flmul@b+2
  7880  005434  C1B9  F095         	movff	atan@val+3,___flmul@b+3
  7881  005438  C1A9  F07D         	movff	atan@y,___fldiv@a
  7882  00543C  C1AA  F07E         	movff	atan@y+1,___fldiv@a+1
  7883  005440  C1AB  F07F         	movff	atan@y+2,___fldiv@a+2
  7884  005444  C1AC  F080         	movff	atan@y+3,___fldiv@a+3
  7885  005448  C1AD  F079         	movff	atan@x,___fldiv@b
  7886  00544C  C1AE  F07A         	movff	atan@x+1,___fldiv@b+1
  7887  005450  C1AF  F07B         	movff	atan@x+2,___fldiv@b+2
  7888  005454  C1B0  F07C         	movff	atan@x+3,___fldiv@b+3
  7889  005458  EC61  F021         	call	___fldiv	;wreg free
  7890  00545C  C079  F096         	movff	?___fldiv,___flmul@a
  7891  005460  C07A  F097         	movff	?___fldiv+1,___flmul@a+1
  7892  005464  C07B  F098         	movff	?___fldiv+2,___flmul@a+2
  7893  005468  C07C  F099         	movff	?___fldiv+3,___flmul@a+3
  7894  00546C  ECD9  F01A         	call	___flmul	;wreg free
  7895  005470  C092  F1B6         	movff	?___flmul,atan@val
  7896  005474  C093  F1B7         	movff	?___flmul+1,atan@val+1
  7897  005478  C094  F1B8         	movff	?___flmul+2,atan@val+2
  7898  00547C  C095  F1B9         	movff	?___flmul+3,atan@val+3
  7899  005480  0101               	movlb	1	; () banked
  7900  005482  51B1               	movf	atan@recip& (0+255),w,b
  7901  005484  0101               	movlb	1	; () banked
  7902  005486  B4D8               	btfsc	status,2,c
  7903  005488  D025               	goto	l7746
  7904                           
  7905                           ; BSR set to: 1
  7906  00548A  C1B6  F0BF         	movff	atan@val,___flneg@f1
  7907  00548E  C1B7  F0C0         	movff	atan@val+1,___flneg@f1+1
  7908  005492  C1B8  F0C1         	movff	atan@val+2,___flneg@f1+2
  7909  005496  C1B9  F0C2         	movff	atan@val+3,___flneg@f1+3
  7910  00549A  ECB5  F032         	call	___flneg	;wreg free
  7911  00549E  C0BF  F0AB         	movff	?___flneg,___fladd@b
  7912  0054A2  C0C0  F0AC         	movff	?___flneg+1,___fladd@b+1
  7913  0054A6  C0C1  F0AD         	movff	?___flneg+2,___fladd@b+2
  7914  0054AA  C0C2  F0AE         	movff	?___flneg+3,___fladd@b+3
  7915  0054AE  0EDB               	movlw	219
  7916  0054B0  0100               	movlb	0	; () banked
  7917  0054B2  6FAF               	movwf	___fladd@a& (0+255),b
  7918  0054B4  0E0F               	movlw	15
  7919  0054B6  6FB0               	movwf	(___fladd@a+1)& (0+255),b
  7920  0054B8  0EC9               	movlw	201
  7921  0054BA  6FB1               	movwf	(___fladd@a+2)& (0+255),b
  7922  0054BC  0E3F               	movlw	63
  7923  0054BE  6FB2               	movwf	(___fladd@a+3)& (0+255),b
  7924  0054C0  EC85  F018         	call	___fladd	;wreg free
  7925  0054C4  C0AB  F1B6         	movff	?___fladd,atan@val
  7926  0054C8  C0AC  F1B7         	movff	?___fladd+1,atan@val+1
  7927  0054CC  C0AD  F1B8         	movff	?___fladd+2,atan@val+2
  7928  0054D0  C0AE  F1B9         	movff	?___fladd+3,atan@val+3
  7929  0054D4                     l7746:
  7930  0054D4  0100               	movlb	0	; () banked
  7931  0054D6  BFD6               	btfsc	(atan@f+3)& (0+255),7,b
  7932  0054D8  D009               	goto	l7750
  7933                           
  7934                           ; BSR set to: 0
  7935  0054DA  C1B6  F0D3         	movff	atan@val,?_atan
  7936  0054DE  C1B7  F0D4         	movff	atan@val+1,?_atan+1
  7937  0054E2  C1B8  F0D5         	movff	atan@val+2,?_atan+2
  7938  0054E6  C1B9  F0D6         	movff	atan@val+3,?_atan+3
  7939  0054EA  0012               	return	
  7940  0054EC                     l7750:
  7941                           
  7942                           ; BSR set to: 0
  7943  0054EC  C1B6  F0BF         	movff	atan@val,___flneg@f1
  7944  0054F0  C1B7  F0C0         	movff	atan@val+1,___flneg@f1+1
  7945  0054F4  C1B8  F0C1         	movff	atan@val+2,___flneg@f1+2
  7946  0054F8  C1B9  F0C2         	movff	atan@val+3,___flneg@f1+3
  7947  0054FC  ECB5  F032         	call	___flneg	;wreg free
  7948  005500  C0BF  F0D3         	movff	?___flneg,?_atan
  7949  005504  C0C0  F0D4         	movff	?___flneg+1,?_atan+1
  7950  005508  C0C1  F0D5         	movff	?___flneg+2,?_atan+2
  7951  00550C  C0C2  F0D6         	movff	?___flneg+3,?_atan+3
  7952  005510  0012               	return	
  7953  005512                     __end_of_atan:
  7954                           	opt stack 0
  7955                           tblptru	equ	0xFF8
  7956                           tblptrh	equ	0xFF7
  7957                           tblptrl	equ	0xFF6
  7958                           tablat	equ	0xFF5
  7959                           postinc0	equ	0xFEE
  7960                           wreg	equ	0xFE8
  7961                           postdec1	equ	0xFE5
  7962                           fsr1l	equ	0xFE1
  7963                           indf2	equ	0xFDF
  7964                           postinc2	equ	0xFDE
  7965                           postdec2	equ	0xFDD
  7966                           fsr2h	equ	0xFDA
  7967                           fsr2l	equ	0xFD9
  7968                           status	equ	0xFD8
  7969                           
  7970 ;; *************** function _fabs *****************
  7971 ;; Defined at:
  7972 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fabs.c"
  7973 ;; Parameters:    Size  Location     Type
  7974 ;;  d               4   99[BANK0 ] unsigned char 
  7975 ;; Auto vars:     Size  Location     Type
  7976 ;;		None
  7977 ;; Return value:  Size  Location     Type
  7978 ;;                  4   99[BANK0 ] unsigned char 
  7979 ;; Registers used:
  7980 ;;		wreg, status,2, status,0, cstack
  7981 ;; Tracked objects:
  7982 ;;		On entry : 0/0
  7983 ;;		On exit  : 0/0
  7984 ;;		Unchanged: 0/0
  7985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7986 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7989 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7990 ;;Total ram usage:        4 bytes
  7991 ;; Hardware stack levels used:    1
  7992 ;; Hardware stack levels required when called:    6
  7993 ;; This function calls:
  7994 ;;		___flneg
  7995 ;; This function is called by:
  7996 ;;		_asin
  7997 ;;		_atan
  7998 ;; This function uses a non-reentrant model
  7999 ;;
  8000                           
  8001                           	psect	text19
  8002  00652C                     __ptext19:
  8003                           	opt stack 0
  8004  00652C                     _fabs:
  8005                           	opt stack 21
  8006                           
  8007                           ;incstack = 0
  8008  00652C  0100               	movlb	0	; () banked
  8009  00652E  AFC6               	btfss	(fabs@d+3)& (0+255),7,b
  8010  006530  D013               	goto	l1090
  8011                           
  8012                           ; BSR set to: 0
  8013  006532  C0C3  F0BF         	movff	fabs@d,___flneg@f1
  8014  006536  C0C4  F0C0         	movff	fabs@d+1,___flneg@f1+1
  8015  00653A  C0C5  F0C1         	movff	fabs@d+2,___flneg@f1+2
  8016  00653E  C0C6  F0C2         	movff	fabs@d+3,___flneg@f1+3
  8017  006542  ECB5  F032         	call	___flneg	;wreg free
  8018  006546  C0BF  F0C3         	movff	?___flneg,?_fabs
  8019  00654A  C0C0  F0C4         	movff	?___flneg+1,?_fabs+1
  8020  00654E  C0C1  F0C5         	movff	?___flneg+2,?_fabs+2
  8021  006552  C0C2  F0C6         	movff	?___flneg+3,?_fabs+3
  8022  006556  0012               	return	
  8023  006558                     l1090:
  8024                           
  8025                           ; BSR set to: 0
  8026  006558  C0C3  F0C3         	movff	fabs@d,?_fabs
  8027  00655C  C0C4  F0C4         	movff	fabs@d+1,?_fabs+1
  8028  006560  C0C5  F0C5         	movff	fabs@d+2,?_fabs+2
  8029  006564  C0C6  F0C6         	movff	fabs@d+3,?_fabs+3
  8030  006568  0012               	return		;funcret
  8031  00656A                     __end_of_fabs:
  8032                           	opt stack 0
  8033                           tblptru	equ	0xFF8
  8034                           tblptrh	equ	0xFF7
  8035                           tblptrl	equ	0xFF6
  8036                           tablat	equ	0xFF5
  8037                           postinc0	equ	0xFEE
  8038                           wreg	equ	0xFE8
  8039                           postdec1	equ	0xFE5
  8040                           fsr1l	equ	0xFE1
  8041                           indf2	equ	0xFDF
  8042                           postinc2	equ	0xFDE
  8043                           postdec2	equ	0xFDD
  8044                           fsr2h	equ	0xFDA
  8045                           fsr2l	equ	0xFD9
  8046                           status	equ	0xFD8
  8047                           
  8048 ;; *************** function ___flneg *****************
  8049 ;; Defined at:
  8050 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\flneg.c"
  8051 ;; Parameters:    Size  Location     Type
  8052 ;;  f1              4   95[BANK0 ] unsigned char 
  8053 ;; Auto vars:     Size  Location     Type
  8054 ;;		None
  8055 ;; Return value:  Size  Location     Type
  8056 ;;                  4   95[BANK0 ] unsigned char 
  8057 ;; Registers used:
  8058 ;;		wreg, status,2, status,0
  8059 ;; Tracked objects:
  8060 ;;		On entry : 0/0
  8061 ;;		On exit  : 0/0
  8062 ;;		Unchanged: 0/0
  8063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8064 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8067 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8068 ;;Total ram usage:        4 bytes
  8069 ;; Hardware stack levels used:    1
  8070 ;; Hardware stack levels required when called:    5
  8071 ;; This function calls:
  8072 ;;		Nothing
  8073 ;; This function is called by:
  8074 ;;		_park_routine
  8075 ;;		_matematica
  8076 ;;		_asin
  8077 ;;		_atan
  8078 ;;		_fabs
  8079 ;;		_sin
  8080 ;; This function uses a non-reentrant model
  8081 ;;
  8082                           
  8083                           	psect	text20
  8084  00656A                     __ptext20:
  8085                           	opt stack 0
  8086  00656A                     ___flneg:
  8087                           	opt stack 21
  8088                           
  8089                           ;incstack = 0
  8090  00656A  0100               	movlb	0	; () banked
  8091  00656C  51BF               	movf	___flneg@f1& (0+255),w,b
  8092  00656E  0100               	movlb	0	; () banked
  8093  006570  11C0               	iorwf	(___flneg@f1+1)& (0+255),w,b
  8094  006572  0100               	movlb	0	; () banked
  8095  006574  11C1               	iorwf	(___flneg@f1+2)& (0+255),w,b
  8096  006576  0100               	movlb	0	; () banked
  8097  006578  11C2               	iorwf	(___flneg@f1+3)& (0+255),w,b
  8098  00657A  B4D8               	btfsc	status,2,c
  8099  00657C  D009               	goto	l7094
  8100                           
  8101                           ; BSR set to: 0
  8102  00657E  0E00               	movlw	0
  8103  006580  0100               	movlb	0	; () banked
  8104  006582  1BBF               	xorwf	___flneg@f1& (0+255),f,b
  8105  006584  0E00               	movlw	0
  8106  006586  1BC0               	xorwf	(___flneg@f1+1)& (0+255),f,b
  8107  006588  0E00               	movlw	0
  8108  00658A  1BC1               	xorwf	(___flneg@f1+2)& (0+255),f,b
  8109  00658C  0E80               	movlw	128
  8110  00658E  1BC2               	xorwf	(___flneg@f1+3)& (0+255),f,b
  8111  006590                     l7094:
  8112                           
  8113                           ; BSR set to: 0
  8114  006590  C0BF  F0BF         	movff	___flneg@f1,?___flneg
  8115  006594  C0C0  F0C0         	movff	___flneg@f1+1,?___flneg+1
  8116  006598  C0C1  F0C1         	movff	___flneg@f1+2,?___flneg+2
  8117  00659C  C0C2  F0C2         	movff	___flneg@f1+3,?___flneg+3
  8118  0065A0  0012               	return	
  8119  0065A2                     __end_of___flneg:
  8120                           	opt stack 0
  8121                           tblptru	equ	0xFF8
  8122                           tblptrh	equ	0xFF7
  8123                           tblptrl	equ	0xFF6
  8124                           tablat	equ	0xFF5
  8125                           postinc0	equ	0xFEE
  8126                           wreg	equ	0xFE8
  8127                           postdec1	equ	0xFE5
  8128                           fsr1l	equ	0xFE1
  8129                           indf2	equ	0xFDF
  8130                           postinc2	equ	0xFDE
  8131                           postdec2	equ	0xFDD
  8132                           fsr2h	equ	0xFDA
  8133                           fsr2l	equ	0xFD9
  8134                           status	equ	0xFD8
  8135                           
  8136 ;; *************** function _eval_poly *****************
  8137 ;; Defined at:
  8138 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\evalpoly.c"
  8139 ;; Parameters:    Size  Location     Type
  8140 ;;  x               4   95[BANK0 ] unsigned char 
  8141 ;;  d               2   99[BANK0 ] PTR const 
  8142 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), atan@coeff_a(24), atan@coeff_b(20), 
  8143 ;;  n               2  101[BANK0 ] int 
  8144 ;; Auto vars:     Size  Location     Type
  8145 ;;  res             4  107[BANK0 ] int 
  8146 ;; Return value:  Size  Location     Type
  8147 ;;                  4   95[BANK0 ] int 
  8148 ;; Registers used:
  8149 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8150 ;; Tracked objects:
  8151 ;;		On entry : 0/0
  8152 ;;		On exit  : 0/0
  8153 ;;		Unchanged: 0/0
  8154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8155 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8156 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8157 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8158 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8159 ;;Total ram usage:       16 bytes
  8160 ;; Hardware stack levels used:    1
  8161 ;; Hardware stack levels required when called:    6
  8162 ;; This function calls:
  8163 ;;		___fladd
  8164 ;;		___flmul
  8165 ;; This function is called by:
  8166 ;;		_atan
  8167 ;;		_sin
  8168 ;; This function uses a non-reentrant model
  8169 ;;
  8170                           
  8171                           	psect	text21
  8172  005E56                     __ptext21:
  8173                           	opt stack 0
  8174  005E56                     _eval_poly:
  8175                           	opt stack 20
  8176                           
  8177                           ; BSR set to: 0
  8178                           ;incstack = 0
  8179  005E56  C0C5  F0C7         	movff	eval_poly@n,??_eval_poly
  8180  005E5A  C0C6  F0C8         	movff	eval_poly@n+1,??_eval_poly+1
  8181  005E5E  0100               	movlb	0	; () banked
  8182  005E60  90D8               	bcf	status,0,c
  8183  005E62  37C7               	rlcf	??_eval_poly& (0+255),f,b
  8184  005E64  37C8               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8185  005E66  0100               	movlb	0	; () banked
  8186  005E68  90D8               	bcf	status,0,c
  8187  005E6A  37C7               	rlcf	??_eval_poly& (0+255),f,b
  8188  005E6C  37C8               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8189  005E6E  C0C3  F0C9         	movff	eval_poly@d,??_eval_poly+2
  8190  005E72  C0C4  F0CA         	movff	eval_poly@d+1,??_eval_poly+3
  8191  005E76  0100               	movlb	0	; () banked
  8192  005E78  51C7               	movf	??_eval_poly& (0+255),w,b
  8193  005E7A  0100               	movlb	0	; () banked
  8194  005E7C  27C9               	addwf	(??_eval_poly+2)& (0+255),f,b
  8195  005E7E  0100               	movlb	0	; () banked
  8196  005E80  51C8               	movf	(??_eval_poly+1)& (0+255),w,b
  8197  005E82  0100               	movlb	0	; () banked
  8198  005E84  23CA               	addwfc	(??_eval_poly+3)& (0+255),f,b
  8199  005E86  C0C9  FFF6         	movff	??_eval_poly+2,tblptrl
  8200  005E8A  C0CA  FFF7         	movff	??_eval_poly+3,tblptrh
  8201  005E8E                     	if	0	;tblptru may be non-zero
  8202  005E8E                     	endif
  8203  005E8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8204  005E8E  0E00               	movlw	low (__mediumconst shr (0+16))
  8205  005E90  6EF8               	movwf	tblptru,c
  8206  005E92                     	endif
  8207  005E92  0009               	tblrd		*+
  8208  005E94  CFF5 F0CB          	movff	tablat,eval_poly@res
  8209  005E98  0009               	tblrd		*+
  8210  005E9A  CFF5 F0CC          	movff	tablat,eval_poly@res+1
  8211  005E9E  0009               	tblrd		*+
  8212  005EA0  CFF5 F0CD          	movff	tablat,eval_poly@res+2
  8213  005EA4  000A               	tblrd		*-
  8214  005EA6  CFF5 F0CE          	movff	tablat,eval_poly@res+3
  8215  005EAA  D052               	goto	l7352
  8216  005EAC                     l7350:
  8217                           
  8218                           ; BSR set to: 0
  8219  005EAC  C0CB  F096         	movff	eval_poly@res,___flmul@a
  8220  005EB0  C0CC  F097         	movff	eval_poly@res+1,___flmul@a+1
  8221  005EB4  C0CD  F098         	movff	eval_poly@res+2,___flmul@a+2
  8222  005EB8  C0CE  F099         	movff	eval_poly@res+3,___flmul@a+3
  8223  005EBC  C0BF  F092         	movff	eval_poly@x,___flmul@b
  8224  005EC0  C0C0  F093         	movff	eval_poly@x+1,___flmul@b+1
  8225  005EC4  C0C1  F094         	movff	eval_poly@x+2,___flmul@b+2
  8226  005EC8  C0C2  F095         	movff	eval_poly@x+3,___flmul@b+3
  8227  005ECC  ECD9  F01A         	call	___flmul	;wreg free
  8228  005ED0  C092  F0AB         	movff	?___flmul,___fladd@b
  8229  005ED4  C093  F0AC         	movff	?___flmul+1,___fladd@b+1
  8230  005ED8  C094  F0AD         	movff	?___flmul+2,___fladd@b+2
  8231  005EDC  C095  F0AE         	movff	?___flmul+3,___fladd@b+3
  8232  005EE0  0100               	movlb	0	; () banked
  8233  005EE2  07C5               	decf	eval_poly@n& (0+255),f,b
  8234  005EE4  A0D8               	btfss	status,0,c
  8235  005EE6  07C6               	decf	(eval_poly@n+1)& (0+255),f,b
  8236  005EE8  C0C5  F0C7         	movff	eval_poly@n,??_eval_poly
  8237  005EEC  C0C6  F0C8         	movff	eval_poly@n+1,??_eval_poly+1
  8238  005EF0  0100               	movlb	0	; () banked
  8239  005EF2  90D8               	bcf	status,0,c
  8240  005EF4  37C7               	rlcf	??_eval_poly& (0+255),f,b
  8241  005EF6  37C8               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8242  005EF8  0100               	movlb	0	; () banked
  8243  005EFA  90D8               	bcf	status,0,c
  8244  005EFC  37C7               	rlcf	??_eval_poly& (0+255),f,b
  8245  005EFE  37C8               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8246  005F00  C0C3  F0C9         	movff	eval_poly@d,??_eval_poly+2
  8247  005F04  C0C4  F0CA         	movff	eval_poly@d+1,??_eval_poly+3
  8248  005F08  0100               	movlb	0	; () banked
  8249  005F0A  51C7               	movf	??_eval_poly& (0+255),w,b
  8250  005F0C  0100               	movlb	0	; () banked
  8251  005F0E  27C9               	addwf	(??_eval_poly+2)& (0+255),f,b
  8252  005F10  0100               	movlb	0	; () banked
  8253  005F12  51C8               	movf	(??_eval_poly+1)& (0+255),w,b
  8254  005F14  0100               	movlb	0	; () banked
  8255  005F16  23CA               	addwfc	(??_eval_poly+3)& (0+255),f,b
  8256  005F18  C0C9  FFF6         	movff	??_eval_poly+2,tblptrl
  8257  005F1C  C0CA  FFF7         	movff	??_eval_poly+3,tblptrh
  8258  005F20                     	if	0	;tblptru may be non-zero
  8259  005F20                     	endif
  8260  005F20                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8261  005F20  0E00               	movlw	low (__mediumconst shr (0+16))
  8262  005F22  6EF8               	movwf	tblptru,c
  8263  005F24                     	endif
  8264  005F24  0009               	tblrd		*+
  8265  005F26  CFF5 F0AF          	movff	tablat,___fladd@a
  8266  005F2A  0009               	tblrd		*+
  8267  005F2C  CFF5 F0B0          	movff	tablat,___fladd@a+1
  8268  005F30  0009               	tblrd		*+
  8269  005F32  CFF5 F0B1          	movff	tablat,___fladd@a+2
  8270  005F36  000A               	tblrd		*-
  8271  005F38  CFF5 F0B2          	movff	tablat,___fladd@a+3
  8272  005F3C  EC85  F018         	call	___fladd	;wreg free
  8273  005F40  C0AB  F0CB         	movff	?___fladd,eval_poly@res
  8274  005F44  C0AC  F0CC         	movff	?___fladd+1,eval_poly@res+1
  8275  005F48  C0AD  F0CD         	movff	?___fladd+2,eval_poly@res+2
  8276  005F4C  C0AE  F0CE         	movff	?___fladd+3,eval_poly@res+3
  8277  005F50                     l7352:
  8278  005F50  0100               	movlb	0	; () banked
  8279  005F52  51C5               	movf	eval_poly@n& (0+255),w,b
  8280  005F54  0100               	movlb	0	; () banked
  8281  005F56  11C6               	iorwf	(eval_poly@n+1)& (0+255),w,b
  8282  005F58  A4D8               	btfss	status,2,c
  8283  005F5A  D7A8               	goto	l7350
  8284                           
  8285                           ; BSR set to: 0
  8286  005F5C  C0CB  F0BF         	movff	eval_poly@res,?_eval_poly
  8287  005F60  C0CC  F0C0         	movff	eval_poly@res+1,?_eval_poly+1
  8288  005F64  C0CD  F0C1         	movff	eval_poly@res+2,?_eval_poly+2
  8289  005F68  C0CE  F0C2         	movff	eval_poly@res+3,?_eval_poly+3
  8290                           
  8291                           ; BSR set to: 0
  8292  005F6C  0012               	return		;funcret
  8293  005F6E                     __end_of_eval_poly:
  8294                           	opt stack 0
  8295                           tblptru	equ	0xFF8
  8296                           tblptrh	equ	0xFF7
  8297                           tblptrl	equ	0xFF6
  8298                           tablat	equ	0xFF5
  8299                           postinc0	equ	0xFEE
  8300                           wreg	equ	0xFE8
  8301                           postdec1	equ	0xFE5
  8302                           fsr1l	equ	0xFE1
  8303                           indf2	equ	0xFDF
  8304                           postinc2	equ	0xFDE
  8305                           postdec2	equ	0xFDD
  8306                           fsr2h	equ	0xFDA
  8307                           fsr2l	equ	0xFD9
  8308                           status	equ	0xFD8
  8309                           
  8310 ;; *************** function ___flmul *****************
  8311 ;; Defined at:
  8312 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcmul.c"
  8313 ;; Parameters:    Size  Location     Type
  8314 ;;  b               4   50[BANK0 ] int 
  8315 ;;  a               4   54[BANK0 ] int 
  8316 ;; Auto vars:     Size  Location     Type
  8317 ;;  prod            4   69[BANK0 ] struct .
  8318 ;;  grs             4   64[BANK0 ] unsigned long 
  8319 ;;  temp            2   73[BANK0 ] struct .
  8320 ;;  bexp            1   68[BANK0 ] unsigned char 
  8321 ;;  aexp            1   63[BANK0 ] unsigned char 
  8322 ;;  sign            1   62[BANK0 ] unsigned char 
  8323 ;; Return value:  Size  Location     Type
  8324 ;;                  4   50[BANK0 ] unsigned char 
  8325 ;; Registers used:
  8326 ;;		wreg, status,2, status,0, prodl, prodh
  8327 ;; Tracked objects:
  8328 ;;		On entry : 0/0
  8329 ;;		On exit  : 0/0
  8330 ;;		Unchanged: 0/0
  8331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8332 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8333 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8334 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8335 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8336 ;;Total ram usage:       25 bytes
  8337 ;; Hardware stack levels used:    1
  8338 ;; Hardware stack levels required when called:    5
  8339 ;; This function calls:
  8340 ;;		Nothing
  8341 ;; This function is called by:
  8342 ;;		_parallelo
  8343 ;;		_matematica
  8344 ;;		_asin
  8345 ;;		_atan
  8346 ;;		_eval_poly
  8347 ;;		_sin
  8348 ;; This function uses a non-reentrant model
  8349 ;;
  8350                           
  8351                           	psect	text22
  8352  0035B2                     __ptext22:
  8353                           	opt stack 0
  8354  0035B2                     ___flmul:
  8355                           	opt stack 20
  8356                           
  8357                           ; BSR set to: 0
  8358                           ;incstack = 0
  8359  0035B2  0100               	movlb	0	; () banked
  8360  0035B4  5195               	movf	(___flmul@b+3)& (0+255),w,b
  8361  0035B6  0B80               	andlw	128
  8362  0035B8  0100               	movlb	0	; () banked
  8363  0035BA  6F9E               	movwf	___flmul@sign& (0+255),b
  8364  0035BC  0100               	movlb	0	; () banked
  8365  0035BE  5195               	movf	(___flmul@b+3)& (0+255),w,b
  8366  0035C0  2595               	addwf	(___flmul@b+3)& (0+255),w,b
  8367  0035C2  0100               	movlb	0	; () banked
  8368  0035C4  6FA4               	movwf	___flmul@bexp& (0+255),b
  8369                           
  8370                           ; BSR set to: 0
  8371  0035C6  0100               	movlb	0	; () banked
  8372  0035C8  AF94               	btfss	(___flmul@b+2)& (0+255),7,b
  8373  0035CA  D002               	goto	l6944
  8374                           
  8375                           ; BSR set to: 0
  8376  0035CC  0100               	movlb	0	; () banked
  8377  0035CE  81A4               	bsf	___flmul@bexp& (0+255),0,b
  8378  0035D0                     l6944:
  8379                           
  8380                           ; BSR set to: 0
  8381  0035D0  0100               	movlb	0	; () banked
  8382  0035D2  51A4               	movf	___flmul@bexp& (0+255),w,b
  8383  0035D4  0100               	movlb	0	; () banked
  8384  0035D6  B4D8               	btfsc	status,2,c
  8385  0035D8  D010               	goto	l6952
  8386                           
  8387                           ; BSR set to: 0
  8388  0035DA  0100               	movlb	0	; () banked
  8389  0035DC  29A4               	incf	___flmul@bexp& (0+255),w,b
  8390  0035DE  A4D8               	btfss	status,2,c
  8391  0035E0  D009               	goto	l6950
  8392                           
  8393                           ; BSR set to: 0
  8394  0035E2  0E00               	movlw	0
  8395  0035E4  0100               	movlb	0	; () banked
  8396  0035E6  6F92               	movwf	___flmul@b& (0+255),b
  8397  0035E8  0E00               	movlw	0
  8398  0035EA  6F93               	movwf	(___flmul@b+1)& (0+255),b
  8399  0035EC  0E00               	movlw	0
  8400  0035EE  6F94               	movwf	(___flmul@b+2)& (0+255),b
  8401  0035F0  0E00               	movlw	0
  8402  0035F2  6F95               	movwf	(___flmul@b+3)& (0+255),b
  8403  0035F4                     l6950:
  8404                           
  8405                           ; BSR set to: 0
  8406  0035F4  0100               	movlb	0	; () banked
  8407  0035F6  8F94               	bsf	(___flmul@b+2)& (0+255),7,b
  8408  0035F8  D009               	goto	l6954
  8409  0035FA                     l6952:
  8410                           
  8411                           ; BSR set to: 0
  8412  0035FA  0E00               	movlw	0
  8413  0035FC  0100               	movlb	0	; () banked
  8414  0035FE  6F92               	movwf	___flmul@b& (0+255),b
  8415  003600  0E00               	movlw	0
  8416  003602  6F93               	movwf	(___flmul@b+1)& (0+255),b
  8417  003604  0E00               	movlw	0
  8418  003606  6F94               	movwf	(___flmul@b+2)& (0+255),b
  8419  003608  0E00               	movlw	0
  8420  00360A  6F95               	movwf	(___flmul@b+3)& (0+255),b
  8421  00360C                     l6954:
  8422                           
  8423                           ; BSR set to: 0
  8424  00360C  0100               	movlb	0	; () banked
  8425  00360E  5199               	movf	(___flmul@a+3)& (0+255),w,b
  8426  003610  0B80               	andlw	128
  8427  003612  0100               	movlb	0	; () banked
  8428  003614  1B9E               	xorwf	___flmul@sign& (0+255),f,b
  8429                           
  8430                           ; BSR set to: 0
  8431  003616  0100               	movlb	0	; () banked
  8432  003618  5199               	movf	(___flmul@a+3)& (0+255),w,b
  8433  00361A  2599               	addwf	(___flmul@a+3)& (0+255),w,b
  8434  00361C  0100               	movlb	0	; () banked
  8435  00361E  6F9F               	movwf	___flmul@aexp& (0+255),b
  8436                           
  8437                           ; BSR set to: 0
  8438  003620  0100               	movlb	0	; () banked
  8439  003622  AF98               	btfss	(___flmul@a+2)& (0+255),7,b
  8440  003624  D002               	goto	l6962
  8441                           
  8442                           ; BSR set to: 0
  8443  003626  0100               	movlb	0	; () banked
  8444  003628  819F               	bsf	___flmul@aexp& (0+255),0,b
  8445  00362A                     l6962:
  8446                           
  8447                           ; BSR set to: 0
  8448  00362A  0100               	movlb	0	; () banked
  8449  00362C  519F               	movf	___flmul@aexp& (0+255),w,b
  8450  00362E  0100               	movlb	0	; () banked
  8451  003630  B4D8               	btfsc	status,2,c
  8452  003632  D010               	goto	l6970
  8453                           
  8454                           ; BSR set to: 0
  8455  003634  0100               	movlb	0	; () banked
  8456  003636  299F               	incf	___flmul@aexp& (0+255),w,b
  8457  003638  A4D8               	btfss	status,2,c
  8458  00363A  D009               	goto	l6968
  8459                           
  8460                           ; BSR set to: 0
  8461  00363C  0E00               	movlw	0
  8462  00363E  0100               	movlb	0	; () banked
  8463  003640  6F96               	movwf	___flmul@a& (0+255),b
  8464  003642  0E00               	movlw	0
  8465  003644  6F97               	movwf	(___flmul@a+1)& (0+255),b
  8466  003646  0E00               	movlw	0
  8467  003648  6F98               	movwf	(___flmul@a+2)& (0+255),b
  8468  00364A  0E00               	movlw	0
  8469  00364C  6F99               	movwf	(___flmul@a+3)& (0+255),b
  8470  00364E                     l6968:
  8471                           
  8472                           ; BSR set to: 0
  8473  00364E  0100               	movlb	0	; () banked
  8474  003650  8F98               	bsf	(___flmul@a+2)& (0+255),7,b
  8475  003652  D009               	goto	l1435
  8476  003654                     l6970:
  8477                           
  8478                           ; BSR set to: 0
  8479  003654  0E00               	movlw	0
  8480  003656  0100               	movlb	0	; () banked
  8481  003658  6F96               	movwf	___flmul@a& (0+255),b
  8482  00365A  0E00               	movlw	0
  8483  00365C  6F97               	movwf	(___flmul@a+1)& (0+255),b
  8484  00365E  0E00               	movlw	0
  8485  003660  6F98               	movwf	(___flmul@a+2)& (0+255),b
  8486  003662  0E00               	movlw	0
  8487  003664  6F99               	movwf	(___flmul@a+3)& (0+255),b
  8488  003666                     l1435:
  8489                           
  8490                           ; BSR set to: 0
  8491  003666  0100               	movlb	0	; () banked
  8492  003668  519F               	movf	___flmul@aexp& (0+255),w,b
  8493  00366A  0100               	movlb	0	; () banked
  8494  00366C  B4D8               	btfsc	status,2,c
  8495  00366E  D005               	goto	l6974
  8496                           
  8497                           ; BSR set to: 0
  8498  003670  0100               	movlb	0	; () banked
  8499  003672  51A4               	movf	___flmul@bexp& (0+255),w,b
  8500  003674  0100               	movlb	0	; () banked
  8501  003676  A4D8               	btfss	status,2,c
  8502  003678  D00A               	goto	l6978
  8503  00367A                     l6974:
  8504                           
  8505                           ; BSR set to: 0
  8506  00367A  0E00               	movlw	0
  8507  00367C  0100               	movlb	0	; () banked
  8508  00367E  6F92               	movwf	?___flmul& (0+255),b
  8509  003680  0E00               	movlw	0
  8510  003682  6F93               	movwf	(?___flmul+1)& (0+255),b
  8511  003684  0E00               	movlw	0
  8512  003686  6F94               	movwf	(?___flmul+2)& (0+255),b
  8513  003688  0E00               	movlw	0
  8514  00368A  6F95               	movwf	(?___flmul+3)& (0+255),b
  8515                           
  8516                           ; BSR set to: 0
  8517  00368C  0012               	return	
  8518  00368E                     l6978:
  8519                           
  8520                           ; BSR set to: 0
  8521  00368E  0100               	movlb	0	; () banked
  8522  003690  5198               	movf	(___flmul@a+2)& (0+255),w,b
  8523  003692  0100               	movlb	0	; () banked
  8524  003694  0392               	mulwf	___flmul@b& (0+255),b
  8525  003696  CFF3 F0A9          	movff	prodl,___flmul@temp
  8526  00369A  CFF4 F0AA          	movff	prodh,___flmul@temp+1
  8527                           
  8528                           ; BSR set to: 0
  8529  00369E  0100               	movlb	0	; () banked
  8530  0036A0  51A9               	movf	___flmul@temp& (0+255),w,b
  8531  0036A2  0100               	movlb	0	; () banked
  8532  0036A4  6FA0               	movwf	___flmul@grs& (0+255),b
  8533  0036A6  6BA1               	clrf	(___flmul@grs+1)& (0+255),b
  8534  0036A8  6BA2               	clrf	(___flmul@grs+2)& (0+255),b
  8535  0036AA  6BA3               	clrf	(___flmul@grs+3)& (0+255),b
  8536                           
  8537                           ; BSR set to: 0
  8538  0036AC  0100               	movlb	0	; () banked
  8539  0036AE  51AA               	movf	(___flmul@temp+1)& (0+255),w,b
  8540  0036B0  0100               	movlb	0	; () banked
  8541  0036B2  6FA5               	movwf	___flmul@prod& (0+255),b
  8542  0036B4  6BA6               	clrf	(___flmul@prod+1)& (0+255),b
  8543  0036B6  6BA7               	clrf	(___flmul@prod+2)& (0+255),b
  8544  0036B8  6BA8               	clrf	(___flmul@prod+3)& (0+255),b
  8545  0036BA  0100               	movlb	0	; () banked
  8546  0036BC  5197               	movf	(___flmul@a+1)& (0+255),w,b
  8547  0036BE  0100               	movlb	0	; () banked
  8548  0036C0  0393               	mulwf	(___flmul@b+1)& (0+255),b
  8549  0036C2  CFF3 F0A9          	movff	prodl,___flmul@temp
  8550  0036C6  CFF4 F0AA          	movff	prodh,___flmul@temp+1
  8551                           
  8552                           ; BSR set to: 0
  8553  0036CA  0100               	movlb	0	; () banked
  8554  0036CC  51A9               	movf	___flmul@temp& (0+255),w,b
  8555  0036CE  0100               	movlb	0	; () banked
  8556  0036D0  27A0               	addwf	___flmul@grs& (0+255),f,b
  8557  0036D2  0E00               	movlw	0
  8558  0036D4  23A1               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8559  0036D6  23A2               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8560  0036D8  23A3               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8561                           
  8562                           ; BSR set to: 0
  8563  0036DA  0100               	movlb	0	; () banked
  8564  0036DC  51AA               	movf	(___flmul@temp+1)& (0+255),w,b
  8565  0036DE  0100               	movlb	0	; () banked
  8566  0036E0  27A5               	addwf	___flmul@prod& (0+255),f,b
  8567  0036E2  0E00               	movlw	0
  8568  0036E4  23A6               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8569  0036E6  23A7               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8570  0036E8  23A8               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8571  0036EA  0100               	movlb	0	; () banked
  8572  0036EC  5196               	movf	___flmul@a& (0+255),w,b
  8573  0036EE  0100               	movlb	0	; () banked
  8574  0036F0  0394               	mulwf	(___flmul@b+2)& (0+255),b
  8575  0036F2  CFF3 F0A9          	movff	prodl,___flmul@temp
  8576  0036F6  CFF4 F0AA          	movff	prodh,___flmul@temp+1
  8577                           
  8578                           ; BSR set to: 0
  8579  0036FA  0100               	movlb	0	; () banked
  8580  0036FC  51A9               	movf	___flmul@temp& (0+255),w,b
  8581  0036FE  0100               	movlb	0	; () banked
  8582  003700  27A0               	addwf	___flmul@grs& (0+255),f,b
  8583  003702  0E00               	movlw	0
  8584  003704  23A1               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8585  003706  23A2               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8586  003708  23A3               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8587                           
  8588                           ; BSR set to: 0
  8589  00370A  0100               	movlb	0	; () banked
  8590  00370C  51AA               	movf	(___flmul@temp+1)& (0+255),w,b
  8591  00370E  0100               	movlb	0	; () banked
  8592  003710  27A5               	addwf	___flmul@prod& (0+255),f,b
  8593  003712  0E00               	movlw	0
  8594  003714  23A6               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8595  003716  23A7               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8596  003718  23A8               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8597                           
  8598                           ; BSR set to: 0
  8599  00371A  C0A2  F0A3         	movff	___flmul@grs+2,___flmul@grs+3
  8600  00371E  C0A1  F0A2         	movff	___flmul@grs+1,___flmul@grs+2
  8601  003722  C0A0  F0A1         	movff	___flmul@grs,___flmul@grs+1
  8602  003726  0100               	movlb	0	; () banked
  8603  003728  6BA0               	clrf	___flmul@grs& (0+255),b
  8604                           
  8605                           ; BSR set to: 0
  8606  00372A  0100               	movlb	0	; () banked
  8607  00372C  5196               	movf	___flmul@a& (0+255),w,b
  8608  00372E  0100               	movlb	0	; () banked
  8609  003730  0393               	mulwf	(___flmul@b+1)& (0+255),b
  8610  003732  CFF3 F0A9          	movff	prodl,___flmul@temp
  8611  003736  CFF4 F0AA          	movff	prodh,___flmul@temp+1
  8612                           
  8613                           ; BSR set to: 0
  8614  00373A  0100               	movlb	0	; () banked
  8615  00373C  51A9               	movf	___flmul@temp& (0+255),w,b
  8616  00373E  0100               	movlb	0	; () banked
  8617  003740  27A0               	addwf	___flmul@grs& (0+255),f,b
  8618  003742  0100               	movlb	0	; () banked
  8619  003744  51AA               	movf	(___flmul@temp+1)& (0+255),w,b
  8620  003746  0100               	movlb	0	; () banked
  8621  003748  23A1               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8622  00374A  0E00               	movlw	0
  8623  00374C  0100               	movlb	0	; () banked
  8624  00374E  23A2               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8625  003750  0E00               	movlw	0
  8626  003752  0100               	movlb	0	; () banked
  8627  003754  23A3               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8628                           
  8629                           ; BSR set to: 0
  8630  003756  0100               	movlb	0	; () banked
  8631  003758  5197               	movf	(___flmul@a+1)& (0+255),w,b
  8632  00375A  0100               	movlb	0	; () banked
  8633  00375C  0392               	mulwf	___flmul@b& (0+255),b
  8634  00375E  CFF3 F0A9          	movff	prodl,___flmul@temp
  8635  003762  CFF4 F0AA          	movff	prodh,___flmul@temp+1
  8636                           
  8637                           ; BSR set to: 0
  8638  003766  0100               	movlb	0	; () banked
  8639  003768  51A9               	movf	___flmul@temp& (0+255),w,b
  8640  00376A  0100               	movlb	0	; () banked
  8641  00376C  27A0               	addwf	___flmul@grs& (0+255),f,b
  8642  00376E  0100               	movlb	0	; () banked
  8643  003770  51AA               	movf	(___flmul@temp+1)& (0+255),w,b
  8644  003772  0100               	movlb	0	; () banked
  8645  003774  23A1               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8646  003776  0E00               	movlw	0
  8647  003778  0100               	movlb	0	; () banked
  8648  00377A  23A2               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8649  00377C  0E00               	movlw	0
  8650  00377E  0100               	movlb	0	; () banked
  8651  003780  23A3               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8652                           
  8653                           ; BSR set to: 0
  8654  003782  C0A2  F0A3         	movff	___flmul@grs+2,___flmul@grs+3
  8655  003786  C0A1  F0A2         	movff	___flmul@grs+1,___flmul@grs+2
  8656  00378A  C0A0  F0A1         	movff	___flmul@grs,___flmul@grs+1
  8657  00378E  0100               	movlb	0	; () banked
  8658  003790  6BA0               	clrf	___flmul@grs& (0+255),b
  8659  003792  0100               	movlb	0	; () banked
  8660  003794  5196               	movf	___flmul@a& (0+255),w,b
  8661  003796  0100               	movlb	0	; () banked
  8662  003798  0392               	mulwf	___flmul@b& (0+255),b
  8663  00379A  CFF3 F0A9          	movff	prodl,___flmul@temp
  8664  00379E  CFF4 F0AA          	movff	prodh,___flmul@temp+1
  8665                           
  8666                           ; BSR set to: 0
  8667  0037A2  0100               	movlb	0	; () banked
  8668  0037A4  51A9               	movf	___flmul@temp& (0+255),w,b
  8669  0037A6  0100               	movlb	0	; () banked
  8670  0037A8  27A0               	addwf	___flmul@grs& (0+255),f,b
  8671  0037AA  0100               	movlb	0	; () banked
  8672  0037AC  51AA               	movf	(___flmul@temp+1)& (0+255),w,b
  8673  0037AE  0100               	movlb	0	; () banked
  8674  0037B0  23A1               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8675  0037B2  0E00               	movlw	0
  8676  0037B4  0100               	movlb	0	; () banked
  8677  0037B6  23A2               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8678  0037B8  0E00               	movlw	0
  8679  0037BA  0100               	movlb	0	; () banked
  8680  0037BC  23A3               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8681                           
  8682                           ; BSR set to: 0
  8683  0037BE  0100               	movlb	0	; () banked
  8684  0037C0  5198               	movf	(___flmul@a+2)& (0+255),w,b
  8685  0037C2  0100               	movlb	0	; () banked
  8686  0037C4  0393               	mulwf	(___flmul@b+1)& (0+255),b
  8687  0037C6  CFF3 F0A9          	movff	prodl,___flmul@temp
  8688  0037CA  CFF4 F0AA          	movff	prodh,___flmul@temp+1
  8689  0037CE  0100               	movlb	0	; () banked
  8690  0037D0  51A9               	movf	___flmul@temp& (0+255),w,b
  8691  0037D2  0100               	movlb	0	; () banked
  8692  0037D4  27A5               	addwf	___flmul@prod& (0+255),f,b
  8693  0037D6  0100               	movlb	0	; () banked
  8694  0037D8  51AA               	movf	(___flmul@temp+1)& (0+255),w,b
  8695  0037DA  0100               	movlb	0	; () banked
  8696  0037DC  23A6               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8697  0037DE  0E00               	movlw	0
  8698  0037E0  0100               	movlb	0	; () banked
  8699  0037E2  23A7               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8700  0037E4  0E00               	movlw	0
  8701  0037E6  0100               	movlb	0	; () banked
  8702  0037E8  23A8               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8703                           
  8704                           ; BSR set to: 0
  8705  0037EA  0100               	movlb	0	; () banked
  8706  0037EC  5197               	movf	(___flmul@a+1)& (0+255),w,b
  8707  0037EE  0100               	movlb	0	; () banked
  8708  0037F0  0394               	mulwf	(___flmul@b+2)& (0+255),b
  8709  0037F2  CFF3 F0A9          	movff	prodl,___flmul@temp
  8710  0037F6  CFF4 F0AA          	movff	prodh,___flmul@temp+1
  8711                           
  8712                           ; BSR set to: 0
  8713  0037FA  0100               	movlb	0	; () banked
  8714  0037FC  51A9               	movf	___flmul@temp& (0+255),w,b
  8715  0037FE  0100               	movlb	0	; () banked
  8716  003800  27A5               	addwf	___flmul@prod& (0+255),f,b
  8717  003802  0100               	movlb	0	; () banked
  8718  003804  51AA               	movf	(___flmul@temp+1)& (0+255),w,b
  8719  003806  0100               	movlb	0	; () banked
  8720  003808  23A6               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8721  00380A  0E00               	movlw	0
  8722  00380C  0100               	movlb	0	; () banked
  8723  00380E  23A7               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8724  003810  0E00               	movlw	0
  8725  003812  0100               	movlb	0	; () banked
  8726  003814  23A8               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8727  003816  0100               	movlb	0	; () banked
  8728  003818  5198               	movf	(___flmul@a+2)& (0+255),w,b
  8729  00381A  0100               	movlb	0	; () banked
  8730  00381C  0394               	mulwf	(___flmul@b+2)& (0+255),b
  8731  00381E  CFF3 F0A9          	movff	prodl,___flmul@temp
  8732  003822  CFF4 F0AA          	movff	prodh,___flmul@temp+1
  8733                           
  8734                           ; BSR set to: 0
  8735  003826  0100               	movlb	0	; () banked
  8736  003828  51A9               	movf	___flmul@temp& (0+255),w,b
  8737  00382A  0100               	movlb	0	; () banked
  8738  00382C  6F9A               	movwf	??___flmul& (0+255),b
  8739  00382E  0100               	movlb	0	; () banked
  8740  003830  51AA               	movf	(___flmul@temp+1)& (0+255),w,b
  8741  003832  0100               	movlb	0	; () banked
  8742  003834  6F9B               	movwf	(??___flmul+1)& (0+255),b
  8743  003836  0100               	movlb	0	; () banked
  8744  003838  6B9C               	clrf	(??___flmul+2)& (0+255),b
  8745  00383A  0100               	movlb	0	; () banked
  8746  00383C  6B9D               	clrf	(??___flmul+3)& (0+255),b
  8747  00383E  C09C  F09D         	movff	??___flmul+2,??___flmul+3
  8748  003842  C09B  F09C         	movff	??___flmul+1,??___flmul+2
  8749  003846  C09A  F09B         	movff	??___flmul,??___flmul+1
  8750  00384A  0100               	movlb	0	; () banked
  8751  00384C  6B9A               	clrf	??___flmul& (0+255),b
  8752  00384E  0100               	movlb	0	; () banked
  8753  003850  519A               	movf	??___flmul& (0+255),w,b
  8754  003852  0100               	movlb	0	; () banked
  8755  003854  27A5               	addwf	___flmul@prod& (0+255),f,b
  8756  003856  0100               	movlb	0	; () banked
  8757  003858  519B               	movf	(??___flmul+1)& (0+255),w,b
  8758  00385A  0100               	movlb	0	; () banked
  8759  00385C  23A6               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8760  00385E  0100               	movlb	0	; () banked
  8761  003860  519C               	movf	(??___flmul+2)& (0+255),w,b
  8762  003862  0100               	movlb	0	; () banked
  8763  003864  23A7               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8764  003866  0100               	movlb	0	; () banked
  8765  003868  519D               	movf	(??___flmul+3)& (0+255),w,b
  8766  00386A  0100               	movlb	0	; () banked
  8767  00386C  23A8               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8768                           
  8769                           ; BSR set to: 0
  8770  00386E  C0A0  F09A         	movff	___flmul@grs,??___flmul
  8771  003872  C0A1  F09B         	movff	___flmul@grs+1,??___flmul+1
  8772  003876  C0A2  F09C         	movff	___flmul@grs+2,??___flmul+2
  8773  00387A  C0A3  F09D         	movff	___flmul@grs+3,??___flmul+3
  8774  00387E  0E19               	movlw	25
  8775  003880  D006               	goto	u9120
  8776  003882                     u9125:
  8777  003882  0100               	movlb	0	; () banked
  8778  003884  90D8               	bcf	status,0,c
  8779  003886  339D               	rrcf	(??___flmul+3)& (0+255),f,b
  8780  003888  339C               	rrcf	(??___flmul+2)& (0+255),f,b
  8781  00388A  339B               	rrcf	(??___flmul+1)& (0+255),f,b
  8782  00388C  339A               	rrcf	??___flmul& (0+255),f,b
  8783  00388E                     u9120:
  8784  00388E  2EE8               	decfsz	wreg,f,c
  8785  003890  D7F8               	goto	u9125
  8786  003892  0100               	movlb	0	; () banked
  8787  003894  519A               	movf	??___flmul& (0+255),w,b
  8788  003896  0100               	movlb	0	; () banked
  8789  003898  27A5               	addwf	___flmul@prod& (0+255),f,b
  8790  00389A  0100               	movlb	0	; () banked
  8791  00389C  519B               	movf	(??___flmul+1)& (0+255),w,b
  8792  00389E  0100               	movlb	0	; () banked
  8793  0038A0  23A6               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8794  0038A2  0100               	movlb	0	; () banked
  8795  0038A4  519C               	movf	(??___flmul+2)& (0+255),w,b
  8796  0038A6  0100               	movlb	0	; () banked
  8797  0038A8  23A7               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8798  0038AA  0100               	movlb	0	; () banked
  8799  0038AC  519D               	movf	(??___flmul+3)& (0+255),w,b
  8800  0038AE  0100               	movlb	0	; () banked
  8801  0038B0  23A8               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8802                           
  8803                           ; BSR set to: 0
  8804  0038B2  C0A2  F0A3         	movff	___flmul@grs+2,___flmul@grs+3
  8805  0038B6  C0A1  F0A2         	movff	___flmul@grs+1,___flmul@grs+2
  8806  0038BA  C0A0  F0A1         	movff	___flmul@grs,___flmul@grs+1
  8807  0038BE  0100               	movlb	0	; () banked
  8808  0038C0  6BA0               	clrf	___flmul@grs& (0+255),b
  8809                           
  8810                           ; BSR set to: 0
  8811  0038C2  0100               	movlb	0	; () banked
  8812  0038C4  519F               	movf	___flmul@aexp& (0+255),w,b
  8813  0038C6  C0A4  F09A         	movff	___flmul@bexp,??___flmul
  8814  0038CA  0100               	movlb	0	; () banked
  8815  0038CC  6B9B               	clrf	(??___flmul+1)& (0+255),b
  8816  0038CE  0100               	movlb	0	; () banked
  8817  0038D0  279A               	addwf	??___flmul& (0+255),f,b
  8818  0038D2  0E00               	movlw	0
  8819  0038D4  239B               	addwfc	(??___flmul+1)& (0+255),f,b
  8820  0038D6  0E82               	movlw	130
  8821  0038D8  0100               	movlb	0	; () banked
  8822  0038DA  259A               	addwf	??___flmul& (0+255),w,b
  8823  0038DC  0100               	movlb	0	; () banked
  8824  0038DE  6FA9               	movwf	___flmul@temp& (0+255),b
  8825  0038E0  0EFF               	movlw	255
  8826  0038E2  0100               	movlb	0	; () banked
  8827  0038E4  219B               	addwfc	(??___flmul+1)& (0+255),w,b
  8828  0038E6  0100               	movlb	0	; () banked
  8829  0038E8  6FAA               	movwf	(___flmul@temp+1)& (0+255),b
  8830  0038EA  D015               	goto	l7026
  8831  0038EC                     l7020:
  8832                           
  8833                           ; BSR set to: 0
  8834  0038EC  0100               	movlb	0	; () banked
  8835  0038EE  90D8               	bcf	status,0,c
  8836  0038F0  37A5               	rlcf	___flmul@prod& (0+255),f,b
  8837  0038F2  37A6               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8838  0038F4  37A7               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8839  0038F6  37A8               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8840                           
  8841                           ; BSR set to: 0
  8842  0038F8  0100               	movlb	0	; () banked
  8843  0038FA  AFA3               	btfss	(___flmul@grs+3)& (0+255),7,b
  8844  0038FC  D002               	goto	l1442
  8845                           
  8846                           ; BSR set to: 0
  8847  0038FE  0100               	movlb	0	; () banked
  8848  003900  81A5               	bsf	___flmul@prod& (0+255),0,b
  8849  003902                     l1442:
  8850                           
  8851                           ; BSR set to: 0
  8852  003902  0100               	movlb	0	; () banked
  8853  003904  90D8               	bcf	status,0,c
  8854  003906  37A0               	rlcf	___flmul@grs& (0+255),f,b
  8855  003908  37A1               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8856  00390A  37A2               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8857  00390C  37A3               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8858  00390E  0100               	movlb	0	; () banked
  8859  003910  07A9               	decf	___flmul@temp& (0+255),f,b
  8860  003912  A0D8               	btfss	status,0,c
  8861  003914  07AA               	decf	(___flmul@temp+1)& (0+255),f,b
  8862  003916                     l7026:
  8863                           
  8864                           ; BSR set to: 0
  8865  003916  0100               	movlb	0	; () banked
  8866  003918  AFA7               	btfss	(___flmul@prod+2)& (0+255),7,b
  8867  00391A  D7E8               	goto	l7020
  8868                           
  8869                           ; BSR set to: 0
  8870                           
  8871                           ; BSR set to: 0
  8872  00391C  0E00               	movlw	0
  8873  00391E  0100               	movlb	0	; () banked
  8874  003920  6F9F               	movwf	___flmul@aexp& (0+255),b
  8875                           
  8876                           ; BSR set to: 0
  8877  003922  0100               	movlb	0	; () banked
  8878  003924  AFA3               	btfss	(___flmul@grs+3)& (0+255),7,b
  8879  003926  D024               	goto	l1444
  8880                           
  8881                           ; BSR set to: 0
  8882  003928  0EFF               	movlw	255
  8883  00392A  0100               	movlb	0	; () banked
  8884  00392C  15A0               	andwf	___flmul@grs& (0+255),w,b
  8885  00392E  0100               	movlb	0	; () banked
  8886  003930  6F9A               	movwf	??___flmul& (0+255),b
  8887  003932  0EFF               	movlw	255
  8888  003934  0100               	movlb	0	; () banked
  8889  003936  15A1               	andwf	(___flmul@grs+1)& (0+255),w,b
  8890  003938  0100               	movlb	0	; () banked
  8891  00393A  6F9B               	movwf	(??___flmul+1)& (0+255),b
  8892  00393C  0EFF               	movlw	255
  8893  00393E  0100               	movlb	0	; () banked
  8894  003940  15A2               	andwf	(___flmul@grs+2)& (0+255),w,b
  8895  003942  0100               	movlb	0	; () banked
  8896  003944  6F9C               	movwf	(??___flmul+2)& (0+255),b
  8897  003946  0E7F               	movlw	127
  8898  003948  0100               	movlb	0	; () banked
  8899  00394A  15A3               	andwf	(___flmul@grs+3)& (0+255),w,b
  8900  00394C  0100               	movlb	0	; () banked
  8901  00394E  6F9D               	movwf	(??___flmul+3)& (0+255),b
  8902  003950  0100               	movlb	0	; () banked
  8903  003952  519A               	movf	??___flmul& (0+255),w,b
  8904  003954  0100               	movlb	0	; () banked
  8905  003956  119B               	iorwf	(??___flmul+1)& (0+255),w,b
  8906  003958  0100               	movlb	0	; () banked
  8907  00395A  119C               	iorwf	(??___flmul+2)& (0+255),w,b
  8908  00395C  0100               	movlb	0	; () banked
  8909  00395E  119D               	iorwf	(??___flmul+3)& (0+255),w,b
  8910  003960  A4D8               	btfss	status,2,c
  8911  003962  D003               	goto	l7036
  8912                           
  8913                           ; BSR set to: 0
  8914                           
  8915                           ; BSR set to: 0
  8916  003964  0100               	movlb	0	; () banked
  8917  003966  A1A5               	btfss	___flmul@prod& (0+255),0,b
  8918  003968  D003               	goto	l1444
  8919  00396A                     l7036:
  8920                           
  8921                           ; BSR set to: 0
  8922  00396A  0E01               	movlw	1
  8923  00396C  0100               	movlb	0	; () banked
  8924  00396E  6F9F               	movwf	___flmul@aexp& (0+255),b
  8925  003970                     l1444:
  8926                           
  8927                           ; BSR set to: 0
  8928  003970  0100               	movlb	0	; () banked
  8929  003972  519F               	movf	___flmul@aexp& (0+255),w,b
  8930  003974  0100               	movlb	0	; () banked
  8931  003976  B4D8               	btfsc	status,2,c
  8932  003978  D023               	goto	l7046
  8933                           
  8934                           ; BSR set to: 0
  8935  00397A  0E01               	movlw	1
  8936  00397C  0100               	movlb	0	; () banked
  8937  00397E  27A5               	addwf	___flmul@prod& (0+255),f,b
  8938  003980  0E00               	movlw	0
  8939  003982  23A6               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8940  003984  23A7               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8941  003986  23A8               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8942                           
  8943                           ; BSR set to: 0
  8944  003988  0100               	movlb	0	; () banked
  8945  00398A  A1A8               	btfss	(___flmul@prod+3)& (0+255),0,b
  8946  00398C  D019               	goto	l7046
  8947                           
  8948                           ; BSR set to: 0
  8949  00398E  C0A5  F09A         	movff	___flmul@prod,??___flmul
  8950  003992  C0A6  F09B         	movff	___flmul@prod+1,??___flmul+1
  8951  003996  C0A7  F09C         	movff	___flmul@prod+2,??___flmul+2
  8952  00399A  C0A8  F09D         	movff	___flmul@prod+3,??___flmul+3
  8953  00399E  0100               	movlb	0	; () banked
  8954  0039A0  359D               	rlcf	(??___flmul+3)& (0+255),w,b
  8955  0039A2  339D               	rrcf	(??___flmul+3)& (0+255),f,b
  8956  0039A4  339C               	rrcf	(??___flmul+2)& (0+255),f,b
  8957  0039A6  339B               	rrcf	(??___flmul+1)& (0+255),f,b
  8958  0039A8  339A               	rrcf	??___flmul& (0+255),f,b
  8959  0039AA  C09A  F0A5         	movff	??___flmul,___flmul@prod
  8960  0039AE  C09B  F0A6         	movff	??___flmul+1,___flmul@prod+1
  8961  0039B2  C09C  F0A7         	movff	??___flmul+2,___flmul@prod+2
  8962  0039B6  C09D  F0A8         	movff	??___flmul+3,___flmul@prod+3
  8963                           
  8964                           ; BSR set to: 0
  8965  0039BA  0100               	movlb	0	; () banked
  8966  0039BC  4BA9               	infsnz	___flmul@temp& (0+255),f,b
  8967  0039BE  2BAA               	incf	(___flmul@temp+1)& (0+255),f,b
  8968  0039C0                     l7046:
  8969                           
  8970                           ; BSR set to: 0
  8971  0039C0  0100               	movlb	0	; () banked
  8972  0039C2  BFAA               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8973  0039C4  D010               	goto	l7050
  8974  0039C6  0100               	movlb	0	; () banked
  8975  0039C8  51AA               	movf	(___flmul@temp+1)& (0+255),w,b
  8976  0039CA  E104               	bnz	u9200
  8977  0039CC  0100               	movlb	0	; () banked
  8978  0039CE  29A9               	incf	___flmul@temp& (0+255),w,b
  8979  0039D0  A0D8               	btfss	status,0,c
  8980  0039D2  D009               	goto	l7050
  8981  0039D4                     u9200:
  8982                           
  8983                           ; BSR set to: 0
  8984  0039D4  0E00               	movlw	0
  8985  0039D6  0100               	movlb	0	; () banked
  8986  0039D8  6FA5               	movwf	___flmul@prod& (0+255),b
  8987  0039DA  0E00               	movlw	0
  8988  0039DC  6FA6               	movwf	(___flmul@prod+1)& (0+255),b
  8989  0039DE  0E80               	movlw	128
  8990  0039E0  6FA7               	movwf	(___flmul@prod+2)& (0+255),b
  8991  0039E2  0E7F               	movlw	127
  8992  0039E4  D02B               	goto	L2
  8993  0039E6                     l7050:
  8994                           
  8995                           ; BSR set to: 0
  8996  0039E6  0100               	movlb	0	; () banked
  8997  0039E8  BFAA               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8998  0039EA  D007               	goto	l7052
  8999  0039EC  0100               	movlb	0	; () banked
  9000  0039EE  51AA               	movf	(___flmul@temp+1)& (0+255),w,b
  9001  0039F0  E111               	bnz	l1452
  9002  0039F2  0100               	movlb	0	; () banked
  9003  0039F4  05A9               	decf	___flmul@temp& (0+255),w,b
  9004  0039F6  B0D8               	btfsc	status,0,c
  9005  0039F8  D00D               	goto	l1452
  9006  0039FA                     l7052:
  9007                           
  9008                           ; BSR set to: 0
  9009  0039FA  0E00               	movlw	0
  9010  0039FC  0100               	movlb	0	; () banked
  9011  0039FE  6FA5               	movwf	___flmul@prod& (0+255),b
  9012  003A00  0E00               	movlw	0
  9013  003A02  6FA6               	movwf	(___flmul@prod+1)& (0+255),b
  9014  003A04  0E00               	movlw	0
  9015  003A06  6FA7               	movwf	(___flmul@prod+2)& (0+255),b
  9016  003A08  0E00               	movlw	0
  9017  003A0A  6FA8               	movwf	(___flmul@prod+3)& (0+255),b
  9018  003A0C  0E00               	movlw	0
  9019  003A0E  0100               	movlb	0	; () banked
  9020  003A10  6F9E               	movwf	___flmul@sign& (0+255),b
  9021  003A12  D015               	goto	l7062
  9022  003A14                     l1452:
  9023                           
  9024                           ; BSR set to: 0
  9025  003A14  C0A9  F0A4         	movff	___flmul@temp,___flmul@bexp
  9026                           
  9027                           ; BSR set to: 0
  9028  003A18  0EFF               	movlw	255
  9029  003A1A  0100               	movlb	0	; () banked
  9030  003A1C  17A5               	andwf	___flmul@prod& (0+255),f,b
  9031  003A1E  0EFF               	movlw	255
  9032  003A20  17A6               	andwf	(___flmul@prod+1)& (0+255),f,b
  9033  003A22  0E7F               	movlw	127
  9034  003A24  17A7               	andwf	(___flmul@prod+2)& (0+255),f,b
  9035  003A26  0E00               	movlw	0
  9036  003A28  17A8               	andwf	(___flmul@prod+3)& (0+255),f,b
  9037                           
  9038                           ; BSR set to: 0
  9039  003A2A  0100               	movlb	0	; () banked
  9040  003A2C  A1A4               	btfss	___flmul@bexp& (0+255),0,b
  9041  003A2E  D002               	goto	l7060
  9042                           
  9043                           ; BSR set to: 0
  9044  003A30  0100               	movlb	0	; () banked
  9045  003A32  8FA7               	bsf	(___flmul@prod+2)& (0+255),7,b
  9046  003A34                     l7060:
  9047                           
  9048                           ; BSR set to: 0
  9049  003A34  0100               	movlb	0	; () banked
  9050  003A36  90D8               	bcf	status,0,c
  9051  003A38  31A4               	rrcf	___flmul@bexp& (0+255),w,b
  9052  003A3A  0100               	movlb	0	; () banked
  9053  003A3C                     L2:
  9054  003A3C  6FA8               	movwf	(___flmul@prod+3)& (0+255),b
  9055  003A3E                     l7062:
  9056                           
  9057                           ; BSR set to: 0
  9058  003A3E  0100               	movlb	0	; () banked
  9059  003A40  519E               	movf	___flmul@sign& (0+255),w,b
  9060  003A42  0100               	movlb	0	; () banked
  9061  003A44  13A8               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9062                           
  9063                           ; BSR set to: 0
  9064  003A46  C0A5  F092         	movff	___flmul@prod,?___flmul
  9065  003A4A  C0A6  F093         	movff	___flmul@prod+1,?___flmul+1
  9066  003A4E  C0A7  F094         	movff	___flmul@prod+2,?___flmul+2
  9067  003A52  C0A8  F095         	movff	___flmul@prod+3,?___flmul+3
  9068  003A56  0012               	return	
  9069  003A58                     __end_of___flmul:
  9070                           	opt stack 0
  9071                           tblptru	equ	0xFF8
  9072                           tblptrh	equ	0xFF7
  9073                           tblptrl	equ	0xFF6
  9074                           tablat	equ	0xFF5
  9075                           prodh	equ	0xFF4
  9076                           prodl	equ	0xFF3
  9077                           postinc0	equ	0xFEE
  9078                           wreg	equ	0xFE8
  9079                           postdec1	equ	0xFE5
  9080                           fsr1l	equ	0xFE1
  9081                           indf2	equ	0xFDF
  9082                           postinc2	equ	0xFDE
  9083                           postdec2	equ	0xFDD
  9084                           fsr2h	equ	0xFDA
  9085                           fsr2l	equ	0xFD9
  9086                           status	equ	0xFD8
  9087                           
  9088 ;; *************** function ___fladd *****************
  9089 ;; Defined at:
  9090 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcadd.c"
  9091 ;; Parameters:    Size  Location     Type
  9092 ;;  b               4   75[BANK0 ] unsigned char 
  9093 ;;  a               4   79[BANK0 ] unsigned char 
  9094 ;; Auto vars:     Size  Location     Type
  9095 ;;  grs             1   94[BANK0 ] unsigned char 
  9096 ;;  bexp            1   93[BANK0 ] unsigned char 
  9097 ;;  aexp            1   92[BANK0 ] unsigned char 
  9098 ;;  signs           1   91[BANK0 ] unsigned char 
  9099 ;; Return value:  Size  Location     Type
  9100 ;;                  4   75[BANK0 ] unsigned char 
  9101 ;; Registers used:
  9102 ;;		wreg, status,2, status,0
  9103 ;; Tracked objects:
  9104 ;;		On entry : 0/0
  9105 ;;		On exit  : 0/0
  9106 ;;		Unchanged: 0/0
  9107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9108 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9109 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9110 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9111 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9112 ;;Total ram usage:       20 bytes
  9113 ;; Hardware stack levels used:    1
  9114 ;; Hardware stack levels required when called:    5
  9115 ;; This function calls:
  9116 ;;		Nothing
  9117 ;; This function is called by:
  9118 ;;		_park_routine
  9119 ;;		_parallelo
  9120 ;;		_matematica
  9121 ;;		_asin
  9122 ;;		_atan
  9123 ;;		_cos
  9124 ;;		_eval_poly
  9125 ;;		_sin
  9126 ;;		___flsub
  9127 ;;		_floor
  9128 ;; This function uses a non-reentrant model
  9129 ;;
  9130                           
  9131                           	psect	text23
  9132  00310A                     __ptext23:
  9133                           	opt stack 0
  9134  00310A                     ___fladd:
  9135                           	opt stack 20
  9136                           
  9137                           ; BSR set to: 0
  9138                           ;incstack = 0
  9139  00310A  0100               	movlb	0	; () banked
  9140  00310C  51AE               	movf	(___fladd@b+3)& (0+255),w,b
  9141  00310E  0B80               	andlw	128
  9142  003110  0100               	movlb	0	; () banked
  9143  003112  6FBB               	movwf	___fladd@signs& (0+255),b
  9144  003114  0100               	movlb	0	; () banked
  9145  003116  51AE               	movf	(___fladd@b+3)& (0+255),w,b
  9146  003118  25AE               	addwf	(___fladd@b+3)& (0+255),w,b
  9147  00311A  0100               	movlb	0	; () banked
  9148  00311C  6FBD               	movwf	___fladd@bexp& (0+255),b
  9149                           
  9150                           ; BSR set to: 0
  9151  00311E  0100               	movlb	0	; () banked
  9152  003120  AFAD               	btfss	(___fladd@b+2)& (0+255),7,b
  9153  003122  D002               	goto	l6742
  9154                           
  9155                           ; BSR set to: 0
  9156  003124  0100               	movlb	0	; () banked
  9157  003126  81BD               	bsf	___fladd@bexp& (0+255),0,b
  9158  003128                     l6742:
  9159                           
  9160                           ; BSR set to: 0
  9161  003128  0100               	movlb	0	; () banked
  9162  00312A  51BD               	movf	___fladd@bexp& (0+255),w,b
  9163  00312C  0100               	movlb	0	; () banked
  9164  00312E  B4D8               	btfsc	status,2,c
  9165  003130  D012               	goto	l6752
  9166                           
  9167                           ; BSR set to: 0
  9168  003132  0100               	movlb	0	; () banked
  9169  003134  29BD               	incf	___fladd@bexp& (0+255),w,b
  9170  003136  A4D8               	btfss	status,2,c
  9171  003138  D009               	goto	l6748
  9172                           
  9173                           ; BSR set to: 0
  9174  00313A  0E00               	movlw	0
  9175  00313C  0100               	movlb	0	; () banked
  9176  00313E  6FAB               	movwf	___fladd@b& (0+255),b
  9177  003140  0E00               	movlw	0
  9178  003142  6FAC               	movwf	(___fladd@b+1)& (0+255),b
  9179  003144  0E00               	movlw	0
  9180  003146  6FAD               	movwf	(___fladd@b+2)& (0+255),b
  9181  003148  0E00               	movlw	0
  9182  00314A  6FAE               	movwf	(___fladd@b+3)& (0+255),b
  9183  00314C                     l6748:
  9184                           
  9185                           ; BSR set to: 0
  9186  00314C  0100               	movlb	0	; () banked
  9187  00314E  8FAD               	bsf	(___fladd@b+2)& (0+255),7,b
  9188                           
  9189                           ; BSR set to: 0
  9190  003150  0E00               	movlw	0
  9191  003152  0100               	movlb	0	; () banked
  9192  003154  D008               	goto	L3
  9193  003156                     l6752:
  9194                           
  9195                           ; BSR set to: 0
  9196  003156  0E00               	movlw	0
  9197  003158  0100               	movlb	0	; () banked
  9198  00315A  6FAB               	movwf	___fladd@b& (0+255),b
  9199  00315C  0E00               	movlw	0
  9200  00315E  6FAC               	movwf	(___fladd@b+1)& (0+255),b
  9201  003160  0E00               	movlw	0
  9202  003162  6FAD               	movwf	(___fladd@b+2)& (0+255),b
  9203  003164  0E00               	movlw	0
  9204  003166                     L3:
  9205  003166  6FAE               	movwf	(___fladd@b+3)& (0+255),b
  9206                           
  9207                           ; BSR set to: 0
  9208                           
  9209                           ; BSR set to: 0
  9210  003168  0100               	movlb	0	; () banked
  9211  00316A  51B2               	movf	(___fladd@a+3)& (0+255),w,b
  9212  00316C  0B80               	andlw	128
  9213  00316E  0100               	movlb	0	; () banked
  9214  003170  6FBC               	movwf	___fladd@aexp& (0+255),b
  9215                           
  9216                           ; BSR set to: 0
  9217  003172  0100               	movlb	0	; () banked
  9218  003174  51BB               	movf	___fladd@signs& (0+255),w,b
  9219  003176  0100               	movlb	0	; () banked
  9220  003178  19BC               	xorwf	___fladd@aexp& (0+255),w,b
  9221  00317A  B4D8               	btfsc	status,2,c
  9222  00317C  D002               	goto	l6760
  9223                           
  9224                           ; BSR set to: 0
  9225  00317E  0100               	movlb	0	; () banked
  9226  003180  8DBB               	bsf	___fladd@signs& (0+255),6,b
  9227  003182                     l6760:
  9228                           
  9229                           ; BSR set to: 0
  9230  003182  0100               	movlb	0	; () banked
  9231  003184  51B2               	movf	(___fladd@a+3)& (0+255),w,b
  9232  003186  25B2               	addwf	(___fladd@a+3)& (0+255),w,b
  9233  003188  0100               	movlb	0	; () banked
  9234  00318A  6FBC               	movwf	___fladd@aexp& (0+255),b
  9235                           
  9236                           ; BSR set to: 0
  9237  00318C  0100               	movlb	0	; () banked
  9238  00318E  AFB1               	btfss	(___fladd@a+2)& (0+255),7,b
  9239  003190  D002               	goto	l6766
  9240                           
  9241                           ; BSR set to: 0
  9242  003192  0100               	movlb	0	; () banked
  9243  003194  81BC               	bsf	___fladd@aexp& (0+255),0,b
  9244  003196                     l6766:
  9245                           
  9246                           ; BSR set to: 0
  9247  003196  0100               	movlb	0	; () banked
  9248  003198  51BC               	movf	___fladd@aexp& (0+255),w,b
  9249  00319A  0100               	movlb	0	; () banked
  9250  00319C  B4D8               	btfsc	status,2,c
  9251  00319E  D012               	goto	l6776
  9252                           
  9253                           ; BSR set to: 0
  9254  0031A0  0100               	movlb	0	; () banked
  9255  0031A2  29BC               	incf	___fladd@aexp& (0+255),w,b
  9256  0031A4  A4D8               	btfss	status,2,c
  9257  0031A6  D009               	goto	l6772
  9258                           
  9259                           ; BSR set to: 0
  9260  0031A8  0E00               	movlw	0
  9261  0031AA  0100               	movlb	0	; () banked
  9262  0031AC  6FAF               	movwf	___fladd@a& (0+255),b
  9263  0031AE  0E00               	movlw	0
  9264  0031B0  6FB0               	movwf	(___fladd@a+1)& (0+255),b
  9265  0031B2  0E00               	movlw	0
  9266  0031B4  6FB1               	movwf	(___fladd@a+2)& (0+255),b
  9267  0031B6  0E00               	movlw	0
  9268  0031B8  6FB2               	movwf	(___fladd@a+3)& (0+255),b
  9269  0031BA                     l6772:
  9270                           
  9271                           ; BSR set to: 0
  9272  0031BA  0100               	movlb	0	; () banked
  9273  0031BC  8FB1               	bsf	(___fladd@a+2)& (0+255),7,b
  9274                           
  9275                           ; BSR set to: 0
  9276  0031BE  0E00               	movlw	0
  9277  0031C0  0100               	movlb	0	; () banked
  9278  0031C2  D008               	goto	L4
  9279  0031C4                     l6776:
  9280                           
  9281                           ; BSR set to: 0
  9282  0031C4  0E00               	movlw	0
  9283  0031C6  0100               	movlb	0	; () banked
  9284  0031C8  6FAF               	movwf	___fladd@a& (0+255),b
  9285  0031CA  0E00               	movlw	0
  9286  0031CC  6FB0               	movwf	(___fladd@a+1)& (0+255),b
  9287  0031CE  0E00               	movlw	0
  9288  0031D0  6FB1               	movwf	(___fladd@a+2)& (0+255),b
  9289  0031D2  0E00               	movlw	0
  9290  0031D4                     L4:
  9291  0031D4  6FB2               	movwf	(___fladd@a+3)& (0+255),b
  9292                           
  9293                           ; BSR set to: 0
  9294                           
  9295                           ; BSR set to: 0
  9296  0031D6  0100               	movlb	0	; () banked
  9297  0031D8  51BD               	movf	___fladd@bexp& (0+255),w,b
  9298  0031DA  0100               	movlb	0	; () banked
  9299  0031DC  5DBC               	subwf	___fladd@aexp& (0+255),w,b
  9300  0031DE  B0D8               	btfsc	status,0,c
  9301  0031E0  D024               	goto	l6814
  9302                           
  9303                           ; BSR set to: 0
  9304  0031E2  0100               	movlb	0	; () banked
  9305  0031E4  ADBB               	btfss	___fladd@signs& (0+255),6,b
  9306  0031E6  D003               	goto	l6784
  9307                           
  9308                           ; BSR set to: 0
  9309  0031E8  0E80               	movlw	128
  9310  0031EA  0100               	movlb	0	; () banked
  9311  0031EC  1BBB               	xorwf	___fladd@signs& (0+255),f,b
  9312  0031EE                     l6784:
  9313                           
  9314                           ; BSR set to: 0
  9315  0031EE  C0BD  F0BE         	movff	___fladd@bexp,___fladd@grs
  9316                           
  9317                           ; BSR set to: 0
  9318  0031F2  C0BC  F0BD         	movff	___fladd@aexp,___fladd@bexp
  9319                           
  9320                           ; BSR set to: 0
  9321  0031F6  C0BE  F0BC         	movff	___fladd@grs,___fladd@aexp
  9322                           
  9323                           ; BSR set to: 0
  9324  0031FA  C0AB  F0BE         	movff	___fladd@b,___fladd@grs
  9325                           
  9326                           ; BSR set to: 0
  9327  0031FE  C0AF  F0AB         	movff	___fladd@a,___fladd@b
  9328                           
  9329                           ; BSR set to: 0
  9330  003202  C0BE  F0AF         	movff	___fladd@grs,___fladd@a
  9331                           
  9332                           ; BSR set to: 0
  9333  003206  C0AC  F0BE         	movff	___fladd@b+1,___fladd@grs
  9334                           
  9335                           ; BSR set to: 0
  9336  00320A  C0B0  F0AC         	movff	___fladd@a+1,___fladd@b+1
  9337                           
  9338                           ; BSR set to: 0
  9339  00320E  C0BE  F0B0         	movff	___fladd@grs,___fladd@a+1
  9340                           
  9341                           ; BSR set to: 0
  9342  003212  C0AD  F0BE         	movff	___fladd@b+2,___fladd@grs
  9343                           
  9344                           ; BSR set to: 0
  9345  003216  C0B1  F0AD         	movff	___fladd@a+2,___fladd@b+2
  9346                           
  9347                           ; BSR set to: 0
  9348  00321A  C0BE  F0B1         	movff	___fladd@grs,___fladd@a+2
  9349                           
  9350                           ; BSR set to: 0
  9351  00321E  C0AE  F0BE         	movff	___fladd@b+3,___fladd@grs
  9352                           
  9353                           ; BSR set to: 0
  9354  003222  C0B2  F0AE         	movff	___fladd@a+3,___fladd@b+3
  9355                           
  9356                           ; BSR set to: 0
  9357  003226  C0BE  F0B2         	movff	___fladd@grs,___fladd@a+3
  9358  00322A                     l6814:
  9359                           
  9360                           ; BSR set to: 0
  9361  00322A  0E00               	movlw	0
  9362  00322C  0100               	movlb	0	; () banked
  9363  00322E  6FBE               	movwf	___fladd@grs& (0+255),b
  9364                           
  9365                           ; BSR set to: 0
  9366  003230  0100               	movlb	0	; () banked
  9367  003232  51BD               	movf	___fladd@bexp& (0+255),w,b
  9368  003234  0100               	movlb	0	; () banked
  9369  003236  6FB3               	movwf	??___fladd& (0+255),b
  9370  003238  6BB4               	clrf	(??___fladd+1)& (0+255),b
  9371  00323A  0100               	movlb	0	; () banked
  9372  00323C  1FB3               	comf	??___fladd& (0+255),f,b
  9373  00323E  1FB4               	comf	(??___fladd+1)& (0+255),f,b
  9374  003240  4BB3               	infsnz	??___fladd& (0+255),f,b
  9375  003242  2BB4               	incf	(??___fladd+1)& (0+255),f,b
  9376  003244  0100               	movlb	0	; () banked
  9377  003246  51BC               	movf	___fladd@aexp& (0+255),w,b
  9378  003248  0100               	movlb	0	; () banked
  9379  00324A  6FB5               	movwf	(??___fladd+2)& (0+255),b
  9380  00324C  6BB6               	clrf	(??___fladd+3)& (0+255),b
  9381  00324E  0100               	movlb	0	; () banked
  9382  003250  51B3               	movf	??___fladd& (0+255),w,b
  9383  003252  0100               	movlb	0	; () banked
  9384  003254  27B5               	addwf	(??___fladd+2)& (0+255),f,b
  9385  003256  0100               	movlb	0	; () banked
  9386  003258  51B4               	movf	(??___fladd+1)& (0+255),w,b
  9387  00325A  0100               	movlb	0	; () banked
  9388  00325C  23B6               	addwfc	(??___fladd+3)& (0+255),f,b
  9389  00325E  0100               	movlb	0	; () banked
  9390  003260  BFB6               	btfsc	(??___fladd+3)& (0+255),7,b
  9391  003262  D03D               	goto	l1350
  9392  003264  0100               	movlb	0	; () banked
  9393  003266  51B6               	movf	(??___fladd+3)& (0+255),w,b
  9394  003268  E105               	bnz	u8740
  9395  00326A  0E1A               	movlw	26
  9396  00326C  0100               	movlb	0	; () banked
  9397  00326E  5DB5               	subwf	(??___fladd+2)& (0+255),w,b
  9398  003270  A0D8               	btfss	status,0,c
  9399  003272  D035               	goto	l1350
  9400  003274                     u8740:
  9401                           
  9402                           ; BSR set to: 0
  9403  003274  0100               	movlb	0	; () banked
  9404  003276  51AB               	movf	___fladd@b& (0+255),w,b
  9405  003278  0100               	movlb	0	; () banked
  9406  00327A  11AC               	iorwf	(___fladd@b+1)& (0+255),w,b
  9407  00327C  0100               	movlb	0	; () banked
  9408  00327E  11AD               	iorwf	(___fladd@b+2)& (0+255),w,b
  9409  003280  0100               	movlb	0	; () banked
  9410  003282  11AE               	iorwf	(___fladd@b+3)& (0+255),w,b
  9411  003284  B4D8               	btfsc	status,2,c
  9412  003286  D002               	goto	u8750
  9413  003288  0E01               	movlw	1
  9414  00328A  D001               	goto	u8760
  9415  00328C                     u8750:
  9416  00328C  0E00               	movlw	0
  9417  00328E                     u8760:
  9418  00328E  0100               	movlb	0	; () banked
  9419  003290  6FBE               	movwf	___fladd@grs& (0+255),b
  9420                           
  9421                           ; BSR set to: 0
  9422  003292  0E00               	movlw	0
  9423  003294  0100               	movlb	0	; () banked
  9424  003296  6FAB               	movwf	___fladd@b& (0+255),b
  9425  003298  0E00               	movlw	0
  9426  00329A  6FAC               	movwf	(___fladd@b+1)& (0+255),b
  9427  00329C  0E00               	movlw	0
  9428  00329E  6FAD               	movwf	(___fladd@b+2)& (0+255),b
  9429  0032A0  0E00               	movlw	0
  9430  0032A2  6FAE               	movwf	(___fladd@b+3)& (0+255),b
  9431                           
  9432                           ; BSR set to: 0
  9433  0032A4  C0BC  F0BD         	movff	___fladd@aexp,___fladd@bexp
  9434  0032A8  D020               	goto	l1349
  9435  0032AA                     l1351:
  9436                           
  9437                           ; BSR set to: 0
  9438  0032AA  0100               	movlb	0	; () banked
  9439  0032AC  A1BE               	btfss	___fladd@grs& (0+255),0,b
  9440  0032AE  D007               	goto	l6826
  9441                           
  9442                           ; BSR set to: 0
  9443  0032B0  0100               	movlb	0	; () banked
  9444  0032B2  90D8               	bcf	status,0,c
  9445  0032B4  31BE               	rrcf	___fladd@grs& (0+255),w,b
  9446  0032B6  0901               	iorlw	1
  9447  0032B8  0100               	movlb	0	; () banked
  9448  0032BA  6FBE               	movwf	___fladd@grs& (0+255),b
  9449  0032BC  D003               	goto	l6828
  9450  0032BE                     l6826:
  9451                           
  9452                           ; BSR set to: 0
  9453  0032BE  0100               	movlb	0	; () banked
  9454  0032C0  90D8               	bcf	status,0,c
  9455  0032C2  33BE               	rrcf	___fladd@grs& (0+255),f,b
  9456  0032C4                     l6828:
  9457                           
  9458                           ; BSR set to: 0
  9459  0032C4  0100               	movlb	0	; () banked
  9460  0032C6  A1AB               	btfss	___fladd@b& (0+255),0,b
  9461  0032C8  D002               	goto	l6832
  9462                           
  9463                           ; BSR set to: 0
  9464  0032CA  0100               	movlb	0	; () banked
  9465  0032CC  8FBE               	bsf	___fladd@grs& (0+255),7,b
  9466  0032CE                     l6832:
  9467                           
  9468                           ; BSR set to: 0
  9469  0032CE  0100               	movlb	0	; () banked
  9470  0032D0  35AE               	rlcf	(___fladd@b+3)& (0+255),w,b
  9471  0032D2  33AE               	rrcf	(___fladd@b+3)& (0+255),f,b
  9472  0032D4  33AD               	rrcf	(___fladd@b+2)& (0+255),f,b
  9473  0032D6  33AC               	rrcf	(___fladd@b+1)& (0+255),f,b
  9474  0032D8  33AB               	rrcf	___fladd@b& (0+255),f,b
  9475                           
  9476                           ; BSR set to: 0
  9477  0032DA  0100               	movlb	0	; () banked
  9478  0032DC  2BBD               	incf	___fladd@bexp& (0+255),f,b
  9479  0032DE                     l1350:
  9480                           
  9481                           ; BSR set to: 0
  9482  0032DE  0100               	movlb	0	; () banked
  9483  0032E0  51BC               	movf	___fladd@aexp& (0+255),w,b
  9484  0032E2  0100               	movlb	0	; () banked
  9485  0032E4  5DBD               	subwf	___fladd@bexp& (0+255),w,b
  9486  0032E6  A0D8               	btfss	status,0,c
  9487  0032E8  D7E0               	goto	l1351
  9488  0032EA                     l1349:
  9489                           
  9490                           ; BSR set to: 0
  9491  0032EA  0100               	movlb	0	; () banked
  9492  0032EC  BDBB               	btfsc	___fladd@signs& (0+255),6,b
  9493  0032EE  D03F               	goto	l6860
  9494                           
  9495                           ; BSR set to: 0
  9496  0032F0  0100               	movlb	0	; () banked
  9497  0032F2  51BD               	movf	___fladd@bexp& (0+255),w,b
  9498  0032F4  0100               	movlb	0	; () banked
  9499  0032F6  A4D8               	btfss	status,2,c
  9500  0032F8  D00A               	goto	l6842
  9501                           
  9502                           ; BSR set to: 0
  9503  0032FA  0E00               	movlw	0
  9504  0032FC  0100               	movlb	0	; () banked
  9505  0032FE  6FAB               	movwf	?___fladd& (0+255),b
  9506  003300  0E00               	movlw	0
  9507  003302  6FAC               	movwf	(?___fladd+1)& (0+255),b
  9508  003304  0E00               	movlw	0
  9509  003306  6FAD               	movwf	(?___fladd+2)& (0+255),b
  9510  003308  0E00               	movlw	0
  9511  00330A  6FAE               	movwf	(?___fladd+3)& (0+255),b
  9512                           
  9513                           ; BSR set to: 0
  9514  00330C  0012               	return	
  9515  00330E                     l6842:
  9516                           
  9517                           ; BSR set to: 0
  9518  00330E  0100               	movlb	0	; () banked
  9519  003310  51AF               	movf	___fladd@a& (0+255),w,b
  9520  003312  0100               	movlb	0	; () banked
  9521  003314  27AB               	addwf	___fladd@b& (0+255),f,b
  9522  003316  0100               	movlb	0	; () banked
  9523  003318  51B0               	movf	(___fladd@a+1)& (0+255),w,b
  9524  00331A  0100               	movlb	0	; () banked
  9525  00331C  23AC               	addwfc	(___fladd@b+1)& (0+255),f,b
  9526  00331E  0100               	movlb	0	; () banked
  9527  003320  51B1               	movf	(___fladd@a+2)& (0+255),w,b
  9528  003322  0100               	movlb	0	; () banked
  9529  003324  23AD               	addwfc	(___fladd@b+2)& (0+255),f,b
  9530  003326  0100               	movlb	0	; () banked
  9531  003328  51B2               	movf	(___fladd@a+3)& (0+255),w,b
  9532  00332A  0100               	movlb	0	; () banked
  9533  00332C  23AE               	addwfc	(___fladd@b+3)& (0+255),f,b
  9534                           
  9535                           ; BSR set to: 0
  9536  00332E  0100               	movlb	0	; () banked
  9537  003330  A1AE               	btfss	(___fladd@b+3)& (0+255),0,b
  9538  003332  D0CC               	goto	l6896
  9539                           
  9540                           ; BSR set to: 0
  9541  003334  0100               	movlb	0	; () banked
  9542  003336  A1BE               	btfss	___fladd@grs& (0+255),0,b
  9543  003338  D009               	goto	l6850
  9544                           
  9545                           ; BSR set to: 0
  9546  00333A  0100               	movlb	0	; () banked
  9547  00333C  90D8               	bcf	status,0,c
  9548  00333E  33BE               	rrcf	___fladd@grs& (0+255),f,b
  9549  003340  0100               	movlb	0	; () banked
  9550  003342  51BE               	movf	___fladd@grs& (0+255),w,b
  9551  003344  0901               	iorlw	1
  9552  003346  0100               	movlb	0	; () banked
  9553  003348  6FBE               	movwf	___fladd@grs& (0+255),b
  9554  00334A  D003               	goto	l6852
  9555  00334C                     l6850:
  9556                           
  9557                           ; BSR set to: 0
  9558  00334C  0100               	movlb	0	; () banked
  9559  00334E  90D8               	bcf	status,0,c
  9560  003350  33BE               	rrcf	___fladd@grs& (0+255),f,b
  9561  003352                     l6852:
  9562                           
  9563                           ; BSR set to: 0
  9564  003352  0100               	movlb	0	; () banked
  9565  003354  A1AB               	btfss	___fladd@b& (0+255),0,b
  9566  003356  D002               	goto	l6856
  9567                           
  9568                           ; BSR set to: 0
  9569  003358  0100               	movlb	0	; () banked
  9570  00335A  8FBE               	bsf	___fladd@grs& (0+255),7,b
  9571  00335C                     l6856:
  9572                           
  9573                           ; BSR set to: 0
  9574  00335C  0100               	movlb	0	; () banked
  9575  00335E  35AE               	rlcf	(___fladd@b+3)& (0+255),w,b
  9576  003360  33AE               	rrcf	(___fladd@b+3)& (0+255),f,b
  9577  003362  33AD               	rrcf	(___fladd@b+2)& (0+255),f,b
  9578  003364  33AC               	rrcf	(___fladd@b+1)& (0+255),f,b
  9579  003366  33AB               	rrcf	___fladd@b& (0+255),f,b
  9580                           
  9581                           ; BSR set to: 0
  9582  003368  0100               	movlb	0	; () banked
  9583  00336A  2BBD               	incf	___fladd@bexp& (0+255),f,b
  9584                           
  9585                           ; BSR set to: 0
  9586  00336C  D0AF               	goto	l6896
  9587  00336E                     l6860:
  9588                           
  9589                           ; BSR set to: 0
  9590  00336E  0100               	movlb	0	; () banked
  9591  003370  51AF               	movf	___fladd@a& (0+255),w,b
  9592  003372  0100               	movlb	0	; () banked
  9593  003374  5DAB               	subwf	___fladd@b& (0+255),w,b
  9594  003376  0100               	movlb	0	; () banked
  9595  003378  51B0               	movf	(___fladd@a+1)& (0+255),w,b
  9596  00337A  0100               	movlb	0	; () banked
  9597  00337C  59AC               	subwfb	(___fladd@b+1)& (0+255),w,b
  9598  00337E  0100               	movlb	0	; () banked
  9599  003380  51B1               	movf	(___fladd@a+2)& (0+255),w,b
  9600  003382  0100               	movlb	0	; () banked
  9601  003384  59AD               	subwfb	(___fladd@b+2)& (0+255),w,b
  9602  003386  0100               	movlb	0	; () banked
  9603  003388  51AE               	movf	(___fladd@b+3)& (0+255),w,b
  9604  00338A  0A80               	xorlw	128
  9605  00338C  0100               	movlb	0	; () banked
  9606  00338E  6FB3               	movwf	??___fladd& (0+255),b
  9607  003390  0100               	movlb	0	; () banked
  9608  003392  51B2               	movf	(___fladd@a+3)& (0+255),w,b
  9609  003394  0A80               	xorlw	128
  9610  003396  0100               	movlb	0	; () banked
  9611  003398  59B3               	subwfb	??___fladd& (0+255),w,b
  9612  00339A  B0D8               	btfsc	status,0,c
  9613  00339C  D050               	goto	l6870
  9614                           
  9615                           ; BSR set to: 0
  9616  00339E  C0AB  F0B3         	movff	___fladd@b,??___fladd
  9617  0033A2  C0AC  F0B4         	movff	___fladd@b+1,??___fladd+1
  9618  0033A6  C0AD  F0B5         	movff	___fladd@b+2,??___fladd+2
  9619  0033AA  C0AE  F0B6         	movff	___fladd@b+3,??___fladd+3
  9620  0033AE  0100               	movlb	0	; () banked
  9621  0033B0  1FB3               	comf	??___fladd& (0+255),f,b
  9622  0033B2  1FB4               	comf	(??___fladd+1)& (0+255),f,b
  9623  0033B4  1FB5               	comf	(??___fladd+2)& (0+255),f,b
  9624  0033B6  1FB6               	comf	(??___fladd+3)& (0+255),f,b
  9625  0033B8  2BB3               	incf	??___fladd& (0+255),f,b
  9626  0033BA  0E00               	movlw	0
  9627  0033BC  23B4               	addwfc	(??___fladd+1)& (0+255),f,b
  9628  0033BE  23B5               	addwfc	(??___fladd+2)& (0+255),f,b
  9629  0033C0  23B6               	addwfc	(??___fladd+3)& (0+255),f,b
  9630  0033C2  0100               	movlb	0	; () banked
  9631  0033C4  51AF               	movf	___fladd@a& (0+255),w,b
  9632  0033C6  0100               	movlb	0	; () banked
  9633  0033C8  25B3               	addwf	??___fladd& (0+255),w,b
  9634  0033CA  0100               	movlb	0	; () banked
  9635  0033CC  6FB7               	movwf	(??___fladd+4)& (0+255),b
  9636  0033CE  0100               	movlb	0	; () banked
  9637  0033D0  51B0               	movf	(___fladd@a+1)& (0+255),w,b
  9638  0033D2  0100               	movlb	0	; () banked
  9639  0033D4  21B4               	addwfc	(??___fladd+1)& (0+255),w,b
  9640  0033D6  0100               	movlb	0	; () banked
  9641  0033D8  6FB8               	movwf	(??___fladd+5)& (0+255),b
  9642  0033DA  0100               	movlb	0	; () banked
  9643  0033DC  51B1               	movf	(___fladd@a+2)& (0+255),w,b
  9644  0033DE  0100               	movlb	0	; () banked
  9645  0033E0  21B5               	addwfc	(??___fladd+2)& (0+255),w,b
  9646  0033E2  0100               	movlb	0	; () banked
  9647  0033E4  6FB9               	movwf	(??___fladd+6)& (0+255),b
  9648  0033E6  0100               	movlb	0	; () banked
  9649  0033E8  51B2               	movf	(___fladd@a+3)& (0+255),w,b
  9650  0033EA  0100               	movlb	0	; () banked
  9651  0033EC  21B6               	addwfc	(??___fladd+3)& (0+255),w,b
  9652  0033EE  0100               	movlb	0	; () banked
  9653  0033F0  6FBA               	movwf	(??___fladd+7)& (0+255),b
  9654  0033F2  0EFF               	movlw	255
  9655  0033F4  0100               	movlb	0	; () banked
  9656  0033F6  25B7               	addwf	(??___fladd+4)& (0+255),w,b
  9657  0033F8  0100               	movlb	0	; () banked
  9658  0033FA  6FAB               	movwf	___fladd@b& (0+255),b
  9659  0033FC  0EFF               	movlw	255
  9660  0033FE  0100               	movlb	0	; () banked
  9661  003400  21B8               	addwfc	(??___fladd+5)& (0+255),w,b
  9662  003402  0100               	movlb	0	; () banked
  9663  003404  6FAC               	movwf	(___fladd@b+1)& (0+255),b
  9664  003406  0EFF               	movlw	255
  9665  003408  0100               	movlb	0	; () banked
  9666  00340A  21B9               	addwfc	(??___fladd+6)& (0+255),w,b
  9667  00340C  0100               	movlb	0	; () banked
  9668  00340E  6FAD               	movwf	(___fladd@b+2)& (0+255),b
  9669  003410  0EFF               	movlw	255
  9670  003412  0100               	movlb	0	; () banked
  9671  003414  21BA               	addwfc	(??___fladd+7)& (0+255),w,b
  9672  003416  0100               	movlb	0	; () banked
  9673  003418  6FAE               	movwf	(___fladd@b+3)& (0+255),b
  9674  00341A  0E80               	movlw	128
  9675  00341C  0100               	movlb	0	; () banked
  9676  00341E  1BBB               	xorwf	___fladd@signs& (0+255),f,b
  9677                           
  9678                           ; BSR set to: 0
  9679  003420  0100               	movlb	0	; () banked
  9680  003422  6DBE               	negf	___fladd@grs& (0+255),b
  9681                           
  9682                           ; BSR set to: 0
  9683  003424  0100               	movlb	0	; () banked
  9684  003426  51BE               	movf	___fladd@grs& (0+255),w,b
  9685  003428  0100               	movlb	0	; () banked
  9686  00342A  A4D8               	btfss	status,2,c
  9687  00342C  D018               	goto	l1366
  9688                           
  9689                           ; BSR set to: 0
  9690  00342E  0E01               	movlw	1
  9691  003430  0100               	movlb	0	; () banked
  9692  003432  27AB               	addwf	___fladd@b& (0+255),f,b
  9693  003434  0E00               	movlw	0
  9694  003436  23AC               	addwfc	(___fladd@b+1)& (0+255),f,b
  9695  003438  23AD               	addwfc	(___fladd@b+2)& (0+255),f,b
  9696  00343A  23AE               	addwfc	(___fladd@b+3)& (0+255),f,b
  9697                           
  9698                           ; BSR set to: 0
  9699  00343C  D010               	goto	l1366
  9700  00343E                     l6870:
  9701                           
  9702                           ; BSR set to: 0
  9703  00343E  0100               	movlb	0	; () banked
  9704  003440  51AF               	movf	___fladd@a& (0+255),w,b
  9705  003442  0100               	movlb	0	; () banked
  9706  003444  5FAB               	subwf	___fladd@b& (0+255),f,b
  9707  003446  0100               	movlb	0	; () banked
  9708  003448  51B0               	movf	(___fladd@a+1)& (0+255),w,b
  9709  00344A  0100               	movlb	0	; () banked
  9710  00344C  5BAC               	subwfb	(___fladd@b+1)& (0+255),f,b
  9711  00344E  0100               	movlb	0	; () banked
  9712  003450  51B1               	movf	(___fladd@a+2)& (0+255),w,b
  9713  003452  0100               	movlb	0	; () banked
  9714  003454  5BAD               	subwfb	(___fladd@b+2)& (0+255),f,b
  9715  003456  0100               	movlb	0	; () banked
  9716  003458  51B2               	movf	(___fladd@a+3)& (0+255),w,b
  9717  00345A  0100               	movlb	0	; () banked
  9718  00345C  5BAE               	subwfb	(___fladd@b+3)& (0+255),f,b
  9719  00345E                     l1366:
  9720                           
  9721                           ; BSR set to: 0
  9722  00345E  0100               	movlb	0	; () banked
  9723  003460  51AB               	movf	___fladd@b& (0+255),w,b
  9724  003462  0100               	movlb	0	; () banked
  9725  003464  11AC               	iorwf	(___fladd@b+1)& (0+255),w,b
  9726  003466  0100               	movlb	0	; () banked
  9727  003468  11AD               	iorwf	(___fladd@b+2)& (0+255),w,b
  9728  00346A  0100               	movlb	0	; () banked
  9729  00346C  11AE               	iorwf	(___fladd@b+3)& (0+255),w,b
  9730  00346E  A4D8               	btfss	status,2,c
  9731  003470  D02A               	goto	l6894
  9732                           
  9733                           ; BSR set to: 0
  9734  003472  0100               	movlb	0	; () banked
  9735  003474  51BE               	movf	___fladd@grs& (0+255),w,b
  9736  003476  0100               	movlb	0	; () banked
  9737  003478  A4D8               	btfss	status,2,c
  9738  00347A  D025               	goto	l6894
  9739                           
  9740                           ; BSR set to: 0
  9741  00347C  0E00               	movlw	0
  9742  00347E  0100               	movlb	0	; () banked
  9743  003480  6FAB               	movwf	?___fladd& (0+255),b
  9744  003482  0E00               	movlw	0
  9745  003484  6FAC               	movwf	(?___fladd+1)& (0+255),b
  9746  003486  0E00               	movlw	0
  9747  003488  6FAD               	movwf	(?___fladd+2)& (0+255),b
  9748  00348A  0E00               	movlw	0
  9749  00348C  6FAE               	movwf	(?___fladd+3)& (0+255),b
  9750                           
  9751                           ; BSR set to: 0
  9752  00348E  0012               	return	
  9753  003490                     l6878:
  9754                           
  9755                           ; BSR set to: 0
  9756  003490  0100               	movlb	0	; () banked
  9757  003492  90D8               	bcf	status,0,c
  9758  003494  37AB               	rlcf	___fladd@b& (0+255),f,b
  9759  003496  37AC               	rlcf	(___fladd@b+1)& (0+255),f,b
  9760  003498  37AD               	rlcf	(___fladd@b+2)& (0+255),f,b
  9761  00349A  37AE               	rlcf	(___fladd@b+3)& (0+255),f,b
  9762                           
  9763                           ; BSR set to: 0
  9764  00349C  0100               	movlb	0	; () banked
  9765  00349E  AFBE               	btfss	___fladd@grs& (0+255),7,b
  9766  0034A0  D002               	goto	l6884
  9767                           
  9768                           ; BSR set to: 0
  9769  0034A2  0100               	movlb	0	; () banked
  9770  0034A4  81AB               	bsf	___fladd@b& (0+255),0,b
  9771  0034A6                     l6884:
  9772                           
  9773                           ; BSR set to: 0
  9774  0034A6  0100               	movlb	0	; () banked
  9775  0034A8  A1BE               	btfss	___fladd@grs& (0+255),0,b
  9776  0034AA  D003               	goto	l6888
  9777                           
  9778                           ; BSR set to: 0
  9779  0034AC  80D8               	bsf	status,0,c
  9780  0034AE  0100               	movlb	0	; () banked
  9781  0034B0  D002               	goto	L5
  9782  0034B2                     l6888:
  9783                           
  9784                           ; BSR set to: 0
  9785  0034B2  0100               	movlb	0	; () banked
  9786  0034B4  90D8               	bcf	status,0,c
  9787  0034B6                     L5:
  9788  0034B6  37BE               	rlcf	___fladd@grs& (0+255),f,b
  9789                           
  9790                           ; BSR set to: 0
  9791                           
  9792                           ; BSR set to: 0
  9793  0034B8  0100               	movlb	0	; () banked
  9794  0034BA  51BD               	movf	___fladd@bexp& (0+255),w,b
  9795  0034BC  0100               	movlb	0	; () banked
  9796  0034BE  B4D8               	btfsc	status,2,c
  9797  0034C0  D002               	goto	l6894
  9798                           
  9799                           ; BSR set to: 0
  9800  0034C2  0100               	movlb	0	; () banked
  9801  0034C4  07BD               	decf	___fladd@bexp& (0+255),f,b
  9802  0034C6                     l6894:
  9803                           
  9804                           ; BSR set to: 0
  9805  0034C6  0100               	movlb	0	; () banked
  9806  0034C8  AFAD               	btfss	(___fladd@b+2)& (0+255),7,b
  9807  0034CA  D7E2               	goto	l6878
  9808  0034CC                     l6896:
  9809                           
  9810                           ; BSR set to: 0
  9811  0034CC  0E00               	movlw	0
  9812  0034CE  0100               	movlb	0	; () banked
  9813  0034D0  6FBC               	movwf	___fladd@aexp& (0+255),b
  9814                           
  9815                           ; BSR set to: 0
  9816  0034D2  0100               	movlb	0	; () banked
  9817  0034D4  AFBE               	btfss	___fladd@grs& (0+255),7,b
  9818  0034D6  D00D               	goto	l1375
  9819                           
  9820                           ; BSR set to: 0
  9821  0034D8  C0BE  F0B3         	movff	___fladd@grs,??___fladd
  9822  0034DC  0E7F               	movlw	127
  9823  0034DE  0100               	movlb	0	; () banked
  9824  0034E0  17B3               	andwf	??___fladd& (0+255),f,b
  9825  0034E2  A4D8               	btfss	status,2,c
  9826  0034E4  D003               	goto	l6904
  9827                           
  9828                           ; BSR set to: 0
  9829                           
  9830                           ; BSR set to: 0
  9831  0034E6  0100               	movlb	0	; () banked
  9832  0034E8  A1AB               	btfss	___fladd@b& (0+255),0,b
  9833  0034EA  D003               	goto	l1375
  9834  0034EC                     l6904:
  9835                           
  9836                           ; BSR set to: 0
  9837  0034EC  0E01               	movlw	1
  9838  0034EE  0100               	movlb	0	; () banked
  9839  0034F0  6FBC               	movwf	___fladd@aexp& (0+255),b
  9840  0034F2                     l1375:
  9841                           
  9842                           ; BSR set to: 0
  9843  0034F2  0100               	movlb	0	; () banked
  9844  0034F4  51BC               	movf	___fladd@aexp& (0+255),w,b
  9845  0034F6  0100               	movlb	0	; () banked
  9846  0034F8  B4D8               	btfsc	status,2,c
  9847  0034FA  D026               	goto	l6914
  9848                           
  9849                           ; BSR set to: 0
  9850  0034FC  0E01               	movlw	1
  9851  0034FE  0100               	movlb	0	; () banked
  9852  003500  27AB               	addwf	___fladd@b& (0+255),f,b
  9853  003502  0E00               	movlw	0
  9854  003504  23AC               	addwfc	(___fladd@b+1)& (0+255),f,b
  9855  003506  23AD               	addwfc	(___fladd@b+2)& (0+255),f,b
  9856  003508  23AE               	addwfc	(___fladd@b+3)& (0+255),f,b
  9857                           
  9858                           ; BSR set to: 0
  9859  00350A  0100               	movlb	0	; () banked
  9860  00350C  A1AE               	btfss	(___fladd@b+3)& (0+255),0,b
  9861  00350E  D01C               	goto	l6914
  9862                           
  9863                           ; BSR set to: 0
  9864  003510  C0AB  F0B3         	movff	___fladd@b,??___fladd
  9865  003514  C0AC  F0B4         	movff	___fladd@b+1,??___fladd+1
  9866  003518  C0AD  F0B5         	movff	___fladd@b+2,??___fladd+2
  9867  00351C  C0AE  F0B6         	movff	___fladd@b+3,??___fladd+3
  9868  003520  0100               	movlb	0	; () banked
  9869  003522  35B6               	rlcf	(??___fladd+3)& (0+255),w,b
  9870  003524  33B6               	rrcf	(??___fladd+3)& (0+255),f,b
  9871  003526  33B5               	rrcf	(??___fladd+2)& (0+255),f,b
  9872  003528  33B4               	rrcf	(??___fladd+1)& (0+255),f,b
  9873  00352A  33B3               	rrcf	??___fladd& (0+255),f,b
  9874  00352C  C0B3  F0AB         	movff	??___fladd,___fladd@b
  9875  003530  C0B4  F0AC         	movff	??___fladd+1,___fladd@b+1
  9876  003534  C0B5  F0AD         	movff	??___fladd+2,___fladd@b+2
  9877  003538  C0B6  F0AE         	movff	??___fladd+3,___fladd@b+3
  9878  00353C  0100               	movlb	0	; () banked
  9879  00353E  29BD               	incf	___fladd@bexp& (0+255),w,b
  9880  003540  B4D8               	btfsc	status,2,c
  9881  003542  D002               	goto	l6914
  9882                           
  9883                           ; BSR set to: 0
  9884  003544  0100               	movlb	0	; () banked
  9885  003546  2BBD               	incf	___fladd@bexp& (0+255),f,b
  9886  003548                     l6914:
  9887                           
  9888                           ; BSR set to: 0
  9889  003548  0100               	movlb	0	; () banked
  9890  00354A  29BD               	incf	___fladd@bexp& (0+255),w,b
  9891  00354C  B4D8               	btfsc	status,2,c
  9892  00354E  D005               	goto	l6918
  9893                           
  9894                           ; BSR set to: 0
  9895  003550  0100               	movlb	0	; () banked
  9896  003552  51BD               	movf	___fladd@bexp& (0+255),w,b
  9897  003554  0100               	movlb	0	; () banked
  9898  003556  A4D8               	btfss	status,2,c
  9899  003558  D011               	goto	l6922
  9900  00355A                     l6918:
  9901                           
  9902                           ; BSR set to: 0
  9903  00355A  0E00               	movlw	0
  9904  00355C  0100               	movlb	0	; () banked
  9905  00355E  6FAB               	movwf	___fladd@b& (0+255),b
  9906  003560  0E00               	movlw	0
  9907  003562  6FAC               	movwf	(___fladd@b+1)& (0+255),b
  9908  003564  0E00               	movlw	0
  9909  003566  6FAD               	movwf	(___fladd@b+2)& (0+255),b
  9910  003568  0E00               	movlw	0
  9911  00356A  6FAE               	movwf	(___fladd@b+3)& (0+255),b
  9912  00356C  0100               	movlb	0	; () banked
  9913  00356E  51BD               	movf	___fladd@bexp& (0+255),w,b
  9914  003570  0100               	movlb	0	; () banked
  9915  003572  A4D8               	btfss	status,2,c
  9916  003574  D003               	goto	l6922
  9917                           
  9918                           ; BSR set to: 0
  9919  003576  0E00               	movlw	0
  9920  003578  0100               	movlb	0	; () banked
  9921  00357A  6FBB               	movwf	___fladd@signs& (0+255),b
  9922  00357C                     l6922:
  9923                           
  9924                           ; BSR set to: 0
  9925  00357C  0100               	movlb	0	; () banked
  9926  00357E  A1BD               	btfss	___fladd@bexp& (0+255),0,b
  9927  003580  D003               	goto	l6926
  9928                           
  9929                           ; BSR set to: 0
  9930  003582  0100               	movlb	0	; () banked
  9931  003584  8FAD               	bsf	(___fladd@b+2)& (0+255),7,b
  9932  003586  D002               	goto	l6928
  9933  003588                     l6926:
  9934                           
  9935                           ; BSR set to: 0
  9936  003588  0100               	movlb	0	; () banked
  9937  00358A  9FAD               	bcf	(___fladd@b+2)& (0+255),7,b
  9938  00358C                     l6928:
  9939                           
  9940                           ; BSR set to: 0
  9941  00358C  0100               	movlb	0	; () banked
  9942  00358E  90D8               	bcf	status,0,c
  9943  003590  31BD               	rrcf	___fladd@bexp& (0+255),w,b
  9944  003592  0100               	movlb	0	; () banked
  9945  003594  6FAE               	movwf	(___fladd@b+3)& (0+255),b
  9946                           
  9947                           ; BSR set to: 0
  9948  003596  0100               	movlb	0	; () banked
  9949  003598  AFBB               	btfss	___fladd@signs& (0+255),7,b
  9950  00359A  D002               	goto	l6934
  9951                           
  9952                           ; BSR set to: 0
  9953  00359C  0100               	movlb	0	; () banked
  9954  00359E  8FAE               	bsf	(___fladd@b+3)& (0+255),7,b
  9955  0035A0                     l6934:
  9956                           
  9957                           ; BSR set to: 0
  9958  0035A0  C0AB  F0AB         	movff	___fladd@b,?___fladd
  9959  0035A4  C0AC  F0AC         	movff	___fladd@b+1,?___fladd+1
  9960  0035A8  C0AD  F0AD         	movff	___fladd@b+2,?___fladd+2
  9961  0035AC  C0AE  F0AE         	movff	___fladd@b+3,?___fladd+3
  9962  0035B0  0012               	return	
  9963  0035B2                     __end_of___fladd:
  9964                           	opt stack 0
  9965                           tblptru	equ	0xFF8
  9966                           tblptrh	equ	0xFF7
  9967                           tblptrl	equ	0xFF6
  9968                           tablat	equ	0xFF5
  9969                           prodh	equ	0xFF4
  9970                           prodl	equ	0xFF3
  9971                           postinc0	equ	0xFEE
  9972                           wreg	equ	0xFE8
  9973                           postdec1	equ	0xFE5
  9974                           fsr1l	equ	0xFE1
  9975                           indf2	equ	0xFDF
  9976                           postinc2	equ	0xFDE
  9977                           postdec2	equ	0xFDD
  9978                           fsr2h	equ	0xFDA
  9979                           fsr2l	equ	0xFD9
  9980                           status	equ	0xFD8
  9981                           
  9982 ;; *************** function ___flge *****************
  9983 ;; Defined at:
  9984 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\flge.c"
  9985 ;; Parameters:    Size  Location     Type
  9986 ;;  ff1             4  103[BANK0 ] unsigned char 
  9987 ;;  ff2             4  107[BANK0 ] unsigned char 
  9988 ;; Auto vars:     Size  Location     Type
  9989 ;;		None
  9990 ;; Return value:  Size  Location     Type
  9991 ;;		None               void
  9992 ;; Registers used:
  9993 ;;		wreg, status,2, status,0
  9994 ;; Tracked objects:
  9995 ;;		On entry : 0/0
  9996 ;;		On exit  : 0/0
  9997 ;;		Unchanged: 0/0
  9998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9999 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10001 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10002 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10003 ;;Total ram usage:       12 bytes
 10004 ;; Hardware stack levels used:    1
 10005 ;; Hardware stack levels required when called:    5
 10006 ;; This function calls:
 10007 ;;		Nothing
 10008 ;; This function is called by:
 10009 ;;		_parallelo
 10010 ;;		_asin
 10011 ;;		_atan
 10012 ;;		_cos
 10013 ;;		_sin
 10014 ;;		_floor
 10015 ;; This function uses a non-reentrant model
 10016 ;;
 10017                           
 10018                           	psect	text24
 10019  005A7A                     __ptext24:
 10020                           	opt stack 0
 10021  005A7A                     ___flge:
 10022                           	opt stack 21
 10023                           
 10024                           ; BSR set to: 0
 10025                           ;incstack = 0
 10026  005A7A  0E00               	movlw	0
 10027  005A7C  0100               	movlb	0	; () banked
 10028  005A7E  15C7               	andwf	___flge@ff1& (0+255),w,b
 10029  005A80  0100               	movlb	0	; () banked
 10030  005A82  6FCF               	movwf	??___flge& (0+255),b
 10031  005A84  0E00               	movlw	0
 10032  005A86  0100               	movlb	0	; () banked
 10033  005A88  15C8               	andwf	(___flge@ff1+1)& (0+255),w,b
 10034  005A8A  0100               	movlb	0	; () banked
 10035  005A8C  6FD0               	movwf	(??___flge+1)& (0+255),b
 10036  005A8E  0E80               	movlw	128
 10037  005A90  0100               	movlb	0	; () banked
 10038  005A92  15C9               	andwf	(___flge@ff1+2)& (0+255),w,b
 10039  005A94  0100               	movlb	0	; () banked
 10040  005A96  6FD1               	movwf	(??___flge+2)& (0+255),b
 10041  005A98  0E7F               	movlw	127
 10042  005A9A  0100               	movlb	0	; () banked
 10043  005A9C  15CA               	andwf	(___flge@ff1+3)& (0+255),w,b
 10044  005A9E  0100               	movlb	0	; () banked
 10045  005AA0  6FD2               	movwf	(??___flge+3)& (0+255),b
 10046  005AA2  0100               	movlb	0	; () banked
 10047  005AA4  51CF               	movf	??___flge& (0+255),w,b
 10048  005AA6  0100               	movlb	0	; () banked
 10049  005AA8  11D0               	iorwf	(??___flge+1)& (0+255),w,b
 10050  005AAA  0100               	movlb	0	; () banked
 10051  005AAC  11D1               	iorwf	(??___flge+2)& (0+255),w,b
 10052  005AAE  0100               	movlb	0	; () banked
 10053  005AB0  11D2               	iorwf	(??___flge+3)& (0+255),w,b
 10054  005AB2  A4D8               	btfss	status,2,c
 10055  005AB4  D009               	goto	l7072
 10056                           
 10057                           ; BSR set to: 0
 10058  005AB6  0E00               	movlw	0
 10059  005AB8  0100               	movlb	0	; () banked
 10060  005ABA  6FC7               	movwf	___flge@ff1& (0+255),b
 10061  005ABC  0E00               	movlw	0
 10062  005ABE  6FC8               	movwf	(___flge@ff1+1)& (0+255),b
 10063  005AC0  0E00               	movlw	0
 10064  005AC2  6FC9               	movwf	(___flge@ff1+2)& (0+255),b
 10065  005AC4  0E00               	movlw	0
 10066  005AC6  6FCA               	movwf	(___flge@ff1+3)& (0+255),b
 10067  005AC8                     l7072:
 10068                           
 10069                           ; BSR set to: 0
 10070  005AC8  0E00               	movlw	0
 10071  005ACA  0100               	movlb	0	; () banked
 10072  005ACC  15CB               	andwf	___flge@ff2& (0+255),w,b
 10073  005ACE  0100               	movlb	0	; () banked
 10074  005AD0  6FCF               	movwf	??___flge& (0+255),b
 10075  005AD2  0E00               	movlw	0
 10076  005AD4  0100               	movlb	0	; () banked
 10077  005AD6  15CC               	andwf	(___flge@ff2+1)& (0+255),w,b
 10078  005AD8  0100               	movlb	0	; () banked
 10079  005ADA  6FD0               	movwf	(??___flge+1)& (0+255),b
 10080  005ADC  0E80               	movlw	128
 10081  005ADE  0100               	movlb	0	; () banked
 10082  005AE0  15CD               	andwf	(___flge@ff2+2)& (0+255),w,b
 10083  005AE2  0100               	movlb	0	; () banked
 10084  005AE4  6FD1               	movwf	(??___flge+2)& (0+255),b
 10085  005AE6  0E7F               	movlw	127
 10086  005AE8  0100               	movlb	0	; () banked
 10087  005AEA  15CE               	andwf	(___flge@ff2+3)& (0+255),w,b
 10088  005AEC  0100               	movlb	0	; () banked
 10089  005AEE  6FD2               	movwf	(??___flge+3)& (0+255),b
 10090  005AF0  0100               	movlb	0	; () banked
 10091  005AF2  51CF               	movf	??___flge& (0+255),w,b
 10092  005AF4  0100               	movlb	0	; () banked
 10093  005AF6  11D0               	iorwf	(??___flge+1)& (0+255),w,b
 10094  005AF8  0100               	movlb	0	; () banked
 10095  005AFA  11D1               	iorwf	(??___flge+2)& (0+255),w,b
 10096  005AFC  0100               	movlb	0	; () banked
 10097  005AFE  11D2               	iorwf	(??___flge+3)& (0+255),w,b
 10098  005B00  A4D8               	btfss	status,2,c
 10099  005B02  D009               	goto	l7076
 10100                           
 10101                           ; BSR set to: 0
 10102  005B04  0E00               	movlw	0
 10103  005B06  0100               	movlb	0	; () banked
 10104  005B08  6FCB               	movwf	___flge@ff2& (0+255),b
 10105  005B0A  0E00               	movlw	0
 10106  005B0C  6FCC               	movwf	(___flge@ff2+1)& (0+255),b
 10107  005B0E  0E00               	movlw	0
 10108  005B10  6FCD               	movwf	(___flge@ff2+2)& (0+255),b
 10109  005B12  0E00               	movlw	0
 10110  005B14  6FCE               	movwf	(___flge@ff2+3)& (0+255),b
 10111  005B16                     l7076:
 10112                           
 10113                           ; BSR set to: 0
 10114  005B16  0100               	movlb	0	; () banked
 10115  005B18  AFCA               	btfss	(___flge@ff1+3)& (0+255),7,b
 10116  005B1A  D026               	goto	l7080
 10117                           
 10118                           ; BSR set to: 0
 10119  005B1C  C0C7  F0CF         	movff	___flge@ff1,??___flge
 10120  005B20  C0C8  F0D0         	movff	___flge@ff1+1,??___flge+1
 10121  005B24  C0C9  F0D1         	movff	___flge@ff1+2,??___flge+2
 10122  005B28  C0CA  F0D2         	movff	___flge@ff1+3,??___flge+3
 10123  005B2C  0100               	movlb	0	; () banked
 10124  005B2E  1FCF               	comf	??___flge& (0+255),f,b
 10125  005B30  1FD0               	comf	(??___flge+1)& (0+255),f,b
 10126  005B32  1FD1               	comf	(??___flge+2)& (0+255),f,b
 10127  005B34  1FD2               	comf	(??___flge+3)& (0+255),f,b
 10128  005B36  2BCF               	incf	??___flge& (0+255),f,b
 10129  005B38  0E00               	movlw	0
 10130  005B3A  23D0               	addwfc	(??___flge+1)& (0+255),f,b
 10131  005B3C  23D1               	addwfc	(??___flge+2)& (0+255),f,b
 10132  005B3E  23D2               	addwfc	(??___flge+3)& (0+255),f,b
 10133  005B40  0E00               	movlw	0
 10134  005B42  0100               	movlb	0	; () banked
 10135  005B44  25CF               	addwf	??___flge& (0+255),w,b
 10136  005B46  0100               	movlb	0	; () banked
 10137  005B48  6FC7               	movwf	___flge@ff1& (0+255),b
 10138  005B4A  0E00               	movlw	0
 10139  005B4C  0100               	movlb	0	; () banked
 10140  005B4E  21D0               	addwfc	(??___flge+1)& (0+255),w,b
 10141  005B50  0100               	movlb	0	; () banked
 10142  005B52  6FC8               	movwf	(___flge@ff1+1)& (0+255),b
 10143  005B54  0E00               	movlw	0
 10144  005B56  0100               	movlb	0	; () banked
 10145  005B58  21D1               	addwfc	(??___flge+2)& (0+255),w,b
 10146  005B5A  0100               	movlb	0	; () banked
 10147  005B5C  6FC9               	movwf	(___flge@ff1+2)& (0+255),b
 10148  005B5E  0E80               	movlw	128
 10149  005B60  0100               	movlb	0	; () banked
 10150  005B62  21D2               	addwfc	(??___flge+3)& (0+255),w,b
 10151  005B64  0100               	movlb	0	; () banked
 10152  005B66  6FCA               	movwf	(___flge@ff1+3)& (0+255),b
 10153  005B68                     l7080:
 10154                           
 10155                           ; BSR set to: 0
 10156  005B68  0100               	movlb	0	; () banked
 10157  005B6A  AFCE               	btfss	(___flge@ff2+3)& (0+255),7,b
 10158  005B6C  D026               	goto	l1097
 10159                           
 10160                           ; BSR set to: 0
 10161  005B6E  C0CB  F0CF         	movff	___flge@ff2,??___flge
 10162  005B72  C0CC  F0D0         	movff	___flge@ff2+1,??___flge+1
 10163  005B76  C0CD  F0D1         	movff	___flge@ff2+2,??___flge+2
 10164  005B7A  C0CE  F0D2         	movff	___flge@ff2+3,??___flge+3
 10165  005B7E  0100               	movlb	0	; () banked
 10166  005B80  1FCF               	comf	??___flge& (0+255),f,b
 10167  005B82  1FD0               	comf	(??___flge+1)& (0+255),f,b
 10168  005B84  1FD1               	comf	(??___flge+2)& (0+255),f,b
 10169  005B86  1FD2               	comf	(??___flge+3)& (0+255),f,b
 10170  005B88  2BCF               	incf	??___flge& (0+255),f,b
 10171  005B8A  0E00               	movlw	0
 10172  005B8C  23D0               	addwfc	(??___flge+1)& (0+255),f,b
 10173  005B8E  23D1               	addwfc	(??___flge+2)& (0+255),f,b
 10174  005B90  23D2               	addwfc	(??___flge+3)& (0+255),f,b
 10175  005B92  0E00               	movlw	0
 10176  005B94  0100               	movlb	0	; () banked
 10177  005B96  25CF               	addwf	??___flge& (0+255),w,b
 10178  005B98  0100               	movlb	0	; () banked
 10179  005B9A  6FCB               	movwf	___flge@ff2& (0+255),b
 10180  005B9C  0E00               	movlw	0
 10181  005B9E  0100               	movlb	0	; () banked
 10182  005BA0  21D0               	addwfc	(??___flge+1)& (0+255),w,b
 10183  005BA2  0100               	movlb	0	; () banked
 10184  005BA4  6FCC               	movwf	(___flge@ff2+1)& (0+255),b
 10185  005BA6  0E00               	movlw	0
 10186  005BA8  0100               	movlb	0	; () banked
 10187  005BAA  21D1               	addwfc	(??___flge+2)& (0+255),w,b
 10188  005BAC  0100               	movlb	0	; () banked
 10189  005BAE  6FCD               	movwf	(___flge@ff2+2)& (0+255),b
 10190  005BB0  0E80               	movlw	128
 10191  005BB2  0100               	movlb	0	; () banked
 10192  005BB4  21D2               	addwfc	(??___flge+3)& (0+255),w,b
 10193  005BB6  0100               	movlb	0	; () banked
 10194  005BB8  6FCE               	movwf	(___flge@ff2+3)& (0+255),b
 10195  005BBA                     l1097:
 10196                           
 10197                           ; BSR set to: 0
 10198  005BBA  0E00               	movlw	0
 10199  005BBC  0100               	movlb	0	; () banked
 10200  005BBE  1BC7               	xorwf	___flge@ff1& (0+255),f,b
 10201  005BC0  0E00               	movlw	0
 10202  005BC2  1BC8               	xorwf	(___flge@ff1+1)& (0+255),f,b
 10203  005BC4  0E00               	movlw	0
 10204  005BC6  1BC9               	xorwf	(___flge@ff1+2)& (0+255),f,b
 10205  005BC8  0E80               	movlw	128
 10206  005BCA  1BCA               	xorwf	(___flge@ff1+3)& (0+255),f,b
 10207  005BCC  0E00               	movlw	0
 10208  005BCE  0100               	movlb	0	; () banked
 10209  005BD0  1BCB               	xorwf	___flge@ff2& (0+255),f,b
 10210  005BD2  0E00               	movlw	0
 10211  005BD4  1BCC               	xorwf	(___flge@ff2+1)& (0+255),f,b
 10212  005BD6  0E00               	movlw	0
 10213  005BD8  1BCD               	xorwf	(___flge@ff2+2)& (0+255),f,b
 10214  005BDA  0E80               	movlw	128
 10215  005BDC  1BCE               	xorwf	(___flge@ff2+3)& (0+255),f,b
 10216  005BDE  0100               	movlb	0	; () banked
 10217  005BE0  51CB               	movf	___flge@ff2& (0+255),w,b
 10218  005BE2  0100               	movlb	0	; () banked
 10219  005BE4  5DC7               	subwf	___flge@ff1& (0+255),w,b
 10220  005BE6  0100               	movlb	0	; () banked
 10221  005BE8  51CC               	movf	(___flge@ff2+1)& (0+255),w,b
 10222  005BEA  0100               	movlb	0	; () banked
 10223  005BEC  59C8               	subwfb	(___flge@ff1+1)& (0+255),w,b
 10224  005BEE  0100               	movlb	0	; () banked
 10225  005BF0  51CD               	movf	(___flge@ff2+2)& (0+255),w,b
 10226  005BF2  0100               	movlb	0	; () banked
 10227  005BF4  59C9               	subwfb	(___flge@ff1+2)& (0+255),w,b
 10228  005BF6  0100               	movlb	0	; () banked
 10229  005BF8  51CE               	movf	(___flge@ff2+3)& (0+255),w,b
 10230  005BFA  0100               	movlb	0	; () banked
 10231  005BFC  59CA               	subwfb	(___flge@ff1+3)& (0+255),w,b
 10232  005BFE  B0D8               	btfsc	status,0,c
 10233  005C00  D002               	goto	l7086
 10234                           
 10235                           ; BSR set to: 0
 10236  005C02  90D8               	bcf	status,0,c
 10237  005C04  0012               	return	
 10238  005C06                     l7086:
 10239                           
 10240                           ; BSR set to: 0
 10241  005C06  80D8               	bsf	status,0,c
 10242                           
 10243                           ; BSR set to: 0
 10244  005C08  0012               	return	
 10245  005C0A                     __end_of___flge:
 10246                           	opt stack 0
 10247                           tblptru	equ	0xFF8
 10248                           tblptrh	equ	0xFF7
 10249                           tblptrl	equ	0xFF6
 10250                           tablat	equ	0xFF5
 10251                           prodh	equ	0xFF4
 10252                           prodl	equ	0xFF3
 10253                           postinc0	equ	0xFEE
 10254                           wreg	equ	0xFE8
 10255                           postdec1	equ	0xFE5
 10256                           fsr1l	equ	0xFE1
 10257                           indf2	equ	0xFDF
 10258                           postinc2	equ	0xFDE
 10259                           postdec2	equ	0xFDD
 10260                           fsr2h	equ	0xFDA
 10261                           fsr2l	equ	0xFD9
 10262                           status	equ	0xFD8
 10263                           
 10264 ;; *************** function ___fldiv *****************
 10265 ;; Defined at:
 10266 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcdiv.c"
 10267 ;; Parameters:    Size  Location     Type
 10268 ;;  b               4   25[BANK0 ] unsigned char 
 10269 ;;  a               4   29[BANK0 ] unsigned char 
 10270 ;; Auto vars:     Size  Location     Type
 10271 ;;  grs             4   44[BANK0 ] unsigned long 
 10272 ;;  rem             4   38[BANK0 ] unsigned long 
 10273 ;;  new_exp         2   42[BANK0 ] int 
 10274 ;;  aexp            1   49[BANK0 ] unsigned char 
 10275 ;;  bexp            1   48[BANK0 ] unsigned char 
 10276 ;;  sign            1   37[BANK0 ] unsigned char 
 10277 ;; Return value:  Size  Location     Type
 10278 ;;                  4   25[BANK0 ] unsigned char 
 10279 ;; Registers used:
 10280 ;;		wreg, status,2, status,0
 10281 ;; Tracked objects:
 10282 ;;		On entry : 0/0
 10283 ;;		On exit  : 0/0
 10284 ;;		Unchanged: 0/0
 10285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10286 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10287 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10288 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10289 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10290 ;;Total ram usage:       25 bytes
 10291 ;; Hardware stack levels used:    1
 10292 ;; Hardware stack levels required when called:    5
 10293 ;; This function calls:
 10294 ;;		Nothing
 10295 ;; This function is called by:
 10296 ;;		_parallelo
 10297 ;;		_matematica
 10298 ;;		_asin
 10299 ;;		_atan
 10300 ;;		_sin
 10301 ;; This function uses a non-reentrant model
 10302 ;;
 10303                           
 10304                           	psect	text25
 10305  0042C2                     __ptext25:
 10306                           	opt stack 0
 10307  0042C2                     ___fldiv:
 10308                           	opt stack 21
 10309                           
 10310                           ; BSR set to: 0
 10311                           ;incstack = 0
 10312  0042C2  0100               	movlb	0	; () banked
 10313  0042C4  517C               	movf	(___fldiv@b+3)& (0+255),w,b
 10314  0042C6  0B80               	andlw	128
 10315  0042C8  0100               	movlb	0	; () banked
 10316  0042CA  6F85               	movwf	___fldiv@sign& (0+255),b
 10317  0042CC  0100               	movlb	0	; () banked
 10318  0042CE  517C               	movf	(___fldiv@b+3)& (0+255),w,b
 10319  0042D0  257C               	addwf	(___fldiv@b+3)& (0+255),w,b
 10320  0042D2  0100               	movlb	0	; () banked
 10321  0042D4  6F90               	movwf	___fldiv@bexp& (0+255),b
 10322                           
 10323                           ; BSR set to: 0
 10324  0042D6  0100               	movlb	0	; () banked
 10325  0042D8  AF7B               	btfss	(___fldiv@b+2)& (0+255),7,b
 10326  0042DA  D002               	goto	l7206
 10327                           
 10328                           ; BSR set to: 0
 10329  0042DC  0100               	movlb	0	; () banked
 10330  0042DE  8190               	bsf	___fldiv@bexp& (0+255),0,b
 10331  0042E0                     l7206:
 10332                           
 10333                           ; BSR set to: 0
 10334  0042E0  0100               	movlb	0	; () banked
 10335  0042E2  5190               	movf	___fldiv@bexp& (0+255),w,b
 10336  0042E4  0100               	movlb	0	; () banked
 10337  0042E6  B4D8               	btfsc	status,2,c
 10338  0042E8  D012               	goto	l7216
 10339                           
 10340                           ; BSR set to: 0
 10341  0042EA  0100               	movlb	0	; () banked
 10342  0042EC  2990               	incf	___fldiv@bexp& (0+255),w,b
 10343  0042EE  A4D8               	btfss	status,2,c
 10344  0042F0  D009               	goto	l7212
 10345                           
 10346                           ; BSR set to: 0
 10347  0042F2  0E00               	movlw	0
 10348  0042F4  0100               	movlb	0	; () banked
 10349  0042F6  6F79               	movwf	___fldiv@b& (0+255),b
 10350  0042F8  0E00               	movlw	0
 10351  0042FA  6F7A               	movwf	(___fldiv@b+1)& (0+255),b
 10352  0042FC  0E00               	movlw	0
 10353  0042FE  6F7B               	movwf	(___fldiv@b+2)& (0+255),b
 10354  004300  0E00               	movlw	0
 10355  004302  6F7C               	movwf	(___fldiv@b+3)& (0+255),b
 10356  004304                     l7212:
 10357                           
 10358                           ; BSR set to: 0
 10359  004304  0100               	movlb	0	; () banked
 10360  004306  8F7B               	bsf	(___fldiv@b+2)& (0+255),7,b
 10361                           
 10362                           ; BSR set to: 0
 10363  004308  0E00               	movlw	0
 10364  00430A  0100               	movlb	0	; () banked
 10365  00430C  D008               	goto	L6
 10366  00430E                     l7216:
 10367                           
 10368                           ; BSR set to: 0
 10369  00430E  0E00               	movlw	0
 10370  004310  0100               	movlb	0	; () banked
 10371  004312  6F79               	movwf	___fldiv@b& (0+255),b
 10372  004314  0E00               	movlw	0
 10373  004316  6F7A               	movwf	(___fldiv@b+1)& (0+255),b
 10374  004318  0E00               	movlw	0
 10375  00431A  6F7B               	movwf	(___fldiv@b+2)& (0+255),b
 10376  00431C  0E00               	movlw	0
 10377  00431E                     L6:
 10378  00431E  6F7C               	movwf	(___fldiv@b+3)& (0+255),b
 10379                           
 10380                           ; BSR set to: 0
 10381                           
 10382                           ; BSR set to: 0
 10383  004320  0100               	movlb	0	; () banked
 10384  004322  5180               	movf	(___fldiv@a+3)& (0+255),w,b
 10385  004324  0B80               	andlw	128
 10386  004326  0100               	movlb	0	; () banked
 10387  004328  1B85               	xorwf	___fldiv@sign& (0+255),f,b
 10388                           
 10389                           ; BSR set to: 0
 10390  00432A  0100               	movlb	0	; () banked
 10391  00432C  5180               	movf	(___fldiv@a+3)& (0+255),w,b
 10392  00432E  2580               	addwf	(___fldiv@a+3)& (0+255),w,b
 10393  004330  0100               	movlb	0	; () banked
 10394  004332  6F91               	movwf	___fldiv@aexp& (0+255),b
 10395                           
 10396                           ; BSR set to: 0
 10397  004334  0100               	movlb	0	; () banked
 10398  004336  AF7F               	btfss	(___fldiv@a+2)& (0+255),7,b
 10399  004338  D002               	goto	l7226
 10400                           
 10401                           ; BSR set to: 0
 10402  00433A  0100               	movlb	0	; () banked
 10403  00433C  8191               	bsf	___fldiv@aexp& (0+255),0,b
 10404  00433E                     l7226:
 10405                           
 10406                           ; BSR set to: 0
 10407  00433E  0100               	movlb	0	; () banked
 10408  004340  5191               	movf	___fldiv@aexp& (0+255),w,b
 10409  004342  0100               	movlb	0	; () banked
 10410  004344  B4D8               	btfsc	status,2,c
 10411  004346  D012               	goto	l7236
 10412                           
 10413                           ; BSR set to: 0
 10414  004348  0100               	movlb	0	; () banked
 10415  00434A  2991               	incf	___fldiv@aexp& (0+255),w,b
 10416  00434C  A4D8               	btfss	status,2,c
 10417  00434E  D009               	goto	l7232
 10418                           
 10419                           ; BSR set to: 0
 10420  004350  0E00               	movlw	0
 10421  004352  0100               	movlb	0	; () banked
 10422  004354  6F7D               	movwf	___fldiv@a& (0+255),b
 10423  004356  0E00               	movlw	0
 10424  004358  6F7E               	movwf	(___fldiv@a+1)& (0+255),b
 10425  00435A  0E00               	movlw	0
 10426  00435C  6F7F               	movwf	(___fldiv@a+2)& (0+255),b
 10427  00435E  0E00               	movlw	0
 10428  004360  6F80               	movwf	(___fldiv@a+3)& (0+255),b
 10429  004362                     l7232:
 10430                           
 10431                           ; BSR set to: 0
 10432  004362  0100               	movlb	0	; () banked
 10433  004364  8F7F               	bsf	(___fldiv@a+2)& (0+255),7,b
 10434                           
 10435                           ; BSR set to: 0
 10436  004366  0E00               	movlw	0
 10437  004368  0100               	movlb	0	; () banked
 10438  00436A  D008               	goto	L7
 10439  00436C                     l7236:
 10440                           
 10441                           ; BSR set to: 0
 10442  00436C  0E00               	movlw	0
 10443  00436E  0100               	movlb	0	; () banked
 10444  004370  6F7D               	movwf	___fldiv@a& (0+255),b
 10445  004372  0E00               	movlw	0
 10446  004374  6F7E               	movwf	(___fldiv@a+1)& (0+255),b
 10447  004376  0E00               	movlw	0
 10448  004378  6F7F               	movwf	(___fldiv@a+2)& (0+255),b
 10449  00437A  0E00               	movlw	0
 10450  00437C                     L7:
 10451  00437C  6F80               	movwf	(___fldiv@a+3)& (0+255),b
 10452                           
 10453                           ; BSR set to: 0
 10454                           
 10455                           ; BSR set to: 0
 10456  00437E  0100               	movlb	0	; () banked
 10457  004380  517D               	movf	___fldiv@a& (0+255),w,b
 10458  004382  0100               	movlb	0	; () banked
 10459  004384  117E               	iorwf	(___fldiv@a+1)& (0+255),w,b
 10460  004386  0100               	movlb	0	; () banked
 10461  004388  117F               	iorwf	(___fldiv@a+2)& (0+255),w,b
 10462  00438A  0100               	movlb	0	; () banked
 10463  00438C  1180               	iorwf	(___fldiv@a+3)& (0+255),w,b
 10464  00438E  A4D8               	btfss	status,2,c
 10465  004390  D017               	goto	l7248
 10466                           
 10467                           ; BSR set to: 0
 10468  004392  0E00               	movlw	0
 10469  004394  0100               	movlb	0	; () banked
 10470  004396  6F79               	movwf	___fldiv@b& (0+255),b
 10471  004398  0E00               	movlw	0
 10472  00439A  6F7A               	movwf	(___fldiv@b+1)& (0+255),b
 10473  00439C  0E00               	movlw	0
 10474  00439E  6F7B               	movwf	(___fldiv@b+2)& (0+255),b
 10475  0043A0  0E00               	movlw	0
 10476  0043A2  6F7C               	movwf	(___fldiv@b+3)& (0+255),b
 10477                           
 10478                           ; BSR set to: 0
 10479  0043A4  0100               	movlb	0	; () banked
 10480  0043A6  0E80               	movlw	128
 10481  0043A8  137B               	iorwf	(___fldiv@b+2)& (0+255),f,b
 10482  0043AA  0E7F               	movlw	127
 10483  0043AC  137C               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10484                           
 10485                           ; BSR set to: 0
 10486  0043AE  C079  F079         	movff	___fldiv@b,?___fldiv
 10487  0043B2  C07A  F07A         	movff	___fldiv@b+1,?___fldiv+1
 10488  0043B6  C07B  F07B         	movff	___fldiv@b+2,?___fldiv+2
 10489  0043BA  C07C  F07C         	movff	___fldiv@b+3,?___fldiv+3
 10490                           
 10491                           ; BSR set to: 0
 10492  0043BE  0012               	return	
 10493  0043C0                     l7248:
 10494                           
 10495                           ; BSR set to: 0
 10496  0043C0  0100               	movlb	0	; () banked
 10497  0043C2  5190               	movf	___fldiv@bexp& (0+255),w,b
 10498  0043C4  0100               	movlb	0	; () banked
 10499  0043C6  A4D8               	btfss	status,2,c
 10500  0043C8  D012               	goto	l7256
 10501                           
 10502                           ; BSR set to: 0
 10503  0043CA  0E00               	movlw	0
 10504  0043CC  0100               	movlb	0	; () banked
 10505  0043CE  6F79               	movwf	___fldiv@b& (0+255),b
 10506  0043D0  0E00               	movlw	0
 10507  0043D2  6F7A               	movwf	(___fldiv@b+1)& (0+255),b
 10508  0043D4  0E00               	movlw	0
 10509  0043D6  6F7B               	movwf	(___fldiv@b+2)& (0+255),b
 10510  0043D8  0E00               	movlw	0
 10511  0043DA  6F7C               	movwf	(___fldiv@b+3)& (0+255),b
 10512                           
 10513                           ; BSR set to: 0
 10514  0043DC  C079  F079         	movff	___fldiv@b,?___fldiv
 10515  0043E0  C07A  F07A         	movff	___fldiv@b+1,?___fldiv+1
 10516  0043E4  C07B  F07B         	movff	___fldiv@b+2,?___fldiv+2
 10517  0043E8  C07C  F07C         	movff	___fldiv@b+3,?___fldiv+3
 10518                           
 10519                           ; BSR set to: 0
 10520  0043EC  0012               	return	
 10521  0043EE                     l7256:
 10522                           
 10523                           ; BSR set to: 0
 10524  0043EE  0100               	movlb	0	; () banked
 10525  0043F0  5191               	movf	___fldiv@aexp& (0+255),w,b
 10526  0043F2  0100               	movlb	0	; () banked
 10527  0043F4  6F81               	movwf	??___fldiv& (0+255),b
 10528  0043F6  6B82               	clrf	(??___fldiv+1)& (0+255),b
 10529  0043F8  0100               	movlb	0	; () banked
 10530  0043FA  1F81               	comf	??___fldiv& (0+255),f,b
 10531  0043FC  1F82               	comf	(??___fldiv+1)& (0+255),f,b
 10532  0043FE  4B81               	infsnz	??___fldiv& (0+255),f,b
 10533  004400  2B82               	incf	(??___fldiv+1)& (0+255),f,b
 10534  004402  0100               	movlb	0	; () banked
 10535  004404  5190               	movf	___fldiv@bexp& (0+255),w,b
 10536  004406  0100               	movlb	0	; () banked
 10537  004408  6F83               	movwf	(??___fldiv+2)& (0+255),b
 10538  00440A  6B84               	clrf	(??___fldiv+3)& (0+255),b
 10539  00440C  0100               	movlb	0	; () banked
 10540  00440E  5181               	movf	??___fldiv& (0+255),w,b
 10541  004410  0100               	movlb	0	; () banked
 10542  004412  2783               	addwf	(??___fldiv+2)& (0+255),f,b
 10543  004414  0100               	movlb	0	; () banked
 10544  004416  5182               	movf	(??___fldiv+1)& (0+255),w,b
 10545  004418  0100               	movlb	0	; () banked
 10546  00441A  2384               	addwfc	(??___fldiv+3)& (0+255),f,b
 10547  00441C  0E7F               	movlw	127
 10548  00441E  0100               	movlb	0	; () banked
 10549  004420  2583               	addwf	(??___fldiv+2)& (0+255),w,b
 10550  004422  0100               	movlb	0	; () banked
 10551  004424  6F8A               	movwf	___fldiv@new_exp& (0+255),b
 10552  004426  0E00               	movlw	0
 10553  004428  0100               	movlb	0	; () banked
 10554  00442A  2184               	addwfc	(??___fldiv+3)& (0+255),w,b
 10555  00442C  0100               	movlb	0	; () banked
 10556  00442E  6F8B               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10557                           
 10558                           ; BSR set to: 0
 10559  004430  C079  F086         	movff	___fldiv@b,___fldiv@rem
 10560  004434  C07A  F087         	movff	___fldiv@b+1,___fldiv@rem+1
 10561  004438  C07B  F088         	movff	___fldiv@b+2,___fldiv@rem+2
 10562  00443C  C07C  F089         	movff	___fldiv@b+3,___fldiv@rem+3
 10563                           
 10564                           ; BSR set to: 0
 10565  004440  0E00               	movlw	0
 10566  004442  0100               	movlb	0	; () banked
 10567  004444  6F79               	movwf	___fldiv@b& (0+255),b
 10568  004446  0E00               	movlw	0
 10569  004448  6F7A               	movwf	(___fldiv@b+1)& (0+255),b
 10570  00444A  0E00               	movlw	0
 10571  00444C  6F7B               	movwf	(___fldiv@b+2)& (0+255),b
 10572  00444E  0E00               	movlw	0
 10573  004450  6F7C               	movwf	(___fldiv@b+3)& (0+255),b
 10574                           
 10575                           ; BSR set to: 0
 10576  004452  0E00               	movlw	0
 10577  004454  0100               	movlb	0	; () banked
 10578  004456  6F8C               	movwf	___fldiv@grs& (0+255),b
 10579  004458  0E00               	movlw	0
 10580  00445A  6F8D               	movwf	(___fldiv@grs+1)& (0+255),b
 10581  00445C  0E00               	movlw	0
 10582  00445E  6F8E               	movwf	(___fldiv@grs+2)& (0+255),b
 10583  004460  0E00               	movlw	0
 10584  004462  6F8F               	movwf	(___fldiv@grs+3)& (0+255),b
 10585                           
 10586                           ; BSR set to: 0
 10587  004464  0E00               	movlw	0
 10588  004466  0100               	movlb	0	; () banked
 10589  004468  6F91               	movwf	___fldiv@aexp& (0+255),b
 10590  00446A  D042               	goto	l1405
 10591  00446C                     l7266:
 10592                           
 10593                           ; BSR set to: 0
 10594  00446C  0100               	movlb	0	; () banked
 10595  00446E  5191               	movf	___fldiv@aexp& (0+255),w,b
 10596  004470  0100               	movlb	0	; () banked
 10597  004472  B4D8               	btfsc	status,2,c
 10598  004474  D017               	goto	l7274
 10599                           
 10600                           ; BSR set to: 0
 10601  004476  0100               	movlb	0	; () banked
 10602  004478  90D8               	bcf	status,0,c
 10603  00447A  3786               	rlcf	___fldiv@rem& (0+255),f,b
 10604  00447C  3787               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 10605  00447E  3788               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 10606  004480  3789               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 10607  004482  0100               	movlb	0	; () banked
 10608  004484  90D8               	bcf	status,0,c
 10609  004486  3779               	rlcf	___fldiv@b& (0+255),f,b
 10610  004488  377A               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10611  00448A  377B               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10612  00448C  377C               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10613                           
 10614                           ; BSR set to: 0
 10615  00448E  0100               	movlb	0	; () banked
 10616  004490  AF8F               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10617  004492  D002               	goto	l1408
 10618                           
 10619                           ; BSR set to: 0
 10620  004494  0100               	movlb	0	; () banked
 10621  004496  8179               	bsf	___fldiv@b& (0+255),0,b
 10622  004498                     l1408:
 10623                           
 10624                           ; BSR set to: 0
 10625  004498  0100               	movlb	0	; () banked
 10626  00449A  90D8               	bcf	status,0,c
 10627  00449C  378C               	rlcf	___fldiv@grs& (0+255),f,b
 10628  00449E  378D               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10629  0044A0  378E               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10630  0044A2  378F               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10631  0044A4                     l7274:
 10632                           
 10633                           ; BSR set to: 0
 10634  0044A4  0100               	movlb	0	; () banked
 10635  0044A6  517D               	movf	___fldiv@a& (0+255),w,b
 10636  0044A8  0100               	movlb	0	; () banked
 10637  0044AA  5D86               	subwf	___fldiv@rem& (0+255),w,b
 10638  0044AC  0100               	movlb	0	; () banked
 10639  0044AE  517E               	movf	(___fldiv@a+1)& (0+255),w,b
 10640  0044B0  0100               	movlb	0	; () banked
 10641  0044B2  5987               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 10642  0044B4  0100               	movlb	0	; () banked
 10643  0044B6  517F               	movf	(___fldiv@a+2)& (0+255),w,b
 10644  0044B8  0100               	movlb	0	; () banked
 10645  0044BA  5988               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 10646  0044BC  0100               	movlb	0	; () banked
 10647  0044BE  5180               	movf	(___fldiv@a+3)& (0+255),w,b
 10648  0044C0  0100               	movlb	0	; () banked
 10649  0044C2  5989               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 10650  0044C4  A0D8               	btfss	status,0,c
 10651  0044C6  D012               	goto	l7280
 10652                           
 10653                           ; BSR set to: 0
 10654  0044C8  0100               	movlb	0	; () banked
 10655  0044CA  8D8F               	bsf	(___fldiv@grs+3)& (0+255),6,b
 10656                           
 10657                           ; BSR set to: 0
 10658  0044CC  0100               	movlb	0	; () banked
 10659  0044CE  517D               	movf	___fldiv@a& (0+255),w,b
 10660  0044D0  0100               	movlb	0	; () banked
 10661  0044D2  5F86               	subwf	___fldiv@rem& (0+255),f,b
 10662  0044D4  0100               	movlb	0	; () banked
 10663  0044D6  517E               	movf	(___fldiv@a+1)& (0+255),w,b
 10664  0044D8  0100               	movlb	0	; () banked
 10665  0044DA  5B87               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 10666  0044DC  0100               	movlb	0	; () banked
 10667  0044DE  517F               	movf	(___fldiv@a+2)& (0+255),w,b
 10668  0044E0  0100               	movlb	0	; () banked
 10669  0044E2  5B88               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 10670  0044E4  0100               	movlb	0	; () banked
 10671  0044E6  5180               	movf	(___fldiv@a+3)& (0+255),w,b
 10672  0044E8  0100               	movlb	0	; () banked
 10673  0044EA  5B89               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 10674  0044EC                     l7280:
 10675                           
 10676                           ; BSR set to: 0
 10677  0044EC  0100               	movlb	0	; () banked
 10678  0044EE  2B91               	incf	___fldiv@aexp& (0+255),f,b
 10679  0044F0                     l1405:
 10680                           
 10681                           ; BSR set to: 0
 10682  0044F0  0E19               	movlw	25
 10683  0044F2  0100               	movlb	0	; () banked
 10684  0044F4  6591               	cpfsgt	___fldiv@aexp& (0+255),b
 10685  0044F6  D7BA               	goto	l7266
 10686                           
 10687                           ; BSR set to: 0
 10688                           
 10689                           ; BSR set to: 0
 10690  0044F8  0100               	movlb	0	; () banked
 10691  0044FA  5186               	movf	___fldiv@rem& (0+255),w,b
 10692  0044FC  0100               	movlb	0	; () banked
 10693  0044FE  1187               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 10694  004500  0100               	movlb	0	; () banked
 10695  004502  1188               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 10696  004504  0100               	movlb	0	; () banked
 10697  004506  1189               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 10698  004508  B4D8               	btfsc	status,2,c
 10699  00450A  D018               	goto	l7292
 10700                           
 10701                           ; BSR set to: 0
 10702  00450C  0100               	movlb	0	; () banked
 10703  00450E  818C               	bsf	___fldiv@grs& (0+255),0,b
 10704                           
 10705                           ; BSR set to: 0
 10706  004510  D015               	goto	l7292
 10707  004512                     l7286:
 10708                           
 10709                           ; BSR set to: 0
 10710  004512  0100               	movlb	0	; () banked
 10711  004514  90D8               	bcf	status,0,c
 10712  004516  3779               	rlcf	___fldiv@b& (0+255),f,b
 10713  004518  377A               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10714  00451A  377B               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10715  00451C  377C               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10716                           
 10717                           ; BSR set to: 0
 10718  00451E  0100               	movlb	0	; () banked
 10719  004520  AF8F               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10720  004522  D002               	goto	l1414
 10721                           
 10722                           ; BSR set to: 0
 10723  004524  0100               	movlb	0	; () banked
 10724  004526  8179               	bsf	___fldiv@b& (0+255),0,b
 10725  004528                     l1414:
 10726                           
 10727                           ; BSR set to: 0
 10728  004528  0100               	movlb	0	; () banked
 10729  00452A  90D8               	bcf	status,0,c
 10730  00452C  378C               	rlcf	___fldiv@grs& (0+255),f,b
 10731  00452E  378D               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10732  004530  378E               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10733  004532  378F               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10734  004534  0100               	movlb	0	; () banked
 10735  004536  078A               	decf	___fldiv@new_exp& (0+255),f,b
 10736  004538  A0D8               	btfss	status,0,c
 10737  00453A  078B               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 10738  00453C                     l7292:
 10739                           
 10740                           ; BSR set to: 0
 10741  00453C  0100               	movlb	0	; () banked
 10742  00453E  AF7B               	btfss	(___fldiv@b+2)& (0+255),7,b
 10743  004540  D7E8               	goto	l7286
 10744                           
 10745                           ; BSR set to: 0
 10746                           
 10747                           ; BSR set to: 0
 10748  004542  0E00               	movlw	0
 10749  004544  0100               	movlb	0	; () banked
 10750  004546  6F91               	movwf	___fldiv@aexp& (0+255),b
 10751                           
 10752                           ; BSR set to: 0
 10753  004548  0100               	movlb	0	; () banked
 10754  00454A  AF8F               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10755  00454C  D024               	goto	l1416
 10756                           
 10757                           ; BSR set to: 0
 10758  00454E  0EFF               	movlw	255
 10759  004550  0100               	movlb	0	; () banked
 10760  004552  158C               	andwf	___fldiv@grs& (0+255),w,b
 10761  004554  0100               	movlb	0	; () banked
 10762  004556  6F81               	movwf	??___fldiv& (0+255),b
 10763  004558  0EFF               	movlw	255
 10764  00455A  0100               	movlb	0	; () banked
 10765  00455C  158D               	andwf	(___fldiv@grs+1)& (0+255),w,b
 10766  00455E  0100               	movlb	0	; () banked
 10767  004560  6F82               	movwf	(??___fldiv+1)& (0+255),b
 10768  004562  0EFF               	movlw	255
 10769  004564  0100               	movlb	0	; () banked
 10770  004566  158E               	andwf	(___fldiv@grs+2)& (0+255),w,b
 10771  004568  0100               	movlb	0	; () banked
 10772  00456A  6F83               	movwf	(??___fldiv+2)& (0+255),b
 10773  00456C  0E7F               	movlw	127
 10774  00456E  0100               	movlb	0	; () banked
 10775  004570  158F               	andwf	(___fldiv@grs+3)& (0+255),w,b
 10776  004572  0100               	movlb	0	; () banked
 10777  004574  6F84               	movwf	(??___fldiv+3)& (0+255),b
 10778  004576  0100               	movlb	0	; () banked
 10779  004578  5181               	movf	??___fldiv& (0+255),w,b
 10780  00457A  0100               	movlb	0	; () banked
 10781  00457C  1182               	iorwf	(??___fldiv+1)& (0+255),w,b
 10782  00457E  0100               	movlb	0	; () banked
 10783  004580  1183               	iorwf	(??___fldiv+2)& (0+255),w,b
 10784  004582  0100               	movlb	0	; () banked
 10785  004584  1184               	iorwf	(??___fldiv+3)& (0+255),w,b
 10786  004586  A4D8               	btfss	status,2,c
 10787  004588  D003               	goto	l7302
 10788                           
 10789                           ; BSR set to: 0
 10790                           
 10791                           ; BSR set to: 0
 10792  00458A  0100               	movlb	0	; () banked
 10793  00458C  A179               	btfss	___fldiv@b& (0+255),0,b
 10794  00458E  D003               	goto	l1416
 10795  004590                     l7302:
 10796                           
 10797                           ; BSR set to: 0
 10798  004590  0E01               	movlw	1
 10799  004592  0100               	movlb	0	; () banked
 10800  004594  6F91               	movwf	___fldiv@aexp& (0+255),b
 10801  004596                     l1416:
 10802                           
 10803                           ; BSR set to: 0
 10804  004596  0100               	movlb	0	; () banked
 10805  004598  5191               	movf	___fldiv@aexp& (0+255),w,b
 10806  00459A  0100               	movlb	0	; () banked
 10807  00459C  B4D8               	btfsc	status,2,c
 10808  00459E  D023               	goto	l7312
 10809                           
 10810                           ; BSR set to: 0
 10811  0045A0  0E01               	movlw	1
 10812  0045A2  0100               	movlb	0	; () banked
 10813  0045A4  2779               	addwf	___fldiv@b& (0+255),f,b
 10814  0045A6  0E00               	movlw	0
 10815  0045A8  237A               	addwfc	(___fldiv@b+1)& (0+255),f,b
 10816  0045AA  237B               	addwfc	(___fldiv@b+2)& (0+255),f,b
 10817  0045AC  237C               	addwfc	(___fldiv@b+3)& (0+255),f,b
 10818                           
 10819                           ; BSR set to: 0
 10820  0045AE  0100               	movlb	0	; () banked
 10821  0045B0  A17C               	btfss	(___fldiv@b+3)& (0+255),0,b
 10822  0045B2  D019               	goto	l7312
 10823                           
 10824                           ; BSR set to: 0
 10825  0045B4  C079  F081         	movff	___fldiv@b,??___fldiv
 10826  0045B8  C07A  F082         	movff	___fldiv@b+1,??___fldiv+1
 10827  0045BC  C07B  F083         	movff	___fldiv@b+2,??___fldiv+2
 10828  0045C0  C07C  F084         	movff	___fldiv@b+3,??___fldiv+3
 10829  0045C4  0100               	movlb	0	; () banked
 10830  0045C6  3584               	rlcf	(??___fldiv+3)& (0+255),w,b
 10831  0045C8  3384               	rrcf	(??___fldiv+3)& (0+255),f,b
 10832  0045CA  3383               	rrcf	(??___fldiv+2)& (0+255),f,b
 10833  0045CC  3382               	rrcf	(??___fldiv+1)& (0+255),f,b
 10834  0045CE  3381               	rrcf	??___fldiv& (0+255),f,b
 10835  0045D0  C081  F079         	movff	??___fldiv,___fldiv@b
 10836  0045D4  C082  F07A         	movff	??___fldiv+1,___fldiv@b+1
 10837  0045D8  C083  F07B         	movff	??___fldiv+2,___fldiv@b+2
 10838  0045DC  C084  F07C         	movff	??___fldiv+3,___fldiv@b+3
 10839                           
 10840                           ; BSR set to: 0
 10841  0045E0  0100               	movlb	0	; () banked
 10842  0045E2  4B8A               	infsnz	___fldiv@new_exp& (0+255),f,b
 10843  0045E4  2B8B               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 10844  0045E6                     l7312:
 10845                           
 10846                           ; BSR set to: 0
 10847  0045E6  0100               	movlb	0	; () banked
 10848  0045E8  BF8B               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10849  0045EA  D014               	goto	l7316
 10850  0045EC  0100               	movlb	0	; () banked
 10851  0045EE  518B               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10852  0045F0  E104               	bnz	u9680
 10853  0045F2  0100               	movlb	0	; () banked
 10854  0045F4  298A               	incf	___fldiv@new_exp& (0+255),w,b
 10855  0045F6  A0D8               	btfss	status,0,c
 10856  0045F8  D00D               	goto	l7316
 10857  0045FA                     u9680:
 10858                           
 10859                           ; BSR set to: 0
 10860  0045FA  0E00               	movlw	0
 10861  0045FC  0100               	movlb	0	; () banked
 10862  0045FE  6F8B               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10863  004600  698A               	setf	___fldiv@new_exp& (0+255),b
 10864  004602  0E00               	movlw	0
 10865  004604  0100               	movlb	0	; () banked
 10866  004606  6F79               	movwf	___fldiv@b& (0+255),b
 10867  004608  0E00               	movlw	0
 10868  00460A  6F7A               	movwf	(___fldiv@b+1)& (0+255),b
 10869  00460C  0E00               	movlw	0
 10870  00460E  6F7B               	movwf	(___fldiv@b+2)& (0+255),b
 10871  004610  0E00               	movlw	0
 10872  004612  6F7C               	movwf	(___fldiv@b+3)& (0+255),b
 10873  004614                     l7316:
 10874                           
 10875                           ; BSR set to: 0
 10876  004614  0100               	movlb	0	; () banked
 10877  004616  BF8B               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10878  004618  D007               	goto	l7318
 10879  00461A  0100               	movlb	0	; () banked
 10880  00461C  518B               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10881  00461E  E115               	bnz	l7320
 10882  004620  0100               	movlb	0	; () banked
 10883  004622  058A               	decf	___fldiv@new_exp& (0+255),w,b
 10884  004624  B0D8               	btfsc	status,0,c
 10885  004626  D011               	goto	l7320
 10886  004628                     l7318:
 10887                           
 10888                           ; BSR set to: 0
 10889  004628  0E00               	movlw	0
 10890  00462A  0100               	movlb	0	; () banked
 10891  00462C  6F8B               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10892  00462E  0E00               	movlw	0
 10893  004630  6F8A               	movwf	___fldiv@new_exp& (0+255),b
 10894  004632  0E00               	movlw	0
 10895  004634  0100               	movlb	0	; () banked
 10896  004636  6F79               	movwf	___fldiv@b& (0+255),b
 10897  004638  0E00               	movlw	0
 10898  00463A  6F7A               	movwf	(___fldiv@b+1)& (0+255),b
 10899  00463C  0E00               	movlw	0
 10900  00463E  6F7B               	movwf	(___fldiv@b+2)& (0+255),b
 10901  004640  0E00               	movlw	0
 10902  004642  6F7C               	movwf	(___fldiv@b+3)& (0+255),b
 10903  004644  0E00               	movlw	0
 10904  004646  0100               	movlb	0	; () banked
 10905  004648  6F85               	movwf	___fldiv@sign& (0+255),b
 10906  00464A                     l7320:
 10907                           
 10908                           ; BSR set to: 0
 10909  00464A  C08A  F090         	movff	___fldiv@new_exp,___fldiv@bexp
 10910                           
 10911                           ; BSR set to: 0
 10912  00464E  0100               	movlb	0	; () banked
 10913  004650  A190               	btfss	___fldiv@bexp& (0+255),0,b
 10914  004652  D003               	goto	l7326
 10915                           
 10916                           ; BSR set to: 0
 10917  004654  0100               	movlb	0	; () banked
 10918  004656  8F7B               	bsf	(___fldiv@b+2)& (0+255),7,b
 10919  004658  D002               	goto	l7328
 10920  00465A                     l7326:
 10921                           
 10922                           ; BSR set to: 0
 10923  00465A  0100               	movlb	0	; () banked
 10924  00465C  9F7B               	bcf	(___fldiv@b+2)& (0+255),7,b
 10925  00465E                     l7328:
 10926                           
 10927                           ; BSR set to: 0
 10928  00465E  0100               	movlb	0	; () banked
 10929  004660  90D8               	bcf	status,0,c
 10930  004662  3190               	rrcf	___fldiv@bexp& (0+255),w,b
 10931  004664  0100               	movlb	0	; () banked
 10932  004666  6F7C               	movwf	(___fldiv@b+3)& (0+255),b
 10933                           
 10934                           ; BSR set to: 0
 10935  004668  0100               	movlb	0	; () banked
 10936  00466A  5185               	movf	___fldiv@sign& (0+255),w,b
 10937  00466C  0100               	movlb	0	; () banked
 10938  00466E  137C               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10939                           
 10940                           ; BSR set to: 0
 10941  004670  C079  F079         	movff	___fldiv@b,?___fldiv
 10942  004674  C07A  F07A         	movff	___fldiv@b+1,?___fldiv+1
 10943  004678  C07B  F07B         	movff	___fldiv@b+2,?___fldiv+2
 10944  00467C  C07C  F07C         	movff	___fldiv@b+3,?___fldiv+3
 10945  004680  0012               	return	
 10946  004682                     __end_of___fldiv:
 10947                           	opt stack 0
 10948                           tblptru	equ	0xFF8
 10949                           tblptrh	equ	0xFF7
 10950                           tblptrl	equ	0xFF6
 10951                           tablat	equ	0xFF5
 10952                           prodh	equ	0xFF4
 10953                           prodl	equ	0xFF3
 10954                           postinc0	equ	0xFEE
 10955                           wreg	equ	0xFE8
 10956                           postdec1	equ	0xFE5
 10957                           fsr1l	equ	0xFE1
 10958                           indf2	equ	0xFDF
 10959                           postinc2	equ	0xFDE
 10960                           postdec2	equ	0xFDD
 10961                           fsr2h	equ	0xFDA
 10962                           fsr2l	equ	0xFD9
 10963                           status	equ	0xFD8
 10964                           
 10965 ;; *************** function _delay_s *****************
 10966 ;; Defined at:
 10967 ;;		line 102 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 10968 ;; Parameters:    Size  Location     Type
 10969 ;;  value_s         1    wreg     unsigned char 
 10970 ;; Auto vars:     Size  Location     Type
 10971 ;;  value_s         1   33[BANK0 ] unsigned char 
 10972 ;;  repeat_loop     1   34[BANK0 ] unsigned char 
 10973 ;; Return value:  Size  Location     Type
 10974 ;;                  1    wreg      void 
 10975 ;; Registers used:
 10976 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10977 ;; Tracked objects:
 10978 ;;		On entry : 0/0
 10979 ;;		On exit  : 0/0
 10980 ;;		Unchanged: 0/0
 10981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10983 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10985 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10986 ;;Total ram usage:        2 bytes
 10987 ;; Hardware stack levels used:    1
 10988 ;; Hardware stack levels required when called:    7
 10989 ;; This function calls:
 10990 ;;		_delay_ms
 10991 ;; This function is called by:
 10992 ;;		_park_routine
 10993 ;; This function uses a non-reentrant model
 10994 ;;
 10995                           
 10996                           	psect	text26
 10997  00666A                     __ptext26:
 10998                           	opt stack 0
 10999  00666A                     _delay_s:
 11000                           	opt stack 22
 11001                           
 11002                           ; BSR set to: 0
 11003                           ;incstack = 0
 11004                           ;delay_s@value_s stored from wreg
 11005  00666A  0100               	movlb	0	; () banked
 11006  00666C  6F81               	movwf	delay_s@value_s& (0+255),b
 11007                           
 11008                           ;src\delay.c: 104: unsigned char repeat_loop;
 11009                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
 11010  00666E  0E00               	movlw	0
 11011  006670  0100               	movlb	0	; () banked
 11012  006672  6F82               	movwf	delay_s@repeat_loop& (0+255),b
 11013  006674  D009               	goto	l7888
 11014  006676                     l7884:
 11015                           
 11016                           ; BSR set to: 0
 11017                           ;src\delay.c: 107: delay_ms (1000);
 11018  006676  0E03               	movlw	3
 11019  006678  0100               	movlb	0	; () banked
 11020  00667A  6F80               	movwf	(delay_ms@value_ms+1)& (0+255),b
 11021  00667C  0EE8               	movlw	232
 11022  00667E  6F7F               	movwf	delay_ms@value_ms& (0+255),b
 11023  006680  ECEC  F032         	call	_delay_ms	;wreg free
 11024  006684  0100               	movlb	0	; () banked
 11025  006686  2B82               	incf	delay_s@repeat_loop& (0+255),f,b
 11026  006688                     l7888:
 11027                           
 11028                           ; BSR set to: 0
 11029  006688  0100               	movlb	0	; () banked
 11030  00668A  5181               	movf	delay_s@value_s& (0+255),w,b
 11031  00668C  0100               	movlb	0	; () banked
 11032  00668E  5D82               	subwf	delay_s@repeat_loop& (0+255),w,b
 11033  006690  B0D8               	btfsc	status,0,c
 11034  006692  0012               	return	
 11035  006694  D7F0               	goto	l7884
 11036  006696                     __end_of_delay_s:
 11037                           	opt stack 0
 11038                           tblptru	equ	0xFF8
 11039                           tblptrh	equ	0xFF7
 11040                           tblptrl	equ	0xFF6
 11041                           tablat	equ	0xFF5
 11042                           prodh	equ	0xFF4
 11043                           prodl	equ	0xFF3
 11044                           postinc0	equ	0xFEE
 11045                           wreg	equ	0xFE8
 11046                           postdec1	equ	0xFE5
 11047                           fsr1l	equ	0xFE1
 11048                           indf2	equ	0xFDF
 11049                           postinc2	equ	0xFDE
 11050                           postdec2	equ	0xFDD
 11051                           fsr2h	equ	0xFDA
 11052                           fsr2l	equ	0xFD9
 11053                           status	equ	0xFD8
 11054                           
 11055 ;; *************** function _delay_ms *****************
 11056 ;; Defined at:
 11057 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 11058 ;; Parameters:    Size  Location     Type
 11059 ;;  value_ms        2   31[BANK0 ] unsigned int 
 11060 ;; Auto vars:     Size  Location     Type
 11061 ;;		None
 11062 ;; Return value:  Size  Location     Type
 11063 ;;                  1    wreg      void 
 11064 ;; Registers used:
 11065 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11066 ;; Tracked objects:
 11067 ;;		On entry : 0/0
 11068 ;;		On exit  : 0/0
 11069 ;;		Unchanged: 0/0
 11070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11071 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11074 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11075 ;;Total ram usage:        2 bytes
 11076 ;; Hardware stack levels used:    1
 11077 ;; Hardware stack levels required when called:    6
 11078 ;; This function calls:
 11079 ;;		___wmul
 11080 ;; This function is called by:
 11081 ;;		_delay_s
 11082 ;;		_main
 11083 ;;		_park_routine
 11084 ;; This function uses a non-reentrant model
 11085 ;;
 11086                           
 11087                           	psect	text27
 11088  0065D8                     __ptext27:
 11089                           	opt stack 0
 11090  0065D8                     _delay_ms:
 11091                           	opt stack 22
 11092                           
 11093                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 11094                           
 11095                           ; BSR set to: 0
 11096                           ;incstack = 0
 11097  0065D8  C0E6  F079         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 11098  0065DC  0100               	movlb	0	; () banked
 11099  0065DE  6B7A               	clrf	(___wmul@multiplier+1)& (0+255),b
 11100  0065E0  C07F  F07B         	movff	delay_ms@value_ms,___wmul@multiplicand
 11101  0065E4  C080  F07C         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 11102  0065E8  ECD1  F032         	call	___wmul	;wreg free
 11103  0065EC  C079  F034         	movff	?___wmul,_clock_counter_reference	;volatile
 11104  0065F0  C07A  F035         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 11105                           
 11106                           ;src\delay.c: 75: while (clock_counter_reference) {
 11107  0065F4  D006               	goto	l567
 11108  0065F6                     l7794:
 11109                           
 11110                           ;src\delay.c: 85: _delay(240);
 11111  0065F6  0E50               	movlw	80
 11112  0065F8                     u11917:
 11113  0065F8  2EE8               	decfsz	wreg,f,c
 11114  0065FA  D7FE               	goto	u11917
 11115                           
 11116                           ;src\delay.c: 88: clock_counter_reference--;
 11117  0065FC  0634               	decf	_clock_counter_reference,f,c	;volatile
 11118  0065FE  A0D8               	btfss	status,0,c
 11119  006600  0635               	decf	_clock_counter_reference+1,f,c	;volatile
 11120  006602                     l567:
 11121  006602  5034               	movf	_clock_counter_reference,w,c	;volatile
 11122  006604  1035               	iorwf	_clock_counter_reference+1,w,c	;volatile
 11123  006606  B4D8               	btfsc	status,2,c
 11124  006608  0012               	return	
 11125  00660A  D7F5               	goto	l7794
 11126  00660C                     __end_of_delay_ms:
 11127                           	opt stack 0
 11128                           tblptru	equ	0xFF8
 11129                           tblptrh	equ	0xFF7
 11130                           tblptrl	equ	0xFF6
 11131                           tablat	equ	0xFF5
 11132                           prodh	equ	0xFF4
 11133                           prodl	equ	0xFF3
 11134                           postinc0	equ	0xFEE
 11135                           wreg	equ	0xFE8
 11136                           postdec1	equ	0xFE5
 11137                           fsr1l	equ	0xFE1
 11138                           indf2	equ	0xFDF
 11139                           postinc2	equ	0xFDE
 11140                           postdec2	equ	0xFDD
 11141                           fsr2h	equ	0xFDA
 11142                           fsr2l	equ	0xFD9
 11143                           status	equ	0xFD8
 11144                           
 11145 ;; *************** function ___wmul *****************
 11146 ;; Defined at:
 11147 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
 11148 ;; Parameters:    Size  Location     Type
 11149 ;;  multiplier      2   25[BANK0 ] unsigned int 
 11150 ;;  multiplicand    2   27[BANK0 ] unsigned int 
 11151 ;; Auto vars:     Size  Location     Type
 11152 ;;  product         2   29[BANK0 ] unsigned int 
 11153 ;; Return value:  Size  Location     Type
 11154 ;;                  2   25[BANK0 ] unsigned int 
 11155 ;; Registers used:
 11156 ;;		wreg, status,2, status,0, prodl, prodh
 11157 ;; Tracked objects:
 11158 ;;		On entry : 0/0
 11159 ;;		On exit  : 0/0
 11160 ;;		Unchanged: 0/0
 11161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11162 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11163 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11165 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11166 ;;Total ram usage:        6 bytes
 11167 ;; Hardware stack levels used:    1
 11168 ;; Hardware stack levels required when called:    5
 11169 ;; This function calls:
 11170 ;;		Nothing
 11171 ;; This function is called by:
 11172 ;;		_delay_ms
 11173 ;; This function uses a non-reentrant model
 11174 ;;
 11175                           
 11176                           	psect	text28
 11177  0065A2                     __ptext28:
 11178                           	opt stack 0
 11179  0065A2                     ___wmul:
 11180                           	opt stack 22
 11181                           
 11182                           ;incstack = 0
 11183  0065A2  0100               	movlb	0	; () banked
 11184  0065A4  5179               	movf	___wmul@multiplier& (0+255),w,b
 11185  0065A6  0100               	movlb	0	; () banked
 11186  0065A8  037B               	mulwf	___wmul@multiplicand& (0+255),b
 11187  0065AA  CFF3 F07D          	movff	prodl,___wmul@product
 11188  0065AE  CFF4 F07E          	movff	prodh,___wmul@product+1
 11189  0065B2  0100               	movlb	0	; () banked
 11190  0065B4  5179               	movf	___wmul@multiplier& (0+255),w,b
 11191  0065B6  0100               	movlb	0	; () banked
 11192  0065B8  037C               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11193  0065BA  50F3               	movf	prodl,w,c
 11194  0065BC  0100               	movlb	0	; () banked
 11195  0065BE  277E               	addwf	(___wmul@product+1)& (0+255),f,b
 11196  0065C0  0100               	movlb	0	; () banked
 11197  0065C2  517A               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11198  0065C4  0100               	movlb	0	; () banked
 11199  0065C6  037B               	mulwf	___wmul@multiplicand& (0+255),b
 11200  0065C8  50F3               	movf	prodl,w,c
 11201  0065CA  0100               	movlb	0	; () banked
 11202  0065CC  277E               	addwf	(___wmul@product+1)& (0+255),f,b
 11203                           
 11204                           ; BSR set to: 0
 11205  0065CE  C07D  F079         	movff	___wmul@product,?___wmul
 11206  0065D2  C07E  F07A         	movff	___wmul@product+1,?___wmul+1
 11207  0065D6  0012               	return	
 11208  0065D8                     __end_of___wmul:
 11209                           	opt stack 0
 11210                           tblptru	equ	0xFF8
 11211                           tblptrh	equ	0xFF7
 11212                           tblptrl	equ	0xFF6
 11213                           tablat	equ	0xFF5
 11214                           prodh	equ	0xFF4
 11215                           prodl	equ	0xFF3
 11216                           postinc0	equ	0xFEE
 11217                           wreg	equ	0xFE8
 11218                           postdec1	equ	0xFE5
 11219                           fsr1l	equ	0xFE1
 11220                           indf2	equ	0xFDF
 11221                           postinc2	equ	0xFDE
 11222                           postdec2	equ	0xFDD
 11223                           fsr2h	equ	0xFDA
 11224                           fsr2l	equ	0xFD9
 11225                           status	equ	0xFD8
 11226                           
 11227 ;; *************** function _configurations *****************
 11228 ;; Defined at:
 11229 ;;		line 493 in file "parcheggio.c"
 11230 ;; Parameters:    Size  Location     Type
 11231 ;;		None
 11232 ;; Auto vars:     Size  Location     Type
 11233 ;;		None
 11234 ;; Return value:  Size  Location     Type
 11235 ;;                  1    wreg      void 
 11236 ;; Registers used:
 11237 ;;		wreg, status,2, status,0, cstack
 11238 ;; Tracked objects:
 11239 ;;		On entry : 0/0
 11240 ;;		On exit  : 0/0
 11241 ;;		Unchanged: 0/0
 11242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11247 ;;Total ram usage:        0 bytes
 11248 ;; Hardware stack levels used:    1
 11249 ;; Hardware stack levels required when called:    7
 11250 ;; This function calls:
 11251 ;;		_CANInitialize
 11252 ;; This function is called by:
 11253 ;;		_main
 11254 ;; This function uses a non-reentrant model
 11255 ;;
 11256                           
 11257                           	psect	text29
 11258  0063CE                     __ptext29:
 11259                           	opt stack 0
 11260  0063CE                     _configurations:
 11261                           	opt stack 23
 11262                           
 11263                           ;parcheggio.c: 494: LATA = 0x00;
 11264                           
 11265                           ; BSR set to: 0
 11266                           ;incstack = 0
 11267  0063CE  0E00               	movlw	0
 11268  0063D0  6E89               	movwf	3977,c	;volatile
 11269                           
 11270                           ;parcheggio.c: 495: TRISA = 0b11110000;
 11271  0063D2  0EF0               	movlw	240
 11272  0063D4  6E92               	movwf	3986,c	;volatile
 11273                           
 11274                           ;parcheggio.c: 496: LATB = 0x00;
 11275  0063D6  0E00               	movlw	0
 11276  0063D8  6E8A               	movwf	3978,c	;volatile
 11277                           
 11278                           ;parcheggio.c: 497: TRISB = 0b10001010;
 11279  0063DA  0E8A               	movlw	138
 11280  0063DC  6E93               	movwf	3987,c	;volatile
 11281                           
 11282                           ;parcheggio.c: 498: LATC = 0x00;
 11283  0063DE  0E00               	movlw	0
 11284  0063E0  6E8B               	movwf	3979,c	;volatile
 11285                           
 11286                           ;parcheggio.c: 499: TRISC = 0b11111111;
 11287  0063E2  6894               	setf	3988,c	;volatile
 11288                           
 11289                           ;parcheggio.c: 501: ADCON1 = 0xFF;
 11290  0063E4  68C1               	setf	4033,c	;volatile
 11291                           
 11292                           ;parcheggio.c: 502: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG
      +                          _SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
 11293  0063E6  0E06               	movlw	6
 11294  0063E8  0100               	movlb	0	; () banked
 11295  0063EA  6F87               	movwf	CANInitialize@phaseSeg1& (0+255),b
 11296  0063EC  0E05               	movlw	5
 11297  0063EE  0100               	movlb	0	; () banked
 11298  0063F0  6F88               	movwf	CANInitialize@phaseSeg2& (0+255),b
 11299  0063F2  0E01               	movlw	1
 11300  0063F4  0100               	movlb	0	; () banked
 11301  0063F6  6F89               	movwf	CANInitialize@SJW& (0+255),b
 11302  0063F8  0E03               	movlw	3
 11303  0063FA  0100               	movlb	0	; () banked
 11304  0063FC  6F8A               	movwf	CANInitialize@BRP& (0+255),b
 11305  0063FE  0E9D               	movlw	157
 11306  006400  0100               	movlb	0	; () banked
 11307  006402  6F8B               	movwf	CANInitialize@flags& (0+255),b
 11308  006404  0E04               	movlw	4
 11309  006406  EC5A  F02C         	call	_CANInitialize
 11310                           
 11311                           ;parcheggio.c: 505: RCONbits.IPEN = 1;
 11312  00640A  8ED0               	bsf	4048,7,c	;volatile
 11313                           
 11314                           ;parcheggio.c: 506: IPR3bits.RXB1IP = 0;
 11315  00640C  92A5               	bcf	4005,1,c	;volatile
 11316                           
 11317                           ;parcheggio.c: 507: IPR3bits.RXB0IP = 0;
 11318  00640E  90A5               	bcf	4005,0,c	;volatile
 11319                           
 11320                           ;parcheggio.c: 508: INTCON2bits.TMR0IP = 0;
 11321  006410  94F1               	bcf	intcon2,2,c	;volatile
 11322                           
 11323                           ;parcheggio.c: 511: PIR3bits.RXB1IF = 0;
 11324  006412  92A4               	bcf	4004,1,c	;volatile
 11325                           
 11326                           ;parcheggio.c: 512: PIR3bits.RXB0IF = 0;
 11327  006414  90A4               	bcf	4004,0,c	;volatile
 11328                           
 11329                           ;parcheggio.c: 513: INTCONbits.INT0IF = 0;
 11330  006416  92F2               	bcf	intcon,1,c	;volatile
 11331                           
 11332                           ;parcheggio.c: 514: INTCONbits.TMR0IF = 0;
 11333  006418  94F2               	bcf	intcon,2,c	;volatile
 11334                           
 11335                           ;parcheggio.c: 518: PIE3bits.RXB1IE = 1;
 11336  00641A  82A3               	bsf	4003,1,c	;volatile
 11337                           
 11338                           ;parcheggio.c: 519: PIE3bits.RXB0IE = 1;
 11339  00641C  80A3               	bsf	4003,0,c	;volatile
 11340                           
 11341                           ;parcheggio.c: 520: INTCONbits.TMR0IE = 1;
 11342  00641E  8AF2               	bsf	intcon,5,c	;volatile
 11343                           
 11344                           ;parcheggio.c: 521: INTCONbits.INT0IE = 0;
 11345  006420  98F2               	bcf	intcon,4,c	;volatile
 11346                           
 11347                           ;parcheggio.c: 524: T0CON = 0x80;
 11348  006422  0E80               	movlw	128
 11349  006424  6ED5               	movwf	4053,c	;volatile
 11350                           
 11351                           ;parcheggio.c: 525: TMR0H = 0x34;
 11352  006426  0E34               	movlw	52
 11353  006428  6ED7               	movwf	4055,c	;volatile
 11354                           
 11355                           ;parcheggio.c: 526: TMR0L = 0xE0;
 11356  00642A  0EE0               	movlw	224
 11357  00642C  6ED6               	movwf	4054,c	;volatile
 11358                           
 11359                           ;parcheggio.c: 527: T3CON = 0x11;
 11360  00642E  0E11               	movlw	17
 11361  006430  6EB1               	movwf	4017,c	;volatile
 11362                           
 11363                           ;parcheggio.c: 529: INTCON2bits.INTEDG0 = 1;
 11364  006432  8CF1               	bsf	intcon2,6,c	;volatile
 11365                           
 11366                           ;parcheggio.c: 530: INTCONbits.GIEL = 1;
 11367  006434  8CF2               	bsf	intcon,6,c	;volatile
 11368                           
 11369                           ;parcheggio.c: 531: INTCONbits.GIEH = 1;
 11370  006436  8EF2               	bsf	intcon,7,c	;volatile
 11371  006438  0012               	return		;funcret
 11372  00643A                     __end_of_configurations:
 11373                           	opt stack 0
 11374                           tblptru	equ	0xFF8
 11375                           tblptrh	equ	0xFF7
 11376                           tblptrl	equ	0xFF6
 11377                           tablat	equ	0xFF5
 11378                           prodh	equ	0xFF4
 11379                           prodl	equ	0xFF3
 11380                           intcon	equ	0xFF2
 11381                           intcon2	equ	0xFF1
 11382                           postinc0	equ	0xFEE
 11383                           wreg	equ	0xFE8
 11384                           postdec1	equ	0xFE5
 11385                           fsr1l	equ	0xFE1
 11386                           indf2	equ	0xFDF
 11387                           postinc2	equ	0xFDE
 11388                           postdec2	equ	0xFDD
 11389                           fsr2h	equ	0xFDA
 11390                           fsr2l	equ	0xFD9
 11391                           status	equ	0xFD8
 11392                           
 11393 ;; *************** function _CANInitialize *****************
 11394 ;; Defined at:
 11395 ;;		line 218 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 11396 ;; Parameters:    Size  Location     Type
 11397 ;;  propSeg         1    wreg     unsigned char 
 11398 ;;  phaseSeg1       1   39[BANK0 ] unsigned char 
 11399 ;;  phaseSeg2       1   40[BANK0 ] unsigned char 
 11400 ;;  SJW             1   41[BANK0 ] unsigned char 
 11401 ;;  BRP             1   42[BANK0 ] unsigned char 
 11402 ;;  flags           1   43[BANK0 ] enum E15399
 11403 ;; Auto vars:     Size  Location     Type
 11404 ;;  propSeg         1   48[BANK0 ] unsigned char 
 11405 ;;  FilterConfig    1   50[BANK0 ] unsigned char 
 11406 ;;  FilterConfig    1   49[BANK0 ] unsigned char 
 11407 ;; Return value:  Size  Location     Type
 11408 ;;                  1    wreg      void 
 11409 ;; Registers used:
 11410 ;;		wreg, status,2, status,0, cstack
 11411 ;; Tracked objects:
 11412 ;;		On entry : 0/0
 11413 ;;		On exit  : 0/0
 11414 ;;		Unchanged: 0/0
 11415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11416 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11417 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11418 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11419 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11420 ;;Total ram usage:       12 bytes
 11421 ;; Hardware stack levels used:    1
 11422 ;; Hardware stack levels required when called:    6
 11423 ;; This function calls:
 11424 ;;		_CANOperationMode
 11425 ;;		_CANSetFilter
 11426 ;;		_CANSetMask
 11427 ;; This function is called by:
 11428 ;;		_configurations
 11429 ;; This function uses a non-reentrant model
 11430 ;;
 11431                           
 11432                           	psect	text30
 11433  0058B4                     __ptext30:
 11434                           	opt stack 0
 11435  0058B4                     _CANInitialize:
 11436                           	opt stack 23
 11437                           
 11438                           ;incstack = 0
 11439                           ;CANInitialize@propSeg stored from wreg
 11440  0058B4  0100               	movlb	0	; () banked
 11441  0058B6  6F90               	movwf	CANInitialize@propSeg& (0+255),b
 11442                           
 11443                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
 11444                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
 11445                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
 11446  0058B8  0E80               	movlw	128
 11447  0058BA  EC70  F033         	call	_CANOperationMode
 11448                           
 11449                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
 11450  0058BE  0E00               	movlw	0
 11451  0058C0  6E70               	movwf	3952,c	;volatile
 11452                           
 11453                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
 11454  0058C2  0E00               	movlw	0
 11455  0058C4  6E71               	movwf	3953,c	;volatile
 11456                           
 11457                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
 11458  0058C6  0E00               	movlw	0
 11459  0058C8  6E72               	movwf	3954,c	;volatile
 11460                           
 11461                           ;inc\CANlib.h: 229: SJW= SJW << 6;
 11462  0058CA  0100               	movlb	0	; () banked
 11463  0058CC  4189               	rrncf	CANInitialize@SJW& (0+255),w,b
 11464  0058CE  42E8               	rrncf	wreg,f,c
 11465  0058D0  0BC0               	andlw	192
 11466  0058D2  0100               	movlb	0	; () banked
 11467  0058D4  6F89               	movwf	CANInitialize@SJW& (0+255),b
 11468                           
 11469                           ; BSR set to: 0
 11470                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
 11471  0058D6  0100               	movlb	0	; () banked
 11472  0058D8  5189               	movf	CANInitialize@SJW& (0+255),w,b
 11473  0058DA  1270               	iorwf	3952,f,c	;volatile
 11474                           
 11475                           ; BSR set to: 0
 11476                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
 11477  0058DC  0100               	movlb	0	; () banked
 11478  0058DE  518A               	movf	CANInitialize@BRP& (0+255),w,b
 11479  0058E0  1270               	iorwf	3952,f,c	;volatile
 11480                           
 11481                           ; BSR set to: 0
 11482                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
 11483  0058E2  0100               	movlb	0	; () banked
 11484  0058E4  5190               	movf	CANInitialize@propSeg& (0+255),w,b
 11485  0058E6  1271               	iorwf	3953,f,c	;volatile
 11486                           
 11487                           ; BSR set to: 0
 11488                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
 11489  0058E8  0100               	movlb	0	; () banked
 11490  0058EA  3987               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
 11491  0058EC  42E8               	rrncf	wreg,f,c
 11492  0058EE  0BF8               	andlw	248
 11493  0058F0  0100               	movlb	0	; () banked
 11494  0058F2  6F87               	movwf	CANInitialize@phaseSeg1& (0+255),b
 11495                           
 11496                           ; BSR set to: 0
 11497                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
 11498  0058F4  0100               	movlb	0	; () banked
 11499  0058F6  5187               	movf	CANInitialize@phaseSeg1& (0+255),w,b
 11500  0058F8  1271               	iorwf	3953,f,c	;volatile
 11501                           
 11502                           ; BSR set to: 0
 11503                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
 11504  0058FA  0100               	movlb	0	; () banked
 11505  0058FC  A58B               	btfss	CANInitialize@flags& (0+255),2,b
 11506                           
 11507                           ; BSR set to: 0
 11508                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
 11509  0058FE  8C71               	bsf	3953,6,c	;volatile
 11510                           
 11511                           ; BSR set to: 0
 11512                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
 11513  005900  0100               	movlb	0	; () banked
 11514  005902  B18B               	btfsc	CANInitialize@flags& (0+255),0,b
 11515                           
 11516                           ; BSR set to: 0
 11517                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
 11518  005904  8E71               	bsf	3953,7,c	;volatile
 11519                           
 11520                           ; BSR set to: 0
 11521                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
 11522                           
 11523                           ; BSR set to: 0
 11524  005906  0100               	movlb	0	; () banked
 11525  005908  5188               	movf	CANInitialize@phaseSeg2& (0+255),w,b
 11526  00590A  1272               	iorwf	3954,f,c	;volatile
 11527                           
 11528                           ; BSR set to: 0
 11529                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
 11530  00590C  0100               	movlb	0	; () banked
 11531  00590E  B38B               	btfsc	CANInitialize@flags& (0+255),1,b
 11532                           
 11533                           ; BSR set to: 0
 11534                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
 11535  005910  8C72               	bsf	3954,6,c	;volatile
 11536                           
 11537                           ; BSR set to: 0
 11538                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
 11539                           
 11540                           ; BSR set to: 0
 11541  005912  0100               	movlb	0	; () banked
 11542  005914  518B               	movf	CANInitialize@flags& (0+255),w,b
 11543  005916  0B60               	andlw	96
 11544  005918  6E60               	movwf	3936,c	;volatile
 11545                           
 11546                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
 11547  00591A  0100               	movlb	0	; () banked
 11548  00591C  518B               	movf	CANInitialize@flags& (0+255),w,b
 11549  00591E  0B10               	andlw	16
 11550  005920  0AFF               	xorlw	255
 11551  005922  B4D8               	btfsc	status,2,c
 11552                           
 11553                           ; BSR set to: 0
 11554                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
 11555  005924  8460               	bsf	3936,2,c	;volatile
 11556                           
 11557                           ; BSR set to: 0
 11558                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
 11559  005926  CF60 FF50          	movff	3936,3920	;volatile
 11560                           
 11561                           ; BSR set to: 0
 11562                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
 11563  00592A  0E00               	movlw	0
 11564  00592C  0100               	movlb	0	; () banked
 11565  00592E  6F79               	movwf	CANSetMask@mask& (0+255),b
 11566  005930  0E00               	movlw	0
 11567  005932  6F7A               	movwf	(CANSetMask@mask+1)& (0+255),b
 11568  005934  0E00               	movlw	0
 11569  005936  6F7B               	movwf	(CANSetMask@mask+2)& (0+255),b
 11570  005938  0E00               	movlw	0
 11571  00593A  6F7C               	movwf	(CANSetMask@mask+3)& (0+255),b
 11572  00593C  0EF7               	movlw	247
 11573  00593E  0100               	movlb	0	; () banked
 11574  005940  6F7D               	movwf	CANSetMask@type& (0+255),b
 11575  005942  0E01               	movlw	1
 11576  005944  EC41  F023         	call	_CANSetMask
 11577                           
 11578                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
 11579  005948  0E00               	movlw	0
 11580  00594A  0100               	movlb	0	; () banked
 11581  00594C  6F79               	movwf	CANSetMask@mask& (0+255),b
 11582  00594E  0E00               	movlw	0
 11583  005950  6F7A               	movwf	(CANSetMask@mask+1)& (0+255),b
 11584  005952  0E00               	movlw	0
 11585  005954  6F7B               	movwf	(CANSetMask@mask+2)& (0+255),b
 11586  005956  0E00               	movlw	0
 11587  005958  6F7C               	movwf	(CANSetMask@mask+3)& (0+255),b
 11588  00595A  0EF7               	movlw	247
 11589  00595C  0100               	movlb	0	; () banked
 11590  00595E  6F7D               	movwf	CANSetMask@type& (0+255),b
 11591  005960  0E02               	movlw	2
 11592  005962  EC41  F023         	call	_CANSetMask
 11593                           
 11594                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
 11595  005966  D00F               	goto	l5778
 11596  005968                     l5772:
 11597                           
 11598                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
 11599  005968  0EF7               	movlw	247
 11600  00596A  0100               	movlb	0	; () banked
 11601  00596C  6F91               	movwf	CANInitialize@FilterConfig1& (0+255),b
 11602  00596E  D007               	goto	l5774
 11603  005970                     l356:
 11604                           
 11605                           ; BSR set to: 0
 11606                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
 11607  005970  0100               	movlb	0	; () banked
 11608  005972  6991               	setf	CANInitialize@FilterConfig1& (0+255),b
 11609                           
 11610                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
 11611  005974  0100               	movlb	0	; () banked
 11612  005976  6992               	setf	CANInitialize@FilterConfig2& (0+255),b
 11613                           
 11614                           ;inc\CANlib.h: 273: break;
 11615  005978  D028               	goto	l5780
 11616  00597A                     l357:
 11617                           
 11618                           ; BSR set to: 0
 11619                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
 11620  00597A  0100               	movlb	0	; () banked
 11621  00597C  6991               	setf	CANInitialize@FilterConfig1& (0+255),b
 11622  00597E                     l5774:
 11623                           
 11624                           ; BSR set to: 0
 11625                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
 11626  00597E  0EF7               	movlw	247
 11627  005980  0100               	movlb	0	; () banked
 11628  005982  6F92               	movwf	CANInitialize@FilterConfig2& (0+255),b
 11629                           
 11630                           ; BSR set to: 0
 11631                           ;inc\CANlib.h: 278: }
 11632                           
 11633                           ;inc\CANlib.h: 277: break;
 11634  005984  D022               	goto	l5780
 11635  005986                     l5778:
 11636  005986  0E9F               	movlw	159
 11637  005988  0100               	movlb	0	; () banked
 11638  00598A  6F8C               	movwf	??_CANInitialize& (0+255),b
 11639  00598C  0EFF               	movlw	255
 11640  00598E  0100               	movlb	0	; () banked
 11641  005990  6F8D               	movwf	(??_CANInitialize+1)& (0+255),b
 11642  005992  0100               	movlb	0	; () banked
 11643  005994  518B               	movf	CANInitialize@flags& (0+255),w,b
 11644  005996  0B60               	andlw	96
 11645  005998  0100               	movlb	0	; () banked
 11646  00599A  6F8E               	movwf	(??_CANInitialize+2)& (0+255),b
 11647  00599C  6B8F               	clrf	(??_CANInitialize+3)& (0+255),b
 11648  00599E  0100               	movlb	0	; () banked
 11649  0059A0  518C               	movf	??_CANInitialize& (0+255),w,b
 11650  0059A2  0100               	movlb	0	; () banked
 11651  0059A4  138E               	iorwf	(??_CANInitialize+2)& (0+255),f,b
 11652  0059A6  0100               	movlb	0	; () banked
 11653  0059A8  518D               	movf	(??_CANInitialize+1)& (0+255),w,b
 11654  0059AA  0100               	movlb	0	; () banked
 11655  0059AC  138F               	iorwf	(??_CANInitialize+3)& (0+255),f,b
 11656                           
 11657                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11658                           ; Switch size 1, requested type "space"
 11659                           ; Number of cases is 1, Range of values is 0 to 0
 11660                           ; switch strategies available:
 11661                           ; Name         Instructions Cycles
 11662                           ; simple_byte            4     3 (average)
 11663                           ;	Chosen strategy is simple_byte
 11664  0059AE  0100               	movlb	0	; () banked
 11665  0059B0  518F               	movf	(??_CANInitialize+3)& (0+255),w,b
 11666  0059B2  0A00               	xorlw	0	; case 0
 11667  0059B4  A4D8               	btfss	status,2,c
 11668  0059B6  D7E1               	goto	l357
 11669                           
 11670                           ; BSR set to: 0
 11671                           ; Switch size 1, requested type "space"
 11672                           ; Number of cases is 2, Range of values is 191 to 223
 11673                           ; switch strategies available:
 11674                           ; Name         Instructions Cycles
 11675                           ; simple_byte            7     4 (average)
 11676                           ;	Chosen strategy is simple_byte
 11677  0059B8  0100               	movlb	0	; () banked
 11678  0059BA  518E               	movf	(??_CANInitialize+2)& (0+255),w,b
 11679  0059BC  0ABF               	xorlw	191	; case 191
 11680  0059BE  B4D8               	btfsc	status,2,c
 11681  0059C0  D7D7               	goto	l356
 11682  0059C2  0A60               	xorlw	96	; case 223
 11683  0059C4  B4D8               	btfsc	status,2,c
 11684  0059C6  D7D0               	goto	l5772
 11685  0059C8  D7D8               	goto	l357
 11686  0059CA                     l5780:
 11687                           
 11688                           ; BSR set to: 0
 11689                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
 11690  0059CA  0E00               	movlw	0
 11691  0059CC  0100               	movlb	0	; () banked
 11692  0059CE  6F79               	movwf	CANSetFilter@filter& (0+255),b
 11693  0059D0  0E00               	movlw	0
 11694  0059D2  6F7A               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11695  0059D4  0E00               	movlw	0
 11696  0059D6  6F7B               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11697  0059D8  0E00               	movlw	0
 11698  0059DA  6F7C               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11699  0059DC  C091  F07D         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11700  0059E0  0E00               	movlw	0
 11701  0059E2  ECA9  F006         	call	_CANSetFilter
 11702                           
 11703                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
 11704  0059E6  0E00               	movlw	0
 11705  0059E8  0100               	movlb	0	; () banked
 11706  0059EA  6F79               	movwf	CANSetFilter@filter& (0+255),b
 11707  0059EC  0E00               	movlw	0
 11708  0059EE  6F7A               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11709  0059F0  0E00               	movlw	0
 11710  0059F2  6F7B               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11711  0059F4  0E00               	movlw	0
 11712  0059F6  6F7C               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11713  0059F8  C091  F07D         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11714  0059FC  0E01               	movlw	1
 11715  0059FE  ECA9  F006         	call	_CANSetFilter
 11716                           
 11717                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
 11718  005A02  0E00               	movlw	0
 11719  005A04  0100               	movlb	0	; () banked
 11720  005A06  6F79               	movwf	CANSetFilter@filter& (0+255),b
 11721  005A08  0E00               	movlw	0
 11722  005A0A  6F7A               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11723  005A0C  0E00               	movlw	0
 11724  005A0E  6F7B               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11725  005A10  0E00               	movlw	0
 11726  005A12  6F7C               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11727  005A14  C092  F07D         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11728  005A18  0E02               	movlw	2
 11729  005A1A  ECA9  F006         	call	_CANSetFilter
 11730                           
 11731                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
 11732  005A1E  0E00               	movlw	0
 11733  005A20  0100               	movlb	0	; () banked
 11734  005A22  6F79               	movwf	CANSetFilter@filter& (0+255),b
 11735  005A24  0E00               	movlw	0
 11736  005A26  6F7A               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11737  005A28  0E00               	movlw	0
 11738  005A2A  6F7B               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11739  005A2C  0E00               	movlw	0
 11740  005A2E  6F7C               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11741  005A30  C092  F07D         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11742  005A34  0E03               	movlw	3
 11743  005A36  ECA9  F006         	call	_CANSetFilter
 11744                           
 11745                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
 11746  005A3A  0E00               	movlw	0
 11747  005A3C  0100               	movlb	0	; () banked
 11748  005A3E  6F79               	movwf	CANSetFilter@filter& (0+255),b
 11749  005A40  0E00               	movlw	0
 11750  005A42  6F7A               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11751  005A44  0E00               	movlw	0
 11752  005A46  6F7B               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11753  005A48  0E00               	movlw	0
 11754  005A4A  6F7C               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11755  005A4C  C092  F07D         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11756  005A50  0E04               	movlw	4
 11757  005A52  ECA9  F006         	call	_CANSetFilter
 11758                           
 11759                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
 11760  005A56  0E00               	movlw	0
 11761  005A58  0100               	movlb	0	; () banked
 11762  005A5A  6F79               	movwf	CANSetFilter@filter& (0+255),b
 11763  005A5C  0E00               	movlw	0
 11764  005A5E  6F7A               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11765  005A60  0E00               	movlw	0
 11766  005A62  6F7B               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11767  005A64  0E00               	movlw	0
 11768  005A66  6F7C               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11769  005A68  C092  F07D         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11770  005A6C  0E05               	movlw	5
 11771  005A6E  ECA9  F006         	call	_CANSetFilter
 11772                           
 11773                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
 11774  005A72  0E00               	movlw	0
 11775  005A74  EC70  F033         	call	_CANOperationMode
 11776  005A78  0012               	return		;funcret
 11777  005A7A                     __end_of_CANInitialize:
 11778                           	opt stack 0
 11779                           tblptru	equ	0xFF8
 11780                           tblptrh	equ	0xFF7
 11781                           tblptrl	equ	0xFF6
 11782                           tablat	equ	0xFF5
 11783                           prodh	equ	0xFF4
 11784                           prodl	equ	0xFF3
 11785                           intcon	equ	0xFF2
 11786                           intcon2	equ	0xFF1
 11787                           postinc0	equ	0xFEE
 11788                           wreg	equ	0xFE8
 11789                           postdec1	equ	0xFE5
 11790                           fsr1l	equ	0xFE1
 11791                           indf2	equ	0xFDF
 11792                           postinc2	equ	0xFDE
 11793                           postdec2	equ	0xFDD
 11794                           fsr2h	equ	0xFDA
 11795                           fsr2l	equ	0xFD9
 11796                           status	equ	0xFD8
 11797                           
 11798 ;; *************** function _CANSetMask *****************
 11799 ;; Defined at:
 11800 ;;		line 640 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 11801 ;; Parameters:    Size  Location     Type
 11802 ;;  numBuffer       1    wreg     enum E15433
 11803 ;;  mask            4   25[BANK0 ] unsigned long 
 11804 ;;  type            1   29[BANK0 ] enum E15399
 11805 ;; Auto vars:     Size  Location     Type
 11806 ;;  numBuffer       1   34[BANK0 ] enum E15433
 11807 ;;  tamp            4   35[BANK0 ] unsigned long 
 11808 ;; Return value:  Size  Location     Type
 11809 ;;                  1    wreg      void 
 11810 ;; Registers used:
 11811 ;;		wreg, status,2, status,0
 11812 ;; Tracked objects:
 11813 ;;		On entry : 0/0
 11814 ;;		On exit  : 0/0
 11815 ;;		Unchanged: 0/0
 11816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11817 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11818 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11819 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11820 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11821 ;;Total ram usage:       14 bytes
 11822 ;; Hardware stack levels used:    1
 11823 ;; Hardware stack levels required when called:    5
 11824 ;; This function calls:
 11825 ;;		Nothing
 11826 ;; This function is called by:
 11827 ;;		_CANInitialize
 11828 ;; This function uses a non-reentrant model
 11829 ;;
 11830                           
 11831                           	psect	text31
 11832  004682                     __ptext31:
 11833                           	opt stack 0
 11834  004682                     _CANSetMask:
 11835                           	opt stack 23
 11836                           
 11837                           ;incstack = 0
 11838                           ;CANSetMask@numBuffer stored from wreg
 11839  004682  0100               	movlb	0	; () banked
 11840  004684  6F82               	movwf	CANSetMask@numBuffer& (0+255),b
 11841                           
 11842                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
 11843  004686  0100               	movlb	0	; () banked
 11844  004688  0582               	decf	CANSetMask@numBuffer& (0+255),w,b
 11845  00468A  A4D8               	btfss	status,2,c
 11846  00468C  D056               	goto	l5252
 11847                           
 11848                           ; BSR set to: 0
 11849  00468E  0100               	movlb	0	; () banked
 11850  004690  297D               	incf	CANSetMask@type& (0+255),w,b
 11851  004692  A4D8               	btfss	status,2,c
 11852  004694  D052               	goto	l5252
 11853                           
 11854                           ; BSR set to: 0
 11855                           ;inc\CANlib.h: 644: {
 11856                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
 11857  004696  C079  F07E         	movff	CANSetMask@mask,??_CANSetMask
 11858  00469A  C07A  F07F         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11859  00469E  C07B  F080         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11860  0046A2  C07C  F081         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11861  0046A6  0E04               	movlw	4
 11862  0046A8  D006               	goto	u6140
 11863  0046AA                     u6145:
 11864  0046AA  0100               	movlb	0	; () banked
 11865  0046AC  90D8               	bcf	status,0,c
 11866  0046AE  3381               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11867  0046B0  3380               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11868  0046B2  337F               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11869  0046B4  337E               	rrcf	??_CANSetMask& (0+255),f,b
 11870  0046B6                     u6140:
 11871  0046B6  2EE8               	decfsz	wreg,f,c
 11872  0046B8  D7F8               	goto	u6145
 11873  0046BA  C07E  F083         	movff	??_CANSetMask,CANSetMask@tamp
 11874  0046BE  C07F  F084         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11875  0046C2  C080  F085         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11876  0046C6  C081  F086         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11877                           
 11878                           ; BSR set to: 0
 11879                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
 11880  0046CA  0100               	movlb	0	; () banked
 11881  0046CC  5183               	movf	CANSetMask@tamp& (0+255),w,b
 11882  0046CE  0100               	movlb	0	; () banked
 11883  0046D0  6F83               	movwf	CANSetMask@tamp& (0+255),b
 11884  0046D2  6B84               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11885  0046D4  6B85               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11886  0046D6  6B86               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11887                           
 11888                           ; BSR set to: 0
 11889                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
 11890  0046D8  C083  FF18         	movff	CANSetMask@tamp,3864	;volatile
 11891                           
 11892                           ; BSR set to: 0
 11893                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
 11894  0046DC  0E07               	movlw	7
 11895  0046DE  0100               	movlb	0	; () banked
 11896  0046E0  1579               	andwf	CANSetMask@mask& (0+255),w,b
 11897  0046E2  0100               	movlb	0	; () banked
 11898  0046E4  6F83               	movwf	CANSetMask@tamp& (0+255),b
 11899  0046E6  0E00               	movlw	0
 11900  0046E8  0100               	movlb	0	; () banked
 11901  0046EA  157A               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11902  0046EC  0100               	movlb	0	; () banked
 11903  0046EE  6F84               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11904  0046F0  0E00               	movlw	0
 11905  0046F2  0100               	movlb	0	; () banked
 11906  0046F4  157B               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11907  0046F6  0100               	movlb	0	; () banked
 11908  0046F8  6F85               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11909  0046FA  0E00               	movlw	0
 11910  0046FC  0100               	movlb	0	; () banked
 11911  0046FE  157C               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11912  004700  0100               	movlb	0	; () banked
 11913  004702  6F86               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11914                           
 11915                           ; BSR set to: 0
 11916                           ;inc\CANlib.h: 650: tamp = tamp << 5;
 11917  004704  C083  F07E         	movff	CANSetMask@tamp,??_CANSetMask
 11918  004708  C084  F07F         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11919  00470C  C085  F080         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11920  004710  C086  F081         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11921  004714  0E05               	movlw	5
 11922  004716                     u6155:
 11923  004716  90D8               	bcf	status,0,c
 11924  004718  0100               	movlb	0	; () banked
 11925  00471A  377E               	rlcf	??_CANSetMask& (0+255),f,b
 11926  00471C  377F               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 11927  00471E  3780               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 11928  004720  3781               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 11929  004722  2EE8               	decfsz	wreg,f,c
 11930  004724  D7F8               	goto	u6155
 11931  004726  C07E  F083         	movff	??_CANSetMask,CANSetMask@tamp
 11932  00472A  C07F  F084         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11933  00472E  C080  F085         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11934  004732  C081  F086         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11935                           
 11936                           ; BSR set to: 0
 11937                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
 11938  004736  C083  FF19         	movff	CANSetMask@tamp,3865	;volatile
 11939  00473A                     l5252:
 11940                           
 11941                           ; BSR set to: 0
 11942                           ;inc\CANlib.h: 652: }
 11943                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
 11944  00473A  0E02               	movlw	2
 11945  00473C  0100               	movlb	0	; () banked
 11946  00473E  1982               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 11947  004740  A4D8               	btfss	status,2,c
 11948  004742  D056               	goto	l5268
 11949                           
 11950                           ; BSR set to: 0
 11951  004744  0100               	movlb	0	; () banked
 11952  004746  297D               	incf	CANSetMask@type& (0+255),w,b
 11953  004748  A4D8               	btfss	status,2,c
 11954  00474A  D052               	goto	l5268
 11955                           
 11956                           ; BSR set to: 0
 11957                           ;inc\CANlib.h: 655: {
 11958                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
 11959  00474C  C079  F07E         	movff	CANSetMask@mask,??_CANSetMask
 11960  004750  C07A  F07F         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11961  004754  C07B  F080         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11962  004758  C07C  F081         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11963  00475C  0E04               	movlw	4
 11964  00475E  D006               	goto	u6180
 11965  004760                     u6185:
 11966  004760  0100               	movlb	0	; () banked
 11967  004762  90D8               	bcf	status,0,c
 11968  004764  3381               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11969  004766  3380               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11970  004768  337F               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11971  00476A  337E               	rrcf	??_CANSetMask& (0+255),f,b
 11972  00476C                     u6180:
 11973  00476C  2EE8               	decfsz	wreg,f,c
 11974  00476E  D7F8               	goto	u6185
 11975  004770  C07E  F083         	movff	??_CANSetMask,CANSetMask@tamp
 11976  004774  C07F  F084         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11977  004778  C080  F085         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11978  00477C  C081  F086         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11979                           
 11980                           ; BSR set to: 0
 11981                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
 11982  004780  0100               	movlb	0	; () banked
 11983  004782  5183               	movf	CANSetMask@tamp& (0+255),w,b
 11984  004784  0100               	movlb	0	; () banked
 11985  004786  6F83               	movwf	CANSetMask@tamp& (0+255),b
 11986  004788  6B84               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11987  00478A  6B85               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11988  00478C  6B86               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11989                           
 11990                           ; BSR set to: 0
 11991                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
 11992  00478E  C083  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 11993                           
 11994                           ; BSR set to: 0
 11995                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
 11996  004792  0E07               	movlw	7
 11997  004794  0100               	movlb	0	; () banked
 11998  004796  1579               	andwf	CANSetMask@mask& (0+255),w,b
 11999  004798  0100               	movlb	0	; () banked
 12000  00479A  6F83               	movwf	CANSetMask@tamp& (0+255),b
 12001  00479C  0E00               	movlw	0
 12002  00479E  0100               	movlb	0	; () banked
 12003  0047A0  157A               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 12004  0047A2  0100               	movlb	0	; () banked
 12005  0047A4  6F84               	movwf	(CANSetMask@tamp+1)& (0+255),b
 12006  0047A6  0E00               	movlw	0
 12007  0047A8  0100               	movlb	0	; () banked
 12008  0047AA  157B               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 12009  0047AC  0100               	movlb	0	; () banked
 12010  0047AE  6F85               	movwf	(CANSetMask@tamp+2)& (0+255),b
 12011  0047B0  0E00               	movlw	0
 12012  0047B2  0100               	movlb	0	; () banked
 12013  0047B4  157C               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 12014  0047B6  0100               	movlb	0	; () banked
 12015  0047B8  6F86               	movwf	(CANSetMask@tamp+3)& (0+255),b
 12016                           
 12017                           ; BSR set to: 0
 12018                           ;inc\CANlib.h: 661: tamp = tamp << 5;
 12019  0047BA  C083  F07E         	movff	CANSetMask@tamp,??_CANSetMask
 12020  0047BE  C084  F07F         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 12021  0047C2  C085  F080         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 12022  0047C6  C086  F081         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 12023  0047CA  0E05               	movlw	5
 12024  0047CC                     u6195:
 12025  0047CC  90D8               	bcf	status,0,c
 12026  0047CE  0100               	movlb	0	; () banked
 12027  0047D0  377E               	rlcf	??_CANSetMask& (0+255),f,b
 12028  0047D2  377F               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 12029  0047D4  3780               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 12030  0047D6  3781               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 12031  0047D8  2EE8               	decfsz	wreg,f,c
 12032  0047DA  D7F8               	goto	u6195
 12033  0047DC  C07E  F083         	movff	??_CANSetMask,CANSetMask@tamp
 12034  0047E0  C07F  F084         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12035  0047E4  C080  F085         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12036  0047E8  C081  F086         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12037                           
 12038                           ; BSR set to: 0
 12039                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
 12040  0047EC  C083  FF1D         	movff	CANSetMask@tamp,3869	;volatile
 12041  0047F0                     l5268:
 12042                           
 12043                           ; BSR set to: 0
 12044                           ;inc\CANlib.h: 663: }
 12045                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
 12046  0047F0  0100               	movlb	0	; () banked
 12047  0047F2  0582               	decf	CANSetMask@numBuffer& (0+255),w,b
 12048  0047F4  A4D8               	btfss	status,2,c
 12049  0047F6  D087               	goto	l5300
 12050                           
 12051                           ; BSR set to: 0
 12052  0047F8  0EF7               	movlw	247
 12053  0047FA  0100               	movlb	0	; () banked
 12054  0047FC  197D               	xorwf	CANSetMask@type& (0+255),w,b
 12055  0047FE  A4D8               	btfss	status,2,c
 12056  004800  D082               	goto	l5300
 12057                           
 12058                           ; BSR set to: 0
 12059                           ;inc\CANlib.h: 666: {
 12060                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
 12061  004802  0100               	movlb	0	; () banked
 12062  004804  5179               	movf	CANSetMask@mask& (0+255),w,b
 12063  004806  0100               	movlb	0	; () banked
 12064  004808  6F83               	movwf	CANSetMask@tamp& (0+255),b
 12065  00480A  6B84               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12066  00480C  6B85               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12067  00480E  6B86               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12068                           
 12069                           ; BSR set to: 0
 12070                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
 12071  004810  C083  FF1B         	movff	CANSetMask@tamp,3867	;volatile
 12072                           
 12073                           ; BSR set to: 0
 12074                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
 12075  004814  0E00               	movlw	0
 12076  004816  0100               	movlb	0	; () banked
 12077  004818  1579               	andwf	CANSetMask@mask& (0+255),w,b
 12078  00481A  0100               	movlb	0	; () banked
 12079  00481C  6F83               	movwf	CANSetMask@tamp& (0+255),b
 12080  00481E  0EFF               	movlw	255
 12081  004820  0100               	movlb	0	; () banked
 12082  004822  157A               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 12083  004824  0100               	movlb	0	; () banked
 12084  004826  6F84               	movwf	(CANSetMask@tamp+1)& (0+255),b
 12085  004828  0E00               	movlw	0
 12086  00482A  0100               	movlb	0	; () banked
 12087  00482C  157B               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 12088  00482E  0100               	movlb	0	; () banked
 12089  004830  6F85               	movwf	(CANSetMask@tamp+2)& (0+255),b
 12090  004832  0E00               	movlw	0
 12091  004834  0100               	movlb	0	; () banked
 12092  004836  157C               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 12093  004838  0100               	movlb	0	; () banked
 12094  00483A  6F86               	movwf	(CANSetMask@tamp+3)& (0+255),b
 12095                           
 12096                           ; BSR set to: 0
 12097                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
 12098  00483C  C083  F07E         	movff	CANSetMask@tamp,??_CANSetMask
 12099  004840  C084  F07F         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 12100  004844  C085  F080         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 12101  004848  C086  F081         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 12102  00484C  C07F  F07E         	movff	??_CANSetMask+1,??_CANSetMask
 12103  004850  C080  F07F         	movff	??_CANSetMask+2,??_CANSetMask+1
 12104  004854  C081  F080         	movff	??_CANSetMask+3,??_CANSetMask+2
 12105  004858  0100               	movlb	0	; () banked
 12106  00485A  6B81               	clrf	(??_CANSetMask+3)& (0+255),b
 12107  00485C  C07E  F083         	movff	??_CANSetMask,CANSetMask@tamp
 12108  004860  C07F  F084         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12109  004864  C080  F085         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12110  004868  C081  F086         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12111                           
 12112                           ; BSR set to: 0
 12113                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
 12114  00486C  C083  FF1A         	movff	CANSetMask@tamp,3866	;volatile
 12115                           
 12116                           ; BSR set to: 0
 12117                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
 12118  004870  0100               	movlb	0	; () banked
 12119  004872  A17B               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 12120  004874  D003               	goto	l430
 12121                           
 12122                           ; BSR set to: 0
 12123                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
 12124  004876  010F               	movlb	15	; () banked
 12125  004878  8119               	bsf	25,0,b	;volatile
 12126  00487A  D002               	goto	l431
 12127  00487C                     l430:
 12128                           
 12129                           ; BSR set to: 0
 12130                           ;inc\CANlib.h: 676: else
 12131                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
 12132  00487C  010F               	movlb	15	; () banked
 12133  00487E  9119               	bcf	25,0,b	;volatile
 12134  004880                     l431:
 12135                           
 12136                           ; BSR set to: 15
 12137                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
 12138  004880  0100               	movlb	0	; () banked
 12139  004882  A37B               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 12140  004884  D003               	goto	l432
 12141                           
 12142                           ; BSR set to: 0
 12143                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
 12144  004886  010F               	movlb	15	; () banked
 12145  004888  8319               	bsf	25,1,b	;volatile
 12146  00488A  D002               	goto	l433
 12147  00488C                     l432:
 12148                           
 12149                           ; BSR set to: 0
 12150                           ;inc\CANlib.h: 681: else
 12151                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
 12152  00488C  010F               	movlb	15	; () banked
 12153  00488E  9319               	bcf	25,1,b	;volatile
 12154  004890                     l433:
 12155                           
 12156                           ; BSR set to: 15
 12157                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
 12158  004890  0100               	movlb	0	; () banked
 12159  004892  A57B               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 12160  004894  D003               	goto	l434
 12161                           
 12162                           ; BSR set to: 0
 12163                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
 12164  004896  010F               	movlb	15	; () banked
 12165  004898  8B19               	bsf	25,5,b	;volatile
 12166  00489A  D002               	goto	l435
 12167  00489C                     l434:
 12168                           
 12169                           ; BSR set to: 0
 12170                           ;inc\CANlib.h: 686: else
 12171                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
 12172  00489C  010F               	movlb	15	; () banked
 12173  00489E  9B19               	bcf	25,5,b	;volatile
 12174  0048A0                     l435:
 12175                           
 12176                           ; BSR set to: 15
 12177                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
 12178  0048A0  0100               	movlb	0	; () banked
 12179  0048A2  A77B               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 12180  0048A4  D003               	goto	l436
 12181                           
 12182                           ; BSR set to: 0
 12183                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
 12184  0048A6  010F               	movlb	15	; () banked
 12185  0048A8  8D19               	bsf	25,6,b	;volatile
 12186  0048AA  D002               	goto	l437
 12187  0048AC                     l436:
 12188                           
 12189                           ; BSR set to: 0
 12190                           ;inc\CANlib.h: 691: else
 12191                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
 12192  0048AC  010F               	movlb	15	; () banked
 12193  0048AE  9D19               	bcf	25,6,b	;volatile
 12194  0048B0                     l437:
 12195                           
 12196                           ; BSR set to: 15
 12197                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
 12198  0048B0  0100               	movlb	0	; () banked
 12199  0048B2  A97B               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 12200  0048B4  D003               	goto	l438
 12201                           
 12202                           ; BSR set to: 0
 12203                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
 12204  0048B6  010F               	movlb	15	; () banked
 12205  0048B8  8F19               	bsf	25,7,b	;volatile
 12206  0048BA  D002               	goto	l5294
 12207  0048BC                     l438:
 12208                           
 12209                           ; BSR set to: 0
 12210                           ;inc\CANlib.h: 696: else
 12211                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
 12212  0048BC  010F               	movlb	15	; () banked
 12213  0048BE  9F19               	bcf	25,7,b	;volatile
 12214  0048C0                     l5294:
 12215                           
 12216                           ; BSR set to: 15
 12217                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
 12218  0048C0  C079  F07E         	movff	CANSetMask@mask,??_CANSetMask
 12219  0048C4  C07A  F07F         	movff	CANSetMask@mask+1,??_CANSetMask+1
 12220  0048C8  C07B  F080         	movff	CANSetMask@mask+2,??_CANSetMask+2
 12221  0048CC  C07C  F081         	movff	CANSetMask@mask+3,??_CANSetMask+3
 12222  0048D0  0E16               	movlw	22
 12223  0048D2  D006               	goto	u6270
 12224  0048D4                     u6275:
 12225  0048D4  0100               	movlb	0	; () banked
 12226  0048D6  90D8               	bcf	status,0,c
 12227  0048D8  3381               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 12228  0048DA  3380               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 12229  0048DC  337F               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 12230  0048DE  337E               	rrcf	??_CANSetMask& (0+255),f,b
 12231  0048E0                     u6270:
 12232  0048E0  2EE8               	decfsz	wreg,f,c
 12233  0048E2  D7F8               	goto	u6275
 12234  0048E4  C07E  F083         	movff	??_CANSetMask,CANSetMask@tamp
 12235  0048E8  C07F  F084         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12236  0048EC  C080  F085         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12237  0048F0  C081  F086         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12238                           
 12239                           ; BSR set to: 0
 12240                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
 12241  0048F4  0100               	movlb	0	; () banked
 12242  0048F6  5183               	movf	CANSetMask@tamp& (0+255),w,b
 12243  0048F8  0100               	movlb	0	; () banked
 12244  0048FA  6F83               	movwf	CANSetMask@tamp& (0+255),b
 12245  0048FC  6B84               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12246  0048FE  6B85               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12247  004900  6B86               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12248                           
 12249                           ; BSR set to: 0
 12250                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
 12251  004902  C083  FF18         	movff	CANSetMask@tamp,3864	;volatile
 12252  004906                     l5300:
 12253                           
 12254                           ; BSR set to: 0
 12255                           ;inc\CANlib.h: 702: }
 12256                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
 12257  004906  0E02               	movlw	2
 12258  004908  0100               	movlb	0	; () banked
 12259  00490A  1982               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 12260  00490C  A4D8               	btfss	status,2,c
 12261  00490E  0012               	return	
 12262                           
 12263                           ; BSR set to: 0
 12264  004910  0EF7               	movlw	247
 12265  004912  0100               	movlb	0	; () banked
 12266  004914  197D               	xorwf	CANSetMask@type& (0+255),w,b
 12267  004916  A4D8               	btfss	status,2,c
 12268  004918  0012               	return	
 12269                           
 12270                           ; BSR set to: 0
 12271                           ;inc\CANlib.h: 705: {
 12272                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
 12273  00491A  0100               	movlb	0	; () banked
 12274  00491C  5179               	movf	CANSetMask@mask& (0+255),w,b
 12275  00491E  0100               	movlb	0	; () banked
 12276  004920  6F83               	movwf	CANSetMask@tamp& (0+255),b
 12277  004922  6B84               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12278  004924  6B85               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12279  004926  6B86               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12280                           
 12281                           ; BSR set to: 0
 12282                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
 12283  004928  C083  FF1F         	movff	CANSetMask@tamp,3871	;volatile
 12284                           
 12285                           ; BSR set to: 0
 12286                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
 12287  00492C  0E00               	movlw	0
 12288  00492E  0100               	movlb	0	; () banked
 12289  004930  1579               	andwf	CANSetMask@mask& (0+255),w,b
 12290  004932  0100               	movlb	0	; () banked
 12291  004934  6F83               	movwf	CANSetMask@tamp& (0+255),b
 12292  004936  0EFF               	movlw	255
 12293  004938  0100               	movlb	0	; () banked
 12294  00493A  157A               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 12295  00493C  0100               	movlb	0	; () banked
 12296  00493E  6F84               	movwf	(CANSetMask@tamp+1)& (0+255),b
 12297  004940  0E00               	movlw	0
 12298  004942  0100               	movlb	0	; () banked
 12299  004944  157B               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 12300  004946  0100               	movlb	0	; () banked
 12301  004948  6F85               	movwf	(CANSetMask@tamp+2)& (0+255),b
 12302  00494A  0E00               	movlw	0
 12303  00494C  0100               	movlb	0	; () banked
 12304  00494E  157C               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 12305  004950  0100               	movlb	0	; () banked
 12306  004952  6F86               	movwf	(CANSetMask@tamp+3)& (0+255),b
 12307                           
 12308                           ; BSR set to: 0
 12309                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
 12310  004954  C083  F07E         	movff	CANSetMask@tamp,??_CANSetMask
 12311  004958  C084  F07F         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 12312  00495C  C085  F080         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 12313  004960  C086  F081         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 12314  004964  C07F  F07E         	movff	??_CANSetMask+1,??_CANSetMask
 12315  004968  C080  F07F         	movff	??_CANSetMask+2,??_CANSetMask+1
 12316  00496C  C081  F080         	movff	??_CANSetMask+3,??_CANSetMask+2
 12317  004970  0100               	movlb	0	; () banked
 12318  004972  6B81               	clrf	(??_CANSetMask+3)& (0+255),b
 12319  004974  C07E  F083         	movff	??_CANSetMask,CANSetMask@tamp
 12320  004978  C07F  F084         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12321  00497C  C080  F085         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12322  004980  C081  F086         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12323                           
 12324                           ; BSR set to: 0
 12325                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
 12326  004984  C083  FF1E         	movff	CANSetMask@tamp,3870	;volatile
 12327                           
 12328                           ; BSR set to: 0
 12329                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
 12330  004988  0100               	movlb	0	; () banked
 12331  00498A  A17B               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 12332  00498C  D003               	goto	l441
 12333                           
 12334                           ; BSR set to: 0
 12335                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
 12336  00498E  010F               	movlb	15	; () banked
 12337  004990  811D               	bsf	29,0,b	;volatile
 12338  004992  D002               	goto	l442
 12339  004994                     l441:
 12340                           
 12341                           ; BSR set to: 0
 12342                           ;inc\CANlib.h: 715: else
 12343                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
 12344  004994  010F               	movlb	15	; () banked
 12345  004996  911D               	bcf	29,0,b	;volatile
 12346  004998                     l442:
 12347                           
 12348                           ; BSR set to: 15
 12349                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
 12350  004998  0100               	movlb	0	; () banked
 12351  00499A  A37B               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 12352  00499C  D003               	goto	l443
 12353                           
 12354                           ; BSR set to: 0
 12355                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
 12356  00499E  010F               	movlb	15	; () banked
 12357  0049A0  831D               	bsf	29,1,b	;volatile
 12358  0049A2  D002               	goto	l444
 12359  0049A4                     l443:
 12360                           
 12361                           ; BSR set to: 0
 12362                           ;inc\CANlib.h: 720: else
 12363                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
 12364  0049A4  010F               	movlb	15	; () banked
 12365  0049A6  931D               	bcf	29,1,b	;volatile
 12366  0049A8                     l444:
 12367                           
 12368                           ; BSR set to: 15
 12369                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
 12370  0049A8  0100               	movlb	0	; () banked
 12371  0049AA  A57B               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 12372  0049AC  D003               	goto	l445
 12373                           
 12374                           ; BSR set to: 0
 12375                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
 12376  0049AE  010F               	movlb	15	; () banked
 12377  0049B0  8B1D               	bsf	29,5,b	;volatile
 12378  0049B2  D002               	goto	l446
 12379  0049B4                     l445:
 12380                           
 12381                           ; BSR set to: 0
 12382                           ;inc\CANlib.h: 725: else
 12383                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
 12384  0049B4  010F               	movlb	15	; () banked
 12385  0049B6  9B1D               	bcf	29,5,b	;volatile
 12386  0049B8                     l446:
 12387                           
 12388                           ; BSR set to: 15
 12389                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
 12390  0049B8  0100               	movlb	0	; () banked
 12391  0049BA  A77B               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 12392  0049BC  D003               	goto	l447
 12393                           
 12394                           ; BSR set to: 0
 12395                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
 12396  0049BE  010F               	movlb	15	; () banked
 12397  0049C0  8D1D               	bsf	29,6,b	;volatile
 12398  0049C2  D002               	goto	l448
 12399  0049C4                     l447:
 12400                           
 12401                           ; BSR set to: 0
 12402                           ;inc\CANlib.h: 730: else
 12403                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
 12404  0049C4  010F               	movlb	15	; () banked
 12405  0049C6  9D1D               	bcf	29,6,b	;volatile
 12406  0049C8                     l448:
 12407                           
 12408                           ; BSR set to: 15
 12409                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
 12410  0049C8  0100               	movlb	0	; () banked
 12411  0049CA  A97B               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 12412  0049CC  D003               	goto	l449
 12413                           
 12414                           ; BSR set to: 0
 12415                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
 12416  0049CE  010F               	movlb	15	; () banked
 12417  0049D0  8F1D               	bsf	29,7,b	;volatile
 12418  0049D2  D002               	goto	l5326
 12419  0049D4                     l449:
 12420                           
 12421                           ; BSR set to: 0
 12422                           ;inc\CANlib.h: 735: else
 12423                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
 12424  0049D4  010F               	movlb	15	; () banked
 12425  0049D6  9F1D               	bcf	29,7,b	;volatile
 12426  0049D8                     l5326:
 12427                           
 12428                           ; BSR set to: 15
 12429                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
 12430  0049D8  C079  F07E         	movff	CANSetMask@mask,??_CANSetMask
 12431  0049DC  C07A  F07F         	movff	CANSetMask@mask+1,??_CANSetMask+1
 12432  0049E0  C07B  F080         	movff	CANSetMask@mask+2,??_CANSetMask+2
 12433  0049E4  C07C  F081         	movff	CANSetMask@mask+3,??_CANSetMask+3
 12434  0049E8  0E16               	movlw	22
 12435  0049EA  D006               	goto	u6350
 12436  0049EC                     u6355:
 12437  0049EC  0100               	movlb	0	; () banked
 12438  0049EE  90D8               	bcf	status,0,c
 12439  0049F0  3381               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 12440  0049F2  3380               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 12441  0049F4  337F               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 12442  0049F6  337E               	rrcf	??_CANSetMask& (0+255),f,b
 12443  0049F8                     u6350:
 12444  0049F8  2EE8               	decfsz	wreg,f,c
 12445  0049FA  D7F8               	goto	u6355
 12446  0049FC  C07E  F083         	movff	??_CANSetMask,CANSetMask@tamp
 12447  004A00  C07F  F084         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12448  004A04  C080  F085         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12449  004A08  C081  F086         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12450                           
 12451                           ; BSR set to: 0
 12452                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
 12453  004A0C  0100               	movlb	0	; () banked
 12454  004A0E  5183               	movf	CANSetMask@tamp& (0+255),w,b
 12455  004A10  0100               	movlb	0	; () banked
 12456  004A12  6F83               	movwf	CANSetMask@tamp& (0+255),b
 12457  004A14  6B84               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12458  004A16  6B85               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12459  004A18  6B86               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12460                           
 12461                           ; BSR set to: 0
 12462                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
 12463  004A1A  C083  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 12464  004A1E  0012               	return	
 12465  004A20                     __end_of_CANSetMask:
 12466                           	opt stack 0
 12467                           tblptru	equ	0xFF8
 12468                           tblptrh	equ	0xFF7
 12469                           tblptrl	equ	0xFF6
 12470                           tablat	equ	0xFF5
 12471                           prodh	equ	0xFF4
 12472                           prodl	equ	0xFF3
 12473                           intcon	equ	0xFF2
 12474                           intcon2	equ	0xFF1
 12475                           postinc0	equ	0xFEE
 12476                           wreg	equ	0xFE8
 12477                           postdec1	equ	0xFE5
 12478                           fsr1l	equ	0xFE1
 12479                           indf2	equ	0xFDF
 12480                           postinc2	equ	0xFDE
 12481                           postdec2	equ	0xFDD
 12482                           fsr2h	equ	0xFDA
 12483                           fsr2l	equ	0xFD9
 12484                           status	equ	0xFD8
 12485                           
 12486 ;; *************** function _CANSetFilter *****************
 12487 ;; Defined at:
 12488 ;;		line 748 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 12489 ;; Parameters:    Size  Location     Type
 12490 ;;  numBuffer       1    wreg     enum E15436
 12491 ;;  filter          4   25[BANK0 ] unsigned long 
 12492 ;;  type            1   29[BANK0 ] enum E15399
 12493 ;; Auto vars:     Size  Location     Type
 12494 ;;  numBuffer       1   34[BANK0 ] enum E15436
 12495 ;;  tamp            4   35[BANK0 ] unsigned long 
 12496 ;; Return value:  Size  Location     Type
 12497 ;;                  1    wreg      void 
 12498 ;; Registers used:
 12499 ;;		wreg, status,2, status,0
 12500 ;; Tracked objects:
 12501 ;;		On entry : 0/0
 12502 ;;		On exit  : 0/0
 12503 ;;		Unchanged: 0/0
 12504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12505 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12506 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12507 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12508 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12509 ;;Total ram usage:       14 bytes
 12510 ;; Hardware stack levels used:    1
 12511 ;; Hardware stack levels required when called:    5
 12512 ;; This function calls:
 12513 ;;		Nothing
 12514 ;; This function is called by:
 12515 ;;		_CANInitialize
 12516 ;; This function uses a non-reentrant model
 12517 ;;
 12518                           
 12519                           	psect	text32
 12520  000D52                     __ptext32:
 12521                           	opt stack 0
 12522  000D52                     _CANSetFilter:
 12523                           	opt stack 23
 12524                           
 12525                           ; BSR set to: 0
 12526                           ;incstack = 0
 12527                           ;CANSetFilter@numBuffer stored from wreg
 12528  000D52  0100               	movlb	0	; () banked
 12529  000D54  6F82               	movwf	CANSetFilter@numBuffer& (0+255),b
 12530                           
 12531                           ;inc\CANlib.h: 750: unsigned long tamp;
 12532                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
 12533  000D56  0100               	movlb	0	; () banked
 12534  000D58  5182               	movf	CANSetFilter@numBuffer& (0+255),w,b
 12535  000D5A  0100               	movlb	0	; () banked
 12536  000D5C  A4D8               	btfss	status,2,c
 12537  000D5E  D058               	goto	l5350
 12538                           
 12539                           ; BSR set to: 0
 12540  000D60  0100               	movlb	0	; () banked
 12541  000D62  297D               	incf	CANSetFilter@type& (0+255),w,b
 12542  000D64  A4D8               	btfss	status,2,c
 12543  000D66  D054               	goto	l5350
 12544                           
 12545                           ; BSR set to: 0
 12546                           ;inc\CANlib.h: 753: {
 12547                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
 12548  000D68  010F               	movlb	15	; () banked
 12549  000D6A  9701               	bcf	1,3,b	;volatile
 12550                           
 12551                           ; BSR set to: 15
 12552                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
 12553  000D6C  C079  F07E         	movff	CANSetFilter@filter,??_CANSetFilter
 12554  000D70  C07A  F07F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12555  000D74  C07B  F080         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12556  000D78  C07C  F081         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12557  000D7C  0E04               	movlw	4
 12558  000D7E  D006               	goto	u6380
 12559  000D80                     u6385:
 12560  000D80  0100               	movlb	0	; () banked
 12561  000D82  90D8               	bcf	status,0,c
 12562  000D84  3381               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12563  000D86  3380               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12564  000D88  337F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12565  000D8A  337E               	rrcf	??_CANSetFilter& (0+255),f,b
 12566  000D8C                     u6380:
 12567  000D8C  2EE8               	decfsz	wreg,f,c
 12568  000D8E  D7F8               	goto	u6385
 12569  000D90  C07E  F083         	movff	??_CANSetFilter,CANSetFilter@tamp
 12570  000D94  C07F  F084         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12571  000D98  C080  F085         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12572  000D9C  C081  F086         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12573                           
 12574                           ; BSR set to: 0
 12575                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
 12576  000DA0  0100               	movlb	0	; () banked
 12577  000DA2  5183               	movf	CANSetFilter@tamp& (0+255),w,b
 12578  000DA4  0100               	movlb	0	; () banked
 12579  000DA6  6F83               	movwf	CANSetFilter@tamp& (0+255),b
 12580  000DA8  6B84               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12581  000DAA  6B85               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12582  000DAC  6B86               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12583                           
 12584                           ; BSR set to: 0
 12585                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
 12586  000DAE  C083  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 12587                           
 12588                           ; BSR set to: 0
 12589                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
 12590  000DB2  0E07               	movlw	7
 12591  000DB4  0100               	movlb	0	; () banked
 12592  000DB6  1579               	andwf	CANSetFilter@filter& (0+255),w,b
 12593  000DB8  0100               	movlb	0	; () banked
 12594  000DBA  6F83               	movwf	CANSetFilter@tamp& (0+255),b
 12595  000DBC  0E00               	movlw	0
 12596  000DBE  0100               	movlb	0	; () banked
 12597  000DC0  157A               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12598  000DC2  0100               	movlb	0	; () banked
 12599  000DC4  6F84               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12600  000DC6  0E00               	movlw	0
 12601  000DC8  0100               	movlb	0	; () banked
 12602  000DCA  157B               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12603  000DCC  0100               	movlb	0	; () banked
 12604  000DCE  6F85               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12605  000DD0  0E00               	movlw	0
 12606  000DD2  0100               	movlb	0	; () banked
 12607  000DD4  157C               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12608  000DD6  0100               	movlb	0	; () banked
 12609  000DD8  6F86               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12610                           
 12611                           ; BSR set to: 0
 12612                           ;inc\CANlib.h: 761: tamp = tamp << 5;
 12613  000DDA  C083  F07E         	movff	CANSetFilter@tamp,??_CANSetFilter
 12614  000DDE  C084  F07F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12615  000DE2  C085  F080         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12616  000DE6  C086  F081         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12617  000DEA  0E05               	movlw	5
 12618  000DEC                     u6395:
 12619  000DEC  90D8               	bcf	status,0,c
 12620  000DEE  0100               	movlb	0	; () banked
 12621  000DF0  377E               	rlcf	??_CANSetFilter& (0+255),f,b
 12622  000DF2  377F               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12623  000DF4  3780               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12624  000DF6  3781               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12625  000DF8  2EE8               	decfsz	wreg,f,c
 12626  000DFA  D7F8               	goto	u6395
 12627  000DFC  C07E  F083         	movff	??_CANSetFilter,CANSetFilter@tamp
 12628  000E00  C07F  F084         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12629  000E04  C080  F085         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12630  000E08  C081  F086         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12631                           
 12632                           ; BSR set to: 0
 12633                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
 12634  000E0C  C083  FF01         	movff	CANSetFilter@tamp,3841	;volatile
 12635  000E10                     l5350:
 12636                           
 12637                           ; BSR set to: 0
 12638                           ;inc\CANlib.h: 763: }
 12639                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
 12640  000E10  0100               	movlb	0	; () banked
 12641  000E12  0582               	decf	CANSetFilter@numBuffer& (0+255),w,b
 12642  000E14  A4D8               	btfss	status,2,c
 12643  000E16  D058               	goto	l5368
 12644                           
 12645                           ; BSR set to: 0
 12646  000E18  0100               	movlb	0	; () banked
 12647  000E1A  297D               	incf	CANSetFilter@type& (0+255),w,b
 12648  000E1C  A4D8               	btfss	status,2,c
 12649  000E1E  D054               	goto	l5368
 12650                           
 12651                           ; BSR set to: 0
 12652                           ;inc\CANlib.h: 766: {
 12653                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
 12654  000E20  010F               	movlb	15	; () banked
 12655  000E22  9705               	bcf	5,3,b	;volatile
 12656                           
 12657                           ; BSR set to: 15
 12658                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
 12659  000E24  C079  F07E         	movff	CANSetFilter@filter,??_CANSetFilter
 12660  000E28  C07A  F07F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12661  000E2C  C07B  F080         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12662  000E30  C07C  F081         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12663  000E34  0E04               	movlw	4
 12664  000E36  D006               	goto	u6420
 12665  000E38                     u6425:
 12666  000E38  0100               	movlb	0	; () banked
 12667  000E3A  90D8               	bcf	status,0,c
 12668  000E3C  3381               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12669  000E3E  3380               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12670  000E40  337F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12671  000E42  337E               	rrcf	??_CANSetFilter& (0+255),f,b
 12672  000E44                     u6420:
 12673  000E44  2EE8               	decfsz	wreg,f,c
 12674  000E46  D7F8               	goto	u6425
 12675  000E48  C07E  F083         	movff	??_CANSetFilter,CANSetFilter@tamp
 12676  000E4C  C07F  F084         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12677  000E50  C080  F085         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12678  000E54  C081  F086         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12679                           
 12680                           ; BSR set to: 0
 12681                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
 12682  000E58  0100               	movlb	0	; () banked
 12683  000E5A  5183               	movf	CANSetFilter@tamp& (0+255),w,b
 12684  000E5C  0100               	movlb	0	; () banked
 12685  000E5E  6F83               	movwf	CANSetFilter@tamp& (0+255),b
 12686  000E60  6B84               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12687  000E62  6B85               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12688  000E64  6B86               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12689                           
 12690                           ; BSR set to: 0
 12691                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
 12692  000E66  C083  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 12693                           
 12694                           ; BSR set to: 0
 12695                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
 12696  000E6A  0E07               	movlw	7
 12697  000E6C  0100               	movlb	0	; () banked
 12698  000E6E  1579               	andwf	CANSetFilter@filter& (0+255),w,b
 12699  000E70  0100               	movlb	0	; () banked
 12700  000E72  6F83               	movwf	CANSetFilter@tamp& (0+255),b
 12701  000E74  0E00               	movlw	0
 12702  000E76  0100               	movlb	0	; () banked
 12703  000E78  157A               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12704  000E7A  0100               	movlb	0	; () banked
 12705  000E7C  6F84               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12706  000E7E  0E00               	movlw	0
 12707  000E80  0100               	movlb	0	; () banked
 12708  000E82  157B               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12709  000E84  0100               	movlb	0	; () banked
 12710  000E86  6F85               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12711  000E88  0E00               	movlw	0
 12712  000E8A  0100               	movlb	0	; () banked
 12713  000E8C  157C               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12714  000E8E  0100               	movlb	0	; () banked
 12715  000E90  6F86               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12716                           
 12717                           ; BSR set to: 0
 12718                           ;inc\CANlib.h: 774: tamp = tamp << 5;
 12719  000E92  C083  F07E         	movff	CANSetFilter@tamp,??_CANSetFilter
 12720  000E96  C084  F07F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12721  000E9A  C085  F080         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12722  000E9E  C086  F081         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12723  000EA2  0E05               	movlw	5
 12724  000EA4                     u6435:
 12725  000EA4  90D8               	bcf	status,0,c
 12726  000EA6  0100               	movlb	0	; () banked
 12727  000EA8  377E               	rlcf	??_CANSetFilter& (0+255),f,b
 12728  000EAA  377F               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12729  000EAC  3780               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12730  000EAE  3781               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12731  000EB0  2EE8               	decfsz	wreg,f,c
 12732  000EB2  D7F8               	goto	u6435
 12733  000EB4  C07E  F083         	movff	??_CANSetFilter,CANSetFilter@tamp
 12734  000EB8  C07F  F084         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12735  000EBC  C080  F085         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12736  000EC0  C081  F086         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12737                           
 12738                           ; BSR set to: 0
 12739                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
 12740  000EC4  C083  FF05         	movff	CANSetFilter@tamp,3845	;volatile
 12741  000EC8                     l5368:
 12742                           
 12743                           ; BSR set to: 0
 12744                           ;inc\CANlib.h: 776: }
 12745                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
 12746  000EC8  0E02               	movlw	2
 12747  000ECA  0100               	movlb	0	; () banked
 12748  000ECC  1982               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12749  000ECE  A4D8               	btfss	status,2,c
 12750  000ED0  D058               	goto	l5386
 12751                           
 12752                           ; BSR set to: 0
 12753  000ED2  0100               	movlb	0	; () banked
 12754  000ED4  297D               	incf	CANSetFilter@type& (0+255),w,b
 12755  000ED6  A4D8               	btfss	status,2,c
 12756  000ED8  D054               	goto	l5386
 12757                           
 12758                           ; BSR set to: 0
 12759                           ;inc\CANlib.h: 779: {
 12760                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
 12761  000EDA  010F               	movlb	15	; () banked
 12762  000EDC  9709               	bcf	9,3,b	;volatile
 12763                           
 12764                           ; BSR set to: 15
 12765                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
 12766  000EDE  C079  F07E         	movff	CANSetFilter@filter,??_CANSetFilter
 12767  000EE2  C07A  F07F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12768  000EE6  C07B  F080         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12769  000EEA  C07C  F081         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12770  000EEE  0E04               	movlw	4
 12771  000EF0  D006               	goto	u6460
 12772  000EF2                     u6465:
 12773  000EF2  0100               	movlb	0	; () banked
 12774  000EF4  90D8               	bcf	status,0,c
 12775  000EF6  3381               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12776  000EF8  3380               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12777  000EFA  337F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12778  000EFC  337E               	rrcf	??_CANSetFilter& (0+255),f,b
 12779  000EFE                     u6460:
 12780  000EFE  2EE8               	decfsz	wreg,f,c
 12781  000F00  D7F8               	goto	u6465
 12782  000F02  C07E  F083         	movff	??_CANSetFilter,CANSetFilter@tamp
 12783  000F06  C07F  F084         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12784  000F0A  C080  F085         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12785  000F0E  C081  F086         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12786                           
 12787                           ; BSR set to: 0
 12788                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
 12789  000F12  0100               	movlb	0	; () banked
 12790  000F14  5183               	movf	CANSetFilter@tamp& (0+255),w,b
 12791  000F16  0100               	movlb	0	; () banked
 12792  000F18  6F83               	movwf	CANSetFilter@tamp& (0+255),b
 12793  000F1A  6B84               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12794  000F1C  6B85               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12795  000F1E  6B86               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12796                           
 12797                           ; BSR set to: 0
 12798                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
 12799  000F20  C083  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 12800                           
 12801                           ; BSR set to: 0
 12802                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
 12803  000F24  0E07               	movlw	7
 12804  000F26  0100               	movlb	0	; () banked
 12805  000F28  1579               	andwf	CANSetFilter@filter& (0+255),w,b
 12806  000F2A  0100               	movlb	0	; () banked
 12807  000F2C  6F83               	movwf	CANSetFilter@tamp& (0+255),b
 12808  000F2E  0E00               	movlw	0
 12809  000F30  0100               	movlb	0	; () banked
 12810  000F32  157A               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12811  000F34  0100               	movlb	0	; () banked
 12812  000F36  6F84               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12813  000F38  0E00               	movlw	0
 12814  000F3A  0100               	movlb	0	; () banked
 12815  000F3C  157B               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12816  000F3E  0100               	movlb	0	; () banked
 12817  000F40  6F85               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12818  000F42  0E00               	movlw	0
 12819  000F44  0100               	movlb	0	; () banked
 12820  000F46  157C               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12821  000F48  0100               	movlb	0	; () banked
 12822  000F4A  6F86               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12823                           
 12824                           ; BSR set to: 0
 12825                           ;inc\CANlib.h: 787: tamp = tamp << 5;
 12826  000F4C  C083  F07E         	movff	CANSetFilter@tamp,??_CANSetFilter
 12827  000F50  C084  F07F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12828  000F54  C085  F080         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12829  000F58  C086  F081         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12830  000F5C  0E05               	movlw	5
 12831  000F5E                     u6475:
 12832  000F5E  90D8               	bcf	status,0,c
 12833  000F60  0100               	movlb	0	; () banked
 12834  000F62  377E               	rlcf	??_CANSetFilter& (0+255),f,b
 12835  000F64  377F               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12836  000F66  3780               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12837  000F68  3781               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12838  000F6A  2EE8               	decfsz	wreg,f,c
 12839  000F6C  D7F8               	goto	u6475
 12840  000F6E  C07E  F083         	movff	??_CANSetFilter,CANSetFilter@tamp
 12841  000F72  C07F  F084         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12842  000F76  C080  F085         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12843  000F7A  C081  F086         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12844                           
 12845                           ; BSR set to: 0
 12846                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
 12847  000F7E  C083  FF09         	movff	CANSetFilter@tamp,3849	;volatile
 12848  000F82                     l5386:
 12849                           
 12850                           ; BSR set to: 0
 12851                           ;inc\CANlib.h: 789: }
 12852                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
 12853  000F82  0E03               	movlw	3
 12854  000F84  0100               	movlb	0	; () banked
 12855  000F86  1982               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12856  000F88  A4D8               	btfss	status,2,c
 12857  000F8A  D058               	goto	l5404
 12858                           
 12859                           ; BSR set to: 0
 12860  000F8C  0100               	movlb	0	; () banked
 12861  000F8E  297D               	incf	CANSetFilter@type& (0+255),w,b
 12862  000F90  A4D8               	btfss	status,2,c
 12863  000F92  D054               	goto	l5404
 12864                           
 12865                           ; BSR set to: 0
 12866                           ;inc\CANlib.h: 792: {
 12867                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
 12868  000F94  010F               	movlb	15	; () banked
 12869  000F96  970D               	bcf	13,3,b	;volatile
 12870                           
 12871                           ; BSR set to: 15
 12872                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
 12873  000F98  C079  F07E         	movff	CANSetFilter@filter,??_CANSetFilter
 12874  000F9C  C07A  F07F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12875  000FA0  C07B  F080         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12876  000FA4  C07C  F081         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12877  000FA8  0E04               	movlw	4
 12878  000FAA  D006               	goto	u6500
 12879  000FAC                     u6505:
 12880  000FAC  0100               	movlb	0	; () banked
 12881  000FAE  90D8               	bcf	status,0,c
 12882  000FB0  3381               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12883  000FB2  3380               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12884  000FB4  337F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12885  000FB6  337E               	rrcf	??_CANSetFilter& (0+255),f,b
 12886  000FB8                     u6500:
 12887  000FB8  2EE8               	decfsz	wreg,f,c
 12888  000FBA  D7F8               	goto	u6505
 12889  000FBC  C07E  F083         	movff	??_CANSetFilter,CANSetFilter@tamp
 12890  000FC0  C07F  F084         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12891  000FC4  C080  F085         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12892  000FC8  C081  F086         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12893                           
 12894                           ; BSR set to: 0
 12895                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
 12896  000FCC  0100               	movlb	0	; () banked
 12897  000FCE  5183               	movf	CANSetFilter@tamp& (0+255),w,b
 12898  000FD0  0100               	movlb	0	; () banked
 12899  000FD2  6F83               	movwf	CANSetFilter@tamp& (0+255),b
 12900  000FD4  6B84               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12901  000FD6  6B85               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12902  000FD8  6B86               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12903                           
 12904                           ; BSR set to: 0
 12905                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
 12906  000FDA  C083  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 12907                           
 12908                           ; BSR set to: 0
 12909                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
 12910  000FDE  0E07               	movlw	7
 12911  000FE0  0100               	movlb	0	; () banked
 12912  000FE2  1579               	andwf	CANSetFilter@filter& (0+255),w,b
 12913  000FE4  0100               	movlb	0	; () banked
 12914  000FE6  6F83               	movwf	CANSetFilter@tamp& (0+255),b
 12915  000FE8  0E00               	movlw	0
 12916  000FEA  0100               	movlb	0	; () banked
 12917  000FEC  157A               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12918  000FEE  0100               	movlb	0	; () banked
 12919  000FF0  6F84               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12920  000FF2  0E00               	movlw	0
 12921  000FF4  0100               	movlb	0	; () banked
 12922  000FF6  157B               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12923  000FF8  0100               	movlb	0	; () banked
 12924  000FFA  6F85               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12925  000FFC  0E00               	movlw	0
 12926  000FFE  0100               	movlb	0	; () banked
 12927  001000  157C               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12928  001002  0100               	movlb	0	; () banked
 12929  001004  6F86               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12930                           
 12931                           ; BSR set to: 0
 12932                           ;inc\CANlib.h: 800: tamp = tamp << 5;
 12933  001006  C083  F07E         	movff	CANSetFilter@tamp,??_CANSetFilter
 12934  00100A  C084  F07F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12935  00100E  C085  F080         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12936  001012  C086  F081         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12937  001016  0E05               	movlw	5
 12938  001018                     u6515:
 12939  001018  90D8               	bcf	status,0,c
 12940  00101A  0100               	movlb	0	; () banked
 12941  00101C  377E               	rlcf	??_CANSetFilter& (0+255),f,b
 12942  00101E  377F               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12943  001020  3780               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12944  001022  3781               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12945  001024  2EE8               	decfsz	wreg,f,c
 12946  001026  D7F8               	goto	u6515
 12947  001028  C07E  F083         	movff	??_CANSetFilter,CANSetFilter@tamp
 12948  00102C  C07F  F084         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12949  001030  C080  F085         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12950  001034  C081  F086         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12951                           
 12952                           ; BSR set to: 0
 12953                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
 12954  001038  C083  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
 12955  00103C                     l5404:
 12956                           
 12957                           ; BSR set to: 0
 12958                           ;inc\CANlib.h: 802: }
 12959                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
 12960  00103C  0E04               	movlw	4
 12961  00103E  0100               	movlb	0	; () banked
 12962  001040  1982               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12963  001042  A4D8               	btfss	status,2,c
 12964  001044  D058               	goto	l5422
 12965                           
 12966                           ; BSR set to: 0
 12967  001046  0100               	movlb	0	; () banked
 12968  001048  297D               	incf	CANSetFilter@type& (0+255),w,b
 12969  00104A  A4D8               	btfss	status,2,c
 12970  00104C  D054               	goto	l5422
 12971                           
 12972                           ; BSR set to: 0
 12973                           ;inc\CANlib.h: 805: {
 12974                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
 12975  00104E  010F               	movlb	15	; () banked
 12976  001050  9711               	bcf	17,3,b	;volatile
 12977                           
 12978                           ; BSR set to: 15
 12979                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
 12980  001052  C079  F07E         	movff	CANSetFilter@filter,??_CANSetFilter
 12981  001056  C07A  F07F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12982  00105A  C07B  F080         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12983  00105E  C07C  F081         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12984  001062  0E04               	movlw	4
 12985  001064  D006               	goto	u6540
 12986  001066                     u6545:
 12987  001066  0100               	movlb	0	; () banked
 12988  001068  90D8               	bcf	status,0,c
 12989  00106A  3381               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12990  00106C  3380               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12991  00106E  337F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12992  001070  337E               	rrcf	??_CANSetFilter& (0+255),f,b
 12993  001072                     u6540:
 12994  001072  2EE8               	decfsz	wreg,f,c
 12995  001074  D7F8               	goto	u6545
 12996  001076  C07E  F083         	movff	??_CANSetFilter,CANSetFilter@tamp
 12997  00107A  C07F  F084         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12998  00107E  C080  F085         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12999  001082  C081  F086         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13000                           
 13001                           ; BSR set to: 0
 13002                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
 13003  001086  0100               	movlb	0	; () banked
 13004  001088  5183               	movf	CANSetFilter@tamp& (0+255),w,b
 13005  00108A  0100               	movlb	0	; () banked
 13006  00108C  6F83               	movwf	CANSetFilter@tamp& (0+255),b
 13007  00108E  6B84               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13008  001090  6B85               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13009  001092  6B86               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13010                           
 13011                           ; BSR set to: 0
 13012                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
 13013  001094  C083  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 13014                           
 13015                           ; BSR set to: 0
 13016                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
 13017  001098  0E07               	movlw	7
 13018  00109A  0100               	movlb	0	; () banked
 13019  00109C  1579               	andwf	CANSetFilter@filter& (0+255),w,b
 13020  00109E  0100               	movlb	0	; () banked
 13021  0010A0  6F83               	movwf	CANSetFilter@tamp& (0+255),b
 13022  0010A2  0E00               	movlw	0
 13023  0010A4  0100               	movlb	0	; () banked
 13024  0010A6  157A               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13025  0010A8  0100               	movlb	0	; () banked
 13026  0010AA  6F84               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13027  0010AC  0E00               	movlw	0
 13028  0010AE  0100               	movlb	0	; () banked
 13029  0010B0  157B               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13030  0010B2  0100               	movlb	0	; () banked
 13031  0010B4  6F85               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13032  0010B6  0E00               	movlw	0
 13033  0010B8  0100               	movlb	0	; () banked
 13034  0010BA  157C               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13035  0010BC  0100               	movlb	0	; () banked
 13036  0010BE  6F86               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13037                           
 13038                           ; BSR set to: 0
 13039                           ;inc\CANlib.h: 813: tamp = tamp << 5;
 13040  0010C0  C083  F07E         	movff	CANSetFilter@tamp,??_CANSetFilter
 13041  0010C4  C084  F07F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13042  0010C8  C085  F080         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13043  0010CC  C086  F081         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13044  0010D0  0E05               	movlw	5
 13045  0010D2                     u6555:
 13046  0010D2  90D8               	bcf	status,0,c
 13047  0010D4  0100               	movlb	0	; () banked
 13048  0010D6  377E               	rlcf	??_CANSetFilter& (0+255),f,b
 13049  0010D8  377F               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 13050  0010DA  3780               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 13051  0010DC  3781               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 13052  0010DE  2EE8               	decfsz	wreg,f,c
 13053  0010E0  D7F8               	goto	u6555
 13054  0010E2  C07E  F083         	movff	??_CANSetFilter,CANSetFilter@tamp
 13055  0010E6  C07F  F084         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13056  0010EA  C080  F085         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13057  0010EE  C081  F086         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13058                           
 13059                           ; BSR set to: 0
 13060                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
 13061  0010F2  C083  FF11         	movff	CANSetFilter@tamp,3857	;volatile
 13062  0010F6                     l5422:
 13063                           
 13064                           ; BSR set to: 0
 13065                           ;inc\CANlib.h: 815: }
 13066                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
 13067  0010F6  0E05               	movlw	5
 13068  0010F8  0100               	movlb	0	; () banked
 13069  0010FA  1982               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13070  0010FC  A4D8               	btfss	status,2,c
 13071  0010FE  D058               	goto	l5440
 13072                           
 13073                           ; BSR set to: 0
 13074  001100  0100               	movlb	0	; () banked
 13075  001102  297D               	incf	CANSetFilter@type& (0+255),w,b
 13076  001104  A4D8               	btfss	status,2,c
 13077  001106  D054               	goto	l5440
 13078                           
 13079                           ; BSR set to: 0
 13080                           ;inc\CANlib.h: 818: {
 13081                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
 13082  001108  010F               	movlb	15	; () banked
 13083  00110A  9715               	bcf	21,3,b	;volatile
 13084                           
 13085                           ; BSR set to: 15
 13086                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
 13087  00110C  C079  F07E         	movff	CANSetFilter@filter,??_CANSetFilter
 13088  001110  C07A  F07F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13089  001114  C07B  F080         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13090  001118  C07C  F081         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13091  00111C  0E04               	movlw	4
 13092  00111E  D006               	goto	u6580
 13093  001120                     u6585:
 13094  001120  0100               	movlb	0	; () banked
 13095  001122  90D8               	bcf	status,0,c
 13096  001124  3381               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13097  001126  3380               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13098  001128  337F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13099  00112A  337E               	rrcf	??_CANSetFilter& (0+255),f,b
 13100  00112C                     u6580:
 13101  00112C  2EE8               	decfsz	wreg,f,c
 13102  00112E  D7F8               	goto	u6585
 13103  001130  C07E  F083         	movff	??_CANSetFilter,CANSetFilter@tamp
 13104  001134  C07F  F084         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13105  001138  C080  F085         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13106  00113C  C081  F086         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13107                           
 13108                           ; BSR set to: 0
 13109                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
 13110  001140  0100               	movlb	0	; () banked
 13111  001142  5183               	movf	CANSetFilter@tamp& (0+255),w,b
 13112  001144  0100               	movlb	0	; () banked
 13113  001146  6F83               	movwf	CANSetFilter@tamp& (0+255),b
 13114  001148  6B84               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13115  00114A  6B85               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13116  00114C  6B86               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13117                           
 13118                           ; BSR set to: 0
 13119                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
 13120  00114E  C083  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 13121                           
 13122                           ; BSR set to: 0
 13123                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
 13124  001152  0E07               	movlw	7
 13125  001154  0100               	movlb	0	; () banked
 13126  001156  1579               	andwf	CANSetFilter@filter& (0+255),w,b
 13127  001158  0100               	movlb	0	; () banked
 13128  00115A  6F83               	movwf	CANSetFilter@tamp& (0+255),b
 13129  00115C  0E00               	movlw	0
 13130  00115E  0100               	movlb	0	; () banked
 13131  001160  157A               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13132  001162  0100               	movlb	0	; () banked
 13133  001164  6F84               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13134  001166  0E00               	movlw	0
 13135  001168  0100               	movlb	0	; () banked
 13136  00116A  157B               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13137  00116C  0100               	movlb	0	; () banked
 13138  00116E  6F85               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13139  001170  0E00               	movlw	0
 13140  001172  0100               	movlb	0	; () banked
 13141  001174  157C               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13142  001176  0100               	movlb	0	; () banked
 13143  001178  6F86               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13144                           
 13145                           ; BSR set to: 0
 13146                           ;inc\CANlib.h: 826: tamp = tamp << 5;
 13147  00117A  C083  F07E         	movff	CANSetFilter@tamp,??_CANSetFilter
 13148  00117E  C084  F07F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13149  001182  C085  F080         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13150  001186  C086  F081         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13151  00118A  0E05               	movlw	5
 13152  00118C                     u6595:
 13153  00118C  90D8               	bcf	status,0,c
 13154  00118E  0100               	movlb	0	; () banked
 13155  001190  377E               	rlcf	??_CANSetFilter& (0+255),f,b
 13156  001192  377F               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 13157  001194  3780               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 13158  001196  3781               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 13159  001198  2EE8               	decfsz	wreg,f,c
 13160  00119A  D7F8               	goto	u6595
 13161  00119C  C07E  F083         	movff	??_CANSetFilter,CANSetFilter@tamp
 13162  0011A0  C07F  F084         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13163  0011A4  C080  F085         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13164  0011A8  C081  F086         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13165                           
 13166                           ; BSR set to: 0
 13167                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
 13168  0011AC  C083  FF15         	movff	CANSetFilter@tamp,3861	;volatile
 13169  0011B0                     l5440:
 13170                           
 13171                           ; BSR set to: 0
 13172                           ;inc\CANlib.h: 828: }
 13173                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
 13174  0011B0  0100               	movlb	0	; () banked
 13175  0011B2  5182               	movf	CANSetFilter@numBuffer& (0+255),w,b
 13176  0011B4  0100               	movlb	0	; () banked
 13177  0011B6  A4D8               	btfss	status,2,c
 13178  0011B8  D089               	goto	l5474
 13179                           
 13180                           ; BSR set to: 0
 13181  0011BA  0EF7               	movlw	247
 13182  0011BC  0100               	movlb	0	; () banked
 13183  0011BE  197D               	xorwf	CANSetFilter@type& (0+255),w,b
 13184  0011C0  A4D8               	btfss	status,2,c
 13185  0011C2  D084               	goto	l5474
 13186                           
 13187                           ; BSR set to: 0
 13188                           ;inc\CANlib.h: 832: {
 13189                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
 13190  0011C4  010F               	movlb	15	; () banked
 13191  0011C6  8701               	bsf	1,3,b	;volatile
 13192                           
 13193                           ; BSR set to: 15
 13194                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
 13195  0011C8  0100               	movlb	0	; () banked
 13196  0011CA  5179               	movf	CANSetFilter@filter& (0+255),w,b
 13197  0011CC  0100               	movlb	0	; () banked
 13198  0011CE  6F83               	movwf	CANSetFilter@tamp& (0+255),b
 13199  0011D0  6B84               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13200  0011D2  6B85               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13201  0011D4  6B86               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13202                           
 13203                           ; BSR set to: 0
 13204                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
 13205  0011D6  C083  FF03         	movff	CANSetFilter@tamp,3843	;volatile
 13206                           
 13207                           ; BSR set to: 0
 13208                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
 13209  0011DA  0E00               	movlw	0
 13210  0011DC  0100               	movlb	0	; () banked
 13211  0011DE  1579               	andwf	CANSetFilter@filter& (0+255),w,b
 13212  0011E0  0100               	movlb	0	; () banked
 13213  0011E2  6F83               	movwf	CANSetFilter@tamp& (0+255),b
 13214  0011E4  0EFF               	movlw	255
 13215  0011E6  0100               	movlb	0	; () banked
 13216  0011E8  157A               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13217  0011EA  0100               	movlb	0	; () banked
 13218  0011EC  6F84               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13219  0011EE  0E00               	movlw	0
 13220  0011F0  0100               	movlb	0	; () banked
 13221  0011F2  157B               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13222  0011F4  0100               	movlb	0	; () banked
 13223  0011F6  6F85               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13224  0011F8  0E00               	movlw	0
 13225  0011FA  0100               	movlb	0	; () banked
 13226  0011FC  157C               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13227  0011FE  0100               	movlb	0	; () banked
 13228  001200  6F86               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13229                           
 13230                           ; BSR set to: 0
 13231                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
 13232  001202  C083  F07E         	movff	CANSetFilter@tamp,??_CANSetFilter
 13233  001206  C084  F07F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13234  00120A  C085  F080         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13235  00120E  C086  F081         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13236  001212  C07F  F07E         	movff	??_CANSetFilter+1,??_CANSetFilter
 13237  001216  C080  F07F         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13238  00121A  C081  F080         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13239  00121E  0100               	movlb	0	; () banked
 13240  001220  6B81               	clrf	(??_CANSetFilter+3)& (0+255),b
 13241  001222  C07E  F083         	movff	??_CANSetFilter,CANSetFilter@tamp
 13242  001226  C07F  F084         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13243  00122A  C080  F085         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13244  00122E  C081  F086         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13245                           
 13246                           ; BSR set to: 0
 13247                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
 13248  001232  C083  FF02         	movff	CANSetFilter@tamp,3842	;volatile
 13249                           
 13250                           ; BSR set to: 0
 13251                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
 13252  001236  0100               	movlb	0	; () banked
 13253  001238  A17B               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13254  00123A  D003               	goto	l461
 13255                           
 13256                           ; BSR set to: 0
 13257                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
 13258  00123C  010F               	movlb	15	; () banked
 13259  00123E  8101               	bsf	1,0,b	;volatile
 13260  001240  D002               	goto	l462
 13261  001242                     l461:
 13262                           
 13263                           ; BSR set to: 0
 13264                           ;inc\CANlib.h: 844: else
 13265                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
 13266  001242  010F               	movlb	15	; () banked
 13267  001244  9101               	bcf	1,0,b	;volatile
 13268  001246                     l462:
 13269                           
 13270                           ; BSR set to: 15
 13271                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
 13272  001246  0100               	movlb	0	; () banked
 13273  001248  A37B               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13274  00124A  D003               	goto	l463
 13275                           
 13276                           ; BSR set to: 0
 13277                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
 13278  00124C  010F               	movlb	15	; () banked
 13279  00124E  8301               	bsf	1,1,b	;volatile
 13280  001250  D002               	goto	l464
 13281  001252                     l463:
 13282                           
 13283                           ; BSR set to: 0
 13284                           ;inc\CANlib.h: 849: else
 13285                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
 13286  001252  010F               	movlb	15	; () banked
 13287  001254  9301               	bcf	1,1,b	;volatile
 13288  001256                     l464:
 13289                           
 13290                           ; BSR set to: 15
 13291                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
 13292  001256  0100               	movlb	0	; () banked
 13293  001258  A57B               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13294  00125A  D003               	goto	l465
 13295                           
 13296                           ; BSR set to: 0
 13297                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
 13298  00125C  010F               	movlb	15	; () banked
 13299  00125E  8B01               	bsf	1,5,b	;volatile
 13300  001260  D002               	goto	l466
 13301  001262                     l465:
 13302                           
 13303                           ; BSR set to: 0
 13304                           ;inc\CANlib.h: 854: else
 13305                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
 13306  001262  010F               	movlb	15	; () banked
 13307  001264  9B01               	bcf	1,5,b	;volatile
 13308  001266                     l466:
 13309                           
 13310                           ; BSR set to: 15
 13311                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
 13312  001266  0100               	movlb	0	; () banked
 13313  001268  A77B               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13314  00126A  D003               	goto	l467
 13315                           
 13316                           ; BSR set to: 0
 13317                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
 13318  00126C  010F               	movlb	15	; () banked
 13319  00126E  8D01               	bsf	1,6,b	;volatile
 13320  001270  D002               	goto	l468
 13321  001272                     l467:
 13322                           
 13323                           ; BSR set to: 0
 13324                           ;inc\CANlib.h: 859: else
 13325                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
 13326  001272  010F               	movlb	15	; () banked
 13327  001274  9D01               	bcf	1,6,b	;volatile
 13328  001276                     l468:
 13329                           
 13330                           ; BSR set to: 15
 13331                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
 13332  001276  0100               	movlb	0	; () banked
 13333  001278  A97B               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13334  00127A  D003               	goto	l469
 13335                           
 13336                           ; BSR set to: 0
 13337                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
 13338  00127C  010F               	movlb	15	; () banked
 13339  00127E  8F01               	bsf	1,7,b	;volatile
 13340  001280  D002               	goto	l5468
 13341  001282                     l469:
 13342                           
 13343                           ; BSR set to: 0
 13344                           ;inc\CANlib.h: 864: else
 13345                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
 13346  001282  010F               	movlb	15	; () banked
 13347  001284  9F01               	bcf	1,7,b	;volatile
 13348  001286                     l5468:
 13349                           
 13350                           ; BSR set to: 15
 13351                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
 13352  001286  C079  F07E         	movff	CANSetFilter@filter,??_CANSetFilter
 13353  00128A  C07A  F07F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13354  00128E  C07B  F080         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13355  001292  C07C  F081         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13356  001296  0E16               	movlw	22
 13357  001298  D006               	goto	u6670
 13358  00129A                     u6675:
 13359  00129A  0100               	movlb	0	; () banked
 13360  00129C  90D8               	bcf	status,0,c
 13361  00129E  3381               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13362  0012A0  3380               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13363  0012A2  337F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13364  0012A4  337E               	rrcf	??_CANSetFilter& (0+255),f,b
 13365  0012A6                     u6670:
 13366  0012A6  2EE8               	decfsz	wreg,f,c
 13367  0012A8  D7F8               	goto	u6675
 13368  0012AA  C07E  F083         	movff	??_CANSetFilter,CANSetFilter@tamp
 13369  0012AE  C07F  F084         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13370  0012B2  C080  F085         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13371  0012B6  C081  F086         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13372                           
 13373                           ; BSR set to: 0
 13374                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
 13375  0012BA  0100               	movlb	0	; () banked
 13376  0012BC  5183               	movf	CANSetFilter@tamp& (0+255),w,b
 13377  0012BE  0100               	movlb	0	; () banked
 13378  0012C0  6F83               	movwf	CANSetFilter@tamp& (0+255),b
 13379  0012C2  6B84               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13380  0012C4  6B85               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13381  0012C6  6B86               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13382                           
 13383                           ; BSR set to: 0
 13384                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
 13385  0012C8  C083  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 13386  0012CC                     l5474:
 13387                           
 13388                           ; BSR set to: 0
 13389                           ;inc\CANlib.h: 870: }
 13390                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
 13391  0012CC  0100               	movlb	0	; () banked
 13392  0012CE  0582               	decf	CANSetFilter@numBuffer& (0+255),w,b
 13393  0012D0  A4D8               	btfss	status,2,c
 13394  0012D2  D089               	goto	l5508
 13395                           
 13396                           ; BSR set to: 0
 13397  0012D4  0EF7               	movlw	247
 13398  0012D6  0100               	movlb	0	; () banked
 13399  0012D8  197D               	xorwf	CANSetFilter@type& (0+255),w,b
 13400  0012DA  A4D8               	btfss	status,2,c
 13401  0012DC  D084               	goto	l5508
 13402                           
 13403                           ; BSR set to: 0
 13404                           ;inc\CANlib.h: 873: {
 13405                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
 13406  0012DE  010F               	movlb	15	; () banked
 13407  0012E0  8705               	bsf	5,3,b	;volatile
 13408                           
 13409                           ; BSR set to: 15
 13410                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
 13411  0012E2  0100               	movlb	0	; () banked
 13412  0012E4  5179               	movf	CANSetFilter@filter& (0+255),w,b
 13413  0012E6  0100               	movlb	0	; () banked
 13414  0012E8  6F83               	movwf	CANSetFilter@tamp& (0+255),b
 13415  0012EA  6B84               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13416  0012EC  6B85               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13417  0012EE  6B86               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13418                           
 13419                           ; BSR set to: 0
 13420                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
 13421  0012F0  C083  FF07         	movff	CANSetFilter@tamp,3847	;volatile
 13422                           
 13423                           ; BSR set to: 0
 13424                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
 13425  0012F4  0E00               	movlw	0
 13426  0012F6  0100               	movlb	0	; () banked
 13427  0012F8  1579               	andwf	CANSetFilter@filter& (0+255),w,b
 13428  0012FA  0100               	movlb	0	; () banked
 13429  0012FC  6F83               	movwf	CANSetFilter@tamp& (0+255),b
 13430  0012FE  0EFF               	movlw	255
 13431  001300  0100               	movlb	0	; () banked
 13432  001302  157A               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13433  001304  0100               	movlb	0	; () banked
 13434  001306  6F84               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13435  001308  0E00               	movlw	0
 13436  00130A  0100               	movlb	0	; () banked
 13437  00130C  157B               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13438  00130E  0100               	movlb	0	; () banked
 13439  001310  6F85               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13440  001312  0E00               	movlw	0
 13441  001314  0100               	movlb	0	; () banked
 13442  001316  157C               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13443  001318  0100               	movlb	0	; () banked
 13444  00131A  6F86               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13445                           
 13446                           ; BSR set to: 0
 13447                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
 13448  00131C  C083  F07E         	movff	CANSetFilter@tamp,??_CANSetFilter
 13449  001320  C084  F07F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13450  001324  C085  F080         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13451  001328  C086  F081         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13452  00132C  C07F  F07E         	movff	??_CANSetFilter+1,??_CANSetFilter
 13453  001330  C080  F07F         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13454  001334  C081  F080         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13455  001338  0100               	movlb	0	; () banked
 13456  00133A  6B81               	clrf	(??_CANSetFilter+3)& (0+255),b
 13457  00133C  C07E  F083         	movff	??_CANSetFilter,CANSetFilter@tamp
 13458  001340  C07F  F084         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13459  001344  C080  F085         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13460  001348  C081  F086         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13461                           
 13462                           ; BSR set to: 0
 13463                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
 13464  00134C  C083  FF06         	movff	CANSetFilter@tamp,3846	;volatile
 13465                           
 13466                           ; BSR set to: 0
 13467                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
 13468  001350  0100               	movlb	0	; () banked
 13469  001352  A17B               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13470  001354  D003               	goto	l472
 13471                           
 13472                           ; BSR set to: 0
 13473                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
 13474  001356  010F               	movlb	15	; () banked
 13475  001358  8105               	bsf	5,0,b	;volatile
 13476  00135A  D002               	goto	l473
 13477  00135C                     l472:
 13478                           
 13479                           ; BSR set to: 0
 13480                           ;inc\CANlib.h: 885: else
 13481                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
 13482  00135C  010F               	movlb	15	; () banked
 13483  00135E  9105               	bcf	5,0,b	;volatile
 13484  001360                     l473:
 13485                           
 13486                           ; BSR set to: 15
 13487                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
 13488  001360  0100               	movlb	0	; () banked
 13489  001362  A37B               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13490  001364  D003               	goto	l474
 13491                           
 13492                           ; BSR set to: 0
 13493                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
 13494  001366  010F               	movlb	15	; () banked
 13495  001368  8305               	bsf	5,1,b	;volatile
 13496  00136A  D002               	goto	l475
 13497  00136C                     l474:
 13498                           
 13499                           ; BSR set to: 0
 13500                           ;inc\CANlib.h: 890: else
 13501                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
 13502  00136C  010F               	movlb	15	; () banked
 13503  00136E  9305               	bcf	5,1,b	;volatile
 13504  001370                     l475:
 13505                           
 13506                           ; BSR set to: 15
 13507                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
 13508  001370  0100               	movlb	0	; () banked
 13509  001372  A57B               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13510  001374  D003               	goto	l476
 13511                           
 13512                           ; BSR set to: 0
 13513                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
 13514  001376  010F               	movlb	15	; () banked
 13515  001378  8B05               	bsf	5,5,b	;volatile
 13516  00137A  D002               	goto	l477
 13517  00137C                     l476:
 13518                           
 13519                           ; BSR set to: 0
 13520                           ;inc\CANlib.h: 895: else
 13521                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
 13522  00137C  010F               	movlb	15	; () banked
 13523  00137E  9B05               	bcf	5,5,b	;volatile
 13524  001380                     l477:
 13525                           
 13526                           ; BSR set to: 15
 13527                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
 13528  001380  0100               	movlb	0	; () banked
 13529  001382  A77B               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13530  001384  D003               	goto	l478
 13531                           
 13532                           ; BSR set to: 0
 13533                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
 13534  001386  010F               	movlb	15	; () banked
 13535  001388  8D05               	bsf	5,6,b	;volatile
 13536  00138A  D002               	goto	l479
 13537  00138C                     l478:
 13538                           
 13539                           ; BSR set to: 0
 13540                           ;inc\CANlib.h: 900: else
 13541                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
 13542  00138C  010F               	movlb	15	; () banked
 13543  00138E  9D05               	bcf	5,6,b	;volatile
 13544  001390                     l479:
 13545                           
 13546                           ; BSR set to: 15
 13547                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
 13548  001390  0100               	movlb	0	; () banked
 13549  001392  A97B               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13550  001394  D003               	goto	l480
 13551                           
 13552                           ; BSR set to: 0
 13553                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
 13554  001396  010F               	movlb	15	; () banked
 13555  001398  8F05               	bsf	5,7,b	;volatile
 13556  00139A  D002               	goto	l5502
 13557  00139C                     l480:
 13558                           
 13559                           ; BSR set to: 0
 13560                           ;inc\CANlib.h: 905: else
 13561                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
 13562  00139C  010F               	movlb	15	; () banked
 13563  00139E  9F05               	bcf	5,7,b	;volatile
 13564  0013A0                     l5502:
 13565                           
 13566                           ; BSR set to: 15
 13567                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
 13568  0013A0  C079  F07E         	movff	CANSetFilter@filter,??_CANSetFilter
 13569  0013A4  C07A  F07F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13570  0013A8  C07B  F080         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13571  0013AC  C07C  F081         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13572  0013B0  0E16               	movlw	22
 13573  0013B2  D006               	goto	u6750
 13574  0013B4                     u6755:
 13575  0013B4  0100               	movlb	0	; () banked
 13576  0013B6  90D8               	bcf	status,0,c
 13577  0013B8  3381               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13578  0013BA  3380               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13579  0013BC  337F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13580  0013BE  337E               	rrcf	??_CANSetFilter& (0+255),f,b
 13581  0013C0                     u6750:
 13582  0013C0  2EE8               	decfsz	wreg,f,c
 13583  0013C2  D7F8               	goto	u6755
 13584  0013C4  C07E  F083         	movff	??_CANSetFilter,CANSetFilter@tamp
 13585  0013C8  C07F  F084         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13586  0013CC  C080  F085         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13587  0013D0  C081  F086         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13588                           
 13589                           ; BSR set to: 0
 13590                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
 13591  0013D4  0100               	movlb	0	; () banked
 13592  0013D6  5183               	movf	CANSetFilter@tamp& (0+255),w,b
 13593  0013D8  0100               	movlb	0	; () banked
 13594  0013DA  6F83               	movwf	CANSetFilter@tamp& (0+255),b
 13595  0013DC  6B84               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13596  0013DE  6B85               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13597  0013E0  6B86               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13598                           
 13599                           ; BSR set to: 0
 13600                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
 13601  0013E2  C083  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 13602  0013E6                     l5508:
 13603                           
 13604                           ; BSR set to: 0
 13605                           ;inc\CANlib.h: 911: }
 13606                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
 13607  0013E6  0E02               	movlw	2
 13608  0013E8  0100               	movlb	0	; () banked
 13609  0013EA  1982               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13610  0013EC  A4D8               	btfss	status,2,c
 13611  0013EE  D089               	goto	l5542
 13612                           
 13613                           ; BSR set to: 0
 13614  0013F0  0EF7               	movlw	247
 13615  0013F2  0100               	movlb	0	; () banked
 13616  0013F4  197D               	xorwf	CANSetFilter@type& (0+255),w,b
 13617  0013F6  A4D8               	btfss	status,2,c
 13618  0013F8  D084               	goto	l5542
 13619                           
 13620                           ; BSR set to: 0
 13621                           ;inc\CANlib.h: 915: {
 13622                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
 13623  0013FA  010F               	movlb	15	; () banked
 13624  0013FC  8709               	bsf	9,3,b	;volatile
 13625                           
 13626                           ; BSR set to: 15
 13627                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
 13628  0013FE  0100               	movlb	0	; () banked
 13629  001400  5179               	movf	CANSetFilter@filter& (0+255),w,b
 13630  001402  0100               	movlb	0	; () banked
 13631  001404  6F83               	movwf	CANSetFilter@tamp& (0+255),b
 13632  001406  6B84               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13633  001408  6B85               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13634  00140A  6B86               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13635                           
 13636                           ; BSR set to: 0
 13637                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
 13638  00140C  C083  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
 13639                           
 13640                           ; BSR set to: 0
 13641                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
 13642  001410  0E00               	movlw	0
 13643  001412  0100               	movlb	0	; () banked
 13644  001414  1579               	andwf	CANSetFilter@filter& (0+255),w,b
 13645  001416  0100               	movlb	0	; () banked
 13646  001418  6F83               	movwf	CANSetFilter@tamp& (0+255),b
 13647  00141A  0EFF               	movlw	255
 13648  00141C  0100               	movlb	0	; () banked
 13649  00141E  157A               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13650  001420  0100               	movlb	0	; () banked
 13651  001422  6F84               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13652  001424  0E00               	movlw	0
 13653  001426  0100               	movlb	0	; () banked
 13654  001428  157B               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13655  00142A  0100               	movlb	0	; () banked
 13656  00142C  6F85               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13657  00142E  0E00               	movlw	0
 13658  001430  0100               	movlb	0	; () banked
 13659  001432  157C               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13660  001434  0100               	movlb	0	; () banked
 13661  001436  6F86               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13662                           
 13663                           ; BSR set to: 0
 13664                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
 13665  001438  C083  F07E         	movff	CANSetFilter@tamp,??_CANSetFilter
 13666  00143C  C084  F07F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13667  001440  C085  F080         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13668  001444  C086  F081         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13669  001448  C07F  F07E         	movff	??_CANSetFilter+1,??_CANSetFilter
 13670  00144C  C080  F07F         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13671  001450  C081  F080         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13672  001454  0100               	movlb	0	; () banked
 13673  001456  6B81               	clrf	(??_CANSetFilter+3)& (0+255),b
 13674  001458  C07E  F083         	movff	??_CANSetFilter,CANSetFilter@tamp
 13675  00145C  C07F  F084         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13676  001460  C080  F085         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13677  001464  C081  F086         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13678                           
 13679                           ; BSR set to: 0
 13680                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
 13681  001468  C083  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
 13682                           
 13683                           ; BSR set to: 0
 13684                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
 13685  00146C  0100               	movlb	0	; () banked
 13686  00146E  A17B               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13687  001470  D003               	goto	l483
 13688                           
 13689                           ; BSR set to: 0
 13690                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
 13691  001472  010F               	movlb	15	; () banked
 13692  001474  8109               	bsf	9,0,b	;volatile
 13693  001476  D002               	goto	l484
 13694  001478                     l483:
 13695                           
 13696                           ; BSR set to: 0
 13697                           ;inc\CANlib.h: 927: else
 13698                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
 13699  001478  010F               	movlb	15	; () banked
 13700  00147A  9109               	bcf	9,0,b	;volatile
 13701  00147C                     l484:
 13702                           
 13703                           ; BSR set to: 15
 13704                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
 13705  00147C  0100               	movlb	0	; () banked
 13706  00147E  A37B               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13707  001480  D003               	goto	l485
 13708                           
 13709                           ; BSR set to: 0
 13710                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
 13711  001482  010F               	movlb	15	; () banked
 13712  001484  8309               	bsf	9,1,b	;volatile
 13713  001486  D002               	goto	l486
 13714  001488                     l485:
 13715                           
 13716                           ; BSR set to: 0
 13717                           ;inc\CANlib.h: 932: else
 13718                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
 13719  001488  010F               	movlb	15	; () banked
 13720  00148A  9309               	bcf	9,1,b	;volatile
 13721  00148C                     l486:
 13722                           
 13723                           ; BSR set to: 15
 13724                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
 13725  00148C  0100               	movlb	0	; () banked
 13726  00148E  A57B               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13727  001490  D003               	goto	l487
 13728                           
 13729                           ; BSR set to: 0
 13730                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
 13731  001492  010F               	movlb	15	; () banked
 13732  001494  8B09               	bsf	9,5,b	;volatile
 13733  001496  D002               	goto	l488
 13734  001498                     l487:
 13735                           
 13736                           ; BSR set to: 0
 13737                           ;inc\CANlib.h: 937: else
 13738                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
 13739  001498  010F               	movlb	15	; () banked
 13740  00149A  9B09               	bcf	9,5,b	;volatile
 13741  00149C                     l488:
 13742                           
 13743                           ; BSR set to: 15
 13744                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
 13745  00149C  0100               	movlb	0	; () banked
 13746  00149E  A77B               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13747  0014A0  D003               	goto	l489
 13748                           
 13749                           ; BSR set to: 0
 13750                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
 13751  0014A2  010F               	movlb	15	; () banked
 13752  0014A4  8D09               	bsf	9,6,b	;volatile
 13753  0014A6  D002               	goto	l490
 13754  0014A8                     l489:
 13755                           
 13756                           ; BSR set to: 0
 13757                           ;inc\CANlib.h: 942: else
 13758                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
 13759  0014A8  010F               	movlb	15	; () banked
 13760  0014AA  9D09               	bcf	9,6,b	;volatile
 13761  0014AC                     l490:
 13762                           
 13763                           ; BSR set to: 15
 13764                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
 13765  0014AC  0100               	movlb	0	; () banked
 13766  0014AE  A97B               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13767  0014B0  D003               	goto	l491
 13768                           
 13769                           ; BSR set to: 0
 13770                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
 13771  0014B2  010F               	movlb	15	; () banked
 13772  0014B4  8F09               	bsf	9,7,b	;volatile
 13773  0014B6  D002               	goto	l5536
 13774  0014B8                     l491:
 13775                           
 13776                           ; BSR set to: 0
 13777                           ;inc\CANlib.h: 947: else
 13778                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
 13779  0014B8  010F               	movlb	15	; () banked
 13780  0014BA  9F09               	bcf	9,7,b	;volatile
 13781  0014BC                     l5536:
 13782                           
 13783                           ; BSR set to: 15
 13784                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
 13785  0014BC  C079  F07E         	movff	CANSetFilter@filter,??_CANSetFilter
 13786  0014C0  C07A  F07F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13787  0014C4  C07B  F080         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13788  0014C8  C07C  F081         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13789  0014CC  0E16               	movlw	22
 13790  0014CE  D006               	goto	u6830
 13791  0014D0                     u6835:
 13792  0014D0  0100               	movlb	0	; () banked
 13793  0014D2  90D8               	bcf	status,0,c
 13794  0014D4  3381               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13795  0014D6  3380               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13796  0014D8  337F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13797  0014DA  337E               	rrcf	??_CANSetFilter& (0+255),f,b
 13798  0014DC                     u6830:
 13799  0014DC  2EE8               	decfsz	wreg,f,c
 13800  0014DE  D7F8               	goto	u6835
 13801  0014E0  C07E  F083         	movff	??_CANSetFilter,CANSetFilter@tamp
 13802  0014E4  C07F  F084         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13803  0014E8  C080  F085         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13804  0014EC  C081  F086         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13805                           
 13806                           ; BSR set to: 0
 13807                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
 13808  0014F0  0100               	movlb	0	; () banked
 13809  0014F2  5183               	movf	CANSetFilter@tamp& (0+255),w,b
 13810  0014F4  0100               	movlb	0	; () banked
 13811  0014F6  6F83               	movwf	CANSetFilter@tamp& (0+255),b
 13812  0014F8  6B84               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13813  0014FA  6B85               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13814  0014FC  6B86               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13815                           
 13816                           ; BSR set to: 0
 13817                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
 13818  0014FE  C083  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 13819  001502                     l5542:
 13820                           
 13821                           ; BSR set to: 0
 13822                           ;inc\CANlib.h: 953: }
 13823                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
 13824  001502  0E03               	movlw	3
 13825  001504  0100               	movlb	0	; () banked
 13826  001506  1982               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13827  001508  A4D8               	btfss	status,2,c
 13828  00150A  D089               	goto	l5576
 13829                           
 13830                           ; BSR set to: 0
 13831  00150C  0EF7               	movlw	247
 13832  00150E  0100               	movlb	0	; () banked
 13833  001510  197D               	xorwf	CANSetFilter@type& (0+255),w,b
 13834  001512  A4D8               	btfss	status,2,c
 13835  001514  D084               	goto	l5576
 13836                           
 13837                           ; BSR set to: 0
 13838                           ;inc\CANlib.h: 956: {
 13839                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
 13840  001516  010F               	movlb	15	; () banked
 13841  001518  870D               	bsf	13,3,b	;volatile
 13842                           
 13843                           ; BSR set to: 15
 13844                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
 13845  00151A  0100               	movlb	0	; () banked
 13846  00151C  5179               	movf	CANSetFilter@filter& (0+255),w,b
 13847  00151E  0100               	movlb	0	; () banked
 13848  001520  6F83               	movwf	CANSetFilter@tamp& (0+255),b
 13849  001522  6B84               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13850  001524  6B85               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13851  001526  6B86               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13852                           
 13853                           ; BSR set to: 0
 13854                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
 13855  001528  C083  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
 13856                           
 13857                           ; BSR set to: 0
 13858                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
 13859  00152C  0E00               	movlw	0
 13860  00152E  0100               	movlb	0	; () banked
 13861  001530  1579               	andwf	CANSetFilter@filter& (0+255),w,b
 13862  001532  0100               	movlb	0	; () banked
 13863  001534  6F83               	movwf	CANSetFilter@tamp& (0+255),b
 13864  001536  0EFF               	movlw	255
 13865  001538  0100               	movlb	0	; () banked
 13866  00153A  157A               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13867  00153C  0100               	movlb	0	; () banked
 13868  00153E  6F84               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13869  001540  0E00               	movlw	0
 13870  001542  0100               	movlb	0	; () banked
 13871  001544  157B               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13872  001546  0100               	movlb	0	; () banked
 13873  001548  6F85               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13874  00154A  0E00               	movlw	0
 13875  00154C  0100               	movlb	0	; () banked
 13876  00154E  157C               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13877  001550  0100               	movlb	0	; () banked
 13878  001552  6F86               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13879                           
 13880                           ; BSR set to: 0
 13881                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
 13882  001554  C083  F07E         	movff	CANSetFilter@tamp,??_CANSetFilter
 13883  001558  C084  F07F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13884  00155C  C085  F080         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13885  001560  C086  F081         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13886  001564  C07F  F07E         	movff	??_CANSetFilter+1,??_CANSetFilter
 13887  001568  C080  F07F         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13888  00156C  C081  F080         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13889  001570  0100               	movlb	0	; () banked
 13890  001572  6B81               	clrf	(??_CANSetFilter+3)& (0+255),b
 13891  001574  C07E  F083         	movff	??_CANSetFilter,CANSetFilter@tamp
 13892  001578  C07F  F084         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13893  00157C  C080  F085         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13894  001580  C081  F086         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13895                           
 13896                           ; BSR set to: 0
 13897                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
 13898  001584  C083  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
 13899                           
 13900                           ; BSR set to: 0
 13901                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
 13902  001588  0100               	movlb	0	; () banked
 13903  00158A  A17B               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13904  00158C  D003               	goto	l494
 13905                           
 13906                           ; BSR set to: 0
 13907                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
 13908  00158E  010F               	movlb	15	; () banked
 13909  001590  810D               	bsf	13,0,b	;volatile
 13910  001592  D002               	goto	l495
 13911  001594                     l494:
 13912                           
 13913                           ; BSR set to: 0
 13914                           ;inc\CANlib.h: 968: else
 13915                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
 13916  001594  010F               	movlb	15	; () banked
 13917  001596  910D               	bcf	13,0,b	;volatile
 13918  001598                     l495:
 13919                           
 13920                           ; BSR set to: 15
 13921                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
 13922  001598  0100               	movlb	0	; () banked
 13923  00159A  A37B               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13924  00159C  D003               	goto	l496
 13925                           
 13926                           ; BSR set to: 0
 13927                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
 13928  00159E  010F               	movlb	15	; () banked
 13929  0015A0  830D               	bsf	13,1,b	;volatile
 13930  0015A2  D002               	goto	l497
 13931  0015A4                     l496:
 13932                           
 13933                           ; BSR set to: 0
 13934                           ;inc\CANlib.h: 973: else
 13935                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
 13936  0015A4  010F               	movlb	15	; () banked
 13937  0015A6  930D               	bcf	13,1,b	;volatile
 13938  0015A8                     l497:
 13939                           
 13940                           ; BSR set to: 15
 13941                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
 13942  0015A8  0100               	movlb	0	; () banked
 13943  0015AA  A57B               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13944  0015AC  D003               	goto	l498
 13945                           
 13946                           ; BSR set to: 0
 13947                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
 13948  0015AE  010F               	movlb	15	; () banked
 13949  0015B0  8B0D               	bsf	13,5,b	;volatile
 13950  0015B2  D002               	goto	l499
 13951  0015B4                     l498:
 13952                           
 13953                           ; BSR set to: 0
 13954                           ;inc\CANlib.h: 978: else
 13955                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
 13956  0015B4  010F               	movlb	15	; () banked
 13957  0015B6  9B0D               	bcf	13,5,b	;volatile
 13958  0015B8                     l499:
 13959                           
 13960                           ; BSR set to: 15
 13961                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
 13962  0015B8  0100               	movlb	0	; () banked
 13963  0015BA  A77B               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13964  0015BC  D003               	goto	l500
 13965                           
 13966                           ; BSR set to: 0
 13967                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
 13968  0015BE  010F               	movlb	15	; () banked
 13969  0015C0  8D0D               	bsf	13,6,b	;volatile
 13970  0015C2  D002               	goto	l501
 13971  0015C4                     l500:
 13972                           
 13973                           ; BSR set to: 0
 13974                           ;inc\CANlib.h: 983: else
 13975                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
 13976  0015C4  010F               	movlb	15	; () banked
 13977  0015C6  9D0D               	bcf	13,6,b	;volatile
 13978  0015C8                     l501:
 13979                           
 13980                           ; BSR set to: 15
 13981                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
 13982  0015C8  0100               	movlb	0	; () banked
 13983  0015CA  A97B               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13984  0015CC  D003               	goto	l502
 13985                           
 13986                           ; BSR set to: 0
 13987                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
 13988  0015CE  010F               	movlb	15	; () banked
 13989  0015D0  8F0D               	bsf	13,7,b	;volatile
 13990  0015D2  D002               	goto	l5570
 13991  0015D4                     l502:
 13992                           
 13993                           ; BSR set to: 0
 13994                           ;inc\CANlib.h: 988: else
 13995                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
 13996  0015D4  010F               	movlb	15	; () banked
 13997  0015D6  9F0D               	bcf	13,7,b	;volatile
 13998  0015D8                     l5570:
 13999                           
 14000                           ; BSR set to: 15
 14001                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
 14002  0015D8  C079  F07E         	movff	CANSetFilter@filter,??_CANSetFilter
 14003  0015DC  C07A  F07F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 14004  0015E0  C07B  F080         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 14005  0015E4  C07C  F081         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 14006  0015E8  0E16               	movlw	22
 14007  0015EA  D006               	goto	u6910
 14008  0015EC                     u6915:
 14009  0015EC  0100               	movlb	0	; () banked
 14010  0015EE  90D8               	bcf	status,0,c
 14011  0015F0  3381               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 14012  0015F2  3380               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 14013  0015F4  337F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 14014  0015F6  337E               	rrcf	??_CANSetFilter& (0+255),f,b
 14015  0015F8                     u6910:
 14016  0015F8  2EE8               	decfsz	wreg,f,c
 14017  0015FA  D7F8               	goto	u6915
 14018  0015FC  C07E  F083         	movff	??_CANSetFilter,CANSetFilter@tamp
 14019  001600  C07F  F084         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14020  001604  C080  F085         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14021  001608  C081  F086         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14022                           
 14023                           ; BSR set to: 0
 14024                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
 14025  00160C  0100               	movlb	0	; () banked
 14026  00160E  5183               	movf	CANSetFilter@tamp& (0+255),w,b
 14027  001610  0100               	movlb	0	; () banked
 14028  001612  6F83               	movwf	CANSetFilter@tamp& (0+255),b
 14029  001614  6B84               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14030  001616  6B85               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14031  001618  6B86               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14032                           
 14033                           ; BSR set to: 0
 14034                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
 14035  00161A  C083  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 14036  00161E                     l5576:
 14037                           
 14038                           ; BSR set to: 0
 14039                           ;inc\CANlib.h: 994: }
 14040                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
 14041  00161E  0E04               	movlw	4
 14042  001620  0100               	movlb	0	; () banked
 14043  001622  1982               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 14044  001624  A4D8               	btfss	status,2,c
 14045  001626  D089               	goto	l5610
 14046                           
 14047                           ; BSR set to: 0
 14048  001628  0EF7               	movlw	247
 14049  00162A  0100               	movlb	0	; () banked
 14050  00162C  197D               	xorwf	CANSetFilter@type& (0+255),w,b
 14051  00162E  A4D8               	btfss	status,2,c
 14052  001630  D084               	goto	l5610
 14053                           
 14054                           ; BSR set to: 0
 14055                           ;inc\CANlib.h: 997: {
 14056                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
 14057  001632  010F               	movlb	15	; () banked
 14058  001634  8711               	bsf	17,3,b	;volatile
 14059                           
 14060                           ; BSR set to: 15
 14061                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
 14062  001636  0100               	movlb	0	; () banked
 14063  001638  5179               	movf	CANSetFilter@filter& (0+255),w,b
 14064  00163A  0100               	movlb	0	; () banked
 14065  00163C  6F83               	movwf	CANSetFilter@tamp& (0+255),b
 14066  00163E  6B84               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14067  001640  6B85               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14068  001642  6B86               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14069                           
 14070                           ; BSR set to: 0
 14071                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
 14072  001644  C083  FF13         	movff	CANSetFilter@tamp,3859	;volatile
 14073                           
 14074                           ; BSR set to: 0
 14075                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
 14076  001648  0E00               	movlw	0
 14077  00164A  0100               	movlb	0	; () banked
 14078  00164C  1579               	andwf	CANSetFilter@filter& (0+255),w,b
 14079  00164E  0100               	movlb	0	; () banked
 14080  001650  6F83               	movwf	CANSetFilter@tamp& (0+255),b
 14081  001652  0EFF               	movlw	255
 14082  001654  0100               	movlb	0	; () banked
 14083  001656  157A               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 14084  001658  0100               	movlb	0	; () banked
 14085  00165A  6F84               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 14086  00165C  0E00               	movlw	0
 14087  00165E  0100               	movlb	0	; () banked
 14088  001660  157B               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 14089  001662  0100               	movlb	0	; () banked
 14090  001664  6F85               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 14091  001666  0E00               	movlw	0
 14092  001668  0100               	movlb	0	; () banked
 14093  00166A  157C               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 14094  00166C  0100               	movlb	0	; () banked
 14095  00166E  6F86               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 14096                           
 14097                           ; BSR set to: 0
 14098                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
 14099  001670  C083  F07E         	movff	CANSetFilter@tamp,??_CANSetFilter
 14100  001674  C084  F07F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 14101  001678  C085  F080         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 14102  00167C  C086  F081         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 14103  001680  C07F  F07E         	movff	??_CANSetFilter+1,??_CANSetFilter
 14104  001684  C080  F07F         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 14105  001688  C081  F080         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 14106  00168C  0100               	movlb	0	; () banked
 14107  00168E  6B81               	clrf	(??_CANSetFilter+3)& (0+255),b
 14108  001690  C07E  F083         	movff	??_CANSetFilter,CANSetFilter@tamp
 14109  001694  C07F  F084         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14110  001698  C080  F085         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14111  00169C  C081  F086         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14112                           
 14113                           ; BSR set to: 0
 14114                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
 14115  0016A0  C083  FF12         	movff	CANSetFilter@tamp,3858	;volatile
 14116                           
 14117                           ; BSR set to: 0
 14118                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
 14119  0016A4  0100               	movlb	0	; () banked
 14120  0016A6  A17B               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 14121  0016A8  D003               	goto	l505
 14122                           
 14123                           ; BSR set to: 0
 14124                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
 14125  0016AA  010F               	movlb	15	; () banked
 14126  0016AC  8111               	bsf	17,0,b	;volatile
 14127  0016AE  D002               	goto	l506
 14128  0016B0                     l505:
 14129                           
 14130                           ; BSR set to: 0
 14131                           ;inc\CANlib.h: 1009: else
 14132                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
 14133  0016B0  010F               	movlb	15	; () banked
 14134  0016B2  9111               	bcf	17,0,b	;volatile
 14135  0016B4                     l506:
 14136                           
 14137                           ; BSR set to: 15
 14138                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
 14139  0016B4  0100               	movlb	0	; () banked
 14140  0016B6  A37B               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 14141  0016B8  D003               	goto	l507
 14142                           
 14143                           ; BSR set to: 0
 14144                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
 14145  0016BA  010F               	movlb	15	; () banked
 14146  0016BC  8311               	bsf	17,1,b	;volatile
 14147  0016BE  D002               	goto	l508
 14148  0016C0                     l507:
 14149                           
 14150                           ; BSR set to: 0
 14151                           ;inc\CANlib.h: 1014: else
 14152                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
 14153  0016C0  010F               	movlb	15	; () banked
 14154  0016C2  9311               	bcf	17,1,b	;volatile
 14155  0016C4                     l508:
 14156                           
 14157                           ; BSR set to: 15
 14158                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
 14159  0016C4  0100               	movlb	0	; () banked
 14160  0016C6  A57B               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 14161  0016C8  D003               	goto	l509
 14162                           
 14163                           ; BSR set to: 0
 14164                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
 14165  0016CA  010F               	movlb	15	; () banked
 14166  0016CC  8B11               	bsf	17,5,b	;volatile
 14167  0016CE  D002               	goto	l510
 14168  0016D0                     l509:
 14169                           
 14170                           ; BSR set to: 0
 14171                           ;inc\CANlib.h: 1019: else
 14172                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
 14173  0016D0  010F               	movlb	15	; () banked
 14174  0016D2  9B11               	bcf	17,5,b	;volatile
 14175  0016D4                     l510:
 14176                           
 14177                           ; BSR set to: 15
 14178                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
 14179  0016D4  0100               	movlb	0	; () banked
 14180  0016D6  A77B               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 14181  0016D8  D003               	goto	l511
 14182                           
 14183                           ; BSR set to: 0
 14184                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
 14185  0016DA  010F               	movlb	15	; () banked
 14186  0016DC  8D11               	bsf	17,6,b	;volatile
 14187  0016DE  D002               	goto	l512
 14188  0016E0                     l511:
 14189                           
 14190                           ; BSR set to: 0
 14191                           ;inc\CANlib.h: 1024: else
 14192                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
 14193  0016E0  010F               	movlb	15	; () banked
 14194  0016E2  9D11               	bcf	17,6,b	;volatile
 14195  0016E4                     l512:
 14196                           
 14197                           ; BSR set to: 15
 14198                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
 14199  0016E4  0100               	movlb	0	; () banked
 14200  0016E6  A97B               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 14201  0016E8  D003               	goto	l513
 14202                           
 14203                           ; BSR set to: 0
 14204                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
 14205  0016EA  010F               	movlb	15	; () banked
 14206  0016EC  8F11               	bsf	17,7,b	;volatile
 14207  0016EE  D002               	goto	l5604
 14208  0016F0                     l513:
 14209                           
 14210                           ; BSR set to: 0
 14211                           ;inc\CANlib.h: 1029: else
 14212                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
 14213  0016F0  010F               	movlb	15	; () banked
 14214  0016F2  9F11               	bcf	17,7,b	;volatile
 14215  0016F4                     l5604:
 14216                           
 14217                           ; BSR set to: 15
 14218                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
 14219  0016F4  C079  F07E         	movff	CANSetFilter@filter,??_CANSetFilter
 14220  0016F8  C07A  F07F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 14221  0016FC  C07B  F080         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 14222  001700  C07C  F081         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 14223  001704  0E16               	movlw	22
 14224  001706  D006               	goto	u6990
 14225  001708                     u6995:
 14226  001708  0100               	movlb	0	; () banked
 14227  00170A  90D8               	bcf	status,0,c
 14228  00170C  3381               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 14229  00170E  3380               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 14230  001710  337F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 14231  001712  337E               	rrcf	??_CANSetFilter& (0+255),f,b
 14232  001714                     u6990:
 14233  001714  2EE8               	decfsz	wreg,f,c
 14234  001716  D7F8               	goto	u6995
 14235  001718  C07E  F083         	movff	??_CANSetFilter,CANSetFilter@tamp
 14236  00171C  C07F  F084         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14237  001720  C080  F085         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14238  001724  C081  F086         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14239                           
 14240                           ; BSR set to: 0
 14241                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
 14242  001728  0100               	movlb	0	; () banked
 14243  00172A  5183               	movf	CANSetFilter@tamp& (0+255),w,b
 14244  00172C  0100               	movlb	0	; () banked
 14245  00172E  6F83               	movwf	CANSetFilter@tamp& (0+255),b
 14246  001730  6B84               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14247  001732  6B85               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14248  001734  6B86               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14249                           
 14250                           ; BSR set to: 0
 14251                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
 14252  001736  C083  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 14253  00173A                     l5610:
 14254                           
 14255                           ; BSR set to: 0
 14256                           ;inc\CANlib.h: 1035: }
 14257                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
 14258  00173A  0E05               	movlw	5
 14259  00173C  0100               	movlb	0	; () banked
 14260  00173E  1982               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 14261  001740  A4D8               	btfss	status,2,c
 14262  001742  0012               	return	
 14263                           
 14264                           ; BSR set to: 0
 14265  001744  0EF7               	movlw	247
 14266  001746  0100               	movlb	0	; () banked
 14267  001748  197D               	xorwf	CANSetFilter@type& (0+255),w,b
 14268  00174A  A4D8               	btfss	status,2,c
 14269  00174C  0012               	return	
 14270                           
 14271                           ; BSR set to: 0
 14272                           ;inc\CANlib.h: 1038: {
 14273                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
 14274  00174E  010F               	movlb	15	; () banked
 14275  001750  8715               	bsf	21,3,b	;volatile
 14276                           
 14277                           ; BSR set to: 15
 14278                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
 14279  001752  0100               	movlb	0	; () banked
 14280  001754  5179               	movf	CANSetFilter@filter& (0+255),w,b
 14281  001756  0100               	movlb	0	; () banked
 14282  001758  6F83               	movwf	CANSetFilter@tamp& (0+255),b
 14283  00175A  6B84               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14284  00175C  6B85               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14285  00175E  6B86               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14286                           
 14287                           ; BSR set to: 0
 14288                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
 14289  001760  C083  FF17         	movff	CANSetFilter@tamp,3863	;volatile
 14290                           
 14291                           ; BSR set to: 0
 14292                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
 14293  001764  0E00               	movlw	0
 14294  001766  0100               	movlb	0	; () banked
 14295  001768  1579               	andwf	CANSetFilter@filter& (0+255),w,b
 14296  00176A  0100               	movlb	0	; () banked
 14297  00176C  6F83               	movwf	CANSetFilter@tamp& (0+255),b
 14298  00176E  0EFF               	movlw	255
 14299  001770  0100               	movlb	0	; () banked
 14300  001772  157A               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 14301  001774  0100               	movlb	0	; () banked
 14302  001776  6F84               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 14303  001778  0E00               	movlw	0
 14304  00177A  0100               	movlb	0	; () banked
 14305  00177C  157B               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 14306  00177E  0100               	movlb	0	; () banked
 14307  001780  6F85               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 14308  001782  0E00               	movlw	0
 14309  001784  0100               	movlb	0	; () banked
 14310  001786  157C               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 14311  001788  0100               	movlb	0	; () banked
 14312  00178A  6F86               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 14313                           
 14314                           ; BSR set to: 0
 14315                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
 14316  00178C  C083  F07E         	movff	CANSetFilter@tamp,??_CANSetFilter
 14317  001790  C084  F07F         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 14318  001794  C085  F080         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 14319  001798  C086  F081         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 14320  00179C  C07F  F07E         	movff	??_CANSetFilter+1,??_CANSetFilter
 14321  0017A0  C080  F07F         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 14322  0017A4  C081  F080         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 14323  0017A8  0100               	movlb	0	; () banked
 14324  0017AA  6B81               	clrf	(??_CANSetFilter+3)& (0+255),b
 14325  0017AC  C07E  F083         	movff	??_CANSetFilter,CANSetFilter@tamp
 14326  0017B0  C07F  F084         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14327  0017B4  C080  F085         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14328  0017B8  C081  F086         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14329                           
 14330                           ; BSR set to: 0
 14331                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
 14332  0017BC  C083  FF16         	movff	CANSetFilter@tamp,3862	;volatile
 14333                           
 14334                           ; BSR set to: 0
 14335                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
 14336  0017C0  0100               	movlb	0	; () banked
 14337  0017C2  A17B               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 14338  0017C4  D003               	goto	l516
 14339                           
 14340                           ; BSR set to: 0
 14341                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
 14342  0017C6  010F               	movlb	15	; () banked
 14343  0017C8  8115               	bsf	21,0,b	;volatile
 14344  0017CA  D002               	goto	l517
 14345  0017CC                     l516:
 14346                           
 14347                           ; BSR set to: 0
 14348                           ;inc\CANlib.h: 1050: else
 14349                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
 14350  0017CC  010F               	movlb	15	; () banked
 14351  0017CE  9115               	bcf	21,0,b	;volatile
 14352  0017D0                     l517:
 14353                           
 14354                           ; BSR set to: 15
 14355                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
 14356  0017D0  0100               	movlb	0	; () banked
 14357  0017D2  A37B               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 14358  0017D4  D003               	goto	l518
 14359                           
 14360                           ; BSR set to: 0
 14361                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
 14362  0017D6  010F               	movlb	15	; () banked
 14363  0017D8  8315               	bsf	21,1,b	;volatile
 14364  0017DA  D002               	goto	l519
 14365  0017DC                     l518:
 14366                           
 14367                           ; BSR set to: 0
 14368                           ;inc\CANlib.h: 1055: else
 14369                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
 14370  0017DC  010F               	movlb	15	; () banked
 14371  0017DE  9315               	bcf	21,1,b	;volatile
 14372  0017E0                     l519:
 14373                           
 14374                           ; BSR set to: 15
 14375                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
 14376  0017E0  0100               	movlb	0	; () banked
 14377  0017E2  A57B               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 14378  0017E4  D003               	goto	l520
 14379                           
 14380                           ; BSR set to: 0
 14381                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
 14382  0017E6  010F               	movlb	15	; () banked
 14383  0017E8  8B15               	bsf	21,5,b	;volatile
 14384  0017EA  D002               	goto	l521
 14385  0017EC                     l520:
 14386                           
 14387                           ; BSR set to: 0
 14388                           ;inc\CANlib.h: 1060: else
 14389                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
 14390  0017EC  010F               	movlb	15	; () banked
 14391  0017EE  9B15               	bcf	21,5,b	;volatile
 14392  0017F0                     l521:
 14393                           
 14394                           ; BSR set to: 15
 14395                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
 14396  0017F0  0100               	movlb	0	; () banked
 14397  0017F2  A77B               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 14398  0017F4  D003               	goto	l522
 14399                           
 14400                           ; BSR set to: 0
 14401                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
 14402  0017F6  010F               	movlb	15	; () banked
 14403  0017F8  8D15               	bsf	21,6,b	;volatile
 14404  0017FA  D002               	goto	l523
 14405  0017FC                     l522:
 14406                           
 14407                           ; BSR set to: 0
 14408                           ;inc\CANlib.h: 1065: else
 14409                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
 14410  0017FC  010F               	movlb	15	; () banked
 14411  0017FE  9D15               	bcf	21,6,b	;volatile
 14412  001800                     l523:
 14413                           
 14414                           ; BSR set to: 15
 14415                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
 14416  001800  0100               	movlb	0	; () banked
 14417  001802  A97B               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 14418  001804  D003               	goto	l524
 14419                           
 14420                           ; BSR set to: 0
 14421                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
 14422  001806  010F               	movlb	15	; () banked
 14423  001808  8F15               	bsf	21,7,b	;volatile
 14424  00180A  D002               	goto	l5638
 14425  00180C                     l524:
 14426                           
 14427                           ; BSR set to: 0
 14428                           ;inc\CANlib.h: 1070: else
 14429                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
 14430  00180C  010F               	movlb	15	; () banked
 14431  00180E  9F15               	bcf	21,7,b	;volatile
 14432  001810                     l5638:
 14433                           
 14434                           ; BSR set to: 15
 14435                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
 14436  001810  C079  F07E         	movff	CANSetFilter@filter,??_CANSetFilter
 14437  001814  C07A  F07F         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 14438  001818  C07B  F080         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 14439  00181C  C07C  F081         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 14440  001820  0E16               	movlw	22
 14441  001822  D006               	goto	u7070
 14442  001824                     u7075:
 14443  001824  0100               	movlb	0	; () banked
 14444  001826  90D8               	bcf	status,0,c
 14445  001828  3381               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 14446  00182A  3380               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 14447  00182C  337F               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 14448  00182E  337E               	rrcf	??_CANSetFilter& (0+255),f,b
 14449  001830                     u7070:
 14450  001830  2EE8               	decfsz	wreg,f,c
 14451  001832  D7F8               	goto	u7075
 14452  001834  C07E  F083         	movff	??_CANSetFilter,CANSetFilter@tamp
 14453  001838  C07F  F084         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14454  00183C  C080  F085         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14455  001840  C081  F086         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14456                           
 14457                           ; BSR set to: 0
 14458                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
 14459  001844  0100               	movlb	0	; () banked
 14460  001846  5183               	movf	CANSetFilter@tamp& (0+255),w,b
 14461  001848  0100               	movlb	0	; () banked
 14462  00184A  6F83               	movwf	CANSetFilter@tamp& (0+255),b
 14463  00184C  6B84               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14464  00184E  6B85               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14465  001850  6B86               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14466                           
 14467                           ; BSR set to: 0
 14468                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
 14469  001852  C083  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 14470  001856  0012               	return	
 14471  001858                     __end_of_CANSetFilter:
 14472                           	opt stack 0
 14473                           tblptru	equ	0xFF8
 14474                           tblptrh	equ	0xFF7
 14475                           tblptrl	equ	0xFF6
 14476                           tablat	equ	0xFF5
 14477                           prodh	equ	0xFF4
 14478                           prodl	equ	0xFF3
 14479                           intcon	equ	0xFF2
 14480                           intcon2	equ	0xFF1
 14481                           postinc0	equ	0xFEE
 14482                           wreg	equ	0xFE8
 14483                           postdec1	equ	0xFE5
 14484                           fsr1l	equ	0xFE1
 14485                           indf2	equ	0xFDF
 14486                           postinc2	equ	0xFDE
 14487                           postdec2	equ	0xFDD
 14488                           fsr2h	equ	0xFDA
 14489                           fsr2l	equ	0xFD9
 14490                           status	equ	0xFD8
 14491                           
 14492 ;; *************** function _CANOperationMode *****************
 14493 ;; Defined at:
 14494 ;;		line 206 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 14495 ;; Parameters:    Size  Location     Type
 14496 ;;  mode            1    wreg     enum E15393
 14497 ;; Auto vars:     Size  Location     Type
 14498 ;;  mode            1   25[BANK0 ] enum E15393
 14499 ;; Return value:  Size  Location     Type
 14500 ;;                  1    wreg      void 
 14501 ;; Registers used:
 14502 ;;		wreg, status,2, status,0
 14503 ;; Tracked objects:
 14504 ;;		On entry : 0/0
 14505 ;;		On exit  : 0/0
 14506 ;;		Unchanged: 0/0
 14507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14509 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14511 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14512 ;;Total ram usage:        1 bytes
 14513 ;; Hardware stack levels used:    1
 14514 ;; Hardware stack levels required when called:    5
 14515 ;; This function calls:
 14516 ;;		Nothing
 14517 ;; This function is called by:
 14518 ;;		_CANInitialize
 14519 ;; This function uses a non-reentrant model
 14520 ;;
 14521                           
 14522                           	psect	text33
 14523  0066E0                     __ptext33:
 14524                           	opt stack 0
 14525  0066E0                     _CANOperationMode:
 14526                           	opt stack 23
 14527                           
 14528                           ; BSR set to: 0
 14529                           ;incstack = 0
 14530                           ;CANOperationMode@mode stored from wreg
 14531  0066E0  0100               	movlb	0	; () banked
 14532  0066E2  6F79               	movwf	CANOperationMode@mode& (0+255),b
 14533                           
 14534                           ;inc\CANlib.h: 208: CANCON = mode;
 14535  0066E4  C079  FF6F         	movff	CANOperationMode@mode,3951	;volatile
 14536  0066E8                     l5234:
 14537  0066E8  506E               	movf	3950,w,c	;volatile
 14538  0066EA  0BE0               	andlw	224
 14539  0066EC  0100               	movlb	0	; () banked
 14540  0066EE  1979               	xorwf	CANOperationMode@mode& (0+255),w,b
 14541  0066F0  B4D8               	btfsc	status,2,c
 14542  0066F2  0012               	return	
 14543  0066F4  D7F9               	goto	l5234
 14544  0066F6                     __end_of_CANOperationMode:
 14545                           	opt stack 0
 14546                           tblptru	equ	0xFF8
 14547                           tblptrh	equ	0xFF7
 14548                           tblptrl	equ	0xFF6
 14549                           tablat	equ	0xFF5
 14550                           prodh	equ	0xFF4
 14551                           prodl	equ	0xFF3
 14552                           intcon	equ	0xFF2
 14553                           intcon2	equ	0xFF1
 14554                           postinc0	equ	0xFEE
 14555                           wreg	equ	0xFE8
 14556                           postdec1	equ	0xFE5
 14557                           fsr1l	equ	0xFE1
 14558                           indf2	equ	0xFDF
 14559                           postinc2	equ	0xFDE
 14560                           postdec2	equ	0xFDD
 14561                           fsr2h	equ	0xFDA
 14562                           fsr2l	equ	0xFD9
 14563                           status	equ	0xFD8
 14564                           
 14565 ;; *************** function _ISR_Bassa *****************
 14566 ;; Defined at:
 14567 ;;		line 122 in file "parcheggio.c"
 14568 ;; Parameters:    Size  Location     Type
 14569 ;;		None
 14570 ;; Auto vars:     Size  Location     Type
 14571 ;;  i               1   24[BANK0 ] unsigned char 
 14572 ;;  MUX_index_co    2   21[BANK0 ] unsigned char [2]
 14573 ;;  PORTA_temp      1   23[BANK0 ] unsigned char 
 14574 ;; Return value:  Size  Location     Type
 14575 ;;                  1    wreg      void 
 14576 ;; Registers used:
 14577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14578 ;; Tracked objects:
 14579 ;;		On entry : 0/0
 14580 ;;		On exit  : 0/0
 14581 ;;		Unchanged: 0/0
 14582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14584 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14585 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14586 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14587 ;;Total ram usage:       25 bytes
 14588 ;; Hardware stack levels used:    1
 14589 ;; Hardware stack levels required when called:    4
 14590 ;; This function calls:
 14591 ;;		_CANreceiveMessage
 14592 ;;		i1_CANsendMessage
 14593 ;;		i1_delay_ms
 14594 ;; This function is called by:
 14595 ;;		Interrupt level 1
 14596 ;; This function uses a non-reentrant model
 14597 ;;
 14598                           
 14599                           	psect	intcodelo
 14600  000018                     __pintcodelo:
 14601                           	opt stack 0
 14602  000018                     _ISR_Bassa:
 14603                           	opt stack 20
 14604                           
 14605                           ; BSR set to: 0
 14606                           ;incstack = 0
 14607  000018  8045               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 14608  00001A  CFD8 F064          	movff	status,??_ISR_Bassa+4
 14609  00001E  CFE8 F065          	movff	wreg,??_ISR_Bassa+5
 14610  000022  CFE0 F066          	movff	bsr,??_ISR_Bassa+6
 14611  000026  CFFA F067          	movff	pclath,??_ISR_Bassa+7
 14612  00002A  CFFB F068          	movff	pclatu,??_ISR_Bassa+8
 14613  00002E  CFE9 F069          	movff	fsr0l,??_ISR_Bassa+9
 14614  000032  CFEA F06A          	movff	fsr0h,??_ISR_Bassa+10
 14615  000036  CFE1 F06B          	movff	fsr1l,??_ISR_Bassa+11
 14616  00003A  CFE2 F06C          	movff	fsr1h,??_ISR_Bassa+12
 14617  00003E  CFD9 F06D          	movff	fsr2l,??_ISR_Bassa+13
 14618  000042  CFDA F06E          	movff	fsr2h,??_ISR_Bassa+14
 14619  000046  CFF3 F06F          	movff	prodl,??_ISR_Bassa+15
 14620  00004A  CFF4 F070          	movff	prodh,??_ISR_Bassa+16
 14621  00004E  CFF6 F071          	movff	tblptrl,??_ISR_Bassa+17
 14622  000052  CFF7 F072          	movff	tblptrh,??_ISR_Bassa+18
 14623  000056  CFF8 F073          	movff	tblptru,??_ISR_Bassa+19
 14624  00005A  CFF5 F074          	movff	tablat,??_ISR_Bassa+20
 14625                           
 14626                           ;parcheggio.c: 125: if (INTCONbits.TMR0IF == 1) {
 14627  00005E  A4F2               	btfss	intcon,2,c	;volatile
 14628  000060  D0B3               	goto	i1l8630
 14629                           
 14630                           ;parcheggio.c: 126: INTCONbits.INT0IE = 0;
 14631  000062  98F2               	bcf	intcon,4,c	;volatile
 14632                           
 14633                           ;parcheggio.c: 127: T0CONbits.TMR0ON = 0;
 14634  000064  9ED5               	bcf	4053,7,c	;volatile
 14635                           
 14636                           ;parcheggio.c: 128: TMR0H = 0x34;
 14637  000066  0E34               	movlw	52
 14638  000068  6ED7               	movwf	4055,c	;volatile
 14639                           
 14640                           ;parcheggio.c: 129: TMR0L = 0xE0;
 14641  00006A  0EE0               	movlw	224
 14642  00006C  6ED6               	movwf	4054,c	;volatile
 14643                           
 14644                           ;parcheggio.c: 130: T0CONbits.TMR0ON = 1;
 14645  00006E  8ED5               	bsf	4053,7,c	;volatile
 14646                           
 14647                           ;parcheggio.c: 132: if (distance_error == 1) {
 14648  000070  AA43               	btfss	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14649  000072  D00C               	goto	i1l704
 14650                           
 14651                           ;parcheggio.c: 133: sensor_distance[MUX_index] = 5000;
 14652  000074  503E               	movf	_MUX_index,w,c	;volatile
 14653  000076  0D02               	mullw	2
 14654  000078  0E00               	movlw	low _sensor_distance
 14655  00007A  24F3               	addwf	prodl,w,c
 14656  00007C  6ED9               	movwf	fsr2l,c
 14657  00007E  0E01               	movlw	high _sensor_distance
 14658  000080  20F4               	addwfc	prodh,w,c
 14659  000082  6EDA               	movwf	fsr2h,c
 14660  000084  0E88               	movlw	136
 14661  000086  6EDE               	movwf	postinc2,c
 14662  000088  0E13               	movlw	19
 14663  00008A  6EDD               	movwf	postdec2,c
 14664  00008C                     i1l704:
 14665                           
 14666                           ;parcheggio.c: 134: }
 14667                           ;parcheggio.c: 136: if ((sensor_distance[MUX_index] < 250)&&(start_operation == 0)&&((MU
      +                          X_index == 3) || (MUX_index == 6))) {
 14668  00008C  503E               	movf	_MUX_index,w,c	;volatile
 14669  00008E  0D02               	mullw	2
 14670  000090  0E00               	movlw	low _sensor_distance
 14671  000092  24F3               	addwf	prodl,w,c
 14672  000094  6ED9               	movwf	fsr2l,c
 14673  000096  0E01               	movlw	high _sensor_distance
 14674  000098  20F4               	addwfc	prodh,w,c
 14675  00009A  6EDA               	movwf	fsr2h,c
 14676  00009C  0E01               	movlw	1
 14677  00009E  50DB               	movf	plusw2,w,c
 14678  0000A0  E117               	bnz	i1l8578
 14679  0000A2  0EFA               	movlw	250
 14680  0000A4  5CDE               	subwf	postinc2,w,c
 14681  0000A6  A0D8               	btfss	status,0,c
 14682  0000A8  BC44               	btfsc	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 14683  0000AA  D012               	goto	i1l8578
 14684  0000AC  0E03               	movlw	3
 14685  0000AE  183E               	xorwf	_MUX_index,w,c	;volatile
 14686  0000B0  B4D8               	btfsc	status,2,c
 14687  0000B2  D004               	goto	i1l8574
 14688  0000B4  0E06               	movlw	6
 14689  0000B6  183E               	xorwf	_MUX_index,w,c	;volatile
 14690  0000B8  A4D8               	btfss	status,2,c
 14691  0000BA  D00A               	goto	i1l8578
 14692  0000BC                     i1l8574:
 14693                           
 14694                           ;parcheggio.c: 137: if (MUX_index == 3) {
 14695  0000BC  0E03               	movlw	3
 14696  0000BE  183E               	xorwf	_MUX_index,w,c	;volatile
 14697  0000C0  A4D8               	btfss	status,2,c
 14698  0000C2  D003               	goto	i1l708
 14699                           
 14700                           ;parcheggio.c: 138: sensor_distance_short[1] = sensor_distance[3];
 14701  0000C4  C106  F1A2         	movff	_sensor_distance+6,_sensor_distance_short+1	;volatile
 14702                           
 14703                           ;parcheggio.c: 139: } else {
 14704  0000C8  D00D               	goto	i1l710
 14705  0000CA                     i1l708:
 14706                           
 14707                           ;parcheggio.c: 140: sensor_distance_short[0] = sensor_distance[6];
 14708  0000CA  C10C  F1A1         	movff	_sensor_distance+12,_sensor_distance_short	;volatile
 14709                           
 14710                           ;parcheggio.c: 141: }
 14711                           ;parcheggio.c: 142: } else {
 14712  0000CE  D00A               	goto	i1l710
 14713  0000D0                     i1l8578:
 14714                           
 14715                           ;parcheggio.c: 143: sensor_distance_short[MUX_index] = 255;
 14716  0000D0  503E               	movf	_MUX_index,w,c	;volatile
 14717  0000D2  0D01               	mullw	1
 14718  0000D4  0EA1               	movlw	low _sensor_distance_short
 14719  0000D6  24F3               	addwf	prodl,w,c
 14720  0000D8  6ED9               	movwf	fsr2l,c
 14721  0000DA  0E01               	movlw	high _sensor_distance_short
 14722  0000DC  20F4               	addwfc	prodh,w,c
 14723  0000DE  6EDA               	movwf	fsr2h,c
 14724  0000E0  0EFF               	movlw	255
 14725  0000E2  6EDF               	movwf	indf2,c
 14726  0000E4                     i1l710:
 14727                           
 14728                           ;parcheggio.c: 144: }
 14729                           ;parcheggio.c: 145: if ((sensor_distance[MUX_index] < 10)&&(start_operation == 1)&&(avvi
      +                          cinamento == 0)) {
 14730  0000E4  503E               	movf	_MUX_index,w,c	;volatile
 14731  0000E6  0D02               	mullw	2
 14732  0000E8  0E00               	movlw	low _sensor_distance
 14733  0000EA  24F3               	addwf	prodl,w,c
 14734  0000EC  6ED9               	movwf	fsr2l,c
 14735  0000EE  0E01               	movlw	high _sensor_distance
 14736  0000F0  20F4               	addwfc	prodh,w,c
 14737  0000F2  6EDA               	movwf	fsr2h,c
 14738  0000F4  0E01               	movlw	1
 14739  0000F6  50DB               	movf	plusw2,w,c
 14740  0000F8  E127               	bnz	i1l8594
 14741  0000FA  0E0A               	movlw	10
 14742  0000FC  5CDE               	subwf	postinc2,w,c
 14743  0000FE  A0D8               	btfss	status,0,c
 14744  000100  AC44               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 14745  000102  D022               	goto	i1l8594
 14746  000104  B643               	btfsc	_avvicinamento/(0+8),_avvicinamento& (0+7),c	;volatile
 14747  000106  D020               	goto	i1l8594
 14748                           
 14749                           ;parcheggio.c: 146: counter++;
 14750  000108  2A41               	incf	_counter,f,c	;volatile
 14751                           
 14752                           ;parcheggio.c: 147: if (counter > 1) {
 14753  00010A  0E01               	movlw	1
 14754  00010C  6441               	cpfsgt	_counter,c	;volatile
 14755  00010E  D01C               	goto	i1l8594
 14756                           
 14757                           ;parcheggio.c: 148: data[0] = 4;
 14758  000110  0E04               	movlw	4
 14759  000112  0101               	movlb	1	; () banked
 14760  000114  6F71               	movwf	_data& (0+255),b	;volatile
 14761                           
 14762                           ; BSR set to: 1
 14763                           ;parcheggio.c: 149: CANsendMessage(0b00000001101, data, 8, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
 14764  000116  0E0D               	movlw	13
 14765  000118  6E18               	movwf	i1CANsendMessage@identifier,c
 14766  00011A  0E00               	movlw	0
 14767  00011C  6E19               	movwf	i1CANsendMessage@identifier+1,c
 14768  00011E  0E00               	movlw	0
 14769  000120  6E1A               	movwf	i1CANsendMessage@identifier+2,c
 14770  000122  0E00               	movlw	0
 14771  000124  6E1B               	movwf	i1CANsendMessage@identifier+3,c
 14772  000126  0E71               	movlw	low _data
 14773  000128  6E1C               	movwf	i1CANsendMessage@data,c
 14774  00012A  0E01               	movlw	high _data
 14775  00012C  6E1D               	movwf	i1CANsendMessage@data+1,c
 14776  00012E  0E08               	movlw	8
 14777  000130  6E1E               	movwf	i1CANsendMessage@dataLength,c
 14778  000132  0EBC               	movlw	188
 14779  000134  6E1F               	movwf	i1CANsendMessage@flags,c
 14780  000136  ECF2  F00F         	call	i1_CANsendMessage	;wreg free
 14781                           
 14782                           ;parcheggio.c: 150: delay_ms(100);
 14783  00013A  0E00               	movlw	0
 14784  00013C  6E1F               	movwf	i1delay_ms@value_ms+1,c
 14785  00013E  0E64               	movlw	100
 14786  000140  6E1E               	movwf	i1delay_ms@value_ms,c
 14787  000142  EC06  F033         	call	i1_delay_ms	;wreg free
 14788  000146  00FF               	reset		;# 
 14789  000148                     i1l8594:
 14790                           
 14791                           ;parcheggio.c: 152: }
 14792                           ;parcheggio.c: 153: }
 14793                           ;parcheggio.c: 155: MUX_index++;
 14794  000148  2A3E               	incf	_MUX_index,f,c	;volatile
 14795                           
 14796                           ;parcheggio.c: 156: if (activation == 0) {
 14797  00014A  B243               	btfsc	_activation/(0+8),_activation& (0+7),c	;volatile
 14798  00014C  D01B               	goto	i1l8602
 14799                           
 14800                           ;parcheggio.c: 157: unsigned char MUX_index_collision [] = {3, 6};
 14801  00014E  C1FA  F075         	movff	ISR_Bassa@F15917,ISR_Bassa@MUX_index_collision
 14802  000152  C1FB  F076         	movff	ISR_Bassa@F15917+1,ISR_Bassa@MUX_index_collision+1
 14803                           
 14804                           ;parcheggio.c: 158: MUX_toggle = ~MUX_toggle;
 14805  000156  B043               	btfsc	_MUX_toggle/(0+8),_MUX_toggle& (0+7),c	;volatile
 14806  000158  D002               	goto	i1u1172_20
 14807  00015A  8043               	bsf	_MUX_toggle/(0+8),_MUX_toggle& (0+7),c	;volatile
 14808  00015C  D001               	goto	i1l8600
 14809  00015E                     i1u1172_20:
 14810  00015E  9043               	bcf	_MUX_toggle/(0+8),_MUX_toggle& (0+7),c	;volatile
 14811  000160                     i1l8600:
 14812                           
 14813                           ;parcheggio.c: 159: MUX_index = MUX_index_collision[MUX_toggle];
 14814  000160  A043               	btfss	_MUX_toggle/(0+8),_MUX_toggle& (0+7),c	;volatile
 14815  000162  D002               	goto	i1u1174_20
 14816  000164  0E01               	movlw	1
 14817  000166  D001               	goto	i1u1175_20
 14818  000168                     i1u1174_20:
 14819  000168  0E00               	movlw	0
 14820  00016A                     i1u1175_20:
 14821  00016A  0100               	movlb	0	; () banked
 14822  00016C  6F60               	movwf	??_ISR_Bassa& (0+255),b
 14823  00016E  6B61               	clrf	(??_ISR_Bassa+1)& (0+255),b
 14824  000170  0E75               	movlw	low ISR_Bassa@MUX_index_collision
 14825  000172  0100               	movlb	0	; () banked
 14826  000174  2560               	addwf	??_ISR_Bassa& (0+255),w,b
 14827  000176  6ED9               	movwf	fsr2l,c
 14828  000178  0E00               	movlw	high ISR_Bassa@MUX_index_collision
 14829  00017A  0100               	movlb	0	; () banked
 14830  00017C  2161               	addwfc	(??_ISR_Bassa+1)& (0+255),w,b
 14831  00017E  6EDA               	movwf	fsr2h,c
 14832  000180  50DF               	movf	indf2,w,c
 14833  000182  6E3E               	movwf	_MUX_index,c	;volatile
 14834  000184                     i1l8602:
 14835                           
 14836                           ;parcheggio.c: 160: }
 14837                           ;parcheggio.c: 162: if (MUX_index == 8) {
 14838  000184  0E08               	movlw	8
 14839  000186  183E               	xorwf	_MUX_index,w,c	;volatile
 14840  000188  A4D8               	btfss	status,2,c
 14841  00018A  D002               	goto	i1l716
 14842                           
 14843                           ;parcheggio.c: 163: MUX_index = 0;
 14844  00018C  0E00               	movlw	0
 14845  00018E  6E3E               	movwf	_MUX_index,c	;volatile
 14846  000190                     i1l716:
 14847                           
 14848                           ;parcheggio.c: 164: }
 14849                           ;parcheggio.c: 166: unsigned char PORTA_temp = 0;
 14850  000190  0E00               	movlw	0
 14851  000192  0100               	movlb	0	; () banked
 14852  000194  6F77               	movwf	ISR_Bassa@PORTA_temp& (0+255),b
 14853                           
 14854                           ; BSR set to: 0
 14855                           ;parcheggio.c: 167: PORTA_temp = MUX_select[MUX_index];
 14856  000196  503E               	movf	_MUX_index,w,c	;volatile
 14857  000198  0D01               	mullw	1
 14858  00019A  0E10               	movlw	low _MUX_select
 14859  00019C  24F3               	addwf	prodl,w,c
 14860  00019E  6ED9               	movwf	fsr2l,c
 14861  0001A0  0E01               	movlw	high _MUX_select
 14862  0001A2  20F4               	addwfc	prodh,w,c
 14863  0001A4  6EDA               	movwf	fsr2h,c
 14864  0001A6  50DF               	movf	indf2,w,c
 14865  0001A8  0100               	movlb	0	; () banked
 14866  0001AA  6F77               	movwf	ISR_Bassa@PORTA_temp& (0+255),b
 14867                           
 14868                           ; BSR set to: 0
 14869                           ;parcheggio.c: 168: PORTA = PORTA_temp;
 14870  0001AC  C077  FF80         	movff	ISR_Bassa@PORTA_temp,3968	;volatile
 14871                           
 14872                           ; BSR set to: 0
 14873                           ;parcheggio.c: 170: TRISBbits.RB0 = 0;
 14874  0001B0  9093               	bcf	3987,0,c	;volatile
 14875                           
 14876                           ; BSR set to: 0
 14877                           ;parcheggio.c: 171: LATBbits.LATB0 = 1;
 14878  0001B2  808A               	bsf	3978,0,c	;volatile
 14879                           
 14880                           ; BSR set to: 0
 14881                           ;parcheggio.c: 172: _delay((unsigned long)((15)*(16000000/4000000.0)));
 14882  0001B4  0E14               	movlw	20
 14883  0001B6                     i1u1192_27:
 14884  0001B6  2EE8               	decfsz	wreg,f,c
 14885  0001B8  D7FE               	goto	i1u1192_27
 14886                           
 14887                           ;parcheggio.c: 173: distance_error = 1;
 14888  0001BA  8A43               	bsf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14889                           
 14890                           ;parcheggio.c: 174: LATBbits.LATB0 = 0;
 14891  0001BC  908A               	bcf	3978,0,c	;volatile
 14892                           
 14893                           ;parcheggio.c: 175: TRISBbits.RB0 = 1;
 14894  0001BE  8093               	bsf	3987,0,c	;volatile
 14895                           
 14896                           ;parcheggio.c: 176: INTCONbits.INT0IF = 0;
 14897  0001C0  92F2               	bcf	intcon,1,c	;volatile
 14898                           
 14899                           ;parcheggio.c: 177: INTCON2bits.INTEDG0 = 1;
 14900  0001C2  8CF1               	bsf	intcon2,6,c	;volatile
 14901                           
 14902                           ;parcheggio.c: 178: INTCONbits.INT0IE = 1;
 14903  0001C4  88F2               	bsf	intcon,4,c	;volatile
 14904                           
 14905                           ;parcheggio.c: 179: INTCONbits.TMR0IF = 0;
 14906  0001C6  94F2               	bcf	intcon,2,c	;volatile
 14907  0001C8                     i1l8630:
 14908                           
 14909                           ;parcheggio.c: 181: }
 14910                           ;parcheggio.c: 184: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
 14911  0001C8  A0A4               	btfss	4004,0,c	;volatile
 14912  0001CA  B2A4               	btfsc	4004,1,c	;volatile
 14913  0001CC  D001               	goto	i1l8634
 14914  0001CE  D09C               	goto	i1l729
 14915  0001D0                     i1l8634:
 14916                           
 14917                           ;parcheggio.c: 185: CANreceiveMessage(&msg);
 14918  0001D0  0E62               	movlw	low _msg
 14919  0001D2  6E18               	movwf	CANreceiveMessage@msg,c
 14920  0001D4  0E01               	movlw	high _msg
 14921  0001D6  6E19               	movwf	CANreceiveMessage@msg+1,c
 14922  0001D8  ECFF  F015         	call	_CANreceiveMessage	;wreg free
 14923                           
 14924                           ;parcheggio.c: 187: if (msg.identifier == 0b00000001111) {
 14925  0001DC  0E0F               	movlw	15
 14926  0001DE  0101               	movlb	1	; () banked
 14927  0001E0  1962               	xorwf	_msg& (0+255),w,b
 14928  0001E2  0101               	movlb	1	; () banked
 14929  0001E4  1163               	iorwf	(_msg+1)& (0+255),w,b
 14930  0001E6  0101               	movlb	1	; () banked
 14931  0001E8  1164               	iorwf	(_msg+2)& (0+255),w,b
 14932  0001EA  0101               	movlb	1	; () banked
 14933  0001EC  1165               	iorwf	(_msg+3)& (0+255),w,b
 14934  0001EE  B4D8               	btfsc	status,2,c
 14935                           
 14936                           ; BSR set to: 1
 14937                           ;parcheggio.c: 188: asd = 0;
 14938  0001F0  9443               	bcf	_asd/(0+8),_asd& (0+7),c	;volatile
 14939                           
 14940                           ; BSR set to: 1
 14941                           ;parcheggio.c: 189: }
 14942                           ;parcheggio.c: 191: if ((msg.identifier == 0b00000001001) && (msg.RTR != 1)) {
 14943                           
 14944                           ; BSR set to: 1
 14945  0001F2  0E09               	movlw	9
 14946  0001F4  0101               	movlb	1	; () banked
 14947  0001F6  1962               	xorwf	_msg& (0+255),w,b
 14948  0001F8  0101               	movlb	1	; () banked
 14949  0001FA  1163               	iorwf	(_msg+1)& (0+255),w,b
 14950  0001FC  0101               	movlb	1	; () banked
 14951  0001FE  1164               	iorwf	(_msg+2)& (0+255),w,b
 14952  000200  0101               	movlb	1	; () banked
 14953  000202  1165               	iorwf	(_msg+3)& (0+255),w,b
 14954  000204  A4D8               	btfss	status,2,c
 14955  000206  D032               	goto	i1l8656
 14956                           
 14957                           ; BSR set to: 1
 14958  000208  0101               	movlb	1	; () banked
 14959  00020A  0570               	decf	(_msg+14)& (0+255),w,b
 14960  00020C  B4D8               	btfsc	status,2,c
 14961  00020E  D02E               	goto	i1l8656
 14962                           
 14963                           ; BSR set to: 1
 14964                           ;parcheggio.c: 192: distance_average = 0;
 14965  000210  0E00               	movlw	0
 14966  000212  6E37               	movwf	_distance_average+1,c	;volatile
 14967  000214  0E00               	movlw	0
 14968  000216  6E36               	movwf	_distance_average,c	;volatile
 14969                           
 14970                           ; BSR set to: 1
 14971                           ;parcheggio.c: 193: distance_dx = msg.data[1];
 14972  000218  C167  F038         	movff	_msg+5,_distance_dx	;volatile
 14973  00021C  6A39               	clrf	_distance_dx+1,c	;volatile
 14974                           
 14975                           ;parcheggio.c: 194: distance_dx = ((distance_dx << 8) | msg.data[0]);
 14976  00021E  5038               	movf	_distance_dx,w,c	;volatile
 14977  000220  0100               	movlb	0	; () banked
 14978  000222  6F60               	movwf	??_ISR_Bassa& (0+255),b
 14979  000224  0101               	movlb	1	; () banked
 14980  000226  5166               	movf	(_msg+4)& (0+255),w,b
 14981  000228  6E38               	movwf	_distance_dx,c	;volatile
 14982  00022A  C060  F039         	movff	??_ISR_Bassa,_distance_dx+1	;volatile
 14983                           
 14984                           ; BSR set to: 1
 14985                           ;parcheggio.c: 195: distance_sx = msg.data[3];
 14986  00022E  C169  F03A         	movff	_msg+7,_distance_sx	;volatile
 14987  000232  6A3B               	clrf	_distance_sx+1,c	;volatile
 14988                           
 14989                           ;parcheggio.c: 196: distance_sx = ((distance_sx << 8) | msg.data[2]);
 14990  000234  503A               	movf	_distance_sx,w,c	;volatile
 14991  000236  0100               	movlb	0	; () banked
 14992  000238  6F60               	movwf	??_ISR_Bassa& (0+255),b
 14993  00023A  0101               	movlb	1	; () banked
 14994  00023C  5168               	movf	(_msg+6)& (0+255),w,b
 14995  00023E  6E3A               	movwf	_distance_sx,c	;volatile
 14996  000240  C060  F03B         	movff	??_ISR_Bassa,_distance_sx+1	;volatile
 14997                           
 14998                           ; BSR set to: 1
 14999                           ;parcheggio.c: 197: distance_average = (distance_sx + distance_dx) / 2;
 15000  000244  5038               	movf	_distance_dx,w,c	;volatile
 15001  000246  243A               	addwf	_distance_sx,w,c	;volatile
 15002  000248  0100               	movlb	0	; () banked
 15003  00024A  6F60               	movwf	??_ISR_Bassa& (0+255),b
 15004  00024C  5039               	movf	_distance_dx+1,w,c	;volatile
 15005  00024E  203B               	addwfc	_distance_sx+1,w,c	;volatile
 15006  000250  0100               	movlb	0	; () banked
 15007  000252  6F61               	movwf	(??_ISR_Bassa+1)& (0+255),b
 15008  000254  90D8               	bcf	status,0,c
 15009  000256  0100               	movlb	0	; () banked
 15010  000258  3161               	rrcf	(??_ISR_Bassa+1)& (0+255),w,b
 15011  00025A  0100               	movlb	0	; () banked
 15012  00025C  6F62               	movwf	(??_ISR_Bassa+2)& (0+255),b
 15013  00025E  0100               	movlb	0	; () banked
 15014  000260  3160               	rrcf	??_ISR_Bassa& (0+255),w,b
 15015  000262  6E36               	movwf	_distance_average,c	;volatile
 15016  000264  C062  F037         	movff	??_ISR_Bassa+2,_distance_average+1	;volatile
 15017                           
 15018                           ; BSR set to: 0
 15019                           ;parcheggio.c: 198: distance_received = 1;
 15020  000268  8C43               	bsf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
 15021                           
 15022                           ; BSR set to: 0
 15023                           ;parcheggio.c: 199: distance_received1 = 1;
 15024  00026A  8E43               	bsf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
 15025  00026C                     i1l8656:
 15026                           
 15027                           ;parcheggio.c: 200: }
 15028                           ;parcheggio.c: 202: if (msg.identifier == 0b00000001100) {
 15029  00026C  0E0C               	movlw	12
 15030  00026E  0101               	movlb	1	; () banked
 15031  000270  1962               	xorwf	_msg& (0+255),w,b
 15032  000272  0101               	movlb	1	; () banked
 15033  000274  1163               	iorwf	(_msg+1)& (0+255),w,b
 15034  000276  0101               	movlb	1	; () banked
 15035  000278  1164               	iorwf	(_msg+2)& (0+255),w,b
 15036  00027A  0101               	movlb	1	; () banked
 15037  00027C  1165               	iorwf	(_msg+3)& (0+255),w,b
 15038  00027E  A4D8               	btfss	status,2,c
 15039  000280  D00C               	goto	i1l8662
 15040                           
 15041                           ; BSR set to: 1
 15042                           ;parcheggio.c: 203: if (msg.data[0] == 1) {
 15043  000282  0101               	movlb	1	; () banked
 15044  000284  0566               	decf	(_msg+4)& (0+255),w,b
 15045  000286  A4D8               	btfss	status,2,c
 15046  000288  D003               	goto	i1l723
 15047                           
 15048                           ; BSR set to: 1
 15049                           ;parcheggio.c: 204: activation = 1;
 15050  00028A  8243               	bsf	_activation/(0+8),_activation& (0+7),c	;volatile
 15051                           
 15052                           ;parcheggio.c: 205: PORTBbits.RB6 = 1;
 15053  00028C  8C81               	bsf	3969,6,c	;volatile
 15054                           
 15055                           ;parcheggio.c: 206: } else {
 15056  00028E  D005               	goto	i1l8662
 15057  000290                     i1l723:
 15058                           
 15059                           ; BSR set to: 1
 15060                           ;parcheggio.c: 207: activation = 0;
 15061  000290  9243               	bcf	_activation/(0+8),_activation& (0+7),c	;volatile
 15062                           
 15063                           ;parcheggio.c: 208: PORTBbits.RB4 = 0;
 15064  000292  9881               	bcf	3969,4,c	;volatile
 15065                           
 15066                           ;parcheggio.c: 209: PORTBbits.RB5 = 0;
 15067  000294  9A81               	bcf	3969,5,c	;volatile
 15068                           
 15069                           ;parcheggio.c: 210: PORTBbits.RB6 = 0;
 15070  000296  9C81               	bcf	3969,6,c	;volatile
 15071                           
 15072                           ;parcheggio.c: 211: request_sent = 0;
 15073  000298  9844               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
 15074  00029A                     i1l8662:
 15075                           
 15076                           ; BSR set to: 1
 15077                           ;parcheggio.c: 212: }
 15078                           ;parcheggio.c: 213: }
 15079                           ;parcheggio.c: 215: if (msg.identifier == 0b00000001110) {
 15080  00029A  0E0E               	movlw	14
 15081  00029C  0101               	movlb	1	; () banked
 15082  00029E  1962               	xorwf	_msg& (0+255),w,b
 15083  0002A0  0101               	movlb	1	; () banked
 15084  0002A2  1163               	iorwf	(_msg+1)& (0+255),w,b
 15085  0002A4  0101               	movlb	1	; () banked
 15086  0002A6  1164               	iorwf	(_msg+2)& (0+255),w,b
 15087  0002A8  0101               	movlb	1	; () banked
 15088  0002AA  1165               	iorwf	(_msg+3)& (0+255),w,b
 15089  0002AC  B4D8               	btfsc	status,2,c
 15090                           
 15091                           ; BSR set to: 1
 15092                           ;parcheggio.c: 216: start_operation = 1;
 15093  0002AE  8C44               	bsf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 15094                           
 15095                           ; BSR set to: 1
 15096                           ;parcheggio.c: 217: }
 15097                           ;parcheggio.c: 220: if (msg.identifier == 0b00000001000) {
 15098                           
 15099                           ; BSR set to: 1
 15100  0002B0  0E08               	movlw	8
 15101  0002B2  0101               	movlb	1	; () banked
 15102  0002B4  1962               	xorwf	_msg& (0+255),w,b
 15103  0002B6  0101               	movlb	1	; () banked
 15104  0002B8  1163               	iorwf	(_msg+1)& (0+255),w,b
 15105  0002BA  0101               	movlb	1	; () banked
 15106  0002BC  1164               	iorwf	(_msg+2)& (0+255),w,b
 15107  0002BE  0101               	movlb	1	; () banked
 15108  0002C0  1165               	iorwf	(_msg+3)& (0+255),w,b
 15109  0002C2  A4D8               	btfss	status,2,c
 15110  0002C4  D01F               	goto	i1l726
 15111                           
 15112                           ; BSR set to: 1
 15113                           ;parcheggio.c: 221: for (unsigned char i = 0; i < 8; i++) {
 15114  0002C6  0E00               	movlw	0
 15115  0002C8  0100               	movlb	0	; () banked
 15116  0002CA  6F78               	movwf	ISR_Bassa@i& (0+255),b
 15117  0002CC                     i1l8670:
 15118                           
 15119                           ; BSR set to: 0
 15120  0002CC  0E07               	movlw	7
 15121  0002CE  0100               	movlb	0	; () banked
 15122  0002D0  6578               	cpfsgt	ISR_Bassa@i& (0+255),b
 15123  0002D2  D001               	goto	i1l8674
 15124  0002D4  D017               	goto	i1l726
 15125  0002D6                     i1l8674:
 15126                           
 15127                           ; BSR set to: 0
 15128                           ;parcheggio.c: 222: data_speed_rx[i] = msg.data[i];
 15129  0002D6  0100               	movlb	0	; () banked
 15130  0002D8  5178               	movf	ISR_Bassa@i& (0+255),w,b
 15131  0002DA  0D01               	mullw	1
 15132  0002DC  0E66               	movlw	low (_msg+4)
 15133  0002DE  24F3               	addwf	prodl,w,c
 15134  0002E0  6ED9               	movwf	fsr2l,c
 15135  0002E2  0E01               	movlw	high (_msg+4)
 15136  0002E4  20F4               	addwfc	prodh,w,c
 15137  0002E6  6EDA               	movwf	fsr2h,c
 15138  0002E8  0100               	movlb	0	; () banked
 15139  0002EA  5178               	movf	ISR_Bassa@i& (0+255),w,b
 15140  0002EC  0D01               	mullw	1
 15141  0002EE  0E18               	movlw	low _data_speed_rx
 15142  0002F0  24F3               	addwf	prodl,w,c
 15143  0002F2  6EE1               	movwf	fsr1l,c
 15144  0002F4  0E01               	movlw	high _data_speed_rx
 15145  0002F6  20F4               	addwfc	prodh,w,c
 15146  0002F8  6EE2               	movwf	fsr1h,c
 15147  0002FA  CFDF FFE7          	movff	indf2,indf1
 15148                           
 15149                           ; BSR set to: 0
 15150  0002FE  0100               	movlb	0	; () banked
 15151  000300  2B78               	incf	ISR_Bassa@i& (0+255),f,b
 15152  000302  D7E4               	goto	i1l8670
 15153  000304                     i1l726:
 15154                           
 15155                           ;parcheggio.c: 223: }
 15156                           ;parcheggio.c: 224: }
 15157                           ;parcheggio.c: 227: PIR3bits.RXB0IF = 0;
 15158  000304  90A4               	bcf	4004,0,c	;volatile
 15159                           
 15160                           ;parcheggio.c: 228: PIR3bits.RXB1IF = 0;
 15161  000306  92A4               	bcf	4004,1,c	;volatile
 15162  000308                     i1l729:
 15163  000308  C074  FFF5         	movff	??_ISR_Bassa+20,tablat
 15164  00030C  C073  FFF8         	movff	??_ISR_Bassa+19,tblptru
 15165  000310  C072  FFF7         	movff	??_ISR_Bassa+18,tblptrh
 15166  000314  C071  FFF6         	movff	??_ISR_Bassa+17,tblptrl
 15167  000318  C070  FFF4         	movff	??_ISR_Bassa+16,prodh
 15168  00031C  C06F  FFF3         	movff	??_ISR_Bassa+15,prodl
 15169  000320  C06E  FFDA         	movff	??_ISR_Bassa+14,fsr2h
 15170  000324  C06D  FFD9         	movff	??_ISR_Bassa+13,fsr2l
 15171  000328  C06C  FFE2         	movff	??_ISR_Bassa+12,fsr1h
 15172  00032C  C06B  FFE1         	movff	??_ISR_Bassa+11,fsr1l
 15173  000330  C06A  FFEA         	movff	??_ISR_Bassa+10,fsr0h
 15174  000334  C069  FFE9         	movff	??_ISR_Bassa+9,fsr0l
 15175  000338  C068  FFFB         	movff	??_ISR_Bassa+8,pclatu
 15176  00033C  C067  FFFA         	movff	??_ISR_Bassa+7,pclath
 15177  000340  C066  FFE0         	movff	??_ISR_Bassa+6,bsr
 15178  000344  C065  FFE8         	movff	??_ISR_Bassa+5,wreg
 15179  000348  C064  FFD8         	movff	??_ISR_Bassa+4,status
 15180  00034C  9045               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 15181  00034E  0010               	retfie	
 15182  000350                     __end_of_ISR_Bassa:
 15183                           	opt stack 0
 15184                           pclatu	equ	0xFFB
 15185                           pclath	equ	0xFFA
 15186                           tblptru	equ	0xFF8
 15187                           tblptrh	equ	0xFF7
 15188                           tblptrl	equ	0xFF6
 15189                           tablat	equ	0xFF5
 15190                           prodh	equ	0xFF4
 15191                           prodl	equ	0xFF3
 15192                           intcon	equ	0xFF2
 15193                           intcon2	equ	0xFF1
 15194                           postinc0	equ	0xFEE
 15195                           fsr0h	equ	0xFEA
 15196                           fsr0l	equ	0xFE9
 15197                           wreg	equ	0xFE8
 15198                           indf1	equ	0xFE7
 15199                           postdec1	equ	0xFE5
 15200                           fsr1h	equ	0xFE2
 15201                           fsr1l	equ	0xFE1
 15202                           bsr	equ	0xFE0
 15203                           indf2	equ	0xFDF
 15204                           postinc2	equ	0xFDE
 15205                           postdec2	equ	0xFDD
 15206                           plusw2	equ	0xFDB
 15207                           fsr2h	equ	0xFDA
 15208                           fsr2l	equ	0xFD9
 15209                           status	equ	0xFD8
 15210                           
 15211 ;; *************** function i1_delay_ms *****************
 15212 ;; Defined at:
 15213 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 15214 ;; Parameters:    Size  Location     Type
 15215 ;;  value_ms        2   29[COMRAM] unsigned int 
 15216 ;; Auto vars:     Size  Location     Type
 15217 ;;		None
 15218 ;; Return value:  Size  Location     Type
 15219 ;;                  1    wreg      void 
 15220 ;; Registers used:
 15221 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15222 ;; Tracked objects:
 15223 ;;		On entry : 0/0
 15224 ;;		On exit  : 0/0
 15225 ;;		Unchanged: 0/0
 15226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15227 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15230 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15231 ;;Total ram usage:        2 bytes
 15232 ;; Hardware stack levels used:    1
 15233 ;; Hardware stack levels required when called:    3
 15234 ;; This function calls:
 15235 ;;		i1___wmul
 15236 ;; This function is called by:
 15237 ;;		_ISR_Bassa
 15238 ;; This function uses a non-reentrant model
 15239 ;;
 15240                           
 15241                           	psect	text35
 15242  00660C                     __ptext35:
 15243                           	opt stack 0
 15244  00660C                     i1_delay_ms:
 15245                           	opt stack 20
 15246                           
 15247                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 15248                           
 15249                           ;incstack = 0
 15250  00660C  C0E6  F018         	movff	_delay_quartz_frequency_value,i1___wmul@multiplier	;volatile
 15251  006610  6A19               	clrf	i1___wmul@multiplier+1,c
 15252  006612  C01E  F01A         	movff	i1delay_ms@value_ms,i1___wmul@multiplicand
 15253  006616  C01F  F01B         	movff	i1delay_ms@value_ms+1,i1___wmul@multiplicand+1
 15254  00661A  EC4B  F033         	call	i1___wmul	;wreg free
 15255  00661E  C018  F034         	movff	?i1___wmul,_clock_counter_reference	;volatile
 15256  006622  C019  F035         	movff	?i1___wmul+1,_clock_counter_reference+1	;volatile
 15257                           
 15258                           ;src\delay.c: 75: while (clock_counter_reference) {
 15259  006626  D006               	goto	i1l567
 15260  006628                     i1l8552:
 15261                           
 15262                           ;src\delay.c: 85: _delay(240);
 15263  006628  0E50               	movlw	80
 15264  00662A                     i1u1193_27:
 15265  00662A  2EE8               	decfsz	wreg,f,c
 15266  00662C  D7FE               	goto	i1u1193_27
 15267                           
 15268                           ;src\delay.c: 88: clock_counter_reference--;
 15269  00662E  0634               	decf	_clock_counter_reference,f,c	;volatile
 15270  006630  A0D8               	btfss	status,0,c
 15271  006632  0635               	decf	_clock_counter_reference+1,f,c	;volatile
 15272  006634                     i1l567:
 15273  006634  5034               	movf	_clock_counter_reference,w,c	;volatile
 15274  006636  1035               	iorwf	_clock_counter_reference+1,w,c	;volatile
 15275  006638  B4D8               	btfsc	status,2,c
 15276  00663A  0012               	return	
 15277  00663C  D7F5               	goto	i1l8552
 15278  00663E                     __end_ofi1_delay_ms:
 15279                           	opt stack 0
 15280                           pclatu	equ	0xFFB
 15281                           pclath	equ	0xFFA
 15282                           tblptru	equ	0xFF8
 15283                           tblptrh	equ	0xFF7
 15284                           tblptrl	equ	0xFF6
 15285                           tablat	equ	0xFF5
 15286                           prodh	equ	0xFF4
 15287                           prodl	equ	0xFF3
 15288                           intcon	equ	0xFF2
 15289                           intcon2	equ	0xFF1
 15290                           postinc0	equ	0xFEE
 15291                           fsr0h	equ	0xFEA
 15292                           fsr0l	equ	0xFE9
 15293                           wreg	equ	0xFE8
 15294                           indf1	equ	0xFE7
 15295                           postdec1	equ	0xFE5
 15296                           fsr1h	equ	0xFE2
 15297                           fsr1l	equ	0xFE1
 15298                           bsr	equ	0xFE0
 15299                           indf2	equ	0xFDF
 15300                           postinc2	equ	0xFDE
 15301                           postdec2	equ	0xFDD
 15302                           plusw2	equ	0xFDB
 15303                           fsr2h	equ	0xFDA
 15304                           fsr2l	equ	0xFD9
 15305                           status	equ	0xFD8
 15306                           
 15307 ;; *************** function i1___wmul *****************
 15308 ;; Defined at:
 15309 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
 15310 ;; Parameters:    Size  Location     Type
 15311 ;;  multiplier      2   23[COMRAM] unsigned int 
 15312 ;;  multiplicand    2   25[COMRAM] unsigned int 
 15313 ;; Auto vars:     Size  Location     Type
 15314 ;;  __wmul          2   27[COMRAM] unsigned int 
 15315 ;; Return value:  Size  Location     Type
 15316 ;;                  2   23[COMRAM] unsigned int 
 15317 ;; Registers used:
 15318 ;;		wreg, status,2, status,0, prodl, prodh
 15319 ;; Tracked objects:
 15320 ;;		On entry : 0/0
 15321 ;;		On exit  : 0/0
 15322 ;;		Unchanged: 0/0
 15323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15324 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15325 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15327 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15328 ;;Total ram usage:        6 bytes
 15329 ;; Hardware stack levels used:    1
 15330 ;; Hardware stack levels required when called:    2
 15331 ;; This function calls:
 15332 ;;		Nothing
 15333 ;; This function is called by:
 15334 ;;		i1_delay_ms
 15335 ;; This function uses a non-reentrant model
 15336 ;;
 15337                           
 15338                           	psect	text36
 15339  006696                     __ptext36:
 15340                           	opt stack 0
 15341  006696                     i1___wmul:
 15342                           	opt stack 20
 15343                           
 15344                           ;incstack = 0
 15345  006696  5018               	movf	i1___wmul@multiplier,w,c
 15346  006698  021A               	mulwf	i1___wmul@multiplicand,c
 15347  00669A  CFF3 F01C          	movff	prodl,i1___wmul@product
 15348  00669E  CFF4 F01D          	movff	prodh,i1___wmul@product+1
 15349  0066A2  5018               	movf	i1___wmul@multiplier,w,c
 15350  0066A4  021B               	mulwf	i1___wmul@multiplicand+1,c
 15351  0066A6  50F3               	movf	prodl,w,c
 15352  0066A8  261D               	addwf	i1___wmul@product+1,f,c
 15353  0066AA  5019               	movf	i1___wmul@multiplier+1,w,c
 15354  0066AC  021A               	mulwf	i1___wmul@multiplicand,c
 15355  0066AE  50F3               	movf	prodl,w,c
 15356  0066B0  261D               	addwf	i1___wmul@product+1,f,c
 15357  0066B2  C01C  F018         	movff	i1___wmul@product,?i1___wmul
 15358  0066B6  C01D  F019         	movff	i1___wmul@product+1,?i1___wmul+1
 15359  0066BA  0012               	return	
 15360  0066BC                     __end_ofi1___wmul:
 15361                           	opt stack 0
 15362                           pclatu	equ	0xFFB
 15363                           pclath	equ	0xFFA
 15364                           tblptru	equ	0xFF8
 15365                           tblptrh	equ	0xFF7
 15366                           tblptrl	equ	0xFF6
 15367                           tablat	equ	0xFF5
 15368                           prodh	equ	0xFF4
 15369                           prodl	equ	0xFF3
 15370                           intcon	equ	0xFF2
 15371                           intcon2	equ	0xFF1
 15372                           postinc0	equ	0xFEE
 15373                           fsr0h	equ	0xFEA
 15374                           fsr0l	equ	0xFE9
 15375                           wreg	equ	0xFE8
 15376                           indf1	equ	0xFE7
 15377                           postdec1	equ	0xFE5
 15378                           fsr1h	equ	0xFE2
 15379                           fsr1l	equ	0xFE1
 15380                           bsr	equ	0xFE0
 15381                           indf2	equ	0xFDF
 15382                           postinc2	equ	0xFDE
 15383                           postdec2	equ	0xFDD
 15384                           plusw2	equ	0xFDB
 15385                           fsr2h	equ	0xFDA
 15386                           fsr2l	equ	0xFD9
 15387                           status	equ	0xFD8
 15388                           
 15389 ;; *************** function i1_CANsendMessage *****************
 15390 ;; Defined at:
 15391 ;;		line 294 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 15392 ;; Parameters:    Size  Location     Type
 15393 ;;  identifier      4   23[COMRAM] unsigned long 
 15394 ;;  data            2   27[COMRAM] PTR unsigned char 
 15395 ;;		 -> data_speed(8), data_brake(8), data_steering(8), data_correction(8), 
 15396 ;;		 -> data_test(8), data(8), sensor_distance_short(8), 
 15397 ;;  dataLength      1   29[COMRAM] unsigned char 
 15398 ;;  flags           1   30[COMRAM] enum E15421
 15399 ;; Auto vars:     Size  Location     Type
 15400 ;;  CANsendMessa    4   35[COMRAM] unsigned long 
 15401 ;; Return value:  Size  Location     Type
 15402 ;;                  1    wreg      void 
 15403 ;; Registers used:
 15404 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15405 ;; Tracked objects:
 15406 ;;		On entry : 0/0
 15407 ;;		On exit  : 0/0
 15408 ;;		Unchanged: 0/0
 15409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15410 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15411 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15412 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15413 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15414 ;;Total ram usage:       16 bytes
 15415 ;; Hardware stack levels used:    1
 15416 ;; Hardware stack levels required when called:    2
 15417 ;; This function calls:
 15418 ;;		Nothing
 15419 ;; This function is called by:
 15420 ;;		_ISR_Bassa
 15421 ;; This function uses a non-reentrant model
 15422 ;;
 15423                           
 15424                           	psect	text37
 15425  001FE4                     __ptext37:
 15426                           	opt stack 0
 15427  001FE4                     i1_CANsendMessage:
 15428                           	opt stack 21
 15429                           
 15430                           ;inc\CANlib.h: 296: unsigned long tamp;
 15431                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 15432                           
 15433                           ;incstack = 0
 15434  001FE4  010F               	movlb	15	; () banked
 15435  001FE6  B740               	btfsc	64,3,b	;volatile
 15436  001FE8  D115               	goto	i1l361
 15437                           
 15438                           ; BSR set to: 15
 15439                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 15440  001FEA  C01E  FF45         	movff	i1CANsendMessage@dataLength,3909	;volatile
 15441                           
 15442                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 15443  001FEE  AC1F               	btfss	i1CANsendMessage@flags,6,c
 15444  001FF0  D003               	goto	i1l362
 15445                           
 15446                           ; BSR set to: 15
 15447                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 15448  001FF2  010F               	movlb	15	; () banked
 15449  001FF4  8D45               	bsf	69,6,b	;volatile
 15450  001FF6  D002               	goto	i1l363
 15451  001FF8                     i1l362:
 15452                           
 15453                           ; BSR set to: 15
 15454                           ;inc\CANlib.h: 302: else
 15455                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 15456  001FF8  010F               	movlb	15	; () banked
 15457  001FFA  9D45               	bcf	69,6,b	;volatile
 15458  001FFC                     i1l363:
 15459                           
 15460                           ; BSR set to: 15
 15461                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 15462  001FFC  A61F               	btfss	i1CANsendMessage@flags,3,c
 15463  001FFE  D066               	goto	i1l364
 15464                           
 15465                           ; BSR set to: 15
 15466                           ;inc\CANlib.h: 306: {
 15467                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 15468  002000  5018               	movf	i1CANsendMessage@identifier,w,c
 15469  002002  6E24               	movwf	i1CANsendMessage@tamp,c
 15470  002004  6A25               	clrf	i1CANsendMessage@tamp+1,c
 15471  002006  6A26               	clrf	i1CANsendMessage@tamp+2,c
 15472  002008  6A27               	clrf	i1CANsendMessage@tamp+3,c
 15473                           
 15474                           ; BSR set to: 15
 15475                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 15476  00200A  C024  FF44         	movff	i1CANsendMessage@tamp,3908	;volatile
 15477                           
 15478                           ; BSR set to: 15
 15479                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 15480  00200E  0E00               	movlw	0
 15481  002010  1418               	andwf	i1CANsendMessage@identifier,w,c
 15482  002012  6E24               	movwf	i1CANsendMessage@tamp,c
 15483  002014  0EFF               	movlw	255
 15484  002016  1419               	andwf	i1CANsendMessage@identifier+1,w,c
 15485  002018  6E25               	movwf	i1CANsendMessage@tamp+1,c
 15486  00201A  0E00               	movlw	0
 15487  00201C  141A               	andwf	i1CANsendMessage@identifier+2,w,c
 15488  00201E  6E26               	movwf	i1CANsendMessage@tamp+2,c
 15489  002020  0E00               	movlw	0
 15490  002022  141B               	andwf	i1CANsendMessage@identifier+3,w,c
 15491  002024  6E27               	movwf	i1CANsendMessage@tamp+3,c
 15492                           
 15493                           ; BSR set to: 15
 15494                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 15495  002026  C024  F020         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 15496  00202A  C025  F021         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 15497  00202E  C026  F022         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 15498  002032  C027  F023         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 15499  002036  C021  F020         	movff	??i1_CANsendMessage+1,??i1_CANsendMessage
 15500  00203A  C022  F021         	movff	??i1_CANsendMessage+2,??i1_CANsendMessage+1
 15501  00203E  C023  F022         	movff	??i1_CANsendMessage+3,??i1_CANsendMessage+2
 15502  002042  6A23               	clrf	??i1_CANsendMessage+3,c
 15503  002044  C020  F024         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15504  002048  C021  F025         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15505  00204C  C022  F026         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15506  002050  C023  F027         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15507                           
 15508                           ; BSR set to: 15
 15509                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 15510  002054  C024  FF43         	movff	i1CANsendMessage@tamp,3907	;volatile
 15511                           
 15512                           ; BSR set to: 15
 15513                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 15514  002058  0E00               	movlw	0
 15515  00205A  010F               	movlb	15	; () banked
 15516  00205C  6F42               	movwf	66,b	;volatile
 15517                           
 15518                           ; BSR set to: 15
 15519                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 15520  00205E  010F               	movlb	15	; () banked
 15521  002060  8742               	bsf	66,3,b	;volatile
 15522                           
 15523                           ; BSR set to: 15
 15524                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 15525  002062  A01A               	btfss	i1CANsendMessage@identifier+2,0,c
 15526  002064  D002               	goto	i1l365
 15527                           
 15528                           ; BSR set to: 15
 15529                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 15530  002066  010F               	movlb	15	; () banked
 15531  002068  8142               	bsf	66,0,b	;volatile
 15532  00206A                     i1l365:
 15533                           
 15534                           ; BSR set to: 15
 15535                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 15536  00206A  A21A               	btfss	i1CANsendMessage@identifier+2,1,c
 15537  00206C  D002               	goto	i1l366
 15538                           
 15539                           ; BSR set to: 15
 15540                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 15541  00206E  010F               	movlb	15	; () banked
 15542  002070  8342               	bsf	66,1,b	;volatile
 15543  002072                     i1l366:
 15544                           
 15545                           ; BSR set to: 15
 15546                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 15547  002072  A41A               	btfss	i1CANsendMessage@identifier+2,2,c
 15548  002074  D002               	goto	i1l367
 15549                           
 15550                           ; BSR set to: 15
 15551                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 15552  002076  010F               	movlb	15	; () banked
 15553  002078  8B42               	bsf	66,5,b	;volatile
 15554  00207A                     i1l367:
 15555                           
 15556                           ; BSR set to: 15
 15557                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 15558  00207A  A61A               	btfss	i1CANsendMessage@identifier+2,3,c
 15559  00207C  D002               	goto	i1l368
 15560                           
 15561                           ; BSR set to: 15
 15562                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 15563  00207E  010F               	movlb	15	; () banked
 15564  002080  8D42               	bsf	66,6,b	;volatile
 15565  002082                     i1l368:
 15566                           
 15567                           ; BSR set to: 15
 15568                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 15569  002082  A81A               	btfss	i1CANsendMessage@identifier+2,4,c
 15570  002084  D002               	goto	i1l8352
 15571                           
 15572                           ; BSR set to: 15
 15573                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 15574  002086  010F               	movlb	15	; () banked
 15575  002088  8F42               	bsf	66,7,b	;volatile
 15576  00208A                     i1l8352:
 15577                           
 15578                           ; BSR set to: 15
 15579                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 15580  00208A  C018  F020         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 15581  00208E  C019  F021         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 15582  002092  C01A  F022         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 15583  002096  C01B  F023         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 15584  00209A  0E16               	movlw	22
 15585  00209C  D005               	goto	i1u1128_20
 15586  00209E                     i1u1128_25:
 15587  00209E  90D8               	bcf	status,0,c
 15588  0020A0  3223               	rrcf	??i1_CANsendMessage+3,f,c
 15589  0020A2  3222               	rrcf	??i1_CANsendMessage+2,f,c
 15590  0020A4  3221               	rrcf	??i1_CANsendMessage+1,f,c
 15591  0020A6  3220               	rrcf	??i1_CANsendMessage,f,c
 15592  0020A8                     i1u1128_20:
 15593  0020A8  2EE8               	decfsz	wreg,f,c
 15594  0020AA  D7F9               	goto	i1u1128_25
 15595  0020AC  C020  F024         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15596  0020B0  C021  F025         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15597  0020B4  C022  F026         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15598  0020B8  C023  F027         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15599                           
 15600                           ; BSR set to: 15
 15601                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 15602  0020BC  5024               	movf	i1CANsendMessage@tamp,w,c
 15603  0020BE  6E24               	movwf	i1CANsendMessage@tamp,c
 15604  0020C0  6A25               	clrf	i1CANsendMessage@tamp+1,c
 15605  0020C2  6A26               	clrf	i1CANsendMessage@tamp+2,c
 15606  0020C4  6A27               	clrf	i1CANsendMessage@tamp+3,c
 15607                           
 15608                           ; BSR set to: 15
 15609                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 15610  0020C6  C024  FF41         	movff	i1CANsendMessage@tamp,3905	;volatile
 15611                           
 15612                           ;inc\CANlib.h: 332: }
 15613  0020CA  D04D               	goto	i1l8372
 15614  0020CC                     i1l364:
 15615                           
 15616                           ; BSR set to: 15
 15617                           ;inc\CANlib.h: 334: else
 15618                           ;inc\CANlib.h: 336: {
 15619                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 15620  0020CC  010F               	movlb	15	; () banked
 15621  0020CE  9742               	bcf	66,3,b	;volatile
 15622                           
 15623                           ; BSR set to: 15
 15624                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 15625  0020D0  C018  F020         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 15626  0020D4  C019  F021         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 15627  0020D8  C01A  F022         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 15628  0020DC  C01B  F023         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 15629  0020E0  0E04               	movlw	4
 15630  0020E2  D005               	goto	i1u1129_20
 15631  0020E4                     i1u1129_25:
 15632  0020E4  90D8               	bcf	status,0,c
 15633  0020E6  3223               	rrcf	??i1_CANsendMessage+3,f,c
 15634  0020E8  3222               	rrcf	??i1_CANsendMessage+2,f,c
 15635  0020EA  3221               	rrcf	??i1_CANsendMessage+1,f,c
 15636  0020EC  3220               	rrcf	??i1_CANsendMessage,f,c
 15637  0020EE                     i1u1129_20:
 15638  0020EE  2EE8               	decfsz	wreg,f,c
 15639  0020F0  D7F9               	goto	i1u1129_25
 15640  0020F2  C020  F024         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15641  0020F6  C021  F025         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15642  0020FA  C022  F026         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15643  0020FE  C023  F027         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15644                           
 15645                           ; BSR set to: 15
 15646                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 15647  002102  5024               	movf	i1CANsendMessage@tamp,w,c
 15648  002104  6E24               	movwf	i1CANsendMessage@tamp,c
 15649  002106  6A25               	clrf	i1CANsendMessage@tamp+1,c
 15650  002108  6A26               	clrf	i1CANsendMessage@tamp+2,c
 15651  00210A  6A27               	clrf	i1CANsendMessage@tamp+3,c
 15652                           
 15653                           ; BSR set to: 15
 15654                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 15655  00210C  C024  FF41         	movff	i1CANsendMessage@tamp,3905	;volatile
 15656                           
 15657                           ; BSR set to: 15
 15658                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 15659  002110  0E07               	movlw	7
 15660  002112  1418               	andwf	i1CANsendMessage@identifier,w,c
 15661  002114  6E24               	movwf	i1CANsendMessage@tamp,c
 15662  002116  0E00               	movlw	0
 15663  002118  1419               	andwf	i1CANsendMessage@identifier+1,w,c
 15664  00211A  6E25               	movwf	i1CANsendMessage@tamp+1,c
 15665  00211C  0E00               	movlw	0
 15666  00211E  141A               	andwf	i1CANsendMessage@identifier+2,w,c
 15667  002120  6E26               	movwf	i1CANsendMessage@tamp+2,c
 15668  002122  0E00               	movlw	0
 15669  002124  141B               	andwf	i1CANsendMessage@identifier+3,w,c
 15670  002126  6E27               	movwf	i1CANsendMessage@tamp+3,c
 15671                           
 15672                           ; BSR set to: 15
 15673                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 15674  002128  C024  F020         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 15675  00212C  C025  F021         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 15676  002130  C026  F022         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 15677  002134  C027  F023         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 15678  002138  0E05               	movlw	5
 15679  00213A                     i1u1130_25:
 15680  00213A  90D8               	bcf	status,0,c
 15681  00213C  3620               	rlcf	??i1_CANsendMessage,f,c
 15682  00213E  3621               	rlcf	??i1_CANsendMessage+1,f,c
 15683  002140  3622               	rlcf	??i1_CANsendMessage+2,f,c
 15684  002142  3623               	rlcf	??i1_CANsendMessage+3,f,c
 15685  002144  2EE8               	decfsz	wreg,f,c
 15686  002146  D7F9               	goto	i1u1130_25
 15687  002148  C020  F024         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15688  00214C  C021  F025         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15689  002150  C022  F026         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15690  002154  C023  F027         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15691                           
 15692                           ; BSR set to: 15
 15693                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 15694  002158  010F               	movlb	15	; () banked
 15695  00215A  5142               	movf	66,w,b	;volatile
 15696  00215C  0B1F               	andlw	31
 15697  00215E  010F               	movlb	15	; () banked
 15698  002160  6F42               	movwf	66,b	;volatile
 15699                           
 15700                           ; BSR set to: 15
 15701                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 15702  002162  C024  FF42         	movff	i1CANsendMessage@tamp,3906	;volatile
 15703  002166                     i1l8372:
 15704                           
 15705                           ; BSR set to: 15
 15706                           ;inc\CANlib.h: 347: }
 15707                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 15708  002166  A01F               	btfss	i1CANsendMessage@flags,0,c
 15709  002168  D003               	goto	i1l371
 15710                           
 15711                           ; BSR set to: 15
 15712                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 15713  00216A  010F               	movlb	15	; () banked
 15714  00216C  8140               	bsf	64,0,b	;volatile
 15715  00216E  D002               	goto	i1l372
 15716  002170                     i1l371:
 15717                           
 15718                           ; BSR set to: 15
 15719                           ;inc\CANlib.h: 351: else
 15720                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 15721  002170  010F               	movlb	15	; () banked
 15722  002172  9140               	bcf	64,0,b	;volatile
 15723  002174                     i1l372:
 15724                           
 15725                           ; BSR set to: 15
 15726                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 15727  002174  A21F               	btfss	i1CANsendMessage@flags,1,c
 15728  002176  D003               	goto	i1l373
 15729                           
 15730                           ; BSR set to: 15
 15731                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 15732  002178  010F               	movlb	15	; () banked
 15733  00217A  8340               	bsf	64,1,b	;volatile
 15734  00217C  D002               	goto	i1l8378
 15735  00217E                     i1l373:
 15736                           
 15737                           ; BSR set to: 15
 15738                           ;inc\CANlib.h: 355: else
 15739                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 15740  00217E  010F               	movlb	15	; () banked
 15741  002180  9340               	bcf	64,1,b	;volatile
 15742  002182                     i1l8378:
 15743                           
 15744                           ; BSR set to: 15
 15745                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 15746  002182  C01C  FFD9         	movff	i1CANsendMessage@data,fsr2l
 15747  002186  C01D  FFDA         	movff	i1CANsendMessage@data+1,fsr2h
 15748  00218A  50DF               	movf	indf2,w,c
 15749  00218C  010F               	movlb	15	; () banked
 15750  00218E  6F46               	movwf	70,b	;volatile
 15751                           
 15752                           ; BSR set to: 15
 15753                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 15754  002190  EE20 F001          	lfsr	2,1
 15755  002194  501C               	movf	i1CANsendMessage@data,w,c
 15756  002196  26D9               	addwf	fsr2l,f,c
 15757  002198  501D               	movf	i1CANsendMessage@data+1,w,c
 15758  00219A  22DA               	addwfc	fsr2h,f,c
 15759  00219C  50DF               	movf	indf2,w,c
 15760  00219E  010F               	movlb	15	; () banked
 15761  0021A0  6F47               	movwf	71,b	;volatile
 15762                           
 15763                           ; BSR set to: 15
 15764                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 15765  0021A2  EE20 F002          	lfsr	2,2
 15766  0021A6  501C               	movf	i1CANsendMessage@data,w,c
 15767  0021A8  26D9               	addwf	fsr2l,f,c
 15768  0021AA  501D               	movf	i1CANsendMessage@data+1,w,c
 15769  0021AC  22DA               	addwfc	fsr2h,f,c
 15770  0021AE  50DF               	movf	indf2,w,c
 15771  0021B0  010F               	movlb	15	; () banked
 15772  0021B2  6F48               	movwf	72,b	;volatile
 15773                           
 15774                           ; BSR set to: 15
 15775                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 15776  0021B4  EE20 F003          	lfsr	2,3
 15777  0021B8  501C               	movf	i1CANsendMessage@data,w,c
 15778  0021BA  26D9               	addwf	fsr2l,f,c
 15779  0021BC  501D               	movf	i1CANsendMessage@data+1,w,c
 15780  0021BE  22DA               	addwfc	fsr2h,f,c
 15781  0021C0  50DF               	movf	indf2,w,c
 15782  0021C2  010F               	movlb	15	; () banked
 15783  0021C4  6F49               	movwf	73,b	;volatile
 15784                           
 15785                           ; BSR set to: 15
 15786                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 15787  0021C6  EE20 F004          	lfsr	2,4
 15788  0021CA  501C               	movf	i1CANsendMessage@data,w,c
 15789  0021CC  26D9               	addwf	fsr2l,f,c
 15790  0021CE  501D               	movf	i1CANsendMessage@data+1,w,c
 15791  0021D0  22DA               	addwfc	fsr2h,f,c
 15792  0021D2  50DF               	movf	indf2,w,c
 15793  0021D4  010F               	movlb	15	; () banked
 15794  0021D6  6F4A               	movwf	74,b	;volatile
 15795                           
 15796                           ; BSR set to: 15
 15797                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 15798  0021D8  EE20 F005          	lfsr	2,5
 15799  0021DC  501C               	movf	i1CANsendMessage@data,w,c
 15800  0021DE  26D9               	addwf	fsr2l,f,c
 15801  0021E0  501D               	movf	i1CANsendMessage@data+1,w,c
 15802  0021E2  22DA               	addwfc	fsr2h,f,c
 15803  0021E4  50DF               	movf	indf2,w,c
 15804  0021E6  010F               	movlb	15	; () banked
 15805  0021E8  6F4B               	movwf	75,b	;volatile
 15806                           
 15807                           ; BSR set to: 15
 15808                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 15809  0021EA  EE20 F006          	lfsr	2,6
 15810  0021EE  501C               	movf	i1CANsendMessage@data,w,c
 15811  0021F0  26D9               	addwf	fsr2l,f,c
 15812  0021F2  501D               	movf	i1CANsendMessage@data+1,w,c
 15813  0021F4  22DA               	addwfc	fsr2h,f,c
 15814  0021F6  50DF               	movf	indf2,w,c
 15815  0021F8  010F               	movlb	15	; () banked
 15816  0021FA  6F4C               	movwf	76,b	;volatile
 15817                           
 15818                           ; BSR set to: 15
 15819                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 15820  0021FC  EE20 F007          	lfsr	2,7
 15821  002200  501C               	movf	i1CANsendMessage@data,w,c
 15822  002202  26D9               	addwf	fsr2l,f,c
 15823  002204  501D               	movf	i1CANsendMessage@data+1,w,c
 15824  002206  22DA               	addwfc	fsr2h,f,c
 15825  002208  50DF               	movf	indf2,w,c
 15826  00220A  010F               	movlb	15	; () banked
 15827  00220C  6F4D               	movwf	77,b	;volatile
 15828                           
 15829                           ; BSR set to: 15
 15830                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 15831  00220E  010F               	movlb	15	; () banked
 15832  002210  8740               	bsf	64,3,b	;volatile
 15833                           
 15834                           ; BSR set to: 15
 15835                           ;inc\CANlib.h: 368: return;
 15836  002212  0012               	return	
 15837  002214                     i1l361:
 15838                           
 15839                           ; BSR set to: 15
 15840                           ;inc\CANlib.h: 369: }
 15841                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 15842  002214  010F               	movlb	15	; () banked
 15843  002216  B730               	btfsc	48,3,b	;volatile
 15844  002218  D115               	goto	i1l376
 15845                           
 15846                           ; BSR set to: 15
 15847                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 15848  00221A  C01E  FF35         	movff	i1CANsendMessage@dataLength,3893	;volatile
 15849                           
 15850                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 15851  00221E  AC1F               	btfss	i1CANsendMessage@flags,6,c
 15852  002220  D003               	goto	i1l377
 15853                           
 15854                           ; BSR set to: 15
 15855                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 15856  002222  010F               	movlb	15	; () banked
 15857  002224  8D35               	bsf	53,6,b	;volatile
 15858  002226  D002               	goto	i1l378
 15859  002228                     i1l377:
 15860                           
 15861                           ; BSR set to: 15
 15862                           ;inc\CANlib.h: 378: else
 15863                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 15864  002228  010F               	movlb	15	; () banked
 15865  00222A  9D35               	bcf	53,6,b	;volatile
 15866  00222C                     i1l378:
 15867                           
 15868                           ; BSR set to: 15
 15869                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 15870  00222C  A61F               	btfss	i1CANsendMessage@flags,3,c
 15871  00222E  D066               	goto	i1l379
 15872                           
 15873                           ; BSR set to: 15
 15874                           ;inc\CANlib.h: 382: {
 15875                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 15876  002230  5018               	movf	i1CANsendMessage@identifier,w,c
 15877  002232  6E24               	movwf	i1CANsendMessage@tamp,c
 15878  002234  6A25               	clrf	i1CANsendMessage@tamp+1,c
 15879  002236  6A26               	clrf	i1CANsendMessage@tamp+2,c
 15880  002238  6A27               	clrf	i1CANsendMessage@tamp+3,c
 15881                           
 15882                           ; BSR set to: 15
 15883                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 15884  00223A  C024  FF34         	movff	i1CANsendMessage@tamp,3892	;volatile
 15885                           
 15886                           ; BSR set to: 15
 15887                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 15888  00223E  0E00               	movlw	0
 15889  002240  1418               	andwf	i1CANsendMessage@identifier,w,c
 15890  002242  6E24               	movwf	i1CANsendMessage@tamp,c
 15891  002244  0EFF               	movlw	255
 15892  002246  1419               	andwf	i1CANsendMessage@identifier+1,w,c
 15893  002248  6E25               	movwf	i1CANsendMessage@tamp+1,c
 15894  00224A  0E00               	movlw	0
 15895  00224C  141A               	andwf	i1CANsendMessage@identifier+2,w,c
 15896  00224E  6E26               	movwf	i1CANsendMessage@tamp+2,c
 15897  002250  0E00               	movlw	0
 15898  002252  141B               	andwf	i1CANsendMessage@identifier+3,w,c
 15899  002254  6E27               	movwf	i1CANsendMessage@tamp+3,c
 15900                           
 15901                           ; BSR set to: 15
 15902                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 15903  002256  C024  F020         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 15904  00225A  C025  F021         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 15905  00225E  C026  F022         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 15906  002262  C027  F023         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 15907  002266  C021  F020         	movff	??i1_CANsendMessage+1,??i1_CANsendMessage
 15908  00226A  C022  F021         	movff	??i1_CANsendMessage+2,??i1_CANsendMessage+1
 15909  00226E  C023  F022         	movff	??i1_CANsendMessage+3,??i1_CANsendMessage+2
 15910  002272  6A23               	clrf	??i1_CANsendMessage+3,c
 15911  002274  C020  F024         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15912  002278  C021  F025         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15913  00227C  C022  F026         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15914  002280  C023  F027         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15915                           
 15916                           ; BSR set to: 15
 15917                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 15918  002284  C024  FF33         	movff	i1CANsendMessage@tamp,3891	;volatile
 15919                           
 15920                           ; BSR set to: 15
 15921                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 15922  002288  0E00               	movlw	0
 15923  00228A  010F               	movlb	15	; () banked
 15924  00228C  6F32               	movwf	50,b	;volatile
 15925                           
 15926                           ; BSR set to: 15
 15927                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 15928  00228E  010F               	movlb	15	; () banked
 15929  002290  8732               	bsf	50,3,b	;volatile
 15930                           
 15931                           ; BSR set to: 15
 15932                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 15933  002292  A01A               	btfss	i1CANsendMessage@identifier+2,0,c
 15934  002294  D002               	goto	i1l380
 15935                           
 15936                           ; BSR set to: 15
 15937                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 15938  002296  010F               	movlb	15	; () banked
 15939  002298  8132               	bsf	50,0,b	;volatile
 15940  00229A                     i1l380:
 15941                           
 15942                           ; BSR set to: 15
 15943                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 15944  00229A  A21A               	btfss	i1CANsendMessage@identifier+2,1,c
 15945  00229C  D002               	goto	i1l381
 15946                           
 15947                           ; BSR set to: 15
 15948                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 15949  00229E  010F               	movlb	15	; () banked
 15950  0022A0  8332               	bsf	50,1,b	;volatile
 15951  0022A2                     i1l381:
 15952                           
 15953                           ; BSR set to: 15
 15954                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 15955  0022A2  A41A               	btfss	i1CANsendMessage@identifier+2,2,c
 15956  0022A4  D002               	goto	i1l382
 15957                           
 15958                           ; BSR set to: 15
 15959                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 15960  0022A6  010F               	movlb	15	; () banked
 15961  0022A8  8B32               	bsf	50,5,b	;volatile
 15962  0022AA                     i1l382:
 15963                           
 15964                           ; BSR set to: 15
 15965                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 15966  0022AA  A61A               	btfss	i1CANsendMessage@identifier+2,3,c
 15967  0022AC  D002               	goto	i1l383
 15968                           
 15969                           ; BSR set to: 15
 15970                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 15971  0022AE  010F               	movlb	15	; () banked
 15972  0022B0  8D32               	bsf	50,6,b	;volatile
 15973  0022B2                     i1l383:
 15974                           
 15975                           ; BSR set to: 15
 15976                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 15977  0022B2  A81A               	btfss	i1CANsendMessage@identifier+2,4,c
 15978  0022B4  D002               	goto	i1l8428
 15979                           
 15980                           ; BSR set to: 15
 15981                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 15982  0022B6  010F               	movlb	15	; () banked
 15983  0022B8  8F32               	bsf	50,7,b	;volatile
 15984  0022BA                     i1l8428:
 15985                           
 15986                           ; BSR set to: 15
 15987                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 15988  0022BA  C018  F020         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 15989  0022BE  C019  F021         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 15990  0022C2  C01A  F022         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 15991  0022C6  C01B  F023         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 15992  0022CA  0E16               	movlw	22
 15993  0022CC  D005               	goto	i1u1141_20
 15994  0022CE                     i1u1141_25:
 15995  0022CE  90D8               	bcf	status,0,c
 15996  0022D0  3223               	rrcf	??i1_CANsendMessage+3,f,c
 15997  0022D2  3222               	rrcf	??i1_CANsendMessage+2,f,c
 15998  0022D4  3221               	rrcf	??i1_CANsendMessage+1,f,c
 15999  0022D6  3220               	rrcf	??i1_CANsendMessage,f,c
 16000  0022D8                     i1u1141_20:
 16001  0022D8  2EE8               	decfsz	wreg,f,c
 16002  0022DA  D7F9               	goto	i1u1141_25
 16003  0022DC  C020  F024         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 16004  0022E0  C021  F025         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 16005  0022E4  C022  F026         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 16006  0022E8  C023  F027         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 16007                           
 16008                           ; BSR set to: 15
 16009                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 16010  0022EC  5024               	movf	i1CANsendMessage@tamp,w,c
 16011  0022EE  6E24               	movwf	i1CANsendMessage@tamp,c
 16012  0022F0  6A25               	clrf	i1CANsendMessage@tamp+1,c
 16013  0022F2  6A26               	clrf	i1CANsendMessage@tamp+2,c
 16014  0022F4  6A27               	clrf	i1CANsendMessage@tamp+3,c
 16015                           
 16016                           ; BSR set to: 15
 16017                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 16018  0022F6  C024  FF31         	movff	i1CANsendMessage@tamp,3889	;volatile
 16019                           
 16020                           ;inc\CANlib.h: 407: }
 16021  0022FA  D04D               	goto	i1l8448
 16022  0022FC                     i1l379:
 16023                           
 16024                           ; BSR set to: 15
 16025                           ;inc\CANlib.h: 409: else
 16026                           ;inc\CANlib.h: 411: {
 16027                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 16028  0022FC  010F               	movlb	15	; () banked
 16029  0022FE  9732               	bcf	50,3,b	;volatile
 16030                           
 16031                           ; BSR set to: 15
 16032                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 16033  002300  C018  F020         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 16034  002304  C019  F021         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 16035  002308  C01A  F022         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 16036  00230C  C01B  F023         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 16037  002310  0E04               	movlw	4
 16038  002312  D005               	goto	i1u1142_20
 16039  002314                     i1u1142_25:
 16040  002314  90D8               	bcf	status,0,c
 16041  002316  3223               	rrcf	??i1_CANsendMessage+3,f,c
 16042  002318  3222               	rrcf	??i1_CANsendMessage+2,f,c
 16043  00231A  3221               	rrcf	??i1_CANsendMessage+1,f,c
 16044  00231C  3220               	rrcf	??i1_CANsendMessage,f,c
 16045  00231E                     i1u1142_20:
 16046  00231E  2EE8               	decfsz	wreg,f,c
 16047  002320  D7F9               	goto	i1u1142_25
 16048  002322  C020  F024         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 16049  002326  C021  F025         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 16050  00232A  C022  F026         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 16051  00232E  C023  F027         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 16052                           
 16053                           ; BSR set to: 15
 16054                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 16055  002332  5024               	movf	i1CANsendMessage@tamp,w,c
 16056  002334  6E24               	movwf	i1CANsendMessage@tamp,c
 16057  002336  6A25               	clrf	i1CANsendMessage@tamp+1,c
 16058  002338  6A26               	clrf	i1CANsendMessage@tamp+2,c
 16059  00233A  6A27               	clrf	i1CANsendMessage@tamp+3,c
 16060                           
 16061                           ; BSR set to: 15
 16062                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 16063  00233C  C024  FF31         	movff	i1CANsendMessage@tamp,3889	;volatile
 16064                           
 16065                           ; BSR set to: 15
 16066                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 16067  002340  0E07               	movlw	7
 16068  002342  1418               	andwf	i1CANsendMessage@identifier,w,c
 16069  002344  6E24               	movwf	i1CANsendMessage@tamp,c
 16070  002346  0E00               	movlw	0
 16071  002348  1419               	andwf	i1CANsendMessage@identifier+1,w,c
 16072  00234A  6E25               	movwf	i1CANsendMessage@tamp+1,c
 16073  00234C  0E00               	movlw	0
 16074  00234E  141A               	andwf	i1CANsendMessage@identifier+2,w,c
 16075  002350  6E26               	movwf	i1CANsendMessage@tamp+2,c
 16076  002352  0E00               	movlw	0
 16077  002354  141B               	andwf	i1CANsendMessage@identifier+3,w,c
 16078  002356  6E27               	movwf	i1CANsendMessage@tamp+3,c
 16079                           
 16080                           ; BSR set to: 15
 16081                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 16082  002358  C024  F020         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 16083  00235C  C025  F021         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 16084  002360  C026  F022         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 16085  002364  C027  F023         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 16086  002368  0E05               	movlw	5
 16087  00236A                     i1u1143_25:
 16088  00236A  90D8               	bcf	status,0,c
 16089  00236C  3620               	rlcf	??i1_CANsendMessage,f,c
 16090  00236E  3621               	rlcf	??i1_CANsendMessage+1,f,c
 16091  002370  3622               	rlcf	??i1_CANsendMessage+2,f,c
 16092  002372  3623               	rlcf	??i1_CANsendMessage+3,f,c
 16093  002374  2EE8               	decfsz	wreg,f,c
 16094  002376  D7F9               	goto	i1u1143_25
 16095  002378  C020  F024         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 16096  00237C  C021  F025         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 16097  002380  C022  F026         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 16098  002384  C023  F027         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 16099                           
 16100                           ; BSR set to: 15
 16101                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 16102  002388  010F               	movlb	15	; () banked
 16103  00238A  5132               	movf	50,w,b	;volatile
 16104  00238C  0B1F               	andlw	31
 16105  00238E  010F               	movlb	15	; () banked
 16106  002390  6F32               	movwf	50,b	;volatile
 16107                           
 16108                           ; BSR set to: 15
 16109                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 16110  002392  C024  FF32         	movff	i1CANsendMessage@tamp,3890	;volatile
 16111  002396                     i1l8448:
 16112                           
 16113                           ; BSR set to: 15
 16114                           ;inc\CANlib.h: 422: }
 16115                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 16116  002396  A01F               	btfss	i1CANsendMessage@flags,0,c
 16117  002398  D003               	goto	i1l386
 16118                           
 16119                           ; BSR set to: 15
 16120                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 16121  00239A  010F               	movlb	15	; () banked
 16122  00239C  8130               	bsf	48,0,b	;volatile
 16123  00239E  D002               	goto	i1l387
 16124  0023A0                     i1l386:
 16125                           
 16126                           ; BSR set to: 15
 16127                           ;inc\CANlib.h: 426: else
 16128                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 16129  0023A0  010F               	movlb	15	; () banked
 16130  0023A2  9130               	bcf	48,0,b	;volatile
 16131  0023A4                     i1l387:
 16132                           
 16133                           ; BSR set to: 15
 16134                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 16135  0023A4  A21F               	btfss	i1CANsendMessage@flags,1,c
 16136  0023A6  D003               	goto	i1l388
 16137                           
 16138                           ; BSR set to: 15
 16139                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 16140  0023A8  010F               	movlb	15	; () banked
 16141  0023AA  8330               	bsf	48,1,b	;volatile
 16142  0023AC  D002               	goto	i1l8454
 16143  0023AE                     i1l388:
 16144                           
 16145                           ; BSR set to: 15
 16146                           ;inc\CANlib.h: 430: else
 16147                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 16148  0023AE  010F               	movlb	15	; () banked
 16149  0023B0  9330               	bcf	48,1,b	;volatile
 16150  0023B2                     i1l8454:
 16151                           
 16152                           ; BSR set to: 15
 16153                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 16154  0023B2  C01C  FFD9         	movff	i1CANsendMessage@data,fsr2l
 16155  0023B6  C01D  FFDA         	movff	i1CANsendMessage@data+1,fsr2h
 16156  0023BA  50DF               	movf	indf2,w,c
 16157  0023BC  010F               	movlb	15	; () banked
 16158  0023BE  6F36               	movwf	54,b	;volatile
 16159                           
 16160                           ; BSR set to: 15
 16161                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 16162  0023C0  EE20 F001          	lfsr	2,1
 16163  0023C4  501C               	movf	i1CANsendMessage@data,w,c
 16164  0023C6  26D9               	addwf	fsr2l,f,c
 16165  0023C8  501D               	movf	i1CANsendMessage@data+1,w,c
 16166  0023CA  22DA               	addwfc	fsr2h,f,c
 16167  0023CC  50DF               	movf	indf2,w,c
 16168  0023CE  010F               	movlb	15	; () banked
 16169  0023D0  6F37               	movwf	55,b	;volatile
 16170                           
 16171                           ; BSR set to: 15
 16172                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 16173  0023D2  EE20 F002          	lfsr	2,2
 16174  0023D6  501C               	movf	i1CANsendMessage@data,w,c
 16175  0023D8  26D9               	addwf	fsr2l,f,c
 16176  0023DA  501D               	movf	i1CANsendMessage@data+1,w,c
 16177  0023DC  22DA               	addwfc	fsr2h,f,c
 16178  0023DE  50DF               	movf	indf2,w,c
 16179  0023E0  010F               	movlb	15	; () banked
 16180  0023E2  6F38               	movwf	56,b	;volatile
 16181                           
 16182                           ; BSR set to: 15
 16183                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 16184  0023E4  EE20 F003          	lfsr	2,3
 16185  0023E8  501C               	movf	i1CANsendMessage@data,w,c
 16186  0023EA  26D9               	addwf	fsr2l,f,c
 16187  0023EC  501D               	movf	i1CANsendMessage@data+1,w,c
 16188  0023EE  22DA               	addwfc	fsr2h,f,c
 16189  0023F0  50DF               	movf	indf2,w,c
 16190  0023F2  010F               	movlb	15	; () banked
 16191  0023F4  6F39               	movwf	57,b	;volatile
 16192                           
 16193                           ; BSR set to: 15
 16194                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 16195  0023F6  EE20 F004          	lfsr	2,4
 16196  0023FA  501C               	movf	i1CANsendMessage@data,w,c
 16197  0023FC  26D9               	addwf	fsr2l,f,c
 16198  0023FE  501D               	movf	i1CANsendMessage@data+1,w,c
 16199  002400  22DA               	addwfc	fsr2h,f,c
 16200  002402  50DF               	movf	indf2,w,c
 16201  002404  010F               	movlb	15	; () banked
 16202  002406  6F3A               	movwf	58,b	;volatile
 16203                           
 16204                           ; BSR set to: 15
 16205                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 16206  002408  EE20 F005          	lfsr	2,5
 16207  00240C  501C               	movf	i1CANsendMessage@data,w,c
 16208  00240E  26D9               	addwf	fsr2l,f,c
 16209  002410  501D               	movf	i1CANsendMessage@data+1,w,c
 16210  002412  22DA               	addwfc	fsr2h,f,c
 16211  002414  50DF               	movf	indf2,w,c
 16212  002416  010F               	movlb	15	; () banked
 16213  002418  6F3B               	movwf	59,b	;volatile
 16214                           
 16215                           ; BSR set to: 15
 16216                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 16217  00241A  EE20 F006          	lfsr	2,6
 16218  00241E  501C               	movf	i1CANsendMessage@data,w,c
 16219  002420  26D9               	addwf	fsr2l,f,c
 16220  002422  501D               	movf	i1CANsendMessage@data+1,w,c
 16221  002424  22DA               	addwfc	fsr2h,f,c
 16222  002426  50DF               	movf	indf2,w,c
 16223  002428  010F               	movlb	15	; () banked
 16224  00242A  6F3C               	movwf	60,b	;volatile
 16225                           
 16226                           ; BSR set to: 15
 16227                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 16228  00242C  EE20 F007          	lfsr	2,7
 16229  002430  501C               	movf	i1CANsendMessage@data,w,c
 16230  002432  26D9               	addwf	fsr2l,f,c
 16231  002434  501D               	movf	i1CANsendMessage@data+1,w,c
 16232  002436  22DA               	addwfc	fsr2h,f,c
 16233  002438  50DF               	movf	indf2,w,c
 16234  00243A  010F               	movlb	15	; () banked
 16235  00243C  6F3D               	movwf	61,b	;volatile
 16236                           
 16237                           ; BSR set to: 15
 16238                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 16239  00243E  010F               	movlb	15	; () banked
 16240  002440  8730               	bsf	48,3,b	;volatile
 16241                           
 16242                           ; BSR set to: 15
 16243                           ;inc\CANlib.h: 444: return;
 16244  002442  0012               	return	
 16245  002444                     i1l376:
 16246                           
 16247                           ; BSR set to: 15
 16248                           ;inc\CANlib.h: 445: }
 16249                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 16250  002444  010F               	movlb	15	; () banked
 16251  002446  B720               	btfsc	32,3,b	;volatile
 16252  002448  0012               	return	
 16253                           
 16254                           ; BSR set to: 15
 16255                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 16256  00244A  C01E  FF25         	movff	i1CANsendMessage@dataLength,3877	;volatile
 16257                           
 16258                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 16259  00244E  AC1F               	btfss	i1CANsendMessage@flags,6,c
 16260  002450  D003               	goto	i1l391
 16261                           
 16262                           ; BSR set to: 15
 16263                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 16264  002452  010F               	movlb	15	; () banked
 16265  002454  8D25               	bsf	37,6,b	;volatile
 16266  002456  D002               	goto	i1l392
 16267  002458                     i1l391:
 16268                           
 16269                           ; BSR set to: 15
 16270                           ;inc\CANlib.h: 454: else
 16271                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 16272  002458  010F               	movlb	15	; () banked
 16273  00245A  9D25               	bcf	37,6,b	;volatile
 16274  00245C                     i1l392:
 16275                           
 16276                           ; BSR set to: 15
 16277                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 16278  00245C  A61F               	btfss	i1CANsendMessage@flags,3,c
 16279  00245E  D066               	goto	i1l393
 16280                           
 16281                           ; BSR set to: 15
 16282                           ;inc\CANlib.h: 458: {
 16283                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 16284  002460  5018               	movf	i1CANsendMessage@identifier,w,c
 16285  002462  6E24               	movwf	i1CANsendMessage@tamp,c
 16286  002464  6A25               	clrf	i1CANsendMessage@tamp+1,c
 16287  002466  6A26               	clrf	i1CANsendMessage@tamp+2,c
 16288  002468  6A27               	clrf	i1CANsendMessage@tamp+3,c
 16289                           
 16290                           ; BSR set to: 15
 16291                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 16292  00246A  C024  FF24         	movff	i1CANsendMessage@tamp,3876	;volatile
 16293                           
 16294                           ; BSR set to: 15
 16295                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 16296  00246E  0E00               	movlw	0
 16297  002470  1418               	andwf	i1CANsendMessage@identifier,w,c
 16298  002472  6E24               	movwf	i1CANsendMessage@tamp,c
 16299  002474  0EFF               	movlw	255
 16300  002476  1419               	andwf	i1CANsendMessage@identifier+1,w,c
 16301  002478  6E25               	movwf	i1CANsendMessage@tamp+1,c
 16302  00247A  0E00               	movlw	0
 16303  00247C  141A               	andwf	i1CANsendMessage@identifier+2,w,c
 16304  00247E  6E26               	movwf	i1CANsendMessage@tamp+2,c
 16305  002480  0E00               	movlw	0
 16306  002482  141B               	andwf	i1CANsendMessage@identifier+3,w,c
 16307  002484  6E27               	movwf	i1CANsendMessage@tamp+3,c
 16308                           
 16309                           ; BSR set to: 15
 16310                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 16311  002486  C024  F020         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 16312  00248A  C025  F021         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 16313  00248E  C026  F022         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 16314  002492  C027  F023         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 16315  002496  C021  F020         	movff	??i1_CANsendMessage+1,??i1_CANsendMessage
 16316  00249A  C022  F021         	movff	??i1_CANsendMessage+2,??i1_CANsendMessage+1
 16317  00249E  C023  F022         	movff	??i1_CANsendMessage+3,??i1_CANsendMessage+2
 16318  0024A2  6A23               	clrf	??i1_CANsendMessage+3,c
 16319  0024A4  C020  F024         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 16320  0024A8  C021  F025         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 16321  0024AC  C022  F026         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 16322  0024B0  C023  F027         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 16323                           
 16324                           ; BSR set to: 15
 16325                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 16326  0024B4  C024  FF23         	movff	i1CANsendMessage@tamp,3875	;volatile
 16327                           
 16328                           ; BSR set to: 15
 16329                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 16330  0024B8  0E00               	movlw	0
 16331  0024BA  010F               	movlb	15	; () banked
 16332  0024BC  6F22               	movwf	34,b	;volatile
 16333                           
 16334                           ; BSR set to: 15
 16335                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 16336  0024BE  010F               	movlb	15	; () banked
 16337  0024C0  8722               	bsf	34,3,b	;volatile
 16338                           
 16339                           ; BSR set to: 15
 16340                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 16341  0024C2  A01A               	btfss	i1CANsendMessage@identifier+2,0,c
 16342  0024C4  D002               	goto	i1l394
 16343                           
 16344                           ; BSR set to: 15
 16345                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 16346  0024C6  010F               	movlb	15	; () banked
 16347  0024C8  8122               	bsf	34,0,b	;volatile
 16348  0024CA                     i1l394:
 16349                           
 16350                           ; BSR set to: 15
 16351                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 16352  0024CA  A21A               	btfss	i1CANsendMessage@identifier+2,1,c
 16353  0024CC  D002               	goto	i1l395
 16354                           
 16355                           ; BSR set to: 15
 16356                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 16357  0024CE  010F               	movlb	15	; () banked
 16358  0024D0  8322               	bsf	34,1,b	;volatile
 16359  0024D2                     i1l395:
 16360                           
 16361                           ; BSR set to: 15
 16362                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 16363  0024D2  A41A               	btfss	i1CANsendMessage@identifier+2,2,c
 16364  0024D4  D002               	goto	i1l396
 16365                           
 16366                           ; BSR set to: 15
 16367                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 16368  0024D6  010F               	movlb	15	; () banked
 16369  0024D8  8B22               	bsf	34,5,b	;volatile
 16370  0024DA                     i1l396:
 16371                           
 16372                           ; BSR set to: 15
 16373                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 16374  0024DA  A61A               	btfss	i1CANsendMessage@identifier+2,3,c
 16375  0024DC  D002               	goto	i1l397
 16376                           
 16377                           ; BSR set to: 15
 16378                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 16379  0024DE  010F               	movlb	15	; () banked
 16380  0024E0  8D22               	bsf	34,6,b	;volatile
 16381  0024E2                     i1l397:
 16382                           
 16383                           ; BSR set to: 15
 16384                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 16385  0024E2  A81A               	btfss	i1CANsendMessage@identifier+2,4,c
 16386  0024E4  D002               	goto	i1l8504
 16387                           
 16388                           ; BSR set to: 15
 16389                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 16390  0024E6  010F               	movlb	15	; () banked
 16391  0024E8  8F22               	bsf	34,7,b	;volatile
 16392  0024EA                     i1l8504:
 16393                           
 16394                           ; BSR set to: 15
 16395                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 16396  0024EA  C018  F020         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 16397  0024EE  C019  F021         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 16398  0024F2  C01A  F022         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 16399  0024F6  C01B  F023         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 16400  0024FA  0E16               	movlw	22
 16401  0024FC  D005               	goto	i1u1154_20
 16402  0024FE                     i1u1154_25:
 16403  0024FE  90D8               	bcf	status,0,c
 16404  002500  3223               	rrcf	??i1_CANsendMessage+3,f,c
 16405  002502  3222               	rrcf	??i1_CANsendMessage+2,f,c
 16406  002504  3221               	rrcf	??i1_CANsendMessage+1,f,c
 16407  002506  3220               	rrcf	??i1_CANsendMessage,f,c
 16408  002508                     i1u1154_20:
 16409  002508  2EE8               	decfsz	wreg,f,c
 16410  00250A  D7F9               	goto	i1u1154_25
 16411  00250C  C020  F024         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 16412  002510  C021  F025         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 16413  002514  C022  F026         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 16414  002518  C023  F027         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 16415                           
 16416                           ; BSR set to: 15
 16417                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 16418  00251C  5024               	movf	i1CANsendMessage@tamp,w,c
 16419  00251E  6E24               	movwf	i1CANsendMessage@tamp,c
 16420  002520  6A25               	clrf	i1CANsendMessage@tamp+1,c
 16421  002522  6A26               	clrf	i1CANsendMessage@tamp+2,c
 16422  002524  6A27               	clrf	i1CANsendMessage@tamp+3,c
 16423                           
 16424                           ; BSR set to: 15
 16425                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 16426  002526  C024  FF21         	movff	i1CANsendMessage@tamp,3873	;volatile
 16427                           
 16428                           ;inc\CANlib.h: 483: }
 16429  00252A  D04D               	goto	i1l8524
 16430  00252C                     i1l393:
 16431                           
 16432                           ; BSR set to: 15
 16433                           ;inc\CANlib.h: 485: else
 16434                           ;inc\CANlib.h: 487: {
 16435                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 16436  00252C  010F               	movlb	15	; () banked
 16437  00252E  9722               	bcf	34,3,b	;volatile
 16438                           
 16439                           ; BSR set to: 15
 16440                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 16441  002530  C018  F020         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 16442  002534  C019  F021         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 16443  002538  C01A  F022         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 16444  00253C  C01B  F023         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 16445  002540  0E04               	movlw	4
 16446  002542  D005               	goto	i1u1155_20
 16447  002544                     i1u1155_25:
 16448  002544  90D8               	bcf	status,0,c
 16449  002546  3223               	rrcf	??i1_CANsendMessage+3,f,c
 16450  002548  3222               	rrcf	??i1_CANsendMessage+2,f,c
 16451  00254A  3221               	rrcf	??i1_CANsendMessage+1,f,c
 16452  00254C  3220               	rrcf	??i1_CANsendMessage,f,c
 16453  00254E                     i1u1155_20:
 16454  00254E  2EE8               	decfsz	wreg,f,c
 16455  002550  D7F9               	goto	i1u1155_25
 16456  002552  C020  F024         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 16457  002556  C021  F025         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 16458  00255A  C022  F026         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 16459  00255E  C023  F027         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 16460                           
 16461                           ; BSR set to: 15
 16462                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 16463  002562  5024               	movf	i1CANsendMessage@tamp,w,c
 16464  002564  6E24               	movwf	i1CANsendMessage@tamp,c
 16465  002566  6A25               	clrf	i1CANsendMessage@tamp+1,c
 16466  002568  6A26               	clrf	i1CANsendMessage@tamp+2,c
 16467  00256A  6A27               	clrf	i1CANsendMessage@tamp+3,c
 16468                           
 16469                           ; BSR set to: 15
 16470                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 16471  00256C  C024  FF21         	movff	i1CANsendMessage@tamp,3873	;volatile
 16472                           
 16473                           ; BSR set to: 15
 16474                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 16475  002570  0E07               	movlw	7
 16476  002572  1418               	andwf	i1CANsendMessage@identifier,w,c
 16477  002574  6E24               	movwf	i1CANsendMessage@tamp,c
 16478  002576  0E00               	movlw	0
 16479  002578  1419               	andwf	i1CANsendMessage@identifier+1,w,c
 16480  00257A  6E25               	movwf	i1CANsendMessage@tamp+1,c
 16481  00257C  0E00               	movlw	0
 16482  00257E  141A               	andwf	i1CANsendMessage@identifier+2,w,c
 16483  002580  6E26               	movwf	i1CANsendMessage@tamp+2,c
 16484  002582  0E00               	movlw	0
 16485  002584  141B               	andwf	i1CANsendMessage@identifier+3,w,c
 16486  002586  6E27               	movwf	i1CANsendMessage@tamp+3,c
 16487                           
 16488                           ; BSR set to: 15
 16489                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 16490  002588  C024  F020         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 16491  00258C  C025  F021         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 16492  002590  C026  F022         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 16493  002594  C027  F023         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 16494  002598  0E05               	movlw	5
 16495  00259A                     i1u1156_25:
 16496  00259A  90D8               	bcf	status,0,c
 16497  00259C  3620               	rlcf	??i1_CANsendMessage,f,c
 16498  00259E  3621               	rlcf	??i1_CANsendMessage+1,f,c
 16499  0025A0  3622               	rlcf	??i1_CANsendMessage+2,f,c
 16500  0025A2  3623               	rlcf	??i1_CANsendMessage+3,f,c
 16501  0025A4  2EE8               	decfsz	wreg,f,c
 16502  0025A6  D7F9               	goto	i1u1156_25
 16503  0025A8  C020  F024         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 16504  0025AC  C021  F025         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 16505  0025B0  C022  F026         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 16506  0025B4  C023  F027         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 16507                           
 16508                           ; BSR set to: 15
 16509                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 16510  0025B8  010F               	movlb	15	; () banked
 16511  0025BA  5122               	movf	34,w,b	;volatile
 16512  0025BC  0B1F               	andlw	31
 16513  0025BE  010F               	movlb	15	; () banked
 16514  0025C0  6F22               	movwf	34,b	;volatile
 16515                           
 16516                           ; BSR set to: 15
 16517                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 16518  0025C2  C024  FF22         	movff	i1CANsendMessage@tamp,3874	;volatile
 16519  0025C6                     i1l8524:
 16520                           
 16521                           ; BSR set to: 15
 16522                           ;inc\CANlib.h: 498: }
 16523                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 16524  0025C6  A01F               	btfss	i1CANsendMessage@flags,0,c
 16525  0025C8  D003               	goto	i1l400
 16526                           
 16527                           ; BSR set to: 15
 16528                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 16529  0025CA  010F               	movlb	15	; () banked
 16530  0025CC  8120               	bsf	32,0,b	;volatile
 16531  0025CE  D002               	goto	i1l401
 16532  0025D0                     i1l400:
 16533                           
 16534                           ; BSR set to: 15
 16535                           ;inc\CANlib.h: 502: else
 16536                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 16537  0025D0  010F               	movlb	15	; () banked
 16538  0025D2  9120               	bcf	32,0,b	;volatile
 16539  0025D4                     i1l401:
 16540                           
 16541                           ; BSR set to: 15
 16542                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 16543  0025D4  A21F               	btfss	i1CANsendMessage@flags,1,c
 16544  0025D6  D003               	goto	i1l402
 16545                           
 16546                           ; BSR set to: 15
 16547                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 16548  0025D8  010F               	movlb	15	; () banked
 16549  0025DA  8320               	bsf	32,1,b	;volatile
 16550  0025DC  D002               	goto	i1l8530
 16551  0025DE                     i1l402:
 16552                           
 16553                           ; BSR set to: 15
 16554                           ;inc\CANlib.h: 506: else
 16555                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 16556  0025DE  010F               	movlb	15	; () banked
 16557  0025E0  9320               	bcf	32,1,b	;volatile
 16558  0025E2                     i1l8530:
 16559                           
 16560                           ; BSR set to: 15
 16561                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 16562  0025E2  C01C  FFD9         	movff	i1CANsendMessage@data,fsr2l
 16563  0025E6  C01D  FFDA         	movff	i1CANsendMessage@data+1,fsr2h
 16564  0025EA  50DF               	movf	indf2,w,c
 16565  0025EC  010F               	movlb	15	; () banked
 16566  0025EE  6F26               	movwf	38,b	;volatile
 16567                           
 16568                           ; BSR set to: 15
 16569                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 16570  0025F0  EE20 F001          	lfsr	2,1
 16571  0025F4  501C               	movf	i1CANsendMessage@data,w,c
 16572  0025F6  26D9               	addwf	fsr2l,f,c
 16573  0025F8  501D               	movf	i1CANsendMessage@data+1,w,c
 16574  0025FA  22DA               	addwfc	fsr2h,f,c
 16575  0025FC  50DF               	movf	indf2,w,c
 16576  0025FE  010F               	movlb	15	; () banked
 16577  002600  6F27               	movwf	39,b	;volatile
 16578                           
 16579                           ; BSR set to: 15
 16580                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 16581  002602  EE20 F002          	lfsr	2,2
 16582  002606  501C               	movf	i1CANsendMessage@data,w,c
 16583  002608  26D9               	addwf	fsr2l,f,c
 16584  00260A  501D               	movf	i1CANsendMessage@data+1,w,c
 16585  00260C  22DA               	addwfc	fsr2h,f,c
 16586  00260E  50DF               	movf	indf2,w,c
 16587  002610  010F               	movlb	15	; () banked
 16588  002612  6F28               	movwf	40,b	;volatile
 16589                           
 16590                           ; BSR set to: 15
 16591                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 16592  002614  EE20 F003          	lfsr	2,3
 16593  002618  501C               	movf	i1CANsendMessage@data,w,c
 16594  00261A  26D9               	addwf	fsr2l,f,c
 16595  00261C  501D               	movf	i1CANsendMessage@data+1,w,c
 16596  00261E  22DA               	addwfc	fsr2h,f,c
 16597  002620  50DF               	movf	indf2,w,c
 16598  002622  010F               	movlb	15	; () banked
 16599  002624  6F29               	movwf	41,b	;volatile
 16600                           
 16601                           ; BSR set to: 15
 16602                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 16603  002626  EE20 F004          	lfsr	2,4
 16604  00262A  501C               	movf	i1CANsendMessage@data,w,c
 16605  00262C  26D9               	addwf	fsr2l,f,c
 16606  00262E  501D               	movf	i1CANsendMessage@data+1,w,c
 16607  002630  22DA               	addwfc	fsr2h,f,c
 16608  002632  50DF               	movf	indf2,w,c
 16609  002634  010F               	movlb	15	; () banked
 16610  002636  6F2A               	movwf	42,b	;volatile
 16611                           
 16612                           ; BSR set to: 15
 16613                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 16614  002638  EE20 F005          	lfsr	2,5
 16615  00263C  501C               	movf	i1CANsendMessage@data,w,c
 16616  00263E  26D9               	addwf	fsr2l,f,c
 16617  002640  501D               	movf	i1CANsendMessage@data+1,w,c
 16618  002642  22DA               	addwfc	fsr2h,f,c
 16619  002644  50DF               	movf	indf2,w,c
 16620  002646  010F               	movlb	15	; () banked
 16621  002648  6F2B               	movwf	43,b	;volatile
 16622                           
 16623                           ; BSR set to: 15
 16624                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 16625  00264A  EE20 F006          	lfsr	2,6
 16626  00264E  501C               	movf	i1CANsendMessage@data,w,c
 16627  002650  26D9               	addwf	fsr2l,f,c
 16628  002652  501D               	movf	i1CANsendMessage@data+1,w,c
 16629  002654  22DA               	addwfc	fsr2h,f,c
 16630  002656  50DF               	movf	indf2,w,c
 16631  002658  010F               	movlb	15	; () banked
 16632  00265A  6F2C               	movwf	44,b	;volatile
 16633                           
 16634                           ; BSR set to: 15
 16635                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 16636  00265C  EE20 F007          	lfsr	2,7
 16637  002660  501C               	movf	i1CANsendMessage@data,w,c
 16638  002662  26D9               	addwf	fsr2l,f,c
 16639  002664  501D               	movf	i1CANsendMessage@data+1,w,c
 16640  002666  22DA               	addwfc	fsr2h,f,c
 16641  002668  50DF               	movf	indf2,w,c
 16642  00266A  010F               	movlb	15	; () banked
 16643  00266C  6F2D               	movwf	45,b	;volatile
 16644                           
 16645                           ; BSR set to: 15
 16646                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 16647  00266E  010F               	movlb	15	; () banked
 16648  002670  8720               	bsf	32,3,b	;volatile
 16649                           
 16650                           ; BSR set to: 15
 16651                           ;inc\CANlib.h: 520: return;
 16652  002672  0012               	return	
 16653  002674                     __end_ofi1_CANsendMessage:
 16654                           	opt stack 0
 16655                           pclatu	equ	0xFFB
 16656                           pclath	equ	0xFFA
 16657                           tblptru	equ	0xFF8
 16658                           tblptrh	equ	0xFF7
 16659                           tblptrl	equ	0xFF6
 16660                           tablat	equ	0xFF5
 16661                           prodh	equ	0xFF4
 16662                           prodl	equ	0xFF3
 16663                           intcon	equ	0xFF2
 16664                           intcon2	equ	0xFF1
 16665                           postinc0	equ	0xFEE
 16666                           fsr0h	equ	0xFEA
 16667                           fsr0l	equ	0xFE9
 16668                           wreg	equ	0xFE8
 16669                           indf1	equ	0xFE7
 16670                           postdec1	equ	0xFE5
 16671                           fsr1h	equ	0xFE2
 16672                           fsr1l	equ	0xFE1
 16673                           bsr	equ	0xFE0
 16674                           indf2	equ	0xFDF
 16675                           postinc2	equ	0xFDE
 16676                           postdec2	equ	0xFDD
 16677                           plusw2	equ	0xFDB
 16678                           fsr2h	equ	0xFDA
 16679                           fsr2l	equ	0xFD9
 16680                           status	equ	0xFD8
 16681                           
 16682 ;; *************** function _CANreceiveMessage *****************
 16683 ;; Defined at:
 16684 ;;		line 528 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 16685 ;; Parameters:    Size  Location     Type
 16686 ;;  msg             2   23[COMRAM] PTR struct .
 16687 ;;		 -> msg(15), 
 16688 ;; Auto vars:     Size  Location     Type
 16689 ;;  tamp            1   34[COMRAM] unsigned char 
 16690 ;;  error           1   33[COMRAM] unsigned char 
 16691 ;; Return value:  Size  Location     Type
 16692 ;;                  1    wreg      unsigned char 
 16693 ;; Registers used:
 16694 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16695 ;; Tracked objects:
 16696 ;;		On entry : 0/0
 16697 ;;		On exit  : 0/0
 16698 ;;		Unchanged: 0/0
 16699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16700 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16701 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16702 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16703 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16704 ;;Total ram usage:       12 bytes
 16705 ;; Hardware stack levels used:    1
 16706 ;; Hardware stack levels required when called:    2
 16707 ;; This function calls:
 16708 ;;		Nothing
 16709 ;; This function is called by:
 16710 ;;		_ISR_Bassa
 16711 ;; This function uses a non-reentrant model
 16712 ;;
 16713                           
 16714                           	psect	text38
 16715  002BFE                     __ptext38:
 16716                           	opt stack 0
 16717  002BFE                     _CANreceiveMessage:
 16718                           	opt stack 21
 16719                           
 16720                           ;inc\CANlib.h: 530: BYTE tamp;
 16721                           ;inc\CANlib.h: 531: BYTE error = 0;
 16722                           
 16723                           ; BSR set to: 15
 16724                           ;incstack = 0
 16725  002BFE  0E00               	movlw	0
 16726  002C00  6E22               	movwf	CANreceiveMessage@error,c
 16727                           
 16728                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 16729  002C02  BE74               	btfsc	3956,7,c	;volatile
 16730                           
 16731                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 16732  002C04  8022               	bsf	CANreceiveMessage@error,0,c
 16733                           
 16734                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 16735  002C06  BC74               	btfsc	3956,6,c	;volatile
 16736                           
 16737                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 16738  002C08  8222               	bsf	CANreceiveMessage@error,1,c
 16739                           
 16740                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 16741  002C0A  010F               	movlb	15	; () banked
 16742  002C0C  AF50               	btfss	80,7,b	;volatile
 16743  002C0E  D143               	goto	i1l408
 16744                           
 16745                           ; BSR set to: 15
 16746                           ;inc\CANlib.h: 541: {
 16747                           ;inc\CANlib.h: 542: msg->identifier = 0;
 16748  002C10  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16749  002C14  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16750  002C18  6ADE               	clrf	postinc2,c
 16751  002C1A  6ADE               	clrf	postinc2,c
 16752  002C1C  6ADE               	clrf	postinc2,c
 16753  002C1E  6ADD               	clrf	postdec2,c
 16754                           
 16755                           ; BSR set to: 15
 16756                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 16757  002C20  EE20 F004          	lfsr	2,4
 16758  002C24  5018               	movf	CANreceiveMessage@msg,w,c
 16759  002C26  26D9               	addwf	fsr2l,f,c
 16760  002C28  5019               	movf	CANreceiveMessage@msg+1,w,c
 16761  002C2A  22DA               	addwfc	fsr2h,f,c
 16762  002C2C  CF56 FFDF          	movff	3926,indf2	;volatile
 16763                           
 16764                           ; BSR set to: 15
 16765                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 16766  002C30  EE20 F005          	lfsr	2,5
 16767  002C34  5018               	movf	CANreceiveMessage@msg,w,c
 16768  002C36  26D9               	addwf	fsr2l,f,c
 16769  002C38  5019               	movf	CANreceiveMessage@msg+1,w,c
 16770  002C3A  22DA               	addwfc	fsr2h,f,c
 16771  002C3C  CF57 FFDF          	movff	3927,indf2	;volatile
 16772                           
 16773                           ; BSR set to: 15
 16774                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 16775  002C40  EE20 F006          	lfsr	2,6
 16776  002C44  5018               	movf	CANreceiveMessage@msg,w,c
 16777  002C46  26D9               	addwf	fsr2l,f,c
 16778  002C48  5019               	movf	CANreceiveMessage@msg+1,w,c
 16779  002C4A  22DA               	addwfc	fsr2h,f,c
 16780  002C4C  CF58 FFDF          	movff	3928,indf2	;volatile
 16781                           
 16782                           ; BSR set to: 15
 16783                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 16784  002C50  EE20 F007          	lfsr	2,7
 16785  002C54  5018               	movf	CANreceiveMessage@msg,w,c
 16786  002C56  26D9               	addwf	fsr2l,f,c
 16787  002C58  5019               	movf	CANreceiveMessage@msg+1,w,c
 16788  002C5A  22DA               	addwfc	fsr2h,f,c
 16789  002C5C  CF59 FFDF          	movff	3929,indf2	;volatile
 16790                           
 16791                           ; BSR set to: 15
 16792                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 16793  002C60  EE20 F008          	lfsr	2,8
 16794  002C64  5018               	movf	CANreceiveMessage@msg,w,c
 16795  002C66  26D9               	addwf	fsr2l,f,c
 16796  002C68  5019               	movf	CANreceiveMessage@msg+1,w,c
 16797  002C6A  22DA               	addwfc	fsr2h,f,c
 16798  002C6C  CF5A FFDF          	movff	3930,indf2	;volatile
 16799                           
 16800                           ; BSR set to: 15
 16801                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 16802  002C70  EE20 F009          	lfsr	2,9
 16803  002C74  5018               	movf	CANreceiveMessage@msg,w,c
 16804  002C76  26D9               	addwf	fsr2l,f,c
 16805  002C78  5019               	movf	CANreceiveMessage@msg+1,w,c
 16806  002C7A  22DA               	addwfc	fsr2h,f,c
 16807  002C7C  CF5B FFDF          	movff	3931,indf2	;volatile
 16808                           
 16809                           ; BSR set to: 15
 16810                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 16811  002C80  EE20 F00A          	lfsr	2,10
 16812  002C84  5018               	movf	CANreceiveMessage@msg,w,c
 16813  002C86  26D9               	addwf	fsr2l,f,c
 16814  002C88  5019               	movf	CANreceiveMessage@msg+1,w,c
 16815  002C8A  22DA               	addwfc	fsr2h,f,c
 16816  002C8C  CF5C FFDF          	movff	3932,indf2	;volatile
 16817                           
 16818                           ; BSR set to: 15
 16819                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 16820  002C90  EE20 F00B          	lfsr	2,11
 16821  002C94  5018               	movf	CANreceiveMessage@msg,w,c
 16822  002C96  26D9               	addwf	fsr2l,f,c
 16823  002C98  5019               	movf	CANreceiveMessage@msg+1,w,c
 16824  002C9A  22DA               	addwfc	fsr2h,f,c
 16825  002C9C  CF5D FFDF          	movff	3933,indf2	;volatile
 16826                           
 16827                           ; BSR set to: 15
 16828                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 16829  002CA0  EE20 F00E          	lfsr	2,14
 16830  002CA4  5018               	movf	CANreceiveMessage@msg,w,c
 16831  002CA6  26D9               	addwf	fsr2l,f,c
 16832  002CA8  5019               	movf	CANreceiveMessage@msg+1,w,c
 16833  002CAA  22DA               	addwfc	fsr2h,f,c
 16834  002CAC  010F               	movlb	15	; () banked
 16835  002CAE  AD55               	btfss	85,6,b	;volatile
 16836  002CB0  D002               	goto	i1u1065_20
 16837  002CB2  0E01               	movlw	1
 16838  002CB4  D001               	goto	i1u1065_26
 16839  002CB6                     i1u1065_20:
 16840  002CB6  0E00               	movlw	0
 16841  002CB8                     i1u1065_26:
 16842  002CB8  6EDF               	movwf	indf2,c
 16843                           
 16844                           ; BSR set to: 15
 16845                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 16846  002CBA  EE20 F00D          	lfsr	2,13
 16847  002CBE  5018               	movf	CANreceiveMessage@msg,w,c
 16848  002CC0  26D9               	addwf	fsr2l,f,c
 16849  002CC2  5019               	movf	CANreceiveMessage@msg+1,w,c
 16850  002CC4  22DA               	addwfc	fsr2h,f,c
 16851  002CC6  010F               	movlb	15	; () banked
 16852  002CC8  5155               	movf	85,w,b	;volatile
 16853  002CCA  0B0F               	andlw	15
 16854  002CCC  6EDF               	movwf	indf2,c
 16855                           
 16856                           ; BSR set to: 15
 16857                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 16858  002CCE  EE20 F00C          	lfsr	2,12
 16859  002CD2  5018               	movf	CANreceiveMessage@msg,w,c
 16860  002CD4  26D9               	addwf	fsr2l,f,c
 16861  002CD6  5019               	movf	CANreceiveMessage@msg+1,w,c
 16862  002CD8  22DA               	addwfc	fsr2h,f,c
 16863  002CDA  010F               	movlb	15	; () banked
 16864  002CDC  A752               	btfss	82,3,b	;volatile
 16865  002CDE  D002               	goto	i1u1066_20
 16866  002CE0  0E01               	movlw	1
 16867  002CE2  D001               	goto	i1u1066_26
 16868  002CE4                     i1u1066_20:
 16869  002CE4  0E00               	movlw	0
 16870  002CE6                     i1u1066_26:
 16871  002CE6  6EDF               	movwf	indf2,c
 16872                           
 16873                           ; BSR set to: 15
 16874                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 16875  002CE8  010F               	movlb	15	; () banked
 16876  002CEA  B752               	btfsc	82,3,b	;volatile
 16877  002CEC  D044               	goto	i1l8010
 16878                           
 16879                           ; BSR set to: 15
 16880                           ;inc\CANlib.h: 559: {
 16881                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 16882  002CEE  CF51 F01A          	movff	3921,??_CANreceiveMessage	;volatile
 16883  002CF2  6A1B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16884  002CF4  6A1C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 16885  002CF6  6A1D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 16886  002CF8  0E03               	movlw	3
 16887  002CFA                     i1u1068_25:
 16888  002CFA  90D8               	bcf	status,0,c
 16889  002CFC  361A               	rlcf	??_CANreceiveMessage,f,c
 16890  002CFE  361B               	rlcf	??_CANreceiveMessage+1,f,c
 16891  002D00  361C               	rlcf	??_CANreceiveMessage+2,f,c
 16892  002D02  361D               	rlcf	??_CANreceiveMessage+3,f,c
 16893  002D04  2EE8               	decfsz	wreg,f,c
 16894  002D06  D7F9               	goto	i1u1068_25
 16895  002D08  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16896  002D0C  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16897  002D10  C01A  FFDE         	movff	??_CANreceiveMessage,postinc2
 16898  002D14  C01B  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 16899  002D18  C01C  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 16900  002D1C  C01D  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 16901                           
 16902                           ; BSR set to: 15
 16903                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 16904  002D20  010F               	movlb	15	; () banked
 16905  002D22  3952               	swapf	82,w,b	;volatile
 16906  002D24  42E8               	rrncf	wreg,f,c
 16907  002D26  0B07               	andlw	7
 16908  002D28  0B07               	andlw	7
 16909  002D2A  6E23               	movwf	CANreceiveMessage@tamp,c
 16910                           
 16911                           ; BSR set to: 15
 16912                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 16913  002D2C  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16914  002D30  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16915  002D34  CFDE F01A          	movff	postinc2,??_CANreceiveMessage
 16916  002D38  CFDE F01B          	movff	postinc2,??_CANreceiveMessage+1
 16917  002D3C  CFDE F01C          	movff	postinc2,??_CANreceiveMessage+2
 16918  002D40  CFDE F01D          	movff	postinc2,??_CANreceiveMessage+3
 16919  002D44  5023               	movf	CANreceiveMessage@tamp,w,c
 16920  002D46  241A               	addwf	??_CANreceiveMessage,w,c
 16921  002D48  6E1E               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 16922  002D4A  0E00               	movlw	0
 16923  002D4C  201B               	addwfc	??_CANreceiveMessage+1,w,c
 16924  002D4E  6E1F               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 16925  002D50  0E00               	movlw	0
 16926  002D52  201C               	addwfc	??_CANreceiveMessage+2,w,c
 16927  002D54  6E20               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 16928  002D56  0E00               	movlw	0
 16929  002D58  201D               	addwfc	??_CANreceiveMessage+3,w,c
 16930  002D5A  6E21               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 16931  002D5C  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16932  002D60  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16933  002D64  C01E  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 16934  002D68  C01F  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 16935  002D6C  C020  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 16936  002D70  C021  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 16937                           
 16938                           ;inc\CANlib.h: 563: }
 16939  002D74  D08D               	goto	i1l8036
 16940  002D76                     i1l8010:
 16941                           
 16942                           ; BSR set to: 15
 16943                           ;inc\CANlib.h: 564: else
 16944                           ;inc\CANlib.h: 565: {
 16945                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 16946  002D76  CF54 F01A          	movff	3924,??_CANreceiveMessage	;volatile
 16947  002D7A  6A1B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16948  002D7C  6A1C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 16949  002D7E  6A1D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 16950  002D80  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16951  002D84  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16952  002D88  C01A  FFDE         	movff	??_CANreceiveMessage,postinc2
 16953  002D8C  C01B  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 16954  002D90  C01C  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 16955  002D94  C01D  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 16956                           
 16957                           ; BSR set to: 15
 16958                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 16959  002D98  CF53 F01A          	movff	3923,??_CANreceiveMessage	;volatile
 16960  002D9C  6A1B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16961  002D9E  6A1C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 16962  002DA0  6A1D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 16963  002DA2  C01C  F01D         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 16964  002DA6  C01B  F01C         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 16965  002DAA  C01A  F01B         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 16966  002DAE  6A1A               	clrf	??_CANreceiveMessage,c
 16967  002DB0  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16968  002DB4  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16969  002DB8  501A               	movf	??_CANreceiveMessage,w,c
 16970  002DBA  26DE               	addwf	postinc2,f,c
 16971  002DBC  501B               	movf	??_CANreceiveMessage+1,w,c
 16972  002DBE  22DE               	addwfc	postinc2,f,c
 16973  002DC0  501C               	movf	??_CANreceiveMessage+2,w,c
 16974  002DC2  22DE               	addwfc	postinc2,f,c
 16975  002DC4  501D               	movf	??_CANreceiveMessage+3,w,c
 16976  002DC6  22DE               	addwfc	postinc2,f,c
 16977                           
 16978                           ; BSR set to: 15
 16979                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 16980  002DC8  010F               	movlb	15	; () banked
 16981  002DCA  A152               	btfss	82,0,b	;volatile
 16982  002DCC  D00C               	goto	i1l8018
 16983                           
 16984                           ; BSR set to: 15
 16985                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 16986  002DCE  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16987  002DD2  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16988  002DD6  0E00               	movlw	0
 16989  002DD8  12DE               	iorwf	postinc2,f,c
 16990  002DDA  0E00               	movlw	0
 16991  002DDC  12DE               	iorwf	postinc2,f,c
 16992  002DDE  0E01               	movlw	1
 16993  002DE0  12DE               	iorwf	postinc2,f,c
 16994  002DE2  0E00               	movlw	0
 16995  002DE4  12DE               	iorwf	postinc2,f,c
 16996  002DE6                     i1l8018:
 16997                           
 16998                           ; BSR set to: 15
 16999                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 17000  002DE6  010F               	movlb	15	; () banked
 17001  002DE8  A352               	btfss	82,1,b	;volatile
 17002  002DEA  D00C               	goto	i1l8022
 17003                           
 17004                           ; BSR set to: 15
 17005                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 17006  002DEC  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17007  002DF0  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17008  002DF4  0E00               	movlw	0
 17009  002DF6  12DE               	iorwf	postinc2,f,c
 17010  002DF8  0E00               	movlw	0
 17011  002DFA  12DE               	iorwf	postinc2,f,c
 17012  002DFC  0E02               	movlw	2
 17013  002DFE  12DE               	iorwf	postinc2,f,c
 17014  002E00  0E00               	movlw	0
 17015  002E02  12DE               	iorwf	postinc2,f,c
 17016  002E04                     i1l8022:
 17017                           
 17018                           ; BSR set to: 15
 17019                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 17020  002E04  010F               	movlb	15	; () banked
 17021  002E06  AB52               	btfss	82,5,b	;volatile
 17022  002E08  D00C               	goto	i1l8026
 17023                           
 17024                           ; BSR set to: 15
 17025                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 17026  002E0A  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17027  002E0E  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17028  002E12  0E00               	movlw	0
 17029  002E14  12DE               	iorwf	postinc2,f,c
 17030  002E16  0E00               	movlw	0
 17031  002E18  12DE               	iorwf	postinc2,f,c
 17032  002E1A  0E04               	movlw	4
 17033  002E1C  12DE               	iorwf	postinc2,f,c
 17034  002E1E  0E00               	movlw	0
 17035  002E20  12DE               	iorwf	postinc2,f,c
 17036  002E22                     i1l8026:
 17037                           
 17038                           ; BSR set to: 15
 17039                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 17040  002E22  010F               	movlb	15	; () banked
 17041  002E24  AD52               	btfss	82,6,b	;volatile
 17042  002E26  D00C               	goto	i1l8030
 17043                           
 17044                           ; BSR set to: 15
 17045                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 17046  002E28  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17047  002E2C  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17048  002E30  0E00               	movlw	0
 17049  002E32  12DE               	iorwf	postinc2,f,c
 17050  002E34  0E00               	movlw	0
 17051  002E36  12DE               	iorwf	postinc2,f,c
 17052  002E38  0E08               	movlw	8
 17053  002E3A  12DE               	iorwf	postinc2,f,c
 17054  002E3C  0E00               	movlw	0
 17055  002E3E  12DE               	iorwf	postinc2,f,c
 17056  002E40                     i1l8030:
 17057                           
 17058                           ; BSR set to: 15
 17059                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 17060  002E40  010F               	movlb	15	; () banked
 17061  002E42  AF52               	btfss	82,7,b	;volatile
 17062  002E44  D00C               	goto	i1l8034
 17063                           
 17064                           ; BSR set to: 15
 17065                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 17066  002E46  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17067  002E4A  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17068  002E4E  0E00               	movlw	0
 17069  002E50  12DE               	iorwf	postinc2,f,c
 17070  002E52  0E00               	movlw	0
 17071  002E54  12DE               	iorwf	postinc2,f,c
 17072  002E56  0E10               	movlw	16
 17073  002E58  12DE               	iorwf	postinc2,f,c
 17074  002E5A  0E00               	movlw	0
 17075  002E5C  12DE               	iorwf	postinc2,f,c
 17076  002E5E                     i1l8034:
 17077                           
 17078                           ; BSR set to: 15
 17079                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 17080  002E5E  CF51 F01A          	movff	3921,??_CANreceiveMessage	;volatile
 17081  002E62  6A1B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17082  002E64  6A1C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17083  002E66  6A1D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17084  002E68  0E15               	movlw	21
 17085  002E6A                     i1u1074_25:
 17086  002E6A  90D8               	bcf	status,0,c
 17087  002E6C  361A               	rlcf	??_CANreceiveMessage,f,c
 17088  002E6E  361B               	rlcf	??_CANreceiveMessage+1,f,c
 17089  002E70  361C               	rlcf	??_CANreceiveMessage+2,f,c
 17090  002E72  361D               	rlcf	??_CANreceiveMessage+3,f,c
 17091  002E74  2EE8               	decfsz	wreg,f,c
 17092  002E76  D7F9               	goto	i1u1074_25
 17093  002E78  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17094  002E7C  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17095  002E80  501A               	movf	??_CANreceiveMessage,w,c
 17096  002E82  12DE               	iorwf	postinc2,f,c
 17097  002E84  501B               	movf	??_CANreceiveMessage+1,w,c
 17098  002E86  12DE               	iorwf	postinc2,f,c
 17099  002E88  501C               	movf	??_CANreceiveMessage+2,w,c
 17100  002E8A  12DE               	iorwf	postinc2,f,c
 17101  002E8C  501D               	movf	??_CANreceiveMessage+3,w,c
 17102  002E8E  12DE               	iorwf	postinc2,f,c
 17103  002E90                     i1l8036:
 17104                           
 17105                           ; BSR set to: 15
 17106                           ;inc\CANlib.h: 581: }
 17107                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 17108  002E90  010F               	movlb	15	; () banked
 17109  002E92  9F50               	bcf	80,7,b	;volatile
 17110                           
 17111                           ; BSR set to: 15
 17112                           ;inc\CANlib.h: 584: return (error);
 17113                           ;	Return value of _CANreceiveMessage is never used
 17114  002E94  0012               	return	
 17115  002E96                     i1l408:
 17116                           
 17117                           ; BSR set to: 15
 17118                           ;inc\CANlib.h: 585: }
 17119                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 17120  002E96  AE60               	btfss	3936,7,c	;volatile
 17121  002E98  0012               	return	
 17122                           
 17123                           ; BSR set to: 15
 17124                           ;inc\CANlib.h: 588: {
 17125                           ;inc\CANlib.h: 589: msg->identifier = 0;
 17126  002E9A  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17127  002E9E  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17128  002EA2  6ADE               	clrf	postinc2,c
 17129  002EA4  6ADE               	clrf	postinc2,c
 17130  002EA6  6ADE               	clrf	postinc2,c
 17131  002EA8  6ADD               	clrf	postdec2,c
 17132                           
 17133                           ; BSR set to: 15
 17134                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 17135  002EAA  EE20 F004          	lfsr	2,4
 17136  002EAE  5018               	movf	CANreceiveMessage@msg,w,c
 17137  002EB0  26D9               	addwf	fsr2l,f,c
 17138  002EB2  5019               	movf	CANreceiveMessage@msg+1,w,c
 17139  002EB4  22DA               	addwfc	fsr2h,f,c
 17140  002EB6  CF66 FFDF          	movff	3942,indf2	;volatile
 17141                           
 17142                           ; BSR set to: 15
 17143                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 17144  002EBA  EE20 F005          	lfsr	2,5
 17145  002EBE  5018               	movf	CANreceiveMessage@msg,w,c
 17146  002EC0  26D9               	addwf	fsr2l,f,c
 17147  002EC2  5019               	movf	CANreceiveMessage@msg+1,w,c
 17148  002EC4  22DA               	addwfc	fsr2h,f,c
 17149  002EC6  CF67 FFDF          	movff	3943,indf2	;volatile
 17150                           
 17151                           ; BSR set to: 15
 17152                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 17153  002ECA  EE20 F006          	lfsr	2,6
 17154  002ECE  5018               	movf	CANreceiveMessage@msg,w,c
 17155  002ED0  26D9               	addwf	fsr2l,f,c
 17156  002ED2  5019               	movf	CANreceiveMessage@msg+1,w,c
 17157  002ED4  22DA               	addwfc	fsr2h,f,c
 17158  002ED6  CF68 FFDF          	movff	3944,indf2	;volatile
 17159                           
 17160                           ; BSR set to: 15
 17161                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 17162  002EDA  EE20 F007          	lfsr	2,7
 17163  002EDE  5018               	movf	CANreceiveMessage@msg,w,c
 17164  002EE0  26D9               	addwf	fsr2l,f,c
 17165  002EE2  5019               	movf	CANreceiveMessage@msg+1,w,c
 17166  002EE4  22DA               	addwfc	fsr2h,f,c
 17167  002EE6  CF69 FFDF          	movff	3945,indf2	;volatile
 17168                           
 17169                           ; BSR set to: 15
 17170                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 17171  002EEA  EE20 F008          	lfsr	2,8
 17172  002EEE  5018               	movf	CANreceiveMessage@msg,w,c
 17173  002EF0  26D9               	addwf	fsr2l,f,c
 17174  002EF2  5019               	movf	CANreceiveMessage@msg+1,w,c
 17175  002EF4  22DA               	addwfc	fsr2h,f,c
 17176  002EF6  CF6A FFDF          	movff	3946,indf2	;volatile
 17177                           
 17178                           ; BSR set to: 15
 17179                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 17180  002EFA  EE20 F009          	lfsr	2,9
 17181  002EFE  5018               	movf	CANreceiveMessage@msg,w,c
 17182  002F00  26D9               	addwf	fsr2l,f,c
 17183  002F02  5019               	movf	CANreceiveMessage@msg+1,w,c
 17184  002F04  22DA               	addwfc	fsr2h,f,c
 17185  002F06  CF6B FFDF          	movff	3947,indf2	;volatile
 17186                           
 17187                           ; BSR set to: 15
 17188                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 17189  002F0A  EE20 F00A          	lfsr	2,10
 17190  002F0E  5018               	movf	CANreceiveMessage@msg,w,c
 17191  002F10  26D9               	addwf	fsr2l,f,c
 17192  002F12  5019               	movf	CANreceiveMessage@msg+1,w,c
 17193  002F14  22DA               	addwfc	fsr2h,f,c
 17194  002F16  CF6C FFDF          	movff	3948,indf2	;volatile
 17195                           
 17196                           ; BSR set to: 15
 17197                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 17198  002F1A  EE20 F00B          	lfsr	2,11
 17199  002F1E  5018               	movf	CANreceiveMessage@msg,w,c
 17200  002F20  26D9               	addwf	fsr2l,f,c
 17201  002F22  5019               	movf	CANreceiveMessage@msg+1,w,c
 17202  002F24  22DA               	addwfc	fsr2h,f,c
 17203  002F26  CF6D FFDF          	movff	3949,indf2	;volatile
 17204                           
 17205                           ; BSR set to: 15
 17206                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 17207  002F2A  EE20 F00E          	lfsr	2,14
 17208  002F2E  5018               	movf	CANreceiveMessage@msg,w,c
 17209  002F30  26D9               	addwf	fsr2l,f,c
 17210  002F32  5019               	movf	CANreceiveMessage@msg+1,w,c
 17211  002F34  22DA               	addwfc	fsr2h,f,c
 17212  002F36  AC65               	btfss	3941,6,c	;volatile
 17213  002F38  D002               	goto	i1u1076_20
 17214  002F3A  0E01               	movlw	1
 17215  002F3C  D001               	goto	i1u1076_26
 17216  002F3E                     i1u1076_20:
 17217  002F3E  0E00               	movlw	0
 17218  002F40                     i1u1076_26:
 17219  002F40  6EDF               	movwf	indf2,c
 17220                           
 17221                           ; BSR set to: 15
 17222                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 17223  002F42  EE20 F00D          	lfsr	2,13
 17224  002F46  5018               	movf	CANreceiveMessage@msg,w,c
 17225  002F48  26D9               	addwf	fsr2l,f,c
 17226  002F4A  5019               	movf	CANreceiveMessage@msg+1,w,c
 17227  002F4C  22DA               	addwfc	fsr2h,f,c
 17228  002F4E  5065               	movf	3941,w,c	;volatile
 17229  002F50  0B0F               	andlw	15
 17230  002F52  6EDF               	movwf	indf2,c
 17231                           
 17232                           ; BSR set to: 15
 17233                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 17234  002F54  EE20 F00C          	lfsr	2,12
 17235  002F58  5018               	movf	CANreceiveMessage@msg,w,c
 17236  002F5A  26D9               	addwf	fsr2l,f,c
 17237  002F5C  5019               	movf	CANreceiveMessage@msg+1,w,c
 17238  002F5E  22DA               	addwfc	fsr2h,f,c
 17239  002F60  A662               	btfss	3938,3,c	;volatile
 17240  002F62  D002               	goto	i1u1077_20
 17241  002F64  0E01               	movlw	1
 17242  002F66  D001               	goto	i1u1077_26
 17243  002F68                     i1u1077_20:
 17244  002F68  0E00               	movlw	0
 17245  002F6A                     i1u1077_26:
 17246  002F6A  6EDF               	movwf	indf2,c
 17247                           
 17248                           ; BSR set to: 15
 17249                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 17250  002F6C  B662               	btfsc	3938,3,c	;volatile
 17251  002F6E  D043               	goto	i1l8072
 17252                           
 17253                           ; BSR set to: 15
 17254                           ;inc\CANlib.h: 606: {
 17255                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 17256  002F70  CF61 F01A          	movff	3937,??_CANreceiveMessage	;volatile
 17257  002F74  6A1B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17258  002F76  6A1C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17259  002F78  6A1D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17260  002F7A  0E03               	movlw	3
 17261  002F7C                     i1u1079_25:
 17262  002F7C  90D8               	bcf	status,0,c
 17263  002F7E  361A               	rlcf	??_CANreceiveMessage,f,c
 17264  002F80  361B               	rlcf	??_CANreceiveMessage+1,f,c
 17265  002F82  361C               	rlcf	??_CANreceiveMessage+2,f,c
 17266  002F84  361D               	rlcf	??_CANreceiveMessage+3,f,c
 17267  002F86  2EE8               	decfsz	wreg,f,c
 17268  002F88  D7F9               	goto	i1u1079_25
 17269  002F8A  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17270  002F8E  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17271  002F92  C01A  FFDE         	movff	??_CANreceiveMessage,postinc2
 17272  002F96  C01B  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 17273  002F9A  C01C  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 17274  002F9E  C01D  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 17275                           
 17276                           ; BSR set to: 15
 17277                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 17278  002FA2  3862               	swapf	3938,w,c	;volatile
 17279  002FA4  42E8               	rrncf	wreg,f,c
 17280  002FA6  0B07               	andlw	7
 17281  002FA8  0B07               	andlw	7
 17282  002FAA  6E23               	movwf	CANreceiveMessage@tamp,c
 17283                           
 17284                           ; BSR set to: 15
 17285                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 17286  002FAC  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17287  002FB0  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17288  002FB4  CFDE F01A          	movff	postinc2,??_CANreceiveMessage
 17289  002FB8  CFDE F01B          	movff	postinc2,??_CANreceiveMessage+1
 17290  002FBC  CFDE F01C          	movff	postinc2,??_CANreceiveMessage+2
 17291  002FC0  CFDE F01D          	movff	postinc2,??_CANreceiveMessage+3
 17292  002FC4  5023               	movf	CANreceiveMessage@tamp,w,c
 17293  002FC6  241A               	addwf	??_CANreceiveMessage,w,c
 17294  002FC8  6E1E               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 17295  002FCA  0E00               	movlw	0
 17296  002FCC  201B               	addwfc	??_CANreceiveMessage+1,w,c
 17297  002FCE  6E1F               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 17298  002FD0  0E00               	movlw	0
 17299  002FD2  201C               	addwfc	??_CANreceiveMessage+2,w,c
 17300  002FD4  6E20               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 17301  002FD6  0E00               	movlw	0
 17302  002FD8  201D               	addwfc	??_CANreceiveMessage+3,w,c
 17303  002FDA  6E21               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 17304  002FDC  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17305  002FE0  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17306  002FE4  C01E  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 17307  002FE8  C01F  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 17308  002FEC  C020  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 17309  002FF0  C021  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 17310                           
 17311                           ;inc\CANlib.h: 610: }
 17312  002FF4  D088               	goto	i1l8098
 17313  002FF6                     i1l8072:
 17314                           
 17315                           ; BSR set to: 15
 17316                           ;inc\CANlib.h: 611: else
 17317                           ;inc\CANlib.h: 612: {
 17318                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 17319  002FF6  CF64 F01A          	movff	3940,??_CANreceiveMessage	;volatile
 17320  002FFA  6A1B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17321  002FFC  6A1C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17322  002FFE  6A1D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17323  003000  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17324  003004  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17325  003008  C01A  FFDE         	movff	??_CANreceiveMessage,postinc2
 17326  00300C  C01B  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 17327  003010  C01C  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 17328  003014  C01D  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 17329                           
 17330                           ; BSR set to: 15
 17331                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 17332  003018  CF63 F01A          	movff	3939,??_CANreceiveMessage	;volatile
 17333  00301C  6A1B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17334  00301E  6A1C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17335  003020  6A1D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17336  003022  C01C  F01D         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 17337  003026  C01B  F01C         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 17338  00302A  C01A  F01B         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 17339  00302E  6A1A               	clrf	??_CANreceiveMessage,c
 17340  003030  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17341  003034  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17342  003038  501A               	movf	??_CANreceiveMessage,w,c
 17343  00303A  26DE               	addwf	postinc2,f,c
 17344  00303C  501B               	movf	??_CANreceiveMessage+1,w,c
 17345  00303E  22DE               	addwfc	postinc2,f,c
 17346  003040  501C               	movf	??_CANreceiveMessage+2,w,c
 17347  003042  22DE               	addwfc	postinc2,f,c
 17348  003044  501D               	movf	??_CANreceiveMessage+3,w,c
 17349  003046  22DE               	addwfc	postinc2,f,c
 17350                           
 17351                           ; BSR set to: 15
 17352                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 17353  003048  A062               	btfss	3938,0,c	;volatile
 17354  00304A  D00C               	goto	i1l8080
 17355                           
 17356                           ; BSR set to: 15
 17357                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 17358  00304C  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17359  003050  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17360  003054  0E00               	movlw	0
 17361  003056  12DE               	iorwf	postinc2,f,c
 17362  003058  0E00               	movlw	0
 17363  00305A  12DE               	iorwf	postinc2,f,c
 17364  00305C  0E01               	movlw	1
 17365  00305E  12DE               	iorwf	postinc2,f,c
 17366  003060  0E00               	movlw	0
 17367  003062  12DE               	iorwf	postinc2,f,c
 17368  003064                     i1l8080:
 17369                           
 17370                           ; BSR set to: 15
 17371                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 17372  003064  A262               	btfss	3938,1,c	;volatile
 17373  003066  D00C               	goto	i1l8084
 17374                           
 17375                           ; BSR set to: 15
 17376                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 17377  003068  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17378  00306C  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17379  003070  0E00               	movlw	0
 17380  003072  12DE               	iorwf	postinc2,f,c
 17381  003074  0E00               	movlw	0
 17382  003076  12DE               	iorwf	postinc2,f,c
 17383  003078  0E02               	movlw	2
 17384  00307A  12DE               	iorwf	postinc2,f,c
 17385  00307C  0E00               	movlw	0
 17386  00307E  12DE               	iorwf	postinc2,f,c
 17387  003080                     i1l8084:
 17388                           
 17389                           ; BSR set to: 15
 17390                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 17391  003080  AA62               	btfss	3938,5,c	;volatile
 17392  003082  D00C               	goto	i1l8088
 17393                           
 17394                           ; BSR set to: 15
 17395                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 17396  003084  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17397  003088  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17398  00308C  0E00               	movlw	0
 17399  00308E  12DE               	iorwf	postinc2,f,c
 17400  003090  0E00               	movlw	0
 17401  003092  12DE               	iorwf	postinc2,f,c
 17402  003094  0E04               	movlw	4
 17403  003096  12DE               	iorwf	postinc2,f,c
 17404  003098  0E00               	movlw	0
 17405  00309A  12DE               	iorwf	postinc2,f,c
 17406  00309C                     i1l8088:
 17407                           
 17408                           ; BSR set to: 15
 17409                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 17410  00309C  AC62               	btfss	3938,6,c	;volatile
 17411  00309E  D00C               	goto	i1l8092
 17412                           
 17413                           ; BSR set to: 15
 17414                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 17415  0030A0  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17416  0030A4  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17417  0030A8  0E00               	movlw	0
 17418  0030AA  12DE               	iorwf	postinc2,f,c
 17419  0030AC  0E00               	movlw	0
 17420  0030AE  12DE               	iorwf	postinc2,f,c
 17421  0030B0  0E08               	movlw	8
 17422  0030B2  12DE               	iorwf	postinc2,f,c
 17423  0030B4  0E00               	movlw	0
 17424  0030B6  12DE               	iorwf	postinc2,f,c
 17425  0030B8                     i1l8092:
 17426                           
 17427                           ; BSR set to: 15
 17428                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 17429  0030B8  AE62               	btfss	3938,7,c	;volatile
 17430  0030BA  D00C               	goto	i1l8096
 17431                           
 17432                           ; BSR set to: 15
 17433                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 17434  0030BC  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17435  0030C0  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17436  0030C4  0E00               	movlw	0
 17437  0030C6  12DE               	iorwf	postinc2,f,c
 17438  0030C8  0E00               	movlw	0
 17439  0030CA  12DE               	iorwf	postinc2,f,c
 17440  0030CC  0E10               	movlw	16
 17441  0030CE  12DE               	iorwf	postinc2,f,c
 17442  0030D0  0E00               	movlw	0
 17443  0030D2  12DE               	iorwf	postinc2,f,c
 17444  0030D4                     i1l8096:
 17445                           
 17446                           ; BSR set to: 15
 17447                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 17448  0030D4  CF61 F01A          	movff	3937,??_CANreceiveMessage	;volatile
 17449  0030D8  6A1B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17450  0030DA  6A1C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17451  0030DC  6A1D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17452  0030DE  0E15               	movlw	21
 17453  0030E0                     i1u1085_25:
 17454  0030E0  90D8               	bcf	status,0,c
 17455  0030E2  361A               	rlcf	??_CANreceiveMessage,f,c
 17456  0030E4  361B               	rlcf	??_CANreceiveMessage+1,f,c
 17457  0030E6  361C               	rlcf	??_CANreceiveMessage+2,f,c
 17458  0030E8  361D               	rlcf	??_CANreceiveMessage+3,f,c
 17459  0030EA  2EE8               	decfsz	wreg,f,c
 17460  0030EC  D7F9               	goto	i1u1085_25
 17461  0030EE  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17462  0030F2  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17463  0030F6  501A               	movf	??_CANreceiveMessage,w,c
 17464  0030F8  12DE               	iorwf	postinc2,f,c
 17465  0030FA  501B               	movf	??_CANreceiveMessage+1,w,c
 17466  0030FC  12DE               	iorwf	postinc2,f,c
 17467  0030FE  501C               	movf	??_CANreceiveMessage+2,w,c
 17468  003100  12DE               	iorwf	postinc2,f,c
 17469  003102  501D               	movf	??_CANreceiveMessage+3,w,c
 17470  003104  12DE               	iorwf	postinc2,f,c
 17471  003106                     i1l8098:
 17472                           
 17473                           ; BSR set to: 15
 17474                           ;inc\CANlib.h: 629: }
 17475                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 17476  003106  9E60               	bcf	3936,7,c	;volatile
 17477                           
 17478                           ; BSR set to: 15
 17479                           ;inc\CANlib.h: 632: return (error);
 17480                           ;	Return value of _CANreceiveMessage is never used
 17481  003108  0012               	return	
 17482  00310A                     __end_of_CANreceiveMessage:
 17483                           	opt stack 0
 17484                           pclatu	equ	0xFFB
 17485                           pclath	equ	0xFFA
 17486                           tblptru	equ	0xFF8
 17487                           tblptrh	equ	0xFF7
 17488                           tblptrl	equ	0xFF6
 17489                           tablat	equ	0xFF5
 17490                           prodh	equ	0xFF4
 17491                           prodl	equ	0xFF3
 17492                           intcon	equ	0xFF2
 17493                           intcon2	equ	0xFF1
 17494                           postinc0	equ	0xFEE
 17495                           fsr0h	equ	0xFEA
 17496                           fsr0l	equ	0xFE9
 17497                           wreg	equ	0xFE8
 17498                           indf1	equ	0xFE7
 17499                           postdec1	equ	0xFE5
 17500                           fsr1h	equ	0xFE2
 17501                           fsr1l	equ	0xFE1
 17502                           bsr	equ	0xFE0
 17503                           indf2	equ	0xFDF
 17504                           postinc2	equ	0xFDE
 17505                           postdec2	equ	0xFDD
 17506                           plusw2	equ	0xFDB
 17507                           fsr2h	equ	0xFDA
 17508                           fsr2l	equ	0xFD9
 17509                           status	equ	0xFD8
 17510                           
 17511 ;; *************** function _ISR_Alta *****************
 17512 ;; Defined at:
 17513 ;;		line 104 in file "parcheggio.c"
 17514 ;; Parameters:    Size  Location     Type
 17515 ;;		None
 17516 ;; Auto vars:     Size  Location     Type
 17517 ;;		None
 17518 ;; Return value:  Size  Location     Type
 17519 ;;                  1    wreg      void 
 17520 ;; Registers used:
 17521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17522 ;; Tracked objects:
 17523 ;;		On entry : 0/0
 17524 ;;		On exit  : 0/0
 17525 ;;		Unchanged: 0/0
 17526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17529 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17530 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17531 ;;Total ram usage:       16 bytes
 17532 ;; Hardware stack levels used:    1
 17533 ;; Hardware stack levels required when called:    1
 17534 ;; This function calls:
 17535 ;;		___lwdiv
 17536 ;; This function is called by:
 17537 ;;		Interrupt level 2
 17538 ;; This function uses a non-reentrant model
 17539 ;;
 17540                           
 17541                           	psect	intcode
 17542  000008                     __pintcode:
 17543                           	opt stack 0
 17544  000008                     _ISR_Alta:
 17545                           	opt stack 20
 17546                           
 17547                           ; BSR set to: 15
 17548                           ;incstack = 0
 17549  000008  8245               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 17550  00000A  CFFA F00A          	movff	pclath,??_ISR_Alta+2
 17551  00000E  CFFB F00B          	movff	pclatu,??_ISR_Alta+3
 17552  000012  EF31  F031         	goto	int_func
 17553                           pclatu	equ	0xFFB
 17554                           pclath	equ	0xFFA
 17555                           tblptru	equ	0xFF8
 17556                           tblptrh	equ	0xFF7
 17557                           tblptrl	equ	0xFF6
 17558                           tablat	equ	0xFF5
 17559                           prodh	equ	0xFF4
 17560                           prodl	equ	0xFF3
 17561                           intcon	equ	0xFF2
 17562                           intcon2	equ	0xFF1
 17563                           postinc0	equ	0xFEE
 17564                           fsr0h	equ	0xFEA
 17565                           fsr0l	equ	0xFE9
 17566                           wreg	equ	0xFE8
 17567                           indf1	equ	0xFE7
 17568                           postdec1	equ	0xFE5
 17569                           fsr1h	equ	0xFE2
 17570                           fsr1l	equ	0xFE1
 17571                           bsr	equ	0xFE0
 17572                           indf2	equ	0xFDF
 17573                           postinc2	equ	0xFDE
 17574                           postdec2	equ	0xFDD
 17575                           plusw2	equ	0xFDB
 17576                           fsr2h	equ	0xFDA
 17577                           fsr2l	equ	0xFD9
 17578                           status	equ	0xFD8
 17579                           
 17580                           	psect	intcode_body
 17581  006262                     __pintcode_body:
 17582                           	opt stack 20
 17583  006262                     int_func:
 17584                           	opt stack 20
 17585  006262  CFE9 F00C          	movff	fsr0l,??_ISR_Alta+4
 17586  006266  CFEA F00D          	movff	fsr0h,??_ISR_Alta+5
 17587  00626A  CFE1 F00E          	movff	fsr1l,??_ISR_Alta+6
 17588  00626E  CFE2 F00F          	movff	fsr1h,??_ISR_Alta+7
 17589  006272  CFD9 F010          	movff	fsr2l,??_ISR_Alta+8
 17590  006276  CFDA F011          	movff	fsr2h,??_ISR_Alta+9
 17591  00627A  CFF3 F012          	movff	prodl,??_ISR_Alta+10
 17592  00627E  CFF4 F013          	movff	prodh,??_ISR_Alta+11
 17593  006282  CFF6 F014          	movff	tblptrl,??_ISR_Alta+12
 17594  006286  CFF7 F015          	movff	tblptrh,??_ISR_Alta+13
 17595  00628A  CFF8 F016          	movff	tblptru,??_ISR_Alta+14
 17596  00628E  CFF5 F017          	movff	tablat,??_ISR_Alta+15
 17597                           
 17598                           ;parcheggio.c: 105: if (INTCON2bits.INTEDG0 == 1) {
 17599  006292  ACF1               	btfss	intcon2,6,c	;volatile
 17600  006294  D007               	goto	i2l698
 17601                           
 17602                           ;parcheggio.c: 106: INTCON2bits.INTEDG0 = 0;
 17603  006296  9CF1               	bcf	intcon2,6,c	;volatile
 17604                           
 17605                           ;parcheggio.c: 107: TMR3H = 0;
 17606  006298  0E00               	movlw	0
 17607  00629A  6EB3               	movwf	4019,c	;volatile
 17608                           
 17609                           ;parcheggio.c: 108: TMR3L = 0;
 17610  00629C  0E00               	movlw	0
 17611  00629E  6EB2               	movwf	4018,c	;volatile
 17612                           
 17613                           ;parcheggio.c: 109: distance_error = 0;
 17614  0062A0  9A43               	bcf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 17615                           
 17616                           ;parcheggio.c: 110: } else {
 17617  0062A2  D02C               	goto	i2l6546
 17618  0062A4                     i2l698:
 17619                           
 17620                           ;parcheggio.c: 111: TMR3H_temp = TMR3H;
 17621  0062A4  CFB3 F03F          	movff	4019,_TMR3H_temp	;volatile
 17622                           
 17623                           ;parcheggio.c: 112: TMR3L_temp = TMR3L;
 17624  0062A8  CFB2 F040          	movff	4018,_TMR3L_temp	;volatile
 17625                           
 17626                           ;parcheggio.c: 113: timerValue2 = TMR3H_temp;
 17627  0062AC  C03F  F03C         	movff	_TMR3H_temp,_timerValue2	;volatile
 17628  0062B0  6A3D               	clrf	_timerValue2+1,c	;volatile
 17629                           
 17630                           ;parcheggio.c: 114: timerValue2 = ((timerValue2 << 8) | (TMR3L_temp));
 17631  0062B2  503C               	movf	_timerValue2,w,c	;volatile
 17632  0062B4  6E08               	movwf	??_ISR_Alta& (0+255),c
 17633  0062B6  5040               	movf	_TMR3L_temp,w,c	;volatile
 17634  0062B8  6E3C               	movwf	_timerValue2,c	;volatile
 17635  0062BA  C008  F03D         	movff	??_ISR_Alta,_timerValue2+1	;volatile
 17636                           
 17637                           ;parcheggio.c: 115: pulse_time = timerValue2 / 2;
 17638  0062BE  90D8               	bcf	status,0,c
 17639  0062C0  303D               	rrcf	_timerValue2+1,w,c	;volatile
 17640  0062C2  6E08               	movwf	??_ISR_Alta& (0+255),c
 17641  0062C4  303C               	rrcf	_timerValue2,w,c	;volatile
 17642  0062C6  0101               	movlb	1	; () banked
 17643  0062C8  6F5C               	movwf	_pulse_time& (0+255),b	;volatile
 17644  0062CA  C008  F15D         	movff	??_ISR_Alta,_pulse_time+1	;volatile
 17645                           
 17646                           ; BSR set to: 1
 17647                           ;parcheggio.c: 116: sensor_distance[MUX_index] = pulse_time / 58;
 17648  0062CE  C15C  F001         	movff	_pulse_time,___lwdiv@dividend	;volatile
 17649  0062D2  C15D  F002         	movff	_pulse_time+1,___lwdiv@dividend+1	;volatile
 17650  0062D6  0E00               	movlw	0
 17651  0062D8  6E04               	movwf	___lwdiv@divisor+1,c
 17652  0062DA  0E3A               	movlw	58
 17653  0062DC  6E03               	movwf	___lwdiv@divisor,c
 17654  0062DE  EC49  F032         	call	___lwdiv	;wreg free
 17655  0062E2  503E               	movf	_MUX_index,w,c	;volatile
 17656  0062E4  0D02               	mullw	2
 17657  0062E6  0E00               	movlw	low _sensor_distance
 17658  0062E8  24F3               	addwf	prodl,w,c
 17659  0062EA  6ED9               	movwf	fsr2l,c
 17660  0062EC  0E01               	movlw	high _sensor_distance
 17661  0062EE  20F4               	addwfc	prodh,w,c
 17662  0062F0  6EDA               	movwf	fsr2h,c
 17663  0062F2  C001  FFDE         	movff	?___lwdiv,postinc2
 17664  0062F6  C002  FFDD         	movff	?___lwdiv+1,postdec2
 17665                           
 17666                           ;parcheggio.c: 117: INTCON2bits.INTEDG0 = 1;
 17667  0062FA  8CF1               	bsf	intcon2,6,c	;volatile
 17668  0062FC                     i2l6546:
 17669                           
 17670                           ;parcheggio.c: 118: }
 17671                           ;parcheggio.c: 119: INTCONbits.INT0IF = 0;
 17672  0062FC  92F2               	bcf	intcon,1,c	;volatile
 17673  0062FE  C017  FFF5         	movff	??_ISR_Alta+15,tablat
 17674  006302  C016  FFF8         	movff	??_ISR_Alta+14,tblptru
 17675  006306  C015  FFF7         	movff	??_ISR_Alta+13,tblptrh
 17676  00630A  C014  FFF6         	movff	??_ISR_Alta+12,tblptrl
 17677  00630E  C013  FFF4         	movff	??_ISR_Alta+11,prodh
 17678  006312  C012  FFF3         	movff	??_ISR_Alta+10,prodl
 17679  006316  C011  FFDA         	movff	??_ISR_Alta+9,fsr2h
 17680  00631A  C010  FFD9         	movff	??_ISR_Alta+8,fsr2l
 17681  00631E  C00F  FFE2         	movff	??_ISR_Alta+7,fsr1h
 17682  006322  C00E  FFE1         	movff	??_ISR_Alta+6,fsr1l
 17683  006326  C00D  FFEA         	movff	??_ISR_Alta+5,fsr0h
 17684  00632A  C00C  FFE9         	movff	??_ISR_Alta+4,fsr0l
 17685  00632E  C00B  FFFB         	movff	??_ISR_Alta+3,pclatu
 17686  006332  C00A  FFFA         	movff	??_ISR_Alta+2,pclath
 17687  006336  9245               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 17688  006338  0011               	retfie		f
 17689  00633A                     __end_of_ISR_Alta:
 17690                           	opt stack 0
 17691                           pclatu	equ	0xFFB
 17692                           pclath	equ	0xFFA
 17693                           tblptru	equ	0xFF8
 17694                           tblptrh	equ	0xFF7
 17695                           tblptrl	equ	0xFF6
 17696                           tablat	equ	0xFF5
 17697                           prodh	equ	0xFF4
 17698                           prodl	equ	0xFF3
 17699                           intcon	equ	0xFF2
 17700                           intcon2	equ	0xFF1
 17701                           postinc0	equ	0xFEE
 17702                           fsr0h	equ	0xFEA
 17703                           fsr0l	equ	0xFE9
 17704                           wreg	equ	0xFE8
 17705                           indf1	equ	0xFE7
 17706                           postdec1	equ	0xFE5
 17707                           fsr1h	equ	0xFE2
 17708                           fsr1l	equ	0xFE1
 17709                           bsr	equ	0xFE0
 17710                           indf2	equ	0xFDF
 17711                           postinc2	equ	0xFDE
 17712                           postdec2	equ	0xFDD
 17713                           plusw2	equ	0xFDB
 17714                           fsr2h	equ	0xFDA
 17715                           fsr2l	equ	0xFD9
 17716                           status	equ	0xFD8
 17717                           
 17718 ;; *************** function ___lwdiv *****************
 17719 ;; Defined at:
 17720 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
 17721 ;; Parameters:    Size  Location     Type
 17722 ;;  dividend        2    0[COMRAM] unsigned int 
 17723 ;;  divisor         2    2[COMRAM] unsigned int 
 17724 ;; Auto vars:     Size  Location     Type
 17725 ;;  quotient        2    4[COMRAM] unsigned int 
 17726 ;;  counter         1    6[COMRAM] unsigned char 
 17727 ;; Return value:  Size  Location     Type
 17728 ;;                  2    0[COMRAM] unsigned int 
 17729 ;; Registers used:
 17730 ;;		wreg, status,2, status,0
 17731 ;; Tracked objects:
 17732 ;;		On entry : 0/0
 17733 ;;		On exit  : 0/0
 17734 ;;		Unchanged: 0/0
 17735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17736 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17737 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17739 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17740 ;;Total ram usage:        7 bytes
 17741 ;; Hardware stack levels used:    1
 17742 ;; This function calls:
 17743 ;;		Nothing
 17744 ;; This function is called by:
 17745 ;;		_ISR_Alta
 17746 ;; This function uses a non-reentrant model
 17747 ;;
 17748                           
 17749                           	psect	text40
 17750  006492                     __ptext40:
 17751                           	opt stack 0
 17752  006492                     ___lwdiv:
 17753                           	opt stack 20
 17754                           
 17755                           ;incstack = 0
 17756  006492  0E00               	movlw	0
 17757  006494  6E06               	movwf	___lwdiv@quotient+1,c
 17758  006496  0E00               	movlw	0
 17759  006498  6E05               	movwf	___lwdiv@quotient,c
 17760  00649A  5003               	movf	___lwdiv@divisor,w,c
 17761  00649C  1004               	iorwf	___lwdiv@divisor+1,w,c
 17762  00649E  B4D8               	btfsc	status,2,c
 17763  0064A0  D01C               	goto	i2l1297
 17764  0064A2  0E01               	movlw	1
 17765  0064A4  6E07               	movwf	___lwdiv@counter,c
 17766  0064A6  D004               	goto	i2l6278
 17767  0064A8                     i2l6276:
 17768  0064A8  90D8               	bcf	status,0,c
 17769  0064AA  3603               	rlcf	___lwdiv@divisor,f,c
 17770  0064AC  3604               	rlcf	___lwdiv@divisor+1,f,c
 17771  0064AE  2A07               	incf	___lwdiv@counter,f,c
 17772  0064B0                     i2l6278:
 17773  0064B0  AE04               	btfss	___lwdiv@divisor+1,7,c
 17774  0064B2  D7FA               	goto	i2l6276
 17775  0064B4                     i2l6280:
 17776  0064B4  90D8               	bcf	status,0,c
 17777  0064B6  3605               	rlcf	___lwdiv@quotient,f,c
 17778  0064B8  3606               	rlcf	___lwdiv@quotient+1,f,c
 17779  0064BA  5003               	movf	___lwdiv@divisor,w,c
 17780  0064BC  5C01               	subwf	___lwdiv@dividend,w,c
 17781  0064BE  5004               	movf	___lwdiv@divisor+1,w,c
 17782  0064C0  5802               	subwfb	___lwdiv@dividend+1,w,c
 17783  0064C2  A0D8               	btfss	status,0,c
 17784  0064C4  D005               	goto	i2l6288
 17785  0064C6  5003               	movf	___lwdiv@divisor,w,c
 17786  0064C8  5E01               	subwf	___lwdiv@dividend,f,c
 17787  0064CA  5004               	movf	___lwdiv@divisor+1,w,c
 17788  0064CC  5A02               	subwfb	___lwdiv@dividend+1,f,c
 17789  0064CE  8005               	bsf	___lwdiv@quotient,0,c
 17790  0064D0                     i2l6288:
 17791  0064D0  90D8               	bcf	status,0,c
 17792  0064D2  3204               	rrcf	___lwdiv@divisor+1,f,c
 17793  0064D4  3203               	rrcf	___lwdiv@divisor,f,c
 17794  0064D6  2E07               	decfsz	___lwdiv@counter,f,c
 17795  0064D8  D7ED               	goto	i2l6280
 17796  0064DA                     i2l1297:
 17797  0064DA  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 17798  0064DE  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 17799  0064E2  0012               	return		;funcret
 17800  0064E4                     __end_of___lwdiv:
 17801                           	opt stack 0
 17802                           pclatu	equ	0xFFB
 17803                           pclath	equ	0xFFA
 17804                           tblptru	equ	0xFF8
 17805                           tblptrh	equ	0xFF7
 17806                           tblptrl	equ	0xFF6
 17807                           tablat	equ	0xFF5
 17808                           prodh	equ	0xFF4
 17809                           prodl	equ	0xFF3
 17810                           intcon	equ	0xFF2
 17811                           intcon2	equ	0xFF1
 17812                           postinc0	equ	0xFEE
 17813                           fsr0h	equ	0xFEA
 17814                           fsr0l	equ	0xFE9
 17815                           wreg	equ	0xFE8
 17816                           indf1	equ	0xFE7
 17817                           postdec1	equ	0xFE5
 17818                           fsr1h	equ	0xFE2
 17819                           fsr1l	equ	0xFE1
 17820                           bsr	equ	0xFE0
 17821                           indf2	equ	0xFDF
 17822                           postinc2	equ	0xFDE
 17823                           postdec2	equ	0xFDD
 17824                           plusw2	equ	0xFDB
 17825                           fsr2h	equ	0xFDA
 17826                           fsr2l	equ	0xFD9
 17827                           status	equ	0xFD8
 17828                           pclatu	equ	0xFFB
 17829                           pclath	equ	0xFFA
 17830                           tblptru	equ	0xFF8
 17831                           tblptrh	equ	0xFF7
 17832                           tblptrl	equ	0xFF6
 17833                           tablat	equ	0xFF5
 17834                           prodh	equ	0xFF4
 17835                           prodl	equ	0xFF3
 17836                           intcon	equ	0xFF2
 17837                           intcon2	equ	0xFF1
 17838                           postinc0	equ	0xFEE
 17839                           fsr0h	equ	0xFEA
 17840                           fsr0l	equ	0xFE9
 17841                           wreg	equ	0xFE8
 17842                           indf1	equ	0xFE7
 17843                           postdec1	equ	0xFE5
 17844                           fsr1h	equ	0xFE2
 17845                           fsr1l	equ	0xFE1
 17846                           bsr	equ	0xFE0
 17847                           indf2	equ	0xFDF
 17848                           postinc2	equ	0xFDE
 17849                           postdec2	equ	0xFDD
 17850                           plusw2	equ	0xFDB
 17851                           fsr2h	equ	0xFDA
 17852                           fsr2l	equ	0xFD9
 17853                           status	equ	0xFD8
 17854                           
 17855                           	psect	rparam
 17856  0000                     pclatu	equ	0xFFB
 17857                           pclath	equ	0xFFA
 17858                           tblptru	equ	0xFF8
 17859                           tblptrh	equ	0xFF7
 17860                           tblptrl	equ	0xFF6
 17861                           tablat	equ	0xFF5
 17862                           prodh	equ	0xFF4
 17863                           prodl	equ	0xFF3
 17864                           intcon	equ	0xFF2
 17865                           intcon2	equ	0xFF1
 17866                           postinc0	equ	0xFEE
 17867                           fsr0h	equ	0xFEA
 17868                           fsr0l	equ	0xFE9
 17869                           wreg	equ	0xFE8
 17870                           indf1	equ	0xFE7
 17871                           postdec1	equ	0xFE5
 17872                           fsr1h	equ	0xFE2
 17873                           fsr1l	equ	0xFE1
 17874                           bsr	equ	0xFE0
 17875                           indf2	equ	0xFDF
 17876                           postinc2	equ	0xFDE
 17877                           postdec2	equ	0xFDD
 17878                           plusw2	equ	0xFDB
 17879                           fsr2h	equ	0xFDA
 17880                           fsr2l	equ	0xFD9
 17881                           status	equ	0xFD8
 17882                           
 17883                           	psect	temp
 17884  000045                     btemp:
 17885                           	opt stack 0
 17886  000045                     	ds	1
 17887  0000                     int$flags	set	btemp
 17888                           pclatu	equ	0xFFB
 17889                           pclath	equ	0xFFA
 17890                           tblptru	equ	0xFF8
 17891                           tblptrh	equ	0xFF7
 17892                           tblptrl	equ	0xFF6
 17893                           tablat	equ	0xFF5
 17894                           prodh	equ	0xFF4
 17895                           prodl	equ	0xFF3
 17896                           intcon	equ	0xFF2
 17897                           intcon2	equ	0xFF1
 17898                           postinc0	equ	0xFEE
 17899                           fsr0h	equ	0xFEA
 17900                           fsr0l	equ	0xFE9
 17901                           wreg	equ	0xFE8
 17902                           indf1	equ	0xFE7
 17903                           postdec1	equ	0xFE5
 17904                           fsr1h	equ	0xFE2
 17905                           fsr1l	equ	0xFE1
 17906                           bsr	equ	0xFE0
 17907                           indf2	equ	0xFDF
 17908                           postinc2	equ	0xFDE
 17909                           postdec2	equ	0xFDD
 17910                           plusw2	equ	0xFDB
 17911                           fsr2h	equ	0xFDA
 17912                           fsr2l	equ	0xFD9
 17913                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    80
    Data        11
    BSS         196
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      68
    BANK0           160    134     135
    BANK1           256     77     256
    BANK2           256     12      12
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_speed(BANK1[8]), data_brake(BANK1[8]), data_steering(BANK1[8]), data_correction(BANK1[8]), 
		 -> data_test(BANK1[8]), data(BANK1[8]), sensor_distance_short(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->i1_CANsendMessage
    i1_delay_ms->i1___wmul

Critical Paths under _ISR_Alta in COMRAM

    _ISR_Alta->___lwdiv

Critical Paths under _main in BANK0

    _park_search->_parallelo
    _park_routine->_parallelo
    _parallelo->_asin
    _can_send->_CANsendMessage
    _sin->_floor
    _floor->___xxtofl
    ___xxtofl->___fltol
    ___fltol->___flneg
    ___flsub->_floor
    _asin->_sqrt
    _sqrt->___flneg
    _atan->___flge
    _fabs->___flneg
    ___flneg->___fladd
    _eval_poly->___fladd
    ___flmul->___fldiv
    ___fladd->___flmul
    ___flge->_fabs
    _delay_s->_delay_ms
    _delay_ms->___wmul
    _configurations->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _ISR_Alta in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_park_routine
    _park_routine->_matematica
    _parallelo->_asin
    _matematica->_cos
    _cos->_asin
    _sin->___flsub
    _asin->_atan

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_park_routine

Critical Paths under _ISR_Bassa in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Bassa in BANK3

    None.

Critical Paths under _ISR_Alta in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Bassa in BANK4

    None.

Critical Paths under _ISR_Alta in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Bassa in BANK5

    None.

Critical Paths under _ISR_Alta in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Bassa in BANK6

    None.

Critical Paths under _ISR_Alta in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Bassa in BANK7

    None.

Critical Paths under _ISR_Alta in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Bassa in BANK8

    None.

Critical Paths under _ISR_Alta in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Bassa in BANK9

    None.

Critical Paths under _ISR_Alta in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Bassa in BANK10

    None.

Critical Paths under _ISR_Alta in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Bassa in BANK11

    None.

Critical Paths under _ISR_Alta in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Bassa in BANK12

    None.

Critical Paths under _ISR_Alta in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  355922
                                              8 BANK2      4     4      0
                       _CANisTxReady
                     _CANsendMessage
                     _configurations
                           _delay_ms
                       _park_routine
                        _park_search
 ---------------------------------------------------------------------------------
 (1) _park_search                                          2     2      0   95129
                                             37 BANK1      2     2      0
                       _CANisTxReady
                     _CANsendMessage
                           ___xxtofl
                                _abs
                          _parallelo
 ---------------------------------------------------------------------------------
 (1) _park_routine                                        12    12      0  246127
                                             73 BANK1      4     4      0
                                              0 BANK2      8     8      0
                       _CANisTxReady
                     _CANsendMessage
                            ___fladd
                            ___flneg
                            ___fltol
                           ___xxtofl
                           _can_send
                           _delay_ms
                            _delay_s
                         _matematica
                          _parallelo
 ---------------------------------------------------------------------------------
 (2) _parallelo                                            2     2      0   86216
                                            132 BANK0      2     2      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _abs
                               _asin
                           _can_send
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _can_send                                             0     0      0    7882
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (4) _CANsendMessage                                      16     8      8    7845
                                             25 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (4) _CANisTxReady                                         1     1      0      37
                                             25 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     247
                                             25 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _matematica                                          32    32      0  133218
                                             45 BANK1     28    28      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                               _asin
                                _cos
 ---------------------------------------------------------------------------------
 (3) _cos                                                 12     8      4   57965
                                             37 BANK1      8     4      4
                            ___fladd
                             ___flge
                               _asin (ARG)
                                _sin
 ---------------------------------------------------------------------------------
 (4) _sin                                                 17    13      4   49794
                                              8 BANK1     17    13      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                          _eval_poly
                              _floor
 ---------------------------------------------------------------------------------
 (5) _floor                                               10     6      4   10191
                                            123 BANK0     10     6      4
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (6) _frexp                                                8     2      6     452
                                             25 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     784
                                            109 BANK0     14    10      4
                            ___fltol (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     722
                                             99 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    6777
                                              0 BANK1      8     0      8
                            ___fladd
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (3) _asin                                                36    32      4   57438
                                            128 BANK0      4     0      4
                                             17 BANK1     20    20      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                               _atan
                               _fabs
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _sqrt                                                29    25      4    1467
                                             99 BANK0     29    25      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (4) _atan                                                21    17      4   34323
                                            115 BANK0      4     0      4
                                              0 BANK1     17    17      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                          _eval_poly
                               _fabs
 ---------------------------------------------------------------------------------
 (4) _fabs                                                 4     0      4    1621
                                             99 BANK0      4     0      4
                            ___flneg
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4    1297
                                             95 BANK0      4     0      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           16     8      8   13009
                                             95 BANK0     16     8      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    5541
                                             50 BANK0     25    17      8
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    6290
                                             75 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1498
                                            103 BANK0     12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4347
                                             25 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (2) _delay_s                                              2     2      0     918
                                             33 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             2     0      2     850
                                             31 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     392
                                             25 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _configurations                                       0     0      0    5934
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             39 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             25 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             25 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             25 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_Bassa                                           25    25      0    5357
                                              0 BANK0     25    25      0
                  _CANreceiveMessage
                   i1_CANsendMessage
                         i1_delay_ms
 ---------------------------------------------------------------------------------
 (8) i1_delay_ms                                           2     0      2     362
                                             29 COMRAM     2     0      2
                           i1___wmul
 ---------------------------------------------------------------------------------
 (9) i1___wmul                                             6     2      4     296
                                             23 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) i1_CANsendMessage                                    16     8      8    3197
                                             23 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (8) _CANreceiveMessage                                   12    10      2    1594
                                             23 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR_Alta                                           16    16      0     290
                                              7 COMRAM    16    16      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (11) ___lwdiv                                             7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisTxReady
   _CANsendMessage
   _configurations
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _delay_ms
     ___wmul
   _park_routine
     _CANisTxReady
     _CANsendMessage
     ___fladd
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
     ___flneg
       ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___flneg (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
     ___xxtofl
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       _abs (ARG)
     _can_send
       _CANisTxReady
       _CANsendMessage
     _delay_ms
       ___wmul
     _delay_s
       _delay_ms
         ___wmul
     _matematica
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flmul
         ___fldiv (ARG)
       ___flneg
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _cos
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _asin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _atan
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___flmul
               ___fldiv (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _eval_poly
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _fabs
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           _sqrt
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _sin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flsub
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _floor (ARG)
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___flge
                 _fabs (ARG)
                   ___flneg
                     ___fladd (ARG)
                       ___fldiv (ARG)
                       ___flmul (ARG)
                         ___fldiv (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
               ___xxtofl
                 ___fltol (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___flneg (ARG)
                     ___fladd (ARG)
                       ___fldiv (ARG)
                       ___flmul (ARG)
                         ___fldiv (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                 _abs (ARG)
               _frexp
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _floor
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___flneg (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___xxtofl
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
               _abs (ARG)
             _frexp
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___flmul
         ___fldiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _abs (ARG)
       _abs
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
   _park_search
     _CANisTxReady
     _CANsendMessage
     ___xxtofl
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       _abs (ARG)
     _abs
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___flmul
         ___fldiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _abs (ARG)
       _abs
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)

 _ISR_Bassa (ROOT)
   _CANreceiveMessage
   i1_CANsendMessage
   i1_delay_ms
     i1___wmul

 _ISR_Alta (ROOT)
   ___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      C       C       9        4.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     4D     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     86      87       5       84.4%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     27      44       1       72.3%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1D7      20        0.0%
DATA                 0      0     1D7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sun Jun 05 17:21:19 2016

                ___fldiv@aexp 0091                  ___fldiv@bexp 0090                             _n 0148  
                           _x 002C                             _z 0030          __end_of_CANSetFilter 1858  
                ___fldiv@sign 0085            delay_s@repeat_loop 0082                            bsr 000FE0  
         ___wmul@multiplicand 007B                   __CFG_BORV$3 000000              i1___wmul@product 001C  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                   __CFG_OSC$HS 000000                    _MUX_select 0110  
                         l400 1F30                           l401 1F34                           l402 1F40  
                         l500 15C4                           l501 15C8                           l510 16D4  
                         l502 15D4                           l430 487C                           l511 16E0  
                         l431 4880                           l520 17EC                           l512 16E4  
                         l432 488C                           l521 17F0                           l513 16F0  
                         l505 16B0                           l441 4994                           l433 4890  
                         l361 1ADC                           l522 17FC                           l506 16B4  
                         l442 4998                           l434 489C                           l362 186E  
                         l523 1800                           l507 16C0                           l443 49A4  
                         l435 48A0                           l371 1A28                           l363 1872  
                         l524 180C                           l516 17CC                           l508 16C4  
                         l444 49A8                           l436 48AC                           l356 5970  
                         l380 1B7E                           l372 1A2C                           l364 196A  
                         l517 17D0                           l509 16D0                           l461 1242  
                         l445 49B4                           l437 48B0                           l357 597A  
                         l381 1B88                           l373 1A38                           l365 18FA  
                         l518 17DC                           l462 1246                           l446 49B8  
                         l438 48BC                           l382 1B92                           l366 1904  
                         l519 17E0                           l463 1252                           l447 49C4  
                         l391 1D76                           l383 1B9C                           l367 190E  
                         l480 139C                           l472 135C                           l464 1256  
                         l448 49C8                           l392 1D7A                           l376 1D60  
                         l368 1918                           l473 1360                           l465 1262  
                         l449 49D4                           l393 1E72                           l377 1AF2  
                         l490 14AC                           l474 136C                           l466 1266  
                         l554 66DA                           l394 1E02                           l386 1CAC  
                         l378 1AF6                           l491 14B8                           l483 1478  
                         l475 1370                           l467 1272                           l395 1E0C  
                         l387 1CB0                           l379 1BEE                           l484 147C  
                         l476 137C                           l468 1276                           l396 1E16  
                         l388 1CBC                           l485 1488                           l477 1380  
                         l469 1282                           l397 1E20                           l494 1594  
                         l486 148C                           l478 138C                           l495 1598  
                         l487 1498                           l479 1390                           l567 6602  
                         l496 15A4                           l488 149C                           l832 5292  
                         l744 56DC                           l497 15A8                           l489 14A8  
                         l498 15B4                           l746 557A                           l499 15B8  
                         l780 3B2A                           l757 56D8                           l790 3D7C  
                         l793 3E06                           l777 3AEC                           l890 6660  
                         l786 3B58                           l787 3CE4                  __CFG_CPB$OFF 000000  
                __CFG_CPD$OFF 000000                    _MUX_toggle 0218                    i1_delay_ms 660C  
                         _abs 663E                           _asd 021A                           _dir 021C  
                         _cos 617E                           _msg 0162                           _sin 4A20  
                         prod 000FF3                           wreg 000FE8               ?_configurations 0001  
                ___flmul@aexp 009F                  ___flmul@bexp 00A4                  ___flmul@sign 009E  
                ___flmul@temp 00A9                  ___flmul@prod 00A5                  __CFG_LVP$OFF 000000  
                ___fltol@exp1 00CC                  __CFG_WDT$OFF 000000                          ?_abs 0079  
                        l1090 6558                          l1405 44F0                          l1333 4D26  
                        l1414 4528                          l1350 32DE                          l1502 5E44  
                        l1351 32AA                          l1416 4596                          l1408 4498  
                        l1097 5BBA                          l1442 3902                          l1435 3666  
                        l1452 3A14                          l1444 3970                          l1349 32EA  
                        l1366 345E                          l1375 34F2                          l1491 5838  
                        l1492 5850                          l1484 57DC                          l1477 5730  
                        l5300 4906                          ?_cos 01CE                          l5234 66E8  
                        l5404 103C                          l5252 473A                          l7020 38EC  
                        l5502 13A0                          l5422 10F6                          l5350 0E10  
                        l5326 49D8                          l5440 11B0                          l7120 6002  
                        l7104 5F94                          l5610 173A                          l7050 39E6  
                        l7026 3916                          l7130 6032                          l5604 16F4  
                        l5508 13E6                          l5268 47F0                          l7212 4304  
                        l7060 3A34                          l7052 39FA                          l7036 396A  
                        l7132 6042                          l7124 6016                          l5542 1502  
                        l5294 48C0                          l7302 4590                          l7206 42E0  
                        l7062 3A3E                          l7046 39C0                          l7134 604C  
                        l5536 14BC                          l5368 0EC8                          l7320 464A  
                        l7312 45E6                          l7232 4362                          l7216 430E  
                        l7080 5B68                          l7072 5AC8                          l7160 57BE  
                        l8112 552C                          l8120 5576                          l8104 5514  
                        l5570 15D8                          l5474 12CC                          l5386 0F82  
                        l7226 433E                          l7138 6068                          l7154 5768  
                        l7410 1922                          l5468 1286                          l7316 4614  
                        l7236 436C                          l7076 5B16                          l7180 58A2  
                        l7156 5770                          l7148 5740                          l8204 3B50  
                        l8132 5600                          l8124 55DC                          l5638 1810  
                        l7326 465A                          l7318 4628                          l7086 5C06  
                        l7350 5EAC                          l7094 6590                          l7166 581A  
                        l7158 5780                          l7190 6360                          l7430 1A1C  
                        l5576 161E                          l7328 465E                          l7280 44EC  
                        l7256 43EE                          l7248 43C0                          l7352 5F50  
                        l7168 582A                          l7512 1CC0                          l8136 5638  
                        l7274 44A4                          l7266 446C                          l7506 1CA0  
                        l8314 3EEA                          l8170 3A66                          l8154 569A  
                        l5780 59CA                          l5772 5968                          l7292 453C  
                        l7372 5DA8                          l7364 5D72                          l7436 1A3C  
                        l8308 3EA2                          l8180 3AAA                          l5774 597E  
                        l7286 4512                          l6814 322A                          l6742 3128  
                        l7710 42A2                          l7702 426C                          l6904 34EC  
                        l6832 32CE                          l6760 3182                          l6752 3156  
                        l7640 3F74                          l7368 5D86                          l8184 3AE2  
                        l5778 5986                          l6922 357C                          l6914 3548  
                        l6850 334C                          l6842 330E                          l6826 32BE  
                        l7730 530C                          l7626 3F16                          l7562 1E2A  
                        l6852 3352                          l6860 336E                          l6828 32C4  
                        l6772 31BA                          l6748 314C                          l6934 35A0  
                        l6926 3588                          l6918 355A                          l6870 343E  
                        l6766 3196                          l6950 35F4                          l7750 54EC  
                        l7734 5380                          l7646 3F94                          l7638 3F62  
                        l7582 1F24                          l7486 1BA6                          l7822 610A  
                        l7806 607E                          l6928 358C                          l6856 335C  
                        l6784 31EE                          l6776 31C4                          l6952 35FA  
                        l6944 35D0                          l7816 60CC                          l7920 52AE  
                        l8296 3E64                          l8704 5CBE                          l6970 3654  
                        l6962 362A                          l6954 360C                          l7746 54D4  
                        l7682 4116                          l7690 418C                          l7666 4006  
                        l7658 3FD6                          l7762 4A56                          l7826 6144  
                        l7914 525C                          l7922 52B4                          l8298 3E74  
                        l6884 34A6                          l7684 4150                          l7676 4088  
                        l7860 4FA6                          l7836 4D96                          l7588 1F44  
                        ?_sin 01B1                          l6878 3490                          l6894 34C6  
                        l6974 367A                          l7678 4090                          l7774 4B80  
                        l6888 34B2                          l6896 34CC                          l6968 364E  
                        l7848 4EC4                          l7794 65F6                          l6978 368E  
                        l7778 4BF6                          l7884 6676                          l7876 6206  
                        l7888 6688                          l8696 5C58                          l8698 5C66  
                        _LATA 000F89                          _LATB 000F8A                          _LATC 000F8B  
                        u6140 46B6                          u6145 46AA                          u6155 4716  
                        u6500 0FB8                          u6420 0E44                          u6180 476C  
                        u7070 1830                          u6350 49F8                          u6270 48E0  
                        u6505 0FAC                          u6425 0E38                          u6185 4760  
                        u7075 1824                          u6515 1018                          u6435 0EA4  
                        u6355 49EC                          u6275 48D4                          u6195 47CC  
                        u6540 1072                          u6460 0EFE                          u6380 0D8C  
                        u9200 39D4                          u9120 388E                          u6545 1066  
                        u6465 0EF2                          u6385 0D80                          u6555 10D2  
                        u6475 0F5E                          u6395 0DEC                          u6580 112C  
                        u9300 5FB4                          u9125 3882                          u6910 15F8  
                        u6830 14DC                          u6750 13C0                          u6670 12A6  
                        u6585 1120                          u9305 5FA8                          u6915 15EC  
                        u6835 14D0                          u6755 13B4                          u6675 129A  
                        u6595 118C                          u8740 3274                          u6990 1714  
                        u8750 328C                          u9470 6392                          u8760 328E  
                        u6995 1708                          u9478 6396                          u9750 5D96  
                        u9680 45FA                          u9850 1942                          u9860 198E  
                        u9855 1936                          u9865 1982                          u9875 19EE  
                        u9980 1BC6                          u9990 1C12                          u9985 1BBA  
                        u9995 1C06      __end_ofi1_CANsendMessage 2674           __size_of_CANSetMask 039E  
                        _Pmin 0138                          abs@a 0079                          _alfa 013C  
                        _fabs 652C                          _data 0171                          _beta 0140  
                        _atan 52C0                          _asin 4D38                          _main 5C0A  
                        cos@f 01CE                          fsr0h 000FEA                          fsr1h 000FE2  
                        fsr0l 000FE9                          fsr2h 000FDA                          indf1 000FE7  
                        fsr1l 000FE1                          indf2 000FDF                          fsr2l 000FD9  
                        btemp 0045                          _sqrt 3EF8                          pclat 000FFA  
                        sin@f 01B1                          sin@y 01B5                          prodh 000FF4  
                        prodl 000FF3                          start 0350                 __CFG_IESO$OFF 000000  
             ___fldiv@new_exp 008A                delay_s@value_s 0081           ISR_Bassa@PORTA_temp 0077  
               __CFG_MCLRE$ON 000000                  ___param_bank 000010              _CANOperationMode 66E0  
                       ??_abs 007B                         ??_cos 00E5                         ??_sin 00E5  
  __size_of_CANreceiveMessage 050C                         ?_fabs 00C3                 ___fltol@sign1 00CB  
                       ?_atan 00D3                         ?_asin 00E0               __end_of___fladd 35B2  
                       ?_main 0001               __end_of___fldiv 4682               __end_of___flneg 65A2  
             __end_of___flmul 3A58               __end_of___flsub 652C               __end_of___fltol 607A  
                       ?_sqrt 00C3                         u10005 1C72                         u10110 1E4A  
                       u10120 1E96                         u11000 3A7C                         u10115 1E3E  
                       u10125 1E8A                         u10310 533C                         u11006 3A7E  
                       u10135 1EF6                         u10320 533E                         u11140 3E42  
                       u10600 52AC                         _T0CON 000FD5                         u10380 4B7A  
                       u10390 4B7C                         u10551 50E4                         u10561 50F4  
                       u10940 5648                         u10860 5528                         _T3CON 000FB1  
                       u11917 65F8                         u11890 5C78            __size_of_ISR_Bassa 0338  
                       u11896 5C7A               __end_of___lwdiv 64E4                         i1l400 25D0  
                       i1l401 25D4                         i1l402 25DE                         i1l408 2E96  
                       i1l361 2214                         i1l362 1FF8                         i1l371 2170  
                       i1l363 1FFC                         i1l380 229A                         i1l372 2174  
                       i1l364 20CC                         i1l381 22A2                         i1l373 217E  
                       i1l365 206A                         i1l382 22AA                         i1l366 2072  
                       i1l710 00E4                         i1l391 2458                         i1l383 22B2  
                       i1l367 207A                         i1l392 245C                         i1l376 2444  
                       i1l368 2082                         i1l704 008C                         i1l393 252C  
                       i1l377 2228                         i1l394 24CA                         i1l386 23A0  
                       i1l378 222C                         i1l395 24D2                         i1l387 23A4  
                       i1l379 22FC                         i1l723 0290                         i1l396 24DA  
                       i1l388 23AE                         i1l716 0190                         i1l708 00CA  
                       i1l397 24E2                         i1l726 0304                         i1l567 6634  
                       i1l729 0308                         i2l698 62A4                         _TMR0H 000FD7  
                       _TMR0L 000FD6                         _TMR3H 000FB3                         _TMR3L 000FB2  
                       _PORTA 000F80                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISC 000F94            __end_ofsin@coeff_a 0D41            __end_ofsin@coeff_b 0D51  
               __CFG_PWRT$OFF 000000              __end_of_ISR_Alta 633A               __end_of_delay_s 6696  
               __CFG_WRT0$OFF 000000                         _J_var 0130                 __CFG_WRT1$OFF 000000  
                       _K_var 0134                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
          CANInitialize@flags 008B                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000                         _bordo 0144                         fabs@d 00C3  
                       _first 0221                         _floor 5D32                         _frexp 633A  
                       _errno 0158                         atan@f 00D3                         atan@x 01AD  
                       atan@y 01A9                         asin@x 00E0                         asin@y 01C6  
              __pbitbssCOMRAM 0218                         sin@x2 01BD                         tablat 000FF5  
        __end_of_CANisTxReady 66E0              __end_ofi1___wmul 66BC                         plusw2 000FDB  
                       sqrt@a 00C3                         sqrt@i 00CC                         sqrt@p 00D1  
                       status 000FD8           i1___wmul@multiplier 0018                  ?_park_search 0001  
             __initialization 643A                  __end_of_fabs 656A                  __end_of_atan 5512  
                __end_of_asin 504A                  __end_of_main 5D32                  __end_of_sqrt 42C2  
                      ??_fabs 00C7                        ??_atan 00D7                        ??_asin 00E4  
                      ??_main 0208             _park_routine$3690 0200             _park_routine$3691 0204  
                      ??_sqrt 00C7                 __activetblptr 000003                   ?i1_delay_ms 001E  
           _CANisTxReady$2796 0079                        _ADCON1 000FC1                        ?_floor 00DB  
                      ?_frexp 0079                        _CANCON 000F6F            _distance_received1 021F  
             __CFG_BBSIZ$1024 000000                 _avvicinamento 021B                        i1l8010 2D76  
                      i1l8030 2E40                        i1l8022 2E04                        i2l1297 64DA  
                      i1l8034 2E5E                        i1l8026 2E22                        i1l8018 2DE6  
                      i1l8036 2E90                        i1l8080 3064                        i1l8072 2FF6  
                      i1l8092 30B8                        i1l8084 3080                        i1l8096 30D4  
                      i1l8088 309C                        i1l8504 24EA                        i1l8352 208A  
                      i1l8600 0160                        i1l8098 3106                        i1l8530 25E2  
                      i1l8602 0184                        i1l8524 25C6                        i1l8428 22BA  
                      i1l8372 2166                        i1l8454 23B2                        i1l8630 01C8  
                      i1l8448 2396                        i1l8552 6628                        i1l8378 2182  
                      i1l8634 01D0                        i1l8670 02CC                        i1l8662 029A  
                      i1l8574 00BC                        i2l6280 64B4                        i1l8656 026C  
                      i1l8674 02D6                        i1l8594 0148                        i1l8578 00D0  
                      i2l6276 64A8                        i2l6278 64B0                        i2l6288 64D0  
                      i2l6546 62FC                        _RXB0D0 000F66                        _RXB0D1 000F67  
                      _RXB0D2 000F68                        _RXB0D3 000F69                        _RXB0D4 000F6A  
                      _RXB1D0 000F56                        _RXB0D5 000F6B                        _RXB1D1 000F57  
                      _RXB0D6 000F6C                        _RXB1D2 000F58                        _RXB0D7 000F6D  
                      _RXB1D3 000F59                        _RXB1D4 000F5A                        _RXB1D5 000F5B  
                      _RXB1D6 000F5C                        _RXB1D7 000F5D                        _TXB0D0 000F46  
                      _TXB0D1 000F47                        _TXB0D2 000F48                        _TXB0D3 000F49  
                      _TXB1D0 000F36                        _TXB0D4 000F4A                        _TXB1D1 000F37  
                      _TXB0D5 000F4B                        _TXB1D2 000F38                        _TXB0D6 000F4C  
                      _TXB1D3 000F39                        _TXB0D7 000F4D                        _TXB2D0 000F26  
                      _TXB1D4 000F3A                        _TXB2D1 000F27                        _TXB1D5 000F3B  
                      _TXB2D2 000F28                        _TXB1D6 000F3C                        _TXB2D3 000F29  
                      _TXB1D7 000F3D                        _TXB2D4 000F2A                        _TXB2D5 000F2B  
                      _TXB2D6 000F2C                        _TXB2D7 000F2D            CANsendMessage@data 007D  
            __end_of_can_send 617E            CANsendMessage@tamp 0085              __end_of___xxtofl 58B4  
           __end_of_ISR_Bassa 0350              __end_of_delay_ms 660C         __size_of_CANSetFilter 0B06  
              __CFG_XINST$OFF 000000                        ___flge 5A7A               _data_correction 0181  
                   ??___fladd 00B3                        ___wmul 65A2                     ??___fldiv 0081  
                   ??___flneg 00C3                __CFG_STVREN$ON 000000                     ??___flmul 009A  
                   ??___flsub 00E5                     ??___fltol 00C7                     ??___lwdiv 0005  
                ??_CANSetMask 007E                        _raggio 01FC                        clear_0 6440  
                      clear_1 6450                     ??_delay_s 0081                        floor@i 00DF  
                      floor@x 00DB               __CFG_BOREN$BOHW 000000                        sin@sgn 01C1  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8               ISR_Bassa@F15917 01FA                  _CANSetFilter 0D52  
                  ___flge@ff1 00C7                    ___flge@ff2 00CB                  ___xxtofl@arg 00D7  
                ___xxtofl@exp 00D6                  ___xxtofl@val 00CD                    __accesstop 0060  
     __end_of__initialization 6488            __end_of_CANSetMask 4A20               __CFG_PBADEN$OFF 000000  
                  ___flneg@f1 00BF                 ?_park_routine 0001                  eval_poly@res 00CB  
               ___rparam_used 000001                    ___fltol@f1 00C3           __size_ofi1_delay_ms 0032  
              __pcstackCOMRAM 0001                     ?_ISR_Alta 0001                  __pidataBANK0 6700  
                __pidataBANK1 66F6                 __end_of_floor 5E56                 __end_of_frexp 63CE  
            ??_configurations 0093                     ?i1___wmul 0018         CANSetFilter@numBuffer 0082  
                _actual_speed 0154         __size_of_CANisTxReady 0024                       ??_floor 00DF  
                     ??_frexp 007F      __end_of_CANOperationMode 66F6                    __pbssBANK1 0100  
             _sensor_distance 0100            __size_of_eval_poly 0118             ?i1_CANsendMessage 0018  
                  _data_brake 0179                ??_park_routine 01F2       __size_of_CANsendMessage 078C  
                  _data_speed 0189                    _activation 0219            ??i1_CANsendMessage 0020  
          __size_of_parallelo 0276          __size_of_park_search 01D4             _old_alignment_gap 014C  
                  ??_ISR_Alta 0008                       ?___flge 00C7                       ?___wmul 0079  
                     _CANSTAT 000F6E                  _CANisTxReady 66BC                       _BRGCON1 000F70  
                     _BRGCON2 000F71                       _BRGCON3 000F72                    ??i1___wmul 001C  
                   ?_can_send 0001                     ?___xxtofl 00CD        __size_of_CANInitialize 01C6  
                   ?_delay_ms 007F                       _RXB0DLC 000F65                       _RXB1DLC 000F55  
                     _RXB0CON 000F60                       _RXB1CON 000F50                       _TXB0DLC 000F45  
                     _TXB1DLC 000F35                       _TXB2DLC 000F25           CANsendMessage@flags 0080  
                     __Hparam 0000                    _left_speed 015A                       __Lparam 0000  
            delay_ms@value_ms 007F               __size_of___flge 0190                    _matematica 2674  
                     ___fladd 310A                       ___fldiv 42C2                       ___flneg 656A  
                     ___flmul 35B2                       ___flsub 64E4                       ___fltol 5F6E  
             __size_of___wmul 0036                       ___lwdiv 6492                  __psmallconst 0D00  
        CANInitialize@propSeg 0090                       __pcinit 643A             __end_of_eval_poly 5F6E  
                     _delay_s 666A                       __ramtop 0D00                       __ptext0 5C0A  
                     __ptext1 5512                       __ptext2 3A58                       __ptext3 504A  
                     __ptext4 607A                       __ptext5 1858                       __ptext6 66BC  
                     __ptext7 663E                       __ptext8 2674                       __ptext9 617E  
                   _T0CONbits 000FD5                  ??i1_delay_ms 0020                       _counter 0041  
                  ??_can_send 0089                  __size_of_abs 002C                  __size_of_cos 00E4  
             atan@val_squared 01B2                  __size_of_sin 0318                    ??___xxtofl 00D1  
                     atan@val 01B6             __end_of_parallelo 52C0                    ??_delay_ms 0081  
                     asin@sgn 01BA        CANreceiveMessage@error 0022               _start_operation 0226  
              __pintcode_body 6262          end_of_initialization 6488                     i1u1130_25 213A  
                   i1u1141_20 22D8                     i1u1141_25 22CE                     i1u1142_20 231E  
                   i1u1142_25 2314                     i1u1143_25 236A                     i1u1128_20 20A8  
                   i1u1128_25 209E                     i1u1065_20 2CB6                     i1u1129_20 20EE  
                   i1u1129_25 20E4                     i1u1065_26 2CB8                     i1u1066_20 2CE4  
                   i1u1154_20 2508                     i1u1074_25 2E6A                     i1u1154_25 24FE  
                   i1u1066_26 2CE6                     i1u1155_20 254E                     i1u1155_25 2544  
                   i1u1076_20 2F3E                     i1u1172_20 015E                     i1u1068_25 2CFA  
                   i1u1156_25 259A                     i1u1076_26 2F40                     i1u1077_20 2F68  
                   i1u1085_25 30E0                     i1u1077_26 2F6A                       int_func 6262  
                   i1u1174_20 0168                     i1u1175_20 016A                     i1u1079_25 2F7C  
                   i1u1192_27 01B6                     i1u1193_27 662A                 _CANInitialize 58B4  
          __end_ofi1_delay_ms 663E                     _ISR_Bassa 0018                       postdec1 000FE5  
                     postdec2 000FDD                       postinc0 000FEE                       postinc2 000FDE  
                     sqrt@grs 00D2                       sqrt@exp 00D6         i1___wmul@multiplicand 001A  
     _steering_correction_dir 0227                     _PORTBbits 000F81                CANSetMask@mask 0079  
              CANSetMask@tamp 0083                  _distance_set 0120                CANSetMask@type 007D  
        __end_of_park_routine 3EF8                   ___fladd@grs 00BE                 ___xxtofl@sign 00D5  
                   _TRISBbits 000F93                   ___fldiv@grs 008C                   ___fldiv@rem 0086  
                   _MUX_index 003E                    _pulse_time 015C       _clock_counter_reference 0034  
                 ___flmul@grs 00A0                _CANsendMessage 1858              CANInitialize@BRP 008A  
            CANInitialize@SJW 0089                ?_CANInitialize 0087                    ?_ISR_Bassa 0001  
                 ?_matematica 0001                __end_of___flge 5C0A             __size_of_ISR_Alta 6332  
              __end_of___wmul 65D8                    floor@expon 00E3           start_initialization 643A  
           __size_ofi1___wmul 0026                    eval_poly@d 00C3                    eval_poly@n 00C5  
                  eval_poly@x 00BF                   __end_of_abs 666A                   __end_of_cos 6262  
                 __end_of_sin 4D38           CANSetMask@numBuffer 0082                 _data_speed_rx 0118  
      __end_of_CANsendMessage 1FE4             ?_CANOperationMode 0001                 _data_steering 0191  
          i1delay_ms@value_ms 001E                    frexp@value 0079            ??_CANOperationMode 0079  
           _distance_received 021E    CANInitialize@FilterConfig1 0091    CANInitialize@FilterConfig2 0092  
         _steering_correction 0042                      ??___flge 00CF  ISR_Bassa@MUX_index_collision 0075  
                    ??___wmul 007D                   __pdataBANK0 00E6                   __pdataBANK1 01F6  
            __CFG_LPT1OSC$OFF 000000     __size_ofi1_CANsendMessage 0690                     ___fladd@a 00AF  
                   ___fladd@b 00AB        CANInitialize@phaseSeg1 0087        CANInitialize@phaseSeg2 0088  
                   ___fldiv@a 007D                     ___fldiv@b 0079                     ___flmul@a 0096  
                   ___flmul@b 0092                   __pbssCOMRAM 0028                     ___flsub@a 01AD  
                   ___flsub@b 01A9                 __pcstackBANK0 0060                 __pcstackBANK1 01A9  
               __pcstackBANK2 0200                   _BRGCON2bits 000F71                   _BRGCON3bits 000F72  
           __size_of_can_send 0104             __size_of___xxtofl 01CE             __size_of_delay_ms 0034  
             ?_CANsendMessage 0079           __size_of_matematica 058A               ??_CANInitialize 008C  
                   _asin$3700 01C2                     _asin$3701 01BE                     _asin$3699 01CA  
                  sin@coeff_a 0D2D                    sin@coeff_b 0D41                 ??_park_search 01CE  
               _alignment_gap 0028            CANSetFilter@filter 0079                     _data_test 0199  
            ___lwdiv@dividend 0001                    ISR_Bassa@i 0078                   ??_ISR_Bassa 0060  
                   __pintcode 0008                      ?___fladd 00AB                      ?___fldiv 0079  
                    ?___flneg 00BF                      ?___flmul 0092                      ?___flsub 01A9  
                    ?___fltol 00C3         __size_of_park_routine 04A0                      ?___lwdiv 0001  
                 __pintcodelo 0018                      ?_delay_s 0001                   __smallconst 0D00  
                 _COMSTATbits 000F74                     _eval_poly 5E56                     _larghezza 01F6  
            ___lwdiv@quotient 0005                __size_of_floor 0124                __size_of_frexp 0094  
     __size_of_configurations 006C                     _parallelo 504A                  _new_distance 0222  
       CANreceiveMessage@tamp 0023                _prima_sterzata 0150                ___wmul@product 007D  
                    _LATBbits 000F8A                     atan@recip 01B1                  _park_routine 3A58  
_delay_quartz_frequency_value 00E6                      _IPR3bits 000FA5                      _PIE3bits 000FA3  
                    _PIR3bits 000FA4                      _RXB0EIDH 000F63                      _RXB0EIDL 000F64  
                    _RXB1EIDH 000F53                      _RXB1EIDL 000F54                      _ISR_Alta 0008  
                   _set_speed 0160                      _RCONbits 000FD0              __CFG_WDTPS$32768 000000  
                    _RXB0SIDH 000F61                      _RXB0SIDL 000F62                      _RXF0EIDH 000F02  
                    _RXB1SIDH 000F51                      _RXF0EIDL 000F03                      _RXB1SIDL 000F52  
                    _RXF1EIDH 000F06                      _RXF1EIDL 000F07                      _RXF2EIDH 000F0A  
                    _RXF2EIDL 000F0B                      _RXF3EIDH 000F0E                      _RXF3EIDL 000F0F  
                    _RXF4EIDH 000F12                      _RXF4EIDL 000F13                      _RXF5EIDH 000F16  
                    _RXF5EIDL 000F17                      _RXF0SIDH 000F00                      _RXF0SIDL 000F01  
         __end_of_park_search 56E6                      _TXB0EIDH 000F43                      _RXF1SIDH 000F04  
                    _TXB0EIDL 000F44                      _RXF1SIDL 000F05                      _TXB1EIDH 000F33  
                    _RXF2SIDH 000F08                      _TXB1EIDL 000F34                      _RXF2SIDL 000F09  
                    _TXB2EIDH 000F23                      _RXF3SIDH 000F0C                      _TXB2EIDL 000F24  
                    _RXF3SIDL 000F0D                      _RXF4SIDH 000F10                      _RXF4SIDL 000F11  
                    _RXF5SIDH 000F14                      _RXF5SIDL 000F15                      _RXM0EIDH 000F1A  
                    _RXM0EIDL 000F1B                      _TXB0SIDH 000F41                      _RXM1EIDH 000F1E  
                    _TXB0SIDL 000F42                      _RXM1EIDL 000F1F                      _TXB1SIDH 000F31  
                    _TXB1SIDL 000F32                      _TXB2SIDH 000F21                      _TXB2SIDL 000F22  
                    _RXM0SIDH 000F18                      _RXM0SIDL 000F19                      _RXM1SIDH 000F1C  
                    _RXM1SIDL 000F1D                   _distance_dx 0038                   _distance_sx 003A  
                    _RXERRCNT 000F75                      _TXERRCNT 000F76             ___wmul@multiplier 0079  
                    i1___wmul 6696                    ?_eval_poly 00BF           __end_ofatan@coeff_a 0D19  
         __end_ofatan@coeff_b 0D2D                 ?_CANSetFilter 0079                   _INTCON2bits 000FF1  
                   copy_data0 646A                    _CANCONbits 000F6F                    ?_parallelo 0001  
            _distance_average 0036                     frexp@eptr 007D                      __Hrparam 0000  
                _RXB0SIDLbits 000F62                      __Lrparam 0000                  _RXB1SIDLbits 000F52  
                ??_matematica 00E5                 _request_sent1 0225              __size_of___fladd 04A8  
                  _CANSetMask 4682              __size_of___fldiv 03C0              __size_of___flneg 0038  
            __size_of___flmul 04A6              __size_of___flsub 0048              __size_of___fltol 010C  
            i1_CANsendMessage 1FE4                      _cos$3702 01D2              __size_of___lwdiv 0052  
            __size_of_delay_s 002C                      _can_send 607A                      ___xxtofl 56E6  
                _RXF0SIDLbits 000F01                      _delay_ms 65D8               ___lwdiv@divisor 0003  
                _RXF1SIDLbits 000F05               ___lwdiv@counter 0007         i1CANsendMessage@flags 001F  
              ??_CANSetFilter 007E                      __ptext10 4A20                      __ptext11 5D32  
                    __ptext20 656A                      __ptext12 633A                      __ptext21 5E56  
                    __ptext13 56E6                      __ptext30 58B4                      __ptext22 35B2  
                    __ptext14 5F6E                      __ptext31 4682                      __ptext23 310A  
                    __ptext15 64E4                      __ptext40 6492                      __ptext32 0D52  
                    __ptext24 5A7A                      __ptext16 4D38                      __ptext33 66E0  
                    __ptext25 42C2                      __ptext17 3EF8                      __ptext26 666A  
                    __ptext18 52C0                      __ptext35 660C                      __ptext27 65D8  
                    __ptext19 652C                      __ptext36 6696                      __ptext28 65A2  
                    __ptext37 1FE4                      __ptext29 63CE                      __ptext38 2BFE  
                _RXF2SIDLbits 000F09                      _sin$3703 01B9                  _RXF3SIDLbits 000F0D  
                    _distance 0156            __end_of_matematica 2BFE                  _RXF4SIDLbits 000F11  
                _RXF5SIDLbits 000F15      CANsendMessage@dataLength 007F                 __size_of_fabs 003E  
               __size_of_atan 0252                 __size_of_asin 0312                 __size_of_main 0128  
               __size_of_sqrt 03CA                   _park_search 5512          CANreceiveMessage@msg 0018  
                _TXB0SIDLbits 000F42                  _TXB1SIDLbits 000F32                  _TXB2SIDLbits 000F22  
                    int$flags 0045     __size_of_CANOperationMode 0016                 ?_CANisTxReady 0001  
                 atan@coeff_a 0D01                   atan@coeff_b 0D19                   _RXB0DLCbits 000F65  
                 _RXB1DLCbits 000F55                  _RXM0SIDLbits 000F19                   _RXB0CONbits 000F60  
                 _RXB1CONbits 000F50             _CANreceiveMessage 2BFE                  _RXM1SIDLbits 000F1D  
                  _INTCONbits 000FF2                   ??_eval_poly 00C7              ??_CANsendMessage 0081  
  i1CANsendMessage@dataLength 001E            ?_CANreceiveMessage 0018                  _request_sent 0224  
              _configurations 63CE                     sqrt@tfrac 00CD      CANsendMessage@identifier 0079  
                 ??_parallelo 00E4                      intlevel1 0000                      intlevel2 0000  
            CANSetFilter@tamp 0083              CANSetFilter@type 007D           ??_CANreceiveMessage 001A  
        i1CANsendMessage@data 001C          i1CANsendMessage@tamp 0024                   _TXB0DLCbits 000F45  
                 _right_speed 015E                   _TXB1DLCbits 000F35                   _TXB0CONbits 000F40  
                 _TXB2DLCbits 000F25                   _TXB1CONbits 000F30                   _TXB2CONbits 000F20  
        CANOperationMode@mode 0079                   ?_CANSetMask 0079                ??_CANisTxReady 0079  
              _distance_error 021D               _matematica$3692 01D6               _matematica$3693 01DA  
             _matematica$3694 01DE               _matematica$3695 01E2               _matematica$3696 01EE  
             _matematica$3697 01E6               _matematica$3698 01EA     __end_of_CANreceiveMessage 310A  
                    sqrt@frac 00DC                      sqrt@sign 00CB                      sqrt@root 00D8  
  i1CANsendMessage@identifier 0018                   _timerValue2 003C                    _TMR3H_temp 003F  
      __end_of_configurations 643A                    _TMR3L_temp 0040                 ___fladd@signs 00BB  
               _distance_wait 0220                  ___fladd@aexp 00BC            _old_dir_correction 0223  
                ___fladd@bexp 00BD         __end_of_CANInitialize 5A7A         _sensor_distance_short 01A1  
         _sensor_distance_old 0128  
