

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat May 28 17:30:07 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2685
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    63                           	psect	param0,global,class=BANK0,space=1,delta=1
    64                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    65  0000                     
    66                           	psect	idataCOMRAM
    67  0066E2                     __pidataCOMRAM:
    68                           	opt stack 0
    69                           
    70                           ;initializer for _spazio_parcheggio
    71  0066E2  0064               	dw	100
    72                           
    73                           	psect	idataBANK0
    74  0066E4                     __pidataBANK0:
    75                           	opt stack 0
    76                           
    77                           ;initializer for _delay_quartz_frequency_value
    78  0066E4  10                 	db	16
    79                           
    80                           	psect	idataBANK1
    81  0066DA                     __pidataBANK1:
    82                           	opt stack 0
    83                           
    84                           ;initializer for _larghezza
    85  0066DA  0000               	dw	0
    86  0066DC  4200               	dw	16896
    87                           
    88                           ;initializer for _raggio
    89  0066DE  0000               	dw	0
    90  0066E0  4282               	dw	17026
    91                           
    92                           	psect	smallconst
    93  000D00                     __psmallconst:
    94                           	opt stack 0
    95  000D00  00                 	db	0
    96  000D01                     atan@coeff_a:
    97                           	opt stack 0
    98  000D01  3C06               	dw	15366
    99  000D03  4204               	dw	16900
   100  000D05  9F7D               	dw	40829
   101  000D07  426A               	dw	17002
   102  000D09  905C               	dw	36956
   103  000D0B  4201               	dw	16897
   104  000D0D  4D60               	dw	19808
   105  000D0F  40BB               	dw	16571
   106  000D11  EC51               	dw	60497
   107  000D13  3E47               	dw	15943
   108  000D15  8DDE               	dw	36318
   109  000D17  BB1F               	dw	47903
   110  000D19                     __end_ofatan@coeff_a:
   111                           	opt stack 0
   112  000D19                     atan@coeff_b:
   113                           	opt stack 0
   114  000D19  3C06               	dw	15366
   115  000D1B  4204               	dw	16900
   116  000D1D  59C0               	dw	22976
   117  000D1F  428B               	dw	17035
   118  000D21  0474               	dw	1140
   119  000D23  4244               	dw	16964
   120  000D25  9BF9               	dw	39929
   121  000D27  414F               	dw	16719
   122  000D29  0000               	dw	0
   123  000D2B  3F80               	dw	16256
   124  000D2D                     __end_ofatan@coeff_b:
   125                           	opt stack 0
   126  000D2D                     sin@coeff_a:
   127                           	opt stack 0
   128  000D2D  F3EC               	dw	62444
   129  000D2F  484A               	dw	18506
   130  000D31  9535               	dw	38197
   131  000D33  C795               	dw	51093
   132  000D35  C117               	dw	49431
   133  000D37  45DC               	dw	17884
   134  000D39  DBFD               	dw	56317
   135  000D3B  C36D               	dw	50029
   136  000D3D  B372               	dw	45938
   137  000D3F  4033               	dw	16435
   138  000D41                     __end_ofsin@coeff_a:
   139                           	opt stack 0
   140  000D41                     sin@coeff_b:
   141                           	opt stack 0
   142  000D41  342B               	dw	13355
   143  000D43  4801               	dw	18433
   144  000D45  9D7F               	dw	40319
   145  000D47  45B0               	dw	17840
   146  000D49  FFE7               	dw	65511
   147  000D4B  42D9               	dw	17113
   148  000D4D  0000               	dw	0
   149  000D4F  3F80               	dw	16256
   150  000D51                     __end_ofsin@coeff_b:
   151                           	opt stack 0
   152  0000                     _RXB1CON	set	3920
   153  0000                     _RXB1CONbits	set	3920
   154  0000                     _RXB1D0	set	3926
   155  0000                     _RXB1D1	set	3927
   156  0000                     _RXB1D2	set	3928
   157  0000                     _RXB1D3	set	3929
   158  0000                     _RXB1D4	set	3930
   159  0000                     _RXB1D5	set	3931
   160  0000                     _RXB1D6	set	3932
   161  0000                     _RXB1D7	set	3933
   162  0000                     _RXB1DLC	set	3925
   163  0000                     _RXB1DLCbits	set	3925
   164  0000                     _RXB1EIDH	set	3923
   165  0000                     _RXB1EIDL	set	3924
   166  0000                     _RXB1SIDH	set	3921
   167  0000                     _RXB1SIDL	set	3922
   168  0000                     _RXB1SIDLbits	set	3922
   169  0000                     _RXF0EIDH	set	3842
   170  0000                     _RXF0EIDL	set	3843
   171  0000                     _RXF0SIDH	set	3840
   172  0000                     _RXF0SIDL	set	3841
   173  0000                     _RXF0SIDLbits	set	3841
   174  0000                     _RXF1EIDH	set	3846
   175  0000                     _RXF1EIDL	set	3847
   176  0000                     _RXF1SIDH	set	3844
   177  0000                     _RXF1SIDL	set	3845
   178  0000                     _RXF1SIDLbits	set	3845
   179  0000                     _RXF2EIDH	set	3850
   180  0000                     _RXF2EIDL	set	3851
   181  0000                     _RXF2SIDH	set	3848
   182  0000                     _RXF2SIDL	set	3849
   183  0000                     _RXF2SIDLbits	set	3849
   184  0000                     _RXF3EIDH	set	3854
   185  0000                     _RXF3EIDL	set	3855
   186  0000                     _RXF3SIDH	set	3852
   187  0000                     _RXF3SIDL	set	3853
   188  0000                     _RXF3SIDLbits	set	3853
   189  0000                     _RXF4EIDH	set	3858
   190  0000                     _RXF4EIDL	set	3859
   191  0000                     _RXF4SIDH	set	3856
   192  0000                     _RXF4SIDL	set	3857
   193  0000                     _RXF4SIDLbits	set	3857
   194  0000                     _RXF5EIDH	set	3862
   195  0000                     _RXF5EIDL	set	3863
   196  0000                     _RXF5SIDH	set	3860
   197  0000                     _RXF5SIDL	set	3861
   198  0000                     _RXF5SIDLbits	set	3861
   199  0000                     _RXM0EIDH	set	3866
   200  0000                     _RXM0EIDL	set	3867
   201  0000                     _RXM0SIDH	set	3864
   202  0000                     _RXM0SIDL	set	3865
   203  0000                     _RXM0SIDLbits	set	3865
   204  0000                     _RXM1EIDH	set	3870
   205  0000                     _RXM1EIDL	set	3871
   206  0000                     _RXM1SIDH	set	3868
   207  0000                     _RXM1SIDL	set	3869
   208  0000                     _RXM1SIDLbits	set	3869
   209  0000                     _TXB0CONbits	set	3904
   210  0000                     _TXB0D0	set	3910
   211  0000                     _TXB0D1	set	3911
   212  0000                     _TXB0D2	set	3912
   213  0000                     _TXB0D3	set	3913
   214  0000                     _TXB0D4	set	3914
   215  0000                     _TXB0D5	set	3915
   216  0000                     _TXB0D6	set	3916
   217  0000                     _TXB0D7	set	3917
   218  0000                     _TXB0DLC	set	3909
   219  0000                     _TXB0DLCbits	set	3909
   220  0000                     _TXB0EIDH	set	3907
   221  0000                     _TXB0EIDL	set	3908
   222  0000                     _TXB0SIDH	set	3905
   223  0000                     _TXB0SIDL	set	3906
   224  0000                     _TXB0SIDLbits	set	3906
   225  0000                     _TXB1CONbits	set	3888
   226  0000                     _TXB1D0	set	3894
   227  0000                     _TXB1D1	set	3895
   228  0000                     _TXB1D2	set	3896
   229  0000                     _TXB1D3	set	3897
   230  0000                     _TXB1D4	set	3898
   231  0000                     _TXB1D5	set	3899
   232  0000                     _TXB1D6	set	3900
   233  0000                     _TXB1D7	set	3901
   234  0000                     _TXB1DLC	set	3893
   235  0000                     _TXB1DLCbits	set	3893
   236  0000                     _TXB1EIDH	set	3891
   237  0000                     _TXB1EIDL	set	3892
   238  0000                     _TXB1SIDH	set	3889
   239  0000                     _TXB1SIDL	set	3890
   240  0000                     _TXB1SIDLbits	set	3890
   241  0000                     _TXB2CONbits	set	3872
   242  0000                     _TXB2D0	set	3878
   243  0000                     _TXB2D1	set	3879
   244  0000                     _TXB2D2	set	3880
   245  0000                     _TXB2D3	set	3881
   246  0000                     _TXB2D4	set	3882
   247  0000                     _TXB2D5	set	3883
   248  0000                     _TXB2D6	set	3884
   249  0000                     _TXB2D7	set	3885
   250  0000                     _TXB2DLC	set	3877
   251  0000                     _TXB2DLCbits	set	3877
   252  0000                     _TXB2EIDH	set	3875
   253  0000                     _TXB2EIDL	set	3876
   254  0000                     _TXB2SIDH	set	3873
   255  0000                     _TXB2SIDL	set	3874
   256  0000                     _TXB2SIDLbits	set	3874
   257  0000                     _ADCON1	set	4033
   258  0000                     _BRGCON1	set	3952
   259  0000                     _BRGCON2	set	3953
   260  0000                     _BRGCON2bits	set	3953
   261  0000                     _BRGCON3	set	3954
   262  0000                     _BRGCON3bits	set	3954
   263  0000                     _CANCON	set	3951
   264  0000                     _CANCONbits	set	3951
   265  0000                     _CANSTAT	set	3950
   266  0000                     _COMSTATbits	set	3956
   267  0000                     _INTCON2bits	set	4081
   268  0000                     _INTCONbits	set	4082
   269  0000                     _IPR3bits	set	4005
   270  0000                     _LATA	set	3977
   271  0000                     _LATB	set	3978
   272  0000                     _LATBbits	set	3978
   273  0000                     _LATC	set	3979
   274  0000                     _PIE3bits	set	4003
   275  0000                     _PIR3bits	set	4004
   276  0000                     _PORTA	set	3968
   277  0000                     _PORTBbits	set	3969
   278  0000                     _RCONbits	set	4048
   279  0000                     _RXB0CON	set	3936
   280  0000                     _RXB0CONbits	set	3936
   281  0000                     _RXB0D0	set	3942
   282  0000                     _RXB0D1	set	3943
   283  0000                     _RXB0D2	set	3944
   284  0000                     _RXB0D3	set	3945
   285  0000                     _RXB0D4	set	3946
   286  0000                     _RXB0D5	set	3947
   287  0000                     _RXB0D6	set	3948
   288  0000                     _RXB0D7	set	3949
   289  0000                     _RXB0DLC	set	3941
   290  0000                     _RXB0DLCbits	set	3941
   291  0000                     _RXB0EIDH	set	3939
   292  0000                     _RXB0EIDL	set	3940
   293  0000                     _RXB0SIDH	set	3937
   294  0000                     _RXB0SIDL	set	3938
   295  0000                     _RXB0SIDLbits	set	3938
   296  0000                     _RXERRCNT	set	3957
   297  0000                     _T0CON	set	4053
   298  0000                     _T0CONbits	set	4053
   299  0000                     _T3CON	set	4017
   300  0000                     _TMR0H	set	4055
   301  0000                     _TMR0L	set	4054
   302  0000                     _TMR3H	set	4019
   303  0000                     _TMR3L	set	4018
   304  0000                     _TRISA	set	3986
   305  0000                     _TRISB	set	3987
   306  0000                     _TRISBbits	set	3987
   307  0000                     _TRISC	set	3988
   308  0000                     _TXERRCNT	set	3958
   309                           
   310                           ; #config settings
   311  000D51  00                 	db	0	; dummy byte at the end
   312  0000                     
   313                           	psect	cinit
   314  00634A                     __pcinit:
   315                           	opt stack 0
   316  00634A                     start_initialization:
   317                           	opt stack 0
   318  00634A                     __initialization:
   319                           	opt stack 0
   320                           
   321                           ; Clear objects allocated to BANK1 (139 bytes)
   322  00634A  EE01  F000         	lfsr	0,__pbssBANK1
   323  00634E  0E8B               	movlw	139
   324  006350                     clear_0:
   325  006350  6AEE               	clrf	postinc0,c
   326  006352  06E8               	decf	wreg,f,c
   327  006354  E1FD               	bnz	clear_0
   328                           
   329                           ; Clear objects allocated to BANK0 (16 bytes)
   330  006356  EE00  F0D8         	lfsr	0,__pbssBANK0
   331  00635A  0E10               	movlw	16
   332  00635C                     clear_1:
   333  00635C  6AEE               	clrf	postinc0,c
   334  00635E  06E8               	decf	wreg,f,c
   335  006360  E1FD               	bnz	clear_1
   336                           
   337                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   338  006362  6A52               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   339  006364  6A51               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   340                           
   341                           ; Clear objects allocated to COMRAM (41 bytes)
   342  006366  EE00  F001         	lfsr	0,__pbssCOMRAM
   343  00636A  0E29               	movlw	41
   344  00636C                     clear_2:
   345  00636C  6AEE               	clrf	postinc0,c
   346  00636E  06E8               	decf	wreg,f,c
   347  006370  E1FD               	bnz	clear_2
   348                           
   349                           ; Initialize objects allocated to BANK1 (8 bytes)
   350                           ; load TBLPTR registers with __pidataBANK1
   351  006372  0EDA               	movlw	low __pidataBANK1
   352  006374  6EF6               	movwf	tblptrl,c
   353  006376  0E66               	movlw	high __pidataBANK1
   354  006378  6EF7               	movwf	tblptrh,c
   355  00637A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   356  00637C  6EF8               	movwf	tblptru,c
   357  00637E  EE01  F0E8         	lfsr	0,__pdataBANK1
   358  006382  EE10 F008          	lfsr	1,8
   359  006386                     copy_data0:
   360  006386  0009               	tblrd		*+
   361  006388  CFF5 FFEE          	movff	tablat,postinc0
   362  00638C  50E5               	movf	postdec1,w,c
   363  00638E  50E1               	movf	fsr1l,w,c
   364  006390  E1FA               	bnz	copy_data0
   365                           
   366                           ; Initialize objects allocated to BANK0 (1 bytes)
   367                           ; load TBLPTR registers with __pidataBANK0
   368  006392  0EE4               	movlw	low __pidataBANK0
   369  006394  6EF6               	movwf	tblptrl,c
   370  006396  0E66               	movlw	high __pidataBANK0
   371  006398  6EF7               	movwf	tblptrh,c
   372  00639A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   373  00639C  6EF8               	movwf	tblptru,c
   374  00639E  0009               	tblrd		*+	;fetch initializer
   375  0063A0  CFF5 F0E8          	movff	tablat,__pdataBANK0
   376                           
   377                           ; Initialize objects allocated to COMRAM (2 bytes)
   378                           ; load TBLPTR registers with __pidataCOMRAM
   379  0063A4  0EE2               	movlw	low __pidataCOMRAM
   380  0063A6  6EF6               	movwf	tblptrl,c
   381  0063A8  0E66               	movlw	high __pidataCOMRAM
   382  0063AA  6EF7               	movwf	tblptrh,c
   383  0063AC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   384  0063AE  6EF8               	movwf	tblptru,c
   385  0063B0  0009               	tblrd		*+	;fetch initializer
   386  0063B2  CFF5 F053          	movff	tablat,__pdataCOMRAM
   387  0063B6  0009               	tblrd		*+	;fetch initializer
   388  0063B8  CFF5 F054          	movff	tablat,__pdataCOMRAM+1
   389  0063BC                     end_of_initialization:
   390                           	opt stack 0
   391  0063BC                     __end_of__initialization:
   392                           	opt stack 0
   393  0063BC  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   394  0063BE  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   395  0063C0  0100               	movlb	0
   396  0063C2  EFF8  F030         	goto	_main	;jump to C main() function
   397                           tblptru	equ	0xFF8
   398                           tblptrh	equ	0xFF7
   399                           tblptrl	equ	0xFF6
   400                           tablat	equ	0xFF5
   401                           postinc0	equ	0xFEE
   402                           wreg	equ	0xFE8
   403                           postdec1	equ	0xFE5
   404                           fsr1l	equ	0xFE1
   405                           
   406                           	psect	bitbssCOMRAM
   407  000288                     __pbitbssCOMRAM:
   408                           	opt stack 0
   409  000288                     _activation:
   410                           	opt stack 0
   411  000288                     	ds	1
   412  000289                     _asd:
   413                           	opt stack 0
   414  000289                     	ds	1
   415  00028A                     _avvicinamento:
   416                           	opt stack 0
   417  00028A                     	ds	1
   418  00028B                     _dir:
   419                           	opt stack 0
   420  00028B                     	ds	1
   421  00028C                     _distance_error:
   422                           	opt stack 0
   423  00028C                     	ds	1
   424  00028D                     _distance_received:
   425                           	opt stack 0
   426  00028D                     	ds	1
   427  00028E                     _distance_received1:
   428                           	opt stack 0
   429  00028E                     	ds	1
   430  00028F                     _distance_wait:
   431                           	opt stack 0
   432  00028F                     	ds	1
   433  000290                     _first:
   434                           	opt stack 0
   435  000290                     	ds	1
   436  000291                     _new_distance:
   437                           	opt stack 0
   438  000291                     	ds	1
   439  000292                     _old_dir_correction:
   440                           	opt stack 0
   441  000292                     	ds	1
   442  000293                     _request_sent:
   443                           	opt stack 0
   444  000293                     	ds	1
   445  000294                     _request_sent1:
   446                           	opt stack 0
   447  000294                     	ds	1
   448  000295                     _start_operation:
   449                           	opt stack 0
   450  000295                     	ds	1
   451  000296                     _steering_correction_dir:
   452                           	opt stack 0
   453  000296                     	ds	1
   454                           tblptru	equ	0xFF8
   455                           tblptrh	equ	0xFF7
   456                           tblptrl	equ	0xFF6
   457                           tablat	equ	0xFF5
   458                           postinc0	equ	0xFEE
   459                           wreg	equ	0xFE8
   460                           postdec1	equ	0xFE5
   461                           fsr1l	equ	0xFE1
   462                           
   463                           	psect	bssCOMRAM
   464  000001                     __pbssCOMRAM:
   465                           	opt stack 0
   466  000001                     _sensor_distance:
   467                           	opt stack 0
   468  000001                     	ds	16
   469  000011                     _x:
   470                           	opt stack 0
   471  000011                     	ds	4
   472  000015                     _actual_speed:
   473                           	opt stack 0
   474  000015                     	ds	2
   475  000017                     _distance:
   476                           	opt stack 0
   477  000017                     	ds	2
   478  000019                     _distance_dx:
   479                           	opt stack 0
   480  000019                     	ds	2
   481  00001B                     _distance_sx:
   482                           	opt stack 0
   483  00001B                     	ds	2
   484  00001D                     _left_speed:
   485                           	opt stack 0
   486  00001D                     	ds	2
   487  00001F                     _pulse_time:
   488                           	opt stack 0
   489  00001F                     	ds	2
   490  000021                     _right_speed:
   491                           	opt stack 0
   492  000021                     	ds	2
   493  000023                     _timerValue2:
   494                           	opt stack 0
   495  000023                     	ds	2
   496  000025                     _MUX_index:
   497                           	opt stack 0
   498  000025                     	ds	1
   499  000026                     _TMR3H_temp:
   500                           	opt stack 0
   501  000026                     	ds	1
   502  000027                     _TMR3L_temp:
   503                           	opt stack 0
   504  000027                     	ds	1
   505  000028                     _counter:
   506                           	opt stack 0
   507  000028                     	ds	1
   508  000029                     _steering_correction:
   509                           	opt stack 0
   510  000029                     	ds	1
   511                           tblptru	equ	0xFF8
   512                           tblptrh	equ	0xFF7
   513                           tblptrl	equ	0xFF6
   514                           tablat	equ	0xFF5
   515                           postinc0	equ	0xFEE
   516                           wreg	equ	0xFE8
   517                           postdec1	equ	0xFE5
   518                           fsr1l	equ	0xFE1
   519                           
   520                           	psect	dataCOMRAM
   521  000053                     __pdataCOMRAM:
   522                           	opt stack 0
   523  000053                     _spazio_parcheggio:
   524                           	opt stack 0
   525  000053                     	ds	2
   526                           tblptru	equ	0xFF8
   527                           tblptrh	equ	0xFF7
   528                           tblptrl	equ	0xFF6
   529                           tablat	equ	0xFF5
   530                           postinc0	equ	0xFEE
   531                           wreg	equ	0xFE8
   532                           postdec1	equ	0xFE5
   533                           fsr1l	equ	0xFE1
   534                           
   535                           	psect	bssBANK0
   536  0000D8                     __pbssBANK0:
   537                           	opt stack 0
   538  0000D8                     _alignment_gap:
   539                           	opt stack 0
   540  0000D8                     	ds	4
   541  0000DC                     _z:
   542                           	opt stack 0
   543  0000DC                     	ds	4
   544  0000E0                     _clock_counter_reference:
   545                           	opt stack 0
   546  0000E0                     	ds	2
   547  0000E2                     _distance_average:
   548                           	opt stack 0
   549  0000E2                     	ds	2
   550  0000E4                     _errno:
   551                           	opt stack 0
   552  0000E4                     	ds	2
   553  0000E6                     _set_speed:
   554                           	opt stack 0
   555  0000E6                     	ds	2
   556                           tblptru	equ	0xFF8
   557                           tblptrh	equ	0xFF7
   558                           tblptrl	equ	0xFF6
   559                           tablat	equ	0xFF5
   560                           postinc0	equ	0xFEE
   561                           wreg	equ	0xFE8
   562                           postdec1	equ	0xFE5
   563                           fsr1l	equ	0xFE1
   564                           
   565                           	psect	dataBANK0
   566  0000E8                     __pdataBANK0:
   567                           	opt stack 0
   568  0000E8                     _delay_quartz_frequency_value:
   569                           	opt stack 0
   570  0000E8                     	ds	1
   571                           tblptru	equ	0xFF8
   572                           tblptrh	equ	0xFF7
   573                           tblptrl	equ	0xFF6
   574                           tablat	equ	0xFF5
   575                           postinc0	equ	0xFEE
   576                           wreg	equ	0xFE8
   577                           postdec1	equ	0xFE5
   578                           fsr1l	equ	0xFE1
   579                           
   580                           	psect	bssBANK1
   581  000100                     __pbssBANK1:
   582                           	opt stack 0
   583  000100                     _MUX_select:
   584                           	opt stack 0
   585  000100                     	ds	8
   586  000108                     _data_speed_rx:
   587                           	opt stack 0
   588  000108                     	ds	8
   589  000110                     _distance_set:
   590                           	opt stack 0
   591  000110                     	ds	8
   592  000118                     _sensor_distance_old:
   593                           	opt stack 0
   594  000118                     	ds	8
   595  000120                     _J_var:
   596                           	opt stack 0
   597  000120                     	ds	4
   598  000124                     _K_var:
   599                           	opt stack 0
   600  000124                     	ds	4
   601  000128                     _Pmin:
   602                           	opt stack 0
   603  000128                     	ds	4
   604  00012C                     _alfa:
   605                           	opt stack 0
   606  00012C                     	ds	4
   607  000130                     _beta:
   608                           	opt stack 0
   609  000130                     	ds	4
   610  000134                     _bordo:
   611                           	opt stack 0
   612  000134                     	ds	4
   613  000138                     _n:
   614                           	opt stack 0
   615  000138                     	ds	4
   616  00013C                     _old_alignment_gap:
   617                           	opt stack 0
   618  00013C                     	ds	4
   619  000140                     _prima_sterzata:
   620                           	opt stack 0
   621  000140                     	ds	4
   622  000144                     _msg:
   623                           	opt stack 0
   624  000144                     	ds	15
   625  000153                     _data:
   626                           	opt stack 0
   627  000153                     	ds	8
   628  00015B                     _data_brake:
   629                           	opt stack 0
   630  00015B                     	ds	8
   631  000163                     _data_correction:
   632                           	opt stack 0
   633  000163                     	ds	8
   634  00016B                     _data_speed:
   635                           	opt stack 0
   636  00016B                     	ds	8
   637  000173                     _data_steering:
   638                           	opt stack 0
   639  000173                     	ds	8
   640  00017B                     _data_test:
   641                           	opt stack 0
   642  00017B                     	ds	8
   643  000183                     _sensor_distance_short:
   644                           	opt stack 0
   645  000183                     	ds	8
   646                           tblptru	equ	0xFF8
   647                           tblptrh	equ	0xFF7
   648                           tblptrl	equ	0xFF6
   649                           tablat	equ	0xFF5
   650                           postinc0	equ	0xFEE
   651                           wreg	equ	0xFE8
   652                           postdec1	equ	0xFE5
   653                           fsr1l	equ	0xFE1
   654                           
   655                           	psect	dataBANK1
   656  0001E8                     __pdataBANK1:
   657                           	opt stack 0
   658  0001E8                     _larghezza:
   659                           	opt stack 0
   660  0001E8                     	ds	4
   661  0001EC                     _raggio:
   662                           	opt stack 0
   663  0001EC                     	ds	4
   664                           tblptru	equ	0xFF8
   665                           tblptrh	equ	0xFF7
   666                           tblptrl	equ	0xFF6
   667                           tablat	equ	0xFF5
   668                           postinc0	equ	0xFEE
   669                           wreg	equ	0xFE8
   670                           postdec1	equ	0xFE5
   671                           fsr1l	equ	0xFE1
   672                           
   673                           	psect	cstackBANK1
   674  00018B                     __pcstackBANK1:
   675                           	opt stack 0
   676  00018B                     sqrt@sign:
   677                           	opt stack 0
   678  00018B                     ___xxtofl@sign:
   679                           	opt stack 0
   680  00018B                     atan@y:
   681                           	opt stack 0
   682                           
   683                           ; 4 bytes @ 0x0
   684  00018B                     	ds	1
   685  00018C                     sqrt@i:
   686                           	opt stack 0
   687  00018C                     ___xxtofl@exp:
   688                           	opt stack 0
   689                           
   690                           ; 1 bytes @ 0x1
   691  00018C                     	ds	1
   692  00018D                     sqrt@tfrac:
   693                           	opt stack 0
   694  00018D                     ___xxtofl@arg:
   695                           	opt stack 0
   696                           
   697                           ; 4 bytes @ 0x2
   698  00018D                     	ds	2
   699  00018F                     atan@x:
   700                           	opt stack 0
   701                           
   702                           ; 4 bytes @ 0x4
   703  00018F                     	ds	2
   704  000191                     sqrt@p:
   705                           	opt stack 0
   706  000191                     floor@i:
   707                           	opt stack 0
   708                           
   709                           ; 4 bytes @ 0x6
   710  000191                     	ds	1
   711  000192                     sqrt@grs:
   712                           	opt stack 0
   713                           
   714                           ; 4 bytes @ 0x7
   715  000192                     	ds	1
   716  000193                     atan@recip:
   717                           	opt stack 0
   718                           
   719                           ; 1 bytes @ 0x8
   720  000193                     	ds	1
   721  000194                     atan@val_squared:
   722                           	opt stack 0
   723                           
   724                           ; 4 bytes @ 0x9
   725  000194                     	ds	1
   726  000195                     floor@expon:
   727                           	opt stack 0
   728                           
   729                           ; 2 bytes @ 0xA
   730  000195                     	ds	1
   731  000196                     sqrt@exp:
   732                           	opt stack 0
   733                           
   734                           ; 2 bytes @ 0xB
   735  000196                     	ds	1
   736  000197                     ?___flsub:
   737                           	opt stack 0
   738  000197                     ___flsub@b:
   739                           	opt stack 0
   740                           
   741                           ; 4 bytes @ 0xC
   742  000197                     	ds	1
   743  000198                     atan@val:
   744                           	opt stack 0
   745  000198                     sqrt@root:
   746                           	opt stack 0
   747                           
   748                           ; 4 bytes @ 0xD
   749  000198                     	ds	3
   750  00019B                     ___flsub@a:
   751                           	opt stack 0
   752                           
   753                           ; 4 bytes @ 0x10
   754  00019B                     	ds	1
   755  00019C                     sqrt@frac:
   756                           	opt stack 0
   757                           
   758                           ; 4 bytes @ 0x11
   759  00019C                     	ds	3
   760  00019F                     ?_sin:
   761                           	opt stack 0
   762  00019F                     sin@f:
   763                           	opt stack 0
   764                           
   765                           ; 4 bytes @ 0x14
   766  00019F                     	ds	1
   767  0001A0                     ?_asin:
   768                           	opt stack 0
   769  0001A0                     asin@x:
   770                           	opt stack 0
   771                           
   772                           ; 4 bytes @ 0x15
   773  0001A0                     	ds	3
   774  0001A3                     sin@y:
   775                           	opt stack 0
   776                           
   777                           ; 4 bytes @ 0x18
   778  0001A3                     	ds	1
   779  0001A4                     asin@sgn:
   780                           	opt stack 0
   781                           
   782                           ; 4 bytes @ 0x19
   783  0001A4                     	ds	3
   784  0001A7                     _sin$3756:
   785                           	opt stack 0
   786                           
   787                           ; 4 bytes @ 0x1C
   788  0001A7                     	ds	1
   789  0001A8                     _asin$3754:
   790                           	opt stack 0
   791                           
   792                           ; 4 bytes @ 0x1D
   793  0001A8                     	ds	3
   794  0001AB                     sin@x2:
   795                           	opt stack 0
   796                           
   797                           ; 4 bytes @ 0x20
   798  0001AB                     	ds	1
   799  0001AC                     _asin$3753:
   800                           	opt stack 0
   801                           
   802                           ; 4 bytes @ 0x21
   803  0001AC                     	ds	3
   804  0001AF                     sin@sgn:
   805                           	opt stack 0
   806                           
   807                           ; 1 bytes @ 0x24
   808  0001AF                     	ds	1
   809  0001B0                     asin@y:
   810                           	opt stack 0
   811                           
   812                           ; 4 bytes @ 0x25
   813  0001B0                     	ds	4
   814  0001B4                     _asin$3752:
   815                           	opt stack 0
   816                           
   817                           ; 4 bytes @ 0x29
   818  0001B4                     	ds	4
   819  0001B8                     ??_park_search:
   820  0001B8                     ?_cos:
   821                           	opt stack 0
   822  0001B8                     cos@f:
   823                           	opt stack 0
   824                           
   825                           ; 4 bytes @ 0x2D
   826  0001B8                     	ds	4
   827  0001BC                     _cos$3755:
   828                           	opt stack 0
   829                           
   830                           ; 4 bytes @ 0x31
   831  0001BC                     	ds	4
   832  0001C0                     _matematica$3745:
   833                           	opt stack 0
   834                           
   835                           ; 4 bytes @ 0x35
   836  0001C0                     	ds	4
   837  0001C4                     _matematica$3746:
   838                           	opt stack 0
   839                           
   840                           ; 4 bytes @ 0x39
   841  0001C4                     	ds	4
   842  0001C8                     _matematica$3747:
   843                           	opt stack 0
   844                           
   845                           ; 4 bytes @ 0x3D
   846  0001C8                     	ds	4
   847  0001CC                     _matematica$3748:
   848                           	opt stack 0
   849                           
   850                           ; 4 bytes @ 0x41
   851  0001CC                     	ds	4
   852  0001D0                     _matematica$3750:
   853                           	opt stack 0
   854                           
   855                           ; 4 bytes @ 0x45
   856  0001D0                     	ds	4
   857  0001D4                     _matematica$3751:
   858                           	opt stack 0
   859                           
   860                           ; 4 bytes @ 0x49
   861  0001D4                     	ds	4
   862  0001D8                     _matematica$3749:
   863                           	opt stack 0
   864                           
   865                           ; 4 bytes @ 0x4D
   866  0001D8                     	ds	4
   867  0001DC                     ??_park_routine:
   868                           
   869                           ; 0 bytes @ 0x51
   870  0001DC                     	ds	4
   871  0001E0                     _park_routine$3743:
   872                           	opt stack 0
   873                           
   874                           ; 4 bytes @ 0x55
   875  0001E0                     	ds	4
   876  0001E4                     _park_routine$3744:
   877                           	opt stack 0
   878                           
   879                           ; 4 bytes @ 0x59
   880  0001E4                     	ds	4
   881                           tblptru	equ	0xFF8
   882                           tblptrh	equ	0xFF7
   883                           tblptrl	equ	0xFF6
   884                           tablat	equ	0xFF5
   885                           postinc0	equ	0xFEE
   886                           wreg	equ	0xFE8
   887                           postdec1	equ	0xFE5
   888                           fsr1l	equ	0xFE1
   889                           
   890                           	psect	cstackBANK0
   891  000060                     __pcstackBANK0:
   892                           	opt stack 0
   893  000060                     ?___lwdiv:
   894                           	opt stack 0
   895  000060                     ___lwdiv@dividend:
   896                           	opt stack 0
   897                           
   898                           ; 2 bytes @ 0x0
   899  000060                     	ds	2
   900  000062                     ___lwdiv@divisor:
   901                           	opt stack 0
   902                           
   903                           ; 2 bytes @ 0x2
   904  000062                     	ds	2
   905  000064                     ___lwdiv@counter:
   906                           	opt stack 0
   907                           
   908                           ; 1 bytes @ 0x4
   909  000064                     	ds	1
   910  000065                     ___lwdiv@quotient:
   911                           	opt stack 0
   912                           
   913                           ; 2 bytes @ 0x5
   914  000065                     	ds	2
   915  000067                     ??_ISR_Alta:
   916                           
   917                           ; 0 bytes @ 0x7
   918  000067                     	ds	16
   919  000077                     ??_can_interpreter:
   920  000077                     ?_abs:
   921                           	opt stack 0
   922  000077                     ?___wmul:
   923                           	opt stack 0
   924  000077                     ?___fldiv:
   925                           	opt stack 0
   926  000077                     CANOperationMode@mode:
   927                           	opt stack 0
   928  000077                     _CANisTxReady$2845:
   929                           	opt stack 0
   930  000077                     ___wmul@multiplier:
   931                           	opt stack 0
   932  000077                     abs@a:
   933                           	opt stack 0
   934  000077                     CANsendMessage@identifier:
   935                           	opt stack 0
   936  000077                     CANSetMask@mask:
   937                           	opt stack 0
   938  000077                     CANSetFilter@filter:
   939                           	opt stack 0
   940  000077                     ___fldiv@b:
   941                           	opt stack 0
   942  000077                     frexp@value:
   943                           	opt stack 0
   944                           
   945                           ; 4 bytes @ 0x17
   946  000077                     	ds	2
   947  000079                     ??_abs:
   948  000079                     ___wmul@multiplicand:
   949                           	opt stack 0
   950                           
   951                           ; 2 bytes @ 0x19
   952  000079                     	ds	2
   953  00007B                     CANSetMask@type:
   954                           	opt stack 0
   955  00007B                     CANSetFilter@type:
   956                           	opt stack 0
   957  00007B                     CANsendMessage@data:
   958                           	opt stack 0
   959  00007B                     ___wmul@product:
   960                           	opt stack 0
   961  00007B                     frexp@eptr:
   962                           	opt stack 0
   963  00007B                     ___fldiv@a:
   964                           	opt stack 0
   965                           
   966                           ; 4 bytes @ 0x1B
   967  00007B                     	ds	1
   968  00007C                     ??_CANSetMask:
   969  00007C                     ??_CANSetFilter:
   970                           
   971                           ; 0 bytes @ 0x1C
   972  00007C                     	ds	1
   973  00007D                     ??_frexp:
   974  00007D                     CANsendMessage@dataLength:
   975                           	opt stack 0
   976  00007D                     delay_ms@value_ms:
   977                           	opt stack 0
   978                           
   979                           ; 2 bytes @ 0x1D
   980  00007D                     	ds	1
   981  00007E                     CANsendMessage@flags:
   982                           	opt stack 0
   983                           
   984                           ; 1 bytes @ 0x1E
   985  00007E                     	ds	1
   986  00007F                     ??___fldiv:
   987  00007F                     ??_CANsendMessage:
   988  00007F                     delay_s@value_s:
   989                           	opt stack 0
   990                           
   991                           ; 1 bytes @ 0x1F
   992  00007F                     	ds	1
   993  000080                     CANSetMask@numBuffer:
   994                           	opt stack 0
   995  000080                     CANSetFilter@numBuffer:
   996                           	opt stack 0
   997  000080                     delay_s@repeat_loop:
   998                           	opt stack 0
   999                           
  1000                           ; 1 bytes @ 0x20
  1001  000080                     	ds	1
  1002  000081                     CANSetMask@tamp:
  1003                           	opt stack 0
  1004  000081                     CANSetFilter@tamp:
  1005                           	opt stack 0
  1006                           
  1007                           ; 4 bytes @ 0x21
  1008  000081                     	ds	2
  1009  000083                     ___fldiv@sign:
  1010                           	opt stack 0
  1011  000083                     CANsendMessage@tamp:
  1012                           	opt stack 0
  1013                           
  1014                           ; 4 bytes @ 0x23
  1015  000083                     	ds	1
  1016  000084                     ___fldiv@rem:
  1017                           	opt stack 0
  1018                           
  1019                           ; 4 bytes @ 0x24
  1020  000084                     	ds	1
  1021  000085                     CANInitialize@phaseSeg1:
  1022                           	opt stack 0
  1023                           
  1024                           ; 1 bytes @ 0x25
  1025  000085                     	ds	1
  1026  000086                     CANInitialize@phaseSeg2:
  1027                           	opt stack 0
  1028                           
  1029                           ; 1 bytes @ 0x26
  1030  000086                     	ds	1
  1031  000087                     CANInitialize@SJW:
  1032                           	opt stack 0
  1033                           
  1034                           ; 1 bytes @ 0x27
  1035  000087                     	ds	1
  1036  000088                     CANInitialize@BRP:
  1037                           	opt stack 0
  1038  000088                     ___fldiv@new_exp:
  1039                           	opt stack 0
  1040                           
  1041                           ; 2 bytes @ 0x28
  1042  000088                     	ds	1
  1043  000089                     CANInitialize@flags:
  1044                           	opt stack 0
  1045                           
  1046                           ; 1 bytes @ 0x29
  1047  000089                     	ds	1
  1048  00008A                     ??_CANInitialize:
  1049  00008A                     ___fldiv@grs:
  1050                           	opt stack 0
  1051                           
  1052                           ; 4 bytes @ 0x2A
  1053  00008A                     	ds	4
  1054  00008E                     CANInitialize@propSeg:
  1055                           	opt stack 0
  1056  00008E                     ___fldiv@bexp:
  1057                           	opt stack 0
  1058                           
  1059                           ; 1 bytes @ 0x2E
  1060  00008E                     	ds	1
  1061  00008F                     CANInitialize@FilterConfig1:
  1062                           	opt stack 0
  1063  00008F                     ___fldiv@aexp:
  1064                           	opt stack 0
  1065                           
  1066                           ; 1 bytes @ 0x2F
  1067  00008F                     	ds	1
  1068  000090                     ?___flmul:
  1069                           	opt stack 0
  1070  000090                     CANInitialize@FilterConfig2:
  1071                           	opt stack 0
  1072  000090                     ___flmul@b:
  1073                           	opt stack 0
  1074                           
  1075                           ; 4 bytes @ 0x30
  1076  000090                     	ds	1
  1077  000091                     
  1078                           ; 0 bytes @ 0x31
  1079  000091                     	ds	3
  1080  000094                     ___flmul@a:
  1081                           	opt stack 0
  1082                           
  1083                           ; 4 bytes @ 0x34
  1084  000094                     	ds	4
  1085  000098                     ??___flmul:
  1086                           
  1087                           ; 0 bytes @ 0x38
  1088  000098                     	ds	4
  1089  00009C                     ___flmul@sign:
  1090                           	opt stack 0
  1091                           
  1092                           ; 1 bytes @ 0x3C
  1093  00009C                     	ds	1
  1094  00009D                     ___flmul@aexp:
  1095                           	opt stack 0
  1096                           
  1097                           ; 1 bytes @ 0x3D
  1098  00009D                     	ds	1
  1099  00009E                     ___flmul@grs:
  1100                           	opt stack 0
  1101                           
  1102                           ; 4 bytes @ 0x3E
  1103  00009E                     	ds	4
  1104  0000A2                     ___flmul@bexp:
  1105                           	opt stack 0
  1106                           
  1107                           ; 1 bytes @ 0x42
  1108  0000A2                     	ds	1
  1109  0000A3                     ___flmul@prod:
  1110                           	opt stack 0
  1111                           
  1112                           ; 4 bytes @ 0x43
  1113  0000A3                     	ds	4
  1114  0000A7                     ___flmul@temp:
  1115                           	opt stack 0
  1116                           
  1117                           ; 2 bytes @ 0x47
  1118  0000A7                     	ds	2
  1119  0000A9                     ?___fladd:
  1120                           	opt stack 0
  1121  0000A9                     ___fladd@b:
  1122                           	opt stack 0
  1123                           
  1124                           ; 4 bytes @ 0x49
  1125  0000A9                     	ds	4
  1126  0000AD                     ___fladd@a:
  1127                           	opt stack 0
  1128                           
  1129                           ; 4 bytes @ 0x4D
  1130  0000AD                     	ds	4
  1131  0000B1                     ??___fladd:
  1132                           
  1133                           ; 0 bytes @ 0x51
  1134  0000B1                     	ds	8
  1135  0000B9                     ___fladd@signs:
  1136                           	opt stack 0
  1137                           
  1138                           ; 1 bytes @ 0x59
  1139  0000B9                     	ds	1
  1140  0000BA                     ___fladd@aexp:
  1141                           	opt stack 0
  1142                           
  1143                           ; 1 bytes @ 0x5A
  1144  0000BA                     	ds	1
  1145  0000BB                     ___fladd@bexp:
  1146                           	opt stack 0
  1147                           
  1148                           ; 1 bytes @ 0x5B
  1149  0000BB                     	ds	1
  1150  0000BC                     ___fladd@grs:
  1151                           	opt stack 0
  1152                           
  1153                           ; 1 bytes @ 0x5C
  1154  0000BC                     	ds	1
  1155  0000BD                     ?_eval_poly:
  1156                           	opt stack 0
  1157  0000BD                     ?___flneg:
  1158                           	opt stack 0
  1159  0000BD                     eval_poly@x:
  1160                           	opt stack 0
  1161  0000BD                     ___flneg@f1:
  1162                           	opt stack 0
  1163                           
  1164                           ; 4 bytes @ 0x5D
  1165  0000BD                     	ds	4
  1166  0000C1                     ?_sqrt:
  1167                           	opt stack 0
  1168  0000C1                     ?_fabs:
  1169                           	opt stack 0
  1170  0000C1                     ?___fltol:
  1171                           	opt stack 0
  1172  0000C1                     eval_poly@d:
  1173                           	opt stack 0
  1174  0000C1                     fabs@d:
  1175                           	opt stack 0
  1176  0000C1                     ___fltol@f1:
  1177                           	opt stack 0
  1178  0000C1                     sqrt@a:
  1179                           	opt stack 0
  1180                           
  1181                           ; 4 bytes @ 0x61
  1182  0000C1                     	ds	2
  1183  0000C3                     eval_poly@n:
  1184                           	opt stack 0
  1185                           
  1186                           ; 2 bytes @ 0x63
  1187  0000C3                     	ds	2
  1188  0000C5                     ??_sqrt:
  1189  0000C5                     ??_eval_poly:
  1190  0000C5                     ??___fltol:
  1191  0000C5                     ___flge@ff1:
  1192                           	opt stack 0
  1193                           
  1194                           ; 4 bytes @ 0x65
  1195  0000C5                     	ds	4
  1196  0000C9                     ___fltol@sign1:
  1197                           	opt stack 0
  1198  0000C9                     eval_poly@res:
  1199                           	opt stack 0
  1200  0000C9                     ___flge@ff2:
  1201                           	opt stack 0
  1202                           
  1203                           ; 4 bytes @ 0x69
  1204  0000C9                     	ds	1
  1205  0000CA                     ___fltol@exp1:
  1206                           	opt stack 0
  1207                           
  1208                           ; 1 bytes @ 0x6A
  1209  0000CA                     	ds	1
  1210  0000CB                     ?___xxtofl:
  1211                           	opt stack 0
  1212  0000CB                     ___xxtofl@val:
  1213                           	opt stack 0
  1214                           
  1215                           ; 4 bytes @ 0x6B
  1216  0000CB                     	ds	2
  1217  0000CD                     ??___flge:
  1218                           
  1219                           ; 0 bytes @ 0x6D
  1220  0000CD                     	ds	2
  1221  0000CF                     ??___xxtofl:
  1222                           
  1223                           ; 0 bytes @ 0x6F
  1224  0000CF                     	ds	2
  1225  0000D1                     ?_atan:
  1226                           	opt stack 0
  1227  0000D1                     atan@f:
  1228                           	opt stack 0
  1229                           
  1230                           ; 4 bytes @ 0x71
  1231  0000D1                     	ds	2
  1232  0000D3                     ?_floor:
  1233                           	opt stack 0
  1234  0000D3                     floor@x:
  1235                           	opt stack 0
  1236                           
  1237                           ; 4 bytes @ 0x73
  1238  0000D3                     	ds	2
  1239  0000D5                     ??_parallelo:
  1240  0000D5                     
  1241                           ; 0 bytes @ 0x75
  1242  0000D5                     	ds	2
  1243  0000D7                     ??_main:
  1244                           
  1245                           ; 0 bytes @ 0x77
  1246  0000D7                     	ds	1
  1247                           tblptru	equ	0xFF8
  1248                           tblptrh	equ	0xFF7
  1249                           tblptrl	equ	0xFF6
  1250                           tablat	equ	0xFF5
  1251                           postinc0	equ	0xFEE
  1252                           wreg	equ	0xFE8
  1253                           postdec1	equ	0xFE5
  1254                           fsr1l	equ	0xFE1
  1255                           
  1256                           	psect	cstackCOMRAM
  1257  00002A                     __pcstackCOMRAM:
  1258                           	opt stack 0
  1259  00002A                     i1_CANisTxReady$2845:
  1260                           	opt stack 0
  1261  00002A                     CANreceiveMessage@msg:
  1262                           	opt stack 0
  1263  00002A                     i1CANsendMessage@identifier:
  1264                           	opt stack 0
  1265                           
  1266                           ; 4 bytes @ 0x0
  1267  00002A                     	ds	2
  1268  00002C                     ??_CANreceiveMessage:
  1269                           
  1270                           ; 0 bytes @ 0x2
  1271  00002C                     	ds	2
  1272  00002E                     i1CANsendMessage@data:
  1273                           	opt stack 0
  1274                           
  1275                           ; 2 bytes @ 0x4
  1276  00002E                     	ds	2
  1277  000030                     i1CANsendMessage@dataLength:
  1278                           	opt stack 0
  1279                           
  1280                           ; 1 bytes @ 0x6
  1281  000030                     	ds	1
  1282  000031                     i1CANsendMessage@flags:
  1283                           	opt stack 0
  1284                           
  1285                           ; 1 bytes @ 0x7
  1286  000031                     	ds	1
  1287  000032                     ??i1_CANsendMessage:
  1288                           
  1289                           ; 0 bytes @ 0x8
  1290  000032                     	ds	2
  1291  000034                     CANreceiveMessage@error:
  1292                           	opt stack 0
  1293                           
  1294                           ; 1 bytes @ 0xA
  1295  000034                     	ds	1
  1296  000035                     CANreceiveMessage@tamp:
  1297                           	opt stack 0
  1298                           
  1299                           ; 1 bytes @ 0xB
  1300  000035                     	ds	1
  1301  000036                     i1CANsendMessage@tamp:
  1302                           	opt stack 0
  1303                           
  1304                           ; 4 bytes @ 0xC
  1305  000036                     	ds	4
  1306  00003A                     ??_ISR_Bassa:
  1307                           
  1308                           ; 0 bytes @ 0x10
  1309  00003A                     	ds	21
  1310  00004F                     ISR_Bassa@PORTA_temp:
  1311                           	opt stack 0
  1312                           
  1313                           ; 1 bytes @ 0x25
  1314  00004F                     	ds	1
  1315  000050                     ISR_Bassa@i:
  1316                           	opt stack 0
  1317                           
  1318                           ; 1 bytes @ 0x26
  1319  000050                     	ds	1
  1320                           tblptru	equ	0xFF8
  1321                           tblptrh	equ	0xFF7
  1322                           tblptrl	equ	0xFF6
  1323                           tablat	equ	0xFF5
  1324                           postinc0	equ	0xFEE
  1325                           wreg	equ	0xFE8
  1326                           postdec1	equ	0xFE5
  1327                           fsr1l	equ	0xFE1
  1328                           
  1329 ;;
  1330 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1331 ;;
  1332 ;; *************** function _main *****************
  1333 ;; Defined at:
  1334 ;;		line 227 in file "parcheggio.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;		None
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;		None
  1339 ;; Return value:  Size  Location     Type
  1340 ;;		None               void
  1341 ;; Registers used:
  1342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1350 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1351 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1352 ;;Total ram usage:        1 bytes
  1353 ;; Hardware stack levels required when called:   10
  1354 ;; This function calls:
  1355 ;;		_CANisTxReady
  1356 ;;		_CANsendMessage
  1357 ;;		_can_interpreter
  1358 ;;		_configurations
  1359 ;;		_delay_ms
  1360 ;;		_park_routine
  1361 ;;		_park_search
  1362 ;; This function is called by:
  1363 ;;		Startup code after reset
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           	psect	text0
  1368  0061F0                     __ptext0:
  1369                           	opt stack 0
  1370  0061F0                     _main:
  1371                           	opt stack 21
  1372                           
  1373                           ;parcheggio.c: 228: MUX_select[0] = 0b00000000;
  1374                           
  1375                           ; BSR set to: 15
  1376                           ;incstack = 0
  1377  0061F0  0E00               	movlw	0
  1378  0061F2  0101               	movlb	1	; () banked
  1379  0061F4  6F00               	movwf	_MUX_select& (0+255),b	;volatile
  1380                           
  1381                           ;parcheggio.c: 229: MUX_select[1] = 0b00000001;
  1382  0061F6  0E01               	movlw	1
  1383  0061F8  0101               	movlb	1	; () banked
  1384  0061FA  6F01               	movwf	(_MUX_select+1)& (0+255),b	;volatile
  1385                           
  1386                           ;parcheggio.c: 230: MUX_select[2] = 0b00000010;
  1387  0061FC  0E02               	movlw	2
  1388  0061FE  0101               	movlb	1	; () banked
  1389  006200  6F02               	movwf	(_MUX_select+2)& (0+255),b	;volatile
  1390                           
  1391                           ;parcheggio.c: 231: MUX_select[3] = 0b00000011;
  1392  006202  0E03               	movlw	3
  1393  006204  0101               	movlb	1	; () banked
  1394  006206  6F03               	movwf	(_MUX_select+3)& (0+255),b	;volatile
  1395                           
  1396                           ;parcheggio.c: 232: MUX_select[4] = 0b00000100;
  1397  006208  0E04               	movlw	4
  1398  00620A  0101               	movlb	1	; () banked
  1399  00620C  6F04               	movwf	(_MUX_select+4)& (0+255),b	;volatile
  1400                           
  1401                           ;parcheggio.c: 233: MUX_select[5] = 0b00000101;
  1402  00620E  0E05               	movlw	5
  1403  006210  0101               	movlb	1	; () banked
  1404  006212  6F05               	movwf	(_MUX_select+5)& (0+255),b	;volatile
  1405                           
  1406                           ;parcheggio.c: 234: MUX_select[6] = 0b00000110;
  1407  006214  0E06               	movlw	6
  1408  006216  0101               	movlb	1	; () banked
  1409  006218  6F06               	movwf	(_MUX_select+6)& (0+255),b	;volatile
  1410                           
  1411                           ;parcheggio.c: 235: MUX_select[7] = 0b00000111;
  1412  00621A  0E07               	movlw	7
  1413  00621C  0101               	movlb	1	; () banked
  1414  00621E  6F07               	movwf	(_MUX_select+7)& (0+255),b	;volatile
  1415                           
  1416                           ; BSR set to: 1
  1417                           ;parcheggio.c: 237: configurations();
  1418  006220  EC1F  F032         	call	_configurations	;wreg free
  1419                           
  1420                           ;parcheggio.c: 239: PORTBbits.RB4 = 0;
  1421  006224  9881               	bcf	3969,4,c	;volatile
  1422                           
  1423                           ;parcheggio.c: 240: PORTBbits.RB5 = 0;
  1424  006226  9A81               	bcf	3969,5,c	;volatile
  1425                           
  1426                           ;parcheggio.c: 241: PORTBbits.RB6 = 0;
  1427  006228  9C81               	bcf	3969,6,c	;volatile
  1428                           
  1429                           ;parcheggio.c: 243: request_sent = 0;
  1430  00622A  9652               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1431                           
  1432                           ;parcheggio.c: 244: start_operation = 0;
  1433  00622C  9A52               	bcf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  1434                           
  1435                           ;parcheggio.c: 245: delay_ms(500);
  1436  00622E  0E01               	movlw	1
  1437  006230  0100               	movlb	0	; () banked
  1438  006232  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1439  006234  0EF4               	movlw	244
  1440  006236  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  1441  006238  ECC1  F032         	call	_delay_ms	;wreg free
  1442                           
  1443                           ;parcheggio.c: 248: while (activation != 1) {
  1444                           
  1445                           ;parcheggio.c: 247: while (1) {
  1446  00623C  D033               	goto	l8120
  1447  00623E                     l8112:
  1448                           
  1449                           ;parcheggio.c: 249: delay_ms(100);
  1450  00623E  0E00               	movlw	0
  1451  006240  0100               	movlb	0	; () banked
  1452  006242  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1453  006244  0E64               	movlw	100
  1454  006246  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  1455  006248  ECC1  F032         	call	_delay_ms	;wreg free
  1456  00624C                     l8114:
  1457  00624C  EC41  F033         	call	_CANisTxReady	;wreg free
  1458  006250  0900               	iorlw	0
  1459  006252  B4D8               	btfsc	status,2,c
  1460  006254  D7FB               	goto	l8114
  1461                           
  1462                           ;parcheggio.c: 251: PORTBbits.RB4 = ~PORTBbits.RB4;
  1463  006256  A881               	btfss	3969,4,c	;volatile
  1464  006258  D002               	goto	u10690
  1465  00625A  0E01               	movlw	1
  1466  00625C  D001               	goto	u10696
  1467  00625E                     u10690:
  1468  00625E  0E00               	movlw	0
  1469  006260                     u10696:
  1470  006260  0AFF               	xorlw	255
  1471  006262  0100               	movlb	0	; () banked
  1472  006264  6FD7               	movwf	??_main& (0+255),b
  1473  006266  0100               	movlb	0	; () banked
  1474  006268  3BD7               	swapf	??_main& (0+255),f,b
  1475  00626A  5081               	movf	3969,w,c	;volatile
  1476  00626C  0100               	movlb	0	; () banked
  1477  00626E  19D7               	xorwf	??_main& (0+255),w,b
  1478  006270  0BEF               	andlw	-17
  1479  006272  19D7               	xorwf	??_main& (0+255),w,b
  1480  006274  6E81               	movwf	3969,c	;volatile
  1481                           
  1482                           ; BSR set to: 0
  1483                           ;parcheggio.c: 252: CANsendMessage(0b00000001111, sensor_distance_short, 8, CAN_CONFIG_S
      +                          TD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1484  006276  0E0F               	movlw	15
  1485  006278  0100               	movlb	0	; () banked
  1486  00627A  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1487  00627C  0E00               	movlw	0
  1488  00627E  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1489  006280  0E00               	movlw	0
  1490  006282  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1491  006284  0E00               	movlw	0
  1492  006286  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1493  006288  0E83               	movlw	low _sensor_distance_short
  1494  00628A  0100               	movlb	0	; () banked
  1495  00628C  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1496  00628E  0E01               	movlw	high _sensor_distance_short
  1497  006290  0100               	movlb	0	; () banked
  1498  006292  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1499  006294  0E08               	movlw	8
  1500  006296  0100               	movlb	0	; () banked
  1501  006298  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1502  00629A  0EFC               	movlw	252
  1503  00629C  0100               	movlb	0	; () banked
  1504  00629E  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1505  0062A0  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1506  0062A4                     l8120:
  1507  0062A4  A051               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1508  0062A6  D7CB               	goto	l8112
  1509                           
  1510                           ;parcheggio.c: 253: }
  1511                           ;parcheggio.c: 254: park_search();
  1512  0062A8  EC62  F02B         	call	_park_search	;wreg free
  1513                           
  1514                           ;parcheggio.c: 255: can_interpreter();
  1515  0062AC  EC55  F032         	call	_can_interpreter	;wreg free
  1516                           
  1517                           ;parcheggio.c: 256: park_routine();
  1518  0062B0  EC2C  F01D         	call	_park_routine	;wreg free
  1519  0062B4  D7F7               	goto	l8120
  1520  0062B6                     __end_of_main:
  1521                           	opt stack 0
  1522                           tblptru	equ	0xFF8
  1523                           tblptrh	equ	0xFF7
  1524                           tblptrl	equ	0xFF6
  1525                           tablat	equ	0xFF5
  1526                           postinc0	equ	0xFEE
  1527                           wreg	equ	0xFE8
  1528                           postdec1	equ	0xFE5
  1529                           fsr1l	equ	0xFE1
  1530                           status	equ	0xFD8
  1531                           
  1532 ;; *************** function _park_search *****************
  1533 ;; Defined at:
  1534 ;;		line 260 in file "parcheggio.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;		None
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;		None
  1539 ;; Return value:  Size  Location     Type
  1540 ;;		None               void
  1541 ;; Registers used:
  1542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1550 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1551 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1552 ;;Total ram usage:        2 bytes
  1553 ;; Hardware stack levels used:    1
  1554 ;; Hardware stack levels required when called:    9
  1555 ;; This function calls:
  1556 ;;		_CANisTxReady
  1557 ;;		_CANsendMessage
  1558 ;;		___xxtofl
  1559 ;;		_abs
  1560 ;;		_parallelo
  1561 ;; This function is called by:
  1562 ;;		_main
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           	psect	text1
  1567  0056C4                     __ptext1:
  1568                           	opt stack 0
  1569  0056C4                     _park_search:
  1570                           	opt stack 21
  1571                           
  1572                           ;parcheggio.c: 261: while ((activation == 1) && (PORTBbits.RB5 == 0)) {
  1573                           
  1574                           ;incstack = 0
  1575  0056C4  D0DD               	goto	l747
  1576  0056C6                     l7840:
  1577                           
  1578                           ;parcheggio.c: 262: parallelo();
  1579  0056C6  EC1D  F028         	call	_parallelo	;wreg free
  1580                           
  1581                           ;parcheggio.c: 264: if (sensor_distance[0] > 50) {
  1582  0056CA  5002               	movf	_sensor_distance+1,w,c	;volatile
  1583  0056CC  E104               	bnz	u10300
  1584  0056CE  0E33               	movlw	51
  1585  0056D0  5C01               	subwf	_sensor_distance,w,c	;volatile
  1586  0056D2  A0D8               	btfss	status,0,c
  1587  0056D4  D02A               	goto	l749
  1588  0056D6                     u10300:
  1589                           
  1590                           ;parcheggio.c: 265: if (request_sent == 0) {
  1591  0056D6  B652               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1592  0056D8  D026               	goto	l7856
  1593  0056DA                     l7848:
  1594  0056DA  EC41  F033         	call	_CANisTxReady	;wreg free
  1595  0056DE  0900               	iorlw	0
  1596  0056E0  B4D8               	btfsc	status,2,c
  1597  0056E2  D7FB               	goto	l7848
  1598                           
  1599                           ;parcheggio.c: 267: CANsendMessage(0b00000001000, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1600  0056E4  0E08               	movlw	8
  1601  0056E6  0100               	movlb	0	; () banked
  1602  0056E8  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1603  0056EA  0E00               	movlw	0
  1604  0056EC  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1605  0056EE  0E00               	movlw	0
  1606  0056F0  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1607  0056F2  0E00               	movlw	0
  1608  0056F4  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1609  0056F6  0E53               	movlw	low _data
  1610  0056F8  0100               	movlb	0	; () banked
  1611  0056FA  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1612  0056FC  0E01               	movlw	high _data
  1613  0056FE  0100               	movlb	0	; () banked
  1614  005700  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1615  005702  0E08               	movlw	8
  1616  005704  0100               	movlb	0	; () banked
  1617  005706  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1618  005708  0EFC               	movlw	252
  1619  00570A  0100               	movlb	0	; () banked
  1620  00570C  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1621  00570E  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1622                           
  1623                           ;parcheggio.c: 268: request_sent = 1;
  1624  005712  8652               	bsf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1625                           
  1626                           ;parcheggio.c: 269: alignment_gap = 0;
  1627  005714  0E00               	movlw	0
  1628  005716  0100               	movlb	0	; () banked
  1629  005718  6FD8               	movwf	_alignment_gap& (0+255),b
  1630  00571A  0E00               	movlw	0
  1631  00571C  6FD9               	movwf	(_alignment_gap+1)& (0+255),b
  1632  00571E  0E00               	movlw	0
  1633  005720  6FDA               	movwf	(_alignment_gap+2)& (0+255),b
  1634  005722  0E00               	movlw	0
  1635  005724  6FDB               	movwf	(_alignment_gap+3)& (0+255),b
  1636  005726                     l7856:
  1637                           
  1638                           ;parcheggio.c: 270: }
  1639                           ;parcheggio.c: 271: LATBbits.LATB4 = 1;
  1640  005726  888A               	bsf	3978,4,c	;volatile
  1641                           
  1642                           ;parcheggio.c: 272: } else {
  1643  005728  D02F               	goto	l7860
  1644  00572A                     l749:
  1645                           
  1646                           ;parcheggio.c: 273: LATBbits.LATB4 = 0;
  1647  00572A  988A               	bcf	3978,4,c	;volatile
  1648                           
  1649                           ;parcheggio.c: 274: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  1650  00572C  EE20  F003         	lfsr	2,_sensor_distance+2	;volatile
  1651  005730  CFDE F1B8          	movff	postinc2,??_park_search
  1652  005734  CFDD F1B9          	movff	postdec2,??_park_search+1
  1653  005738  0101               	movlb	1	; () banked
  1654  00573A  1FB8               	comf	??_park_search& (0+255),f,b
  1655  00573C  1FB9               	comf	(??_park_search+1)& (0+255),f,b
  1656  00573E  4BB8               	infsnz	??_park_search& (0+255),f,b
  1657  005740  2BB9               	incf	(??_park_search+1)& (0+255),f,b
  1658  005742  5001               	movf	_sensor_distance,w,c	;volatile
  1659  005744  0101               	movlb	1	; () banked
  1660  005746  25B8               	addwf	??_park_search& (0+255),w,b
  1661  005748  0100               	movlb	0	; () banked
  1662  00574A  6F77               	movwf	abs@a& (0+255),b
  1663  00574C  5002               	movf	_sensor_distance+1,w,c	;volatile
  1664  00574E  0101               	movlb	1	; () banked
  1665  005750  21B9               	addwfc	(??_park_search+1)& (0+255),w,b
  1666  005752  0100               	movlb	0	; () banked
  1667  005754  6F78               	movwf	(abs@a+1)& (0+255),b
  1668  005756  EC15  F033         	call	_abs	;wreg free
  1669  00575A  0100               	movlb	0	; () banked
  1670  00575C  C077  F0CB         	movff	?_abs,___xxtofl@val
  1671  005760  0100               	movlb	0	; () banked
  1672  005762  C078  F0CC         	movff	?_abs+1,___xxtofl@val+1
  1673  005766  0100               	movlb	0	; () banked
  1674  005768  0E00               	movlw	0
  1675  00576A  BFCC               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1676  00576C  0EFF               	movlw	-1
  1677  00576E  6FCD               	movwf	(___xxtofl@val+2)& (0+255),b
  1678  005770  6FCE               	movwf	(___xxtofl@val+3)& (0+255),b
  1679  005772  0E01               	movlw	1
  1680  005774  EC7B  F02A         	call	___xxtofl
  1681  005778  C0CB  F0D8         	movff	?___xxtofl,_alignment_gap
  1682  00577C  C0CC  F0D9         	movff	?___xxtofl+1,_alignment_gap+1
  1683  005780  C0CD  F0DA         	movff	?___xxtofl+2,_alignment_gap+2
  1684  005784  C0CE  F0DB         	movff	?___xxtofl+3,_alignment_gap+3
  1685  005788                     l7860:
  1686                           
  1687                           ;parcheggio.c: 275: }
  1688                           ;parcheggio.c: 277: if ((sensor_distance[0] < 50) && (request_sent == 1)&&(sensor_distan
      +                          ce[1] < 50)) {
  1689  005788  5002               	movf	_sensor_distance+1,w,c	;volatile
  1690  00578A  E128               	bnz	l7872
  1691  00578C  0E32               	movlw	50
  1692  00578E  5C01               	subwf	_sensor_distance,w,c	;volatile
  1693  005790  A0D8               	btfss	status,0,c
  1694  005792  A652               	btfss	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1695  005794  D023               	goto	l7872
  1696  005796  5004               	movf	_sensor_distance+3,w,c	;volatile
  1697  005798  E121               	bnz	l7872
  1698  00579A  0E32               	movlw	50
  1699  00579C  5C03               	subwf	_sensor_distance+2,w,c	;volatile
  1700  00579E  B0D8               	btfsc	status,0,c
  1701  0057A0  D01D               	goto	l7872
  1702                           
  1703                           ;parcheggio.c: 278: request_sent = 0;
  1704  0057A2  9652               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1705  0057A4                     l7868:
  1706  0057A4  EC41  F033         	call	_CANisTxReady	;wreg free
  1707  0057A8  0900               	iorlw	0
  1708  0057AA  B4D8               	btfsc	status,2,c
  1709  0057AC  D7FB               	goto	l7868
  1710                           
  1711                           ;parcheggio.c: 280: CANsendMessage(0b00000000111, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1712  0057AE  0E07               	movlw	7
  1713  0057B0  0100               	movlb	0	; () banked
  1714  0057B2  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1715  0057B4  0E00               	movlw	0
  1716  0057B6  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1717  0057B8  0E00               	movlw	0
  1718  0057BA  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1719  0057BC  0E00               	movlw	0
  1720  0057BE  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1721  0057C0  0E53               	movlw	low _data
  1722  0057C2  0100               	movlb	0	; () banked
  1723  0057C4  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1724  0057C6  0E01               	movlw	high _data
  1725  0057C8  0100               	movlb	0	; () banked
  1726  0057CA  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1727  0057CC  0E08               	movlw	8
  1728  0057CE  0100               	movlb	0	; () banked
  1729  0057D0  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1730  0057D2  0EFC               	movlw	252
  1731  0057D4  0100               	movlb	0	; () banked
  1732  0057D6  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1733  0057D8  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1734  0057DC                     l7872:
  1735                           
  1736                           ;parcheggio.c: 281: }
  1737                           ;parcheggio.c: 283: if (distance_received == 1) {
  1738  0057DC  AA51               	btfss	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1739  0057DE  D050               	goto	l747
  1740                           
  1741                           ;parcheggio.c: 284: if (distance_average > 65) {
  1742  0057E0  0100               	movlb	0	; () banked
  1743  0057E2  51E3               	movf	(_distance_average+1)& (0+255),w,b	;volatile
  1744  0057E4  E105               	bnz	u10380
  1745  0057E6  0E42               	movlw	66
  1746  0057E8  0100               	movlb	0	; () banked
  1747  0057EA  5DE2               	subwf	_distance_average& (0+255),w,b	;volatile
  1748  0057EC  A0D8               	btfss	status,0,c
  1749  0057EE  D046               	goto	l760
  1750  0057F0                     u10380:
  1751                           
  1752                           ; BSR set to: 0
  1753                           ;parcheggio.c: 285: PORTBbits.RB5 = 1;
  1754  0057F0  8A81               	bsf	3969,5,c	;volatile
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;parcheggio.c: 286: data[0] = 1;
  1758  0057F2  0E01               	movlw	1
  1759  0057F4  0101               	movlb	1	; () banked
  1760  0057F6  6F53               	movwf	_data& (0+255),b
  1761                           
  1762                           ; BSR set to: 1
  1763                           ;parcheggio.c: 287: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  1764  0057F8  0E0B               	movlw	11
  1765  0057FA  0100               	movlb	0	; () banked
  1766  0057FC  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1767  0057FE  0E00               	movlw	0
  1768  005800  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1769  005802  0E00               	movlw	0
  1770  005804  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1771  005806  0E00               	movlw	0
  1772  005808  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1773  00580A  0E53               	movlw	low _data
  1774  00580C  0100               	movlb	0	; () banked
  1775  00580E  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1776  005810  0E01               	movlw	high _data
  1777  005812  0100               	movlb	0	; () banked
  1778  005814  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1779  005816  0E01               	movlw	1
  1780  005818  0100               	movlb	0	; () banked
  1781  00581A  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1782  00581C  0EBC               	movlw	188
  1783  00581E  0100               	movlb	0	; () banked
  1784  005820  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1785  005822  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1786                           
  1787                           ;parcheggio.c: 288: if ((request_sent1 == 0)&&(sensor_distance[0] < 40)) {
  1788  005826  B852               	btfsc	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1789  005828  D02B               	goto	l747
  1790  00582A  5002               	movf	_sensor_distance+1,w,c	;volatile
  1791  00582C  E129               	bnz	l747
  1792  00582E  0E28               	movlw	40
  1793  005830  5C01               	subwf	_sensor_distance,w,c	;volatile
  1794  005832  B0D8               	btfsc	status,0,c
  1795  005834  D025               	goto	l747
  1796                           
  1797                           ;parcheggio.c: 289: data_test[0] = 50;
  1798  005836  0E32               	movlw	50
  1799  005838  0101               	movlb	1	; () banked
  1800  00583A  6F7B               	movwf	_data_test& (0+255),b
  1801                           
  1802                           ; BSR set to: 1
  1803                           ;parcheggio.c: 290: asd = 1;
  1804  00583C  8251               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  1805  00583E                     l7890:
  1806  00583E  EC41  F033         	call	_CANisTxReady	;wreg free
  1807  005842  0900               	iorlw	0
  1808  005844  B4D8               	btfsc	status,2,c
  1809  005846  D7FB               	goto	l7890
  1810                           
  1811                           ;parcheggio.c: 292: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1812  005848  0E0D               	movlw	13
  1813  00584A  0100               	movlb	0	; () banked
  1814  00584C  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1815  00584E  0E00               	movlw	0
  1816  005850  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1817  005852  0E00               	movlw	0
  1818  005854  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1819  005856  0E00               	movlw	0
  1820  005858  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1821  00585A  0E7B               	movlw	low _data_test
  1822  00585C  0100               	movlb	0	; () banked
  1823  00585E  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1824  005860  0E01               	movlw	high _data_test
  1825  005862  0100               	movlb	0	; () banked
  1826  005864  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1827  005866  0E08               	movlw	8
  1828  005868  0100               	movlb	0	; () banked
  1829  00586A  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1830  00586C  0EBC               	movlw	188
  1831  00586E  0100               	movlb	0	; () banked
  1832  005870  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1833  005872  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1834                           
  1835                           ;parcheggio.c: 294: distance_received1 = 0;
  1836  005876  9C51               	bcf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
  1837                           
  1838                           ;parcheggio.c: 295: request_sent1 = 1;
  1839  005878  8852               	bsf	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1840                           
  1841                           ;parcheggio.c: 296: }
  1842                           ;parcheggio.c: 297: } else {
  1843  00587A  D002               	goto	l747
  1844  00587C                     l760:
  1845                           
  1846                           ; BSR set to: 0
  1847                           ;parcheggio.c: 298: distance_received = 0;
  1848  00587C  9A51               	bcf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1849                           
  1850                           ;parcheggio.c: 299: PORTBbits.RB5 = 0;
  1851  00587E  9A81               	bcf	3969,5,c	;volatile
  1852  005880                     l747:
  1853  005880  A051               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1854  005882  0012               	return	
  1855  005884  BA81               	btfsc	3969,5,c	;volatile
  1856  005886  0012               	return	
  1857  005888  D71E               	goto	l7840
  1858  00588A                     __end_of_park_search:
  1859                           	opt stack 0
  1860                           tblptru	equ	0xFF8
  1861                           tblptrh	equ	0xFF7
  1862                           tblptrl	equ	0xFF6
  1863                           tablat	equ	0xFF5
  1864                           postinc0	equ	0xFEE
  1865                           wreg	equ	0xFE8
  1866                           postdec1	equ	0xFE5
  1867                           fsr1l	equ	0xFE1
  1868                           postinc2	equ	0xFDE
  1869                           postdec2	equ	0xFDD
  1870                           status	equ	0xFD8
  1871                           
  1872 ;; *************** function _park_routine *****************
  1873 ;; Defined at:
  1874 ;;		line 305 in file "parcheggio.c"
  1875 ;; Parameters:    Size  Location     Type
  1876 ;;		None
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;		None
  1879 ;; Return value:  Size  Location     Type
  1880 ;;		None               void
  1881 ;; Registers used:
  1882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1883 ;; Tracked objects:
  1884 ;;		On entry : 0/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1889 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1890 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1891 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  1892 ;;Total ram usage:       12 bytes
  1893 ;; Hardware stack levels used:    1
  1894 ;; Hardware stack levels required when called:    9
  1895 ;; This function calls:
  1896 ;;		_CANisTxReady
  1897 ;;		_CANsendMessage
  1898 ;;		___fladd
  1899 ;;		___flneg
  1900 ;;		___fltol
  1901 ;;		___xxtofl
  1902 ;;		_can_send
  1903 ;;		_delay_ms
  1904 ;;		_delay_s
  1905 ;;		_matematica
  1906 ;;		_parallelo
  1907 ;; This function is called by:
  1908 ;;		_main
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           	psect	text2
  1913  003A58                     __ptext2:
  1914                           	opt stack 0
  1915  003A58                     _park_routine:
  1916                           	opt stack 21
  1917                           
  1918                           ;parcheggio.c: 306: avvicinamento = 0;
  1919                           
  1920                           ;incstack = 0
  1921  003A58  9451               	bcf	_avvicinamento/(0+8),_avvicinamento& (0+7),c	;volatile
  1922                           
  1923                           ;parcheggio.c: 307: data_correction[0] = 0;
  1924  003A5A  0E00               	movlw	0
  1925  003A5C  0101               	movlb	1	; () banked
  1926  003A5E  6F63               	movwf	_data_correction& (0+255),b
  1927                           
  1928                           ; BSR set to: 1
  1929                           ;parcheggio.c: 308: parallelo();
  1930  003A60  EC1D  F028         	call	_parallelo	;wreg free
  1931                           
  1932                           ;parcheggio.c: 310: while ((asd == 1)&&(PORTBbits.RB5 == 1) && (activation == 1)) {
  1933  003A64  D03E               	goto	l7920
  1934  003A66                     l7906:
  1935                           
  1936                           ;parcheggio.c: 311: delay_ms(200);
  1937  003A66  0E00               	movlw	0
  1938  003A68  0100               	movlb	0	; () banked
  1939  003A6A  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1940  003A6C  0EC8               	movlw	200
  1941  003A6E  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  1942  003A70  ECC1  F032         	call	_delay_ms	;wreg free
  1943                           
  1944                           ;parcheggio.c: 312: PORTBbits.RB6 = ~PORTBbits.RB6;
  1945  003A74  AC81               	btfss	3969,6,c	;volatile
  1946  003A76  D002               	goto	u10440
  1947  003A78  0E01               	movlw	1
  1948  003A7A  D001               	goto	u10446
  1949  003A7C                     u10440:
  1950  003A7C  0E00               	movlw	0
  1951  003A7E                     u10446:
  1952  003A7E  0AFF               	xorlw	255
  1953  003A80  0101               	movlb	1	; () banked
  1954  003A82  6FDC               	movwf	??_park_routine& (0+255),b
  1955  003A84  0101               	movlb	1	; () banked
  1956  003A86  3BDC               	swapf	??_park_routine& (0+255),f,b
  1957  003A88  47DC               	rlncf	??_park_routine& (0+255),f,b
  1958  003A8A  47DC               	rlncf	??_park_routine& (0+255),f,b
  1959  003A8C  5081               	movf	3969,w,c	;volatile
  1960  003A8E  0101               	movlb	1	; () banked
  1961  003A90  19DC               	xorwf	??_park_routine& (0+255),w,b
  1962  003A92  0BBF               	andlw	-65
  1963  003A94  19DC               	xorwf	??_park_routine& (0+255),w,b
  1964  003A96  6E81               	movwf	3969,c	;volatile
  1965                           
  1966                           ; BSR set to: 1
  1967                           ;parcheggio.c: 313: parallelo();
  1968  003A98  EC1D  F028         	call	_parallelo	;wreg free
  1969                           
  1970                           ;parcheggio.c: 314: if (data_correction[0] > 30) {
  1971  003A9C  0E1E               	movlw	30
  1972  003A9E  0101               	movlb	1	; () banked
  1973  003AA0  6563               	cpfsgt	_data_correction& (0+255),b
  1974  003AA2  D003               	goto	l7916
  1975                           
  1976                           ; BSR set to: 1
  1977                           ;parcheggio.c: 315: data_correction[0] = 0;
  1978  003AA4  0E00               	movlw	0
  1979  003AA6  0101               	movlb	1	; () banked
  1980  003AA8  6F63               	movwf	_data_correction& (0+255),b
  1981  003AAA                     l7916:
  1982  003AAA  EC41  F033         	call	_CANisTxReady	;wreg free
  1983  003AAE  0900               	iorlw	0
  1984  003AB0  B4D8               	btfsc	status,2,c
  1985  003AB2  D7FB               	goto	l7916
  1986                           
  1987                           ;parcheggio.c: 318: CANsendMessage(0b00000001110, data_correction, 8, CAN_CONFIG_STD_MSG
      +                           & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1988  003AB4  0E0E               	movlw	14
  1989  003AB6  0100               	movlb	0	; () banked
  1990  003AB8  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1991  003ABA  0E00               	movlw	0
  1992  003ABC  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1993  003ABE  0E00               	movlw	0
  1994  003AC0  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1995  003AC2  0E00               	movlw	0
  1996  003AC4  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1997  003AC6  0E63               	movlw	low _data_correction
  1998  003AC8  0100               	movlb	0	; () banked
  1999  003ACA  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2000  003ACC  0E01               	movlw	high _data_correction
  2001  003ACE  0100               	movlb	0	; () banked
  2002  003AD0  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2003  003AD2  0E08               	movlw	8
  2004  003AD4  0100               	movlb	0	; () banked
  2005  003AD6  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2006  003AD8  0EBC               	movlw	188
  2007  003ADA  0100               	movlb	0	; () banked
  2008  003ADC  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2009  003ADE  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2010  003AE2                     l7920:
  2011  003AE2  B251               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2012  003AE4  AA81               	btfss	3969,5,c	;volatile
  2013  003AE6  D002               	goto	l780
  2014  003AE8  B051               	btfsc	_activation/(0+8),_activation& (0+7),c	;volatile
  2015  003AEA  D7BD               	goto	l7906
  2016  003AEC                     l780:
  2017                           
  2018                           ;parcheggio.c: 319: }
  2019                           ;parcheggio.c: 321: if ((PORTBbits.RB5 == 1) && (activation == 1)) {
  2020  003AEC  BA81               	btfsc	3969,5,c	;volatile
  2021  003AEE  A051               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  2022  003AF0  D02F               	goto	l7940
  2023                           
  2024                           ;parcheggio.c: 322: PORTBbits.RB6 = 0;
  2025  003AF2  9C81               	bcf	3969,6,c	;volatile
  2026                           
  2027                           ;parcheggio.c: 323: data[0] = 2;
  2028  003AF4  0E02               	movlw	2
  2029  003AF6  0101               	movlb	1	; () banked
  2030  003AF8  6F53               	movwf	_data& (0+255),b
  2031                           
  2032                           ; BSR set to: 1
  2033                           ;parcheggio.c: 324: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  2034  003AFA  0E0B               	movlw	11
  2035  003AFC  0100               	movlb	0	; () banked
  2036  003AFE  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2037  003B00  0E00               	movlw	0
  2038  003B02  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2039  003B04  0E00               	movlw	0
  2040  003B06  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2041  003B08  0E00               	movlw	0
  2042  003B0A  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2043  003B0C  0E53               	movlw	low _data
  2044  003B0E  0100               	movlb	0	; () banked
  2045  003B10  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2046  003B12  0E01               	movlw	high _data
  2047  003B14  0100               	movlb	0	; () banked
  2048  003B16  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2049  003B18  0E01               	movlw	1
  2050  003B1A  0100               	movlb	0	; () banked
  2051  003B1C  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2052  003B1E  0EBC               	movlw	188
  2053  003B20  0100               	movlb	0	; () banked
  2054  003B22  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2055  003B24  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2056                           
  2057                           ;parcheggio.c: 325: }
  2058                           ;parcheggio.c: 327: while ((start_operation != 1)&&(activation == 1)) {
  2059  003B28  D013               	goto	l7940
  2060  003B2A                     l783:
  2061                           
  2062                           ;parcheggio.c: 328: if (first == 0) {
  2063  003B2A  B052               	btfsc	_first/(0+8),_first& (0+7),c	;volatile
  2064  003B2C  D011               	goto	l7940
  2065                           
  2066                           ;parcheggio.c: 329: set_speed = 0;
  2067  003B2E  0E00               	movlw	0
  2068  003B30  0100               	movlb	0	; () banked
  2069  003B32  6FE7               	movwf	(_set_speed+1)& (0+255),b
  2070  003B34  0E00               	movlw	0
  2071  003B36  6FE6               	movwf	_set_speed& (0+255),b
  2072                           
  2073                           ;parcheggio.c: 330: data_steering[0] = 90;
  2074  003B38  0E5A               	movlw	90
  2075  003B3A  0101               	movlb	1	; () banked
  2076  003B3C  6F73               	movwf	_data_steering& (0+255),b
  2077                           
  2078                           ;parcheggio.c: 331: data_brake [0] = 0;
  2079  003B3E  0E00               	movlw	0
  2080  003B40  0101               	movlb	1	; () banked
  2081  003B42  6F5B               	movwf	_data_brake& (0+255),b
  2082                           
  2083                           ;parcheggio.c: 332: data_brake [1] = 1;
  2084  003B44  0E01               	movlw	1
  2085  003B46  0101               	movlb	1	; () banked
  2086  003B48  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2087                           
  2088                           ; BSR set to: 1
  2089                           ;parcheggio.c: 333: can_send();
  2090  003B4A  EC94  F02F         	call	_can_send	;wreg free
  2091                           
  2092                           ;parcheggio.c: 334: first = 1;
  2093  003B4E  8052               	bsf	_first/(0+8),_first& (0+7),c	;volatile
  2094  003B50                     l7940:
  2095  003B50  AA52               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2096  003B52  A051               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  2097  003B54  D1C2               	goto	l8050
  2098  003B56  D7E9               	goto	l783
  2099  003B58                     l789:
  2100                           
  2101                           ;parcheggio.c: 339: LATBbits.LATB4 = 1;
  2102  003B58  888A               	bsf	3978,4,c	;volatile
  2103                           
  2104                           ;parcheggio.c: 341: bordo = (sensor_distance[0] + sensor_distance[1]) / 2;
  2105  003B5A  5001               	movf	_sensor_distance,w,c	;volatile
  2106  003B5C  2403               	addwf	_sensor_distance+2,w,c	;volatile
  2107  003B5E  0101               	movlb	1	; () banked
  2108  003B60  6FDC               	movwf	??_park_routine& (0+255),b
  2109  003B62  5002               	movf	_sensor_distance+1,w,c	;volatile
  2110  003B64  2004               	addwfc	_sensor_distance+3,w,c	;volatile
  2111  003B66  0101               	movlb	1	; () banked
  2112  003B68  6FDD               	movwf	(??_park_routine+1)& (0+255),b
  2113  003B6A  90D8               	bcf	status,0,c
  2114  003B6C  0101               	movlb	1	; () banked
  2115  003B6E  31DD               	rrcf	(??_park_routine+1)& (0+255),w,b
  2116  003B70  0101               	movlb	1	; () banked
  2117  003B72  6FDF               	movwf	(??_park_routine+3)& (0+255),b
  2118  003B74  0101               	movlb	1	; () banked
  2119  003B76  31DC               	rrcf	??_park_routine& (0+255),w,b
  2120  003B78  0101               	movlb	1	; () banked
  2121  003B7A  6FDE               	movwf	(??_park_routine+2)& (0+255),b
  2122  003B7C  C1DE  F0CB         	movff	??_park_routine+2,___xxtofl@val
  2123  003B80  C1DF  F0CC         	movff	??_park_routine+3,___xxtofl@val+1
  2124  003B84  0100               	movlb	0	; () banked
  2125  003B86  6BCD               	clrf	(___xxtofl@val+2)& (0+255),b
  2126  003B88  6BCE               	clrf	(___xxtofl@val+3)& (0+255),b
  2127  003B8A  0E00               	movlw	0
  2128  003B8C  EC7B  F02A         	call	___xxtofl
  2129  003B90  C0CB  F134         	movff	?___xxtofl,_bordo	;volatile
  2130  003B94  C0CC  F135         	movff	?___xxtofl+1,_bordo+1	;volatile
  2131  003B98  C0CD  F136         	movff	?___xxtofl+2,_bordo+2	;volatile
  2132  003B9C  C0CE  F137         	movff	?___xxtofl+3,_bordo+3	;volatile
  2133                           
  2134                           ;parcheggio.c: 342: matematica();
  2135  003BA0  EC3A  F013         	call	_matematica	;wreg free
  2136                           
  2137                           ;parcheggio.c: 343: set_speed = 0;
  2138  003BA4  0E00               	movlw	0
  2139  003BA6  0100               	movlb	0	; () banked
  2140  003BA8  6FE7               	movwf	(_set_speed+1)& (0+255),b
  2141  003BAA  0E00               	movlw	0
  2142  003BAC  6FE6               	movwf	_set_speed& (0+255),b
  2143                           
  2144                           ; BSR set to: 0
  2145                           ;parcheggio.c: 344: data_steering[0] = 90;
  2146  003BAE  0E5A               	movlw	90
  2147  003BB0  0101               	movlb	1	; () banked
  2148  003BB2  6F73               	movwf	_data_steering& (0+255),b
  2149                           
  2150                           ; BSR set to: 1
  2151                           ;parcheggio.c: 345: data_brake [0] = 0;
  2152  003BB4  0E00               	movlw	0
  2153  003BB6  0101               	movlb	1	; () banked
  2154  003BB8  6F5B               	movwf	_data_brake& (0+255),b
  2155                           
  2156                           ; BSR set to: 1
  2157                           ;parcheggio.c: 346: data_brake [1] = 1;
  2158  003BBA  0E01               	movlw	1
  2159  003BBC  0101               	movlb	1	; () banked
  2160  003BBE  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2161                           
  2162                           ; BSR set to: 1
  2163                           ;parcheggio.c: 347: can_send();
  2164  003BC0  EC94  F02F         	call	_can_send	;wreg free
  2165                           
  2166                           ;parcheggio.c: 348: delay_s(1);
  2167  003BC4  0E01               	movlw	1
  2168  003BC6  EC2B  F033         	call	_delay_s
  2169                           
  2170                           ;parcheggio.c: 350: data_brake [0] = 3;
  2171  003BCA  0E03               	movlw	3
  2172  003BCC  0101               	movlb	1	; () banked
  2173  003BCE  6F5B               	movwf	_data_brake& (0+255),b
  2174                           
  2175                           ; BSR set to: 1
  2176                           ;parcheggio.c: 351: data_brake [1] = 1;
  2177  003BD0  0E01               	movlw	1
  2178  003BD2  0101               	movlb	1	; () banked
  2179  003BD4  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2180                           
  2181                           ; BSR set to: 1
  2182                           ;parcheggio.c: 353: set_speed = 1000;
  2183  003BD6  0E03               	movlw	3
  2184  003BD8  0100               	movlb	0	; () banked
  2185  003BDA  6FE7               	movwf	(_set_speed+1)& (0+255),b
  2186  003BDC  0EE8               	movlw	232
  2187  003BDE  6FE6               	movwf	_set_speed& (0+255),b
  2188                           
  2189                           ; BSR set to: 0
  2190                           ;parcheggio.c: 354: dir = 0;
  2191  003BE0  9651               	bcf	_dir/(0+8),_dir& (0+7),c
  2192                           
  2193                           ; BSR set to: 0
  2194                           ;parcheggio.c: 355: data_steering[0] = 90;
  2195  003BE2  0E5A               	movlw	90
  2196  003BE4  0101               	movlb	1	; () banked
  2197  003BE6  6F73               	movwf	_data_steering& (0+255),b
  2198                           
  2199                           ; BSR set to: 1
  2200                           ;parcheggio.c: 356: data_test[0] = ((50 + Pmin + 5)-(n + 15));
  2201  003BE8  0E00               	movlw	0
  2202  003BEA  0100               	movlb	0	; () banked
  2203  003BEC  6FAD               	movwf	___fladd@a& (0+255),b
  2204  003BEE  0E00               	movlw	0
  2205  003BF0  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2206  003BF2  0E70               	movlw	112
  2207  003BF4  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2208  003BF6  0E41               	movlw	65
  2209  003BF8  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2210  003BFA  C138  F0A9         	movff	_n,___fladd@b
  2211  003BFE  C139  F0AA         	movff	_n+1,___fladd@b+1
  2212  003C02  C13A  F0AB         	movff	_n+2,___fladd@b+2
  2213  003C06  C13B  F0AC         	movff	_n+3,___fladd@b+3
  2214  003C0A  EC85  F018         	call	___fladd	;wreg free
  2215  003C0E  C0A9  F0BD         	movff	?___fladd,___flneg@f1
  2216  003C12  C0AA  F0BE         	movff	?___fladd+1,___flneg@f1+1
  2217  003C16  C0AB  F0BF         	movff	?___fladd+2,___flneg@f1+2
  2218  003C1A  C0AC  F0C0         	movff	?___fladd+3,___flneg@f1+3
  2219  003C1E  ECDE  F032         	call	___flneg	;wreg free
  2220  003C22  C0BD  F1E0         	movff	?___flneg,_park_routine$3743
  2221  003C26  C0BE  F1E1         	movff	?___flneg+1,_park_routine$3743+1
  2222  003C2A  C0BF  F1E2         	movff	?___flneg+2,_park_routine$3743+2
  2223  003C2E  C0C0  F1E3         	movff	?___flneg+3,_park_routine$3743+3
  2224                           
  2225                           ;parcheggio.c: 356: data_test[0] = ((50 + Pmin + 5)-(n + 15));
  2226  003C32  C128  F0AD         	movff	_Pmin,___fladd@a
  2227  003C36  C129  F0AE         	movff	_Pmin+1,___fladd@a+1
  2228  003C3A  C12A  F0AF         	movff	_Pmin+2,___fladd@a+2
  2229  003C3E  C12B  F0B0         	movff	_Pmin+3,___fladd@a+3
  2230  003C42  C1E0  F0A9         	movff	_park_routine$3743,___fladd@b
  2231  003C46  C1E1  F0AA         	movff	_park_routine$3743+1,___fladd@b+1
  2232  003C4A  C1E2  F0AB         	movff	_park_routine$3743+2,___fladd@b+2
  2233  003C4E  C1E3  F0AC         	movff	_park_routine$3743+3,___fladd@b+3
  2234  003C52  EC85  F018         	call	___fladd	;wreg free
  2235  003C56  C0A9  F1E4         	movff	?___fladd,_park_routine$3744
  2236  003C5A  C0AA  F1E5         	movff	?___fladd+1,_park_routine$3744+1
  2237  003C5E  C0AB  F1E6         	movff	?___fladd+2,_park_routine$3744+2
  2238  003C62  C0AC  F1E7         	movff	?___fladd+3,_park_routine$3744+3
  2239                           
  2240                           ;parcheggio.c: 356: data_test[0] = ((50 + Pmin + 5)-(n + 15));
  2241  003C66  0E00               	movlw	0
  2242  003C68  0100               	movlb	0	; () banked
  2243  003C6A  6FAD               	movwf	___fladd@a& (0+255),b
  2244  003C6C  0E00               	movlw	0
  2245  003C6E  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2246  003C70  0E5C               	movlw	92
  2247  003C72  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2248  003C74  0E42               	movlw	66
  2249  003C76  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2250  003C78  C1E4  F0A9         	movff	_park_routine$3744,___fladd@b
  2251  003C7C  C1E5  F0AA         	movff	_park_routine$3744+1,___fladd@b+1
  2252  003C80  C1E6  F0AB         	movff	_park_routine$3744+2,___fladd@b+2
  2253  003C84  C1E7  F0AC         	movff	_park_routine$3744+3,___fladd@b+3
  2254  003C88  EC85  F018         	call	___fladd	;wreg free
  2255  003C8C  C0A9  F0C1         	movff	?___fladd,___fltol@f1
  2256  003C90  C0AA  F0C2         	movff	?___fladd+1,___fltol@f1+1
  2257  003C94  C0AB  F0C3         	movff	?___fladd+2,___fltol@f1+2
  2258  003C98  C0AC  F0C4         	movff	?___fladd+3,___fltol@f1+3
  2259  003C9C  EC0E  F02F         	call	___fltol	;wreg free
  2260  003CA0  0100               	movlb	0	; () banked
  2261  003CA2  51C1               	movf	?___fltol& (0+255),w,b
  2262  003CA4  0101               	movlb	1	; () banked
  2263  003CA6  6F7B               	movwf	_data_test& (0+255),b
  2264                           
  2265                           ; BSR set to: 1
  2266                           ;parcheggio.c: 357: asd = 1;
  2267  003CA8  8251               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2268                           
  2269                           ; BSR set to: 1
  2270                           ;parcheggio.c: 358: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2271  003CAA  0E0D               	movlw	13
  2272  003CAC  0100               	movlb	0	; () banked
  2273  003CAE  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2274  003CB0  0E00               	movlw	0
  2275  003CB2  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2276  003CB4  0E00               	movlw	0
  2277  003CB6  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2278  003CB8  0E00               	movlw	0
  2279  003CBA  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2280  003CBC  0E7B               	movlw	low _data_test
  2281  003CBE  0100               	movlb	0	; () banked
  2282  003CC0  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2283  003CC2  0E01               	movlw	high _data_test
  2284  003CC4  0100               	movlb	0	; () banked
  2285  003CC6  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2286  003CC8  0E08               	movlw	8
  2287  003CCA  0100               	movlb	0	; () banked
  2288  003CCC  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2289  003CCE  0EBC               	movlw	188
  2290  003CD0  0100               	movlb	0	; () banked
  2291  003CD2  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2292  003CD4  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2293                           
  2294                           ;parcheggio.c: 359: can_send();
  2295  003CD8  EC94  F02F         	call	_can_send	;wreg free
  2296  003CDC                     l790:
  2297  003CDC  B251               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2298  003CDE  D7FE               	goto	l790
  2299                           
  2300                           ;parcheggio.c: 362: set_speed = 0;
  2301  003CE0  0E00               	movlw	0
  2302  003CE2  0100               	movlb	0	; () banked
  2303  003CE4  6FE7               	movwf	(_set_speed+1)& (0+255),b
  2304  003CE6  0E00               	movlw	0
  2305  003CE8  6FE6               	movwf	_set_speed& (0+255),b
  2306                           
  2307                           ;parcheggio.c: 363: data_steering[0] = 90;
  2308  003CEA  0E5A               	movlw	90
  2309  003CEC  0101               	movlb	1	; () banked
  2310  003CEE  6F73               	movwf	_data_steering& (0+255),b
  2311                           
  2312                           ;parcheggio.c: 364: data_brake [0] = 0;
  2313  003CF0  0E00               	movlw	0
  2314  003CF2  0101               	movlb	1	; () banked
  2315  003CF4  6F5B               	movwf	_data_brake& (0+255),b
  2316                           
  2317                           ;parcheggio.c: 365: data_brake [1] = 1;
  2318  003CF6  0E01               	movlw	1
  2319  003CF8  0101               	movlb	1	; () banked
  2320  003CFA  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2321                           
  2322                           ; BSR set to: 1
  2323                           ;parcheggio.c: 366: can_send();
  2324  003CFC  EC94  F02F         	call	_can_send	;wreg free
  2325                           
  2326                           ;parcheggio.c: 367: delay_s(1);
  2327  003D00  0E01               	movlw	1
  2328  003D02  EC2B  F033         	call	_delay_s
  2329                           
  2330                           ;parcheggio.c: 369: data_brake [0] = 3;
  2331  003D06  0E03               	movlw	3
  2332  003D08  0101               	movlb	1	; () banked
  2333  003D0A  6F5B               	movwf	_data_brake& (0+255),b
  2334                           
  2335                           ; BSR set to: 1
  2336                           ;parcheggio.c: 370: data_brake [1] = 1;
  2337  003D0C  0E01               	movlw	1
  2338  003D0E  0101               	movlb	1	; () banked
  2339  003D10  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2340                           
  2341                           ; BSR set to: 1
  2342                           ;parcheggio.c: 371: set_speed = 1000;
  2343  003D12  0E03               	movlw	3
  2344  003D14  0100               	movlb	0	; () banked
  2345  003D16  6FE7               	movwf	(_set_speed+1)& (0+255),b
  2346  003D18  0EE8               	movlw	232
  2347  003D1A  6FE6               	movwf	_set_speed& (0+255),b
  2348                           
  2349                           ; BSR set to: 0
  2350                           ;parcheggio.c: 372: dir = 0;
  2351  003D1C  9651               	bcf	_dir/(0+8),_dir& (0+7),c
  2352                           
  2353                           ; BSR set to: 0
  2354                           ;parcheggio.c: 373: data_steering[0] = 180;
  2355  003D1E  0EB4               	movlw	180
  2356  003D20  0101               	movlb	1	; () banked
  2357  003D22  6F73               	movwf	_data_steering& (0+255),b
  2358                           
  2359                           ; BSR set to: 1
  2360                           ;parcheggio.c: 374: data_test[0] = prima_sterzata;
  2361  003D24  C140  F0C1         	movff	_prima_sterzata,___fltol@f1
  2362  003D28  C141  F0C2         	movff	_prima_sterzata+1,___fltol@f1+1
  2363  003D2C  C142  F0C3         	movff	_prima_sterzata+2,___fltol@f1+2
  2364  003D30  C143  F0C4         	movff	_prima_sterzata+3,___fltol@f1+3
  2365  003D34  EC0E  F02F         	call	___fltol	;wreg free
  2366  003D38  0100               	movlb	0	; () banked
  2367  003D3A  51C1               	movf	?___fltol& (0+255),w,b
  2368  003D3C  0101               	movlb	1	; () banked
  2369  003D3E  6F7B               	movwf	_data_test& (0+255),b
  2370                           
  2371                           ; BSR set to: 1
  2372                           ;parcheggio.c: 375: asd = 1;
  2373  003D40  8251               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2374                           
  2375                           ; BSR set to: 1
  2376                           ;parcheggio.c: 376: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2377  003D42  0E0D               	movlw	13
  2378  003D44  0100               	movlb	0	; () banked
  2379  003D46  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2380  003D48  0E00               	movlw	0
  2381  003D4A  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2382  003D4C  0E00               	movlw	0
  2383  003D4E  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2384  003D50  0E00               	movlw	0
  2385  003D52  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2386  003D54  0E7B               	movlw	low _data_test
  2387  003D56  0100               	movlb	0	; () banked
  2388  003D58  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2389  003D5A  0E01               	movlw	high _data_test
  2390  003D5C  0100               	movlb	0	; () banked
  2391  003D5E  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2392  003D60  0E08               	movlw	8
  2393  003D62  0100               	movlb	0	; () banked
  2394  003D64  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2395  003D66  0EBC               	movlw	188
  2396  003D68  0100               	movlb	0	; () banked
  2397  003D6A  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2398  003D6C  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2399                           
  2400                           ;parcheggio.c: 377: can_send();
  2401  003D70  EC94  F02F         	call	_can_send	;wreg free
  2402  003D74                     l793:
  2403  003D74  B251               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2404  003D76  D7FE               	goto	l793
  2405                           
  2406                           ;parcheggio.c: 379: set_speed = 1000;
  2407  003D78  0E03               	movlw	3
  2408  003D7A  0100               	movlb	0	; () banked
  2409  003D7C  6FE7               	movwf	(_set_speed+1)& (0+255),b
  2410  003D7E  0EE8               	movlw	232
  2411  003D80  6FE6               	movwf	_set_speed& (0+255),b
  2412                           
  2413                           ;parcheggio.c: 380: data_steering[0] = 0;
  2414  003D82  0E00               	movlw	0
  2415  003D84  0101               	movlb	1	; () banked
  2416  003D86  6F73               	movwf	_data_steering& (0+255),b
  2417                           
  2418                           ; BSR set to: 1
  2419                           ;parcheggio.c: 381: asd = 1;
  2420  003D88  8251               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2421                           
  2422                           ; BSR set to: 1
  2423                           ;parcheggio.c: 382: data_test[0] = prima_sterzata + 9;
  2424  003D8A  0E00               	movlw	0
  2425  003D8C  0100               	movlb	0	; () banked
  2426  003D8E  6FAD               	movwf	___fladd@a& (0+255),b
  2427  003D90  0E00               	movlw	0
  2428  003D92  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2429  003D94  0E10               	movlw	16
  2430  003D96  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2431  003D98  0E41               	movlw	65
  2432  003D9A  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2433  003D9C  C140  F0A9         	movff	_prima_sterzata,___fladd@b
  2434  003DA0  C141  F0AA         	movff	_prima_sterzata+1,___fladd@b+1
  2435  003DA4  C142  F0AB         	movff	_prima_sterzata+2,___fladd@b+2
  2436  003DA8  C143  F0AC         	movff	_prima_sterzata+3,___fladd@b+3
  2437  003DAC  EC85  F018         	call	___fladd	;wreg free
  2438  003DB0  C0A9  F0C1         	movff	?___fladd,___fltol@f1
  2439  003DB4  C0AA  F0C2         	movff	?___fladd+1,___fltol@f1+1
  2440  003DB8  C0AB  F0C3         	movff	?___fladd+2,___fltol@f1+2
  2441  003DBC  C0AC  F0C4         	movff	?___fladd+3,___fltol@f1+3
  2442  003DC0  EC0E  F02F         	call	___fltol	;wreg free
  2443  003DC4  0100               	movlb	0	; () banked
  2444  003DC6  51C1               	movf	?___fltol& (0+255),w,b
  2445  003DC8  0101               	movlb	1	; () banked
  2446  003DCA  6F7B               	movwf	_data_test& (0+255),b
  2447                           
  2448                           ; BSR set to: 1
  2449                           ;parcheggio.c: 383: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2450  003DCC  0E0D               	movlw	13
  2451  003DCE  0100               	movlb	0	; () banked
  2452  003DD0  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2453  003DD2  0E00               	movlw	0
  2454  003DD4  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2455  003DD6  0E00               	movlw	0
  2456  003DD8  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2457  003DDA  0E00               	movlw	0
  2458  003DDC  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2459  003DDE  0E7B               	movlw	low _data_test
  2460  003DE0  0100               	movlb	0	; () banked
  2461  003DE2  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2462  003DE4  0E01               	movlw	high _data_test
  2463  003DE6  0100               	movlb	0	; () banked
  2464  003DE8  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2465  003DEA  0E08               	movlw	8
  2466  003DEC  0100               	movlb	0	; () banked
  2467  003DEE  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2468  003DF0  0EBC               	movlw	188
  2469  003DF2  0100               	movlb	0	; () banked
  2470  003DF4  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2471  003DF6  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2472                           
  2473                           ;parcheggio.c: 384: can_send();
  2474  003DFA  EC94  F02F         	call	_can_send	;wreg free
  2475  003DFE                     l796:
  2476  003DFE  B251               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2477  003E00  D7FE               	goto	l796
  2478                           
  2479                           ;parcheggio.c: 386: data_brake [0] = 0;
  2480  003E02  0E00               	movlw	0
  2481  003E04  0101               	movlb	1	; () banked
  2482  003E06  6F5B               	movwf	_data_brake& (0+255),b
  2483                           
  2484                           ;parcheggio.c: 387: data_brake [1] = 1;
  2485  003E08  0E01               	movlw	1
  2486  003E0A  0101               	movlb	1	; () banked
  2487  003E0C  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2488                           
  2489                           ;parcheggio.c: 388: set_speed = 0;
  2490  003E0E  0E00               	movlw	0
  2491  003E10  0100               	movlb	0	; () banked
  2492  003E12  6FE7               	movwf	(_set_speed+1)& (0+255),b
  2493  003E14  0E00               	movlw	0
  2494  003E16  6FE6               	movwf	_set_speed& (0+255),b
  2495                           
  2496                           ;parcheggio.c: 389: data_steering[0] = 90;
  2497  003E18  0E5A               	movlw	90
  2498  003E1A  0101               	movlb	1	; () banked
  2499  003E1C  6F73               	movwf	_data_steering& (0+255),b
  2500                           
  2501                           ; BSR set to: 1
  2502                           ;parcheggio.c: 390: can_send();
  2503  003E1E  EC94  F02F         	call	_can_send	;wreg free
  2504                           
  2505                           ;parcheggio.c: 391: delay_s(1);
  2506  003E22  0E01               	movlw	1
  2507  003E24  EC2B  F033         	call	_delay_s
  2508                           
  2509                           ;parcheggio.c: 392: avvicinamento = 1;
  2510  003E28  8451               	bsf	_avvicinamento/(0+8),_avvicinamento& (0+7),c	;volatile
  2511                           
  2512                           ;parcheggio.c: 393: if (sensor_distance [2] > 20) {
  2513  003E2A  5006               	movf	_sensor_distance+5,w,c	;volatile
  2514  003E2C  E104               	bnz	u10580
  2515  003E2E  0E15               	movlw	21
  2516  003E30  5C05               	subwf	_sensor_distance+4,w,c	;volatile
  2517  003E32  A0D8               	btfss	status,0,c
  2518  003E34  D017               	goto	l8034
  2519  003E36                     u10580:
  2520                           
  2521                           ;parcheggio.c: 394: data_brake [0] = 3;
  2522  003E36  0E03               	movlw	3
  2523  003E38  0101               	movlb	1	; () banked
  2524  003E3A  6F5B               	movwf	_data_brake& (0+255),b
  2525                           
  2526                           ;parcheggio.c: 395: data_brake [1] = 1;
  2527  003E3C  0E01               	movlw	1
  2528  003E3E  0101               	movlb	1	; () banked
  2529  003E40  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2530                           
  2531                           ;parcheggio.c: 396: set_speed = 500;
  2532  003E42  0E01               	movlw	1
  2533  003E44  0100               	movlb	0	; () banked
  2534  003E46  6FE7               	movwf	(_set_speed+1)& (0+255),b
  2535  003E48  0EF4               	movlw	244
  2536  003E4A  6FE6               	movwf	_set_speed& (0+255),b
  2537                           
  2538                           ;parcheggio.c: 397: data_steering[0] = 90;
  2539  003E4C  0E5A               	movlw	90
  2540  003E4E  0101               	movlb	1	; () banked
  2541  003E50  6F73               	movwf	_data_steering& (0+255),b
  2542                           
  2543                           ; BSR set to: 1
  2544                           ;parcheggio.c: 398: dir = 1;
  2545  003E52  8651               	bsf	_dir/(0+8),_dir& (0+7),c
  2546                           
  2547                           ; BSR set to: 1
  2548                           ;parcheggio.c: 399: can_send();
  2549  003E54  EC94  F02F         	call	_can_send	;wreg free
  2550  003E58                     l8032:
  2551  003E58  5006               	movf	_sensor_distance+5,w,c	;volatile
  2552  003E5A  E1FE               	bnz	l8032
  2553  003E5C  0E15               	movlw	21
  2554  003E5E  5C05               	subwf	_sensor_distance+4,w,c	;volatile
  2555  003E60  B0D8               	btfsc	status,0,c
  2556  003E62  D7FA               	goto	l8032
  2557  003E64                     l8034:
  2558                           
  2559                           ;parcheggio.c: 401: }
  2560                           ;parcheggio.c: 402: data_brake [0] = 0;
  2561  003E64  0E00               	movlw	0
  2562  003E66  0101               	movlb	1	; () banked
  2563  003E68  6F5B               	movwf	_data_brake& (0+255),b
  2564                           
  2565                           ;parcheggio.c: 403: data_brake [1] = 1;
  2566  003E6A  0E01               	movlw	1
  2567  003E6C  0101               	movlb	1	; () banked
  2568  003E6E  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2569                           
  2570                           ;parcheggio.c: 404: set_speed = 0;
  2571  003E70  0E00               	movlw	0
  2572  003E72  0100               	movlb	0	; () banked
  2573  003E74  6FE7               	movwf	(_set_speed+1)& (0+255),b
  2574  003E76  0E00               	movlw	0
  2575  003E78  6FE6               	movwf	_set_speed& (0+255),b
  2576                           
  2577                           ;parcheggio.c: 405: data_steering[0] = 90;
  2578  003E7A  0E5A               	movlw	90
  2579  003E7C  0101               	movlb	1	; () banked
  2580  003E7E  6F73               	movwf	_data_steering& (0+255),b
  2581                           
  2582                           ; BSR set to: 1
  2583                           ;parcheggio.c: 406: dir = 0;
  2584  003E80  9651               	bcf	_dir/(0+8),_dir& (0+7),c
  2585                           
  2586                           ; BSR set to: 1
  2587                           ;parcheggio.c: 407: can_send();
  2588  003E82  EC94  F02F         	call	_can_send	;wreg free
  2589                           
  2590                           ;parcheggio.c: 408: delay_s(1);
  2591  003E86  0E01               	movlw	1
  2592  003E88  EC2B  F033         	call	_delay_s
  2593                           
  2594                           ;parcheggio.c: 409: data[0] = 3;
  2595  003E8C  0E03               	movlw	3
  2596  003E8E  0101               	movlb	1	; () banked
  2597  003E90  6F53               	movwf	_data& (0+255),b
  2598  003E92                     l8044:
  2599  003E92  EC41  F033         	call	_CANisTxReady	;wreg free
  2600  003E96  0900               	iorlw	0
  2601  003E98  B4D8               	btfsc	status,2,c
  2602  003E9A  D7FB               	goto	l8044
  2603                           
  2604                           ;parcheggio.c: 411: CANsendMessage(0b00000001011, data, 8, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  2605  003E9C  0E0B               	movlw	11
  2606  003E9E  0100               	movlb	0	; () banked
  2607  003EA0  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2608  003EA2  0E00               	movlw	0
  2609  003EA4  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2610  003EA6  0E00               	movlw	0
  2611  003EA8  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2612  003EAA  0E00               	movlw	0
  2613  003EAC  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2614  003EAE  0E53               	movlw	low _data
  2615  003EB0  0100               	movlb	0	; () banked
  2616  003EB2  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2617  003EB4  0E01               	movlw	high _data
  2618  003EB6  0100               	movlb	0	; () banked
  2619  003EB8  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2620  003EBA  0E08               	movlw	8
  2621  003EBC  0100               	movlb	0	; () banked
  2622  003EBE  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2623  003EC0  0EBC               	movlw	188
  2624  003EC2  0100               	movlb	0	; () banked
  2625  003EC4  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2626  003EC6  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2627                           
  2628                           ;parcheggio.c: 412: delay_ms(100);
  2629  003ECA  0E00               	movlw	0
  2630  003ECC  0100               	movlb	0	; () banked
  2631  003ECE  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2632  003ED0  0E64               	movlw	100
  2633  003ED2  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  2634  003ED4  ECC1  F032         	call	_delay_ms	;wreg free
  2635  003ED8  00FF               	reset		;# 
  2636  003EDA                     l8050:
  2637  003EDA  AA81               	btfss	3969,5,c	;volatile
  2638  003EDC  0012               	return	
  2639  003EDE  A051               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  2640  003EE0  0012               	return	
  2641  003EE2  AA52               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2642  003EE4  0012               	return	
  2643  003EE6  D638               	goto	l789
  2644  003EE8                     __end_of_park_routine:
  2645                           	opt stack 0
  2646                           tblptru	equ	0xFF8
  2647                           tblptrh	equ	0xFF7
  2648                           tblptrl	equ	0xFF6
  2649                           tablat	equ	0xFF5
  2650                           postinc0	equ	0xFEE
  2651                           wreg	equ	0xFE8
  2652                           postdec1	equ	0xFE5
  2653                           fsr1l	equ	0xFE1
  2654                           postinc2	equ	0xFDE
  2655                           postdec2	equ	0xFDD
  2656                           status	equ	0xFD8
  2657                           
  2658 ;; *************** function _parallelo *****************
  2659 ;; Defined at:
  2660 ;;		line 440 in file "parcheggio.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;		None
  2663 ;; Auto vars:     Size  Location     Type
  2664 ;;		None
  2665 ;; Return value:  Size  Location     Type
  2666 ;;		None               void
  2667 ;; Registers used:
  2668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2676 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2677 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2678 ;;Total ram usage:        2 bytes
  2679 ;; Hardware stack levels used:    1
  2680 ;; Hardware stack levels required when called:    8
  2681 ;; This function calls:
  2682 ;;		___fladd
  2683 ;;		___fldiv
  2684 ;;		___flge
  2685 ;;		___flmul
  2686 ;;		___fltol
  2687 ;;		___xxtofl
  2688 ;;		_abs
  2689 ;;		_asin
  2690 ;;		_can_send
  2691 ;;		_sqrt
  2692 ;; This function is called by:
  2693 ;;		_park_search
  2694 ;;		_park_routine
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           	psect	text3
  2699  00503A                     __ptext3:
  2700                           	opt stack 0
  2701  00503A                     _parallelo:
  2702                           	opt stack 21
  2703                           
  2704                           ;parcheggio.c: 441: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  2705                           
  2706                           ;incstack = 0
  2707  00503A  EE20  F003         	lfsr	2,_sensor_distance+2	;volatile
  2708  00503E  CFDE F0D5          	movff	postinc2,??_parallelo
  2709  005042  CFDD F0D6          	movff	postdec2,??_parallelo+1
  2710  005046  0100               	movlb	0	; () banked
  2711  005048  1FD5               	comf	??_parallelo& (0+255),f,b
  2712  00504A  1FD6               	comf	(??_parallelo+1)& (0+255),f,b
  2713  00504C  4BD5               	infsnz	??_parallelo& (0+255),f,b
  2714  00504E  2BD6               	incf	(??_parallelo+1)& (0+255),f,b
  2715  005050  5001               	movf	_sensor_distance,w,c	;volatile
  2716  005052  0100               	movlb	0	; () banked
  2717  005054  25D5               	addwf	??_parallelo& (0+255),w,b
  2718  005056  0100               	movlb	0	; () banked
  2719  005058  6F77               	movwf	abs@a& (0+255),b
  2720  00505A  5002               	movf	_sensor_distance+1,w,c	;volatile
  2721  00505C  0100               	movlb	0	; () banked
  2722  00505E  21D6               	addwfc	(??_parallelo+1)& (0+255),w,b
  2723  005060  0100               	movlb	0	; () banked
  2724  005062  6F78               	movwf	(abs@a+1)& (0+255),b
  2725  005064  EC15  F033         	call	_abs	;wreg free
  2726  005068  0100               	movlb	0	; () banked
  2727  00506A  C077  F0CB         	movff	?_abs,___xxtofl@val
  2728  00506E  0100               	movlb	0	; () banked
  2729  005070  C078  F0CC         	movff	?_abs+1,___xxtofl@val+1
  2730  005074  0100               	movlb	0	; () banked
  2731  005076  0E00               	movlw	0
  2732  005078  BFCC               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2733  00507A  0EFF               	movlw	-1
  2734  00507C  6FCD               	movwf	(___xxtofl@val+2)& (0+255),b
  2735  00507E  6FCE               	movwf	(___xxtofl@val+3)& (0+255),b
  2736  005080  0E01               	movlw	1
  2737  005082  EC7B  F02A         	call	___xxtofl
  2738  005086  C0CB  F0D8         	movff	?___xxtofl,_alignment_gap
  2739  00508A  C0CC  F0D9         	movff	?___xxtofl+1,_alignment_gap+1
  2740  00508E  C0CD  F0DA         	movff	?___xxtofl+2,_alignment_gap+2
  2741  005092  C0CE  F0DB         	movff	?___xxtofl+3,_alignment_gap+3
  2742                           
  2743                           ;parcheggio.c: 442: if (alignment_gap < 20) {
  2744  005096  C0D8  F0C5         	movff	_alignment_gap,___flge@ff1
  2745  00509A  C0D9  F0C6         	movff	_alignment_gap+1,___flge@ff1+1
  2746  00509E  C0DA  F0C7         	movff	_alignment_gap+2,___flge@ff1+2
  2747  0050A2  C0DB  F0C8         	movff	_alignment_gap+3,___flge@ff1+3
  2748  0050A6  0E00               	movlw	0
  2749  0050A8  0100               	movlb	0	; () banked
  2750  0050AA  6FC9               	movwf	___flge@ff2& (0+255),b
  2751  0050AC  0E00               	movlw	0
  2752  0050AE  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
  2753  0050B0  0EA0               	movlw	160
  2754  0050B2  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
  2755  0050B4  0E41               	movlw	65
  2756  0050B6  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
  2757  0050B8  EC28  F02D         	call	___flge	;wreg free
  2758  0050BC  0100               	movlb	0	; () banked
  2759  0050BE  B0D8               	btfsc	status,0,c
  2760  0050C0  D0EB               	goto	l7754
  2761                           
  2762                           ; BSR set to: 0
  2763                           ;parcheggio.c: 443: if ((sensor_distance[0] < 30) && (sensor_distance[1] < 30)) {
  2764  0050C2  5002               	movf	_sensor_distance+1,w,c	;volatile
  2765  0050C4  E103               	bnz	u10231
  2766  0050C6  0E1E               	movlw	30
  2767  0050C8  5C01               	subwf	_sensor_distance,w,c	;volatile
  2768  0050CA  B0D8               	btfsc	status,0,c
  2769  0050CC                     u10231:
  2770  0050CC  0012               	return	
  2771                           
  2772                           ; BSR set to: 0
  2773  0050CE  5004               	movf	_sensor_distance+3,w,c	;volatile
  2774  0050D0  E103               	bnz	u10241
  2775  0050D2  0E1E               	movlw	30
  2776  0050D4  5C03               	subwf	_sensor_distance+2,w,c	;volatile
  2777  0050D6  B0D8               	btfsc	status,0,c
  2778  0050D8                     u10241:
  2779  0050D8  0012               	return	
  2780                           
  2781                           ; BSR set to: 0
  2782                           ;parcheggio.c: 444: x = ((26)*(26) + (alignment_gap * alignment_gap));
  2783  0050DA  C0D8  F094         	movff	_alignment_gap,___flmul@a
  2784  0050DE  C0D9  F095         	movff	_alignment_gap+1,___flmul@a+1
  2785  0050E2  C0DA  F096         	movff	_alignment_gap+2,___flmul@a+2
  2786  0050E6  C0DB  F097         	movff	_alignment_gap+3,___flmul@a+3
  2787  0050EA  C0D8  F090         	movff	_alignment_gap,___flmul@b
  2788  0050EE  C0D9  F091         	movff	_alignment_gap+1,___flmul@b+1
  2789  0050F2  C0DA  F092         	movff	_alignment_gap+2,___flmul@b+2
  2790  0050F6  C0DB  F093         	movff	_alignment_gap+3,___flmul@b+3
  2791  0050FA  ECD9  F01A         	call	___flmul	;wreg free
  2792  0050FE  C090  F0A9         	movff	?___flmul,___fladd@b
  2793  005102  C091  F0AA         	movff	?___flmul+1,___fladd@b+1
  2794  005106  C092  F0AB         	movff	?___flmul+2,___fladd@b+2
  2795  00510A  C093  F0AC         	movff	?___flmul+3,___fladd@b+3
  2796  00510E  0E00               	movlw	0
  2797  005110  0100               	movlb	0	; () banked
  2798  005112  6FAD               	movwf	___fladd@a& (0+255),b
  2799  005114  0E00               	movlw	0
  2800  005116  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2801  005118  0E29               	movlw	41
  2802  00511A  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2803  00511C  0E44               	movlw	68
  2804  00511E  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2805  005120  EC85  F018         	call	___fladd	;wreg free
  2806  005124  C0A9  F011         	movff	?___fladd,_x
  2807  005128  C0AA  F012         	movff	?___fladd+1,_x+1
  2808  00512C  C0AB  F013         	movff	?___fladd+2,_x+2
  2809  005130  C0AC  F014         	movff	?___fladd+3,_x+3
  2810                           
  2811                           ;parcheggio.c: 445: x = sqrt(x);
  2812  005134  C011  F0C1         	movff	_x,sqrt@a
  2813  005138  C012  F0C2         	movff	_x+1,sqrt@a+1
  2814  00513C  C013  F0C3         	movff	_x+2,sqrt@a+2
  2815  005140  C014  F0C4         	movff	_x+3,sqrt@a+3
  2816  005144  EC74  F01F         	call	_sqrt	;wreg free
  2817  005148  C0C1  F011         	movff	?_sqrt,_x
  2818  00514C  C0C2  F012         	movff	?_sqrt+1,_x+1
  2819  005150  C0C3  F013         	movff	?_sqrt+2,_x+2
  2820  005154  C0C4  F014         	movff	?_sqrt+3,_x+3
  2821                           
  2822                           ;parcheggio.c: 446: z = alignment_gap / x;
  2823  005158  C0D8  F077         	movff	_alignment_gap,___fldiv@b
  2824  00515C  C0D9  F078         	movff	_alignment_gap+1,___fldiv@b+1
  2825  005160  C0DA  F079         	movff	_alignment_gap+2,___fldiv@b+2
  2826  005164  C0DB  F07A         	movff	_alignment_gap+3,___fldiv@b+3
  2827  005168  C011  F07B         	movff	_x,___fldiv@a
  2828  00516C  C012  F07C         	movff	_x+1,___fldiv@a+1
  2829  005170  C013  F07D         	movff	_x+2,___fldiv@a+2
  2830  005174  C014  F07E         	movff	_x+3,___fldiv@a+3
  2831  005178  EC59  F021         	call	___fldiv	;wreg free
  2832  00517C  C077  F0DC         	movff	?___fldiv,_z
  2833  005180  C078  F0DD         	movff	?___fldiv+1,_z+1
  2834  005184  C079  F0DE         	movff	?___fldiv+2,_z+2
  2835  005188  C07A  F0DF         	movff	?___fldiv+3,_z+3
  2836                           
  2837                           ;parcheggio.c: 447: z = asin(z);
  2838  00518C  C0DC  F1A0         	movff	_z,asin@x
  2839  005190  C0DD  F1A1         	movff	_z+1,asin@x+1
  2840  005194  C0DE  F1A2         	movff	_z+2,asin@x+2
  2841  005198  C0DF  F1A3         	movff	_z+3,asin@x+3
  2842  00519C  EC94  F026         	call	_asin	;wreg free
  2843  0051A0  C1A0  F0DC         	movff	?_asin,_z
  2844  0051A4  C1A1  F0DD         	movff	?_asin+1,_z+1
  2845  0051A8  C1A2  F0DE         	movff	?_asin+2,_z+2
  2846  0051AC  C1A3  F0DF         	movff	?_asin+3,_z+3
  2847                           
  2848                           ;parcheggio.c: 448: z = z / 3.14159265358979323846 * 180;
  2849  0051B0  0EDB               	movlw	219
  2850  0051B2  0100               	movlb	0	; () banked
  2851  0051B4  6F7B               	movwf	___fldiv@a& (0+255),b
  2852  0051B6  0E0F               	movlw	15
  2853  0051B8  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  2854  0051BA  0E49               	movlw	73
  2855  0051BC  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  2856  0051BE  0E40               	movlw	64
  2857  0051C0  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  2858  0051C2  C0DC  F077         	movff	_z,___fldiv@b
  2859  0051C6  C0DD  F078         	movff	_z+1,___fldiv@b+1
  2860  0051CA  C0DE  F079         	movff	_z+2,___fldiv@b+2
  2861  0051CE  C0DF  F07A         	movff	_z+3,___fldiv@b+3
  2862  0051D2  EC59  F021         	call	___fldiv	;wreg free
  2863  0051D6  C077  F090         	movff	?___fldiv,___flmul@b
  2864  0051DA  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  2865  0051DE  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  2866  0051E2  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  2867  0051E6  0E00               	movlw	0
  2868  0051E8  0100               	movlb	0	; () banked
  2869  0051EA  6F94               	movwf	___flmul@a& (0+255),b
  2870  0051EC  0E00               	movlw	0
  2871  0051EE  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2872  0051F0  0E34               	movlw	52
  2873  0051F2  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2874  0051F4  0E43               	movlw	67
  2875  0051F6  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2876  0051F8  ECD9  F01A         	call	___flmul	;wreg free
  2877  0051FC  C090  F0DC         	movff	?___flmul,_z
  2878  005200  C091  F0DD         	movff	?___flmul+1,_z+1
  2879  005204  C092  F0DE         	movff	?___flmul+2,_z+2
  2880  005208  C093  F0DF         	movff	?___flmul+3,_z+3
  2881                           
  2882                           ;parcheggio.c: 449: data_correction[0] = z;
  2883  00520C  C0DC  F0C1         	movff	_z,___fltol@f1
  2884  005210  C0DD  F0C2         	movff	_z+1,___fltol@f1+1
  2885  005214  C0DE  F0C3         	movff	_z+2,___fltol@f1+2
  2886  005218  C0DF  F0C4         	movff	_z+3,___fltol@f1+3
  2887  00521C  EC0E  F02F         	call	___fltol	;wreg free
  2888  005220  0100               	movlb	0	; () banked
  2889  005222  51C1               	movf	?___fltol& (0+255),w,b
  2890  005224  0101               	movlb	1	; () banked
  2891  005226  6F63               	movwf	_data_correction& (0+255),b
  2892                           
  2893                           ; BSR set to: 1
  2894                           ;parcheggio.c: 451: if (sensor_distance[0] < sensor_distance[1]) {
  2895  005228  5003               	movf	_sensor_distance+2,w,c	;volatile
  2896  00522A  5C01               	subwf	_sensor_distance,w,c	;volatile
  2897  00522C  5004               	movf	_sensor_distance+3,w,c	;volatile
  2898  00522E  5802               	subwfb	_sensor_distance+1,w,c	;volatile
  2899  005230  B0D8               	btfsc	status,0,c
  2900  005232  D002               	goto	l7746
  2901                           
  2902                           ; BSR set to: 1
  2903                           ;parcheggio.c: 452: data_correction[1] = 0;
  2904  005234  0E00               	movlw	0
  2905  005236  D001               	goto	L1
  2906  005238                     l7746:
  2907                           
  2908                           ; BSR set to: 1
  2909                           ;parcheggio.c: 454: data_correction[1] = 1;
  2910  005238  0E01               	movlw	1
  2911  00523A                     L1:
  2912  00523A  0101               	movlb	1	; () banked
  2913  00523C  6F64               	movwf	(_data_correction+1)& (0+255),b
  2914                           
  2915                           ; BSR set to: 1
  2916                           ;parcheggio.c: 455: }
  2917                           ;parcheggio.c: 456: if ((old_alignment_gap != alignment_gap) || (old_dir_correction != d
      +                          ata_correction[1])) {
  2918                           
  2919                           ; BSR set to: 1
  2920  00523E  0100               	movlb	0	; () banked
  2921  005240  51D8               	movf	_alignment_gap& (0+255),w,b
  2922  005242  0101               	movlb	1	; () banked
  2923  005244  193C               	xorwf	_old_alignment_gap& (0+255),w,b
  2924  005246  E117               	bnz	l835
  2925  005248  0100               	movlb	0	; () banked
  2926  00524A  51D9               	movf	(_alignment_gap+1)& (0+255),w,b
  2927  00524C  0101               	movlb	1	; () banked
  2928  00524E  193D               	xorwf	(_old_alignment_gap+1)& (0+255),w,b
  2929  005250  E112               	bnz	l835
  2930  005252  0100               	movlb	0	; () banked
  2931  005254  51DA               	movf	(_alignment_gap+2)& (0+255),w,b
  2932  005256  0101               	movlb	1	; () banked
  2933  005258  193E               	xorwf	(_old_alignment_gap+2)& (0+255),w,b
  2934  00525A  E10D               	bnz	l835
  2935  00525C  0100               	movlb	0	; () banked
  2936  00525E  51DB               	movf	(_alignment_gap+3)& (0+255),w,b
  2937  005260  0101               	movlb	1	; () banked
  2938  005262  193F               	xorwf	(_old_alignment_gap+3)& (0+255),w,b
  2939  005264  A4D8               	btfss	status,2,c
  2940  005266  D007               	goto	l835
  2941                           
  2942                           ; BSR set to: 1
  2943  005268  0E00               	movlw	0
  2944  00526A  B452               	btfsc	_old_dir_correction/(0+8),_old_dir_correction& (0+7),c	;volatile
  2945  00526C  0E01               	movlw	1
  2946  00526E  0101               	movlb	1	; () banked
  2947  005270  1964               	xorwf	(_data_correction+1)& (0+255),w,b
  2948  005272  B4D8               	btfsc	status,2,c
  2949  005274  0012               	return	
  2950  005276                     l835:
  2951                           
  2952                           ; BSR set to: 1
  2953                           ;parcheggio.c: 457: old_alignment_gap = alignment_gap;
  2954  005276  C0D8  F13C         	movff	_alignment_gap,_old_alignment_gap
  2955  00527A  C0D9  F13D         	movff	_alignment_gap+1,_old_alignment_gap+1
  2956  00527E  C0DA  F13E         	movff	_alignment_gap+2,_old_alignment_gap+2
  2957  005282  C0DB  F13F         	movff	_alignment_gap+3,_old_alignment_gap+3
  2958                           
  2959                           ;parcheggio.c: 458: old_dir_correction = data_correction[1];
  2960  005286  0101               	movlb	1	; () banked
  2961  005288  A164               	btfss	(_data_correction+1)& (0+255),0,b
  2962  00528A  D002               	goto	u10280
  2963  00528C  8452               	bsf	_old_dir_correction/(0+8),_old_dir_correction& (0+7),c	;volatile
  2964  00528E  D001               	goto	l7752
  2965  005290                     u10280:
  2966  005290  9452               	bcf	_old_dir_correction/(0+8),_old_dir_correction& (0+7),c	;volatile
  2967  005292                     l7752:
  2968                           
  2969                           ;parcheggio.c: 459: can_send();
  2970  005292  EC94  F02F         	call	_can_send	;wreg free
  2971                           
  2972                           ;parcheggio.c: 460: }
  2973                           ;parcheggio.c: 461: }
  2974                           ;parcheggio.c: 462: } else {
  2975  005296  0012               	return	
  2976  005298                     l7754:
  2977                           
  2978                           ;parcheggio.c: 463: data_correction[0] = 0;
  2979  005298  0E00               	movlw	0
  2980  00529A  0101               	movlb	1	; () banked
  2981  00529C  6F63               	movwf	_data_correction& (0+255),b
  2982                           
  2983                           ; BSR set to: 1
  2984                           ;parcheggio.c: 464: can_send();
  2985  00529E  EC94  F02F         	call	_can_send	;wreg free
  2986  0052A2  0012               	return	
  2987  0052A4                     __end_of_parallelo:
  2988                           	opt stack 0
  2989                           tblptru	equ	0xFF8
  2990                           tblptrh	equ	0xFF7
  2991                           tblptrl	equ	0xFF6
  2992                           tablat	equ	0xFF5
  2993                           postinc0	equ	0xFEE
  2994                           wreg	equ	0xFE8
  2995                           postdec1	equ	0xFE5
  2996                           fsr1l	equ	0xFE1
  2997                           postinc2	equ	0xFDE
  2998                           postdec2	equ	0xFDD
  2999                           status	equ	0xFD8
  3000                           
  3001 ;; *************** function _can_send *****************
  3002 ;; Defined at:
  3003 ;;		line 417 in file "parcheggio.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;		None
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;		None
  3008 ;; Return value:  Size  Location     Type
  3009 ;;		None               void
  3010 ;; Registers used:
  3011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3021 ;;Total ram usage:        0 bytes
  3022 ;; Hardware stack levels used:    1
  3023 ;; Hardware stack levels required when called:    5
  3024 ;; This function calls:
  3025 ;;		_CANisTxReady
  3026 ;;		_CANsendMessage
  3027 ;; This function is called by:
  3028 ;;		_park_routine
  3029 ;;		_parallelo
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033                           	psect	text4
  3034  005F28                     __ptext4:
  3035                           	opt stack 0
  3036  005F28                     _can_send:
  3037                           	opt stack 23
  3038                           
  3039                           ;parcheggio.c: 418: if (start_operation == 1) {
  3040                           
  3041                           ;incstack = 0
  3042  005F28  AA52               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  3043  005F2A  D063               	goto	l7606
  3044  005F2C                     l7586:
  3045  005F2C  EC41  F033         	call	_CANisTxReady	;wreg free
  3046  005F30  06E8               	decf	wreg,f,c
  3047  005F32  A4D8               	btfss	status,2,c
  3048  005F34  D7FB               	goto	l7586
  3049                           
  3050                           ;parcheggio.c: 421: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG &
      +                           CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3051  005F36  0E05               	movlw	5
  3052  005F38  0100               	movlb	0	; () banked
  3053  005F3A  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3054  005F3C  0E00               	movlw	0
  3055  005F3E  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3056  005F40  0E00               	movlw	0
  3057  005F42  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3058  005F44  0E00               	movlw	0
  3059  005F46  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3060  005F48  0E73               	movlw	low _data_steering
  3061  005F4A  0100               	movlb	0	; () banked
  3062  005F4C  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3063  005F4E  0E01               	movlw	high _data_steering
  3064  005F50  0100               	movlb	0	; () banked
  3065  005F52  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3066  005F54  0E08               	movlw	8
  3067  005F56  0100               	movlb	0	; () banked
  3068  005F58  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3069  005F5A  0EBC               	movlw	188
  3070  005F5C  0100               	movlb	0	; () banked
  3071  005F5E  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3072  005F60  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3073                           
  3074                           ;parcheggio.c: 424: data_speed[0] = set_speed;
  3075  005F64  C0E6  F16B         	movff	_set_speed,_data_speed
  3076                           
  3077                           ;parcheggio.c: 425: data_speed[1] = (set_speed >> 8);
  3078  005F68  0100               	movlb	0	; () banked
  3079  005F6A  51E7               	movf	(_set_speed+1)& (0+255),w,b
  3080  005F6C  0101               	movlb	1	; () banked
  3081  005F6E  6F6C               	movwf	(_data_speed+1)& (0+255),b
  3082                           
  3083                           ; BSR set to: 1
  3084                           ;parcheggio.c: 426: data_speed[2] = dir;
  3085  005F70  0E00               	movlw	0
  3086  005F72  B651               	btfsc	_dir/(0+8),_dir& (0+7),c
  3087  005F74  0E01               	movlw	1
  3088  005F76  0101               	movlb	1	; () banked
  3089  005F78  6F6D               	movwf	(_data_speed+2)& (0+255),b
  3090  005F7A                     l7596:
  3091  005F7A  EC41  F033         	call	_CANisTxReady	;wreg free
  3092  005F7E  06E8               	decf	wreg,f,c
  3093  005F80  A4D8               	btfss	status,2,c
  3094  005F82  D7FB               	goto	l7596
  3095                           
  3096                           ;parcheggio.c: 428: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3097  005F84  0E03               	movlw	3
  3098  005F86  0100               	movlb	0	; () banked
  3099  005F88  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3100  005F8A  0E00               	movlw	0
  3101  005F8C  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3102  005F8E  0E00               	movlw	0
  3103  005F90  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3104  005F92  0E00               	movlw	0
  3105  005F94  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3106  005F96  0E6B               	movlw	low _data_speed
  3107  005F98  0100               	movlb	0	; () banked
  3108  005F9A  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3109  005F9C  0E01               	movlw	high _data_speed
  3110  005F9E  0100               	movlb	0	; () banked
  3111  005FA0  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3112  005FA2  0E08               	movlw	8
  3113  005FA4  0100               	movlb	0	; () banked
  3114  005FA6  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3115  005FA8  0EBC               	movlw	188
  3116  005FAA  0100               	movlb	0	; () banked
  3117  005FAC  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3118  005FAE  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3119                           
  3120                           ;parcheggio.c: 431: data_brake[1] = 0;
  3121  005FB2  0E00               	movlw	0
  3122  005FB4  0101               	movlb	1	; () banked
  3123  005FB6  6F5C               	movwf	(_data_brake+1)& (0+255),b
  3124  005FB8                     l7602:
  3125  005FB8  EC41  F033         	call	_CANisTxReady	;wreg free
  3126  005FBC  06E8               	decf	wreg,f,c
  3127  005FBE  A4D8               	btfss	status,2,c
  3128  005FC0  D7FB               	goto	l7602
  3129                           
  3130                           ;parcheggio.c: 433: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3131  005FC2  0E04               	movlw	4
  3132  005FC4  0100               	movlb	0	; () banked
  3133  005FC6  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3134  005FC8  0E00               	movlw	0
  3135  005FCA  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3136  005FCC  0E00               	movlw	0
  3137  005FCE  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3138  005FD0  0E00               	movlw	0
  3139  005FD2  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3140  005FD4  0E5B               	movlw	low _data_brake
  3141  005FD6  0100               	movlb	0	; () banked
  3142  005FD8  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3143  005FDA  0E01               	movlw	high _data_brake
  3144  005FDC  0100               	movlb	0	; () banked
  3145  005FDE  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3146  005FE0  0E08               	movlw	8
  3147  005FE2  0100               	movlb	0	; () banked
  3148  005FE4  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3149  005FE6  0EBC               	movlw	188
  3150  005FE8  0100               	movlb	0	; () banked
  3151  005FEA  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3152  005FEC  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3153                           
  3154                           ;parcheggio.c: 434: } else {
  3155  005FF0  0012               	return	
  3156  005FF2                     l7606:
  3157  005FF2  EC41  F033         	call	_CANisTxReady	;wreg free
  3158  005FF6  06E8               	decf	wreg,f,c
  3159  005FF8  A4D8               	btfss	status,2,c
  3160  005FFA  D7FB               	goto	l7606
  3161                           
  3162                           ;parcheggio.c: 436: CANsendMessage(0b00000001110, data_correction, 8, CAN_CONFIG_STD_MSG
      +                           & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3163  005FFC  0E0E               	movlw	14
  3164  005FFE  0100               	movlb	0	; () banked
  3165  006000  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3166  006002  0E00               	movlw	0
  3167  006004  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3168  006006  0E00               	movlw	0
  3169  006008  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3170  00600A  0E00               	movlw	0
  3171  00600C  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3172  00600E  0E63               	movlw	low _data_correction
  3173  006010  0100               	movlb	0	; () banked
  3174  006012  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3175  006014  0E01               	movlw	high _data_correction
  3176  006016  0100               	movlb	0	; () banked
  3177  006018  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3178  00601A  0E08               	movlw	8
  3179  00601C  0100               	movlb	0	; () banked
  3180  00601E  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3181  006020  0EBC               	movlw	188
  3182  006022  0100               	movlb	0	; () banked
  3183  006024  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3184  006026  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3185  00602A  0012               	return	
  3186  00602C                     __end_of_can_send:
  3187                           	opt stack 0
  3188                           tblptru	equ	0xFF8
  3189                           tblptrh	equ	0xFF7
  3190                           tblptrl	equ	0xFF6
  3191                           tablat	equ	0xFF5
  3192                           postinc0	equ	0xFEE
  3193                           wreg	equ	0xFE8
  3194                           postdec1	equ	0xFE5
  3195                           fsr1l	equ	0xFE1
  3196                           postinc2	equ	0xFDE
  3197                           postdec2	equ	0xFDD
  3198                           status	equ	0xFD8
  3199                           
  3200 ;; *************** function _CANsendMessage *****************
  3201 ;; Defined at:
  3202 ;;		line 294 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;  identifier      4   23[BANK0 ] unsigned long 
  3205 ;;  data            2   27[BANK0 ] PTR unsigned char 
  3206 ;;		 -> data_speed(8), data_brake(8), data_steering(8), data_correction(8), 
  3207 ;;		 -> data_test(8), data(8), sensor_distance_short(8), 
  3208 ;;  dataLength      1   29[BANK0 ] unsigned char 
  3209 ;;  flags           1   30[BANK0 ] enum E16335
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;  tamp            4   35[BANK0 ] unsigned long 
  3212 ;; Return value:  Size  Location     Type
  3213 ;;		None               void
  3214 ;; Registers used:
  3215 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3216 ;; Tracked objects:
  3217 ;;		On entry : 0/0
  3218 ;;		On exit  : 0/0
  3219 ;;		Unchanged: 0/0
  3220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3221 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3222 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3223 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3224 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3225 ;;Total ram usage:       16 bytes
  3226 ;; Hardware stack levels used:    1
  3227 ;; Hardware stack levels required when called:    4
  3228 ;; This function calls:
  3229 ;;		Nothing
  3230 ;; This function is called by:
  3231 ;;		_main
  3232 ;;		_park_search
  3233 ;;		_park_routine
  3234 ;;		_can_send
  3235 ;; This function uses a non-reentrant model
  3236 ;;
  3237                           
  3238                           	psect	text5
  3239  001858                     __ptext5:
  3240                           	opt stack 0
  3241  001858                     _CANsendMessage:
  3242                           	opt stack 23
  3243                           
  3244                           ;inc\CANlib.h: 296: unsigned long tamp;
  3245                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  3246                           
  3247                           ;incstack = 0
  3248  001858  010F               	movlb	15	; () banked
  3249  00185A  B740               	btfsc	64,3,b	;volatile
  3250  00185C  D13F               	goto	l363
  3251                           
  3252                           ; BSR set to: 15
  3253                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  3254  00185E  C07D  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  3255                           
  3256                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  3257  001862  0100               	movlb	0	; () banked
  3258  001864  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  3259  001866  D003               	goto	l364
  3260                           
  3261                           ; BSR set to: 0
  3262                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  3263  001868  010F               	movlb	15	; () banked
  3264  00186A  8D45               	bsf	69,6,b	;volatile
  3265  00186C  D002               	goto	l365
  3266  00186E                     l364:
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;inc\CANlib.h: 302: else
  3270                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  3271  00186E  010F               	movlb	15	; () banked
  3272  001870  9D45               	bcf	69,6,b	;volatile
  3273  001872                     l365:
  3274                           
  3275                           ; BSR set to: 15
  3276                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  3277  001872  0100               	movlb	0	; () banked
  3278  001874  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  3279  001876  D079               	goto	l366
  3280                           
  3281                           ; BSR set to: 0
  3282                           ;inc\CANlib.h: 306: {
  3283                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  3284  001878  0100               	movlb	0	; () banked
  3285  00187A  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  3286  00187C  0100               	movlb	0	; () banked
  3287  00187E  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3288  001880  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3289  001882  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3290  001884  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3291                           
  3292                           ; BSR set to: 0
  3293                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  3294  001886  C083  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  3295                           
  3296                           ; BSR set to: 0
  3297                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  3298  00188A  0E00               	movlw	0
  3299  00188C  0100               	movlb	0	; () banked
  3300  00188E  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3301  001890  0100               	movlb	0	; () banked
  3302  001892  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3303  001894  0EFF               	movlw	255
  3304  001896  0100               	movlb	0	; () banked
  3305  001898  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3306  00189A  0100               	movlb	0	; () banked
  3307  00189C  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3308  00189E  0E00               	movlw	0
  3309  0018A0  0100               	movlb	0	; () banked
  3310  0018A2  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3311  0018A4  0100               	movlb	0	; () banked
  3312  0018A6  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3313  0018A8  0E00               	movlw	0
  3314  0018AA  0100               	movlb	0	; () banked
  3315  0018AC  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3316  0018AE  0100               	movlb	0	; () banked
  3317  0018B0  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3318                           
  3319                           ; BSR set to: 0
  3320                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  3321  0018B2  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3322  0018B6  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3323  0018BA  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3324  0018BE  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3325  0018C2  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  3326  0018C6  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  3327  0018CA  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  3328  0018CE  0100               	movlb	0	; () banked
  3329  0018D0  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  3330  0018D2  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3331  0018D6  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3332  0018DA  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3333  0018DE  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  3337  0018E2  C083  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  3338                           
  3339                           ; BSR set to: 0
  3340                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  3341  0018E6  0E00               	movlw	0
  3342  0018E8  010F               	movlb	15	; () banked
  3343  0018EA  6F42               	movwf	66,b	;volatile
  3344                           
  3345                           ; BSR set to: 15
  3346                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  3347  0018EC  010F               	movlb	15	; () banked
  3348  0018EE  8742               	bsf	66,3,b	;volatile
  3349                           
  3350                           ; BSR set to: 15
  3351                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  3352  0018F0  0100               	movlb	0	; () banked
  3353  0018F2  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  3354  0018F4  D002               	goto	l367
  3355                           
  3356                           ; BSR set to: 0
  3357                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  3358  0018F6  010F               	movlb	15	; () banked
  3359  0018F8  8142               	bsf	66,0,b	;volatile
  3360  0018FA                     l367:
  3361                           
  3362                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  3363  0018FA  0100               	movlb	0	; () banked
  3364  0018FC  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  3365  0018FE  D002               	goto	l368
  3366                           
  3367                           ; BSR set to: 0
  3368                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  3369  001900  010F               	movlb	15	; () banked
  3370  001902  8342               	bsf	66,1,b	;volatile
  3371  001904                     l368:
  3372                           
  3373                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  3374  001904  0100               	movlb	0	; () banked
  3375  001906  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  3376  001908  D002               	goto	l369
  3377                           
  3378                           ; BSR set to: 0
  3379                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  3380  00190A  010F               	movlb	15	; () banked
  3381  00190C  8B42               	bsf	66,5,b	;volatile
  3382  00190E                     l369:
  3383                           
  3384                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  3385  00190E  0100               	movlb	0	; () banked
  3386  001910  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  3387  001912  D002               	goto	l370
  3388                           
  3389                           ; BSR set to: 0
  3390                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  3391  001914  010F               	movlb	15	; () banked
  3392  001916  8D42               	bsf	66,6,b	;volatile
  3393  001918                     l370:
  3394                           
  3395                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  3396  001918  0100               	movlb	0	; () banked
  3397  00191A  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  3398  00191C  D002               	goto	l4856
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  3402  00191E  010F               	movlb	15	; () banked
  3403  001920  8F42               	bsf	66,7,b	;volatile
  3404  001922                     l4856:
  3405                           
  3406                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  3407  001922  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3408  001926  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3409  00192A  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3410  00192E  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3411  001932  0E16               	movlw	22
  3412  001934  D006               	goto	u5550
  3413  001936                     u5555:
  3414  001936  0100               	movlb	0	; () banked
  3415  001938  90D8               	bcf	status,0,c
  3416  00193A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3417  00193C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3418  00193E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3419  001940  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3420  001942                     u5550:
  3421  001942  2EE8               	decfsz	wreg,f,c
  3422  001944  D7F8               	goto	u5555
  3423  001946  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3424  00194A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3425  00194E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3426  001952  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3427                           
  3428                           ; BSR set to: 0
  3429                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  3430  001956  0100               	movlb	0	; () banked
  3431  001958  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3432  00195A  0100               	movlb	0	; () banked
  3433  00195C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3434  00195E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3435  001960  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3436  001962  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3437                           
  3438                           ; BSR set to: 0
  3439                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  3440  001964  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  3441                           
  3442                           ;inc\CANlib.h: 332: }
  3443  001968  D059               	goto	l4876
  3444  00196A                     l366:
  3445                           
  3446                           ; BSR set to: 0
  3447                           ;inc\CANlib.h: 334: else
  3448                           ;inc\CANlib.h: 336: {
  3449                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  3450  00196A  010F               	movlb	15	; () banked
  3451  00196C  9742               	bcf	66,3,b	;volatile
  3452                           
  3453                           ; BSR set to: 15
  3454                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  3455  00196E  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3456  001972  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3457  001976  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3458  00197A  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3459  00197E  0E04               	movlw	4
  3460  001980  D006               	goto	u5560
  3461  001982                     u5565:
  3462  001982  0100               	movlb	0	; () banked
  3463  001984  90D8               	bcf	status,0,c
  3464  001986  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3465  001988  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3466  00198A  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3467  00198C  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3468  00198E                     u5560:
  3469  00198E  2EE8               	decfsz	wreg,f,c
  3470  001990  D7F8               	goto	u5565
  3471  001992  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3472  001996  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3473  00199A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3474  00199E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3475                           
  3476                           ; BSR set to: 0
  3477                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  3478  0019A2  0100               	movlb	0	; () banked
  3479  0019A4  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3480  0019A6  0100               	movlb	0	; () banked
  3481  0019A8  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3482  0019AA  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3483  0019AC  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3484  0019AE  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3485                           
  3486                           ; BSR set to: 0
  3487                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  3488  0019B0  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  3489                           
  3490                           ; BSR set to: 0
  3491                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  3492  0019B4  0E07               	movlw	7
  3493  0019B6  0100               	movlb	0	; () banked
  3494  0019B8  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3495  0019BA  0100               	movlb	0	; () banked
  3496  0019BC  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3497  0019BE  0E00               	movlw	0
  3498  0019C0  0100               	movlb	0	; () banked
  3499  0019C2  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3500  0019C4  0100               	movlb	0	; () banked
  3501  0019C6  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3502  0019C8  0E00               	movlw	0
  3503  0019CA  0100               	movlb	0	; () banked
  3504  0019CC  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3505  0019CE  0100               	movlb	0	; () banked
  3506  0019D0  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3507  0019D2  0E00               	movlw	0
  3508  0019D4  0100               	movlb	0	; () banked
  3509  0019D6  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3510  0019D8  0100               	movlb	0	; () banked
  3511  0019DA  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3512                           
  3513                           ; BSR set to: 0
  3514                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  3515  0019DC  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3516  0019E0  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3517  0019E4  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3518  0019E8  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3519  0019EC  0E05               	movlw	5
  3520  0019EE                     u5575:
  3521  0019EE  90D8               	bcf	status,0,c
  3522  0019F0  0100               	movlb	0	; () banked
  3523  0019F2  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  3524  0019F4  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  3525  0019F6  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  3526  0019F8  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  3527  0019FA  2EE8               	decfsz	wreg,f,c
  3528  0019FC  D7F8               	goto	u5575
  3529  0019FE  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3530  001A02  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3531  001A06  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3532  001A0A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3533                           
  3534                           ; BSR set to: 0
  3535                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  3536  001A0E  010F               	movlb	15	; () banked
  3537  001A10  5142               	movf	66,w,b	;volatile
  3538  001A12  0B1F               	andlw	31
  3539  001A14  010F               	movlb	15	; () banked
  3540  001A16  6F42               	movwf	66,b	;volatile
  3541                           
  3542                           ; BSR set to: 15
  3543                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  3544  001A18  C083  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  3545  001A1C                     l4876:
  3546                           
  3547                           ;inc\CANlib.h: 347: }
  3548                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  3549  001A1C  0100               	movlb	0	; () banked
  3550  001A1E  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  3551  001A20  D003               	goto	l373
  3552                           
  3553                           ; BSR set to: 0
  3554                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  3555  001A22  010F               	movlb	15	; () banked
  3556  001A24  8140               	bsf	64,0,b	;volatile
  3557  001A26  D002               	goto	l374
  3558  001A28                     l373:
  3559                           
  3560                           ; BSR set to: 0
  3561                           ;inc\CANlib.h: 351: else
  3562                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  3563  001A28  010F               	movlb	15	; () banked
  3564  001A2A  9140               	bcf	64,0,b	;volatile
  3565  001A2C                     l374:
  3566                           
  3567                           ; BSR set to: 15
  3568                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  3569  001A2C  0100               	movlb	0	; () banked
  3570  001A2E  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  3571  001A30  D003               	goto	l375
  3572                           
  3573                           ; BSR set to: 0
  3574                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  3575  001A32  010F               	movlb	15	; () banked
  3576  001A34  8340               	bsf	64,1,b	;volatile
  3577  001A36  D002               	goto	l4882
  3578  001A38                     l375:
  3579                           
  3580                           ; BSR set to: 0
  3581                           ;inc\CANlib.h: 355: else
  3582                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  3583  001A38  010F               	movlb	15	; () banked
  3584  001A3A  9340               	bcf	64,1,b	;volatile
  3585  001A3C                     l4882:
  3586                           
  3587                           ; BSR set to: 15
  3588                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  3589  001A3C  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  3590  001A40  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  3591  001A44  50DF               	movf	indf2,w,c
  3592  001A46  010F               	movlb	15	; () banked
  3593  001A48  6F46               	movwf	70,b	;volatile
  3594                           
  3595                           ; BSR set to: 15
  3596                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  3597  001A4A  0100               	movlb	0	; () banked
  3598  001A4C  EE20 F001          	lfsr	2,1
  3599  001A50  517B               	movf	CANsendMessage@data& (0+255),w,b
  3600  001A52  26D9               	addwf	fsr2l,f,c
  3601  001A54  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3602  001A56  22DA               	addwfc	fsr2h,f,c
  3603  001A58  50DF               	movf	indf2,w,c
  3604  001A5A  010F               	movlb	15	; () banked
  3605  001A5C  6F47               	movwf	71,b	;volatile
  3606                           
  3607                           ; BSR set to: 15
  3608                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  3609  001A5E  0100               	movlb	0	; () banked
  3610  001A60  EE20 F002          	lfsr	2,2
  3611  001A64  517B               	movf	CANsendMessage@data& (0+255),w,b
  3612  001A66  26D9               	addwf	fsr2l,f,c
  3613  001A68  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3614  001A6A  22DA               	addwfc	fsr2h,f,c
  3615  001A6C  50DF               	movf	indf2,w,c
  3616  001A6E  010F               	movlb	15	; () banked
  3617  001A70  6F48               	movwf	72,b	;volatile
  3618                           
  3619                           ; BSR set to: 15
  3620                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  3621  001A72  0100               	movlb	0	; () banked
  3622  001A74  EE20 F003          	lfsr	2,3
  3623  001A78  517B               	movf	CANsendMessage@data& (0+255),w,b
  3624  001A7A  26D9               	addwf	fsr2l,f,c
  3625  001A7C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3626  001A7E  22DA               	addwfc	fsr2h,f,c
  3627  001A80  50DF               	movf	indf2,w,c
  3628  001A82  010F               	movlb	15	; () banked
  3629  001A84  6F49               	movwf	73,b	;volatile
  3630                           
  3631                           ; BSR set to: 15
  3632                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  3633  001A86  0100               	movlb	0	; () banked
  3634  001A88  EE20 F004          	lfsr	2,4
  3635  001A8C  517B               	movf	CANsendMessage@data& (0+255),w,b
  3636  001A8E  26D9               	addwf	fsr2l,f,c
  3637  001A90  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3638  001A92  22DA               	addwfc	fsr2h,f,c
  3639  001A94  50DF               	movf	indf2,w,c
  3640  001A96  010F               	movlb	15	; () banked
  3641  001A98  6F4A               	movwf	74,b	;volatile
  3642                           
  3643                           ; BSR set to: 15
  3644                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  3645  001A9A  0100               	movlb	0	; () banked
  3646  001A9C  EE20 F005          	lfsr	2,5
  3647  001AA0  517B               	movf	CANsendMessage@data& (0+255),w,b
  3648  001AA2  26D9               	addwf	fsr2l,f,c
  3649  001AA4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3650  001AA6  22DA               	addwfc	fsr2h,f,c
  3651  001AA8  50DF               	movf	indf2,w,c
  3652  001AAA  010F               	movlb	15	; () banked
  3653  001AAC  6F4B               	movwf	75,b	;volatile
  3654                           
  3655                           ; BSR set to: 15
  3656                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  3657  001AAE  0100               	movlb	0	; () banked
  3658  001AB0  EE20 F006          	lfsr	2,6
  3659  001AB4  517B               	movf	CANsendMessage@data& (0+255),w,b
  3660  001AB6  26D9               	addwf	fsr2l,f,c
  3661  001AB8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3662  001ABA  22DA               	addwfc	fsr2h,f,c
  3663  001ABC  50DF               	movf	indf2,w,c
  3664  001ABE  010F               	movlb	15	; () banked
  3665  001AC0  6F4C               	movwf	76,b	;volatile
  3666                           
  3667                           ; BSR set to: 15
  3668                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  3669  001AC2  0100               	movlb	0	; () banked
  3670  001AC4  EE20 F007          	lfsr	2,7
  3671  001AC8  517B               	movf	CANsendMessage@data& (0+255),w,b
  3672  001ACA  26D9               	addwf	fsr2l,f,c
  3673  001ACC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3674  001ACE  22DA               	addwfc	fsr2h,f,c
  3675  001AD0  50DF               	movf	indf2,w,c
  3676  001AD2  010F               	movlb	15	; () banked
  3677  001AD4  6F4D               	movwf	77,b	;volatile
  3678                           
  3679                           ; BSR set to: 15
  3680                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  3681  001AD6  010F               	movlb	15	; () banked
  3682  001AD8  8740               	bsf	64,3,b	;volatile
  3683                           
  3684                           ; BSR set to: 15
  3685                           ;inc\CANlib.h: 368: return;
  3686  001ADA  0012               	return	
  3687  001ADC                     l363:
  3688                           
  3689                           ; BSR set to: 15
  3690                           ;inc\CANlib.h: 369: }
  3691                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  3692  001ADC  010F               	movlb	15	; () banked
  3693  001ADE  B730               	btfsc	48,3,b	;volatile
  3694  001AE0  D13F               	goto	l378
  3695                           
  3696                           ; BSR set to: 15
  3697                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  3698  001AE2  C07D  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  3699                           
  3700                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  3701  001AE6  0100               	movlb	0	; () banked
  3702  001AE8  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  3703  001AEA  D003               	goto	l379
  3704                           
  3705                           ; BSR set to: 0
  3706                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  3707  001AEC  010F               	movlb	15	; () banked
  3708  001AEE  8D35               	bsf	53,6,b	;volatile
  3709  001AF0  D002               	goto	l380
  3710  001AF2                     l379:
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;inc\CANlib.h: 378: else
  3714                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  3715  001AF2  010F               	movlb	15	; () banked
  3716  001AF4  9D35               	bcf	53,6,b	;volatile
  3717  001AF6                     l380:
  3718                           
  3719                           ; BSR set to: 15
  3720                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  3721  001AF6  0100               	movlb	0	; () banked
  3722  001AF8  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  3723  001AFA  D079               	goto	l381
  3724                           
  3725                           ; BSR set to: 0
  3726                           ;inc\CANlib.h: 382: {
  3727                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  3728  001AFC  0100               	movlb	0	; () banked
  3729  001AFE  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  3730  001B00  0100               	movlb	0	; () banked
  3731  001B02  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3732  001B04  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3733  001B06  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3734  001B08  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3735                           
  3736                           ; BSR set to: 0
  3737                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  3738  001B0A  C083  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  3739                           
  3740                           ; BSR set to: 0
  3741                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  3742  001B0E  0E00               	movlw	0
  3743  001B10  0100               	movlb	0	; () banked
  3744  001B12  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3745  001B14  0100               	movlb	0	; () banked
  3746  001B16  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3747  001B18  0EFF               	movlw	255
  3748  001B1A  0100               	movlb	0	; () banked
  3749  001B1C  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3750  001B1E  0100               	movlb	0	; () banked
  3751  001B20  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3752  001B22  0E00               	movlw	0
  3753  001B24  0100               	movlb	0	; () banked
  3754  001B26  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3755  001B28  0100               	movlb	0	; () banked
  3756  001B2A  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3757  001B2C  0E00               	movlw	0
  3758  001B2E  0100               	movlb	0	; () banked
  3759  001B30  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3760  001B32  0100               	movlb	0	; () banked
  3761  001B34  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3762                           
  3763                           ; BSR set to: 0
  3764                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  3765  001B36  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3766  001B3A  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3767  001B3E  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3768  001B42  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3769  001B46  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  3770  001B4A  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  3771  001B4E  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  3772  001B52  0100               	movlb	0	; () banked
  3773  001B54  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  3774  001B56  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3775  001B5A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3776  001B5E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3777  001B62  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3778                           
  3779                           ; BSR set to: 0
  3780                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  3781  001B66  C083  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  3782                           
  3783                           ; BSR set to: 0
  3784                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  3785  001B6A  0E00               	movlw	0
  3786  001B6C  010F               	movlb	15	; () banked
  3787  001B6E  6F32               	movwf	50,b	;volatile
  3788                           
  3789                           ; BSR set to: 15
  3790                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  3791  001B70  010F               	movlb	15	; () banked
  3792  001B72  8732               	bsf	50,3,b	;volatile
  3793                           
  3794                           ; BSR set to: 15
  3795                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  3796  001B74  0100               	movlb	0	; () banked
  3797  001B76  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  3798  001B78  D002               	goto	l382
  3799                           
  3800                           ; BSR set to: 0
  3801                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  3802  001B7A  010F               	movlb	15	; () banked
  3803  001B7C  8132               	bsf	50,0,b	;volatile
  3804  001B7E                     l382:
  3805                           
  3806                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  3807  001B7E  0100               	movlb	0	; () banked
  3808  001B80  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  3809  001B82  D002               	goto	l383
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  3813  001B84  010F               	movlb	15	; () banked
  3814  001B86  8332               	bsf	50,1,b	;volatile
  3815  001B88                     l383:
  3816                           
  3817                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  3818  001B88  0100               	movlb	0	; () banked
  3819  001B8A  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  3820  001B8C  D002               	goto	l384
  3821                           
  3822                           ; BSR set to: 0
  3823                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  3824  001B8E  010F               	movlb	15	; () banked
  3825  001B90  8B32               	bsf	50,5,b	;volatile
  3826  001B92                     l384:
  3827                           
  3828                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  3829  001B92  0100               	movlb	0	; () banked
  3830  001B94  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  3831  001B96  D002               	goto	l385
  3832                           
  3833                           ; BSR set to: 0
  3834                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  3835  001B98  010F               	movlb	15	; () banked
  3836  001B9A  8D32               	bsf	50,6,b	;volatile
  3837  001B9C                     l385:
  3838                           
  3839                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  3840  001B9C  0100               	movlb	0	; () banked
  3841  001B9E  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  3842  001BA0  D002               	goto	l4932
  3843                           
  3844                           ; BSR set to: 0
  3845                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  3846  001BA2  010F               	movlb	15	; () banked
  3847  001BA4  8F32               	bsf	50,7,b	;volatile
  3848  001BA6                     l4932:
  3849                           
  3850                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  3851  001BA6  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3852  001BAA  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3853  001BAE  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3854  001BB2  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3855  001BB6  0E16               	movlw	22
  3856  001BB8  D006               	goto	u5680
  3857  001BBA                     u5685:
  3858  001BBA  0100               	movlb	0	; () banked
  3859  001BBC  90D8               	bcf	status,0,c
  3860  001BBE  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3861  001BC0  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3862  001BC2  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3863  001BC4  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3864  001BC6                     u5680:
  3865  001BC6  2EE8               	decfsz	wreg,f,c
  3866  001BC8  D7F8               	goto	u5685
  3867  001BCA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3868  001BCE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3869  001BD2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3870  001BD6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3871                           
  3872                           ; BSR set to: 0
  3873                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  3874  001BDA  0100               	movlb	0	; () banked
  3875  001BDC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3876  001BDE  0100               	movlb	0	; () banked
  3877  001BE0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3878  001BE2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3879  001BE4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3880  001BE6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3881                           
  3882                           ; BSR set to: 0
  3883                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  3884  001BE8  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  3885                           
  3886                           ;inc\CANlib.h: 407: }
  3887  001BEC  D059               	goto	l4952
  3888  001BEE                     l381:
  3889                           
  3890                           ; BSR set to: 0
  3891                           ;inc\CANlib.h: 409: else
  3892                           ;inc\CANlib.h: 411: {
  3893                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  3894  001BEE  010F               	movlb	15	; () banked
  3895  001BF0  9732               	bcf	50,3,b	;volatile
  3896                           
  3897                           ; BSR set to: 15
  3898                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  3899  001BF2  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3900  001BF6  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3901  001BFA  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3902  001BFE  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3903  001C02  0E04               	movlw	4
  3904  001C04  D006               	goto	u5690
  3905  001C06                     u5695:
  3906  001C06  0100               	movlb	0	; () banked
  3907  001C08  90D8               	bcf	status,0,c
  3908  001C0A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3909  001C0C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3910  001C0E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3911  001C10  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3912  001C12                     u5690:
  3913  001C12  2EE8               	decfsz	wreg,f,c
  3914  001C14  D7F8               	goto	u5695
  3915  001C16  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3916  001C1A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3917  001C1E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3918  001C22  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3919                           
  3920                           ; BSR set to: 0
  3921                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  3922  001C26  0100               	movlb	0	; () banked
  3923  001C28  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3924  001C2A  0100               	movlb	0	; () banked
  3925  001C2C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3926  001C2E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3927  001C30  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3928  001C32  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3929                           
  3930                           ; BSR set to: 0
  3931                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  3932  001C34  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  3933                           
  3934                           ; BSR set to: 0
  3935                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  3936  001C38  0E07               	movlw	7
  3937  001C3A  0100               	movlb	0	; () banked
  3938  001C3C  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3939  001C3E  0100               	movlb	0	; () banked
  3940  001C40  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3941  001C42  0E00               	movlw	0
  3942  001C44  0100               	movlb	0	; () banked
  3943  001C46  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3944  001C48  0100               	movlb	0	; () banked
  3945  001C4A  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3946  001C4C  0E00               	movlw	0
  3947  001C4E  0100               	movlb	0	; () banked
  3948  001C50  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3949  001C52  0100               	movlb	0	; () banked
  3950  001C54  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3951  001C56  0E00               	movlw	0
  3952  001C58  0100               	movlb	0	; () banked
  3953  001C5A  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3954  001C5C  0100               	movlb	0	; () banked
  3955  001C5E  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3956                           
  3957                           ; BSR set to: 0
  3958                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  3959  001C60  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3960  001C64  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3961  001C68  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3962  001C6C  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3963  001C70  0E05               	movlw	5
  3964  001C72                     u5705:
  3965  001C72  90D8               	bcf	status,0,c
  3966  001C74  0100               	movlb	0	; () banked
  3967  001C76  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  3968  001C78  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  3969  001C7A  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  3970  001C7C  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  3971  001C7E  2EE8               	decfsz	wreg,f,c
  3972  001C80  D7F8               	goto	u5705
  3973  001C82  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3974  001C86  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3975  001C8A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3976  001C8E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3977                           
  3978                           ; BSR set to: 0
  3979                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  3980  001C92  010F               	movlb	15	; () banked
  3981  001C94  5132               	movf	50,w,b	;volatile
  3982  001C96  0B1F               	andlw	31
  3983  001C98  010F               	movlb	15	; () banked
  3984  001C9A  6F32               	movwf	50,b	;volatile
  3985                           
  3986                           ; BSR set to: 15
  3987                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  3988  001C9C  C083  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  3989  001CA0                     l4952:
  3990                           
  3991                           ;inc\CANlib.h: 422: }
  3992                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  3993  001CA0  0100               	movlb	0	; () banked
  3994  001CA2  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  3995  001CA4  D003               	goto	l388
  3996                           
  3997                           ; BSR set to: 0
  3998                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  3999  001CA6  010F               	movlb	15	; () banked
  4000  001CA8  8130               	bsf	48,0,b	;volatile
  4001  001CAA  D002               	goto	l389
  4002  001CAC                     l388:
  4003                           
  4004                           ; BSR set to: 0
  4005                           ;inc\CANlib.h: 426: else
  4006                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  4007  001CAC  010F               	movlb	15	; () banked
  4008  001CAE  9130               	bcf	48,0,b	;volatile
  4009  001CB0                     l389:
  4010                           
  4011                           ; BSR set to: 15
  4012                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  4013  001CB0  0100               	movlb	0	; () banked
  4014  001CB2  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  4015  001CB4  D003               	goto	l390
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  4019  001CB6  010F               	movlb	15	; () banked
  4020  001CB8  8330               	bsf	48,1,b	;volatile
  4021  001CBA  D002               	goto	l4958
  4022  001CBC                     l390:
  4023                           
  4024                           ; BSR set to: 0
  4025                           ;inc\CANlib.h: 430: else
  4026                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  4027  001CBC  010F               	movlb	15	; () banked
  4028  001CBE  9330               	bcf	48,1,b	;volatile
  4029  001CC0                     l4958:
  4030                           
  4031                           ; BSR set to: 15
  4032                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  4033  001CC0  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  4034  001CC4  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  4035  001CC8  50DF               	movf	indf2,w,c
  4036  001CCA  010F               	movlb	15	; () banked
  4037  001CCC  6F36               	movwf	54,b	;volatile
  4038                           
  4039                           ; BSR set to: 15
  4040                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  4041  001CCE  0100               	movlb	0	; () banked
  4042  001CD0  EE20 F001          	lfsr	2,1
  4043  001CD4  517B               	movf	CANsendMessage@data& (0+255),w,b
  4044  001CD6  26D9               	addwf	fsr2l,f,c
  4045  001CD8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4046  001CDA  22DA               	addwfc	fsr2h,f,c
  4047  001CDC  50DF               	movf	indf2,w,c
  4048  001CDE  010F               	movlb	15	; () banked
  4049  001CE0  6F37               	movwf	55,b	;volatile
  4050                           
  4051                           ; BSR set to: 15
  4052                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  4053  001CE2  0100               	movlb	0	; () banked
  4054  001CE4  EE20 F002          	lfsr	2,2
  4055  001CE8  517B               	movf	CANsendMessage@data& (0+255),w,b
  4056  001CEA  26D9               	addwf	fsr2l,f,c
  4057  001CEC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4058  001CEE  22DA               	addwfc	fsr2h,f,c
  4059  001CF0  50DF               	movf	indf2,w,c
  4060  001CF2  010F               	movlb	15	; () banked
  4061  001CF4  6F38               	movwf	56,b	;volatile
  4062                           
  4063                           ; BSR set to: 15
  4064                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  4065  001CF6  0100               	movlb	0	; () banked
  4066  001CF8  EE20 F003          	lfsr	2,3
  4067  001CFC  517B               	movf	CANsendMessage@data& (0+255),w,b
  4068  001CFE  26D9               	addwf	fsr2l,f,c
  4069  001D00  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4070  001D02  22DA               	addwfc	fsr2h,f,c
  4071  001D04  50DF               	movf	indf2,w,c
  4072  001D06  010F               	movlb	15	; () banked
  4073  001D08  6F39               	movwf	57,b	;volatile
  4074                           
  4075                           ; BSR set to: 15
  4076                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  4077  001D0A  0100               	movlb	0	; () banked
  4078  001D0C  EE20 F004          	lfsr	2,4
  4079  001D10  517B               	movf	CANsendMessage@data& (0+255),w,b
  4080  001D12  26D9               	addwf	fsr2l,f,c
  4081  001D14  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4082  001D16  22DA               	addwfc	fsr2h,f,c
  4083  001D18  50DF               	movf	indf2,w,c
  4084  001D1A  010F               	movlb	15	; () banked
  4085  001D1C  6F3A               	movwf	58,b	;volatile
  4086                           
  4087                           ; BSR set to: 15
  4088                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  4089  001D1E  0100               	movlb	0	; () banked
  4090  001D20  EE20 F005          	lfsr	2,5
  4091  001D24  517B               	movf	CANsendMessage@data& (0+255),w,b
  4092  001D26  26D9               	addwf	fsr2l,f,c
  4093  001D28  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4094  001D2A  22DA               	addwfc	fsr2h,f,c
  4095  001D2C  50DF               	movf	indf2,w,c
  4096  001D2E  010F               	movlb	15	; () banked
  4097  001D30  6F3B               	movwf	59,b	;volatile
  4098                           
  4099                           ; BSR set to: 15
  4100                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  4101  001D32  0100               	movlb	0	; () banked
  4102  001D34  EE20 F006          	lfsr	2,6
  4103  001D38  517B               	movf	CANsendMessage@data& (0+255),w,b
  4104  001D3A  26D9               	addwf	fsr2l,f,c
  4105  001D3C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4106  001D3E  22DA               	addwfc	fsr2h,f,c
  4107  001D40  50DF               	movf	indf2,w,c
  4108  001D42  010F               	movlb	15	; () banked
  4109  001D44  6F3C               	movwf	60,b	;volatile
  4110                           
  4111                           ; BSR set to: 15
  4112                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  4113  001D46  0100               	movlb	0	; () banked
  4114  001D48  EE20 F007          	lfsr	2,7
  4115  001D4C  517B               	movf	CANsendMessage@data& (0+255),w,b
  4116  001D4E  26D9               	addwf	fsr2l,f,c
  4117  001D50  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4118  001D52  22DA               	addwfc	fsr2h,f,c
  4119  001D54  50DF               	movf	indf2,w,c
  4120  001D56  010F               	movlb	15	; () banked
  4121  001D58  6F3D               	movwf	61,b	;volatile
  4122                           
  4123                           ; BSR set to: 15
  4124                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  4125  001D5A  010F               	movlb	15	; () banked
  4126  001D5C  8730               	bsf	48,3,b	;volatile
  4127                           
  4128                           ; BSR set to: 15
  4129                           ;inc\CANlib.h: 444: return;
  4130  001D5E  0012               	return	
  4131  001D60                     l378:
  4132                           
  4133                           ; BSR set to: 15
  4134                           ;inc\CANlib.h: 445: }
  4135                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  4136  001D60  010F               	movlb	15	; () banked
  4137  001D62  B720               	btfsc	32,3,b	;volatile
  4138  001D64  0012               	return	
  4139                           
  4140                           ; BSR set to: 15
  4141                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  4142  001D66  C07D  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  4143                           
  4144                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  4145  001D6A  0100               	movlb	0	; () banked
  4146  001D6C  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  4147  001D6E  D003               	goto	l393
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  4151  001D70  010F               	movlb	15	; () banked
  4152  001D72  8D25               	bsf	37,6,b	;volatile
  4153  001D74  D002               	goto	l394
  4154  001D76                     l393:
  4155                           
  4156                           ; BSR set to: 0
  4157                           ;inc\CANlib.h: 454: else
  4158                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  4159  001D76  010F               	movlb	15	; () banked
  4160  001D78  9D25               	bcf	37,6,b	;volatile
  4161  001D7A                     l394:
  4162                           
  4163                           ; BSR set to: 15
  4164                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  4165  001D7A  0100               	movlb	0	; () banked
  4166  001D7C  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  4167  001D7E  D079               	goto	l395
  4168                           
  4169                           ; BSR set to: 0
  4170                           ;inc\CANlib.h: 458: {
  4171                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  4172  001D80  0100               	movlb	0	; () banked
  4173  001D82  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  4174  001D84  0100               	movlb	0	; () banked
  4175  001D86  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4176  001D88  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4177  001D8A  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4178  001D8C  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4179                           
  4180                           ; BSR set to: 0
  4181                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  4182  001D8E  C083  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  4183                           
  4184                           ; BSR set to: 0
  4185                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  4186  001D92  0E00               	movlw	0
  4187  001D94  0100               	movlb	0	; () banked
  4188  001D96  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  4189  001D98  0100               	movlb	0	; () banked
  4190  001D9A  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4191  001D9C  0EFF               	movlw	255
  4192  001D9E  0100               	movlb	0	; () banked
  4193  001DA0  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  4194  001DA2  0100               	movlb	0	; () banked
  4195  001DA4  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  4196  001DA6  0E00               	movlw	0
  4197  001DA8  0100               	movlb	0	; () banked
  4198  001DAA  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  4199  001DAC  0100               	movlb	0	; () banked
  4200  001DAE  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  4201  001DB0  0E00               	movlw	0
  4202  001DB2  0100               	movlb	0	; () banked
  4203  001DB4  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  4204  001DB6  0100               	movlb	0	; () banked
  4205  001DB8  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  4206                           
  4207                           ; BSR set to: 0
  4208                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  4209  001DBA  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  4210  001DBE  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  4211  001DC2  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  4212  001DC6  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  4213  001DCA  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  4214  001DCE  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  4215  001DD2  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  4216  001DD6  0100               	movlb	0	; () banked
  4217  001DD8  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  4218  001DDA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4219  001DDE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4220  001DE2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4221  001DE6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4222                           
  4223                           ; BSR set to: 0
  4224                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  4225  001DEA  C083  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  4226                           
  4227                           ; BSR set to: 0
  4228                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  4229  001DEE  0E00               	movlw	0
  4230  001DF0  010F               	movlb	15	; () banked
  4231  001DF2  6F22               	movwf	34,b	;volatile
  4232                           
  4233                           ; BSR set to: 15
  4234                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  4235  001DF4  010F               	movlb	15	; () banked
  4236  001DF6  8722               	bsf	34,3,b	;volatile
  4237                           
  4238                           ; BSR set to: 15
  4239                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  4240  001DF8  0100               	movlb	0	; () banked
  4241  001DFA  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  4242  001DFC  D002               	goto	l396
  4243                           
  4244                           ; BSR set to: 0
  4245                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  4246  001DFE  010F               	movlb	15	; () banked
  4247  001E00  8122               	bsf	34,0,b	;volatile
  4248  001E02                     l396:
  4249                           
  4250                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  4251  001E02  0100               	movlb	0	; () banked
  4252  001E04  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  4253  001E06  D002               	goto	l397
  4254                           
  4255                           ; BSR set to: 0
  4256                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  4257  001E08  010F               	movlb	15	; () banked
  4258  001E0A  8322               	bsf	34,1,b	;volatile
  4259  001E0C                     l397:
  4260                           
  4261                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  4262  001E0C  0100               	movlb	0	; () banked
  4263  001E0E  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  4264  001E10  D002               	goto	l398
  4265                           
  4266                           ; BSR set to: 0
  4267                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  4268  001E12  010F               	movlb	15	; () banked
  4269  001E14  8B22               	bsf	34,5,b	;volatile
  4270  001E16                     l398:
  4271                           
  4272                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  4273  001E16  0100               	movlb	0	; () banked
  4274  001E18  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  4275  001E1A  D002               	goto	l399
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  4279  001E1C  010F               	movlb	15	; () banked
  4280  001E1E  8D22               	bsf	34,6,b	;volatile
  4281  001E20                     l399:
  4282                           
  4283                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  4284  001E20  0100               	movlb	0	; () banked
  4285  001E22  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  4286  001E24  D002               	goto	l5008
  4287                           
  4288                           ; BSR set to: 0
  4289                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  4290  001E26  010F               	movlb	15	; () banked
  4291  001E28  8F22               	bsf	34,7,b	;volatile
  4292  001E2A                     l5008:
  4293                           
  4294                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  4295  001E2A  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  4296  001E2E  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  4297  001E32  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  4298  001E36  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  4299  001E3A  0E16               	movlw	22
  4300  001E3C  D006               	goto	u5810
  4301  001E3E                     u5815:
  4302  001E3E  0100               	movlb	0	; () banked
  4303  001E40  90D8               	bcf	status,0,c
  4304  001E42  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  4305  001E44  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  4306  001E46  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  4307  001E48  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  4308  001E4A                     u5810:
  4309  001E4A  2EE8               	decfsz	wreg,f,c
  4310  001E4C  D7F8               	goto	u5815
  4311  001E4E  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4312  001E52  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4313  001E56  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4314  001E5A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4315                           
  4316                           ; BSR set to: 0
  4317                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  4318  001E5E  0100               	movlb	0	; () banked
  4319  001E60  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  4320  001E62  0100               	movlb	0	; () banked
  4321  001E64  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4322  001E66  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4323  001E68  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4324  001E6A  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4325                           
  4326                           ; BSR set to: 0
  4327                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  4328  001E6C  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  4329                           
  4330                           ;inc\CANlib.h: 483: }
  4331  001E70  D059               	goto	l5028
  4332  001E72                     l395:
  4333                           
  4334                           ; BSR set to: 0
  4335                           ;inc\CANlib.h: 485: else
  4336                           ;inc\CANlib.h: 487: {
  4337                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  4338  001E72  010F               	movlb	15	; () banked
  4339  001E74  9722               	bcf	34,3,b	;volatile
  4340                           
  4341                           ; BSR set to: 15
  4342                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  4343  001E76  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  4344  001E7A  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  4345  001E7E  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  4346  001E82  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  4347  001E86  0E04               	movlw	4
  4348  001E88  D006               	goto	u5820
  4349  001E8A                     u5825:
  4350  001E8A  0100               	movlb	0	; () banked
  4351  001E8C  90D8               	bcf	status,0,c
  4352  001E8E  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  4353  001E90  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  4354  001E92  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  4355  001E94  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  4356  001E96                     u5820:
  4357  001E96  2EE8               	decfsz	wreg,f,c
  4358  001E98  D7F8               	goto	u5825
  4359  001E9A  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4360  001E9E  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4361  001EA2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4362  001EA6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4363                           
  4364                           ; BSR set to: 0
  4365                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  4366  001EAA  0100               	movlb	0	; () banked
  4367  001EAC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  4368  001EAE  0100               	movlb	0	; () banked
  4369  001EB0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4370  001EB2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4371  001EB4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4372  001EB6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4373                           
  4374                           ; BSR set to: 0
  4375                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  4376  001EB8  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  4380  001EBC  0E07               	movlw	7
  4381  001EBE  0100               	movlb	0	; () banked
  4382  001EC0  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  4383  001EC2  0100               	movlb	0	; () banked
  4384  001EC4  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4385  001EC6  0E00               	movlw	0
  4386  001EC8  0100               	movlb	0	; () banked
  4387  001ECA  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  4388  001ECC  0100               	movlb	0	; () banked
  4389  001ECE  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  4390  001ED0  0E00               	movlw	0
  4391  001ED2  0100               	movlb	0	; () banked
  4392  001ED4  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  4393  001ED6  0100               	movlb	0	; () banked
  4394  001ED8  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  4395  001EDA  0E00               	movlw	0
  4396  001EDC  0100               	movlb	0	; () banked
  4397  001EDE  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  4398  001EE0  0100               	movlb	0	; () banked
  4399  001EE2  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  4400                           
  4401                           ; BSR set to: 0
  4402                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  4403  001EE4  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  4404  001EE8  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  4405  001EEC  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  4406  001EF0  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  4407  001EF4  0E05               	movlw	5
  4408  001EF6                     u5835:
  4409  001EF6  90D8               	bcf	status,0,c
  4410  001EF8  0100               	movlb	0	; () banked
  4411  001EFA  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  4412  001EFC  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  4413  001EFE  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  4414  001F00  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  4415  001F02  2EE8               	decfsz	wreg,f,c
  4416  001F04  D7F8               	goto	u5835
  4417  001F06  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4418  001F0A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4419  001F0E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4420  001F12  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4421                           
  4422                           ; BSR set to: 0
  4423                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  4424  001F16  010F               	movlb	15	; () banked
  4425  001F18  5122               	movf	34,w,b	;volatile
  4426  001F1A  0B1F               	andlw	31
  4427  001F1C  010F               	movlb	15	; () banked
  4428  001F1E  6F22               	movwf	34,b	;volatile
  4429                           
  4430                           ; BSR set to: 15
  4431                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  4432  001F20  C083  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  4433  001F24                     l5028:
  4434                           
  4435                           ;inc\CANlib.h: 498: }
  4436                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  4437  001F24  0100               	movlb	0	; () banked
  4438  001F26  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  4439  001F28  D003               	goto	l402
  4440                           
  4441                           ; BSR set to: 0
  4442                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  4443  001F2A  010F               	movlb	15	; () banked
  4444  001F2C  8120               	bsf	32,0,b	;volatile
  4445  001F2E  D002               	goto	l403
  4446  001F30                     l402:
  4447                           
  4448                           ; BSR set to: 0
  4449                           ;inc\CANlib.h: 502: else
  4450                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  4451  001F30  010F               	movlb	15	; () banked
  4452  001F32  9120               	bcf	32,0,b	;volatile
  4453  001F34                     l403:
  4454                           
  4455                           ; BSR set to: 15
  4456                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  4457  001F34  0100               	movlb	0	; () banked
  4458  001F36  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  4459  001F38  D003               	goto	l404
  4460                           
  4461                           ; BSR set to: 0
  4462                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  4463  001F3A  010F               	movlb	15	; () banked
  4464  001F3C  8320               	bsf	32,1,b	;volatile
  4465  001F3E  D002               	goto	l5034
  4466  001F40                     l404:
  4467                           
  4468                           ; BSR set to: 0
  4469                           ;inc\CANlib.h: 506: else
  4470                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  4471  001F40  010F               	movlb	15	; () banked
  4472  001F42  9320               	bcf	32,1,b	;volatile
  4473  001F44                     l5034:
  4474                           
  4475                           ; BSR set to: 15
  4476                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  4477  001F44  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  4478  001F48  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  4479  001F4C  50DF               	movf	indf2,w,c
  4480  001F4E  010F               	movlb	15	; () banked
  4481  001F50  6F26               	movwf	38,b	;volatile
  4482                           
  4483                           ; BSR set to: 15
  4484                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  4485  001F52  0100               	movlb	0	; () banked
  4486  001F54  EE20 F001          	lfsr	2,1
  4487  001F58  517B               	movf	CANsendMessage@data& (0+255),w,b
  4488  001F5A  26D9               	addwf	fsr2l,f,c
  4489  001F5C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4490  001F5E  22DA               	addwfc	fsr2h,f,c
  4491  001F60  50DF               	movf	indf2,w,c
  4492  001F62  010F               	movlb	15	; () banked
  4493  001F64  6F27               	movwf	39,b	;volatile
  4494                           
  4495                           ; BSR set to: 15
  4496                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  4497  001F66  0100               	movlb	0	; () banked
  4498  001F68  EE20 F002          	lfsr	2,2
  4499  001F6C  517B               	movf	CANsendMessage@data& (0+255),w,b
  4500  001F6E  26D9               	addwf	fsr2l,f,c
  4501  001F70  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4502  001F72  22DA               	addwfc	fsr2h,f,c
  4503  001F74  50DF               	movf	indf2,w,c
  4504  001F76  010F               	movlb	15	; () banked
  4505  001F78  6F28               	movwf	40,b	;volatile
  4506                           
  4507                           ; BSR set to: 15
  4508                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  4509  001F7A  0100               	movlb	0	; () banked
  4510  001F7C  EE20 F003          	lfsr	2,3
  4511  001F80  517B               	movf	CANsendMessage@data& (0+255),w,b
  4512  001F82  26D9               	addwf	fsr2l,f,c
  4513  001F84  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4514  001F86  22DA               	addwfc	fsr2h,f,c
  4515  001F88  50DF               	movf	indf2,w,c
  4516  001F8A  010F               	movlb	15	; () banked
  4517  001F8C  6F29               	movwf	41,b	;volatile
  4518                           
  4519                           ; BSR set to: 15
  4520                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  4521  001F8E  0100               	movlb	0	; () banked
  4522  001F90  EE20 F004          	lfsr	2,4
  4523  001F94  517B               	movf	CANsendMessage@data& (0+255),w,b
  4524  001F96  26D9               	addwf	fsr2l,f,c
  4525  001F98  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4526  001F9A  22DA               	addwfc	fsr2h,f,c
  4527  001F9C  50DF               	movf	indf2,w,c
  4528  001F9E  010F               	movlb	15	; () banked
  4529  001FA0  6F2A               	movwf	42,b	;volatile
  4530                           
  4531                           ; BSR set to: 15
  4532                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  4533  001FA2  0100               	movlb	0	; () banked
  4534  001FA4  EE20 F005          	lfsr	2,5
  4535  001FA8  517B               	movf	CANsendMessage@data& (0+255),w,b
  4536  001FAA  26D9               	addwf	fsr2l,f,c
  4537  001FAC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4538  001FAE  22DA               	addwfc	fsr2h,f,c
  4539  001FB0  50DF               	movf	indf2,w,c
  4540  001FB2  010F               	movlb	15	; () banked
  4541  001FB4  6F2B               	movwf	43,b	;volatile
  4542                           
  4543                           ; BSR set to: 15
  4544                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  4545  001FB6  0100               	movlb	0	; () banked
  4546  001FB8  EE20 F006          	lfsr	2,6
  4547  001FBC  517B               	movf	CANsendMessage@data& (0+255),w,b
  4548  001FBE  26D9               	addwf	fsr2l,f,c
  4549  001FC0  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4550  001FC2  22DA               	addwfc	fsr2h,f,c
  4551  001FC4  50DF               	movf	indf2,w,c
  4552  001FC6  010F               	movlb	15	; () banked
  4553  001FC8  6F2C               	movwf	44,b	;volatile
  4554                           
  4555                           ; BSR set to: 15
  4556                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  4557  001FCA  0100               	movlb	0	; () banked
  4558  001FCC  EE20 F007          	lfsr	2,7
  4559  001FD0  517B               	movf	CANsendMessage@data& (0+255),w,b
  4560  001FD2  26D9               	addwf	fsr2l,f,c
  4561  001FD4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4562  001FD6  22DA               	addwfc	fsr2h,f,c
  4563  001FD8  50DF               	movf	indf2,w,c
  4564  001FDA  010F               	movlb	15	; () banked
  4565  001FDC  6F2D               	movwf	45,b	;volatile
  4566                           
  4567                           ; BSR set to: 15
  4568                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  4569  001FDE  010F               	movlb	15	; () banked
  4570  001FE0  8720               	bsf	32,3,b	;volatile
  4571                           
  4572                           ; BSR set to: 15
  4573                           ;inc\CANlib.h: 520: return;
  4574  001FE2  0012               	return	
  4575  001FE4                     __end_of_CANsendMessage:
  4576                           	opt stack 0
  4577                           tblptru	equ	0xFF8
  4578                           tblptrh	equ	0xFF7
  4579                           tblptrl	equ	0xFF6
  4580                           tablat	equ	0xFF5
  4581                           postinc0	equ	0xFEE
  4582                           wreg	equ	0xFE8
  4583                           postdec1	equ	0xFE5
  4584                           fsr1l	equ	0xFE1
  4585                           indf2	equ	0xFDF
  4586                           postinc2	equ	0xFDE
  4587                           postdec2	equ	0xFDD
  4588                           fsr2h	equ	0xFDA
  4589                           fsr2l	equ	0xFD9
  4590                           status	equ	0xFD8
  4591                           
  4592 ;; *************** function _CANisTxReady *****************
  4593 ;; Defined at:
  4594 ;;		line 1154 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  4595 ;; Parameters:    Size  Location     Type
  4596 ;;		None
  4597 ;; Auto vars:     Size  Location     Type
  4598 ;;		None
  4599 ;; Return value:  Size  Location     Type
  4600 ;;                  1    wreg      unsigned char 
  4601 ;; Registers used:
  4602 ;;		wreg, status,2
  4603 ;; Tracked objects:
  4604 ;;		On entry : 0/0
  4605 ;;		On exit  : 0/0
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4609 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4611 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4612 ;;Total ram usage:        1 bytes
  4613 ;; Hardware stack levels used:    1
  4614 ;; Hardware stack levels required when called:    4
  4615 ;; This function calls:
  4616 ;;		Nothing
  4617 ;; This function is called by:
  4618 ;;		_main
  4619 ;;		_park_search
  4620 ;;		_park_routine
  4621 ;;		_can_send
  4622 ;; This function uses a non-reentrant model
  4623 ;;
  4624                           
  4625                           	psect	text6
  4626  006682                     __ptext6:
  4627                           	opt stack 0
  4628  006682                     _CANisTxReady:
  4629                           	opt stack 23
  4630                           
  4631                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  4632                           
  4633                           ; BSR set to: 15
  4634                           ;incstack = 0
  4635  006682  0E01               	movlw	1
  4636  006684  0100               	movlb	0	; () banked
  4637  006686  6F77               	movwf	_CANisTxReady$2845& (0+255),b
  4638                           
  4639                           ; BSR set to: 0
  4640  006688  010F               	movlb	15	; () banked
  4641  00668A  A740               	btfss	64,3,b	;volatile
  4642  00668C  D009               	goto	l556
  4643                           
  4644                           ; BSR set to: 15
  4645  00668E  010F               	movlb	15	; () banked
  4646  006690  A730               	btfss	48,3,b	;volatile
  4647  006692  D006               	goto	l556
  4648                           
  4649                           ; BSR set to: 15
  4650  006694  010F               	movlb	15	; () banked
  4651  006696  A720               	btfss	32,3,b	;volatile
  4652  006698  D003               	goto	l556
  4653                           
  4654                           ; BSR set to: 15
  4655  00669A  0E00               	movlw	0
  4656  00669C  0100               	movlb	0	; () banked
  4657  00669E  6F77               	movwf	_CANisTxReady$2845& (0+255),b
  4658  0066A0                     l556:
  4659  0066A0  0100               	movlb	0	; () banked
  4660  0066A2  5177               	movf	_CANisTxReady$2845& (0+255),w,b
  4661  0066A4  0012               	return	
  4662  0066A6                     __end_of_CANisTxReady:
  4663                           	opt stack 0
  4664                           tblptru	equ	0xFF8
  4665                           tblptrh	equ	0xFF7
  4666                           tblptrl	equ	0xFF6
  4667                           tablat	equ	0xFF5
  4668                           postinc0	equ	0xFEE
  4669                           wreg	equ	0xFE8
  4670                           postdec1	equ	0xFE5
  4671                           fsr1l	equ	0xFE1
  4672                           indf2	equ	0xFDF
  4673                           postinc2	equ	0xFDE
  4674                           postdec2	equ	0xFDD
  4675                           fsr2h	equ	0xFDA
  4676                           fsr2l	equ	0xFD9
  4677                           status	equ	0xFD8
  4678                           
  4679 ;; *************** function _abs *****************
  4680 ;; Defined at:
  4681 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  4682 ;; Parameters:    Size  Location     Type
  4683 ;;  a               2   23[BANK0 ] int 
  4684 ;; Auto vars:     Size  Location     Type
  4685 ;;		None
  4686 ;; Return value:  Size  Location     Type
  4687 ;;                  2   23[BANK0 ] int 
  4688 ;; Registers used:
  4689 ;;		wreg, status,2, status,0
  4690 ;; Tracked objects:
  4691 ;;		On entry : 0/0
  4692 ;;		On exit  : 0/0
  4693 ;;		Unchanged: 0/0
  4694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4695 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4697 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4698 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4699 ;;Total ram usage:        4 bytes
  4700 ;; Hardware stack levels used:    1
  4701 ;; Hardware stack levels required when called:    4
  4702 ;; This function calls:
  4703 ;;		Nothing
  4704 ;; This function is called by:
  4705 ;;		_park_search
  4706 ;;		_parallelo
  4707 ;; This function uses a non-reentrant model
  4708 ;;
  4709                           
  4710                           	psect	text7
  4711  00662A                     __ptext7:
  4712                           	opt stack 0
  4713  00662A                     _abs:
  4714                           	opt stack 24
  4715                           
  4716                           ; BSR set to: 0
  4717                           ;incstack = 0
  4718  00662A  0100               	movlb	0	; () banked
  4719  00662C  AF78               	btfss	(abs@a+1)& (0+255),7,b
  4720  00662E  D00E               	goto	l896
  4721                           
  4722                           ; BSR set to: 0
  4723  006630  C077  F079         	movff	abs@a,??_abs
  4724  006634  C078  F07A         	movff	abs@a+1,??_abs+1
  4725  006638  0100               	movlb	0	; () banked
  4726  00663A  1F79               	comf	??_abs& (0+255),f,b
  4727  00663C  1F7A               	comf	(??_abs+1)& (0+255),f,b
  4728  00663E  4B79               	infsnz	??_abs& (0+255),f,b
  4729  006640  2B7A               	incf	(??_abs+1)& (0+255),f,b
  4730  006642  C079  F077         	movff	??_abs,?_abs
  4731  006646  C07A  F078         	movff	??_abs+1,?_abs+1
  4732  00664A  0012               	return	
  4733  00664C                     l896:
  4734                           
  4735                           ; BSR set to: 0
  4736  00664C  C077  F077         	movff	abs@a,?_abs
  4737  006650  C078  F078         	movff	abs@a+1,?_abs+1
  4738                           
  4739                           ; BSR set to: 0
  4740  006654  0012               	return		;funcret
  4741  006656                     __end_of_abs:
  4742                           	opt stack 0
  4743                           tblptru	equ	0xFF8
  4744                           tblptrh	equ	0xFF7
  4745                           tblptrl	equ	0xFF6
  4746                           tablat	equ	0xFF5
  4747                           postinc0	equ	0xFEE
  4748                           wreg	equ	0xFE8
  4749                           postdec1	equ	0xFE5
  4750                           fsr1l	equ	0xFE1
  4751                           indf2	equ	0xFDF
  4752                           postinc2	equ	0xFDE
  4753                           postdec2	equ	0xFDD
  4754                           fsr2h	equ	0xFDA
  4755                           fsr2l	equ	0xFD9
  4756                           status	equ	0xFD8
  4757                           
  4758 ;; *************** function _matematica *****************
  4759 ;; Defined at:
  4760 ;;		line 468 in file "parcheggio.c"
  4761 ;; Parameters:    Size  Location     Type
  4762 ;;		None
  4763 ;; Auto vars:     Size  Location     Type
  4764 ;;		None
  4765 ;; Return value:  Size  Location     Type
  4766 ;;		None               void
  4767 ;; Registers used:
  4768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4769 ;; Tracked objects:
  4770 ;;		On entry : 0/0
  4771 ;;		On exit  : 0/0
  4772 ;;		Unchanged: 0/0
  4773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4775 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0
  4776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4777 ;;      Totals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0
  4778 ;;Total ram usage:       28 bytes
  4779 ;; Hardware stack levels used:    1
  4780 ;; Hardware stack levels required when called:    8
  4781 ;; This function calls:
  4782 ;;		___fladd
  4783 ;;		___fldiv
  4784 ;;		___flmul
  4785 ;;		___flneg
  4786 ;;		_asin
  4787 ;;		_cos
  4788 ;; This function is called by:
  4789 ;;		_park_routine
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793                           	psect	text8
  4794  002674                     __ptext8:
  4795                           	opt stack 0
  4796  002674                     _matematica:
  4797                           	opt stack 21
  4798                           
  4799                           ;parcheggio.c: 469: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4800                           
  4801                           ; BSR set to: 0
  4802                           ;incstack = 0
  4803  002674  C134  F0AD         	movff	_bordo,___fladd@a	;volatile
  4804  002678  C135  F0AE         	movff	_bordo+1,___fladd@a+1	;volatile
  4805  00267C  C136  F0AF         	movff	_bordo+2,___fladd@a+2	;volatile
  4806  002680  C137  F0B0         	movff	_bordo+3,___fladd@a+3	;volatile
  4807  002684  0E00               	movlw	0
  4808  002686  0100               	movlb	0	; () banked
  4809  002688  6F7B               	movwf	___fldiv@a& (0+255),b
  4810  00268A  0E00               	movlw	0
  4811  00268C  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4812  00268E  0E00               	movlw	0
  4813  002690  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4814  002692  0E40               	movlw	64
  4815  002694  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4816  002696  C1E8  F077         	movff	_larghezza,___fldiv@b
  4817  00269A  C1E9  F078         	movff	_larghezza+1,___fldiv@b+1
  4818  00269E  C1EA  F079         	movff	_larghezza+2,___fldiv@b+2
  4819  0026A2  C1EB  F07A         	movff	_larghezza+3,___fldiv@b+3
  4820  0026A6  EC59  F021         	call	___fldiv	;wreg free
  4821  0026AA  C077  F0A9         	movff	?___fldiv,___fladd@b
  4822  0026AE  C078  F0AA         	movff	?___fldiv+1,___fladd@b+1
  4823  0026B2  C079  F0AB         	movff	?___fldiv+2,___fladd@b+2
  4824  0026B6  C07A  F0AC         	movff	?___fldiv+3,___fladd@b+3
  4825  0026BA  EC85  F018         	call	___fladd	;wreg free
  4826  0026BE  C0A9  F0BD         	movff	?___fladd,___flneg@f1
  4827  0026C2  C0AA  F0BE         	movff	?___fladd+1,___flneg@f1+1
  4828  0026C6  C0AB  F0BF         	movff	?___fladd+2,___flneg@f1+2
  4829  0026CA  C0AC  F0C0         	movff	?___fladd+3,___flneg@f1+3
  4830  0026CE  ECDE  F032         	call	___flneg	;wreg free
  4831  0026D2  C0BD  F1C0         	movff	?___flneg,_matematica$3745
  4832  0026D6  C0BE  F1C1         	movff	?___flneg+1,_matematica$3745+1
  4833  0026DA  C0BF  F1C2         	movff	?___flneg+2,_matematica$3745+2
  4834  0026DE  C0C0  F1C3         	movff	?___flneg+3,_matematica$3745+3
  4835                           
  4836                           ;parcheggio.c: 469: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4837  0026E2  C1C0  F0AD         	movff	_matematica$3745,___fladd@a
  4838  0026E6  C1C1  F0AE         	movff	_matematica$3745+1,___fladd@a+1
  4839  0026EA  C1C2  F0AF         	movff	_matematica$3745+2,___fladd@a+2
  4840  0026EE  C1C3  F0B0         	movff	_matematica$3745+3,___fladd@a+3
  4841  0026F2  0E00               	movlw	0
  4842  0026F4  0100               	movlb	0	; () banked
  4843  0026F6  6F94               	movwf	___flmul@a& (0+255),b
  4844  0026F8  0E00               	movlw	0
  4845  0026FA  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4846  0026FC  0E00               	movlw	0
  4847  0026FE  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4848  002700  0E40               	movlw	64
  4849  002702  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4850  002704  C1EC  F090         	movff	_raggio,___flmul@b
  4851  002708  C1ED  F091         	movff	_raggio+1,___flmul@b+1
  4852  00270C  C1EE  F092         	movff	_raggio+2,___flmul@b+2
  4853  002710  C1EF  F093         	movff	_raggio+3,___flmul@b+3
  4854  002714  ECD9  F01A         	call	___flmul	;wreg free
  4855  002718  C090  F0A9         	movff	?___flmul,___fladd@b
  4856  00271C  C091  F0AA         	movff	?___flmul+1,___fladd@b+1
  4857  002720  C092  F0AB         	movff	?___flmul+2,___fladd@b+2
  4858  002724  C093  F0AC         	movff	?___flmul+3,___fladd@b+3
  4859  002728  EC85  F018         	call	___fladd	;wreg free
  4860  00272C  C0A9  F1C4         	movff	?___fladd,_matematica$3746
  4861  002730  C0AA  F1C5         	movff	?___fladd+1,_matematica$3746+1
  4862  002734  C0AB  F1C6         	movff	?___fladd+2,_matematica$3746+2
  4863  002738  C0AC  F1C7         	movff	?___fladd+3,_matematica$3746+3
  4864                           
  4865                           ;parcheggio.c: 469: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4866  00273C  0E00               	movlw	0
  4867  00273E  0100               	movlb	0	; () banked
  4868  002740  6F7B               	movwf	___fldiv@a& (0+255),b
  4869  002742  0E00               	movlw	0
  4870  002744  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4871  002746  0E00               	movlw	0
  4872  002748  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4873  00274A  0E40               	movlw	64
  4874  00274C  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4875  00274E  C1E8  F077         	movff	_larghezza,___fldiv@b
  4876  002752  C1E9  F078         	movff	_larghezza+1,___fldiv@b+1
  4877  002756  C1EA  F079         	movff	_larghezza+2,___fldiv@b+2
  4878  00275A  C1EB  F07A         	movff	_larghezza+3,___fldiv@b+3
  4879  00275E  EC59  F021         	call	___fldiv	;wreg free
  4880  002762  C077  F0BD         	movff	?___fldiv,___flneg@f1
  4881  002766  C078  F0BE         	movff	?___fldiv+1,___flneg@f1+1
  4882  00276A  C079  F0BF         	movff	?___fldiv+2,___flneg@f1+2
  4883  00276E  C07A  F0C0         	movff	?___fldiv+3,___flneg@f1+3
  4884  002772  ECDE  F032         	call	___flneg	;wreg free
  4885  002776  C0BD  F0AD         	movff	?___flneg,___fladd@a
  4886  00277A  C0BE  F0AE         	movff	?___flneg+1,___fladd@a+1
  4887  00277E  C0BF  F0AF         	movff	?___flneg+2,___fladd@a+2
  4888  002782  C0C0  F0B0         	movff	?___flneg+3,___fladd@a+3
  4889  002786  C1C4  F0A9         	movff	_matematica$3746,___fladd@b
  4890  00278A  C1C5  F0AA         	movff	_matematica$3746+1,___fladd@b+1
  4891  00278E  C1C6  F0AB         	movff	_matematica$3746+2,___fladd@b+2
  4892  002792  C1C7  F0AC         	movff	_matematica$3746+3,___fladd@b+3
  4893  002796  EC85  F018         	call	___fladd	;wreg free
  4894  00279A  C0A9  F1C8         	movff	?___fladd,_matematica$3747
  4895  00279E  C0AA  F1C9         	movff	?___fladd+1,_matematica$3747+1
  4896  0027A2  C0AB  F1CA         	movff	?___fladd+2,_matematica$3747+2
  4897  0027A6  C0AC  F1CB         	movff	?___fladd+3,_matematica$3747+3
  4898                           
  4899                           ;parcheggio.c: 469: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4900  0027AA  C1C8  F077         	movff	_matematica$3747,___fldiv@b
  4901  0027AE  C1C9  F078         	movff	_matematica$3747+1,___fldiv@b+1
  4902  0027B2  C1CA  F079         	movff	_matematica$3747+2,___fldiv@b+2
  4903  0027B6  C1CB  F07A         	movff	_matematica$3747+3,___fldiv@b+3
  4904  0027BA  0E00               	movlw	0
  4905  0027BC  0100               	movlb	0	; () banked
  4906  0027BE  6F94               	movwf	___flmul@a& (0+255),b
  4907  0027C0  0E00               	movlw	0
  4908  0027C2  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4909  0027C4  0E00               	movlw	0
  4910  0027C6  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4911  0027C8  0E40               	movlw	64
  4912  0027CA  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4913  0027CC  C1EC  F090         	movff	_raggio,___flmul@b
  4914  0027D0  C1ED  F091         	movff	_raggio+1,___flmul@b+1
  4915  0027D4  C1EE  F092         	movff	_raggio+2,___flmul@b+2
  4916  0027D8  C1EF  F093         	movff	_raggio+3,___flmul@b+3
  4917  0027DC  ECD9  F01A         	call	___flmul	;wreg free
  4918  0027E0  C090  F07B         	movff	?___flmul,___fldiv@a
  4919  0027E4  C091  F07C         	movff	?___flmul+1,___fldiv@a+1
  4920  0027E8  C092  F07D         	movff	?___flmul+2,___fldiv@a+2
  4921  0027EC  C093  F07E         	movff	?___flmul+3,___fldiv@a+3
  4922  0027F0  EC59  F021         	call	___fldiv	;wreg free
  4923  0027F4  C077  F1CC         	movff	?___fldiv,_matematica$3748
  4924  0027F8  C078  F1CD         	movff	?___fldiv+1,_matematica$3748+1
  4925  0027FC  C079  F1CE         	movff	?___fldiv+2,_matematica$3748+2
  4926  002800  C07A  F1CF         	movff	?___fldiv+3,_matematica$3748+3
  4927                           
  4928                           ;parcheggio.c: 469: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4929  002804  C1CC  F1A0         	movff	_matematica$3748,asin@x
  4930  002808  C1CD  F1A1         	movff	_matematica$3748+1,asin@x+1
  4931  00280C  C1CE  F1A2         	movff	_matematica$3748+2,asin@x+2
  4932  002810  C1CF  F1A3         	movff	_matematica$3748+3,asin@x+3
  4933  002814  EC94  F026         	call	_asin	;wreg free
  4934  002818  C1A0  F12C         	movff	?_asin,_alfa
  4935  00281C  C1A1  F12D         	movff	?_asin+1,_alfa+1
  4936  002820  C1A2  F12E         	movff	?_asin+2,_alfa+2
  4937  002824  C1A3  F12F         	movff	?_asin+3,_alfa+3
  4938                           
  4939                           ;parcheggio.c: 470: alfa = alfa / 3.14159265358979323846 * 180;
  4940  002828  0EDB               	movlw	219
  4941  00282A  0100               	movlb	0	; () banked
  4942  00282C  6F7B               	movwf	___fldiv@a& (0+255),b
  4943  00282E  0E0F               	movlw	15
  4944  002830  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4945  002832  0E49               	movlw	73
  4946  002834  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4947  002836  0E40               	movlw	64
  4948  002838  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4949  00283A  C12C  F077         	movff	_alfa,___fldiv@b
  4950  00283E  C12D  F078         	movff	_alfa+1,___fldiv@b+1
  4951  002842  C12E  F079         	movff	_alfa+2,___fldiv@b+2
  4952  002846  C12F  F07A         	movff	_alfa+3,___fldiv@b+3
  4953  00284A  EC59  F021         	call	___fldiv	;wreg free
  4954  00284E  C077  F090         	movff	?___fldiv,___flmul@b
  4955  002852  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  4956  002856  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  4957  00285A  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  4958  00285E  0E00               	movlw	0
  4959  002860  0100               	movlb	0	; () banked
  4960  002862  6F94               	movwf	___flmul@a& (0+255),b
  4961  002864  0E00               	movlw	0
  4962  002866  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4963  002868  0E34               	movlw	52
  4964  00286A  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4965  00286C  0E43               	movlw	67
  4966  00286E  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4967  002870  ECD9  F01A         	call	___flmul	;wreg free
  4968  002874  C090  F12C         	movff	?___flmul,_alfa
  4969  002878  C091  F12D         	movff	?___flmul+1,_alfa+1
  4970  00287C  C092  F12E         	movff	?___flmul+2,_alfa+2
  4971  002880  C093  F12F         	movff	?___flmul+3,_alfa+3
  4972                           
  4973                           ;parcheggio.c: 471: beta = 90 - alfa;
  4974  002884  C12C  F0BD         	movff	_alfa,___flneg@f1
  4975  002888  C12D  F0BE         	movff	_alfa+1,___flneg@f1+1
  4976  00288C  C12E  F0BF         	movff	_alfa+2,___flneg@f1+2
  4977  002890  C12F  F0C0         	movff	_alfa+3,___flneg@f1+3
  4978  002894  ECDE  F032         	call	___flneg	;wreg free
  4979  002898  C0BD  F0A9         	movff	?___flneg,___fladd@b
  4980  00289C  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  4981  0028A0  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  4982  0028A4  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  4983  0028A8  0E00               	movlw	0
  4984  0028AA  0100               	movlb	0	; () banked
  4985  0028AC  6FAD               	movwf	___fladd@a& (0+255),b
  4986  0028AE  0E00               	movlw	0
  4987  0028B0  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  4988  0028B2  0EB4               	movlw	180
  4989  0028B4  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  4990  0028B6  0E42               	movlw	66
  4991  0028B8  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  4992  0028BA  EC85  F018         	call	___fladd	;wreg free
  4993  0028BE  C0A9  F130         	movff	?___fladd,_beta
  4994  0028C2  C0AA  F131         	movff	?___fladd+1,_beta+1
  4995  0028C6  C0AB  F132         	movff	?___fladd+2,_beta+2
  4996  0028CA  C0AC  F133         	movff	?___fladd+3,_beta+3
  4997                           
  4998                           ;parcheggio.c: 472: alfa = (alfa * 3.14159265358979323846) / 180;
  4999  0028CE  0EDB               	movlw	219
  5000  0028D0  0100               	movlb	0	; () banked
  5001  0028D2  6F94               	movwf	___flmul@a& (0+255),b
  5002  0028D4  0E0F               	movlw	15
  5003  0028D6  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5004  0028D8  0E49               	movlw	73
  5005  0028DA  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5006  0028DC  0E40               	movlw	64
  5007  0028DE  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5008  0028E0  C12C  F090         	movff	_alfa,___flmul@b
  5009  0028E4  C12D  F091         	movff	_alfa+1,___flmul@b+1
  5010  0028E8  C12E  F092         	movff	_alfa+2,___flmul@b+2
  5011  0028EC  C12F  F093         	movff	_alfa+3,___flmul@b+3
  5012  0028F0  ECD9  F01A         	call	___flmul	;wreg free
  5013  0028F4  C090  F077         	movff	?___flmul,___fldiv@b
  5014  0028F8  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  5015  0028FC  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  5016  002900  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  5017  002904  0E00               	movlw	0
  5018  002906  0100               	movlb	0	; () banked
  5019  002908  6F7B               	movwf	___fldiv@a& (0+255),b
  5020  00290A  0E00               	movlw	0
  5021  00290C  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5022  00290E  0E34               	movlw	52
  5023  002910  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5024  002912  0E43               	movlw	67
  5025  002914  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5026  002916  EC59  F021         	call	___fldiv	;wreg free
  5027  00291A  C077  F12C         	movff	?___fldiv,_alfa
  5028  00291E  C078  F12D         	movff	?___fldiv+1,_alfa+1
  5029  002922  C079  F12E         	movff	?___fldiv+2,_alfa+2
  5030  002926  C07A  F12F         	movff	?___fldiv+3,_alfa+3
  5031                           
  5032                           ;parcheggio.c: 473: n = cos(alfa);
  5033  00292A  C12C  F1B8         	movff	_alfa,cos@f
  5034  00292E  C12D  F1B9         	movff	_alfa+1,cos@f+1
  5035  002932  C12E  F1BA         	movff	_alfa+2,cos@f+2
  5036  002936  C12F  F1BB         	movff	_alfa+3,cos@f+3
  5037  00293A  EC16  F030         	call	_cos	;wreg free
  5038  00293E  C1B8  F138         	movff	?_cos,_n
  5039  002942  C1B9  F139         	movff	?_cos+1,_n+1
  5040  002946  C1BA  F13A         	movff	?_cos+2,_n+2
  5041  00294A  C1BB  F13B         	movff	?_cos+3,_n+3
  5042                           
  5043                           ;parcheggio.c: 474: n = 2 * raggio *n;
  5044  00294E  C138  F094         	movff	_n,___flmul@a
  5045  002952  C139  F095         	movff	_n+1,___flmul@a+1
  5046  002956  C13A  F096         	movff	_n+2,___flmul@a+2
  5047  00295A  C13B  F097         	movff	_n+3,___flmul@a+3
  5048  00295E  C1EC  F090         	movff	_raggio,___flmul@b
  5049  002962  C1ED  F091         	movff	_raggio+1,___flmul@b+1
  5050  002966  C1EE  F092         	movff	_raggio+2,___flmul@b+2
  5051  00296A  C1EF  F093         	movff	_raggio+3,___flmul@b+3
  5052  00296E  ECD9  F01A         	call	___flmul	;wreg free
  5053  002972  C090  F1D8         	movff	?___flmul,_matematica$3749
  5054  002976  C091  F1D9         	movff	?___flmul+1,_matematica$3749+1
  5055  00297A  C092  F1DA         	movff	?___flmul+2,_matematica$3749+2
  5056  00297E  C093  F1DB         	movff	?___flmul+3,_matematica$3749+3
  5057                           
  5058                           ;parcheggio.c: 474: n = 2 * raggio *n;
  5059  002982  C1D8  F090         	movff	_matematica$3749,___flmul@b
  5060  002986  C1D9  F091         	movff	_matematica$3749+1,___flmul@b+1
  5061  00298A  C1DA  F092         	movff	_matematica$3749+2,___flmul@b+2
  5062  00298E  C1DB  F093         	movff	_matematica$3749+3,___flmul@b+3
  5063  002992  0E00               	movlw	0
  5064  002994  0100               	movlb	0	; () banked
  5065  002996  6F94               	movwf	___flmul@a& (0+255),b
  5066  002998  0E00               	movlw	0
  5067  00299A  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5068  00299C  0E00               	movlw	0
  5069  00299E  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5070  0029A0  0E40               	movlw	64
  5071  0029A2  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5072  0029A4  ECD9  F01A         	call	___flmul	;wreg free
  5073  0029A8  C090  F138         	movff	?___flmul,_n
  5074  0029AC  C091  F139         	movff	?___flmul+1,_n+1
  5075  0029B0  C092  F13A         	movff	?___flmul+2,_n+2
  5076  0029B4  C093  F13B         	movff	?___flmul+3,_n+3
  5077                           
  5078                           ;parcheggio.c: 475: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  5079  0029B8  C130  F094         	movff	_beta,___flmul@a
  5080  0029BC  C131  F095         	movff	_beta+1,___flmul@a+1
  5081  0029C0  C132  F096         	movff	_beta+2,___flmul@a+2
  5082  0029C4  C133  F097         	movff	_beta+3,___flmul@a+3
  5083  0029C8  C1EC  F090         	movff	_raggio,___flmul@b
  5084  0029CC  C1ED  F091         	movff	_raggio+1,___flmul@b+1
  5085  0029D0  C1EE  F092         	movff	_raggio+2,___flmul@b+2
  5086  0029D4  C1EF  F093         	movff	_raggio+3,___flmul@b+3
  5087  0029D8  ECD9  F01A         	call	___flmul	;wreg free
  5088  0029DC  C090  F1D8         	movff	?___flmul,_matematica$3749
  5089  0029E0  C091  F1D9         	movff	?___flmul+1,_matematica$3749+1
  5090  0029E4  C092  F1DA         	movff	?___flmul+2,_matematica$3749+2
  5091  0029E8  C093  F1DB         	movff	?___flmul+3,_matematica$3749+3
  5092                           
  5093                           ;parcheggio.c: 475: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  5094  0029EC  0EDB               	movlw	219
  5095  0029EE  0100               	movlb	0	; () banked
  5096  0029F0  6F94               	movwf	___flmul@a& (0+255),b
  5097  0029F2  0E0F               	movlw	15
  5098  0029F4  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5099  0029F6  0EC9               	movlw	201
  5100  0029F8  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5101  0029FA  0E40               	movlw	64
  5102  0029FC  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5103  0029FE  C1D8  F090         	movff	_matematica$3749,___flmul@b
  5104  002A02  C1D9  F091         	movff	_matematica$3749+1,___flmul@b+1
  5105  002A06  C1DA  F092         	movff	_matematica$3749+2,___flmul@b+2
  5106  002A0A  C1DB  F093         	movff	_matematica$3749+3,___flmul@b+3
  5107  002A0E  ECD9  F01A         	call	___flmul	;wreg free
  5108  002A12  C090  F077         	movff	?___flmul,___fldiv@b
  5109  002A16  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  5110  002A1A  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  5111  002A1E  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  5112  002A22  0E00               	movlw	0
  5113  002A24  0100               	movlb	0	; () banked
  5114  002A26  6F7B               	movwf	___fldiv@a& (0+255),b
  5115  002A28  0E00               	movlw	0
  5116  002A2A  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5117  002A2C  0EB4               	movlw	180
  5118  002A2E  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5119  002A30  0E43               	movlw	67
  5120  002A32  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5121  002A34  EC59  F021         	call	___fldiv	;wreg free
  5122  002A38  C077  F140         	movff	?___fldiv,_prima_sterzata
  5123  002A3C  C078  F141         	movff	?___fldiv+1,_prima_sterzata+1
  5124  002A40  C079  F142         	movff	?___fldiv+2,_prima_sterzata+2
  5125  002A44  C07A  F143         	movff	?___fldiv+3,_prima_sterzata+3
  5126                           
  5127                           ;parcheggio.c: 476: K_var = raggio + (2 * larghezza / 3);
  5128  002A48  0E00               	movlw	0
  5129  002A4A  0100               	movlb	0	; () banked
  5130  002A4C  6F7B               	movwf	___fldiv@a& (0+255),b
  5131  002A4E  0E00               	movlw	0
  5132  002A50  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5133  002A52  0E40               	movlw	64
  5134  002A54  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5135  002A56  0E40               	movlw	64
  5136  002A58  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5137  002A5A  0E00               	movlw	0
  5138  002A5C  0100               	movlb	0	; () banked
  5139  002A5E  6F94               	movwf	___flmul@a& (0+255),b
  5140  002A60  0E00               	movlw	0
  5141  002A62  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5142  002A64  0E00               	movlw	0
  5143  002A66  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5144  002A68  0E40               	movlw	64
  5145  002A6A  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5146  002A6C  C1E8  F090         	movff	_larghezza,___flmul@b
  5147  002A70  C1E9  F091         	movff	_larghezza+1,___flmul@b+1
  5148  002A74  C1EA  F092         	movff	_larghezza+2,___flmul@b+2
  5149  002A78  C1EB  F093         	movff	_larghezza+3,___flmul@b+3
  5150  002A7C  ECD9  F01A         	call	___flmul	;wreg free
  5151  002A80  C090  F077         	movff	?___flmul,___fldiv@b
  5152  002A84  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  5153  002A88  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  5154  002A8C  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  5155  002A90  EC59  F021         	call	___fldiv	;wreg free
  5156  002A94  C077  F0A9         	movff	?___fldiv,___fladd@b
  5157  002A98  C078  F0AA         	movff	?___fldiv+1,___fladd@b+1
  5158  002A9C  C079  F0AB         	movff	?___fldiv+2,___fladd@b+2
  5159  002AA0  C07A  F0AC         	movff	?___fldiv+3,___fladd@b+3
  5160  002AA4  C1EC  F0AD         	movff	_raggio,___fladd@a
  5161  002AA8  C1ED  F0AE         	movff	_raggio+1,___fladd@a+1
  5162  002AAC  C1EE  F0AF         	movff	_raggio+2,___fladd@a+2
  5163  002AB0  C1EF  F0B0         	movff	_raggio+3,___fladd@a+3
  5164  002AB4  EC85  F018         	call	___fladd	;wreg free
  5165  002AB8  C0A9  F124         	movff	?___fladd,_K_var
  5166  002ABC  C0AA  F125         	movff	?___fladd+1,_K_var+1
  5167  002AC0  C0AB  F126         	movff	?___fladd+2,_K_var+2
  5168  002AC4  C0AC  F127         	movff	?___fladd+3,_K_var+3
  5169                           
  5170                           ;parcheggio.c: 477: J_var = raggio - (2 * larghezza / 3);
  5171  002AC8  0E00               	movlw	0
  5172  002ACA  0100               	movlb	0	; () banked
  5173  002ACC  6F7B               	movwf	___fldiv@a& (0+255),b
  5174  002ACE  0E00               	movlw	0
  5175  002AD0  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5176  002AD2  0E40               	movlw	64
  5177  002AD4  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5178  002AD6  0E40               	movlw	64
  5179  002AD8  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5180  002ADA  0E00               	movlw	0
  5181  002ADC  0100               	movlb	0	; () banked
  5182  002ADE  6F94               	movwf	___flmul@a& (0+255),b
  5183  002AE0  0E00               	movlw	0
  5184  002AE2  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5185  002AE4  0E00               	movlw	0
  5186  002AE6  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5187  002AE8  0E40               	movlw	64
  5188  002AEA  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5189  002AEC  C1E8  F090         	movff	_larghezza,___flmul@b
  5190  002AF0  C1E9  F091         	movff	_larghezza+1,___flmul@b+1
  5191  002AF4  C1EA  F092         	movff	_larghezza+2,___flmul@b+2
  5192  002AF8  C1EB  F093         	movff	_larghezza+3,___flmul@b+3
  5193  002AFC  ECD9  F01A         	call	___flmul	;wreg free
  5194  002B00  C090  F077         	movff	?___flmul,___fldiv@b
  5195  002B04  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  5196  002B08  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  5197  002B0C  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  5198  002B10  EC59  F021         	call	___fldiv	;wreg free
  5199  002B14  C077  F0BD         	movff	?___fldiv,___flneg@f1
  5200  002B18  C078  F0BE         	movff	?___fldiv+1,___flneg@f1+1
  5201  002B1C  C079  F0BF         	movff	?___fldiv+2,___flneg@f1+2
  5202  002B20  C07A  F0C0         	movff	?___fldiv+3,___flneg@f1+3
  5203  002B24  ECDE  F032         	call	___flneg	;wreg free
  5204  002B28  C0BD  F0A9         	movff	?___flneg,___fladd@b
  5205  002B2C  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  5206  002B30  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  5207  002B34  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  5208  002B38  C1EC  F0AD         	movff	_raggio,___fladd@a
  5209  002B3C  C1ED  F0AE         	movff	_raggio+1,___fladd@a+1
  5210  002B40  C1EE  F0AF         	movff	_raggio+2,___fladd@a+2
  5211  002B44  C1EF  F0B0         	movff	_raggio+3,___fladd@a+3
  5212  002B48  EC85  F018         	call	___fladd	;wreg free
  5213  002B4C  C0A9  F120         	movff	?___fladd,_J_var
  5214  002B50  C0AA  F121         	movff	?___fladd+1,_J_var+1
  5215  002B54  C0AB  F122         	movff	?___fladd+2,_J_var+2
  5216  002B58  C0AC  F123         	movff	?___fladd+3,_J_var+3
  5217                           
  5218                           ;parcheggio.c: 478: Pmin = K_var * cos(asin((J_var / K_var)));
  5219  002B5C  C124  F07B         	movff	_K_var,___fldiv@a
  5220  002B60  C125  F07C         	movff	_K_var+1,___fldiv@a+1
  5221  002B64  C126  F07D         	movff	_K_var+2,___fldiv@a+2
  5222  002B68  C127  F07E         	movff	_K_var+3,___fldiv@a+3
  5223  002B6C  C120  F077         	movff	_J_var,___fldiv@b
  5224  002B70  C121  F078         	movff	_J_var+1,___fldiv@b+1
  5225  002B74  C122  F079         	movff	_J_var+2,___fldiv@b+2
  5226  002B78  C123  F07A         	movff	_J_var+3,___fldiv@b+3
  5227  002B7C  EC59  F021         	call	___fldiv	;wreg free
  5228  002B80  C077  F1D0         	movff	?___fldiv,_matematica$3750
  5229  002B84  C078  F1D1         	movff	?___fldiv+1,_matematica$3750+1
  5230  002B88  C079  F1D2         	movff	?___fldiv+2,_matematica$3750+2
  5231  002B8C  C07A  F1D3         	movff	?___fldiv+3,_matematica$3750+3
  5232                           
  5233                           ;parcheggio.c: 478: Pmin = K_var * cos(asin((J_var / K_var)));
  5234  002B90  C1D0  F1A0         	movff	_matematica$3750,asin@x
  5235  002B94  C1D1  F1A1         	movff	_matematica$3750+1,asin@x+1
  5236  002B98  C1D2  F1A2         	movff	_matematica$3750+2,asin@x+2
  5237  002B9C  C1D3  F1A3         	movff	_matematica$3750+3,asin@x+3
  5238  002BA0  EC94  F026         	call	_asin	;wreg free
  5239  002BA4  C1A0  F1B8         	movff	?_asin,cos@f
  5240  002BA8  C1A1  F1B9         	movff	?_asin+1,cos@f+1
  5241  002BAC  C1A2  F1BA         	movff	?_asin+2,cos@f+2
  5242  002BB0  C1A3  F1BB         	movff	?_asin+3,cos@f+3
  5243  002BB4  EC16  F030         	call	_cos	;wreg free
  5244  002BB8  C1B8  F1D4         	movff	?_cos,_matematica$3751
  5245  002BBC  C1B9  F1D5         	movff	?_cos+1,_matematica$3751+1
  5246  002BC0  C1BA  F1D6         	movff	?_cos+2,_matematica$3751+2
  5247  002BC4  C1BB  F1D7         	movff	?_cos+3,_matematica$3751+3
  5248                           
  5249                           ;parcheggio.c: 478: Pmin = K_var * cos(asin((J_var / K_var)));
  5250  002BC8  C1D4  F090         	movff	_matematica$3751,___flmul@b
  5251  002BCC  C1D5  F091         	movff	_matematica$3751+1,___flmul@b+1
  5252  002BD0  C1D6  F092         	movff	_matematica$3751+2,___flmul@b+2
  5253  002BD4  C1D7  F093         	movff	_matematica$3751+3,___flmul@b+3
  5254  002BD8  C124  F094         	movff	_K_var,___flmul@a
  5255  002BDC  C125  F095         	movff	_K_var+1,___flmul@a+1
  5256  002BE0  C126  F096         	movff	_K_var+2,___flmul@a+2
  5257  002BE4  C127  F097         	movff	_K_var+3,___flmul@a+3
  5258  002BE8  ECD9  F01A         	call	___flmul	;wreg free
  5259  002BEC  C090  F128         	movff	?___flmul,_Pmin
  5260  002BF0  C091  F129         	movff	?___flmul+1,_Pmin+1
  5261  002BF4  C092  F12A         	movff	?___flmul+2,_Pmin+2
  5262  002BF8  C093  F12B         	movff	?___flmul+3,_Pmin+3
  5263  002BFC  0012               	return		;funcret
  5264  002BFE                     __end_of_matematica:
  5265                           	opt stack 0
  5266                           tblptru	equ	0xFF8
  5267                           tblptrh	equ	0xFF7
  5268                           tblptrl	equ	0xFF6
  5269                           tablat	equ	0xFF5
  5270                           postinc0	equ	0xFEE
  5271                           wreg	equ	0xFE8
  5272                           postdec1	equ	0xFE5
  5273                           fsr1l	equ	0xFE1
  5274                           indf2	equ	0xFDF
  5275                           postinc2	equ	0xFDE
  5276                           postdec2	equ	0xFDD
  5277                           fsr2h	equ	0xFDA
  5278                           fsr2l	equ	0xFD9
  5279                           status	equ	0xFD8
  5280                           
  5281 ;; *************** function _cos *****************
  5282 ;; Defined at:
  5283 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\cos.c"
  5284 ;; Parameters:    Size  Location     Type
  5285 ;;  f               4   45[BANK1 ] int 
  5286 ;; Auto vars:     Size  Location     Type
  5287 ;;		None
  5288 ;; Return value:  Size  Location     Type
  5289 ;;                  4   45[BANK1 ] int 
  5290 ;; Registers used:
  5291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5292 ;; Tracked objects:
  5293 ;;		On entry : 0/0
  5294 ;;		On exit  : 0/0
  5295 ;;		Unchanged: 0/0
  5296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5297 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5298 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5300 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5301 ;;Total ram usage:        8 bytes
  5302 ;; Hardware stack levels used:    1
  5303 ;; Hardware stack levels required when called:    7
  5304 ;; This function calls:
  5305 ;;		___fladd
  5306 ;;		___flge
  5307 ;;		_sin
  5308 ;; This function is called by:
  5309 ;;		_matematica
  5310 ;; This function uses a non-reentrant model
  5311 ;;
  5312                           
  5313                           	psect	text9
  5314  00602C                     __ptext9:
  5315                           	opt stack 0
  5316  00602C                     _cos:
  5317                           	opt stack 21
  5318                           
  5319                           ;incstack = 0
  5320  00602C  0EDB               	movlw	219
  5321  00602E  0100               	movlb	0	; () banked
  5322  006030  6FC5               	movwf	___flge@ff1& (0+255),b
  5323  006032  0E0F               	movlw	15
  5324  006034  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  5325  006036  0E49               	movlw	73
  5326  006038  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  5327  00603A  0E40               	movlw	64
  5328  00603C  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  5329  00603E  C1B8  F0C9         	movff	cos@f,___flge@ff2
  5330  006042  C1B9  F0CA         	movff	cos@f+1,___flge@ff2+1
  5331  006046  C1BA  F0CB         	movff	cos@f+2,___flge@ff2+2
  5332  00604A  C1BB  F0CC         	movff	cos@f+3,___flge@ff2+3
  5333  00604E  EC28  F02D         	call	___flge	;wreg free
  5334  006052  0100               	movlb	0	; () banked
  5335  006054  B0D8               	btfsc	status,0,c
  5336  006056  D02E               	goto	l7656
  5337                           
  5338                           ; BSR set to: 0
  5339  006058  C1B8  F0A9         	movff	cos@f,___fladd@b
  5340  00605C  C1B9  F0AA         	movff	cos@f+1,___fladd@b+1
  5341  006060  C1BA  F0AB         	movff	cos@f+2,___fladd@b+2
  5342  006064  C1BB  F0AC         	movff	cos@f+3,___fladd@b+3
  5343  006068  0EE4               	movlw	228
  5344  00606A  0100               	movlb	0	; () banked
  5345  00606C  6FAD               	movwf	___fladd@a& (0+255),b
  5346  00606E  0ECB               	movlw	203
  5347  006070  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5348  006072  0E96               	movlw	150
  5349  006074  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5350  006076  0EC0               	movlw	192
  5351  006078  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5352  00607A  EC85  F018         	call	___fladd	;wreg free
  5353  00607E  C0A9  F1BC         	movff	?___fladd,_cos$3755
  5354  006082  C0AA  F1BD         	movff	?___fladd+1,_cos$3755+1
  5355  006086  C0AB  F1BE         	movff	?___fladd+2,_cos$3755+2
  5356  00608A  C0AC  F1BF         	movff	?___fladd+3,_cos$3755+3
  5357  00608E  C1BC  F19F         	movff	_cos$3755,sin@f
  5358  006092  C1BD  F1A0         	movff	_cos$3755+1,sin@f+1
  5359  006096  C1BE  F1A1         	movff	_cos$3755+2,sin@f+2
  5360  00609A  C1BF  F1A2         	movff	_cos$3755+3,sin@f+3
  5361  00609E  EC08  F025         	call	_sin	;wreg free
  5362  0060A2  C19F  F1B8         	movff	?_sin,?_cos
  5363  0060A6  C1A0  F1B9         	movff	?_sin+1,?_cos+1
  5364  0060AA  C1A1  F1BA         	movff	?_sin+2,?_cos+2
  5365  0060AE  C1A2  F1BB         	movff	?_sin+3,?_cos+3
  5366  0060B2  0012               	return	
  5367  0060B4                     l7656:
  5368  0060B4  C1B8  F0A9         	movff	cos@f,___fladd@b
  5369  0060B8  C1B9  F0AA         	movff	cos@f+1,___fladd@b+1
  5370  0060BC  C1BA  F0AB         	movff	cos@f+2,___fladd@b+2
  5371  0060C0  C1BB  F0AC         	movff	cos@f+3,___fladd@b+3
  5372  0060C4  0EDB               	movlw	219
  5373  0060C6  0100               	movlb	0	; () banked
  5374  0060C8  6FAD               	movwf	___fladd@a& (0+255),b
  5375  0060CA  0E0F               	movlw	15
  5376  0060CC  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5377  0060CE  0EC9               	movlw	201
  5378  0060D0  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5379  0060D2  0E3F               	movlw	63
  5380  0060D4  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5381  0060D6  EC85  F018         	call	___fladd	;wreg free
  5382  0060DA  C0A9  F1BC         	movff	?___fladd,_cos$3755
  5383  0060DE  C0AA  F1BD         	movff	?___fladd+1,_cos$3755+1
  5384  0060E2  C0AB  F1BE         	movff	?___fladd+2,_cos$3755+2
  5385  0060E6  C0AC  F1BF         	movff	?___fladd+3,_cos$3755+3
  5386  0060EA  C1BC  F19F         	movff	_cos$3755,sin@f
  5387  0060EE  C1BD  F1A0         	movff	_cos$3755+1,sin@f+1
  5388  0060F2  C1BE  F1A1         	movff	_cos$3755+2,sin@f+2
  5389  0060F6  C1BF  F1A2         	movff	_cos$3755+3,sin@f+3
  5390  0060FA  EC08  F025         	call	_sin	;wreg free
  5391  0060FE  C19F  F1B8         	movff	?_sin,?_cos
  5392  006102  C1A0  F1B9         	movff	?_sin+1,?_cos+1
  5393  006106  C1A1  F1BA         	movff	?_sin+2,?_cos+2
  5394  00610A  C1A2  F1BB         	movff	?_sin+3,?_cos+3
  5395  00610E  0012               	return	
  5396  006110                     __end_of_cos:
  5397                           	opt stack 0
  5398                           tblptru	equ	0xFF8
  5399                           tblptrh	equ	0xFF7
  5400                           tblptrl	equ	0xFF6
  5401                           tablat	equ	0xFF5
  5402                           postinc0	equ	0xFEE
  5403                           wreg	equ	0xFE8
  5404                           postdec1	equ	0xFE5
  5405                           fsr1l	equ	0xFE1
  5406                           indf2	equ	0xFDF
  5407                           postinc2	equ	0xFDE
  5408                           postdec2	equ	0xFDD
  5409                           fsr2h	equ	0xFDA
  5410                           fsr2l	equ	0xFD9
  5411                           status	equ	0xFD8
  5412                           
  5413 ;; *************** function _sin *****************
  5414 ;; Defined at:
  5415 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sin.c"
  5416 ;; Parameters:    Size  Location     Type
  5417 ;;  f               4   20[BANK1 ] int 
  5418 ;; Auto vars:     Size  Location     Type
  5419 ;;  x2              4   32[BANK1 ] int 
  5420 ;;  y               4   24[BANK1 ] int 
  5421 ;;  sgn             1   36[BANK1 ] unsigned char 
  5422 ;; Return value:  Size  Location     Type
  5423 ;;                  4   20[BANK1 ] unsigned char 
  5424 ;; Registers used:
  5425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5426 ;; Tracked objects:
  5427 ;;		On entry : 0/0
  5428 ;;		On exit  : 0/0
  5429 ;;		Unchanged: 0/0
  5430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5431 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5432 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  5433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5434 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  5435 ;;Total ram usage:       17 bytes
  5436 ;; Hardware stack levels used:    1
  5437 ;; Hardware stack levels required when called:    6
  5438 ;; This function calls:
  5439 ;;		___fladd
  5440 ;;		___fldiv
  5441 ;;		___flge
  5442 ;;		___flmul
  5443 ;;		___flneg
  5444 ;;		___flsub
  5445 ;;		_eval_poly
  5446 ;;		_floor
  5447 ;; This function is called by:
  5448 ;;		_cos
  5449 ;; This function uses a non-reentrant model
  5450 ;;
  5451                           
  5452                           	psect	text10
  5453  004A10                     __ptext10:
  5454                           	opt stack 0
  5455  004A10                     _sin:
  5456                           	opt stack 21
  5457                           
  5458                           ;incstack = 0
  5459  004A10  0E00               	movlw	0
  5460  004A12  0101               	movlb	1	; () banked
  5461  004A14  6FAF               	movwf	sin@sgn& (0+255),b
  5462                           
  5463                           ; BSR set to: 1
  5464  004A16  0101               	movlb	1	; () banked
  5465  004A18  AFA2               	btfss	(sin@f+3)& (0+255),7,b
  5466  004A1A  D015               	goto	l7538
  5467                           
  5468                           ; BSR set to: 1
  5469  004A1C  C19F  F0BD         	movff	sin@f,___flneg@f1
  5470  004A20  C1A0  F0BE         	movff	sin@f+1,___flneg@f1+1
  5471  004A24  C1A1  F0BF         	movff	sin@f+2,___flneg@f1+2
  5472  004A28  C1A2  F0C0         	movff	sin@f+3,___flneg@f1+3
  5473  004A2C  ECDE  F032         	call	___flneg	;wreg free
  5474  004A30  C0BD  F19F         	movff	?___flneg,sin@f
  5475  004A34  C0BE  F1A0         	movff	?___flneg+1,sin@f+1
  5476  004A38  C0BF  F1A1         	movff	?___flneg+2,sin@f+2
  5477  004A3C  C0C0  F1A2         	movff	?___flneg+3,sin@f+3
  5478  004A40  0E01               	movlw	1
  5479  004A42  0101               	movlb	1	; () banked
  5480  004A44  6FAF               	movwf	sin@sgn& (0+255),b
  5481  004A46                     l7538:
  5482                           
  5483                           ; BSR set to: 1
  5484  004A46  C19F  F090         	movff	sin@f,___flmul@b
  5485  004A4A  C1A0  F091         	movff	sin@f+1,___flmul@b+1
  5486  004A4E  C1A1  F092         	movff	sin@f+2,___flmul@b+2
  5487  004A52  C1A2  F093         	movff	sin@f+3,___flmul@b+3
  5488  004A56  0E83               	movlw	131
  5489  004A58  0100               	movlb	0	; () banked
  5490  004A5A  6F94               	movwf	___flmul@a& (0+255),b
  5491  004A5C  0EF9               	movlw	249
  5492  004A5E  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5493  004A60  0E22               	movlw	34
  5494  004A62  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5495  004A64  0E3E               	movlw	62
  5496  004A66  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5497  004A68  ECD9  F01A         	call	___flmul	;wreg free
  5498  004A6C  C090  F19F         	movff	?___flmul,sin@f
  5499  004A70  C091  F1A0         	movff	?___flmul+1,sin@f+1
  5500  004A74  C092  F1A1         	movff	?___flmul+2,sin@f+2
  5501  004A78  C093  F1A2         	movff	?___flmul+3,sin@f+3
  5502  004A7C  C19F  F197         	movff	sin@f,___flsub@b
  5503  004A80  C1A0  F198         	movff	sin@f+1,___flsub@b+1
  5504  004A84  C1A1  F199         	movff	sin@f+2,___flsub@b+2
  5505  004A88  C1A2  F19A         	movff	sin@f+3,___flsub@b+3
  5506  004A8C  C19F  F0D3         	movff	sin@f,floor@x
  5507  004A90  C1A0  F0D4         	movff	sin@f+1,floor@x+1
  5508  004A94  C1A1  F0D5         	movff	sin@f+2,floor@x+2
  5509  004A98  C1A2  F0D6         	movff	sin@f+3,floor@x+3
  5510  004A9C  ECF0  F02D         	call	_floor	;wreg free
  5511  004AA0  C0D3  F19B         	movff	?_floor,___flsub@a
  5512  004AA4  C0D4  F19C         	movff	?_floor+1,___flsub@a+1
  5513  004AA8  C0D5  F19D         	movff	?_floor+2,___flsub@a+2
  5514  004AAC  C0D6  F19E         	movff	?_floor+3,___flsub@a+3
  5515  004AB0  EC7E  F032         	call	___flsub	;wreg free
  5516  004AB4  C197  F19F         	movff	?___flsub,sin@f
  5517  004AB8  C198  F1A0         	movff	?___flsub+1,sin@f+1
  5518  004ABC  C199  F1A1         	movff	?___flsub+2,sin@f+2
  5519  004AC0  C19A  F1A2         	movff	?___flsub+3,sin@f+3
  5520  004AC4  C19F  F090         	movff	sin@f,___flmul@b
  5521  004AC8  C1A0  F091         	movff	sin@f+1,___flmul@b+1
  5522  004ACC  C1A1  F092         	movff	sin@f+2,___flmul@b+2
  5523  004AD0  C1A2  F093         	movff	sin@f+3,___flmul@b+3
  5524  004AD4  0E00               	movlw	0
  5525  004AD6  0100               	movlb	0	; () banked
  5526  004AD8  6F94               	movwf	___flmul@a& (0+255),b
  5527  004ADA  0E00               	movlw	0
  5528  004ADC  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5529  004ADE  0E80               	movlw	128
  5530  004AE0  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5531  004AE2  0E40               	movlw	64
  5532  004AE4  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5533  004AE6  ECD9  F01A         	call	___flmul	;wreg free
  5534  004AEA  C090  F19F         	movff	?___flmul,sin@f
  5535  004AEE  C091  F1A0         	movff	?___flmul+1,sin@f+1
  5536  004AF2  C092  F1A1         	movff	?___flmul+2,sin@f+2
  5537  004AF6  C093  F1A2         	movff	?___flmul+3,sin@f+3
  5538  004AFA  0E00               	movlw	0
  5539  004AFC  0100               	movlb	0	; () banked
  5540  004AFE  6FC5               	movwf	___flge@ff1& (0+255),b
  5541  004B00  0E00               	movlw	0
  5542  004B02  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  5543  004B04  0E00               	movlw	0
  5544  004B06  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  5545  004B08  0E40               	movlw	64
  5546  004B0A  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  5547  004B0C  C19F  F0C9         	movff	sin@f,___flge@ff2
  5548  004B10  C1A0  F0CA         	movff	sin@f+1,___flge@ff2+1
  5549  004B14  C1A1  F0CB         	movff	sin@f+2,___flge@ff2+2
  5550  004B18  C1A2  F0CC         	movff	sin@f+3,___flge@ff2+3
  5551  004B1C  EC28  F02D         	call	___flge	;wreg free
  5552  004B20  0100               	movlb	0	; () banked
  5553  004B22  B0D8               	btfsc	status,0,c
  5554  004B24  D025               	goto	l7550
  5555                           
  5556                           ; BSR set to: 0
  5557  004B26  C19F  F197         	movff	sin@f,___flsub@b
  5558  004B2A  C1A0  F198         	movff	sin@f+1,___flsub@b+1
  5559  004B2E  C1A1  F199         	movff	sin@f+2,___flsub@b+2
  5560  004B32  C1A2  F19A         	movff	sin@f+3,___flsub@b+3
  5561  004B36  0E00               	movlw	0
  5562  004B38  0101               	movlb	1	; () banked
  5563  004B3A  6F9B               	movwf	___flsub@a& (0+255),b
  5564  004B3C  0E00               	movlw	0
  5565  004B3E  6F9C               	movwf	(___flsub@a+1)& (0+255),b
  5566  004B40  0E00               	movlw	0
  5567  004B42  6F9D               	movwf	(___flsub@a+2)& (0+255),b
  5568  004B44  0E40               	movlw	64
  5569  004B46  6F9E               	movwf	(___flsub@a+3)& (0+255),b
  5570  004B48  EC7E  F032         	call	___flsub	;wreg free
  5571  004B4C  C197  F19F         	movff	?___flsub,sin@f
  5572  004B50  C198  F1A0         	movff	?___flsub+1,sin@f+1
  5573  004B54  C199  F1A1         	movff	?___flsub+2,sin@f+2
  5574  004B58  C19A  F1A2         	movff	?___flsub+3,sin@f+3
  5575  004B5C  0101               	movlb	1	; () banked
  5576  004B5E  51AF               	movf	sin@sgn& (0+255),w,b
  5577  004B60  0101               	movlb	1	; () banked
  5578  004B62  A4D8               	btfss	status,2,c
  5579  004B64  D002               	goto	u10010
  5580  004B66  0E01               	movlw	1
  5581  004B68  D001               	goto	u10020
  5582  004B6A                     u10010:
  5583  004B6A  0E00               	movlw	0
  5584  004B6C                     u10020:
  5585  004B6C  0101               	movlb	1	; () banked
  5586  004B6E  6FAF               	movwf	sin@sgn& (0+255),b
  5587  004B70                     l7550:
  5588  004B70  0E00               	movlw	0
  5589  004B72  0100               	movlb	0	; () banked
  5590  004B74  6FC5               	movwf	___flge@ff1& (0+255),b
  5591  004B76  0E00               	movlw	0
  5592  004B78  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  5593  004B7A  0E80               	movlw	128
  5594  004B7C  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  5595  004B7E  0E3F               	movlw	63
  5596  004B80  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  5597  004B82  C19F  F0C9         	movff	sin@f,___flge@ff2
  5598  004B86  C1A0  F0CA         	movff	sin@f+1,___flge@ff2+1
  5599  004B8A  C1A1  F0CB         	movff	sin@f+2,___flge@ff2+2
  5600  004B8E  C1A2  F0CC         	movff	sin@f+3,___flge@ff2+3
  5601  004B92  EC28  F02D         	call	___flge	;wreg free
  5602  004B96  0100               	movlb	0	; () banked
  5603  004B98  B0D8               	btfsc	status,0,c
  5604  004B9A  D025               	goto	l7554
  5605                           
  5606                           ; BSR set to: 0
  5607  004B9C  C19F  F0BD         	movff	sin@f,___flneg@f1
  5608  004BA0  C1A0  F0BE         	movff	sin@f+1,___flneg@f1+1
  5609  004BA4  C1A1  F0BF         	movff	sin@f+2,___flneg@f1+2
  5610  004BA8  C1A2  F0C0         	movff	sin@f+3,___flneg@f1+3
  5611  004BAC  ECDE  F032         	call	___flneg	;wreg free
  5612  004BB0  C0BD  F0A9         	movff	?___flneg,___fladd@b
  5613  004BB4  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  5614  004BB8  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  5615  004BBC  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  5616  004BC0  0E00               	movlw	0
  5617  004BC2  0100               	movlb	0	; () banked
  5618  004BC4  6FAD               	movwf	___fladd@a& (0+255),b
  5619  004BC6  0E00               	movlw	0
  5620  004BC8  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5621  004BCA  0E00               	movlw	0
  5622  004BCC  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5623  004BCE  0E40               	movlw	64
  5624  004BD0  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5625  004BD2  EC85  F018         	call	___fladd	;wreg free
  5626  004BD6  C0A9  F19F         	movff	?___fladd,sin@f
  5627  004BDA  C0AA  F1A0         	movff	?___fladd+1,sin@f+1
  5628  004BDE  C0AB  F1A1         	movff	?___fladd+2,sin@f+2
  5629  004BE2  C0AC  F1A2         	movff	?___fladd+3,sin@f+3
  5630  004BE6                     l7554:
  5631  004BE6  C19F  F090         	movff	sin@f,___flmul@b
  5632  004BEA  C1A0  F091         	movff	sin@f+1,___flmul@b+1
  5633  004BEE  C1A1  F092         	movff	sin@f+2,___flmul@b+2
  5634  004BF2  C1A2  F093         	movff	sin@f+3,___flmul@b+3
  5635  004BF6  C19F  F094         	movff	sin@f,___flmul@a
  5636  004BFA  C1A0  F095         	movff	sin@f+1,___flmul@a+1
  5637  004BFE  C1A1  F096         	movff	sin@f+2,___flmul@a+2
  5638  004C02  C1A2  F097         	movff	sin@f+3,___flmul@a+3
  5639  004C06  ECD9  F01A         	call	___flmul	;wreg free
  5640  004C0A  C090  F1AB         	movff	?___flmul,sin@x2
  5641  004C0E  C091  F1AC         	movff	?___flmul+1,sin@x2+1
  5642  004C12  C092  F1AD         	movff	?___flmul+2,sin@x2+2
  5643  004C16  C093  F1AE         	movff	?___flmul+3,sin@x2+3
  5644  004C1A  C1AB  F0BD         	movff	sin@x2,eval_poly@x
  5645  004C1E  C1AC  F0BE         	movff	sin@x2+1,eval_poly@x+1
  5646  004C22  C1AD  F0BF         	movff	sin@x2+2,eval_poly@x+2
  5647  004C26  C1AE  F0C0         	movff	sin@x2+3,eval_poly@x+3
  5648  004C2A  0E41               	movlw	low sin@coeff_b
  5649  004C2C  0100               	movlb	0	; () banked
  5650  004C2E  6FC1               	movwf	eval_poly@d& (0+255),b
  5651  004C30  0E0D               	movlw	high sin@coeff_b
  5652  004C32  0100               	movlb	0	; () banked
  5653  004C34  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  5654  004C36  0E00               	movlw	0
  5655  004C38  0100               	movlb	0	; () banked
  5656  004C3A  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  5657  004C3C  0E03               	movlw	3
  5658  004C3E  6FC3               	movwf	eval_poly@n& (0+255),b
  5659  004C40  EC82  F02E         	call	_eval_poly	;wreg free
  5660  004C44  C0BD  F1A3         	movff	?_eval_poly,sin@y
  5661  004C48  C0BE  F1A4         	movff	?_eval_poly+1,sin@y+1
  5662  004C4C  C0BF  F1A5         	movff	?_eval_poly+2,sin@y+2
  5663  004C50  C0C0  F1A6         	movff	?_eval_poly+3,sin@y+3
  5664  004C54  C1A3  F07B         	movff	sin@y,___fldiv@a
  5665  004C58  C1A4  F07C         	movff	sin@y+1,___fldiv@a+1
  5666  004C5C  C1A5  F07D         	movff	sin@y+2,___fldiv@a+2
  5667  004C60  C1A6  F07E         	movff	sin@y+3,___fldiv@a+3
  5668  004C64  0E00               	movlw	0
  5669  004C66  0100               	movlb	0	; () banked
  5670  004C68  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  5671  004C6A  0E04               	movlw	4
  5672  004C6C  6FC3               	movwf	eval_poly@n& (0+255),b
  5673  004C6E  0E2D               	movlw	low sin@coeff_a
  5674  004C70  0100               	movlb	0	; () banked
  5675  004C72  6FC1               	movwf	eval_poly@d& (0+255),b
  5676  004C74  0E0D               	movlw	high sin@coeff_a
  5677  004C76  0100               	movlb	0	; () banked
  5678  004C78  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  5679  004C7A  C1AB  F0BD         	movff	sin@x2,eval_poly@x
  5680  004C7E  C1AC  F0BE         	movff	sin@x2+1,eval_poly@x+1
  5681  004C82  C1AD  F0BF         	movff	sin@x2+2,eval_poly@x+2
  5682  004C86  C1AE  F0C0         	movff	sin@x2+3,eval_poly@x+3
  5683  004C8A  EC82  F02E         	call	_eval_poly	;wreg free
  5684  004C8E  C0BD  F077         	movff	?_eval_poly,___fldiv@b
  5685  004C92  C0BE  F078         	movff	?_eval_poly+1,___fldiv@b+1
  5686  004C96  C0BF  F079         	movff	?_eval_poly+2,___fldiv@b+2
  5687  004C9A  C0C0  F07A         	movff	?_eval_poly+3,___fldiv@b+3
  5688  004C9E  EC59  F021         	call	___fldiv	;wreg free
  5689  004CA2  C077  F1A7         	movff	?___fldiv,_sin$3756
  5690  004CA6  C078  F1A8         	movff	?___fldiv+1,_sin$3756+1
  5691  004CAA  C079  F1A9         	movff	?___fldiv+2,_sin$3756+2
  5692  004CAE  C07A  F1AA         	movff	?___fldiv+3,_sin$3756+3
  5693  004CB2  C19F  F090         	movff	sin@f,___flmul@b
  5694  004CB6  C1A0  F091         	movff	sin@f+1,___flmul@b+1
  5695  004CBA  C1A1  F092         	movff	sin@f+2,___flmul@b+2
  5696  004CBE  C1A2  F093         	movff	sin@f+3,___flmul@b+3
  5697  004CC2  C1A7  F094         	movff	_sin$3756,___flmul@a
  5698  004CC6  C1A8  F095         	movff	_sin$3756+1,___flmul@a+1
  5699  004CCA  C1A9  F096         	movff	_sin$3756+2,___flmul@a+2
  5700  004CCE  C1AA  F097         	movff	_sin$3756+3,___flmul@a+3
  5701  004CD2  ECD9  F01A         	call	___flmul	;wreg free
  5702  004CD6  C090  F19F         	movff	?___flmul,sin@f
  5703  004CDA  C091  F1A0         	movff	?___flmul+1,sin@f+1
  5704  004CDE  C092  F1A1         	movff	?___flmul+2,sin@f+2
  5705  004CE2  C093  F1A2         	movff	?___flmul+3,sin@f+3
  5706  004CE6  0101               	movlb	1	; () banked
  5707  004CE8  51AF               	movf	sin@sgn& (0+255),w,b
  5708  004CEA  0101               	movlb	1	; () banked
  5709  004CEC  B4D8               	btfsc	status,2,c
  5710  004CEE  D013               	goto	l1339
  5711                           
  5712                           ; BSR set to: 1
  5713  004CF0  C19F  F0BD         	movff	sin@f,___flneg@f1
  5714  004CF4  C1A0  F0BE         	movff	sin@f+1,___flneg@f1+1
  5715  004CF8  C1A1  F0BF         	movff	sin@f+2,___flneg@f1+2
  5716  004CFC  C1A2  F0C0         	movff	sin@f+3,___flneg@f1+3
  5717  004D00  ECDE  F032         	call	___flneg	;wreg free
  5718  004D04  C0BD  F19F         	movff	?___flneg,?_sin
  5719  004D08  C0BE  F1A0         	movff	?___flneg+1,?_sin+1
  5720  004D0C  C0BF  F1A1         	movff	?___flneg+2,?_sin+2
  5721  004D10  C0C0  F1A2         	movff	?___flneg+3,?_sin+3
  5722  004D14  0012               	return	
  5723  004D16                     l1339:
  5724                           
  5725                           ; BSR set to: 1
  5726  004D16  C19F  F19F         	movff	sin@f,?_sin
  5727  004D1A  C1A0  F1A0         	movff	sin@f+1,?_sin+1
  5728  004D1E  C1A1  F1A1         	movff	sin@f+2,?_sin+2
  5729  004D22  C1A2  F1A2         	movff	sin@f+3,?_sin+3
  5730  004D26  0012               	return		;funcret
  5731  004D28                     __end_of_sin:
  5732                           	opt stack 0
  5733                           tblptru	equ	0xFF8
  5734                           tblptrh	equ	0xFF7
  5735                           tblptrl	equ	0xFF6
  5736                           tablat	equ	0xFF5
  5737                           postinc0	equ	0xFEE
  5738                           wreg	equ	0xFE8
  5739                           postdec1	equ	0xFE5
  5740                           fsr1l	equ	0xFE1
  5741                           indf2	equ	0xFDF
  5742                           postinc2	equ	0xFDE
  5743                           postdec2	equ	0xFDD
  5744                           fsr2h	equ	0xFDA
  5745                           fsr2l	equ	0xFD9
  5746                           status	equ	0xFD8
  5747                           
  5748 ;; *************** function _floor *****************
  5749 ;; Defined at:
  5750 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\floor.c"
  5751 ;; Parameters:    Size  Location     Type
  5752 ;;  x               4  115[BANK0 ] unsigned char 
  5753 ;; Auto vars:     Size  Location     Type
  5754 ;;  i               4    6[BANK1 ] unsigned char 
  5755 ;;  expon           2   10[BANK1 ] int 
  5756 ;; Return value:  Size  Location     Type
  5757 ;;                  4  115[BANK0 ] int 
  5758 ;; Registers used:
  5759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5760 ;; Tracked objects:
  5761 ;;		On entry : 0/0
  5762 ;;		On exit  : 0/0
  5763 ;;		Unchanged: 0/0
  5764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5765 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5766 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5768 ;;      Totals:         0       4       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5769 ;;Total ram usage:       10 bytes
  5770 ;; Hardware stack levels used:    1
  5771 ;; Hardware stack levels required when called:    5
  5772 ;; This function calls:
  5773 ;;		___fladd
  5774 ;;		___flge
  5775 ;;		___fltol
  5776 ;;		___xxtofl
  5777 ;;		_frexp
  5778 ;; This function is called by:
  5779 ;;		_sin
  5780 ;; This function uses a non-reentrant model
  5781 ;;
  5782                           
  5783                           	psect	text11
  5784  005BE0                     __ptext11:
  5785                           	opt stack 0
  5786  005BE0                     _floor:
  5787                           	opt stack 21
  5788                           
  5789                           ;incstack = 0
  5790  005BE0  C0D3  F077         	movff	floor@x,frexp@value
  5791  005BE4  C0D4  F078         	movff	floor@x+1,frexp@value+1
  5792  005BE8  C0D5  F079         	movff	floor@x+2,frexp@value+2
  5793  005BEC  C0D6  F07A         	movff	floor@x+3,frexp@value+3
  5794  005BF0  0E95               	movlw	low floor@expon
  5795  005BF2  0100               	movlb	0	; () banked
  5796  005BF4  6F7B               	movwf	frexp@eptr& (0+255),b
  5797  005BF6  0E01               	movlw	high floor@expon
  5798  005BF8  0100               	movlb	0	; () banked
  5799  005BFA  6F7C               	movwf	(frexp@eptr+1)& (0+255),b
  5800  005BFC  EC5B  F031         	call	_frexp	;wreg free
  5801  005C00  0101               	movlb	1	; () banked
  5802  005C02  AF96               	btfss	(floor@expon+1)& (0+255),7,b
  5803  005C04  D017               	goto	l7374
  5804                           
  5805                           ; BSR set to: 1
  5806  005C06  0100               	movlb	0	; () banked
  5807  005C08  AFD6               	btfss	(floor@x+3)& (0+255),7,b
  5808  005C0A  D00A               	goto	l7370
  5809                           
  5810                           ; BSR set to: 0
  5811  005C0C  0E00               	movlw	0
  5812  005C0E  0100               	movlb	0	; () banked
  5813  005C10  6FD3               	movwf	?_floor& (0+255),b
  5814  005C12  0E00               	movlw	0
  5815  005C14  6FD4               	movwf	(?_floor+1)& (0+255),b
  5816  005C16  0E80               	movlw	128
  5817  005C18  6FD5               	movwf	(?_floor+2)& (0+255),b
  5818  005C1A  0EBF               	movlw	191
  5819  005C1C  6FD6               	movwf	(?_floor+3)& (0+255),b
  5820                           
  5821                           ; BSR set to: 0
  5822  005C1E  0012               	return	
  5823  005C20                     l7370:
  5824                           
  5825                           ; BSR set to: 0
  5826  005C20  0E00               	movlw	0
  5827  005C22  0100               	movlb	0	; () banked
  5828  005C24  6FD3               	movwf	?_floor& (0+255),b
  5829  005C26  0E00               	movlw	0
  5830  005C28  6FD4               	movwf	(?_floor+1)& (0+255),b
  5831  005C2A  0E00               	movlw	0
  5832  005C2C  6FD5               	movwf	(?_floor+2)& (0+255),b
  5833  005C2E  0E00               	movlw	0
  5834  005C30  6FD6               	movwf	(?_floor+3)& (0+255),b
  5835                           
  5836                           ; BSR set to: 0
  5837  005C32  0012               	return	
  5838  005C34                     l7374:
  5839  005C34  0101               	movlb	1	; () banked
  5840  005C36  5196               	movf	(floor@expon+1)& (0+255),w,b
  5841  005C38  E105               	bnz	u9770
  5842  005C3A  0E1D               	movlw	29
  5843  005C3C  0101               	movlb	1	; () banked
  5844  005C3E  5D95               	subwf	floor@expon& (0+255),w,b
  5845  005C40  A0D8               	btfss	status,0,c
  5846  005C42  D009               	goto	l7378
  5847  005C44                     u9770:
  5848                           
  5849                           ; BSR set to: 1
  5850  005C44  C0D3  F0D3         	movff	floor@x,?_floor
  5851  005C48  C0D4  F0D4         	movff	floor@x+1,?_floor+1
  5852  005C4C  C0D5  F0D5         	movff	floor@x+2,?_floor+2
  5853  005C50  C0D6  F0D6         	movff	floor@x+3,?_floor+3
  5854  005C54  0012               	return	
  5855  005C56                     l7378:
  5856                           
  5857                           ; BSR set to: 1
  5858  005C56  C0D3  F0C1         	movff	floor@x,___fltol@f1
  5859  005C5A  C0D4  F0C2         	movff	floor@x+1,___fltol@f1+1
  5860  005C5E  C0D5  F0C3         	movff	floor@x+2,___fltol@f1+2
  5861  005C62  C0D6  F0C4         	movff	floor@x+3,___fltol@f1+3
  5862  005C66  EC0E  F02F         	call	___fltol	;wreg free
  5863  005C6A  C0C1  F0CB         	movff	?___fltol,___xxtofl@val
  5864  005C6E  C0C2  F0CC         	movff	?___fltol+1,___xxtofl@val+1
  5865  005C72  C0C3  F0CD         	movff	?___fltol+2,___xxtofl@val+2
  5866  005C76  C0C4  F0CE         	movff	?___fltol+3,___xxtofl@val+3
  5867  005C7A  0E01               	movlw	1
  5868  005C7C  EC7B  F02A         	call	___xxtofl
  5869  005C80  C0CB  F191         	movff	?___xxtofl,floor@i
  5870  005C84  C0CC  F192         	movff	?___xxtofl+1,floor@i+1
  5871  005C88  C0CD  F193         	movff	?___xxtofl+2,floor@i+2
  5872  005C8C  C0CE  F194         	movff	?___xxtofl+3,floor@i+3
  5873  005C90  C0D3  F0C5         	movff	floor@x,___flge@ff1
  5874  005C94  C0D4  F0C6         	movff	floor@x+1,___flge@ff1+1
  5875  005C98  C0D5  F0C7         	movff	floor@x+2,___flge@ff1+2
  5876  005C9C  C0D6  F0C8         	movff	floor@x+3,___flge@ff1+3
  5877  005CA0  C191  F0C9         	movff	floor@i,___flge@ff2
  5878  005CA4  C192  F0CA         	movff	floor@i+1,___flge@ff2+1
  5879  005CA8  C193  F0CB         	movff	floor@i+2,___flge@ff2+2
  5880  005CAC  C194  F0CC         	movff	floor@i+3,___flge@ff2+3
  5881  005CB0  EC28  F02D         	call	___flge	;wreg free
  5882  005CB4  0100               	movlb	0	; () banked
  5883  005CB6  B0D8               	btfsc	status,0,c
  5884  005CB8  D01C               	goto	l1508
  5885                           
  5886                           ; BSR set to: 0
  5887  005CBA  C191  F0A9         	movff	floor@i,___fladd@b
  5888  005CBE  C192  F0AA         	movff	floor@i+1,___fladd@b+1
  5889  005CC2  C193  F0AB         	movff	floor@i+2,___fladd@b+2
  5890  005CC6  C194  F0AC         	movff	floor@i+3,___fladd@b+3
  5891  005CCA  0E00               	movlw	0
  5892  005CCC  0100               	movlb	0	; () banked
  5893  005CCE  6FAD               	movwf	___fladd@a& (0+255),b
  5894  005CD0  0E00               	movlw	0
  5895  005CD2  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5896  005CD4  0E80               	movlw	128
  5897  005CD6  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5898  005CD8  0EBF               	movlw	191
  5899  005CDA  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5900  005CDC  EC85  F018         	call	___fladd	;wreg free
  5901  005CE0  C0A9  F0D3         	movff	?___fladd,?_floor
  5902  005CE4  C0AA  F0D4         	movff	?___fladd+1,?_floor+1
  5903  005CE8  C0AB  F0D5         	movff	?___fladd+2,?_floor+2
  5904  005CEC  C0AC  F0D6         	movff	?___fladd+3,?_floor+3
  5905  005CF0  0012               	return	
  5906  005CF2                     l1508:
  5907                           
  5908                           ; BSR set to: 0
  5909  005CF2  C191  F0D3         	movff	floor@i,?_floor
  5910  005CF6  C192  F0D4         	movff	floor@i+1,?_floor+1
  5911  005CFA  C193  F0D5         	movff	floor@i+2,?_floor+2
  5912  005CFE  C194  F0D6         	movff	floor@i+3,?_floor+3
  5913  005D02  0012               	return		;funcret
  5914  005D04                     __end_of_floor:
  5915                           	opt stack 0
  5916                           tblptru	equ	0xFF8
  5917                           tblptrh	equ	0xFF7
  5918                           tblptrl	equ	0xFF6
  5919                           tablat	equ	0xFF5
  5920                           postinc0	equ	0xFEE
  5921                           wreg	equ	0xFE8
  5922                           postdec1	equ	0xFE5
  5923                           fsr1l	equ	0xFE1
  5924                           indf2	equ	0xFDF
  5925                           postinc2	equ	0xFDE
  5926                           postdec2	equ	0xFDD
  5927                           fsr2h	equ	0xFDA
  5928                           fsr2l	equ	0xFD9
  5929                           status	equ	0xFD8
  5930                           
  5931 ;; *************** function _frexp *****************
  5932 ;; Defined at:
  5933 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\frexp.c"
  5934 ;; Parameters:    Size  Location     Type
  5935 ;;  value           4   23[BANK0 ] int 
  5936 ;;  eptr            2   27[BANK0 ] PTR int 
  5937 ;;		 -> floor@expon(2), 
  5938 ;; Auto vars:     Size  Location     Type
  5939 ;;		None
  5940 ;; Return value:  Size  Location     Type
  5941 ;;                  4   23[BANK0 ] PTR int 
  5942 ;; Registers used:
  5943 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5944 ;; Tracked objects:
  5945 ;;		On entry : 0/0
  5946 ;;		On exit  : 0/0
  5947 ;;		Unchanged: 0/0
  5948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5949 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5951 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5952 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5953 ;;Total ram usage:        8 bytes
  5954 ;; Hardware stack levels used:    1
  5955 ;; Hardware stack levels required when called:    4
  5956 ;; This function calls:
  5957 ;;		Nothing
  5958 ;; This function is called by:
  5959 ;;		_floor
  5960 ;; This function uses a non-reentrant model
  5961 ;;
  5962                           
  5963                           	psect	text12
  5964  0062B6                     __ptext12:
  5965                           	opt stack 0
  5966  0062B6                     _frexp:
  5967                           	opt stack 21
  5968                           
  5969                           ;incstack = 0
  5970  0062B6  0100               	movlb	0	; () banked
  5971  0062B8  5177               	movf	frexp@value& (0+255),w,b
  5972  0062BA  0100               	movlb	0	; () banked
  5973  0062BC  1178               	iorwf	(frexp@value+1)& (0+255),w,b
  5974  0062BE  0100               	movlb	0	; () banked
  5975  0062C0  1179               	iorwf	(frexp@value+2)& (0+255),w,b
  5976  0062C2  0100               	movlb	0	; () banked
  5977  0062C4  117A               	iorwf	(frexp@value+3)& (0+255),w,b
  5978  0062C6  A4D8               	btfss	status,2,c
  5979  0062C8  D009               	goto	l7196
  5980                           
  5981                           ; BSR set to: 0
  5982  0062CA  C07B  FFD9         	movff	frexp@eptr,fsr2l
  5983  0062CE  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  5984  0062D2  0E00               	movlw	0
  5985  0062D4  6EDE               	movwf	postinc2,c
  5986  0062D6  0E00               	movlw	0
  5987  0062D8  6EDD               	movwf	postdec2,c
  5988                           
  5989                           ; BSR set to: 0
  5990                           ;	Return value of _frexp is never used
  5991  0062DA  0012               	return	
  5992  0062DC                     l7196:
  5993                           
  5994                           ; BSR set to: 0
  5995  0062DC  0100               	movlb	0	; () banked
  5996  0062DE  517A               	movf	(frexp@value+3)& (0+255),w,b
  5997  0062E0  0B7F               	andlw	127
  5998  0062E2  0100               	movlb	0	; () banked
  5999  0062E4  6F7D               	movwf	??_frexp& (0+255),b
  6000  0062E6  6B7E               	clrf	(??_frexp+1)& (0+255),b
  6001  0062E8  90D8               	bcf	status,0,c
  6002  0062EA  0100               	movlb	0	; () banked
  6003  0062EC  377D               	rlcf	??_frexp& (0+255),f,b
  6004  0062EE  377E               	rlcf	(??_frexp+1)& (0+255),f,b
  6005  0062F0  C07B  FFD9         	movff	frexp@eptr,fsr2l
  6006  0062F4  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  6007  0062F8  C07D  FFDE         	movff	??_frexp,postinc2
  6008  0062FC  C07E  FFDD         	movff	??_frexp+1,postdec2
  6009  006300  0100               	movlb	0	; () banked
  6010  006302  AF79               	btfss	(frexp@value+2)& (0+255),7,b
  6011  006304  D004               	goto	u9490
  6012  006306  0100               	movlb	0	; () banked
  6013  006308  6B7D               	clrf	??_frexp& (0+255),b
  6014  00630A  2B7D               	incf	??_frexp& (0+255),f,b
  6015  00630C  D002               	goto	u9498
  6016  00630E                     u9490:
  6017  00630E  0100               	movlb	0	; () banked
  6018  006310  6B7D               	clrf	??_frexp& (0+255),b
  6019  006312                     u9498:
  6020  006312  0100               	movlb	0	; () banked
  6021  006314  517D               	movf	??_frexp& (0+255),w,b
  6022  006316  C07B  FFD9         	movff	frexp@eptr,fsr2l
  6023  00631A  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  6024  00631E  12DE               	iorwf	postinc2,f,c
  6025  006320  0E00               	movlw	0
  6026  006322  12DD               	iorwf	postdec2,f,c
  6027                           
  6028                           ; BSR set to: 0
  6029  006324  C07B  FFD9         	movff	frexp@eptr,fsr2l
  6030  006328  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  6031  00632C  0E82               	movlw	130
  6032  00632E  26DE               	addwf	postinc2,f,c
  6033  006330  0EFF               	movlw	255
  6034  006332  22DD               	addwfc	postdec2,f,c
  6035                           
  6036                           ; BSR set to: 0
  6037  006334  0100               	movlb	0	; () banked
  6038  006336  817A               	bsf	(frexp@value+3)& (0+255),0,b
  6039  006338  837A               	bsf	(frexp@value+3)& (0+255),1,b
  6040  00633A  857A               	bsf	(frexp@value+3)& (0+255),2,b
  6041  00633C  877A               	bsf	(frexp@value+3)& (0+255),3,b
  6042  00633E  897A               	bsf	(frexp@value+3)& (0+255),4,b
  6043  006340  8B7A               	bsf	(frexp@value+3)& (0+255),5,b
  6044  006342  9D7A               	bcf	(frexp@value+3)& (0+255),6,b
  6045                           
  6046                           ; BSR set to: 0
  6047  006344  0100               	movlb	0	; () banked
  6048  006346  9F79               	bcf	(frexp@value+2)& (0+255),7,b
  6049  006348  0012               	return	
  6050  00634A                     __end_of_frexp:
  6051                           	opt stack 0
  6052                           tblptru	equ	0xFF8
  6053                           tblptrh	equ	0xFF7
  6054                           tblptrl	equ	0xFF6
  6055                           tablat	equ	0xFF5
  6056                           postinc0	equ	0xFEE
  6057                           wreg	equ	0xFE8
  6058                           postdec1	equ	0xFE5
  6059                           fsr1l	equ	0xFE1
  6060                           indf2	equ	0xFDF
  6061                           postinc2	equ	0xFDE
  6062                           postdec2	equ	0xFDD
  6063                           fsr2h	equ	0xFDA
  6064                           fsr2l	equ	0xFD9
  6065                           status	equ	0xFD8
  6066                           
  6067 ;; *************** function ___xxtofl *****************
  6068 ;; Defined at:
  6069 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  6070 ;; Parameters:    Size  Location     Type
  6071 ;;  sign            1    wreg     unsigned char 
  6072 ;;  val             4  107[BANK0 ] long 
  6073 ;; Auto vars:     Size  Location     Type
  6074 ;;  sign            1    0[BANK1 ] unsigned char 
  6075 ;;  arg             4    2[BANK1 ] unsigned long 
  6076 ;;  exp             1    1[BANK1 ] unsigned char 
  6077 ;; Return value:  Size  Location     Type
  6078 ;;                  4  107[BANK0 ] unsigned char 
  6079 ;; Registers used:
  6080 ;;		wreg, status,2, status,0
  6081 ;; Tracked objects:
  6082 ;;		On entry : 0/0
  6083 ;;		On exit  : 0/0
  6084 ;;		Unchanged: 0/0
  6085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6086 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6087 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  6088 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6089 ;;      Totals:         0       8       6       0       0       0       0       0       0       0       0       0       
      +0       0
  6090 ;;Total ram usage:       14 bytes
  6091 ;; Hardware stack levels used:    1
  6092 ;; Hardware stack levels required when called:    4
  6093 ;; This function calls:
  6094 ;;		Nothing
  6095 ;; This function is called by:
  6096 ;;		_park_search
  6097 ;;		_park_routine
  6098 ;;		_parallelo
  6099 ;;		_floor
  6100 ;; This function uses a non-reentrant model
  6101 ;;
  6102                           
  6103                           	psect	text13
  6104  0054F6                     __ptext13:
  6105                           	opt stack 0
  6106  0054F6                     ___xxtofl:
  6107                           	opt stack 24
  6108                           
  6109                           ; BSR set to: 0
  6110                           ;incstack = 0
  6111                           ;___xxtofl@sign stored from wreg
  6112  0054F6  0101               	movlb	1	; () banked
  6113  0054F8  6F8B               	movwf	___xxtofl@sign& (0+255),b
  6114  0054FA  0101               	movlb	1	; () banked
  6115  0054FC  518B               	movf	___xxtofl@sign& (0+255),w,b
  6116  0054FE  0101               	movlb	1	; () banked
  6117  005500  B4D8               	btfsc	status,2,c
  6118  005502  D01E               	goto	l1483
  6119                           
  6120                           ; BSR set to: 1
  6121  005504  0100               	movlb	0	; () banked
  6122  005506  AFCE               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6123  005508  D01B               	goto	l1483
  6124                           
  6125                           ; BSR set to: 0
  6126  00550A  C0CB  F0CF         	movff	___xxtofl@val,??___xxtofl
  6127  00550E  C0CC  F0D0         	movff	___xxtofl@val+1,??___xxtofl+1
  6128  005512  C0CD  F0D1         	movff	___xxtofl@val+2,??___xxtofl+2
  6129  005516  C0CE  F0D2         	movff	___xxtofl@val+3,??___xxtofl+3
  6130  00551A  0100               	movlb	0	; () banked
  6131  00551C  1FCF               	comf	??___xxtofl& (0+255),f,b
  6132  00551E  1FD0               	comf	(??___xxtofl+1)& (0+255),f,b
  6133  005520  1FD1               	comf	(??___xxtofl+2)& (0+255),f,b
  6134  005522  1FD2               	comf	(??___xxtofl+3)& (0+255),f,b
  6135  005524  2BCF               	incf	??___xxtofl& (0+255),f,b
  6136  005526  0E00               	movlw	0
  6137  005528  23D0               	addwfc	(??___xxtofl+1)& (0+255),f,b
  6138  00552A  23D1               	addwfc	(??___xxtofl+2)& (0+255),f,b
  6139  00552C  23D2               	addwfc	(??___xxtofl+3)& (0+255),f,b
  6140  00552E  C0CF  F18D         	movff	??___xxtofl,___xxtofl@arg
  6141  005532  C0D0  F18E         	movff	??___xxtofl+1,___xxtofl@arg+1
  6142  005536  C0D1  F18F         	movff	??___xxtofl+2,___xxtofl@arg+2
  6143  00553A  C0D2  F190         	movff	??___xxtofl+3,___xxtofl@arg+3
  6144  00553E  D008               	goto	l7154
  6145  005540                     l1483:
  6146  005540  C0CB  F18D         	movff	___xxtofl@val,___xxtofl@arg
  6147  005544  C0CC  F18E         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6148  005548  C0CD  F18F         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6149  00554C  C0CE  F190         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6150  005550                     l7154:
  6151  005550  0100               	movlb	0	; () banked
  6152  005552  51CB               	movf	___xxtofl@val& (0+255),w,b
  6153  005554  0100               	movlb	0	; () banked
  6154  005556  11CC               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  6155  005558  0100               	movlb	0	; () banked
  6156  00555A  11CD               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  6157  00555C  0100               	movlb	0	; () banked
  6158  00555E  11CE               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  6159  005560  A4D8               	btfss	status,2,c
  6160  005562  D00A               	goto	l7160
  6161                           
  6162                           ; BSR set to: 0
  6163  005564  0E00               	movlw	0
  6164  005566  0100               	movlb	0	; () banked
  6165  005568  6FCB               	movwf	?___xxtofl& (0+255),b
  6166  00556A  0E00               	movlw	0
  6167  00556C  6FCC               	movwf	(?___xxtofl+1)& (0+255),b
  6168  00556E  0E00               	movlw	0
  6169  005570  6FCD               	movwf	(?___xxtofl+2)& (0+255),b
  6170  005572  0E00               	movlw	0
  6171  005574  6FCE               	movwf	(?___xxtofl+3)& (0+255),b
  6172                           
  6173                           ; BSR set to: 0
  6174  005576  0012               	return	
  6175  005578                     l7160:
  6176                           
  6177                           ; BSR set to: 0
  6178  005578  0E96               	movlw	150
  6179  00557A  0101               	movlb	1	; () banked
  6180  00557C  6F8C               	movwf	___xxtofl@exp& (0+255),b
  6181  00557E  D008               	goto	l7164
  6182  005580                     l7162:
  6183  005580  0101               	movlb	1	; () banked
  6184  005582  2B8C               	incf	___xxtofl@exp& (0+255),f,b
  6185  005584  0101               	movlb	1	; () banked
  6186  005586  90D8               	bcf	status,0,c
  6187  005588  3390               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6188  00558A  338F               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6189  00558C  338E               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6190  00558E  338D               	rrcf	___xxtofl@arg& (0+255),f,b
  6191  005590                     l7164:
  6192                           
  6193                           ; BSR set to: 1
  6194  005590  0E00               	movlw	0
  6195  005592  0101               	movlb	1	; () banked
  6196  005594  158D               	andwf	___xxtofl@arg& (0+255),w,b
  6197  005596  0100               	movlb	0	; () banked
  6198  005598  6FCF               	movwf	??___xxtofl& (0+255),b
  6199  00559A  0E00               	movlw	0
  6200  00559C  0101               	movlb	1	; () banked
  6201  00559E  158E               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6202  0055A0  0100               	movlb	0	; () banked
  6203  0055A2  6FD0               	movwf	(??___xxtofl+1)& (0+255),b
  6204  0055A4  0E00               	movlw	0
  6205  0055A6  0101               	movlb	1	; () banked
  6206  0055A8  158F               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6207  0055AA  0100               	movlb	0	; () banked
  6208  0055AC  6FD1               	movwf	(??___xxtofl+2)& (0+255),b
  6209  0055AE  0EFE               	movlw	254
  6210  0055B0  0101               	movlb	1	; () banked
  6211  0055B2  1590               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6212  0055B4  0100               	movlb	0	; () banked
  6213  0055B6  6FD2               	movwf	(??___xxtofl+3)& (0+255),b
  6214  0055B8  0100               	movlb	0	; () banked
  6215  0055BA  51CF               	movf	??___xxtofl& (0+255),w,b
  6216  0055BC  0100               	movlb	0	; () banked
  6217  0055BE  11D0               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6218  0055C0  0100               	movlb	0	; () banked
  6219  0055C2  11D1               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6220  0055C4  0100               	movlb	0	; () banked
  6221  0055C6  11D2               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6222  0055C8  B4D8               	btfsc	status,2,c
  6223  0055CA  D010               	goto	l1490
  6224  0055CC  D7D9               	goto	l7162
  6225  0055CE                     l7166:
  6226                           
  6227                           ; BSR set to: 0
  6228  0055CE  0101               	movlb	1	; () banked
  6229  0055D0  2B8C               	incf	___xxtofl@exp& (0+255),f,b
  6230                           
  6231                           ; BSR set to: 1
  6232  0055D2  0E01               	movlw	1
  6233  0055D4  0101               	movlb	1	; () banked
  6234  0055D6  278D               	addwf	___xxtofl@arg& (0+255),f,b
  6235  0055D8  0E00               	movlw	0
  6236  0055DA  238E               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  6237  0055DC  238F               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  6238  0055DE  2390               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  6239                           
  6240                           ; BSR set to: 1
  6241  0055E0  0101               	movlb	1	; () banked
  6242  0055E2  90D8               	bcf	status,0,c
  6243  0055E4  3390               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6244  0055E6  338F               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6245  0055E8  338E               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6246  0055EA  338D               	rrcf	___xxtofl@arg& (0+255),f,b
  6247  0055EC                     l1490:
  6248  0055EC  0E00               	movlw	0
  6249  0055EE  0101               	movlb	1	; () banked
  6250  0055F0  158D               	andwf	___xxtofl@arg& (0+255),w,b
  6251  0055F2  0100               	movlb	0	; () banked
  6252  0055F4  6FCF               	movwf	??___xxtofl& (0+255),b
  6253  0055F6  0E00               	movlw	0
  6254  0055F8  0101               	movlb	1	; () banked
  6255  0055FA  158E               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6256  0055FC  0100               	movlb	0	; () banked
  6257  0055FE  6FD0               	movwf	(??___xxtofl+1)& (0+255),b
  6258  005600  0E00               	movlw	0
  6259  005602  0101               	movlb	1	; () banked
  6260  005604  158F               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6261  005606  0100               	movlb	0	; () banked
  6262  005608  6FD1               	movwf	(??___xxtofl+2)& (0+255),b
  6263  00560A  0EFF               	movlw	255
  6264  00560C  0101               	movlb	1	; () banked
  6265  00560E  1590               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6266  005610  0100               	movlb	0	; () banked
  6267  005612  6FD2               	movwf	(??___xxtofl+3)& (0+255),b
  6268  005614  0100               	movlb	0	; () banked
  6269  005616  51CF               	movf	??___xxtofl& (0+255),w,b
  6270  005618  0100               	movlb	0	; () banked
  6271  00561A  11D0               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6272  00561C  0100               	movlb	0	; () banked
  6273  00561E  11D1               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6274  005620  0100               	movlb	0	; () banked
  6275  005622  11D2               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6276  005624  B4D8               	btfsc	status,2,c
  6277  005626  D009               	goto	l7174
  6278  005628  D7D2               	goto	l7166
  6279  00562A                     l7172:
  6280  00562A  0101               	movlb	1	; () banked
  6281  00562C  078C               	decf	___xxtofl@exp& (0+255),f,b
  6282  00562E  0101               	movlb	1	; () banked
  6283  005630  90D8               	bcf	status,0,c
  6284  005632  378D               	rlcf	___xxtofl@arg& (0+255),f,b
  6285  005634  378E               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  6286  005636  378F               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  6287  005638  3790               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  6288  00563A                     l7174:
  6289  00563A  0101               	movlb	1	; () banked
  6290  00563C  BF8F               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  6291  00563E  D004               	goto	l1497
  6292                           
  6293                           ; BSR set to: 1
  6294  005640  0E02               	movlw	2
  6295  005642  0101               	movlb	1	; () banked
  6296  005644  618C               	cpfslt	___xxtofl@exp& (0+255),b
  6297  005646  D7F1               	goto	l7172
  6298  005648                     l1497:
  6299                           
  6300                           ; BSR set to: 1
  6301  005648  0101               	movlb	1	; () banked
  6302  00564A  B18C               	btfsc	___xxtofl@exp& (0+255),0,b
  6303  00564C  D009               	goto	l1498
  6304                           
  6305                           ; BSR set to: 1
  6306  00564E  0EFF               	movlw	255
  6307  005650  0101               	movlb	1	; () banked
  6308  005652  178D               	andwf	___xxtofl@arg& (0+255),f,b
  6309  005654  0EFF               	movlw	255
  6310  005656  178E               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  6311  005658  0E7F               	movlw	127
  6312  00565A  178F               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  6313  00565C  0EFF               	movlw	255
  6314  00565E  1790               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  6315  005660                     l1498:
  6316                           
  6317                           ; BSR set to: 1
  6318  005660  0101               	movlb	1	; () banked
  6319  005662  90D8               	bcf	status,0,c
  6320  005664  338C               	rrcf	___xxtofl@exp& (0+255),f,b
  6321  005666  C18C  F0CF         	movff	___xxtofl@exp,??___xxtofl
  6322  00566A  0100               	movlb	0	; () banked
  6323  00566C  6BD0               	clrf	(??___xxtofl+1)& (0+255),b
  6324  00566E  6BD1               	clrf	(??___xxtofl+2)& (0+255),b
  6325  005670  6BD2               	clrf	(??___xxtofl+3)& (0+255),b
  6326  005672  C0CF  F0D2         	movff	??___xxtofl,??___xxtofl+3
  6327  005676  0100               	movlb	0	; () banked
  6328  005678  6BD1               	clrf	(??___xxtofl+2)& (0+255),b
  6329  00567A  6BD0               	clrf	(??___xxtofl+1)& (0+255),b
  6330  00567C  6BCF               	clrf	??___xxtofl& (0+255),b
  6331  00567E  0100               	movlb	0	; () banked
  6332  005680  51CF               	movf	??___xxtofl& (0+255),w,b
  6333  005682  0101               	movlb	1	; () banked
  6334  005684  138D               	iorwf	___xxtofl@arg& (0+255),f,b
  6335  005686  0100               	movlb	0	; () banked
  6336  005688  51D0               	movf	(??___xxtofl+1)& (0+255),w,b
  6337  00568A  0101               	movlb	1	; () banked
  6338  00568C  138E               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  6339  00568E  0100               	movlb	0	; () banked
  6340  005690  51D1               	movf	(??___xxtofl+2)& (0+255),w,b
  6341  005692  0101               	movlb	1	; () banked
  6342  005694  138F               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  6343  005696  0100               	movlb	0	; () banked
  6344  005698  51D2               	movf	(??___xxtofl+3)& (0+255),w,b
  6345  00569A  0101               	movlb	1	; () banked
  6346  00569C  1390               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  6347                           
  6348                           ; BSR set to: 1
  6349  00569E  0101               	movlb	1	; () banked
  6350  0056A0  518B               	movf	___xxtofl@sign& (0+255),w,b
  6351  0056A2  0101               	movlb	1	; () banked
  6352  0056A4  B4D8               	btfsc	status,2,c
  6353  0056A6  D005               	goto	l7186
  6354                           
  6355                           ; BSR set to: 1
  6356  0056A8  0100               	movlb	0	; () banked
  6357  0056AA  AFCE               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6358  0056AC  D002               	goto	l7186
  6359                           
  6360                           ; BSR set to: 0
  6361  0056AE  0101               	movlb	1	; () banked
  6362  0056B0  8F90               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  6363  0056B2                     l7186:
  6364  0056B2  C18D  F0CB         	movff	___xxtofl@arg,?___xxtofl
  6365  0056B6  C18E  F0CC         	movff	___xxtofl@arg+1,?___xxtofl+1
  6366  0056BA  C18F  F0CD         	movff	___xxtofl@arg+2,?___xxtofl+2
  6367  0056BE  C190  F0CE         	movff	___xxtofl@arg+3,?___xxtofl+3
  6368  0056C2  0012               	return	
  6369  0056C4                     __end_of___xxtofl:
  6370                           	opt stack 0
  6371                           tblptru	equ	0xFF8
  6372                           tblptrh	equ	0xFF7
  6373                           tblptrl	equ	0xFF6
  6374                           tablat	equ	0xFF5
  6375                           postinc0	equ	0xFEE
  6376                           wreg	equ	0xFE8
  6377                           postdec1	equ	0xFE5
  6378                           fsr1l	equ	0xFE1
  6379                           indf2	equ	0xFDF
  6380                           postinc2	equ	0xFDE
  6381                           postdec2	equ	0xFDD
  6382                           fsr2h	equ	0xFDA
  6383                           fsr2l	equ	0xFD9
  6384                           status	equ	0xFD8
  6385                           
  6386 ;; *************** function ___fltol *****************
  6387 ;; Defined at:
  6388 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  6389 ;; Parameters:    Size  Location     Type
  6390 ;;  f1              4   97[BANK0 ] unsigned char 
  6391 ;; Auto vars:     Size  Location     Type
  6392 ;;  exp1            1  106[BANK0 ] unsigned char 
  6393 ;;  sign1           1  105[BANK0 ] unsigned char 
  6394 ;; Return value:  Size  Location     Type
  6395 ;;                  4   97[BANK0 ] long 
  6396 ;; Registers used:
  6397 ;;		wreg, status,2, status,0
  6398 ;; Tracked objects:
  6399 ;;		On entry : 0/0
  6400 ;;		On exit  : 0/0
  6401 ;;		Unchanged: 0/0
  6402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6403 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6404 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6405 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6406 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6407 ;;Total ram usage:       10 bytes
  6408 ;; Hardware stack levels used:    1
  6409 ;; Hardware stack levels required when called:    4
  6410 ;; This function calls:
  6411 ;;		Nothing
  6412 ;; This function is called by:
  6413 ;;		_park_routine
  6414 ;;		_parallelo
  6415 ;;		_floor
  6416 ;; This function uses a non-reentrant model
  6417 ;;
  6418                           
  6419                           	psect	text14
  6420  005E1C                     __ptext14:
  6421                           	opt stack 0
  6422  005E1C                     ___fltol:
  6423                           	opt stack 24
  6424                           
  6425                           ;incstack = 0
  6426  005E1C  0100               	movlb	0	; () banked
  6427  005E1E  35C3               	rlcf	(___fltol@f1+2)& (0+255),w,b
  6428  005E20  35C4               	rlcf	(___fltol@f1+3)& (0+255),w,b
  6429  005E22  0100               	movlb	0	; () banked
  6430  005E24  6FCA               	movwf	___fltol@exp1& (0+255),b
  6431  005E26  0100               	movlb	0	; () banked
  6432  005E28  51CA               	movf	___fltol@exp1& (0+255),w,b
  6433  005E2A  A4D8               	btfss	status,2,c
  6434  005E2C  D00A               	goto	l7110
  6435                           
  6436                           ; BSR set to: 0
  6437  005E2E  0E00               	movlw	0
  6438  005E30  0100               	movlb	0	; () banked
  6439  005E32  6FC1               	movwf	?___fltol& (0+255),b
  6440  005E34  0E00               	movlw	0
  6441  005E36  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6442  005E38  0E00               	movlw	0
  6443  005E3A  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6444  005E3C  0E00               	movlw	0
  6445  005E3E  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6446                           
  6447                           ; BSR set to: 0
  6448  005E40  0012               	return	
  6449  005E42                     l7110:
  6450                           
  6451                           ; BSR set to: 0
  6452  005E42  C0C1  F0C5         	movff	___fltol@f1,??___fltol
  6453  005E46  C0C2  F0C6         	movff	___fltol@f1+1,??___fltol+1
  6454  005E4A  C0C3  F0C7         	movff	___fltol@f1+2,??___fltol+2
  6455  005E4E  C0C4  F0C8         	movff	___fltol@f1+3,??___fltol+3
  6456  005E52  0E20               	movlw	32
  6457  005E54  D006               	goto	u9320
  6458  005E56                     u9325:
  6459  005E56  0100               	movlb	0	; () banked
  6460  005E58  90D8               	bcf	status,0,c
  6461  005E5A  33C8               	rrcf	(??___fltol+3)& (0+255),f,b
  6462  005E5C  33C7               	rrcf	(??___fltol+2)& (0+255),f,b
  6463  005E5E  33C6               	rrcf	(??___fltol+1)& (0+255),f,b
  6464  005E60  33C5               	rrcf	??___fltol& (0+255),f,b
  6465  005E62                     u9320:
  6466  005E62  2EE8               	decfsz	wreg,f,c
  6467  005E64  D7F8               	goto	u9325
  6468  005E66  0100               	movlb	0	; () banked
  6469  005E68  51C5               	movf	??___fltol& (0+255),w,b
  6470  005E6A  0100               	movlb	0	; () banked
  6471  005E6C  6FC9               	movwf	___fltol@sign1& (0+255),b
  6472                           
  6473                           ; BSR set to: 0
  6474  005E6E  0100               	movlb	0	; () banked
  6475  005E70  8FC3               	bsf	(___fltol@f1+2)& (0+255),7,b
  6476                           
  6477                           ; BSR set to: 0
  6478  005E72  0EFF               	movlw	255
  6479  005E74  0100               	movlb	0	; () banked
  6480  005E76  17C1               	andwf	___fltol@f1& (0+255),f,b
  6481  005E78  0EFF               	movlw	255
  6482  005E7A  17C2               	andwf	(___fltol@f1+1)& (0+255),f,b
  6483  005E7C  0EFF               	movlw	255
  6484  005E7E  17C3               	andwf	(___fltol@f1+2)& (0+255),f,b
  6485  005E80  0E00               	movlw	0
  6486  005E82  17C4               	andwf	(___fltol@f1+3)& (0+255),f,b
  6487                           
  6488                           ; BSR set to: 0
  6489  005E84  0E96               	movlw	150
  6490  005E86  0100               	movlb	0	; () banked
  6491  005E88  5FCA               	subwf	___fltol@exp1& (0+255),f,b
  6492                           
  6493                           ; BSR set to: 0
  6494  005E8A  0100               	movlb	0	; () banked
  6495  005E8C  AFCA               	btfss	___fltol@exp1& (0+255),7,b
  6496  005E8E  D01A               	goto	l7130
  6497                           
  6498                           ; BSR set to: 0
  6499  005E90  0100               	movlb	0	; () banked
  6500  005E92  51CA               	movf	___fltol@exp1& (0+255),w,b
  6501  005E94  0A80               	xorlw	128
  6502  005E96  0F97               	addlw	151
  6503  005E98  B0D8               	btfsc	status,0,c
  6504  005E9A  D00A               	goto	l7126
  6505                           
  6506                           ; BSR set to: 0
  6507  005E9C  0E00               	movlw	0
  6508  005E9E  0100               	movlb	0	; () banked
  6509  005EA0  6FC1               	movwf	?___fltol& (0+255),b
  6510  005EA2  0E00               	movlw	0
  6511  005EA4  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6512  005EA6  0E00               	movlw	0
  6513  005EA8  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6514  005EAA  0E00               	movlw	0
  6515  005EAC  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6516                           
  6517                           ; BSR set to: 0
  6518  005EAE  0012               	return	
  6519  005EB0                     l7126:
  6520                           
  6521                           ; BSR set to: 0
  6522  005EB0  0100               	movlb	0	; () banked
  6523  005EB2  90D8               	bcf	status,0,c
  6524  005EB4  33C4               	rrcf	(___fltol@f1+3)& (0+255),f,b
  6525  005EB6  33C3               	rrcf	(___fltol@f1+2)& (0+255),f,b
  6526  005EB8  33C2               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6527  005EBA  33C1               	rrcf	___fltol@f1& (0+255),f,b
  6528                           
  6529                           ; BSR set to: 0
  6530  005EBC  0100               	movlb	0	; () banked
  6531  005EBE  3FCA               	incfsz	___fltol@exp1& (0+255),f,b
  6532  005EC0  D7F7               	goto	l7126
  6533                           
  6534                           ; BSR set to: 0
  6535  005EC2  D01B               	goto	l7140
  6536  005EC4                     l7130:
  6537                           
  6538                           ; BSR set to: 0
  6539  005EC4  0E1F               	movlw	31
  6540  005EC6  0100               	movlb	0	; () banked
  6541  005EC8  65CA               	cpfsgt	___fltol@exp1& (0+255),b
  6542  005ECA  D012               	goto	l7138
  6543                           
  6544                           ; BSR set to: 0
  6545  005ECC  0E00               	movlw	0
  6546  005ECE  0100               	movlb	0	; () banked
  6547  005ED0  6FC1               	movwf	?___fltol& (0+255),b
  6548  005ED2  0E00               	movlw	0
  6549  005ED4  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6550  005ED6  0E00               	movlw	0
  6551  005ED8  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6552  005EDA  0E00               	movlw	0
  6553  005EDC  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6554                           
  6555                           ; BSR set to: 0
  6556  005EDE  0012               	return	
  6557  005EE0                     l7136:
  6558                           
  6559                           ; BSR set to: 0
  6560  005EE0  0100               	movlb	0	; () banked
  6561  005EE2  90D8               	bcf	status,0,c
  6562  005EE4  37C1               	rlcf	___fltol@f1& (0+255),f,b
  6563  005EE6  37C2               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6564  005EE8  37C3               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6565  005EEA  37C4               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6566  005EEC  0100               	movlb	0	; () banked
  6567  005EEE  07CA               	decf	___fltol@exp1& (0+255),f,b
  6568  005EF0                     l7138:
  6569                           
  6570                           ; BSR set to: 0
  6571  005EF0  0100               	movlb	0	; () banked
  6572  005EF2  51CA               	movf	___fltol@exp1& (0+255),w,b
  6573  005EF4  0100               	movlb	0	; () banked
  6574  005EF6  A4D8               	btfss	status,2,c
  6575  005EF8  D7F3               	goto	l7136
  6576  005EFA                     l7140:
  6577                           
  6578                           ; BSR set to: 0
  6579  005EFA  0100               	movlb	0	; () banked
  6580  005EFC  51C9               	movf	___fltol@sign1& (0+255),w,b
  6581  005EFE  0100               	movlb	0	; () banked
  6582  005F00  B4D8               	btfsc	status,2,c
  6583  005F02  D009               	goto	l7144
  6584                           
  6585                           ; BSR set to: 0
  6586  005F04  0100               	movlb	0	; () banked
  6587  005F06  1FC4               	comf	(___fltol@f1+3)& (0+255),f,b
  6588  005F08  1FC3               	comf	(___fltol@f1+2)& (0+255),f,b
  6589  005F0A  1FC2               	comf	(___fltol@f1+1)& (0+255),f,b
  6590  005F0C  6DC1               	negf	___fltol@f1& (0+255),b
  6591  005F0E  0E00               	movlw	0
  6592  005F10  23C2               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6593  005F12  23C3               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6594  005F14  23C4               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6595  005F16                     l7144:
  6596                           
  6597                           ; BSR set to: 0
  6598  005F16  C0C1  F0C1         	movff	___fltol@f1,?___fltol
  6599  005F1A  C0C2  F0C2         	movff	___fltol@f1+1,?___fltol+1
  6600  005F1E  C0C3  F0C3         	movff	___fltol@f1+2,?___fltol+2
  6601  005F22  C0C4  F0C4         	movff	___fltol@f1+3,?___fltol+3
  6602  005F26  0012               	return	
  6603  005F28                     __end_of___fltol:
  6604                           	opt stack 0
  6605                           tblptru	equ	0xFF8
  6606                           tblptrh	equ	0xFF7
  6607                           tblptrl	equ	0xFF6
  6608                           tablat	equ	0xFF5
  6609                           postinc0	equ	0xFEE
  6610                           wreg	equ	0xFE8
  6611                           postdec1	equ	0xFE5
  6612                           fsr1l	equ	0xFE1
  6613                           indf2	equ	0xFDF
  6614                           postinc2	equ	0xFDE
  6615                           postdec2	equ	0xFDD
  6616                           fsr2h	equ	0xFDA
  6617                           fsr2l	equ	0xFD9
  6618                           status	equ	0xFD8
  6619                           
  6620 ;; *************** function ___flsub *****************
  6621 ;; Defined at:
  6622 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  6623 ;; Parameters:    Size  Location     Type
  6624 ;;  b               4   12[BANK1 ] long 
  6625 ;;  a               4   16[BANK1 ] long 
  6626 ;; Auto vars:     Size  Location     Type
  6627 ;;		None
  6628 ;; Return value:  Size  Location     Type
  6629 ;;                  4   12[BANK1 ] long 
  6630 ;; Registers used:
  6631 ;;		wreg, status,2, status,0, cstack
  6632 ;; Tracked objects:
  6633 ;;		On entry : 0/0
  6634 ;;		On exit  : 0/0
  6635 ;;		Unchanged: 0/0
  6636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6637 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6640 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6641 ;;Total ram usage:        8 bytes
  6642 ;; Hardware stack levels used:    1
  6643 ;; Hardware stack levels required when called:    5
  6644 ;; This function calls:
  6645 ;;		___fladd
  6646 ;; This function is called by:
  6647 ;;		_sin
  6648 ;; This function uses a non-reentrant model
  6649 ;;
  6650                           
  6651                           	psect	text15
  6652  0064FC                     __ptext15:
  6653                           	opt stack 0
  6654  0064FC                     ___flsub:
  6655                           	opt stack 21
  6656                           
  6657                           ; BSR set to: 0
  6658                           ;incstack = 0
  6659  0064FC  0E00               	movlw	0
  6660  0064FE  0101               	movlb	1	; () banked
  6661  006500  1B9B               	xorwf	___flsub@a& (0+255),f,b
  6662  006502  0E00               	movlw	0
  6663  006504  1B9C               	xorwf	(___flsub@a+1)& (0+255),f,b
  6664  006506  0E00               	movlw	0
  6665  006508  1B9D               	xorwf	(___flsub@a+2)& (0+255),f,b
  6666  00650A  0E80               	movlw	128
  6667  00650C  1B9E               	xorwf	(___flsub@a+3)& (0+255),f,b
  6668                           
  6669                           ; BSR set to: 1
  6670  00650E  C197  F0A9         	movff	___flsub@b,___fladd@b
  6671  006512  C198  F0AA         	movff	___flsub@b+1,___fladd@b+1
  6672  006516  C199  F0AB         	movff	___flsub@b+2,___fladd@b+2
  6673  00651A  C19A  F0AC         	movff	___flsub@b+3,___fladd@b+3
  6674  00651E  C19B  F0AD         	movff	___flsub@a,___fladd@a
  6675  006522  C19C  F0AE         	movff	___flsub@a+1,___fladd@a+1
  6676  006526  C19D  F0AF         	movff	___flsub@a+2,___fladd@a+2
  6677  00652A  C19E  F0B0         	movff	___flsub@a+3,___fladd@a+3
  6678  00652E  EC85  F018         	call	___fladd	;wreg free
  6679  006532  C0A9  F197         	movff	?___fladd,?___flsub
  6680  006536  C0AA  F198         	movff	?___fladd+1,?___flsub+1
  6681  00653A  C0AB  F199         	movff	?___fladd+2,?___flsub+2
  6682  00653E  C0AC  F19A         	movff	?___fladd+3,?___flsub+3
  6683  006542  0012               	return	
  6684  006544                     __end_of___flsub:
  6685                           	opt stack 0
  6686                           tblptru	equ	0xFF8
  6687                           tblptrh	equ	0xFF7
  6688                           tblptrl	equ	0xFF6
  6689                           tablat	equ	0xFF5
  6690                           postinc0	equ	0xFEE
  6691                           wreg	equ	0xFE8
  6692                           postdec1	equ	0xFE5
  6693                           fsr1l	equ	0xFE1
  6694                           indf2	equ	0xFDF
  6695                           postinc2	equ	0xFDE
  6696                           postdec2	equ	0xFDD
  6697                           fsr2h	equ	0xFDA
  6698                           fsr2l	equ	0xFD9
  6699                           status	equ	0xFD8
  6700                           
  6701 ;; *************** function _asin *****************
  6702 ;; Defined at:
  6703 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\asin.c"
  6704 ;; Parameters:    Size  Location     Type
  6705 ;;  x               4   21[BANK1 ] long 
  6706 ;; Auto vars:     Size  Location     Type
  6707 ;;  y               4   37[BANK1 ] long 
  6708 ;;  sgn             4   25[BANK1 ] long 
  6709 ;; Return value:  Size  Location     Type
  6710 ;;                  4   21[BANK1 ] long 
  6711 ;; Registers used:
  6712 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6713 ;; Tracked objects:
  6714 ;;		On entry : 0/0
  6715 ;;		On exit  : 0/0
  6716 ;;		Unchanged: 0/0
  6717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6718 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6719 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  6720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6721 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0
  6722 ;;Total ram usage:       24 bytes
  6723 ;; Hardware stack levels used:    1
  6724 ;; Hardware stack levels required when called:    7
  6725 ;; This function calls:
  6726 ;;		___fladd
  6727 ;;		___fldiv
  6728 ;;		___flge
  6729 ;;		___flmul
  6730 ;;		___flneg
  6731 ;;		_atan
  6732 ;;		_fabs
  6733 ;;		_sqrt
  6734 ;; This function is called by:
  6735 ;;		_parallelo
  6736 ;;		_matematica
  6737 ;; This function uses a non-reentrant model
  6738 ;;
  6739                           
  6740                           	psect	text16
  6741  004D28                     __ptext16:
  6742                           	opt stack 0
  6743  004D28                     _asin:
  6744                           	opt stack 21
  6745                           
  6746                           ;incstack = 0
  6747  004D28  0E00               	movlw	0
  6748  004D2A  0100               	movlb	0	; () banked
  6749  004D2C  6FC5               	movwf	___flge@ff1& (0+255),b
  6750  004D2E  0E00               	movlw	0
  6751  004D30  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  6752  004D32  0E80               	movlw	128
  6753  004D34  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  6754  004D36  0E3F               	movlw	63
  6755  004D38  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  6756  004D3A  C1A0  F0C1         	movff	asin@x,fabs@d
  6757  004D3E  C1A1  F0C2         	movff	asin@x+1,fabs@d+1
  6758  004D42  C1A2  F0C3         	movff	asin@x+2,fabs@d+2
  6759  004D46  C1A3  F0C4         	movff	asin@x+3,fabs@d+3
  6760  004D4A  ECA2  F032         	call	_fabs	;wreg free
  6761  004D4E  C0C1  F0C9         	movff	?_fabs,___flge@ff2
  6762  004D52  C0C2  F0CA         	movff	?_fabs+1,___flge@ff2+1
  6763  004D56  C0C3  F0CB         	movff	?_fabs+2,___flge@ff2+2
  6764  004D5A  C0C4  F0CC         	movff	?_fabs+3,___flge@ff2+3
  6765  004D5E  EC28  F02D         	call	___flge	;wreg free
  6766  004D62  0100               	movlb	0	; () banked
  6767  004D64  B0D8               	btfsc	status,0,c
  6768  004D66  D00F               	goto	l7616
  6769                           
  6770                           ; BSR set to: 0
  6771  004D68  0E00               	movlw	0
  6772  004D6A  0100               	movlb	0	; () banked
  6773  004D6C  6FE5               	movwf	(_errno+1)& (0+255),b
  6774  004D6E  0E21               	movlw	33
  6775  004D70  6FE4               	movwf	_errno& (0+255),b
  6776  004D72  0E00               	movlw	0
  6777  004D74  0101               	movlb	1	; () banked
  6778  004D76  6FA0               	movwf	?_asin& (0+255),b
  6779  004D78  0E00               	movlw	0
  6780  004D7A  6FA1               	movwf	(?_asin+1)& (0+255),b
  6781  004D7C  0E00               	movlw	0
  6782  004D7E  6FA2               	movwf	(?_asin+2)& (0+255),b
  6783  004D80  0E00               	movlw	0
  6784  004D82  6FA3               	movwf	(?_asin+3)& (0+255),b
  6785                           
  6786                           ; BSR set to: 1
  6787  004D84  0012               	return	
  6788  004D86                     l7616:
  6789  004D86  0E00               	movlw	0
  6790  004D88  0101               	movlb	1	; () banked
  6791  004D8A  6FA4               	movwf	asin@sgn& (0+255),b
  6792  004D8C  0E00               	movlw	0
  6793  004D8E  6FA5               	movwf	(asin@sgn+1)& (0+255),b
  6794  004D90  0E80               	movlw	128
  6795  004D92  6FA6               	movwf	(asin@sgn+2)& (0+255),b
  6796  004D94  0E3F               	movlw	63
  6797  004D96  6FA7               	movwf	(asin@sgn+3)& (0+255),b
  6798                           
  6799                           ; BSR set to: 1
  6800  004D98  C1A0  F094         	movff	asin@x,___flmul@a
  6801  004D9C  C1A1  F095         	movff	asin@x+1,___flmul@a+1
  6802  004DA0  C1A2  F096         	movff	asin@x+2,___flmul@a+2
  6803  004DA4  C1A3  F097         	movff	asin@x+3,___flmul@a+3
  6804  004DA8  C1A0  F090         	movff	asin@x,___flmul@b
  6805  004DAC  C1A1  F091         	movff	asin@x+1,___flmul@b+1
  6806  004DB0  C1A2  F092         	movff	asin@x+2,___flmul@b+2
  6807  004DB4  C1A3  F093         	movff	asin@x+3,___flmul@b+3
  6808  004DB8  ECD9  F01A         	call	___flmul	;wreg free
  6809  004DBC  C090  F0BD         	movff	?___flmul,___flneg@f1
  6810  004DC0  C091  F0BE         	movff	?___flmul+1,___flneg@f1+1
  6811  004DC4  C092  F0BF         	movff	?___flmul+2,___flneg@f1+2
  6812  004DC8  C093  F0C0         	movff	?___flmul+3,___flneg@f1+3
  6813  004DCC  ECDE  F032         	call	___flneg	;wreg free
  6814  004DD0  C0BD  F0A9         	movff	?___flneg,___fladd@b
  6815  004DD4  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  6816  004DD8  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  6817  004DDC  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  6818  004DE0  0E00               	movlw	0
  6819  004DE2  0100               	movlb	0	; () banked
  6820  004DE4  6FAD               	movwf	___fladd@a& (0+255),b
  6821  004DE6  0E00               	movlw	0
  6822  004DE8  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  6823  004DEA  0E80               	movlw	128
  6824  004DEC  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  6825  004DEE  0E3F               	movlw	63
  6826  004DF0  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  6827  004DF2  EC85  F018         	call	___fladd	;wreg free
  6828  004DF6  C0A9  F0C1         	movff	?___fladd,sqrt@a
  6829  004DFA  C0AA  F0C2         	movff	?___fladd+1,sqrt@a+1
  6830  004DFE  C0AB  F0C3         	movff	?___fladd+2,sqrt@a+2
  6831  004E02  C0AC  F0C4         	movff	?___fladd+3,sqrt@a+3
  6832  004E06  EC74  F01F         	call	_sqrt	;wreg free
  6833  004E0A  C0C1  F1B0         	movff	?_sqrt,asin@y
  6834  004E0E  C0C2  F1B1         	movff	?_sqrt+1,asin@y+1
  6835  004E12  C0C3  F1B2         	movff	?_sqrt+2,asin@y+2
  6836  004E16  C0C4  F1B3         	movff	?_sqrt+3,asin@y+3
  6837  004E1A  C1A0  F0C1         	movff	asin@x,fabs@d
  6838  004E1E  C1A1  F0C2         	movff	asin@x+1,fabs@d+1
  6839  004E22  C1A2  F0C3         	movff	asin@x+2,fabs@d+2
  6840  004E26  C1A3  F0C4         	movff	asin@x+3,fabs@d+3
  6841  004E2A  ECA2  F032         	call	_fabs	;wreg free
  6842  004E2E  C0C1  F0C5         	movff	?_fabs,___flge@ff1
  6843  004E32  C0C2  F0C6         	movff	?_fabs+1,___flge@ff1+1
  6844  004E36  C0C3  F0C7         	movff	?_fabs+2,___flge@ff1+2
  6845  004E3A  C0C4  F0C8         	movff	?_fabs+3,___flge@ff1+3
  6846  004E3E  0E8F               	movlw	143
  6847  004E40  0100               	movlb	0	; () banked
  6848  004E42  6FC9               	movwf	___flge@ff2& (0+255),b
  6849  004E44  0EC2               	movlw	194
  6850  004E46  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
  6851  004E48  0E35               	movlw	53
  6852  004E4A  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
  6853  004E4C  0E3F               	movlw	63
  6854  004E4E  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
  6855  004E50  EC28  F02D         	call	___flge	;wreg free
  6856  004E54  0100               	movlb	0	; () banked
  6857  004E56  B0D8               	btfsc	status,0,c
  6858  004E58  D02D               	goto	l7628
  6859                           
  6860                           ; BSR set to: 0
  6861  004E5A  C1A0  F077         	movff	asin@x,___fldiv@b
  6862  004E5E  C1A1  F078         	movff	asin@x+1,___fldiv@b+1
  6863  004E62  C1A2  F079         	movff	asin@x+2,___fldiv@b+2
  6864  004E66  C1A3  F07A         	movff	asin@x+3,___fldiv@b+3
  6865  004E6A  C1B0  F07B         	movff	asin@y,___fldiv@a
  6866  004E6E  C1B1  F07C         	movff	asin@y+1,___fldiv@a+1
  6867  004E72  C1B2  F07D         	movff	asin@y+2,___fldiv@a+2
  6868  004E76  C1B3  F07E         	movff	asin@y+3,___fldiv@a+3
  6869  004E7A  EC59  F021         	call	___fldiv	;wreg free
  6870  004E7E  C077  F1B4         	movff	?___fldiv,_asin$3752
  6871  004E82  C078  F1B5         	movff	?___fldiv+1,_asin$3752+1
  6872  004E86  C079  F1B6         	movff	?___fldiv+2,_asin$3752+2
  6873  004E8A  C07A  F1B7         	movff	?___fldiv+3,_asin$3752+3
  6874  004E8E  C1B4  F0D1         	movff	_asin$3752,atan@f
  6875  004E92  C1B5  F0D2         	movff	_asin$3752+1,atan@f+1
  6876  004E96  C1B6  F0D3         	movff	_asin$3752+2,atan@f+2
  6877  004E9A  C1B7  F0D4         	movff	_asin$3752+3,atan@f+3
  6878  004E9E  EC52  F029         	call	_atan	;wreg free
  6879  004EA2  C0D1  F1A0         	movff	?_atan,?_asin
  6880  004EA6  C0D2  F1A1         	movff	?_atan+1,?_asin+1
  6881  004EAA  C0D3  F1A2         	movff	?_atan+2,?_asin+2
  6882  004EAE  C0D4  F1A3         	movff	?_atan+3,?_asin+3
  6883  004EB2  0012               	return	
  6884  004EB4                     l7628:
  6885  004EB4  0101               	movlb	1	; () banked
  6886  004EB6  AFA3               	btfss	(asin@x+3)& (0+255),7,b
  6887  004EB8  D06E               	goto	l7640
  6888                           
  6889                           ; BSR set to: 1
  6890  004EBA  C1A0  F07B         	movff	asin@x,___fldiv@a
  6891  004EBE  C1A1  F07C         	movff	asin@x+1,___fldiv@a+1
  6892  004EC2  C1A2  F07D         	movff	asin@x+2,___fldiv@a+2
  6893  004EC6  C1A3  F07E         	movff	asin@x+3,___fldiv@a+3
  6894  004ECA  C1B0  F0BD         	movff	asin@y,___flneg@f1
  6895  004ECE  C1B1  F0BE         	movff	asin@y+1,___flneg@f1+1
  6896  004ED2  C1B2  F0BF         	movff	asin@y+2,___flneg@f1+2
  6897  004ED6  C1B3  F0C0         	movff	asin@y+3,___flneg@f1+3
  6898  004EDA  ECDE  F032         	call	___flneg	;wreg free
  6899  004EDE  C0BD  F077         	movff	?___flneg,___fldiv@b
  6900  004EE2  C0BE  F078         	movff	?___flneg+1,___fldiv@b+1
  6901  004EE6  C0BF  F079         	movff	?___flneg+2,___fldiv@b+2
  6902  004EEA  C0C0  F07A         	movff	?___flneg+3,___fldiv@b+3
  6903  004EEE  EC59  F021         	call	___fldiv	;wreg free
  6904  004EF2  C077  F1B4         	movff	?___fldiv,_asin$3752
  6905  004EF6  C078  F1B5         	movff	?___fldiv+1,_asin$3752+1
  6906  004EFA  C079  F1B6         	movff	?___fldiv+2,_asin$3752+2
  6907  004EFE  C07A  F1B7         	movff	?___fldiv+3,_asin$3752+3
  6908  004F02  C1B4  F0D1         	movff	_asin$3752,atan@f
  6909  004F06  C1B5  F0D2         	movff	_asin$3752+1,atan@f+1
  6910  004F0A  C1B6  F0D3         	movff	_asin$3752+2,atan@f+2
  6911  004F0E  C1B7  F0D4         	movff	_asin$3752+3,atan@f+3
  6912  004F12  EC52  F029         	call	_atan	;wreg free
  6913  004F16  C0D1  F1AC         	movff	?_atan,_asin$3753
  6914  004F1A  C0D2  F1AD         	movff	?_atan+1,_asin$3753+1
  6915  004F1E  C0D3  F1AE         	movff	?_atan+2,_asin$3753+2
  6916  004F22  C0D4  F1AF         	movff	?_atan+3,_asin$3753+3
  6917  004F26  0EDB               	movlw	219
  6918  004F28  0100               	movlb	0	; () banked
  6919  004F2A  6FAD               	movwf	___fladd@a& (0+255),b
  6920  004F2C  0E0F               	movlw	15
  6921  004F2E  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  6922  004F30  0EC9               	movlw	201
  6923  004F32  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  6924  004F34  0E3F               	movlw	63
  6925  004F36  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  6926  004F38  C1AC  F0BD         	movff	_asin$3753,___flneg@f1
  6927  004F3C  C1AD  F0BE         	movff	_asin$3753+1,___flneg@f1+1
  6928  004F40  C1AE  F0BF         	movff	_asin$3753+2,___flneg@f1+2
  6929  004F44  C1AF  F0C0         	movff	_asin$3753+3,___flneg@f1+3
  6930  004F48  ECDE  F032         	call	___flneg	;wreg free
  6931  004F4C  C0BD  F0A9         	movff	?___flneg,___fladd@b
  6932  004F50  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  6933  004F54  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  6934  004F58  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  6935  004F5C  EC85  F018         	call	___fladd	;wreg free
  6936  004F60  C0A9  F1A8         	movff	?___fladd,_asin$3754
  6937  004F64  C0AA  F1A9         	movff	?___fladd+1,_asin$3754+1
  6938  004F68  C0AB  F1AA         	movff	?___fladd+2,_asin$3754+2
  6939  004F6C  C0AC  F1AB         	movff	?___fladd+3,_asin$3754+3
  6940  004F70  C1A8  F0BD         	movff	_asin$3754,___flneg@f1
  6941  004F74  C1A9  F0BE         	movff	_asin$3754+1,___flneg@f1+1
  6942  004F78  C1AA  F0BF         	movff	_asin$3754+2,___flneg@f1+2
  6943  004F7C  C1AB  F0C0         	movff	_asin$3754+3,___flneg@f1+3
  6944  004F80  ECDE  F032         	call	___flneg	;wreg free
  6945  004F84  C0BD  F1A0         	movff	?___flneg,?_asin
  6946  004F88  C0BE  F1A1         	movff	?___flneg+1,?_asin+1
  6947  004F8C  C0BF  F1A2         	movff	?___flneg+2,?_asin+2
  6948  004F90  C0C0  F1A3         	movff	?___flneg+3,?_asin+3
  6949  004F94  0012               	return	
  6950  004F96                     l7640:
  6951  004F96  C1A0  F07B         	movff	asin@x,___fldiv@a
  6952  004F9A  C1A1  F07C         	movff	asin@x+1,___fldiv@a+1
  6953  004F9E  C1A2  F07D         	movff	asin@x+2,___fldiv@a+2
  6954  004FA2  C1A3  F07E         	movff	asin@x+3,___fldiv@a+3
  6955  004FA6  C1B0  F077         	movff	asin@y,___fldiv@b
  6956  004FAA  C1B1  F078         	movff	asin@y+1,___fldiv@b+1
  6957  004FAE  C1B2  F079         	movff	asin@y+2,___fldiv@b+2
  6958  004FB2  C1B3  F07A         	movff	asin@y+3,___fldiv@b+3
  6959  004FB6  EC59  F021         	call	___fldiv	;wreg free
  6960  004FBA  C077  F1B4         	movff	?___fldiv,_asin$3752
  6961  004FBE  C078  F1B5         	movff	?___fldiv+1,_asin$3752+1
  6962  004FC2  C079  F1B6         	movff	?___fldiv+2,_asin$3752+2
  6963  004FC6  C07A  F1B7         	movff	?___fldiv+3,_asin$3752+3
  6964  004FCA  C1B4  F0D1         	movff	_asin$3752,atan@f
  6965  004FCE  C1B5  F0D2         	movff	_asin$3752+1,atan@f+1
  6966  004FD2  C1B6  F0D3         	movff	_asin$3752+2,atan@f+2
  6967  004FD6  C1B7  F0D4         	movff	_asin$3752+3,atan@f+3
  6968  004FDA  EC52  F029         	call	_atan	;wreg free
  6969  004FDE  C0D1  F1AC         	movff	?_atan,_asin$3753
  6970  004FE2  C0D2  F1AD         	movff	?_atan+1,_asin$3753+1
  6971  004FE6  C0D3  F1AE         	movff	?_atan+2,_asin$3753+2
  6972  004FEA  C0D4  F1AF         	movff	?_atan+3,_asin$3753+3
  6973  004FEE  C1AC  F0BD         	movff	_asin$3753,___flneg@f1
  6974  004FF2  C1AD  F0BE         	movff	_asin$3753+1,___flneg@f1+1
  6975  004FF6  C1AE  F0BF         	movff	_asin$3753+2,___flneg@f1+2
  6976  004FFA  C1AF  F0C0         	movff	_asin$3753+3,___flneg@f1+3
  6977  004FFE  ECDE  F032         	call	___flneg	;wreg free
  6978  005002  C0BD  F0A9         	movff	?___flneg,___fladd@b
  6979  005006  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  6980  00500A  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  6981  00500E  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  6982  005012  0EDB               	movlw	219
  6983  005014  0100               	movlb	0	; () banked
  6984  005016  6FAD               	movwf	___fladd@a& (0+255),b
  6985  005018  0E0F               	movlw	15
  6986  00501A  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  6987  00501C  0EC9               	movlw	201
  6988  00501E  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  6989  005020  0E3F               	movlw	63
  6990  005022  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  6991  005024  EC85  F018         	call	___fladd	;wreg free
  6992  005028  C0A9  F1A0         	movff	?___fladd,?_asin
  6993  00502C  C0AA  F1A1         	movff	?___fladd+1,?_asin+1
  6994  005030  C0AB  F1A2         	movff	?___fladd+2,?_asin+2
  6995  005034  C0AC  F1A3         	movff	?___fladd+3,?_asin+3
  6996  005038  0012               	return	
  6997  00503A                     __end_of_asin:
  6998                           	opt stack 0
  6999                           tblptru	equ	0xFF8
  7000                           tblptrh	equ	0xFF7
  7001                           tblptrl	equ	0xFF6
  7002                           tablat	equ	0xFF5
  7003                           postinc0	equ	0xFEE
  7004                           wreg	equ	0xFE8
  7005                           postdec1	equ	0xFE5
  7006                           fsr1l	equ	0xFE1
  7007                           indf2	equ	0xFDF
  7008                           postinc2	equ	0xFDE
  7009                           postdec2	equ	0xFDD
  7010                           fsr2h	equ	0xFDA
  7011                           fsr2l	equ	0xFD9
  7012                           status	equ	0xFD8
  7013                           
  7014 ;; *************** function _sqrt *****************
  7015 ;; Defined at:
  7016 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcsqrt.c"
  7017 ;; Parameters:    Size  Location     Type
  7018 ;;  a               4   97[BANK0 ] long 
  7019 ;; Auto vars:     Size  Location     Type
  7020 ;;  frac            4   17[BANK1 ] unsigned long 
  7021 ;;  root            4   13[BANK1 ] struct .
  7022 ;;  grs             4    7[BANK1 ] unsigned long 
  7023 ;;  tfrac           4    2[BANK1 ] unsigned long 
  7024 ;;  exp             2   11[BANK1 ] int 
  7025 ;;  p               1    6[BANK1 ] unsigned char 
  7026 ;;  i               1    1[BANK1 ] unsigned char 
  7027 ;;  sign            1    0[BANK1 ] unsigned char 
  7028 ;; Return value:  Size  Location     Type
  7029 ;;                  4   97[BANK0 ] unsigned char 
  7030 ;; Registers used:
  7031 ;;		wreg, status,2, status,0
  7032 ;; Tracked objects:
  7033 ;;		On entry : 0/0
  7034 ;;		On exit  : 0/0
  7035 ;;		Unchanged: 0/0
  7036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7037 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7038 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
  7039 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7040 ;;      Totals:         0       8      21       0       0       0       0       0       0       0       0       0       
      +0       0
  7041 ;;Total ram usage:       29 bytes
  7042 ;; Hardware stack levels used:    1
  7043 ;; Hardware stack levels required when called:    4
  7044 ;; This function calls:
  7045 ;;		Nothing
  7046 ;; This function is called by:
  7047 ;;		_parallelo
  7048 ;;		_asin
  7049 ;; This function uses a non-reentrant model
  7050 ;;
  7051                           
  7052                           	psect	text17
  7053  003EE8                     __ptext17:
  7054                           	opt stack 0
  7055  003EE8                     _sqrt:
  7056                           	opt stack 24
  7057                           
  7058                           ;incstack = 0
  7059  003EE8  0100               	movlb	0	; () banked
  7060  003EEA  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  7061  003EEC  0B80               	andlw	128
  7062  003EEE  0101               	movlb	1	; () banked
  7063  003EF0  6F8B               	movwf	sqrt@sign& (0+255),b
  7064  003EF2  0100               	movlb	0	; () banked
  7065  003EF4  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  7066  003EF6  25C4               	addwf	(sqrt@a+3)& (0+255),w,b
  7067  003EF8  0101               	movlb	1	; () banked
  7068  003EFA  6F91               	movwf	sqrt@p& (0+255),b
  7069                           
  7070                           ; BSR set to: 1
  7071  003EFC  0100               	movlb	0	; () banked
  7072  003EFE  AFC3               	btfss	(sqrt@a+2)& (0+255),7,b
  7073  003F00  D002               	goto	l7402
  7074                           
  7075                           ; BSR set to: 0
  7076  003F02  0101               	movlb	1	; () banked
  7077  003F04  8191               	bsf	sqrt@p& (0+255),0,b
  7078  003F06                     l7402:
  7079  003F06  C191  F196         	movff	sqrt@p,sqrt@exp
  7080  003F0A  0101               	movlb	1	; () banked
  7081  003F0C  6B97               	clrf	(sqrt@exp+1)& (0+255),b
  7082                           
  7083                           ; BSR set to: 1
  7084  003F0E  0EFF               	movlw	255
  7085  003F10  0100               	movlb	0	; () banked
  7086  003F12  15C1               	andwf	sqrt@a& (0+255),w,b
  7087  003F14  0101               	movlb	1	; () banked
  7088  003F16  6F9C               	movwf	sqrt@frac& (0+255),b
  7089  003F18  0EFF               	movlw	255
  7090  003F1A  0100               	movlb	0	; () banked
  7091  003F1C  15C2               	andwf	(sqrt@a+1)& (0+255),w,b
  7092  003F1E  0101               	movlb	1	; () banked
  7093  003F20  6F9D               	movwf	(sqrt@frac+1)& (0+255),b
  7094  003F22  0E7F               	movlw	127
  7095  003F24  0100               	movlb	0	; () banked
  7096  003F26  15C3               	andwf	(sqrt@a+2)& (0+255),w,b
  7097  003F28  0101               	movlb	1	; () banked
  7098  003F2A  6F9E               	movwf	(sqrt@frac+2)& (0+255),b
  7099  003F2C  0E00               	movlw	0
  7100  003F2E  0100               	movlb	0	; () banked
  7101  003F30  15C4               	andwf	(sqrt@a+3)& (0+255),w,b
  7102  003F32  0101               	movlb	1	; () banked
  7103  003F34  6F9F               	movwf	(sqrt@frac+3)& (0+255),b
  7104                           
  7105                           ; BSR set to: 1
  7106  003F36  0101               	movlb	1	; () banked
  7107  003F38  5196               	movf	sqrt@exp& (0+255),w,b
  7108  003F3A  0101               	movlb	1	; () banked
  7109  003F3C  1197               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7110  003F3E  B4D8               	btfsc	status,2,c
  7111  003F40  D008               	goto	l7414
  7112                           
  7113                           ; BSR set to: 1
  7114  003F42  0101               	movlb	1	; () banked
  7115  003F44  8F9E               	bsf	(sqrt@frac+2)& (0+255),7,b
  7116                           
  7117                           ; BSR set to: 1
  7118  003F46  0101               	movlb	1	; () banked
  7119  003F48  2996               	incf	sqrt@exp& (0+255),w,b
  7120  003F4A  0101               	movlb	1	; () banked
  7121  003F4C  1197               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7122  003F4E  A4D8               	btfss	status,2,c
  7123  003F50  D009               	goto	l7416
  7124  003F52                     l7414:
  7125                           
  7126                           ; BSR set to: 1
  7127  003F52  0E00               	movlw	0
  7128  003F54  0101               	movlb	1	; () banked
  7129  003F56  6F9C               	movwf	sqrt@frac& (0+255),b
  7130  003F58  0E00               	movlw	0
  7131  003F5A  6F9D               	movwf	(sqrt@frac+1)& (0+255),b
  7132  003F5C  0E00               	movlw	0
  7133  003F5E  6F9E               	movwf	(sqrt@frac+2)& (0+255),b
  7134  003F60  0E00               	movlw	0
  7135  003F62  6F9F               	movwf	(sqrt@frac+3)& (0+255),b
  7136  003F64                     l7416:
  7137                           
  7138                           ; BSR set to: 1
  7139  003F64  0101               	movlb	1	; () banked
  7140  003F66  5196               	movf	sqrt@exp& (0+255),w,b
  7141  003F68  0101               	movlb	1	; () banked
  7142  003F6A  1197               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7143  003F6C  A4D8               	btfss	status,2,c
  7144  003F6E  D00A               	goto	l7422
  7145                           
  7146                           ; BSR set to: 1
  7147  003F70  0E00               	movlw	0
  7148  003F72  0100               	movlb	0	; () banked
  7149  003F74  6FC1               	movwf	?_sqrt& (0+255),b
  7150  003F76  0E00               	movlw	0
  7151  003F78  6FC2               	movwf	(?_sqrt+1)& (0+255),b
  7152  003F7A  0E00               	movlw	0
  7153  003F7C  6FC3               	movwf	(?_sqrt+2)& (0+255),b
  7154  003F7E  0E00               	movlw	0
  7155  003F80  6FC4               	movwf	(?_sqrt+3)& (0+255),b
  7156                           
  7157                           ; BSR set to: 0
  7158  003F82  0012               	return	
  7159  003F84                     l7422:
  7160  003F84  0101               	movlb	1	; () banked
  7161  003F86  518B               	movf	sqrt@sign& (0+255),w,b
  7162  003F88  0101               	movlb	1	; () banked
  7163  003F8A  B4D8               	btfsc	status,2,c
  7164  003F8C  D01C               	goto	l7434
  7165                           
  7166                           ; BSR set to: 1
  7167  003F8E  0E00               	movlw	0
  7168  003F90  0101               	movlb	1	; () banked
  7169  003F92  6F98               	movwf	sqrt@root& (0+255),b
  7170  003F94  0E00               	movlw	0
  7171  003F96  6F99               	movwf	(sqrt@root+1)& (0+255),b
  7172  003F98  0E40               	movlw	64
  7173  003F9A  6F9A               	movwf	(sqrt@root+2)& (0+255),b
  7174  003F9C  0E00               	movlw	0
  7175  003F9E  6F9B               	movwf	(sqrt@root+3)& (0+255),b
  7176                           
  7177                           ; BSR set to: 1
  7178  003FA0  0101               	movlb	1	; () banked
  7179  003FA2  0E80               	movlw	128
  7180  003FA4  139A               	iorwf	(sqrt@root+2)& (0+255),f,b
  7181  003FA6  0EFF               	movlw	255
  7182  003FA8  139B               	iorwf	(sqrt@root+3)& (0+255),f,b
  7183                           
  7184                           ; BSR set to: 1
  7185  003FAA  0E00               	movlw	0
  7186  003FAC  0100               	movlb	0	; () banked
  7187  003FAE  6FE5               	movwf	(_errno+1)& (0+255),b
  7188  003FB0  0E21               	movlw	33
  7189  003FB2  6FE4               	movwf	_errno& (0+255),b
  7190                           
  7191                           ; BSR set to: 0
  7192  003FB4  C198  F0C1         	movff	sqrt@root,?_sqrt
  7193  003FB8  C199  F0C2         	movff	sqrt@root+1,?_sqrt+1
  7194  003FBC  C19A  F0C3         	movff	sqrt@root+2,?_sqrt+2
  7195  003FC0  C19B  F0C4         	movff	sqrt@root+3,?_sqrt+3
  7196                           
  7197                           ; BSR set to: 0
  7198  003FC4  0012               	return	
  7199  003FC6                     l7434:
  7200  003FC6  0101               	movlb	1	; () banked
  7201  003FC8  2996               	incf	sqrt@exp& (0+255),w,b
  7202  003FCA  0101               	movlb	1	; () banked
  7203  003FCC  1197               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7204  003FCE  A4D8               	btfss	status,2,c
  7205  003FD0  D012               	goto	l7442
  7206                           
  7207                           ; BSR set to: 1
  7208  003FD2  0E00               	movlw	0
  7209  003FD4  0101               	movlb	1	; () banked
  7210  003FD6  6F98               	movwf	sqrt@root& (0+255),b
  7211  003FD8  0E00               	movlw	0
  7212  003FDA  6F99               	movwf	(sqrt@root+1)& (0+255),b
  7213  003FDC  0E80               	movlw	128
  7214  003FDE  6F9A               	movwf	(sqrt@root+2)& (0+255),b
  7215  003FE0  0E7F               	movlw	127
  7216  003FE2  6F9B               	movwf	(sqrt@root+3)& (0+255),b
  7217                           
  7218                           ; BSR set to: 1
  7219  003FE4  C198  F0C1         	movff	sqrt@root,?_sqrt
  7220  003FE8  C199  F0C2         	movff	sqrt@root+1,?_sqrt+1
  7221  003FEC  C19A  F0C3         	movff	sqrt@root+2,?_sqrt+2
  7222  003FF0  C19B  F0C4         	movff	sqrt@root+3,?_sqrt+3
  7223                           
  7224                           ; BSR set to: 1
  7225  003FF4  0012               	return	
  7226  003FF6                     l7442:
  7227                           
  7228                           ; BSR set to: 1
  7229  003FF6  0101               	movlb	1	; () banked
  7230  003FF8  0E81               	movlw	129
  7231  003FFA  2796               	addwf	sqrt@exp& (0+255),f,b
  7232  003FFC  0EFF               	movlw	255
  7233  003FFE  2397               	addwfc	(sqrt@exp+1)& (0+255),f,b
  7234  004000  0101               	movlb	1	; () banked
  7235  004002  5196               	movf	sqrt@exp& (0+255),w,b
  7236  004004  0B01               	andlw	1
  7237  004006  0101               	movlb	1	; () banked
  7238  004008  6F91               	movwf	sqrt@p& (0+255),b
  7239  00400A  0101               	movlb	1	; () banked
  7240  00400C  3597               	rlcf	(sqrt@exp+1)& (0+255),w,b
  7241  00400E  3397               	rrcf	(sqrt@exp+1)& (0+255),f,b
  7242  004010  3396               	rrcf	sqrt@exp& (0+255),f,b
  7243  004012  0E7F               	movlw	127
  7244  004014  0101               	movlb	1	; () banked
  7245  004016  2796               	addwf	sqrt@exp& (0+255),f,b
  7246  004018  0E00               	movlw	0
  7247  00401A  2397               	addwfc	(sqrt@exp+1)& (0+255),f,b
  7248  00401C  90D8               	bcf	status,0,c
  7249  00401E  0101               	movlb	1	; () banked
  7250  004020  359C               	rlcf	sqrt@frac& (0+255),w,b
  7251  004022  0101               	movlb	1	; () banked
  7252  004024  6F8D               	movwf	sqrt@tfrac& (0+255),b
  7253  004026  0101               	movlb	1	; () banked
  7254  004028  359D               	rlcf	(sqrt@frac+1)& (0+255),w,b
  7255  00402A  0101               	movlb	1	; () banked
  7256  00402C  6F8E               	movwf	(sqrt@tfrac+1)& (0+255),b
  7257  00402E  0101               	movlb	1	; () banked
  7258  004030  359E               	rlcf	(sqrt@frac+2)& (0+255),w,b
  7259  004032  0101               	movlb	1	; () banked
  7260  004034  6F8F               	movwf	(sqrt@tfrac+2)& (0+255),b
  7261  004036  0101               	movlb	1	; () banked
  7262  004038  359F               	rlcf	(sqrt@frac+3)& (0+255),w,b
  7263  00403A  0101               	movlb	1	; () banked
  7264  00403C  6F90               	movwf	(sqrt@tfrac+3)& (0+255),b
  7265                           
  7266                           ; BSR set to: 1
  7267  00403E  0E00               	movlw	0
  7268  004040  0101               	movlb	1	; () banked
  7269  004042  6F9C               	movwf	sqrt@frac& (0+255),b
  7270  004044  0E00               	movlw	0
  7271  004046  6F9D               	movwf	(sqrt@frac+1)& (0+255),b
  7272  004048  0E00               	movlw	0
  7273  00404A  6F9E               	movwf	(sqrt@frac+2)& (0+255),b
  7274  00404C  0E00               	movlw	0
  7275  00404E  6F9F               	movwf	(sqrt@frac+3)& (0+255),b
  7276                           
  7277                           ; BSR set to: 1
  7278  004050  0E00               	movlw	0
  7279  004052  0101               	movlb	1	; () banked
  7280  004054  6F92               	movwf	sqrt@grs& (0+255),b
  7281  004056  0E00               	movlw	0
  7282  004058  6F93               	movwf	(sqrt@grs+1)& (0+255),b
  7283  00405A  0E00               	movlw	0
  7284  00405C  6F94               	movwf	(sqrt@grs+2)& (0+255),b
  7285  00405E  0E01               	movlw	1
  7286  004060  6F95               	movwf	(sqrt@grs+3)& (0+255),b
  7287                           
  7288                           ; BSR set to: 1
  7289  004062  0101               	movlb	1	; () banked
  7290  004064  5191               	movf	sqrt@p& (0+255),w,b
  7291  004066  0101               	movlb	1	; () banked
  7292  004068  B4D8               	btfsc	status,2,c
  7293  00406A  D006               	goto	l7452
  7294                           
  7295                           ; BSR set to: 1
  7296  00406C  0101               	movlb	1	; () banked
  7297  00406E  90D8               	bcf	status,0,c
  7298  004070  378D               	rlcf	sqrt@tfrac& (0+255),f,b
  7299  004072  378E               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  7300  004074  378F               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  7301  004076  3790               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  7302  004078                     l7452:
  7303                           
  7304                           ; BSR set to: 1
  7305  004078  0E00               	movlw	0
  7306  00407A  0101               	movlb	1	; () banked
  7307  00407C  6F8C               	movwf	sqrt@i& (0+255),b
  7308  00407E  D07E               	goto	l7466
  7309  004080                     l7454:
  7310                           
  7311                           ; BSR set to: 1
  7312  004080  0101               	movlb	1	; () banked
  7313  004082  5192               	movf	sqrt@grs& (0+255),w,b
  7314  004084  0101               	movlb	1	; () banked
  7315  004086  139C               	iorwf	sqrt@frac& (0+255),f,b
  7316  004088  0101               	movlb	1	; () banked
  7317  00408A  5193               	movf	(sqrt@grs+1)& (0+255),w,b
  7318  00408C  0101               	movlb	1	; () banked
  7319  00408E  139D               	iorwf	(sqrt@frac+1)& (0+255),f,b
  7320  004090  0101               	movlb	1	; () banked
  7321  004092  5194               	movf	(sqrt@grs+2)& (0+255),w,b
  7322  004094  0101               	movlb	1	; () banked
  7323  004096  139E               	iorwf	(sqrt@frac+2)& (0+255),f,b
  7324  004098  0101               	movlb	1	; () banked
  7325  00409A  5195               	movf	(sqrt@grs+3)& (0+255),w,b
  7326  00409C  0101               	movlb	1	; () banked
  7327  00409E  139F               	iorwf	(sqrt@frac+3)& (0+255),f,b
  7328  0040A0  0101               	movlb	1	; () banked
  7329  0040A2  519C               	movf	sqrt@frac& (0+255),w,b
  7330  0040A4  0101               	movlb	1	; () banked
  7331  0040A6  5D8D               	subwf	sqrt@tfrac& (0+255),w,b
  7332  0040A8  0101               	movlb	1	; () banked
  7333  0040AA  519D               	movf	(sqrt@frac+1)& (0+255),w,b
  7334  0040AC  0101               	movlb	1	; () banked
  7335  0040AE  598E               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
  7336  0040B0  0101               	movlb	1	; () banked
  7337  0040B2  519E               	movf	(sqrt@frac+2)& (0+255),w,b
  7338  0040B4  0101               	movlb	1	; () banked
  7339  0040B6  598F               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
  7340  0040B8  0101               	movlb	1	; () banked
  7341  0040BA  519F               	movf	(sqrt@frac+3)& (0+255),w,b
  7342  0040BC  0101               	movlb	1	; () banked
  7343  0040BE  5990               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
  7344  0040C0  A0D8               	btfss	status,0,c
  7345  0040C2  D021               	goto	l7458
  7346                           
  7347                           ; BSR set to: 1
  7348  0040C4  0101               	movlb	1	; () banked
  7349  0040C6  519C               	movf	sqrt@frac& (0+255),w,b
  7350  0040C8  0101               	movlb	1	; () banked
  7351  0040CA  5F8D               	subwf	sqrt@tfrac& (0+255),f,b
  7352  0040CC  0101               	movlb	1	; () banked
  7353  0040CE  519D               	movf	(sqrt@frac+1)& (0+255),w,b
  7354  0040D0  0101               	movlb	1	; () banked
  7355  0040D2  5B8E               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
  7356  0040D4  0101               	movlb	1	; () banked
  7357  0040D6  519E               	movf	(sqrt@frac+2)& (0+255),w,b
  7358  0040D8  0101               	movlb	1	; () banked
  7359  0040DA  5B8F               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
  7360  0040DC  0101               	movlb	1	; () banked
  7361  0040DE  519F               	movf	(sqrt@frac+3)& (0+255),w,b
  7362  0040E0  0101               	movlb	1	; () banked
  7363  0040E2  5B90               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
  7364  0040E4  0101               	movlb	1	; () banked
  7365  0040E6  5192               	movf	sqrt@grs& (0+255),w,b
  7366  0040E8  0101               	movlb	1	; () banked
  7367  0040EA  279C               	addwf	sqrt@frac& (0+255),f,b
  7368  0040EC  0101               	movlb	1	; () banked
  7369  0040EE  5193               	movf	(sqrt@grs+1)& (0+255),w,b
  7370  0040F0  0101               	movlb	1	; () banked
  7371  0040F2  239D               	addwfc	(sqrt@frac+1)& (0+255),f,b
  7372  0040F4  0101               	movlb	1	; () banked
  7373  0040F6  5194               	movf	(sqrt@grs+2)& (0+255),w,b
  7374  0040F8  0101               	movlb	1	; () banked
  7375  0040FA  239E               	addwfc	(sqrt@frac+2)& (0+255),f,b
  7376  0040FC  0101               	movlb	1	; () banked
  7377  0040FE  5195               	movf	(sqrt@grs+3)& (0+255),w,b
  7378  004100  0101               	movlb	1	; () banked
  7379  004102  239F               	addwfc	(sqrt@frac+3)& (0+255),f,b
  7380  004104  D01D               	goto	l7460
  7381  004106                     l7458:
  7382                           
  7383                           ; BSR set to: 1
  7384  004106  C192  F0C5         	movff	sqrt@grs,??_sqrt
  7385  00410A  C193  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  7386  00410E  C194  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  7387  004112  C195  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  7388  004116  0100               	movlb	0	; () banked
  7389  004118  1FC5               	comf	??_sqrt& (0+255),f,b
  7390  00411A  1FC6               	comf	(??_sqrt+1)& (0+255),f,b
  7391  00411C  1FC7               	comf	(??_sqrt+2)& (0+255),f,b
  7392  00411E  1FC8               	comf	(??_sqrt+3)& (0+255),f,b
  7393  004120  0100               	movlb	0	; () banked
  7394  004122  51C5               	movf	??_sqrt& (0+255),w,b
  7395  004124  0101               	movlb	1	; () banked
  7396  004126  179C               	andwf	sqrt@frac& (0+255),f,b
  7397  004128  0100               	movlb	0	; () banked
  7398  00412A  51C6               	movf	(??_sqrt+1)& (0+255),w,b
  7399  00412C  0101               	movlb	1	; () banked
  7400  00412E  179D               	andwf	(sqrt@frac+1)& (0+255),f,b
  7401  004130  0100               	movlb	0	; () banked
  7402  004132  51C7               	movf	(??_sqrt+2)& (0+255),w,b
  7403  004134  0101               	movlb	1	; () banked
  7404  004136  179E               	andwf	(sqrt@frac+2)& (0+255),f,b
  7405  004138  0100               	movlb	0	; () banked
  7406  00413A  51C8               	movf	(??_sqrt+3)& (0+255),w,b
  7407  00413C  0101               	movlb	1	; () banked
  7408  00413E  179F               	andwf	(sqrt@frac+3)& (0+255),f,b
  7409  004140                     l7460:
  7410                           
  7411                           ; BSR set to: 1
  7412  004140  C192  F0C5         	movff	sqrt@grs,??_sqrt
  7413  004144  C193  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  7414  004148  C194  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  7415  00414C  C195  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  7416  004150  0100               	movlb	0	; () banked
  7417  004152  90D8               	bcf	status,0,c
  7418  004154  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7419  004156  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7420  004158  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7421  00415A  33C5               	rrcf	??_sqrt& (0+255),f,b
  7422  00415C  C0C5  F192         	movff	??_sqrt,sqrt@grs
  7423  004160  C0C6  F193         	movff	??_sqrt+1,sqrt@grs+1
  7424  004164  C0C7  F194         	movff	??_sqrt+2,sqrt@grs+2
  7425  004168  C0C8  F195         	movff	??_sqrt+3,sqrt@grs+3
  7426                           
  7427                           ; BSR set to: 0
  7428  00416C  0101               	movlb	1	; () banked
  7429  00416E  90D8               	bcf	status,0,c
  7430  004170  378D               	rlcf	sqrt@tfrac& (0+255),f,b
  7431  004172  378E               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  7432  004174  378F               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  7433  004176  3790               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  7434                           
  7435                           ; BSR set to: 1
  7436  004178  0101               	movlb	1	; () banked
  7437  00417A  2B8C               	incf	sqrt@i& (0+255),f,b
  7438  00417C                     l7466:
  7439                           
  7440                           ; BSR set to: 1
  7441  00417C  0E18               	movlw	24
  7442  00417E  0101               	movlb	1	; () banked
  7443  004180  658C               	cpfsgt	sqrt@i& (0+255),b
  7444  004182  D77E               	goto	l7454
  7445                           
  7446                           ; BSR set to: 1
  7447                           
  7448                           ; BSR set to: 1
  7449  004184  C19C  F0C5         	movff	sqrt@frac,??_sqrt
  7450  004188  C19D  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7451  00418C  C19E  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7452  004190  C19F  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7453  004194  0100               	movlb	0	; () banked
  7454  004196  90D8               	bcf	status,0,c
  7455  004198  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7456  00419A  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7457  00419C  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7458  00419E  33C5               	rrcf	??_sqrt& (0+255),f,b
  7459  0041A0  C0C5  F19C         	movff	??_sqrt,sqrt@frac
  7460  0041A4  C0C6  F19D         	movff	??_sqrt+1,sqrt@frac+1
  7461  0041A8  C0C7  F19E         	movff	??_sqrt+2,sqrt@frac+2
  7462  0041AC  C0C8  F19F         	movff	??_sqrt+3,sqrt@frac+3
  7463                           
  7464                           ; BSR set to: 0
  7465  0041B0  0E01               	movlw	1
  7466  0041B2  0101               	movlb	1	; () banked
  7467  0041B4  159C               	andwf	sqrt@frac& (0+255),w,b
  7468  0041B6  0101               	movlb	1	; () banked
  7469  0041B8  6F92               	movwf	sqrt@grs& (0+255),b
  7470  0041BA  0E00               	movlw	0
  7471  0041BC  0101               	movlb	1	; () banked
  7472  0041BE  159D               	andwf	(sqrt@frac+1)& (0+255),w,b
  7473  0041C0  0101               	movlb	1	; () banked
  7474  0041C2  6F93               	movwf	(sqrt@grs+1)& (0+255),b
  7475  0041C4  0E00               	movlw	0
  7476  0041C6  0101               	movlb	1	; () banked
  7477  0041C8  159E               	andwf	(sqrt@frac+2)& (0+255),w,b
  7478  0041CA  0101               	movlb	1	; () banked
  7479  0041CC  6F94               	movwf	(sqrt@grs+2)& (0+255),b
  7480  0041CE  0E00               	movlw	0
  7481  0041D0  0101               	movlb	1	; () banked
  7482  0041D2  159F               	andwf	(sqrt@frac+3)& (0+255),w,b
  7483  0041D4  0101               	movlb	1	; () banked
  7484  0041D6  6F95               	movwf	(sqrt@grs+3)& (0+255),b
  7485                           
  7486                           ; BSR set to: 1
  7487  0041D8  C19C  F0C5         	movff	sqrt@frac,??_sqrt
  7488  0041DC  C19D  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7489  0041E0  C19E  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7490  0041E4  C19F  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7491  0041E8  0100               	movlb	0	; () banked
  7492  0041EA  90D8               	bcf	status,0,c
  7493  0041EC  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7494  0041EE  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7495  0041F0  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7496  0041F2  33C5               	rrcf	??_sqrt& (0+255),f,b
  7497  0041F4  C0C5  F19C         	movff	??_sqrt,sqrt@frac
  7498  0041F8  C0C6  F19D         	movff	??_sqrt+1,sqrt@frac+1
  7499  0041FC  C0C7  F19E         	movff	??_sqrt+2,sqrt@frac+2
  7500  004200  C0C8  F19F         	movff	??_sqrt+3,sqrt@frac+3
  7501  004204  0101               	movlb	1	; () banked
  7502  004206  5192               	movf	sqrt@grs& (0+255),w,b
  7503  004208  0101               	movlb	1	; () banked
  7504  00420A  279C               	addwf	sqrt@frac& (0+255),f,b
  7505  00420C  0101               	movlb	1	; () banked
  7506  00420E  5193               	movf	(sqrt@grs+1)& (0+255),w,b
  7507  004210  0101               	movlb	1	; () banked
  7508  004212  239D               	addwfc	(sqrt@frac+1)& (0+255),f,b
  7509  004214  0101               	movlb	1	; () banked
  7510  004216  5194               	movf	(sqrt@grs+2)& (0+255),w,b
  7511  004218  0101               	movlb	1	; () banked
  7512  00421A  239E               	addwfc	(sqrt@frac+2)& (0+255),f,b
  7513  00421C  0101               	movlb	1	; () banked
  7514  00421E  5195               	movf	(sqrt@grs+3)& (0+255),w,b
  7515  004220  0101               	movlb	1	; () banked
  7516  004222  239F               	addwfc	(sqrt@frac+3)& (0+255),f,b
  7517                           
  7518                           ; BSR set to: 1
  7519  004224  0101               	movlb	1	; () banked
  7520  004226  A19F               	btfss	(sqrt@frac+3)& (0+255),0,b
  7521  004228  D019               	goto	l7478
  7522                           
  7523                           ; BSR set to: 1
  7524  00422A  C19C  F0C5         	movff	sqrt@frac,??_sqrt
  7525  00422E  C19D  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7526  004232  C19E  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7527  004236  C19F  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7528  00423A  0100               	movlb	0	; () banked
  7529  00423C  90D8               	bcf	status,0,c
  7530  00423E  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7531  004240  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7532  004242  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7533  004244  33C5               	rrcf	??_sqrt& (0+255),f,b
  7534  004246  C0C5  F19C         	movff	??_sqrt,sqrt@frac
  7535  00424A  C0C6  F19D         	movff	??_sqrt+1,sqrt@frac+1
  7536  00424E  C0C7  F19E         	movff	??_sqrt+2,sqrt@frac+2
  7537  004252  C0C8  F19F         	movff	??_sqrt+3,sqrt@frac+3
  7538  004256  0101               	movlb	1	; () banked
  7539  004258  4B96               	infsnz	sqrt@exp& (0+255),f,b
  7540  00425A  2B97               	incf	(sqrt@exp+1)& (0+255),f,b
  7541  00425C                     l7478:
  7542                           
  7543                           ; BSR set to: 1
  7544  00425C  0EFF               	movlw	255
  7545  00425E  0101               	movlb	1	; () banked
  7546  004260  159C               	andwf	sqrt@frac& (0+255),w,b
  7547  004262  0101               	movlb	1	; () banked
  7548  004264  6F98               	movwf	sqrt@root& (0+255),b
  7549  004266  0EFF               	movlw	255
  7550  004268  0101               	movlb	1	; () banked
  7551  00426A  159D               	andwf	(sqrt@frac+1)& (0+255),w,b
  7552  00426C  0101               	movlb	1	; () banked
  7553  00426E  6F99               	movwf	(sqrt@root+1)& (0+255),b
  7554  004270  0E7F               	movlw	127
  7555  004272  0101               	movlb	1	; () banked
  7556  004274  159E               	andwf	(sqrt@frac+2)& (0+255),w,b
  7557  004276  0101               	movlb	1	; () banked
  7558  004278  6F9A               	movwf	(sqrt@root+2)& (0+255),b
  7559  00427A  0E00               	movlw	0
  7560  00427C  0101               	movlb	1	; () banked
  7561  00427E  159F               	andwf	(sqrt@frac+3)& (0+255),w,b
  7562  004280  0101               	movlb	1	; () banked
  7563  004282  6F9B               	movwf	(sqrt@root+3)& (0+255),b
  7564                           
  7565                           ; BSR set to: 1
  7566  004284  C196  F191         	movff	sqrt@exp,sqrt@p
  7567                           
  7568                           ; BSR set to: 1
  7569  004288  0101               	movlb	1	; () banked
  7570  00428A  A191               	btfss	sqrt@p& (0+255),0,b
  7571  00428C  D002               	goto	l7486
  7572                           
  7573                           ; BSR set to: 1
  7574  00428E  0101               	movlb	1	; () banked
  7575  004290  8F9A               	bsf	(sqrt@root+2)& (0+255),7,b
  7576  004292                     l7486:
  7577                           
  7578                           ; BSR set to: 1
  7579  004292  0101               	movlb	1	; () banked
  7580  004294  90D8               	bcf	status,0,c
  7581  004296  3191               	rrcf	sqrt@p& (0+255),w,b
  7582  004298  0101               	movlb	1	; () banked
  7583  00429A  6F9B               	movwf	(sqrt@root+3)& (0+255),b
  7584                           
  7585                           ; BSR set to: 1
  7586  00429C  0101               	movlb	1	; () banked
  7587  00429E  9F9B               	bcf	(sqrt@root+3)& (0+255),7,b
  7588                           
  7589                           ; BSR set to: 1
  7590  0042A0  C198  F0C1         	movff	sqrt@root,?_sqrt
  7591  0042A4  C199  F0C2         	movff	sqrt@root+1,?_sqrt+1
  7592  0042A8  C19A  F0C3         	movff	sqrt@root+2,?_sqrt+2
  7593  0042AC  C19B  F0C4         	movff	sqrt@root+3,?_sqrt+3
  7594  0042B0  0012               	return	
  7595  0042B2                     __end_of_sqrt:
  7596                           	opt stack 0
  7597                           tblptru	equ	0xFF8
  7598                           tblptrh	equ	0xFF7
  7599                           tblptrl	equ	0xFF6
  7600                           tablat	equ	0xFF5
  7601                           postinc0	equ	0xFEE
  7602                           wreg	equ	0xFE8
  7603                           postdec1	equ	0xFE5
  7604                           fsr1l	equ	0xFE1
  7605                           indf2	equ	0xFDF
  7606                           postinc2	equ	0xFDE
  7607                           postdec2	equ	0xFDD
  7608                           fsr2h	equ	0xFDA
  7609                           fsr2l	equ	0xFD9
  7610                           status	equ	0xFD8
  7611                           
  7612 ;; *************** function _atan *****************
  7613 ;; Defined at:
  7614 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atan.c"
  7615 ;; Parameters:    Size  Location     Type
  7616 ;;  f               4  113[BANK0 ] unsigned char 
  7617 ;; Auto vars:     Size  Location     Type
  7618 ;;  val             4   13[BANK1 ] unsigned char 
  7619 ;;  val_squared     4    9[BANK1 ] unsigned char 
  7620 ;;  x               4    4[BANK1 ] unsigned char 
  7621 ;;  y               4    0[BANK1 ] unsigned char 
  7622 ;;  recip           1    8[BANK1 ] unsigned char 
  7623 ;; Return value:  Size  Location     Type
  7624 ;;                  4  113[BANK0 ] unsigned char 
  7625 ;; Registers used:
  7626 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7627 ;; Tracked objects:
  7628 ;;		On entry : 0/0
  7629 ;;		On exit  : 0/0
  7630 ;;		Unchanged: 0/0
  7631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7632 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7633 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  7634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7635 ;;      Totals:         0       4      17       0       0       0       0       0       0       0       0       0       
      +0       0
  7636 ;;Total ram usage:       21 bytes
  7637 ;; Hardware stack levels used:    1
  7638 ;; Hardware stack levels required when called:    6
  7639 ;; This function calls:
  7640 ;;		___fladd
  7641 ;;		___fldiv
  7642 ;;		___flge
  7643 ;;		___flmul
  7644 ;;		___flneg
  7645 ;;		_eval_poly
  7646 ;;		_fabs
  7647 ;; This function is called by:
  7648 ;;		_asin
  7649 ;; This function uses a non-reentrant model
  7650 ;;
  7651                           
  7652                           	psect	text18
  7653  0052A4                     __ptext18:
  7654                           	opt stack 0
  7655  0052A4                     _atan:
  7656                           	opt stack 21
  7657                           
  7658                           ;incstack = 0
  7659  0052A4  C0D1  F0C1         	movff	atan@f,fabs@d
  7660  0052A8  C0D2  F0C2         	movff	atan@f+1,fabs@d+1
  7661  0052AC  C0D3  F0C3         	movff	atan@f+2,fabs@d+2
  7662  0052B0  C0D4  F0C4         	movff	atan@f+3,fabs@d+3
  7663  0052B4  ECA2  F032         	call	_fabs	;wreg free
  7664  0052B8  C0C1  F198         	movff	?_fabs,atan@val
  7665  0052BC  C0C2  F199         	movff	?_fabs+1,atan@val+1
  7666  0052C0  C0C3  F19A         	movff	?_fabs+2,atan@val+2
  7667  0052C4  C0C4  F19B         	movff	?_fabs+3,atan@val+3
  7668  0052C8  0101               	movlb	1	; () banked
  7669  0052CA  5198               	movf	atan@val& (0+255),w,b
  7670  0052CC  0101               	movlb	1	; () banked
  7671  0052CE  1199               	iorwf	(atan@val+1)& (0+255),w,b
  7672  0052D0  0101               	movlb	1	; () banked
  7673  0052D2  119A               	iorwf	(atan@val+2)& (0+255),w,b
  7674  0052D4  0101               	movlb	1	; () banked
  7675  0052D6  119B               	iorwf	(atan@val+3)& (0+255),w,b
  7676  0052D8  A4D8               	btfss	status,2,c
  7677  0052DA  D00A               	goto	l7506
  7678                           
  7679                           ; BSR set to: 1
  7680  0052DC  0E00               	movlw	0
  7681  0052DE  0100               	movlb	0	; () banked
  7682  0052E0  6FD1               	movwf	?_atan& (0+255),b
  7683  0052E2  0E00               	movlw	0
  7684  0052E4  6FD2               	movwf	(?_atan+1)& (0+255),b
  7685  0052E6  0E00               	movlw	0
  7686  0052E8  6FD3               	movwf	(?_atan+2)& (0+255),b
  7687  0052EA  0E00               	movlw	0
  7688  0052EC  6FD4               	movwf	(?_atan+3)& (0+255),b
  7689                           
  7690                           ; BSR set to: 0
  7691  0052EE  0012               	return	
  7692  0052F0                     l7506:
  7693  0052F0  0E00               	movlw	0
  7694  0052F2  0100               	movlb	0	; () banked
  7695  0052F4  6FC5               	movwf	___flge@ff1& (0+255),b
  7696  0052F6  0E00               	movlw	0
  7697  0052F8  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  7698  0052FA  0E80               	movlw	128
  7699  0052FC  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  7700  0052FE  0E3F               	movlw	63
  7701  005300  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  7702  005302  C198  F0C9         	movff	atan@val,___flge@ff2
  7703  005306  C199  F0CA         	movff	atan@val+1,___flge@ff2+1
  7704  00530A  C19A  F0CB         	movff	atan@val+2,___flge@ff2+2
  7705  00530E  C19B  F0CC         	movff	atan@val+3,___flge@ff2+3
  7706  005312  EC28  F02D         	call	___flge	;wreg free
  7707  005316  0100               	movlb	0	; () banked
  7708  005318  B0D8               	btfsc	status,0,c
  7709  00531A  D002               	goto	u9940
  7710  00531C  0E01               	movlw	1
  7711  00531E  D001               	goto	u9950
  7712  005320                     u9940:
  7713  005320  0E00               	movlw	0
  7714  005322                     u9950:
  7715  005322  0101               	movlb	1	; () banked
  7716  005324  6F93               	movwf	atan@recip& (0+255),b
  7717  005326  0101               	movlb	1	; () banked
  7718  005328  5193               	movf	atan@recip& (0+255),w,b
  7719  00532A  B4D8               	btfsc	status,2,c
  7720  00532C  D01B               	goto	l7510
  7721                           
  7722                           ; BSR set to: 1
  7723  00532E  0E00               	movlw	0
  7724  005330  0100               	movlb	0	; () banked
  7725  005332  6F77               	movwf	___fldiv@b& (0+255),b
  7726  005334  0E00               	movlw	0
  7727  005336  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  7728  005338  0E80               	movlw	128
  7729  00533A  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  7730  00533C  0E3F               	movlw	63
  7731  00533E  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  7732  005340  C198  F07B         	movff	atan@val,___fldiv@a
  7733  005344  C199  F07C         	movff	atan@val+1,___fldiv@a+1
  7734  005348  C19A  F07D         	movff	atan@val+2,___fldiv@a+2
  7735  00534C  C19B  F07E         	movff	atan@val+3,___fldiv@a+3
  7736  005350  EC59  F021         	call	___fldiv	;wreg free
  7737  005354  C077  F198         	movff	?___fldiv,atan@val
  7738  005358  C078  F199         	movff	?___fldiv+1,atan@val+1
  7739  00535C  C079  F19A         	movff	?___fldiv+2,atan@val+2
  7740  005360  C07A  F19B         	movff	?___fldiv+3,atan@val+3
  7741  005364                     l7510:
  7742  005364  C198  F090         	movff	atan@val,___flmul@b
  7743  005368  C199  F091         	movff	atan@val+1,___flmul@b+1
  7744  00536C  C19A  F092         	movff	atan@val+2,___flmul@b+2
  7745  005370  C19B  F093         	movff	atan@val+3,___flmul@b+3
  7746  005374  C198  F094         	movff	atan@val,___flmul@a
  7747  005378  C199  F095         	movff	atan@val+1,___flmul@a+1
  7748  00537C  C19A  F096         	movff	atan@val+2,___flmul@a+2
  7749  005380  C19B  F097         	movff	atan@val+3,___flmul@a+3
  7750  005384  ECD9  F01A         	call	___flmul	;wreg free
  7751  005388  C090  F194         	movff	?___flmul,atan@val_squared
  7752  00538C  C091  F195         	movff	?___flmul+1,atan@val_squared+1
  7753  005390  C092  F196         	movff	?___flmul+2,atan@val_squared+2
  7754  005394  C093  F197         	movff	?___flmul+3,atan@val_squared+3
  7755  005398  C194  F0BD         	movff	atan@val_squared,eval_poly@x
  7756  00539C  C195  F0BE         	movff	atan@val_squared+1,eval_poly@x+1
  7757  0053A0  C196  F0BF         	movff	atan@val_squared+2,eval_poly@x+2
  7758  0053A4  C197  F0C0         	movff	atan@val_squared+3,eval_poly@x+3
  7759  0053A8  0E19               	movlw	low atan@coeff_b
  7760  0053AA  0100               	movlb	0	; () banked
  7761  0053AC  6FC1               	movwf	eval_poly@d& (0+255),b
  7762  0053AE  0E0D               	movlw	high atan@coeff_b
  7763  0053B0  0100               	movlb	0	; () banked
  7764  0053B2  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  7765  0053B4  0E00               	movlw	0
  7766  0053B6  0100               	movlb	0	; () banked
  7767  0053B8  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  7768  0053BA  0E04               	movlw	4
  7769  0053BC  6FC3               	movwf	eval_poly@n& (0+255),b
  7770  0053BE  EC82  F02E         	call	_eval_poly	;wreg free
  7771  0053C2  C0BD  F18B         	movff	?_eval_poly,atan@y
  7772  0053C6  C0BE  F18C         	movff	?_eval_poly+1,atan@y+1
  7773  0053CA  C0BF  F18D         	movff	?_eval_poly+2,atan@y+2
  7774  0053CE  C0C0  F18E         	movff	?_eval_poly+3,atan@y+3
  7775  0053D2  C194  F0BD         	movff	atan@val_squared,eval_poly@x
  7776  0053D6  C195  F0BE         	movff	atan@val_squared+1,eval_poly@x+1
  7777  0053DA  C196  F0BF         	movff	atan@val_squared+2,eval_poly@x+2
  7778  0053DE  C197  F0C0         	movff	atan@val_squared+3,eval_poly@x+3
  7779  0053E2  0E01               	movlw	low atan@coeff_a
  7780  0053E4  0100               	movlb	0	; () banked
  7781  0053E6  6FC1               	movwf	eval_poly@d& (0+255),b
  7782  0053E8  0E0D               	movlw	high atan@coeff_a
  7783  0053EA  0100               	movlb	0	; () banked
  7784  0053EC  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  7785  0053EE  0E00               	movlw	0
  7786  0053F0  0100               	movlb	0	; () banked
  7787  0053F2  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  7788  0053F4  0E05               	movlw	5
  7789  0053F6  6FC3               	movwf	eval_poly@n& (0+255),b
  7790  0053F8  EC82  F02E         	call	_eval_poly	;wreg free
  7791  0053FC  C0BD  F18F         	movff	?_eval_poly,atan@x
  7792  005400  C0BE  F190         	movff	?_eval_poly+1,atan@x+1
  7793  005404  C0BF  F191         	movff	?_eval_poly+2,atan@x+2
  7794  005408  C0C0  F192         	movff	?_eval_poly+3,atan@x+3
  7795  00540C  C198  F090         	movff	atan@val,___flmul@b
  7796  005410  C199  F091         	movff	atan@val+1,___flmul@b+1
  7797  005414  C19A  F092         	movff	atan@val+2,___flmul@b+2
  7798  005418  C19B  F093         	movff	atan@val+3,___flmul@b+3
  7799  00541C  C18B  F07B         	movff	atan@y,___fldiv@a
  7800  005420  C18C  F07C         	movff	atan@y+1,___fldiv@a+1
  7801  005424  C18D  F07D         	movff	atan@y+2,___fldiv@a+2
  7802  005428  C18E  F07E         	movff	atan@y+3,___fldiv@a+3
  7803  00542C  C18F  F077         	movff	atan@x,___fldiv@b
  7804  005430  C190  F078         	movff	atan@x+1,___fldiv@b+1
  7805  005434  C191  F079         	movff	atan@x+2,___fldiv@b+2
  7806  005438  C192  F07A         	movff	atan@x+3,___fldiv@b+3
  7807  00543C  EC59  F021         	call	___fldiv	;wreg free
  7808  005440  C077  F094         	movff	?___fldiv,___flmul@a
  7809  005444  C078  F095         	movff	?___fldiv+1,___flmul@a+1
  7810  005448  C079  F096         	movff	?___fldiv+2,___flmul@a+2
  7811  00544C  C07A  F097         	movff	?___fldiv+3,___flmul@a+3
  7812  005450  ECD9  F01A         	call	___flmul	;wreg free
  7813  005454  C090  F198         	movff	?___flmul,atan@val
  7814  005458  C091  F199         	movff	?___flmul+1,atan@val+1
  7815  00545C  C092  F19A         	movff	?___flmul+2,atan@val+2
  7816  005460  C093  F19B         	movff	?___flmul+3,atan@val+3
  7817  005464  0101               	movlb	1	; () banked
  7818  005466  5193               	movf	atan@recip& (0+255),w,b
  7819  005468  0101               	movlb	1	; () banked
  7820  00546A  B4D8               	btfsc	status,2,c
  7821  00546C  D025               	goto	l7522
  7822                           
  7823                           ; BSR set to: 1
  7824  00546E  C198  F0BD         	movff	atan@val,___flneg@f1
  7825  005472  C199  F0BE         	movff	atan@val+1,___flneg@f1+1
  7826  005476  C19A  F0BF         	movff	atan@val+2,___flneg@f1+2
  7827  00547A  C19B  F0C0         	movff	atan@val+3,___flneg@f1+3
  7828  00547E  ECDE  F032         	call	___flneg	;wreg free
  7829  005482  C0BD  F0A9         	movff	?___flneg,___fladd@b
  7830  005486  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  7831  00548A  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  7832  00548E  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  7833  005492  0EDB               	movlw	219
  7834  005494  0100               	movlb	0	; () banked
  7835  005496  6FAD               	movwf	___fladd@a& (0+255),b
  7836  005498  0E0F               	movlw	15
  7837  00549A  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  7838  00549C  0EC9               	movlw	201
  7839  00549E  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  7840  0054A0  0E3F               	movlw	63
  7841  0054A2  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  7842  0054A4  EC85  F018         	call	___fladd	;wreg free
  7843  0054A8  C0A9  F198         	movff	?___fladd,atan@val
  7844  0054AC  C0AA  F199         	movff	?___fladd+1,atan@val+1
  7845  0054B0  C0AB  F19A         	movff	?___fladd+2,atan@val+2
  7846  0054B4  C0AC  F19B         	movff	?___fladd+3,atan@val+3
  7847  0054B8                     l7522:
  7848  0054B8  0100               	movlb	0	; () banked
  7849  0054BA  BFD4               	btfsc	(atan@f+3)& (0+255),7,b
  7850  0054BC  D009               	goto	l7526
  7851                           
  7852                           ; BSR set to: 0
  7853  0054BE  C198  F0D1         	movff	atan@val,?_atan
  7854  0054C2  C199  F0D2         	movff	atan@val+1,?_atan+1
  7855  0054C6  C19A  F0D3         	movff	atan@val+2,?_atan+2
  7856  0054CA  C19B  F0D4         	movff	atan@val+3,?_atan+3
  7857  0054CE  0012               	return	
  7858  0054D0                     l7526:
  7859                           
  7860                           ; BSR set to: 0
  7861  0054D0  C198  F0BD         	movff	atan@val,___flneg@f1
  7862  0054D4  C199  F0BE         	movff	atan@val+1,___flneg@f1+1
  7863  0054D8  C19A  F0BF         	movff	atan@val+2,___flneg@f1+2
  7864  0054DC  C19B  F0C0         	movff	atan@val+3,___flneg@f1+3
  7865  0054E0  ECDE  F032         	call	___flneg	;wreg free
  7866  0054E4  C0BD  F0D1         	movff	?___flneg,?_atan
  7867  0054E8  C0BE  F0D2         	movff	?___flneg+1,?_atan+1
  7868  0054EC  C0BF  F0D3         	movff	?___flneg+2,?_atan+2
  7869  0054F0  C0C0  F0D4         	movff	?___flneg+3,?_atan+3
  7870  0054F4  0012               	return	
  7871  0054F6                     __end_of_atan:
  7872                           	opt stack 0
  7873                           tblptru	equ	0xFF8
  7874                           tblptrh	equ	0xFF7
  7875                           tblptrl	equ	0xFF6
  7876                           tablat	equ	0xFF5
  7877                           postinc0	equ	0xFEE
  7878                           wreg	equ	0xFE8
  7879                           postdec1	equ	0xFE5
  7880                           fsr1l	equ	0xFE1
  7881                           indf2	equ	0xFDF
  7882                           postinc2	equ	0xFDE
  7883                           postdec2	equ	0xFDD
  7884                           fsr2h	equ	0xFDA
  7885                           fsr2l	equ	0xFD9
  7886                           status	equ	0xFD8
  7887                           
  7888 ;; *************** function _fabs *****************
  7889 ;; Defined at:
  7890 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fabs.c"
  7891 ;; Parameters:    Size  Location     Type
  7892 ;;  d               4   97[BANK0 ] unsigned char 
  7893 ;; Auto vars:     Size  Location     Type
  7894 ;;		None
  7895 ;; Return value:  Size  Location     Type
  7896 ;;                  4   97[BANK0 ] unsigned char 
  7897 ;; Registers used:
  7898 ;;		wreg, status,2, status,0, cstack
  7899 ;; Tracked objects:
  7900 ;;		On entry : 0/0
  7901 ;;		On exit  : 0/0
  7902 ;;		Unchanged: 0/0
  7903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7904 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7907 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7908 ;;Total ram usage:        4 bytes
  7909 ;; Hardware stack levels used:    1
  7910 ;; Hardware stack levels required when called:    5
  7911 ;; This function calls:
  7912 ;;		___flneg
  7913 ;; This function is called by:
  7914 ;;		_asin
  7915 ;;		_atan
  7916 ;; This function uses a non-reentrant model
  7917 ;;
  7918                           
  7919                           	psect	text19
  7920  006544                     __ptext19:
  7921                           	opt stack 0
  7922  006544                     _fabs:
  7923                           	opt stack 22
  7924                           
  7925                           ;incstack = 0
  7926  006544  0100               	movlb	0	; () banked
  7927  006546  AFC4               	btfss	(fabs@d+3)& (0+255),7,b
  7928  006548  D013               	goto	l1096
  7929                           
  7930                           ; BSR set to: 0
  7931  00654A  C0C1  F0BD         	movff	fabs@d,___flneg@f1
  7932  00654E  C0C2  F0BE         	movff	fabs@d+1,___flneg@f1+1
  7933  006552  C0C3  F0BF         	movff	fabs@d+2,___flneg@f1+2
  7934  006556  C0C4  F0C0         	movff	fabs@d+3,___flneg@f1+3
  7935  00655A  ECDE  F032         	call	___flneg	;wreg free
  7936  00655E  C0BD  F0C1         	movff	?___flneg,?_fabs
  7937  006562  C0BE  F0C2         	movff	?___flneg+1,?_fabs+1
  7938  006566  C0BF  F0C3         	movff	?___flneg+2,?_fabs+2
  7939  00656A  C0C0  F0C4         	movff	?___flneg+3,?_fabs+3
  7940  00656E  0012               	return	
  7941  006570                     l1096:
  7942                           
  7943                           ; BSR set to: 0
  7944  006570  C0C1  F0C1         	movff	fabs@d,?_fabs
  7945  006574  C0C2  F0C2         	movff	fabs@d+1,?_fabs+1
  7946  006578  C0C3  F0C3         	movff	fabs@d+2,?_fabs+2
  7947  00657C  C0C4  F0C4         	movff	fabs@d+3,?_fabs+3
  7948  006580  0012               	return		;funcret
  7949  006582                     __end_of_fabs:
  7950                           	opt stack 0
  7951                           tblptru	equ	0xFF8
  7952                           tblptrh	equ	0xFF7
  7953                           tblptrl	equ	0xFF6
  7954                           tablat	equ	0xFF5
  7955                           postinc0	equ	0xFEE
  7956                           wreg	equ	0xFE8
  7957                           postdec1	equ	0xFE5
  7958                           fsr1l	equ	0xFE1
  7959                           indf2	equ	0xFDF
  7960                           postinc2	equ	0xFDE
  7961                           postdec2	equ	0xFDD
  7962                           fsr2h	equ	0xFDA
  7963                           fsr2l	equ	0xFD9
  7964                           status	equ	0xFD8
  7965                           
  7966 ;; *************** function ___flneg *****************
  7967 ;; Defined at:
  7968 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  7969 ;; Parameters:    Size  Location     Type
  7970 ;;  f1              4   93[BANK0 ] unsigned char 
  7971 ;; Auto vars:     Size  Location     Type
  7972 ;;		None
  7973 ;; Return value:  Size  Location     Type
  7974 ;;                  4   93[BANK0 ] unsigned char 
  7975 ;; Registers used:
  7976 ;;		wreg, status,2, status,0
  7977 ;; Tracked objects:
  7978 ;;		On entry : 0/0
  7979 ;;		On exit  : 0/0
  7980 ;;		Unchanged: 0/0
  7981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7982 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7985 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7986 ;;Total ram usage:        4 bytes
  7987 ;; Hardware stack levels used:    1
  7988 ;; Hardware stack levels required when called:    4
  7989 ;; This function calls:
  7990 ;;		Nothing
  7991 ;; This function is called by:
  7992 ;;		_park_routine
  7993 ;;		_matematica
  7994 ;;		_asin
  7995 ;;		_atan
  7996 ;;		_fabs
  7997 ;;		_sin
  7998 ;; This function uses a non-reentrant model
  7999 ;;
  8000                           
  8001                           	psect	text20
  8002  0065BC                     __ptext20:
  8003                           	opt stack 0
  8004  0065BC                     ___flneg:
  8005                           	opt stack 22
  8006                           
  8007                           ;incstack = 0
  8008  0065BC  0100               	movlb	0	; () banked
  8009  0065BE  51BD               	movf	___flneg@f1& (0+255),w,b
  8010  0065C0  0100               	movlb	0	; () banked
  8011  0065C2  11BE               	iorwf	(___flneg@f1+1)& (0+255),w,b
  8012  0065C4  0100               	movlb	0	; () banked
  8013  0065C6  11BF               	iorwf	(___flneg@f1+2)& (0+255),w,b
  8014  0065C8  0100               	movlb	0	; () banked
  8015  0065CA  11C0               	iorwf	(___flneg@f1+3)& (0+255),w,b
  8016  0065CC  B4D8               	btfsc	status,2,c
  8017  0065CE  D009               	goto	l7100
  8018                           
  8019                           ; BSR set to: 0
  8020  0065D0  0E00               	movlw	0
  8021  0065D2  0100               	movlb	0	; () banked
  8022  0065D4  1BBD               	xorwf	___flneg@f1& (0+255),f,b
  8023  0065D6  0E00               	movlw	0
  8024  0065D8  1BBE               	xorwf	(___flneg@f1+1)& (0+255),f,b
  8025  0065DA  0E00               	movlw	0
  8026  0065DC  1BBF               	xorwf	(___flneg@f1+2)& (0+255),f,b
  8027  0065DE  0E80               	movlw	128
  8028  0065E0  1BC0               	xorwf	(___flneg@f1+3)& (0+255),f,b
  8029  0065E2                     l7100:
  8030                           
  8031                           ; BSR set to: 0
  8032  0065E2  C0BD  F0BD         	movff	___flneg@f1,?___flneg
  8033  0065E6  C0BE  F0BE         	movff	___flneg@f1+1,?___flneg+1
  8034  0065EA  C0BF  F0BF         	movff	___flneg@f1+2,?___flneg+2
  8035  0065EE  C0C0  F0C0         	movff	___flneg@f1+3,?___flneg+3
  8036  0065F2  0012               	return	
  8037  0065F4                     __end_of___flneg:
  8038                           	opt stack 0
  8039                           tblptru	equ	0xFF8
  8040                           tblptrh	equ	0xFF7
  8041                           tblptrl	equ	0xFF6
  8042                           tablat	equ	0xFF5
  8043                           postinc0	equ	0xFEE
  8044                           wreg	equ	0xFE8
  8045                           postdec1	equ	0xFE5
  8046                           fsr1l	equ	0xFE1
  8047                           indf2	equ	0xFDF
  8048                           postinc2	equ	0xFDE
  8049                           postdec2	equ	0xFDD
  8050                           fsr2h	equ	0xFDA
  8051                           fsr2l	equ	0xFD9
  8052                           status	equ	0xFD8
  8053                           
  8054 ;; *************** function _eval_poly *****************
  8055 ;; Defined at:
  8056 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\evalpoly.c"
  8057 ;; Parameters:    Size  Location     Type
  8058 ;;  x               4   93[BANK0 ] unsigned char 
  8059 ;;  d               2   97[BANK0 ] PTR const 
  8060 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), atan@coeff_a(24), atan@coeff_b(20), 
  8061 ;;  n               2   99[BANK0 ] int 
  8062 ;; Auto vars:     Size  Location     Type
  8063 ;;  res             4  105[BANK0 ] int 
  8064 ;; Return value:  Size  Location     Type
  8065 ;;                  4   93[BANK0 ] int 
  8066 ;; Registers used:
  8067 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8068 ;; Tracked objects:
  8069 ;;		On entry : 0/0
  8070 ;;		On exit  : 0/0
  8071 ;;		Unchanged: 0/0
  8072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8073 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8074 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8075 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8076 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8077 ;;Total ram usage:       16 bytes
  8078 ;; Hardware stack levels used:    1
  8079 ;; Hardware stack levels required when called:    5
  8080 ;; This function calls:
  8081 ;;		___fladd
  8082 ;;		___flmul
  8083 ;; This function is called by:
  8084 ;;		_atan
  8085 ;;		_sin
  8086 ;; This function uses a non-reentrant model
  8087 ;;
  8088                           
  8089                           	psect	text21
  8090  005D04                     __ptext21:
  8091                           	opt stack 0
  8092  005D04                     _eval_poly:
  8093                           	opt stack 21
  8094                           
  8095                           ; BSR set to: 0
  8096                           ;incstack = 0
  8097  005D04  C0C3  F0C5         	movff	eval_poly@n,??_eval_poly
  8098  005D08  C0C4  F0C6         	movff	eval_poly@n+1,??_eval_poly+1
  8099  005D0C  0100               	movlb	0	; () banked
  8100  005D0E  90D8               	bcf	status,0,c
  8101  005D10  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8102  005D12  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8103  005D14  0100               	movlb	0	; () banked
  8104  005D16  90D8               	bcf	status,0,c
  8105  005D18  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8106  005D1A  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8107  005D1C  C0C1  F0C7         	movff	eval_poly@d,??_eval_poly+2
  8108  005D20  C0C2  F0C8         	movff	eval_poly@d+1,??_eval_poly+3
  8109  005D24  0100               	movlb	0	; () banked
  8110  005D26  51C5               	movf	??_eval_poly& (0+255),w,b
  8111  005D28  0100               	movlb	0	; () banked
  8112  005D2A  27C7               	addwf	(??_eval_poly+2)& (0+255),f,b
  8113  005D2C  0100               	movlb	0	; () banked
  8114  005D2E  51C6               	movf	(??_eval_poly+1)& (0+255),w,b
  8115  005D30  0100               	movlb	0	; () banked
  8116  005D32  23C8               	addwfc	(??_eval_poly+3)& (0+255),f,b
  8117  005D34  C0C7  FFF6         	movff	??_eval_poly+2,tblptrl
  8118  005D38  C0C8  FFF7         	movff	??_eval_poly+3,tblptrh
  8119  005D3C                     	if	0	;tblptru may be non-zero
  8120  005D3C                     	endif
  8121  005D3C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8122  005D3C  0E00               	movlw	low (__mediumconst shr (0+16))
  8123  005D3E  6EF8               	movwf	tblptru,c
  8124  005D40                     	endif
  8125  005D40  0009               	tblrd		*+
  8126  005D42  CFF5 F0C9          	movff	tablat,eval_poly@res
  8127  005D46  0009               	tblrd		*+
  8128  005D48  CFF5 F0CA          	movff	tablat,eval_poly@res+1
  8129  005D4C  0009               	tblrd		*+
  8130  005D4E  CFF5 F0CB          	movff	tablat,eval_poly@res+2
  8131  005D52  000A               	tblrd		*-
  8132  005D54  CFF5 F0CC          	movff	tablat,eval_poly@res+3
  8133  005D58  D052               	goto	l7358
  8134  005D5A                     l7356:
  8135                           
  8136                           ; BSR set to: 0
  8137  005D5A  C0C9  F094         	movff	eval_poly@res,___flmul@a
  8138  005D5E  C0CA  F095         	movff	eval_poly@res+1,___flmul@a+1
  8139  005D62  C0CB  F096         	movff	eval_poly@res+2,___flmul@a+2
  8140  005D66  C0CC  F097         	movff	eval_poly@res+3,___flmul@a+3
  8141  005D6A  C0BD  F090         	movff	eval_poly@x,___flmul@b
  8142  005D6E  C0BE  F091         	movff	eval_poly@x+1,___flmul@b+1
  8143  005D72  C0BF  F092         	movff	eval_poly@x+2,___flmul@b+2
  8144  005D76  C0C0  F093         	movff	eval_poly@x+3,___flmul@b+3
  8145  005D7A  ECD9  F01A         	call	___flmul	;wreg free
  8146  005D7E  C090  F0A9         	movff	?___flmul,___fladd@b
  8147  005D82  C091  F0AA         	movff	?___flmul+1,___fladd@b+1
  8148  005D86  C092  F0AB         	movff	?___flmul+2,___fladd@b+2
  8149  005D8A  C093  F0AC         	movff	?___flmul+3,___fladd@b+3
  8150  005D8E  0100               	movlb	0	; () banked
  8151  005D90  07C3               	decf	eval_poly@n& (0+255),f,b
  8152  005D92  A0D8               	btfss	status,0,c
  8153  005D94  07C4               	decf	(eval_poly@n+1)& (0+255),f,b
  8154  005D96  C0C3  F0C5         	movff	eval_poly@n,??_eval_poly
  8155  005D9A  C0C4  F0C6         	movff	eval_poly@n+1,??_eval_poly+1
  8156  005D9E  0100               	movlb	0	; () banked
  8157  005DA0  90D8               	bcf	status,0,c
  8158  005DA2  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8159  005DA4  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8160  005DA6  0100               	movlb	0	; () banked
  8161  005DA8  90D8               	bcf	status,0,c
  8162  005DAA  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8163  005DAC  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8164  005DAE  C0C1  F0C7         	movff	eval_poly@d,??_eval_poly+2
  8165  005DB2  C0C2  F0C8         	movff	eval_poly@d+1,??_eval_poly+3
  8166  005DB6  0100               	movlb	0	; () banked
  8167  005DB8  51C5               	movf	??_eval_poly& (0+255),w,b
  8168  005DBA  0100               	movlb	0	; () banked
  8169  005DBC  27C7               	addwf	(??_eval_poly+2)& (0+255),f,b
  8170  005DBE  0100               	movlb	0	; () banked
  8171  005DC0  51C6               	movf	(??_eval_poly+1)& (0+255),w,b
  8172  005DC2  0100               	movlb	0	; () banked
  8173  005DC4  23C8               	addwfc	(??_eval_poly+3)& (0+255),f,b
  8174  005DC6  C0C7  FFF6         	movff	??_eval_poly+2,tblptrl
  8175  005DCA  C0C8  FFF7         	movff	??_eval_poly+3,tblptrh
  8176  005DCE                     	if	0	;tblptru may be non-zero
  8177  005DCE                     	endif
  8178  005DCE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8179  005DCE  0E00               	movlw	low (__mediumconst shr (0+16))
  8180  005DD0  6EF8               	movwf	tblptru,c
  8181  005DD2                     	endif
  8182  005DD2  0009               	tblrd		*+
  8183  005DD4  CFF5 F0AD          	movff	tablat,___fladd@a
  8184  005DD8  0009               	tblrd		*+
  8185  005DDA  CFF5 F0AE          	movff	tablat,___fladd@a+1
  8186  005DDE  0009               	tblrd		*+
  8187  005DE0  CFF5 F0AF          	movff	tablat,___fladd@a+2
  8188  005DE4  000A               	tblrd		*-
  8189  005DE6  CFF5 F0B0          	movff	tablat,___fladd@a+3
  8190  005DEA  EC85  F018         	call	___fladd	;wreg free
  8191  005DEE  C0A9  F0C9         	movff	?___fladd,eval_poly@res
  8192  005DF2  C0AA  F0CA         	movff	?___fladd+1,eval_poly@res+1
  8193  005DF6  C0AB  F0CB         	movff	?___fladd+2,eval_poly@res+2
  8194  005DFA  C0AC  F0CC         	movff	?___fladd+3,eval_poly@res+3
  8195  005DFE                     l7358:
  8196  005DFE  0100               	movlb	0	; () banked
  8197  005E00  51C3               	movf	eval_poly@n& (0+255),w,b
  8198  005E02  0100               	movlb	0	; () banked
  8199  005E04  11C4               	iorwf	(eval_poly@n+1)& (0+255),w,b
  8200  005E06  A4D8               	btfss	status,2,c
  8201  005E08  D7A8               	goto	l7356
  8202                           
  8203                           ; BSR set to: 0
  8204  005E0A  C0C9  F0BD         	movff	eval_poly@res,?_eval_poly
  8205  005E0E  C0CA  F0BE         	movff	eval_poly@res+1,?_eval_poly+1
  8206  005E12  C0CB  F0BF         	movff	eval_poly@res+2,?_eval_poly+2
  8207  005E16  C0CC  F0C0         	movff	eval_poly@res+3,?_eval_poly+3
  8208                           
  8209                           ; BSR set to: 0
  8210  005E1A  0012               	return		;funcret
  8211  005E1C                     __end_of_eval_poly:
  8212                           	opt stack 0
  8213                           tblptru	equ	0xFF8
  8214                           tblptrh	equ	0xFF7
  8215                           tblptrl	equ	0xFF6
  8216                           tablat	equ	0xFF5
  8217                           postinc0	equ	0xFEE
  8218                           wreg	equ	0xFE8
  8219                           postdec1	equ	0xFE5
  8220                           fsr1l	equ	0xFE1
  8221                           indf2	equ	0xFDF
  8222                           postinc2	equ	0xFDE
  8223                           postdec2	equ	0xFDD
  8224                           fsr2h	equ	0xFDA
  8225                           fsr2l	equ	0xFD9
  8226                           status	equ	0xFD8
  8227                           
  8228 ;; *************** function ___flmul *****************
  8229 ;; Defined at:
  8230 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  8231 ;; Parameters:    Size  Location     Type
  8232 ;;  b               4   48[BANK0 ] int 
  8233 ;;  a               4   52[BANK0 ] int 
  8234 ;; Auto vars:     Size  Location     Type
  8235 ;;  prod            4   67[BANK0 ] struct .
  8236 ;;  grs             4   62[BANK0 ] unsigned long 
  8237 ;;  temp            2   71[BANK0 ] struct .
  8238 ;;  bexp            1   66[BANK0 ] unsigned char 
  8239 ;;  aexp            1   61[BANK0 ] unsigned char 
  8240 ;;  sign            1   60[BANK0 ] unsigned char 
  8241 ;; Return value:  Size  Location     Type
  8242 ;;                  4   48[BANK0 ] unsigned char 
  8243 ;; Registers used:
  8244 ;;		wreg, status,2, status,0, prodl, prodh
  8245 ;; Tracked objects:
  8246 ;;		On entry : 0/0
  8247 ;;		On exit  : 0/0
  8248 ;;		Unchanged: 0/0
  8249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8250 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8251 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8252 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8253 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8254 ;;Total ram usage:       25 bytes
  8255 ;; Hardware stack levels used:    1
  8256 ;; Hardware stack levels required when called:    4
  8257 ;; This function calls:
  8258 ;;		Nothing
  8259 ;; This function is called by:
  8260 ;;		_parallelo
  8261 ;;		_matematica
  8262 ;;		_asin
  8263 ;;		_atan
  8264 ;;		_eval_poly
  8265 ;;		_sin
  8266 ;; This function uses a non-reentrant model
  8267 ;;
  8268                           
  8269                           	psect	text22
  8270  0035B2                     __ptext22:
  8271                           	opt stack 0
  8272  0035B2                     ___flmul:
  8273                           	opt stack 21
  8274                           
  8275                           ; BSR set to: 0
  8276                           ;incstack = 0
  8277  0035B2  0100               	movlb	0	; () banked
  8278  0035B4  5193               	movf	(___flmul@b+3)& (0+255),w,b
  8279  0035B6  0B80               	andlw	128
  8280  0035B8  0100               	movlb	0	; () banked
  8281  0035BA  6F9C               	movwf	___flmul@sign& (0+255),b
  8282  0035BC  0100               	movlb	0	; () banked
  8283  0035BE  5193               	movf	(___flmul@b+3)& (0+255),w,b
  8284  0035C0  2593               	addwf	(___flmul@b+3)& (0+255),w,b
  8285  0035C2  0100               	movlb	0	; () banked
  8286  0035C4  6FA2               	movwf	___flmul@bexp& (0+255),b
  8287                           
  8288                           ; BSR set to: 0
  8289  0035C6  0100               	movlb	0	; () banked
  8290  0035C8  AF92               	btfss	(___flmul@b+2)& (0+255),7,b
  8291  0035CA  D002               	goto	l6950
  8292                           
  8293                           ; BSR set to: 0
  8294  0035CC  0100               	movlb	0	; () banked
  8295  0035CE  81A2               	bsf	___flmul@bexp& (0+255),0,b
  8296  0035D0                     l6950:
  8297                           
  8298                           ; BSR set to: 0
  8299  0035D0  0100               	movlb	0	; () banked
  8300  0035D2  51A2               	movf	___flmul@bexp& (0+255),w,b
  8301  0035D4  0100               	movlb	0	; () banked
  8302  0035D6  B4D8               	btfsc	status,2,c
  8303  0035D8  D010               	goto	l6958
  8304                           
  8305                           ; BSR set to: 0
  8306  0035DA  0100               	movlb	0	; () banked
  8307  0035DC  29A2               	incf	___flmul@bexp& (0+255),w,b
  8308  0035DE  A4D8               	btfss	status,2,c
  8309  0035E0  D009               	goto	l6956
  8310                           
  8311                           ; BSR set to: 0
  8312  0035E2  0E00               	movlw	0
  8313  0035E4  0100               	movlb	0	; () banked
  8314  0035E6  6F90               	movwf	___flmul@b& (0+255),b
  8315  0035E8  0E00               	movlw	0
  8316  0035EA  6F91               	movwf	(___flmul@b+1)& (0+255),b
  8317  0035EC  0E00               	movlw	0
  8318  0035EE  6F92               	movwf	(___flmul@b+2)& (0+255),b
  8319  0035F0  0E00               	movlw	0
  8320  0035F2  6F93               	movwf	(___flmul@b+3)& (0+255),b
  8321  0035F4                     l6956:
  8322                           
  8323                           ; BSR set to: 0
  8324  0035F4  0100               	movlb	0	; () banked
  8325  0035F6  8F92               	bsf	(___flmul@b+2)& (0+255),7,b
  8326  0035F8  D009               	goto	l6960
  8327  0035FA                     l6958:
  8328                           
  8329                           ; BSR set to: 0
  8330  0035FA  0E00               	movlw	0
  8331  0035FC  0100               	movlb	0	; () banked
  8332  0035FE  6F90               	movwf	___flmul@b& (0+255),b
  8333  003600  0E00               	movlw	0
  8334  003602  6F91               	movwf	(___flmul@b+1)& (0+255),b
  8335  003604  0E00               	movlw	0
  8336  003606  6F92               	movwf	(___flmul@b+2)& (0+255),b
  8337  003608  0E00               	movlw	0
  8338  00360A  6F93               	movwf	(___flmul@b+3)& (0+255),b
  8339  00360C                     l6960:
  8340                           
  8341                           ; BSR set to: 0
  8342  00360C  0100               	movlb	0	; () banked
  8343  00360E  5197               	movf	(___flmul@a+3)& (0+255),w,b
  8344  003610  0B80               	andlw	128
  8345  003612  0100               	movlb	0	; () banked
  8346  003614  1B9C               	xorwf	___flmul@sign& (0+255),f,b
  8347                           
  8348                           ; BSR set to: 0
  8349  003616  0100               	movlb	0	; () banked
  8350  003618  5197               	movf	(___flmul@a+3)& (0+255),w,b
  8351  00361A  2597               	addwf	(___flmul@a+3)& (0+255),w,b
  8352  00361C  0100               	movlb	0	; () banked
  8353  00361E  6F9D               	movwf	___flmul@aexp& (0+255),b
  8354                           
  8355                           ; BSR set to: 0
  8356  003620  0100               	movlb	0	; () banked
  8357  003622  AF96               	btfss	(___flmul@a+2)& (0+255),7,b
  8358  003624  D002               	goto	l6968
  8359                           
  8360                           ; BSR set to: 0
  8361  003626  0100               	movlb	0	; () banked
  8362  003628  819D               	bsf	___flmul@aexp& (0+255),0,b
  8363  00362A                     l6968:
  8364                           
  8365                           ; BSR set to: 0
  8366  00362A  0100               	movlb	0	; () banked
  8367  00362C  519D               	movf	___flmul@aexp& (0+255),w,b
  8368  00362E  0100               	movlb	0	; () banked
  8369  003630  B4D8               	btfsc	status,2,c
  8370  003632  D010               	goto	l6976
  8371                           
  8372                           ; BSR set to: 0
  8373  003634  0100               	movlb	0	; () banked
  8374  003636  299D               	incf	___flmul@aexp& (0+255),w,b
  8375  003638  A4D8               	btfss	status,2,c
  8376  00363A  D009               	goto	l6974
  8377                           
  8378                           ; BSR set to: 0
  8379  00363C  0E00               	movlw	0
  8380  00363E  0100               	movlb	0	; () banked
  8381  003640  6F94               	movwf	___flmul@a& (0+255),b
  8382  003642  0E00               	movlw	0
  8383  003644  6F95               	movwf	(___flmul@a+1)& (0+255),b
  8384  003646  0E00               	movlw	0
  8385  003648  6F96               	movwf	(___flmul@a+2)& (0+255),b
  8386  00364A  0E00               	movlw	0
  8387  00364C  6F97               	movwf	(___flmul@a+3)& (0+255),b
  8388  00364E                     l6974:
  8389                           
  8390                           ; BSR set to: 0
  8391  00364E  0100               	movlb	0	; () banked
  8392  003650  8F96               	bsf	(___flmul@a+2)& (0+255),7,b
  8393  003652  D009               	goto	l1441
  8394  003654                     l6976:
  8395                           
  8396                           ; BSR set to: 0
  8397  003654  0E00               	movlw	0
  8398  003656  0100               	movlb	0	; () banked
  8399  003658  6F94               	movwf	___flmul@a& (0+255),b
  8400  00365A  0E00               	movlw	0
  8401  00365C  6F95               	movwf	(___flmul@a+1)& (0+255),b
  8402  00365E  0E00               	movlw	0
  8403  003660  6F96               	movwf	(___flmul@a+2)& (0+255),b
  8404  003662  0E00               	movlw	0
  8405  003664  6F97               	movwf	(___flmul@a+3)& (0+255),b
  8406  003666                     l1441:
  8407                           
  8408                           ; BSR set to: 0
  8409  003666  0100               	movlb	0	; () banked
  8410  003668  519D               	movf	___flmul@aexp& (0+255),w,b
  8411  00366A  0100               	movlb	0	; () banked
  8412  00366C  B4D8               	btfsc	status,2,c
  8413  00366E  D005               	goto	l6980
  8414                           
  8415                           ; BSR set to: 0
  8416  003670  0100               	movlb	0	; () banked
  8417  003672  51A2               	movf	___flmul@bexp& (0+255),w,b
  8418  003674  0100               	movlb	0	; () banked
  8419  003676  A4D8               	btfss	status,2,c
  8420  003678  D00A               	goto	l6984
  8421  00367A                     l6980:
  8422                           
  8423                           ; BSR set to: 0
  8424  00367A  0E00               	movlw	0
  8425  00367C  0100               	movlb	0	; () banked
  8426  00367E  6F90               	movwf	?___flmul& (0+255),b
  8427  003680  0E00               	movlw	0
  8428  003682  6F91               	movwf	(?___flmul+1)& (0+255),b
  8429  003684  0E00               	movlw	0
  8430  003686  6F92               	movwf	(?___flmul+2)& (0+255),b
  8431  003688  0E00               	movlw	0
  8432  00368A  6F93               	movwf	(?___flmul+3)& (0+255),b
  8433                           
  8434                           ; BSR set to: 0
  8435  00368C  0012               	return	
  8436  00368E                     l6984:
  8437                           
  8438                           ; BSR set to: 0
  8439  00368E  0100               	movlb	0	; () banked
  8440  003690  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8441  003692  0100               	movlb	0	; () banked
  8442  003694  0390               	mulwf	___flmul@b& (0+255),b
  8443  003696  CFF3 F0A7          	movff	prodl,___flmul@temp
  8444  00369A  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8445                           
  8446                           ; BSR set to: 0
  8447  00369E  0100               	movlb	0	; () banked
  8448  0036A0  51A7               	movf	___flmul@temp& (0+255),w,b
  8449  0036A2  0100               	movlb	0	; () banked
  8450  0036A4  6F9E               	movwf	___flmul@grs& (0+255),b
  8451  0036A6  6B9F               	clrf	(___flmul@grs+1)& (0+255),b
  8452  0036A8  6BA0               	clrf	(___flmul@grs+2)& (0+255),b
  8453  0036AA  6BA1               	clrf	(___flmul@grs+3)& (0+255),b
  8454                           
  8455                           ; BSR set to: 0
  8456  0036AC  0100               	movlb	0	; () banked
  8457  0036AE  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8458  0036B0  0100               	movlb	0	; () banked
  8459  0036B2  6FA3               	movwf	___flmul@prod& (0+255),b
  8460  0036B4  6BA4               	clrf	(___flmul@prod+1)& (0+255),b
  8461  0036B6  6BA5               	clrf	(___flmul@prod+2)& (0+255),b
  8462  0036B8  6BA6               	clrf	(___flmul@prod+3)& (0+255),b
  8463  0036BA  0100               	movlb	0	; () banked
  8464  0036BC  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8465  0036BE  0100               	movlb	0	; () banked
  8466  0036C0  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8467  0036C2  CFF3 F0A7          	movff	prodl,___flmul@temp
  8468  0036C6  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8469                           
  8470                           ; BSR set to: 0
  8471  0036CA  0100               	movlb	0	; () banked
  8472  0036CC  51A7               	movf	___flmul@temp& (0+255),w,b
  8473  0036CE  0100               	movlb	0	; () banked
  8474  0036D0  279E               	addwf	___flmul@grs& (0+255),f,b
  8475  0036D2  0E00               	movlw	0
  8476  0036D4  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8477  0036D6  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8478  0036D8  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8479                           
  8480                           ; BSR set to: 0
  8481  0036DA  0100               	movlb	0	; () banked
  8482  0036DC  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8483  0036DE  0100               	movlb	0	; () banked
  8484  0036E0  27A3               	addwf	___flmul@prod& (0+255),f,b
  8485  0036E2  0E00               	movlw	0
  8486  0036E4  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8487  0036E6  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8488  0036E8  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8489  0036EA  0100               	movlb	0	; () banked
  8490  0036EC  5194               	movf	___flmul@a& (0+255),w,b
  8491  0036EE  0100               	movlb	0	; () banked
  8492  0036F0  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8493  0036F2  CFF3 F0A7          	movff	prodl,___flmul@temp
  8494  0036F6  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8495                           
  8496                           ; BSR set to: 0
  8497  0036FA  0100               	movlb	0	; () banked
  8498  0036FC  51A7               	movf	___flmul@temp& (0+255),w,b
  8499  0036FE  0100               	movlb	0	; () banked
  8500  003700  279E               	addwf	___flmul@grs& (0+255),f,b
  8501  003702  0E00               	movlw	0
  8502  003704  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8503  003706  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8504  003708  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8505                           
  8506                           ; BSR set to: 0
  8507  00370A  0100               	movlb	0	; () banked
  8508  00370C  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8509  00370E  0100               	movlb	0	; () banked
  8510  003710  27A3               	addwf	___flmul@prod& (0+255),f,b
  8511  003712  0E00               	movlw	0
  8512  003714  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8513  003716  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8514  003718  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8515                           
  8516                           ; BSR set to: 0
  8517  00371A  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8518  00371E  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8519  003722  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8520  003726  0100               	movlb	0	; () banked
  8521  003728  6B9E               	clrf	___flmul@grs& (0+255),b
  8522                           
  8523                           ; BSR set to: 0
  8524  00372A  0100               	movlb	0	; () banked
  8525  00372C  5194               	movf	___flmul@a& (0+255),w,b
  8526  00372E  0100               	movlb	0	; () banked
  8527  003730  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8528  003732  CFF3 F0A7          	movff	prodl,___flmul@temp
  8529  003736  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8530                           
  8531                           ; BSR set to: 0
  8532  00373A  0100               	movlb	0	; () banked
  8533  00373C  51A7               	movf	___flmul@temp& (0+255),w,b
  8534  00373E  0100               	movlb	0	; () banked
  8535  003740  279E               	addwf	___flmul@grs& (0+255),f,b
  8536  003742  0100               	movlb	0	; () banked
  8537  003744  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8538  003746  0100               	movlb	0	; () banked
  8539  003748  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8540  00374A  0E00               	movlw	0
  8541  00374C  0100               	movlb	0	; () banked
  8542  00374E  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8543  003750  0E00               	movlw	0
  8544  003752  0100               	movlb	0	; () banked
  8545  003754  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8546                           
  8547                           ; BSR set to: 0
  8548  003756  0100               	movlb	0	; () banked
  8549  003758  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8550  00375A  0100               	movlb	0	; () banked
  8551  00375C  0390               	mulwf	___flmul@b& (0+255),b
  8552  00375E  CFF3 F0A7          	movff	prodl,___flmul@temp
  8553  003762  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8554                           
  8555                           ; BSR set to: 0
  8556  003766  0100               	movlb	0	; () banked
  8557  003768  51A7               	movf	___flmul@temp& (0+255),w,b
  8558  00376A  0100               	movlb	0	; () banked
  8559  00376C  279E               	addwf	___flmul@grs& (0+255),f,b
  8560  00376E  0100               	movlb	0	; () banked
  8561  003770  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8562  003772  0100               	movlb	0	; () banked
  8563  003774  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8564  003776  0E00               	movlw	0
  8565  003778  0100               	movlb	0	; () banked
  8566  00377A  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8567  00377C  0E00               	movlw	0
  8568  00377E  0100               	movlb	0	; () banked
  8569  003780  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8570                           
  8571                           ; BSR set to: 0
  8572  003782  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8573  003786  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8574  00378A  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8575  00378E  0100               	movlb	0	; () banked
  8576  003790  6B9E               	clrf	___flmul@grs& (0+255),b
  8577  003792  0100               	movlb	0	; () banked
  8578  003794  5194               	movf	___flmul@a& (0+255),w,b
  8579  003796  0100               	movlb	0	; () banked
  8580  003798  0390               	mulwf	___flmul@b& (0+255),b
  8581  00379A  CFF3 F0A7          	movff	prodl,___flmul@temp
  8582  00379E  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8583                           
  8584                           ; BSR set to: 0
  8585  0037A2  0100               	movlb	0	; () banked
  8586  0037A4  51A7               	movf	___flmul@temp& (0+255),w,b
  8587  0037A6  0100               	movlb	0	; () banked
  8588  0037A8  279E               	addwf	___flmul@grs& (0+255),f,b
  8589  0037AA  0100               	movlb	0	; () banked
  8590  0037AC  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8591  0037AE  0100               	movlb	0	; () banked
  8592  0037B0  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8593  0037B2  0E00               	movlw	0
  8594  0037B4  0100               	movlb	0	; () banked
  8595  0037B6  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8596  0037B8  0E00               	movlw	0
  8597  0037BA  0100               	movlb	0	; () banked
  8598  0037BC  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8599                           
  8600                           ; BSR set to: 0
  8601  0037BE  0100               	movlb	0	; () banked
  8602  0037C0  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8603  0037C2  0100               	movlb	0	; () banked
  8604  0037C4  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8605  0037C6  CFF3 F0A7          	movff	prodl,___flmul@temp
  8606  0037CA  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8607  0037CE  0100               	movlb	0	; () banked
  8608  0037D0  51A7               	movf	___flmul@temp& (0+255),w,b
  8609  0037D2  0100               	movlb	0	; () banked
  8610  0037D4  27A3               	addwf	___flmul@prod& (0+255),f,b
  8611  0037D6  0100               	movlb	0	; () banked
  8612  0037D8  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8613  0037DA  0100               	movlb	0	; () banked
  8614  0037DC  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8615  0037DE  0E00               	movlw	0
  8616  0037E0  0100               	movlb	0	; () banked
  8617  0037E2  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8618  0037E4  0E00               	movlw	0
  8619  0037E6  0100               	movlb	0	; () banked
  8620  0037E8  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8621                           
  8622                           ; BSR set to: 0
  8623  0037EA  0100               	movlb	0	; () banked
  8624  0037EC  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8625  0037EE  0100               	movlb	0	; () banked
  8626  0037F0  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8627  0037F2  CFF3 F0A7          	movff	prodl,___flmul@temp
  8628  0037F6  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8629                           
  8630                           ; BSR set to: 0
  8631  0037FA  0100               	movlb	0	; () banked
  8632  0037FC  51A7               	movf	___flmul@temp& (0+255),w,b
  8633  0037FE  0100               	movlb	0	; () banked
  8634  003800  27A3               	addwf	___flmul@prod& (0+255),f,b
  8635  003802  0100               	movlb	0	; () banked
  8636  003804  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8637  003806  0100               	movlb	0	; () banked
  8638  003808  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8639  00380A  0E00               	movlw	0
  8640  00380C  0100               	movlb	0	; () banked
  8641  00380E  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8642  003810  0E00               	movlw	0
  8643  003812  0100               	movlb	0	; () banked
  8644  003814  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8645  003816  0100               	movlb	0	; () banked
  8646  003818  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8647  00381A  0100               	movlb	0	; () banked
  8648  00381C  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8649  00381E  CFF3 F0A7          	movff	prodl,___flmul@temp
  8650  003822  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8651                           
  8652                           ; BSR set to: 0
  8653  003826  0100               	movlb	0	; () banked
  8654  003828  51A7               	movf	___flmul@temp& (0+255),w,b
  8655  00382A  0100               	movlb	0	; () banked
  8656  00382C  6F98               	movwf	??___flmul& (0+255),b
  8657  00382E  0100               	movlb	0	; () banked
  8658  003830  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8659  003832  0100               	movlb	0	; () banked
  8660  003834  6F99               	movwf	(??___flmul+1)& (0+255),b
  8661  003836  0100               	movlb	0	; () banked
  8662  003838  6B9A               	clrf	(??___flmul+2)& (0+255),b
  8663  00383A  0100               	movlb	0	; () banked
  8664  00383C  6B9B               	clrf	(??___flmul+3)& (0+255),b
  8665  00383E  C09A  F09B         	movff	??___flmul+2,??___flmul+3
  8666  003842  C099  F09A         	movff	??___flmul+1,??___flmul+2
  8667  003846  C098  F099         	movff	??___flmul,??___flmul+1
  8668  00384A  0100               	movlb	0	; () banked
  8669  00384C  6B98               	clrf	??___flmul& (0+255),b
  8670  00384E  0100               	movlb	0	; () banked
  8671  003850  5198               	movf	??___flmul& (0+255),w,b
  8672  003852  0100               	movlb	0	; () banked
  8673  003854  27A3               	addwf	___flmul@prod& (0+255),f,b
  8674  003856  0100               	movlb	0	; () banked
  8675  003858  5199               	movf	(??___flmul+1)& (0+255),w,b
  8676  00385A  0100               	movlb	0	; () banked
  8677  00385C  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8678  00385E  0100               	movlb	0	; () banked
  8679  003860  519A               	movf	(??___flmul+2)& (0+255),w,b
  8680  003862  0100               	movlb	0	; () banked
  8681  003864  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8682  003866  0100               	movlb	0	; () banked
  8683  003868  519B               	movf	(??___flmul+3)& (0+255),w,b
  8684  00386A  0100               	movlb	0	; () banked
  8685  00386C  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8686                           
  8687                           ; BSR set to: 0
  8688  00386E  C09E  F098         	movff	___flmul@grs,??___flmul
  8689  003872  C09F  F099         	movff	___flmul@grs+1,??___flmul+1
  8690  003876  C0A0  F09A         	movff	___flmul@grs+2,??___flmul+2
  8691  00387A  C0A1  F09B         	movff	___flmul@grs+3,??___flmul+3
  8692  00387E  0E19               	movlw	25
  8693  003880  D006               	goto	u9140
  8694  003882                     u9145:
  8695  003882  0100               	movlb	0	; () banked
  8696  003884  90D8               	bcf	status,0,c
  8697  003886  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  8698  003888  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  8699  00388A  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  8700  00388C  3398               	rrcf	??___flmul& (0+255),f,b
  8701  00388E                     u9140:
  8702  00388E  2EE8               	decfsz	wreg,f,c
  8703  003890  D7F8               	goto	u9145
  8704  003892  0100               	movlb	0	; () banked
  8705  003894  5198               	movf	??___flmul& (0+255),w,b
  8706  003896  0100               	movlb	0	; () banked
  8707  003898  27A3               	addwf	___flmul@prod& (0+255),f,b
  8708  00389A  0100               	movlb	0	; () banked
  8709  00389C  5199               	movf	(??___flmul+1)& (0+255),w,b
  8710  00389E  0100               	movlb	0	; () banked
  8711  0038A0  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8712  0038A2  0100               	movlb	0	; () banked
  8713  0038A4  519A               	movf	(??___flmul+2)& (0+255),w,b
  8714  0038A6  0100               	movlb	0	; () banked
  8715  0038A8  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8716  0038AA  0100               	movlb	0	; () banked
  8717  0038AC  519B               	movf	(??___flmul+3)& (0+255),w,b
  8718  0038AE  0100               	movlb	0	; () banked
  8719  0038B0  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8720                           
  8721                           ; BSR set to: 0
  8722  0038B2  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8723  0038B6  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8724  0038BA  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8725  0038BE  0100               	movlb	0	; () banked
  8726  0038C0  6B9E               	clrf	___flmul@grs& (0+255),b
  8727                           
  8728                           ; BSR set to: 0
  8729  0038C2  0100               	movlb	0	; () banked
  8730  0038C4  519D               	movf	___flmul@aexp& (0+255),w,b
  8731  0038C6  C0A2  F098         	movff	___flmul@bexp,??___flmul
  8732  0038CA  0100               	movlb	0	; () banked
  8733  0038CC  6B99               	clrf	(??___flmul+1)& (0+255),b
  8734  0038CE  0100               	movlb	0	; () banked
  8735  0038D0  2798               	addwf	??___flmul& (0+255),f,b
  8736  0038D2  0E00               	movlw	0
  8737  0038D4  2399               	addwfc	(??___flmul+1)& (0+255),f,b
  8738  0038D6  0E82               	movlw	130
  8739  0038D8  0100               	movlb	0	; () banked
  8740  0038DA  2598               	addwf	??___flmul& (0+255),w,b
  8741  0038DC  0100               	movlb	0	; () banked
  8742  0038DE  6FA7               	movwf	___flmul@temp& (0+255),b
  8743  0038E0  0EFF               	movlw	255
  8744  0038E2  0100               	movlb	0	; () banked
  8745  0038E4  2199               	addwfc	(??___flmul+1)& (0+255),w,b
  8746  0038E6  0100               	movlb	0	; () banked
  8747  0038E8  6FA8               	movwf	(___flmul@temp+1)& (0+255),b
  8748  0038EA  D015               	goto	l7032
  8749  0038EC                     l7026:
  8750                           
  8751                           ; BSR set to: 0
  8752  0038EC  0100               	movlb	0	; () banked
  8753  0038EE  90D8               	bcf	status,0,c
  8754  0038F0  37A3               	rlcf	___flmul@prod& (0+255),f,b
  8755  0038F2  37A4               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8756  0038F4  37A5               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8757  0038F6  37A6               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8758                           
  8759                           ; BSR set to: 0
  8760  0038F8  0100               	movlb	0	; () banked
  8761  0038FA  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  8762  0038FC  D002               	goto	l1448
  8763                           
  8764                           ; BSR set to: 0
  8765  0038FE  0100               	movlb	0	; () banked
  8766  003900  81A3               	bsf	___flmul@prod& (0+255),0,b
  8767  003902                     l1448:
  8768                           
  8769                           ; BSR set to: 0
  8770  003902  0100               	movlb	0	; () banked
  8771  003904  90D8               	bcf	status,0,c
  8772  003906  379E               	rlcf	___flmul@grs& (0+255),f,b
  8773  003908  379F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8774  00390A  37A0               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8775  00390C  37A1               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8776  00390E  0100               	movlb	0	; () banked
  8777  003910  07A7               	decf	___flmul@temp& (0+255),f,b
  8778  003912  A0D8               	btfss	status,0,c
  8779  003914  07A8               	decf	(___flmul@temp+1)& (0+255),f,b
  8780  003916                     l7032:
  8781                           
  8782                           ; BSR set to: 0
  8783  003916  0100               	movlb	0	; () banked
  8784  003918  AFA5               	btfss	(___flmul@prod+2)& (0+255),7,b
  8785  00391A  D7E8               	goto	l7026
  8786                           
  8787                           ; BSR set to: 0
  8788                           
  8789                           ; BSR set to: 0
  8790  00391C  0E00               	movlw	0
  8791  00391E  0100               	movlb	0	; () banked
  8792  003920  6F9D               	movwf	___flmul@aexp& (0+255),b
  8793                           
  8794                           ; BSR set to: 0
  8795  003922  0100               	movlb	0	; () banked
  8796  003924  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  8797  003926  D024               	goto	l1450
  8798                           
  8799                           ; BSR set to: 0
  8800  003928  0EFF               	movlw	255
  8801  00392A  0100               	movlb	0	; () banked
  8802  00392C  159E               	andwf	___flmul@grs& (0+255),w,b
  8803  00392E  0100               	movlb	0	; () banked
  8804  003930  6F98               	movwf	??___flmul& (0+255),b
  8805  003932  0EFF               	movlw	255
  8806  003934  0100               	movlb	0	; () banked
  8807  003936  159F               	andwf	(___flmul@grs+1)& (0+255),w,b
  8808  003938  0100               	movlb	0	; () banked
  8809  00393A  6F99               	movwf	(??___flmul+1)& (0+255),b
  8810  00393C  0EFF               	movlw	255
  8811  00393E  0100               	movlb	0	; () banked
  8812  003940  15A0               	andwf	(___flmul@grs+2)& (0+255),w,b
  8813  003942  0100               	movlb	0	; () banked
  8814  003944  6F9A               	movwf	(??___flmul+2)& (0+255),b
  8815  003946  0E7F               	movlw	127
  8816  003948  0100               	movlb	0	; () banked
  8817  00394A  15A1               	andwf	(___flmul@grs+3)& (0+255),w,b
  8818  00394C  0100               	movlb	0	; () banked
  8819  00394E  6F9B               	movwf	(??___flmul+3)& (0+255),b
  8820  003950  0100               	movlb	0	; () banked
  8821  003952  5198               	movf	??___flmul& (0+255),w,b
  8822  003954  0100               	movlb	0	; () banked
  8823  003956  1199               	iorwf	(??___flmul+1)& (0+255),w,b
  8824  003958  0100               	movlb	0	; () banked
  8825  00395A  119A               	iorwf	(??___flmul+2)& (0+255),w,b
  8826  00395C  0100               	movlb	0	; () banked
  8827  00395E  119B               	iorwf	(??___flmul+3)& (0+255),w,b
  8828  003960  A4D8               	btfss	status,2,c
  8829  003962  D003               	goto	l7042
  8830                           
  8831                           ; BSR set to: 0
  8832                           
  8833                           ; BSR set to: 0
  8834  003964  0100               	movlb	0	; () banked
  8835  003966  A1A3               	btfss	___flmul@prod& (0+255),0,b
  8836  003968  D003               	goto	l1450
  8837  00396A                     l7042:
  8838                           
  8839                           ; BSR set to: 0
  8840  00396A  0E01               	movlw	1
  8841  00396C  0100               	movlb	0	; () banked
  8842  00396E  6F9D               	movwf	___flmul@aexp& (0+255),b
  8843  003970                     l1450:
  8844                           
  8845                           ; BSR set to: 0
  8846  003970  0100               	movlb	0	; () banked
  8847  003972  519D               	movf	___flmul@aexp& (0+255),w,b
  8848  003974  0100               	movlb	0	; () banked
  8849  003976  B4D8               	btfsc	status,2,c
  8850  003978  D023               	goto	l7052
  8851                           
  8852                           ; BSR set to: 0
  8853  00397A  0E01               	movlw	1
  8854  00397C  0100               	movlb	0	; () banked
  8855  00397E  27A3               	addwf	___flmul@prod& (0+255),f,b
  8856  003980  0E00               	movlw	0
  8857  003982  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8858  003984  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8859  003986  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8860                           
  8861                           ; BSR set to: 0
  8862  003988  0100               	movlb	0	; () banked
  8863  00398A  A1A6               	btfss	(___flmul@prod+3)& (0+255),0,b
  8864  00398C  D019               	goto	l7052
  8865                           
  8866                           ; BSR set to: 0
  8867  00398E  C0A3  F098         	movff	___flmul@prod,??___flmul
  8868  003992  C0A4  F099         	movff	___flmul@prod+1,??___flmul+1
  8869  003996  C0A5  F09A         	movff	___flmul@prod+2,??___flmul+2
  8870  00399A  C0A6  F09B         	movff	___flmul@prod+3,??___flmul+3
  8871  00399E  0100               	movlb	0	; () banked
  8872  0039A0  359B               	rlcf	(??___flmul+3)& (0+255),w,b
  8873  0039A2  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  8874  0039A4  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  8875  0039A6  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  8876  0039A8  3398               	rrcf	??___flmul& (0+255),f,b
  8877  0039AA  C098  F0A3         	movff	??___flmul,___flmul@prod
  8878  0039AE  C099  F0A4         	movff	??___flmul+1,___flmul@prod+1
  8879  0039B2  C09A  F0A5         	movff	??___flmul+2,___flmul@prod+2
  8880  0039B6  C09B  F0A6         	movff	??___flmul+3,___flmul@prod+3
  8881                           
  8882                           ; BSR set to: 0
  8883  0039BA  0100               	movlb	0	; () banked
  8884  0039BC  4BA7               	infsnz	___flmul@temp& (0+255),f,b
  8885  0039BE  2BA8               	incf	(___flmul@temp+1)& (0+255),f,b
  8886  0039C0                     l7052:
  8887                           
  8888                           ; BSR set to: 0
  8889  0039C0  0100               	movlb	0	; () banked
  8890  0039C2  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8891  0039C4  D010               	goto	l7056
  8892  0039C6  0100               	movlb	0	; () banked
  8893  0039C8  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8894  0039CA  E104               	bnz	u9220
  8895  0039CC  0100               	movlb	0	; () banked
  8896  0039CE  29A7               	incf	___flmul@temp& (0+255),w,b
  8897  0039D0  A0D8               	btfss	status,0,c
  8898  0039D2  D009               	goto	l7056
  8899  0039D4                     u9220:
  8900                           
  8901                           ; BSR set to: 0
  8902  0039D4  0E00               	movlw	0
  8903  0039D6  0100               	movlb	0	; () banked
  8904  0039D8  6FA3               	movwf	___flmul@prod& (0+255),b
  8905  0039DA  0E00               	movlw	0
  8906  0039DC  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  8907  0039DE  0E80               	movlw	128
  8908  0039E0  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  8909  0039E2  0E7F               	movlw	127
  8910  0039E4  D02B               	goto	L2
  8911  0039E6                     l7056:
  8912                           
  8913                           ; BSR set to: 0
  8914  0039E6  0100               	movlb	0	; () banked
  8915  0039E8  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8916  0039EA  D007               	goto	l7058
  8917  0039EC  0100               	movlb	0	; () banked
  8918  0039EE  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8919  0039F0  E111               	bnz	l1458
  8920  0039F2  0100               	movlb	0	; () banked
  8921  0039F4  05A7               	decf	___flmul@temp& (0+255),w,b
  8922  0039F6  B0D8               	btfsc	status,0,c
  8923  0039F8  D00D               	goto	l1458
  8924  0039FA                     l7058:
  8925                           
  8926                           ; BSR set to: 0
  8927  0039FA  0E00               	movlw	0
  8928  0039FC  0100               	movlb	0	; () banked
  8929  0039FE  6FA3               	movwf	___flmul@prod& (0+255),b
  8930  003A00  0E00               	movlw	0
  8931  003A02  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  8932  003A04  0E00               	movlw	0
  8933  003A06  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  8934  003A08  0E00               	movlw	0
  8935  003A0A  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  8936  003A0C  0E00               	movlw	0
  8937  003A0E  0100               	movlb	0	; () banked
  8938  003A10  6F9C               	movwf	___flmul@sign& (0+255),b
  8939  003A12  D015               	goto	l7068
  8940  003A14                     l1458:
  8941                           
  8942                           ; BSR set to: 0
  8943  003A14  C0A7  F0A2         	movff	___flmul@temp,___flmul@bexp
  8944                           
  8945                           ; BSR set to: 0
  8946  003A18  0EFF               	movlw	255
  8947  003A1A  0100               	movlb	0	; () banked
  8948  003A1C  17A3               	andwf	___flmul@prod& (0+255),f,b
  8949  003A1E  0EFF               	movlw	255
  8950  003A20  17A4               	andwf	(___flmul@prod+1)& (0+255),f,b
  8951  003A22  0E7F               	movlw	127
  8952  003A24  17A5               	andwf	(___flmul@prod+2)& (0+255),f,b
  8953  003A26  0E00               	movlw	0
  8954  003A28  17A6               	andwf	(___flmul@prod+3)& (0+255),f,b
  8955                           
  8956                           ; BSR set to: 0
  8957  003A2A  0100               	movlb	0	; () banked
  8958  003A2C  A1A2               	btfss	___flmul@bexp& (0+255),0,b
  8959  003A2E  D002               	goto	l7066
  8960                           
  8961                           ; BSR set to: 0
  8962  003A30  0100               	movlb	0	; () banked
  8963  003A32  8FA5               	bsf	(___flmul@prod+2)& (0+255),7,b
  8964  003A34                     l7066:
  8965                           
  8966                           ; BSR set to: 0
  8967  003A34  0100               	movlb	0	; () banked
  8968  003A36  90D8               	bcf	status,0,c
  8969  003A38  31A2               	rrcf	___flmul@bexp& (0+255),w,b
  8970  003A3A  0100               	movlb	0	; () banked
  8971  003A3C                     L2:
  8972  003A3C  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  8973  003A3E                     l7068:
  8974                           
  8975                           ; BSR set to: 0
  8976  003A3E  0100               	movlb	0	; () banked
  8977  003A40  519C               	movf	___flmul@sign& (0+255),w,b
  8978  003A42  0100               	movlb	0	; () banked
  8979  003A44  13A6               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8980                           
  8981                           ; BSR set to: 0
  8982  003A46  C0A3  F090         	movff	___flmul@prod,?___flmul
  8983  003A4A  C0A4  F091         	movff	___flmul@prod+1,?___flmul+1
  8984  003A4E  C0A5  F092         	movff	___flmul@prod+2,?___flmul+2
  8985  003A52  C0A6  F093         	movff	___flmul@prod+3,?___flmul+3
  8986  003A56  0012               	return	
  8987  003A58                     __end_of___flmul:
  8988                           	opt stack 0
  8989                           tblptru	equ	0xFF8
  8990                           tblptrh	equ	0xFF7
  8991                           tblptrl	equ	0xFF6
  8992                           tablat	equ	0xFF5
  8993                           prodh	equ	0xFF4
  8994                           prodl	equ	0xFF3
  8995                           postinc0	equ	0xFEE
  8996                           wreg	equ	0xFE8
  8997                           postdec1	equ	0xFE5
  8998                           fsr1l	equ	0xFE1
  8999                           indf2	equ	0xFDF
  9000                           postinc2	equ	0xFDE
  9001                           postdec2	equ	0xFDD
  9002                           fsr2h	equ	0xFDA
  9003                           fsr2l	equ	0xFD9
  9004                           status	equ	0xFD8
  9005                           
  9006 ;; *************** function ___fladd *****************
  9007 ;; Defined at:
  9008 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  9009 ;; Parameters:    Size  Location     Type
  9010 ;;  b               4   73[BANK0 ] unsigned char 
  9011 ;;  a               4   77[BANK0 ] unsigned char 
  9012 ;; Auto vars:     Size  Location     Type
  9013 ;;  grs             1   92[BANK0 ] unsigned char 
  9014 ;;  bexp            1   91[BANK0 ] unsigned char 
  9015 ;;  aexp            1   90[BANK0 ] unsigned char 
  9016 ;;  signs           1   89[BANK0 ] unsigned char 
  9017 ;; Return value:  Size  Location     Type
  9018 ;;                  4   73[BANK0 ] unsigned char 
  9019 ;; Registers used:
  9020 ;;		wreg, status,2, status,0
  9021 ;; Tracked objects:
  9022 ;;		On entry : 0/0
  9023 ;;		On exit  : 0/0
  9024 ;;		Unchanged: 0/0
  9025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9026 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9027 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9028 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9029 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9030 ;;Total ram usage:       20 bytes
  9031 ;; Hardware stack levels used:    1
  9032 ;; Hardware stack levels required when called:    4
  9033 ;; This function calls:
  9034 ;;		Nothing
  9035 ;; This function is called by:
  9036 ;;		_park_routine
  9037 ;;		_parallelo
  9038 ;;		_matematica
  9039 ;;		_asin
  9040 ;;		_atan
  9041 ;;		_cos
  9042 ;;		_eval_poly
  9043 ;;		_sin
  9044 ;;		___flsub
  9045 ;;		_floor
  9046 ;; This function uses a non-reentrant model
  9047 ;;
  9048                           
  9049                           	psect	text23
  9050  00310A                     __ptext23:
  9051                           	opt stack 0
  9052  00310A                     ___fladd:
  9053                           	opt stack 21
  9054                           
  9055                           ; BSR set to: 0
  9056                           ;incstack = 0
  9057  00310A  0100               	movlb	0	; () banked
  9058  00310C  51AC               	movf	(___fladd@b+3)& (0+255),w,b
  9059  00310E  0B80               	andlw	128
  9060  003110  0100               	movlb	0	; () banked
  9061  003112  6FB9               	movwf	___fladd@signs& (0+255),b
  9062  003114  0100               	movlb	0	; () banked
  9063  003116  51AC               	movf	(___fladd@b+3)& (0+255),w,b
  9064  003118  25AC               	addwf	(___fladd@b+3)& (0+255),w,b
  9065  00311A  0100               	movlb	0	; () banked
  9066  00311C  6FBB               	movwf	___fladd@bexp& (0+255),b
  9067                           
  9068                           ; BSR set to: 0
  9069  00311E  0100               	movlb	0	; () banked
  9070  003120  AFAB               	btfss	(___fladd@b+2)& (0+255),7,b
  9071  003122  D002               	goto	l6748
  9072                           
  9073                           ; BSR set to: 0
  9074  003124  0100               	movlb	0	; () banked
  9075  003126  81BB               	bsf	___fladd@bexp& (0+255),0,b
  9076  003128                     l6748:
  9077                           
  9078                           ; BSR set to: 0
  9079  003128  0100               	movlb	0	; () banked
  9080  00312A  51BB               	movf	___fladd@bexp& (0+255),w,b
  9081  00312C  0100               	movlb	0	; () banked
  9082  00312E  B4D8               	btfsc	status,2,c
  9083  003130  D012               	goto	l6758
  9084                           
  9085                           ; BSR set to: 0
  9086  003132  0100               	movlb	0	; () banked
  9087  003134  29BB               	incf	___fladd@bexp& (0+255),w,b
  9088  003136  A4D8               	btfss	status,2,c
  9089  003138  D009               	goto	l6754
  9090                           
  9091                           ; BSR set to: 0
  9092  00313A  0E00               	movlw	0
  9093  00313C  0100               	movlb	0	; () banked
  9094  00313E  6FA9               	movwf	___fladd@b& (0+255),b
  9095  003140  0E00               	movlw	0
  9096  003142  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9097  003144  0E00               	movlw	0
  9098  003146  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9099  003148  0E00               	movlw	0
  9100  00314A  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9101  00314C                     l6754:
  9102                           
  9103                           ; BSR set to: 0
  9104  00314C  0100               	movlb	0	; () banked
  9105  00314E  8FAB               	bsf	(___fladd@b+2)& (0+255),7,b
  9106                           
  9107                           ; BSR set to: 0
  9108  003150  0E00               	movlw	0
  9109  003152  0100               	movlb	0	; () banked
  9110  003154  D008               	goto	L3
  9111  003156                     l6758:
  9112                           
  9113                           ; BSR set to: 0
  9114  003156  0E00               	movlw	0
  9115  003158  0100               	movlb	0	; () banked
  9116  00315A  6FA9               	movwf	___fladd@b& (0+255),b
  9117  00315C  0E00               	movlw	0
  9118  00315E  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9119  003160  0E00               	movlw	0
  9120  003162  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9121  003164  0E00               	movlw	0
  9122  003166                     L3:
  9123  003166  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9124                           
  9125                           ; BSR set to: 0
  9126                           
  9127                           ; BSR set to: 0
  9128  003168  0100               	movlb	0	; () banked
  9129  00316A  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9130  00316C  0B80               	andlw	128
  9131  00316E  0100               	movlb	0	; () banked
  9132  003170  6FBA               	movwf	___fladd@aexp& (0+255),b
  9133                           
  9134                           ; BSR set to: 0
  9135  003172  0100               	movlb	0	; () banked
  9136  003174  51B9               	movf	___fladd@signs& (0+255),w,b
  9137  003176  0100               	movlb	0	; () banked
  9138  003178  19BA               	xorwf	___fladd@aexp& (0+255),w,b
  9139  00317A  B4D8               	btfsc	status,2,c
  9140  00317C  D002               	goto	l6766
  9141                           
  9142                           ; BSR set to: 0
  9143  00317E  0100               	movlb	0	; () banked
  9144  003180  8DB9               	bsf	___fladd@signs& (0+255),6,b
  9145  003182                     l6766:
  9146                           
  9147                           ; BSR set to: 0
  9148  003182  0100               	movlb	0	; () banked
  9149  003184  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9150  003186  25B0               	addwf	(___fladd@a+3)& (0+255),w,b
  9151  003188  0100               	movlb	0	; () banked
  9152  00318A  6FBA               	movwf	___fladd@aexp& (0+255),b
  9153                           
  9154                           ; BSR set to: 0
  9155  00318C  0100               	movlb	0	; () banked
  9156  00318E  AFAF               	btfss	(___fladd@a+2)& (0+255),7,b
  9157  003190  D002               	goto	l6772
  9158                           
  9159                           ; BSR set to: 0
  9160  003192  0100               	movlb	0	; () banked
  9161  003194  81BA               	bsf	___fladd@aexp& (0+255),0,b
  9162  003196                     l6772:
  9163                           
  9164                           ; BSR set to: 0
  9165  003196  0100               	movlb	0	; () banked
  9166  003198  51BA               	movf	___fladd@aexp& (0+255),w,b
  9167  00319A  0100               	movlb	0	; () banked
  9168  00319C  B4D8               	btfsc	status,2,c
  9169  00319E  D012               	goto	l6782
  9170                           
  9171                           ; BSR set to: 0
  9172  0031A0  0100               	movlb	0	; () banked
  9173  0031A2  29BA               	incf	___fladd@aexp& (0+255),w,b
  9174  0031A4  A4D8               	btfss	status,2,c
  9175  0031A6  D009               	goto	l6778
  9176                           
  9177                           ; BSR set to: 0
  9178  0031A8  0E00               	movlw	0
  9179  0031AA  0100               	movlb	0	; () banked
  9180  0031AC  6FAD               	movwf	___fladd@a& (0+255),b
  9181  0031AE  0E00               	movlw	0
  9182  0031B0  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  9183  0031B2  0E00               	movlw	0
  9184  0031B4  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  9185  0031B6  0E00               	movlw	0
  9186  0031B8  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  9187  0031BA                     l6778:
  9188                           
  9189                           ; BSR set to: 0
  9190  0031BA  0100               	movlb	0	; () banked
  9191  0031BC  8FAF               	bsf	(___fladd@a+2)& (0+255),7,b
  9192                           
  9193                           ; BSR set to: 0
  9194  0031BE  0E00               	movlw	0
  9195  0031C0  0100               	movlb	0	; () banked
  9196  0031C2  D008               	goto	L4
  9197  0031C4                     l6782:
  9198                           
  9199                           ; BSR set to: 0
  9200  0031C4  0E00               	movlw	0
  9201  0031C6  0100               	movlb	0	; () banked
  9202  0031C8  6FAD               	movwf	___fladd@a& (0+255),b
  9203  0031CA  0E00               	movlw	0
  9204  0031CC  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  9205  0031CE  0E00               	movlw	0
  9206  0031D0  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  9207  0031D2  0E00               	movlw	0
  9208  0031D4                     L4:
  9209  0031D4  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  9210                           
  9211                           ; BSR set to: 0
  9212                           
  9213                           ; BSR set to: 0
  9214  0031D6  0100               	movlb	0	; () banked
  9215  0031D8  51BB               	movf	___fladd@bexp& (0+255),w,b
  9216  0031DA  0100               	movlb	0	; () banked
  9217  0031DC  5DBA               	subwf	___fladd@aexp& (0+255),w,b
  9218  0031DE  B0D8               	btfsc	status,0,c
  9219  0031E0  D024               	goto	l6820
  9220                           
  9221                           ; BSR set to: 0
  9222  0031E2  0100               	movlb	0	; () banked
  9223  0031E4  ADB9               	btfss	___fladd@signs& (0+255),6,b
  9224  0031E6  D003               	goto	l6790
  9225                           
  9226                           ; BSR set to: 0
  9227  0031E8  0E80               	movlw	128
  9228  0031EA  0100               	movlb	0	; () banked
  9229  0031EC  1BB9               	xorwf	___fladd@signs& (0+255),f,b
  9230  0031EE                     l6790:
  9231                           
  9232                           ; BSR set to: 0
  9233  0031EE  C0BB  F0BC         	movff	___fladd@bexp,___fladd@grs
  9234                           
  9235                           ; BSR set to: 0
  9236  0031F2  C0BA  F0BB         	movff	___fladd@aexp,___fladd@bexp
  9237                           
  9238                           ; BSR set to: 0
  9239  0031F6  C0BC  F0BA         	movff	___fladd@grs,___fladd@aexp
  9240                           
  9241                           ; BSR set to: 0
  9242  0031FA  C0A9  F0BC         	movff	___fladd@b,___fladd@grs
  9243                           
  9244                           ; BSR set to: 0
  9245  0031FE  C0AD  F0A9         	movff	___fladd@a,___fladd@b
  9246                           
  9247                           ; BSR set to: 0
  9248  003202  C0BC  F0AD         	movff	___fladd@grs,___fladd@a
  9249                           
  9250                           ; BSR set to: 0
  9251  003206  C0AA  F0BC         	movff	___fladd@b+1,___fladd@grs
  9252                           
  9253                           ; BSR set to: 0
  9254  00320A  C0AE  F0AA         	movff	___fladd@a+1,___fladd@b+1
  9255                           
  9256                           ; BSR set to: 0
  9257  00320E  C0BC  F0AE         	movff	___fladd@grs,___fladd@a+1
  9258                           
  9259                           ; BSR set to: 0
  9260  003212  C0AB  F0BC         	movff	___fladd@b+2,___fladd@grs
  9261                           
  9262                           ; BSR set to: 0
  9263  003216  C0AF  F0AB         	movff	___fladd@a+2,___fladd@b+2
  9264                           
  9265                           ; BSR set to: 0
  9266  00321A  C0BC  F0AF         	movff	___fladd@grs,___fladd@a+2
  9267                           
  9268                           ; BSR set to: 0
  9269  00321E  C0AC  F0BC         	movff	___fladd@b+3,___fladd@grs
  9270                           
  9271                           ; BSR set to: 0
  9272  003222  C0B0  F0AC         	movff	___fladd@a+3,___fladd@b+3
  9273                           
  9274                           ; BSR set to: 0
  9275  003226  C0BC  F0B0         	movff	___fladd@grs,___fladd@a+3
  9276  00322A                     l6820:
  9277                           
  9278                           ; BSR set to: 0
  9279  00322A  0E00               	movlw	0
  9280  00322C  0100               	movlb	0	; () banked
  9281  00322E  6FBC               	movwf	___fladd@grs& (0+255),b
  9282                           
  9283                           ; BSR set to: 0
  9284  003230  0100               	movlb	0	; () banked
  9285  003232  51BB               	movf	___fladd@bexp& (0+255),w,b
  9286  003234  0100               	movlb	0	; () banked
  9287  003236  6FB1               	movwf	??___fladd& (0+255),b
  9288  003238  6BB2               	clrf	(??___fladd+1)& (0+255),b
  9289  00323A  0100               	movlb	0	; () banked
  9290  00323C  1FB1               	comf	??___fladd& (0+255),f,b
  9291  00323E  1FB2               	comf	(??___fladd+1)& (0+255),f,b
  9292  003240  4BB1               	infsnz	??___fladd& (0+255),f,b
  9293  003242  2BB2               	incf	(??___fladd+1)& (0+255),f,b
  9294  003244  0100               	movlb	0	; () banked
  9295  003246  51BA               	movf	___fladd@aexp& (0+255),w,b
  9296  003248  0100               	movlb	0	; () banked
  9297  00324A  6FB3               	movwf	(??___fladd+2)& (0+255),b
  9298  00324C  6BB4               	clrf	(??___fladd+3)& (0+255),b
  9299  00324E  0100               	movlb	0	; () banked
  9300  003250  51B1               	movf	??___fladd& (0+255),w,b
  9301  003252  0100               	movlb	0	; () banked
  9302  003254  27B3               	addwf	(??___fladd+2)& (0+255),f,b
  9303  003256  0100               	movlb	0	; () banked
  9304  003258  51B2               	movf	(??___fladd+1)& (0+255),w,b
  9305  00325A  0100               	movlb	0	; () banked
  9306  00325C  23B4               	addwfc	(??___fladd+3)& (0+255),f,b
  9307  00325E  0100               	movlb	0	; () banked
  9308  003260  BFB4               	btfsc	(??___fladd+3)& (0+255),7,b
  9309  003262  D03D               	goto	l1356
  9310  003264  0100               	movlb	0	; () banked
  9311  003266  51B4               	movf	(??___fladd+3)& (0+255),w,b
  9312  003268  E105               	bnz	u8760
  9313  00326A  0E1A               	movlw	26
  9314  00326C  0100               	movlb	0	; () banked
  9315  00326E  5DB3               	subwf	(??___fladd+2)& (0+255),w,b
  9316  003270  A0D8               	btfss	status,0,c
  9317  003272  D035               	goto	l1356
  9318  003274                     u8760:
  9319                           
  9320                           ; BSR set to: 0
  9321  003274  0100               	movlb	0	; () banked
  9322  003276  51A9               	movf	___fladd@b& (0+255),w,b
  9323  003278  0100               	movlb	0	; () banked
  9324  00327A  11AA               	iorwf	(___fladd@b+1)& (0+255),w,b
  9325  00327C  0100               	movlb	0	; () banked
  9326  00327E  11AB               	iorwf	(___fladd@b+2)& (0+255),w,b
  9327  003280  0100               	movlb	0	; () banked
  9328  003282  11AC               	iorwf	(___fladd@b+3)& (0+255),w,b
  9329  003284  B4D8               	btfsc	status,2,c
  9330  003286  D002               	goto	u8770
  9331  003288  0E01               	movlw	1
  9332  00328A  D001               	goto	u8780
  9333  00328C                     u8770:
  9334  00328C  0E00               	movlw	0
  9335  00328E                     u8780:
  9336  00328E  0100               	movlb	0	; () banked
  9337  003290  6FBC               	movwf	___fladd@grs& (0+255),b
  9338                           
  9339                           ; BSR set to: 0
  9340  003292  0E00               	movlw	0
  9341  003294  0100               	movlb	0	; () banked
  9342  003296  6FA9               	movwf	___fladd@b& (0+255),b
  9343  003298  0E00               	movlw	0
  9344  00329A  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9345  00329C  0E00               	movlw	0
  9346  00329E  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9347  0032A0  0E00               	movlw	0
  9348  0032A2  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9349                           
  9350                           ; BSR set to: 0
  9351  0032A4  C0BA  F0BB         	movff	___fladd@aexp,___fladd@bexp
  9352  0032A8  D020               	goto	l1355
  9353  0032AA                     l1357:
  9354                           
  9355                           ; BSR set to: 0
  9356  0032AA  0100               	movlb	0	; () banked
  9357  0032AC  A1BC               	btfss	___fladd@grs& (0+255),0,b
  9358  0032AE  D007               	goto	l6832
  9359                           
  9360                           ; BSR set to: 0
  9361  0032B0  0100               	movlb	0	; () banked
  9362  0032B2  90D8               	bcf	status,0,c
  9363  0032B4  31BC               	rrcf	___fladd@grs& (0+255),w,b
  9364  0032B6  0901               	iorlw	1
  9365  0032B8  0100               	movlb	0	; () banked
  9366  0032BA  6FBC               	movwf	___fladd@grs& (0+255),b
  9367  0032BC  D003               	goto	l6834
  9368  0032BE                     l6832:
  9369                           
  9370                           ; BSR set to: 0
  9371  0032BE  0100               	movlb	0	; () banked
  9372  0032C0  90D8               	bcf	status,0,c
  9373  0032C2  33BC               	rrcf	___fladd@grs& (0+255),f,b
  9374  0032C4                     l6834:
  9375                           
  9376                           ; BSR set to: 0
  9377  0032C4  0100               	movlb	0	; () banked
  9378  0032C6  A1A9               	btfss	___fladd@b& (0+255),0,b
  9379  0032C8  D002               	goto	l6838
  9380                           
  9381                           ; BSR set to: 0
  9382  0032CA  0100               	movlb	0	; () banked
  9383  0032CC  8FBC               	bsf	___fladd@grs& (0+255),7,b
  9384  0032CE                     l6838:
  9385                           
  9386                           ; BSR set to: 0
  9387  0032CE  0100               	movlb	0	; () banked
  9388  0032D0  35AC               	rlcf	(___fladd@b+3)& (0+255),w,b
  9389  0032D2  33AC               	rrcf	(___fladd@b+3)& (0+255),f,b
  9390  0032D4  33AB               	rrcf	(___fladd@b+2)& (0+255),f,b
  9391  0032D6  33AA               	rrcf	(___fladd@b+1)& (0+255),f,b
  9392  0032D8  33A9               	rrcf	___fladd@b& (0+255),f,b
  9393                           
  9394                           ; BSR set to: 0
  9395  0032DA  0100               	movlb	0	; () banked
  9396  0032DC  2BBB               	incf	___fladd@bexp& (0+255),f,b
  9397  0032DE                     l1356:
  9398                           
  9399                           ; BSR set to: 0
  9400  0032DE  0100               	movlb	0	; () banked
  9401  0032E0  51BA               	movf	___fladd@aexp& (0+255),w,b
  9402  0032E2  0100               	movlb	0	; () banked
  9403  0032E4  5DBB               	subwf	___fladd@bexp& (0+255),w,b
  9404  0032E6  A0D8               	btfss	status,0,c
  9405  0032E8  D7E0               	goto	l1357
  9406  0032EA                     l1355:
  9407                           
  9408                           ; BSR set to: 0
  9409  0032EA  0100               	movlb	0	; () banked
  9410  0032EC  BDB9               	btfsc	___fladd@signs& (0+255),6,b
  9411  0032EE  D03F               	goto	l6866
  9412                           
  9413                           ; BSR set to: 0
  9414  0032F0  0100               	movlb	0	; () banked
  9415  0032F2  51BB               	movf	___fladd@bexp& (0+255),w,b
  9416  0032F4  0100               	movlb	0	; () banked
  9417  0032F6  A4D8               	btfss	status,2,c
  9418  0032F8  D00A               	goto	l6848
  9419                           
  9420                           ; BSR set to: 0
  9421  0032FA  0E00               	movlw	0
  9422  0032FC  0100               	movlb	0	; () banked
  9423  0032FE  6FA9               	movwf	?___fladd& (0+255),b
  9424  003300  0E00               	movlw	0
  9425  003302  6FAA               	movwf	(?___fladd+1)& (0+255),b
  9426  003304  0E00               	movlw	0
  9427  003306  6FAB               	movwf	(?___fladd+2)& (0+255),b
  9428  003308  0E00               	movlw	0
  9429  00330A  6FAC               	movwf	(?___fladd+3)& (0+255),b
  9430                           
  9431                           ; BSR set to: 0
  9432  00330C  0012               	return	
  9433  00330E                     l6848:
  9434                           
  9435                           ; BSR set to: 0
  9436  00330E  0100               	movlb	0	; () banked
  9437  003310  51AD               	movf	___fladd@a& (0+255),w,b
  9438  003312  0100               	movlb	0	; () banked
  9439  003314  27A9               	addwf	___fladd@b& (0+255),f,b
  9440  003316  0100               	movlb	0	; () banked
  9441  003318  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9442  00331A  0100               	movlb	0	; () banked
  9443  00331C  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
  9444  00331E  0100               	movlb	0	; () banked
  9445  003320  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9446  003322  0100               	movlb	0	; () banked
  9447  003324  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
  9448  003326  0100               	movlb	0	; () banked
  9449  003328  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9450  00332A  0100               	movlb	0	; () banked
  9451  00332C  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
  9452                           
  9453                           ; BSR set to: 0
  9454  00332E  0100               	movlb	0	; () banked
  9455  003330  A1AC               	btfss	(___fladd@b+3)& (0+255),0,b
  9456  003332  D0CC               	goto	l6902
  9457                           
  9458                           ; BSR set to: 0
  9459  003334  0100               	movlb	0	; () banked
  9460  003336  A1BC               	btfss	___fladd@grs& (0+255),0,b
  9461  003338  D009               	goto	l6856
  9462                           
  9463                           ; BSR set to: 0
  9464  00333A  0100               	movlb	0	; () banked
  9465  00333C  90D8               	bcf	status,0,c
  9466  00333E  33BC               	rrcf	___fladd@grs& (0+255),f,b
  9467  003340  0100               	movlb	0	; () banked
  9468  003342  51BC               	movf	___fladd@grs& (0+255),w,b
  9469  003344  0901               	iorlw	1
  9470  003346  0100               	movlb	0	; () banked
  9471  003348  6FBC               	movwf	___fladd@grs& (0+255),b
  9472  00334A  D003               	goto	l6858
  9473  00334C                     l6856:
  9474                           
  9475                           ; BSR set to: 0
  9476  00334C  0100               	movlb	0	; () banked
  9477  00334E  90D8               	bcf	status,0,c
  9478  003350  33BC               	rrcf	___fladd@grs& (0+255),f,b
  9479  003352                     l6858:
  9480                           
  9481                           ; BSR set to: 0
  9482  003352  0100               	movlb	0	; () banked
  9483  003354  A1A9               	btfss	___fladd@b& (0+255),0,b
  9484  003356  D002               	goto	l6862
  9485                           
  9486                           ; BSR set to: 0
  9487  003358  0100               	movlb	0	; () banked
  9488  00335A  8FBC               	bsf	___fladd@grs& (0+255),7,b
  9489  00335C                     l6862:
  9490                           
  9491                           ; BSR set to: 0
  9492  00335C  0100               	movlb	0	; () banked
  9493  00335E  35AC               	rlcf	(___fladd@b+3)& (0+255),w,b
  9494  003360  33AC               	rrcf	(___fladd@b+3)& (0+255),f,b
  9495  003362  33AB               	rrcf	(___fladd@b+2)& (0+255),f,b
  9496  003364  33AA               	rrcf	(___fladd@b+1)& (0+255),f,b
  9497  003366  33A9               	rrcf	___fladd@b& (0+255),f,b
  9498                           
  9499                           ; BSR set to: 0
  9500  003368  0100               	movlb	0	; () banked
  9501  00336A  2BBB               	incf	___fladd@bexp& (0+255),f,b
  9502                           
  9503                           ; BSR set to: 0
  9504  00336C  D0AF               	goto	l6902
  9505  00336E                     l6866:
  9506                           
  9507                           ; BSR set to: 0
  9508  00336E  0100               	movlb	0	; () banked
  9509  003370  51AD               	movf	___fladd@a& (0+255),w,b
  9510  003372  0100               	movlb	0	; () banked
  9511  003374  5DA9               	subwf	___fladd@b& (0+255),w,b
  9512  003376  0100               	movlb	0	; () banked
  9513  003378  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9514  00337A  0100               	movlb	0	; () banked
  9515  00337C  59AA               	subwfb	(___fladd@b+1)& (0+255),w,b
  9516  00337E  0100               	movlb	0	; () banked
  9517  003380  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9518  003382  0100               	movlb	0	; () banked
  9519  003384  59AB               	subwfb	(___fladd@b+2)& (0+255),w,b
  9520  003386  0100               	movlb	0	; () banked
  9521  003388  51AC               	movf	(___fladd@b+3)& (0+255),w,b
  9522  00338A  0A80               	xorlw	128
  9523  00338C  0100               	movlb	0	; () banked
  9524  00338E  6FB1               	movwf	??___fladd& (0+255),b
  9525  003390  0100               	movlb	0	; () banked
  9526  003392  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9527  003394  0A80               	xorlw	128
  9528  003396  0100               	movlb	0	; () banked
  9529  003398  59B1               	subwfb	??___fladd& (0+255),w,b
  9530  00339A  B0D8               	btfsc	status,0,c
  9531  00339C  D050               	goto	l6876
  9532                           
  9533                           ; BSR set to: 0
  9534  00339E  C0A9  F0B1         	movff	___fladd@b,??___fladd
  9535  0033A2  C0AA  F0B2         	movff	___fladd@b+1,??___fladd+1
  9536  0033A6  C0AB  F0B3         	movff	___fladd@b+2,??___fladd+2
  9537  0033AA  C0AC  F0B4         	movff	___fladd@b+3,??___fladd+3
  9538  0033AE  0100               	movlb	0	; () banked
  9539  0033B0  1FB1               	comf	??___fladd& (0+255),f,b
  9540  0033B2  1FB2               	comf	(??___fladd+1)& (0+255),f,b
  9541  0033B4  1FB3               	comf	(??___fladd+2)& (0+255),f,b
  9542  0033B6  1FB4               	comf	(??___fladd+3)& (0+255),f,b
  9543  0033B8  2BB1               	incf	??___fladd& (0+255),f,b
  9544  0033BA  0E00               	movlw	0
  9545  0033BC  23B2               	addwfc	(??___fladd+1)& (0+255),f,b
  9546  0033BE  23B3               	addwfc	(??___fladd+2)& (0+255),f,b
  9547  0033C0  23B4               	addwfc	(??___fladd+3)& (0+255),f,b
  9548  0033C2  0100               	movlb	0	; () banked
  9549  0033C4  51AD               	movf	___fladd@a& (0+255),w,b
  9550  0033C6  0100               	movlb	0	; () banked
  9551  0033C8  25B1               	addwf	??___fladd& (0+255),w,b
  9552  0033CA  0100               	movlb	0	; () banked
  9553  0033CC  6FB5               	movwf	(??___fladd+4)& (0+255),b
  9554  0033CE  0100               	movlb	0	; () banked
  9555  0033D0  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9556  0033D2  0100               	movlb	0	; () banked
  9557  0033D4  21B2               	addwfc	(??___fladd+1)& (0+255),w,b
  9558  0033D6  0100               	movlb	0	; () banked
  9559  0033D8  6FB6               	movwf	(??___fladd+5)& (0+255),b
  9560  0033DA  0100               	movlb	0	; () banked
  9561  0033DC  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9562  0033DE  0100               	movlb	0	; () banked
  9563  0033E0  21B3               	addwfc	(??___fladd+2)& (0+255),w,b
  9564  0033E2  0100               	movlb	0	; () banked
  9565  0033E4  6FB7               	movwf	(??___fladd+6)& (0+255),b
  9566  0033E6  0100               	movlb	0	; () banked
  9567  0033E8  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9568  0033EA  0100               	movlb	0	; () banked
  9569  0033EC  21B4               	addwfc	(??___fladd+3)& (0+255),w,b
  9570  0033EE  0100               	movlb	0	; () banked
  9571  0033F0  6FB8               	movwf	(??___fladd+7)& (0+255),b
  9572  0033F2  0EFF               	movlw	255
  9573  0033F4  0100               	movlb	0	; () banked
  9574  0033F6  25B5               	addwf	(??___fladd+4)& (0+255),w,b
  9575  0033F8  0100               	movlb	0	; () banked
  9576  0033FA  6FA9               	movwf	___fladd@b& (0+255),b
  9577  0033FC  0EFF               	movlw	255
  9578  0033FE  0100               	movlb	0	; () banked
  9579  003400  21B6               	addwfc	(??___fladd+5)& (0+255),w,b
  9580  003402  0100               	movlb	0	; () banked
  9581  003404  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9582  003406  0EFF               	movlw	255
  9583  003408  0100               	movlb	0	; () banked
  9584  00340A  21B7               	addwfc	(??___fladd+6)& (0+255),w,b
  9585  00340C  0100               	movlb	0	; () banked
  9586  00340E  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9587  003410  0EFF               	movlw	255
  9588  003412  0100               	movlb	0	; () banked
  9589  003414  21B8               	addwfc	(??___fladd+7)& (0+255),w,b
  9590  003416  0100               	movlb	0	; () banked
  9591  003418  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9592  00341A  0E80               	movlw	128
  9593  00341C  0100               	movlb	0	; () banked
  9594  00341E  1BB9               	xorwf	___fladd@signs& (0+255),f,b
  9595                           
  9596                           ; BSR set to: 0
  9597  003420  0100               	movlb	0	; () banked
  9598  003422  6DBC               	negf	___fladd@grs& (0+255),b
  9599                           
  9600                           ; BSR set to: 0
  9601  003424  0100               	movlb	0	; () banked
  9602  003426  51BC               	movf	___fladd@grs& (0+255),w,b
  9603  003428  0100               	movlb	0	; () banked
  9604  00342A  A4D8               	btfss	status,2,c
  9605  00342C  D018               	goto	l1372
  9606                           
  9607                           ; BSR set to: 0
  9608  00342E  0E01               	movlw	1
  9609  003430  0100               	movlb	0	; () banked
  9610  003432  27A9               	addwf	___fladd@b& (0+255),f,b
  9611  003434  0E00               	movlw	0
  9612  003436  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
  9613  003438  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
  9614  00343A  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
  9615                           
  9616                           ; BSR set to: 0
  9617  00343C  D010               	goto	l1372
  9618  00343E                     l6876:
  9619                           
  9620                           ; BSR set to: 0
  9621  00343E  0100               	movlb	0	; () banked
  9622  003440  51AD               	movf	___fladd@a& (0+255),w,b
  9623  003442  0100               	movlb	0	; () banked
  9624  003444  5FA9               	subwf	___fladd@b& (0+255),f,b
  9625  003446  0100               	movlb	0	; () banked
  9626  003448  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9627  00344A  0100               	movlb	0	; () banked
  9628  00344C  5BAA               	subwfb	(___fladd@b+1)& (0+255),f,b
  9629  00344E  0100               	movlb	0	; () banked
  9630  003450  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9631  003452  0100               	movlb	0	; () banked
  9632  003454  5BAB               	subwfb	(___fladd@b+2)& (0+255),f,b
  9633  003456  0100               	movlb	0	; () banked
  9634  003458  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9635  00345A  0100               	movlb	0	; () banked
  9636  00345C  5BAC               	subwfb	(___fladd@b+3)& (0+255),f,b
  9637  00345E                     l1372:
  9638                           
  9639                           ; BSR set to: 0
  9640  00345E  0100               	movlb	0	; () banked
  9641  003460  51A9               	movf	___fladd@b& (0+255),w,b
  9642  003462  0100               	movlb	0	; () banked
  9643  003464  11AA               	iorwf	(___fladd@b+1)& (0+255),w,b
  9644  003466  0100               	movlb	0	; () banked
  9645  003468  11AB               	iorwf	(___fladd@b+2)& (0+255),w,b
  9646  00346A  0100               	movlb	0	; () banked
  9647  00346C  11AC               	iorwf	(___fladd@b+3)& (0+255),w,b
  9648  00346E  A4D8               	btfss	status,2,c
  9649  003470  D02A               	goto	l6900
  9650                           
  9651                           ; BSR set to: 0
  9652  003472  0100               	movlb	0	; () banked
  9653  003474  51BC               	movf	___fladd@grs& (0+255),w,b
  9654  003476  0100               	movlb	0	; () banked
  9655  003478  A4D8               	btfss	status,2,c
  9656  00347A  D025               	goto	l6900
  9657                           
  9658                           ; BSR set to: 0
  9659  00347C  0E00               	movlw	0
  9660  00347E  0100               	movlb	0	; () banked
  9661  003480  6FA9               	movwf	?___fladd& (0+255),b
  9662  003482  0E00               	movlw	0
  9663  003484  6FAA               	movwf	(?___fladd+1)& (0+255),b
  9664  003486  0E00               	movlw	0
  9665  003488  6FAB               	movwf	(?___fladd+2)& (0+255),b
  9666  00348A  0E00               	movlw	0
  9667  00348C  6FAC               	movwf	(?___fladd+3)& (0+255),b
  9668                           
  9669                           ; BSR set to: 0
  9670  00348E  0012               	return	
  9671  003490                     l6884:
  9672                           
  9673                           ; BSR set to: 0
  9674  003490  0100               	movlb	0	; () banked
  9675  003492  90D8               	bcf	status,0,c
  9676  003494  37A9               	rlcf	___fladd@b& (0+255),f,b
  9677  003496  37AA               	rlcf	(___fladd@b+1)& (0+255),f,b
  9678  003498  37AB               	rlcf	(___fladd@b+2)& (0+255),f,b
  9679  00349A  37AC               	rlcf	(___fladd@b+3)& (0+255),f,b
  9680                           
  9681                           ; BSR set to: 0
  9682  00349C  0100               	movlb	0	; () banked
  9683  00349E  AFBC               	btfss	___fladd@grs& (0+255),7,b
  9684  0034A0  D002               	goto	l6890
  9685                           
  9686                           ; BSR set to: 0
  9687  0034A2  0100               	movlb	0	; () banked
  9688  0034A4  81A9               	bsf	___fladd@b& (0+255),0,b
  9689  0034A6                     l6890:
  9690                           
  9691                           ; BSR set to: 0
  9692  0034A6  0100               	movlb	0	; () banked
  9693  0034A8  A1BC               	btfss	___fladd@grs& (0+255),0,b
  9694  0034AA  D003               	goto	l6894
  9695                           
  9696                           ; BSR set to: 0
  9697  0034AC  80D8               	bsf	status,0,c
  9698  0034AE  0100               	movlb	0	; () banked
  9699  0034B0  D002               	goto	L5
  9700  0034B2                     l6894:
  9701                           
  9702                           ; BSR set to: 0
  9703  0034B2  0100               	movlb	0	; () banked
  9704  0034B4  90D8               	bcf	status,0,c
  9705  0034B6                     L5:
  9706  0034B6  37BC               	rlcf	___fladd@grs& (0+255),f,b
  9707                           
  9708                           ; BSR set to: 0
  9709                           
  9710                           ; BSR set to: 0
  9711  0034B8  0100               	movlb	0	; () banked
  9712  0034BA  51BB               	movf	___fladd@bexp& (0+255),w,b
  9713  0034BC  0100               	movlb	0	; () banked
  9714  0034BE  B4D8               	btfsc	status,2,c
  9715  0034C0  D002               	goto	l6900
  9716                           
  9717                           ; BSR set to: 0
  9718  0034C2  0100               	movlb	0	; () banked
  9719  0034C4  07BB               	decf	___fladd@bexp& (0+255),f,b
  9720  0034C6                     l6900:
  9721                           
  9722                           ; BSR set to: 0
  9723  0034C6  0100               	movlb	0	; () banked
  9724  0034C8  AFAB               	btfss	(___fladd@b+2)& (0+255),7,b
  9725  0034CA  D7E2               	goto	l6884
  9726  0034CC                     l6902:
  9727                           
  9728                           ; BSR set to: 0
  9729  0034CC  0E00               	movlw	0
  9730  0034CE  0100               	movlb	0	; () banked
  9731  0034D0  6FBA               	movwf	___fladd@aexp& (0+255),b
  9732                           
  9733                           ; BSR set to: 0
  9734  0034D2  0100               	movlb	0	; () banked
  9735  0034D4  AFBC               	btfss	___fladd@grs& (0+255),7,b
  9736  0034D6  D00D               	goto	l1381
  9737                           
  9738                           ; BSR set to: 0
  9739  0034D8  C0BC  F0B1         	movff	___fladd@grs,??___fladd
  9740  0034DC  0E7F               	movlw	127
  9741  0034DE  0100               	movlb	0	; () banked
  9742  0034E0  17B1               	andwf	??___fladd& (0+255),f,b
  9743  0034E2  A4D8               	btfss	status,2,c
  9744  0034E4  D003               	goto	l6910
  9745                           
  9746                           ; BSR set to: 0
  9747                           
  9748                           ; BSR set to: 0
  9749  0034E6  0100               	movlb	0	; () banked
  9750  0034E8  A1A9               	btfss	___fladd@b& (0+255),0,b
  9751  0034EA  D003               	goto	l1381
  9752  0034EC                     l6910:
  9753                           
  9754                           ; BSR set to: 0
  9755  0034EC  0E01               	movlw	1
  9756  0034EE  0100               	movlb	0	; () banked
  9757  0034F0  6FBA               	movwf	___fladd@aexp& (0+255),b
  9758  0034F2                     l1381:
  9759                           
  9760                           ; BSR set to: 0
  9761  0034F2  0100               	movlb	0	; () banked
  9762  0034F4  51BA               	movf	___fladd@aexp& (0+255),w,b
  9763  0034F6  0100               	movlb	0	; () banked
  9764  0034F8  B4D8               	btfsc	status,2,c
  9765  0034FA  D026               	goto	l6920
  9766                           
  9767                           ; BSR set to: 0
  9768  0034FC  0E01               	movlw	1
  9769  0034FE  0100               	movlb	0	; () banked
  9770  003500  27A9               	addwf	___fladd@b& (0+255),f,b
  9771  003502  0E00               	movlw	0
  9772  003504  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
  9773  003506  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
  9774  003508  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
  9775                           
  9776                           ; BSR set to: 0
  9777  00350A  0100               	movlb	0	; () banked
  9778  00350C  A1AC               	btfss	(___fladd@b+3)& (0+255),0,b
  9779  00350E  D01C               	goto	l6920
  9780                           
  9781                           ; BSR set to: 0
  9782  003510  C0A9  F0B1         	movff	___fladd@b,??___fladd
  9783  003514  C0AA  F0B2         	movff	___fladd@b+1,??___fladd+1
  9784  003518  C0AB  F0B3         	movff	___fladd@b+2,??___fladd+2
  9785  00351C  C0AC  F0B4         	movff	___fladd@b+3,??___fladd+3
  9786  003520  0100               	movlb	0	; () banked
  9787  003522  35B4               	rlcf	(??___fladd+3)& (0+255),w,b
  9788  003524  33B4               	rrcf	(??___fladd+3)& (0+255),f,b
  9789  003526  33B3               	rrcf	(??___fladd+2)& (0+255),f,b
  9790  003528  33B2               	rrcf	(??___fladd+1)& (0+255),f,b
  9791  00352A  33B1               	rrcf	??___fladd& (0+255),f,b
  9792  00352C  C0B1  F0A9         	movff	??___fladd,___fladd@b
  9793  003530  C0B2  F0AA         	movff	??___fladd+1,___fladd@b+1
  9794  003534  C0B3  F0AB         	movff	??___fladd+2,___fladd@b+2
  9795  003538  C0B4  F0AC         	movff	??___fladd+3,___fladd@b+3
  9796  00353C  0100               	movlb	0	; () banked
  9797  00353E  29BB               	incf	___fladd@bexp& (0+255),w,b
  9798  003540  B4D8               	btfsc	status,2,c
  9799  003542  D002               	goto	l6920
  9800                           
  9801                           ; BSR set to: 0
  9802  003544  0100               	movlb	0	; () banked
  9803  003546  2BBB               	incf	___fladd@bexp& (0+255),f,b
  9804  003548                     l6920:
  9805                           
  9806                           ; BSR set to: 0
  9807  003548  0100               	movlb	0	; () banked
  9808  00354A  29BB               	incf	___fladd@bexp& (0+255),w,b
  9809  00354C  B4D8               	btfsc	status,2,c
  9810  00354E  D005               	goto	l6924
  9811                           
  9812                           ; BSR set to: 0
  9813  003550  0100               	movlb	0	; () banked
  9814  003552  51BB               	movf	___fladd@bexp& (0+255),w,b
  9815  003554  0100               	movlb	0	; () banked
  9816  003556  A4D8               	btfss	status,2,c
  9817  003558  D011               	goto	l6928
  9818  00355A                     l6924:
  9819                           
  9820                           ; BSR set to: 0
  9821  00355A  0E00               	movlw	0
  9822  00355C  0100               	movlb	0	; () banked
  9823  00355E  6FA9               	movwf	___fladd@b& (0+255),b
  9824  003560  0E00               	movlw	0
  9825  003562  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9826  003564  0E00               	movlw	0
  9827  003566  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9828  003568  0E00               	movlw	0
  9829  00356A  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9830  00356C  0100               	movlb	0	; () banked
  9831  00356E  51BB               	movf	___fladd@bexp& (0+255),w,b
  9832  003570  0100               	movlb	0	; () banked
  9833  003572  A4D8               	btfss	status,2,c
  9834  003574  D003               	goto	l6928
  9835                           
  9836                           ; BSR set to: 0
  9837  003576  0E00               	movlw	0
  9838  003578  0100               	movlb	0	; () banked
  9839  00357A  6FB9               	movwf	___fladd@signs& (0+255),b
  9840  00357C                     l6928:
  9841                           
  9842                           ; BSR set to: 0
  9843  00357C  0100               	movlb	0	; () banked
  9844  00357E  A1BB               	btfss	___fladd@bexp& (0+255),0,b
  9845  003580  D003               	goto	l6932
  9846                           
  9847                           ; BSR set to: 0
  9848  003582  0100               	movlb	0	; () banked
  9849  003584  8FAB               	bsf	(___fladd@b+2)& (0+255),7,b
  9850  003586  D002               	goto	l6934
  9851  003588                     l6932:
  9852                           
  9853                           ; BSR set to: 0
  9854  003588  0100               	movlb	0	; () banked
  9855  00358A  9FAB               	bcf	(___fladd@b+2)& (0+255),7,b
  9856  00358C                     l6934:
  9857                           
  9858                           ; BSR set to: 0
  9859  00358C  0100               	movlb	0	; () banked
  9860  00358E  90D8               	bcf	status,0,c
  9861  003590  31BB               	rrcf	___fladd@bexp& (0+255),w,b
  9862  003592  0100               	movlb	0	; () banked
  9863  003594  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9864                           
  9865                           ; BSR set to: 0
  9866  003596  0100               	movlb	0	; () banked
  9867  003598  AFB9               	btfss	___fladd@signs& (0+255),7,b
  9868  00359A  D002               	goto	l6940
  9869                           
  9870                           ; BSR set to: 0
  9871  00359C  0100               	movlb	0	; () banked
  9872  00359E  8FAC               	bsf	(___fladd@b+3)& (0+255),7,b
  9873  0035A0                     l6940:
  9874                           
  9875                           ; BSR set to: 0
  9876  0035A0  C0A9  F0A9         	movff	___fladd@b,?___fladd
  9877  0035A4  C0AA  F0AA         	movff	___fladd@b+1,?___fladd+1
  9878  0035A8  C0AB  F0AB         	movff	___fladd@b+2,?___fladd+2
  9879  0035AC  C0AC  F0AC         	movff	___fladd@b+3,?___fladd+3
  9880  0035B0  0012               	return	
  9881  0035B2                     __end_of___fladd:
  9882                           	opt stack 0
  9883                           tblptru	equ	0xFF8
  9884                           tblptrh	equ	0xFF7
  9885                           tblptrl	equ	0xFF6
  9886                           tablat	equ	0xFF5
  9887                           prodh	equ	0xFF4
  9888                           prodl	equ	0xFF3
  9889                           postinc0	equ	0xFEE
  9890                           wreg	equ	0xFE8
  9891                           postdec1	equ	0xFE5
  9892                           fsr1l	equ	0xFE1
  9893                           indf2	equ	0xFDF
  9894                           postinc2	equ	0xFDE
  9895                           postdec2	equ	0xFDD
  9896                           fsr2h	equ	0xFDA
  9897                           fsr2l	equ	0xFD9
  9898                           status	equ	0xFD8
  9899                           
  9900 ;; *************** function ___flge *****************
  9901 ;; Defined at:
  9902 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  9903 ;; Parameters:    Size  Location     Type
  9904 ;;  ff1             4  101[BANK0 ] unsigned char 
  9905 ;;  ff2             4  105[BANK0 ] unsigned char 
  9906 ;; Auto vars:     Size  Location     Type
  9907 ;;		None
  9908 ;; Return value:  Size  Location     Type
  9909 ;;		None               void
  9910 ;; Registers used:
  9911 ;;		wreg, status,2, status,0
  9912 ;; Tracked objects:
  9913 ;;		On entry : 0/0
  9914 ;;		On exit  : 0/0
  9915 ;;		Unchanged: 0/0
  9916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9917 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9919 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9920 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9921 ;;Total ram usage:       12 bytes
  9922 ;; Hardware stack levels used:    1
  9923 ;; Hardware stack levels required when called:    4
  9924 ;; This function calls:
  9925 ;;		Nothing
  9926 ;; This function is called by:
  9927 ;;		_parallelo
  9928 ;;		_asin
  9929 ;;		_atan
  9930 ;;		_cos
  9931 ;;		_sin
  9932 ;;		_floor
  9933 ;; This function uses a non-reentrant model
  9934 ;;
  9935                           
  9936                           	psect	text24
  9937  005A50                     __ptext24:
  9938                           	opt stack 0
  9939  005A50                     ___flge:
  9940                           	opt stack 22
  9941                           
  9942                           ; BSR set to: 0
  9943                           ;incstack = 0
  9944  005A50  0E00               	movlw	0
  9945  005A52  0100               	movlb	0	; () banked
  9946  005A54  15C5               	andwf	___flge@ff1& (0+255),w,b
  9947  005A56  0100               	movlb	0	; () banked
  9948  005A58  6FCD               	movwf	??___flge& (0+255),b
  9949  005A5A  0E00               	movlw	0
  9950  005A5C  0100               	movlb	0	; () banked
  9951  005A5E  15C6               	andwf	(___flge@ff1+1)& (0+255),w,b
  9952  005A60  0100               	movlb	0	; () banked
  9953  005A62  6FCE               	movwf	(??___flge+1)& (0+255),b
  9954  005A64  0E80               	movlw	128
  9955  005A66  0100               	movlb	0	; () banked
  9956  005A68  15C7               	andwf	(___flge@ff1+2)& (0+255),w,b
  9957  005A6A  0100               	movlb	0	; () banked
  9958  005A6C  6FCF               	movwf	(??___flge+2)& (0+255),b
  9959  005A6E  0E7F               	movlw	127
  9960  005A70  0100               	movlb	0	; () banked
  9961  005A72  15C8               	andwf	(___flge@ff1+3)& (0+255),w,b
  9962  005A74  0100               	movlb	0	; () banked
  9963  005A76  6FD0               	movwf	(??___flge+3)& (0+255),b
  9964  005A78  0100               	movlb	0	; () banked
  9965  005A7A  51CD               	movf	??___flge& (0+255),w,b
  9966  005A7C  0100               	movlb	0	; () banked
  9967  005A7E  11CE               	iorwf	(??___flge+1)& (0+255),w,b
  9968  005A80  0100               	movlb	0	; () banked
  9969  005A82  11CF               	iorwf	(??___flge+2)& (0+255),w,b
  9970  005A84  0100               	movlb	0	; () banked
  9971  005A86  11D0               	iorwf	(??___flge+3)& (0+255),w,b
  9972  005A88  A4D8               	btfss	status,2,c
  9973  005A8A  D009               	goto	l7078
  9974                           
  9975                           ; BSR set to: 0
  9976  005A8C  0E00               	movlw	0
  9977  005A8E  0100               	movlb	0	; () banked
  9978  005A90  6FC5               	movwf	___flge@ff1& (0+255),b
  9979  005A92  0E00               	movlw	0
  9980  005A94  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  9981  005A96  0E00               	movlw	0
  9982  005A98  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  9983  005A9A  0E00               	movlw	0
  9984  005A9C  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  9985  005A9E                     l7078:
  9986                           
  9987                           ; BSR set to: 0
  9988  005A9E  0E00               	movlw	0
  9989  005AA0  0100               	movlb	0	; () banked
  9990  005AA2  15C9               	andwf	___flge@ff2& (0+255),w,b
  9991  005AA4  0100               	movlb	0	; () banked
  9992  005AA6  6FCD               	movwf	??___flge& (0+255),b
  9993  005AA8  0E00               	movlw	0
  9994  005AAA  0100               	movlb	0	; () banked
  9995  005AAC  15CA               	andwf	(___flge@ff2+1)& (0+255),w,b
  9996  005AAE  0100               	movlb	0	; () banked
  9997  005AB0  6FCE               	movwf	(??___flge+1)& (0+255),b
  9998  005AB2  0E80               	movlw	128
  9999  005AB4  0100               	movlb	0	; () banked
 10000  005AB6  15CB               	andwf	(___flge@ff2+2)& (0+255),w,b
 10001  005AB8  0100               	movlb	0	; () banked
 10002  005ABA  6FCF               	movwf	(??___flge+2)& (0+255),b
 10003  005ABC  0E7F               	movlw	127
 10004  005ABE  0100               	movlb	0	; () banked
 10005  005AC0  15CC               	andwf	(___flge@ff2+3)& (0+255),w,b
 10006  005AC2  0100               	movlb	0	; () banked
 10007  005AC4  6FD0               	movwf	(??___flge+3)& (0+255),b
 10008  005AC6  0100               	movlb	0	; () banked
 10009  005AC8  51CD               	movf	??___flge& (0+255),w,b
 10010  005ACA  0100               	movlb	0	; () banked
 10011  005ACC  11CE               	iorwf	(??___flge+1)& (0+255),w,b
 10012  005ACE  0100               	movlb	0	; () banked
 10013  005AD0  11CF               	iorwf	(??___flge+2)& (0+255),w,b
 10014  005AD2  0100               	movlb	0	; () banked
 10015  005AD4  11D0               	iorwf	(??___flge+3)& (0+255),w,b
 10016  005AD6  A4D8               	btfss	status,2,c
 10017  005AD8  D009               	goto	l7082
 10018                           
 10019                           ; BSR set to: 0
 10020  005ADA  0E00               	movlw	0
 10021  005ADC  0100               	movlb	0	; () banked
 10022  005ADE  6FC9               	movwf	___flge@ff2& (0+255),b
 10023  005AE0  0E00               	movlw	0
 10024  005AE2  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
 10025  005AE4  0E00               	movlw	0
 10026  005AE6  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
 10027  005AE8  0E00               	movlw	0
 10028  005AEA  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
 10029  005AEC                     l7082:
 10030                           
 10031                           ; BSR set to: 0
 10032  005AEC  0100               	movlb	0	; () banked
 10033  005AEE  AFC8               	btfss	(___flge@ff1+3)& (0+255),7,b
 10034  005AF0  D026               	goto	l7086
 10035                           
 10036                           ; BSR set to: 0
 10037  005AF2  C0C5  F0CD         	movff	___flge@ff1,??___flge
 10038  005AF6  C0C6  F0CE         	movff	___flge@ff1+1,??___flge+1
 10039  005AFA  C0C7  F0CF         	movff	___flge@ff1+2,??___flge+2
 10040  005AFE  C0C8  F0D0         	movff	___flge@ff1+3,??___flge+3
 10041  005B02  0100               	movlb	0	; () banked
 10042  005B04  1FCD               	comf	??___flge& (0+255),f,b
 10043  005B06  1FCE               	comf	(??___flge+1)& (0+255),f,b
 10044  005B08  1FCF               	comf	(??___flge+2)& (0+255),f,b
 10045  005B0A  1FD0               	comf	(??___flge+3)& (0+255),f,b
 10046  005B0C  2BCD               	incf	??___flge& (0+255),f,b
 10047  005B0E  0E00               	movlw	0
 10048  005B10  23CE               	addwfc	(??___flge+1)& (0+255),f,b
 10049  005B12  23CF               	addwfc	(??___flge+2)& (0+255),f,b
 10050  005B14  23D0               	addwfc	(??___flge+3)& (0+255),f,b
 10051  005B16  0E00               	movlw	0
 10052  005B18  0100               	movlb	0	; () banked
 10053  005B1A  25CD               	addwf	??___flge& (0+255),w,b
 10054  005B1C  0100               	movlb	0	; () banked
 10055  005B1E  6FC5               	movwf	___flge@ff1& (0+255),b
 10056  005B20  0E00               	movlw	0
 10057  005B22  0100               	movlb	0	; () banked
 10058  005B24  21CE               	addwfc	(??___flge+1)& (0+255),w,b
 10059  005B26  0100               	movlb	0	; () banked
 10060  005B28  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
 10061  005B2A  0E00               	movlw	0
 10062  005B2C  0100               	movlb	0	; () banked
 10063  005B2E  21CF               	addwfc	(??___flge+2)& (0+255),w,b
 10064  005B30  0100               	movlb	0	; () banked
 10065  005B32  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
 10066  005B34  0E80               	movlw	128
 10067  005B36  0100               	movlb	0	; () banked
 10068  005B38  21D0               	addwfc	(??___flge+3)& (0+255),w,b
 10069  005B3A  0100               	movlb	0	; () banked
 10070  005B3C  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
 10071  005B3E                     l7086:
 10072                           
 10073                           ; BSR set to: 0
 10074  005B3E  0100               	movlb	0	; () banked
 10075  005B40  AFCC               	btfss	(___flge@ff2+3)& (0+255),7,b
 10076  005B42  D026               	goto	l1103
 10077                           
 10078                           ; BSR set to: 0
 10079  005B44  C0C9  F0CD         	movff	___flge@ff2,??___flge
 10080  005B48  C0CA  F0CE         	movff	___flge@ff2+1,??___flge+1
 10081  005B4C  C0CB  F0CF         	movff	___flge@ff2+2,??___flge+2
 10082  005B50  C0CC  F0D0         	movff	___flge@ff2+3,??___flge+3
 10083  005B54  0100               	movlb	0	; () banked
 10084  005B56  1FCD               	comf	??___flge& (0+255),f,b
 10085  005B58  1FCE               	comf	(??___flge+1)& (0+255),f,b
 10086  005B5A  1FCF               	comf	(??___flge+2)& (0+255),f,b
 10087  005B5C  1FD0               	comf	(??___flge+3)& (0+255),f,b
 10088  005B5E  2BCD               	incf	??___flge& (0+255),f,b
 10089  005B60  0E00               	movlw	0
 10090  005B62  23CE               	addwfc	(??___flge+1)& (0+255),f,b
 10091  005B64  23CF               	addwfc	(??___flge+2)& (0+255),f,b
 10092  005B66  23D0               	addwfc	(??___flge+3)& (0+255),f,b
 10093  005B68  0E00               	movlw	0
 10094  005B6A  0100               	movlb	0	; () banked
 10095  005B6C  25CD               	addwf	??___flge& (0+255),w,b
 10096  005B6E  0100               	movlb	0	; () banked
 10097  005B70  6FC9               	movwf	___flge@ff2& (0+255),b
 10098  005B72  0E00               	movlw	0
 10099  005B74  0100               	movlb	0	; () banked
 10100  005B76  21CE               	addwfc	(??___flge+1)& (0+255),w,b
 10101  005B78  0100               	movlb	0	; () banked
 10102  005B7A  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
 10103  005B7C  0E00               	movlw	0
 10104  005B7E  0100               	movlb	0	; () banked
 10105  005B80  21CF               	addwfc	(??___flge+2)& (0+255),w,b
 10106  005B82  0100               	movlb	0	; () banked
 10107  005B84  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
 10108  005B86  0E80               	movlw	128
 10109  005B88  0100               	movlb	0	; () banked
 10110  005B8A  21D0               	addwfc	(??___flge+3)& (0+255),w,b
 10111  005B8C  0100               	movlb	0	; () banked
 10112  005B8E  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
 10113  005B90                     l1103:
 10114                           
 10115                           ; BSR set to: 0
 10116  005B90  0E00               	movlw	0
 10117  005B92  0100               	movlb	0	; () banked
 10118  005B94  1BC5               	xorwf	___flge@ff1& (0+255),f,b
 10119  005B96  0E00               	movlw	0
 10120  005B98  1BC6               	xorwf	(___flge@ff1+1)& (0+255),f,b
 10121  005B9A  0E00               	movlw	0
 10122  005B9C  1BC7               	xorwf	(___flge@ff1+2)& (0+255),f,b
 10123  005B9E  0E80               	movlw	128
 10124  005BA0  1BC8               	xorwf	(___flge@ff1+3)& (0+255),f,b
 10125  005BA2  0E00               	movlw	0
 10126  005BA4  0100               	movlb	0	; () banked
 10127  005BA6  1BC9               	xorwf	___flge@ff2& (0+255),f,b
 10128  005BA8  0E00               	movlw	0
 10129  005BAA  1BCA               	xorwf	(___flge@ff2+1)& (0+255),f,b
 10130  005BAC  0E00               	movlw	0
 10131  005BAE  1BCB               	xorwf	(___flge@ff2+2)& (0+255),f,b
 10132  005BB0  0E80               	movlw	128
 10133  005BB2  1BCC               	xorwf	(___flge@ff2+3)& (0+255),f,b
 10134  005BB4  0100               	movlb	0	; () banked
 10135  005BB6  51C9               	movf	___flge@ff2& (0+255),w,b
 10136  005BB8  0100               	movlb	0	; () banked
 10137  005BBA  5DC5               	subwf	___flge@ff1& (0+255),w,b
 10138  005BBC  0100               	movlb	0	; () banked
 10139  005BBE  51CA               	movf	(___flge@ff2+1)& (0+255),w,b
 10140  005BC0  0100               	movlb	0	; () banked
 10141  005BC2  59C6               	subwfb	(___flge@ff1+1)& (0+255),w,b
 10142  005BC4  0100               	movlb	0	; () banked
 10143  005BC6  51CB               	movf	(___flge@ff2+2)& (0+255),w,b
 10144  005BC8  0100               	movlb	0	; () banked
 10145  005BCA  59C7               	subwfb	(___flge@ff1+2)& (0+255),w,b
 10146  005BCC  0100               	movlb	0	; () banked
 10147  005BCE  51CC               	movf	(___flge@ff2+3)& (0+255),w,b
 10148  005BD0  0100               	movlb	0	; () banked
 10149  005BD2  59C8               	subwfb	(___flge@ff1+3)& (0+255),w,b
 10150  005BD4  B0D8               	btfsc	status,0,c
 10151  005BD6  D002               	goto	l7092
 10152                           
 10153                           ; BSR set to: 0
 10154  005BD8  90D8               	bcf	status,0,c
 10155  005BDA  0012               	return	
 10156  005BDC                     l7092:
 10157                           
 10158                           ; BSR set to: 0
 10159  005BDC  80D8               	bsf	status,0,c
 10160                           
 10161                           ; BSR set to: 0
 10162  005BDE  0012               	return	
 10163  005BE0                     __end_of___flge:
 10164                           	opt stack 0
 10165                           tblptru	equ	0xFF8
 10166                           tblptrh	equ	0xFF7
 10167                           tblptrl	equ	0xFF6
 10168                           tablat	equ	0xFF5
 10169                           prodh	equ	0xFF4
 10170                           prodl	equ	0xFF3
 10171                           postinc0	equ	0xFEE
 10172                           wreg	equ	0xFE8
 10173                           postdec1	equ	0xFE5
 10174                           fsr1l	equ	0xFE1
 10175                           indf2	equ	0xFDF
 10176                           postinc2	equ	0xFDE
 10177                           postdec2	equ	0xFDD
 10178                           fsr2h	equ	0xFDA
 10179                           fsr2l	equ	0xFD9
 10180                           status	equ	0xFD8
 10181                           
 10182 ;; *************** function ___fldiv *****************
 10183 ;; Defined at:
 10184 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
 10185 ;; Parameters:    Size  Location     Type
 10186 ;;  b               4   23[BANK0 ] unsigned char 
 10187 ;;  a               4   27[BANK0 ] unsigned char 
 10188 ;; Auto vars:     Size  Location     Type
 10189 ;;  grs             4   42[BANK0 ] unsigned long 
 10190 ;;  rem             4   36[BANK0 ] unsigned long 
 10191 ;;  new_exp         2   40[BANK0 ] int 
 10192 ;;  aexp            1   47[BANK0 ] unsigned char 
 10193 ;;  bexp            1   46[BANK0 ] unsigned char 
 10194 ;;  sign            1   35[BANK0 ] unsigned char 
 10195 ;; Return value:  Size  Location     Type
 10196 ;;                  4   23[BANK0 ] unsigned char 
 10197 ;; Registers used:
 10198 ;;		wreg, status,2, status,0
 10199 ;; Tracked objects:
 10200 ;;		On entry : 0/0
 10201 ;;		On exit  : 0/0
 10202 ;;		Unchanged: 0/0
 10203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10204 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10205 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10206 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10207 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10208 ;;Total ram usage:       25 bytes
 10209 ;; Hardware stack levels used:    1
 10210 ;; Hardware stack levels required when called:    4
 10211 ;; This function calls:
 10212 ;;		Nothing
 10213 ;; This function is called by:
 10214 ;;		_parallelo
 10215 ;;		_matematica
 10216 ;;		_asin
 10217 ;;		_atan
 10218 ;;		_sin
 10219 ;; This function uses a non-reentrant model
 10220 ;;
 10221                           
 10222                           	psect	text25
 10223  0042B2                     __ptext25:
 10224                           	opt stack 0
 10225  0042B2                     ___fldiv:
 10226                           	opt stack 22
 10227                           
 10228                           ; BSR set to: 0
 10229                           ;incstack = 0
 10230  0042B2  0100               	movlb	0	; () banked
 10231  0042B4  517A               	movf	(___fldiv@b+3)& (0+255),w,b
 10232  0042B6  0B80               	andlw	128
 10233  0042B8  0100               	movlb	0	; () banked
 10234  0042BA  6F83               	movwf	___fldiv@sign& (0+255),b
 10235  0042BC  0100               	movlb	0	; () banked
 10236  0042BE  517A               	movf	(___fldiv@b+3)& (0+255),w,b
 10237  0042C0  257A               	addwf	(___fldiv@b+3)& (0+255),w,b
 10238  0042C2  0100               	movlb	0	; () banked
 10239  0042C4  6F8E               	movwf	___fldiv@bexp& (0+255),b
 10240                           
 10241                           ; BSR set to: 0
 10242  0042C6  0100               	movlb	0	; () banked
 10243  0042C8  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
 10244  0042CA  D002               	goto	l7212
 10245                           
 10246                           ; BSR set to: 0
 10247  0042CC  0100               	movlb	0	; () banked
 10248  0042CE  818E               	bsf	___fldiv@bexp& (0+255),0,b
 10249  0042D0                     l7212:
 10250                           
 10251                           ; BSR set to: 0
 10252  0042D0  0100               	movlb	0	; () banked
 10253  0042D2  518E               	movf	___fldiv@bexp& (0+255),w,b
 10254  0042D4  0100               	movlb	0	; () banked
 10255  0042D6  B4D8               	btfsc	status,2,c
 10256  0042D8  D012               	goto	l7222
 10257                           
 10258                           ; BSR set to: 0
 10259  0042DA  0100               	movlb	0	; () banked
 10260  0042DC  298E               	incf	___fldiv@bexp& (0+255),w,b
 10261  0042DE  A4D8               	btfss	status,2,c
 10262  0042E0  D009               	goto	l7218
 10263                           
 10264                           ; BSR set to: 0
 10265  0042E2  0E00               	movlw	0
 10266  0042E4  0100               	movlb	0	; () banked
 10267  0042E6  6F77               	movwf	___fldiv@b& (0+255),b
 10268  0042E8  0E00               	movlw	0
 10269  0042EA  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10270  0042EC  0E00               	movlw	0
 10271  0042EE  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10272  0042F0  0E00               	movlw	0
 10273  0042F2  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10274  0042F4                     l7218:
 10275                           
 10276                           ; BSR set to: 0
 10277  0042F4  0100               	movlb	0	; () banked
 10278  0042F6  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
 10279                           
 10280                           ; BSR set to: 0
 10281  0042F8  0E00               	movlw	0
 10282  0042FA  0100               	movlb	0	; () banked
 10283  0042FC  D008               	goto	L6
 10284  0042FE                     l7222:
 10285                           
 10286                           ; BSR set to: 0
 10287  0042FE  0E00               	movlw	0
 10288  004300  0100               	movlb	0	; () banked
 10289  004302  6F77               	movwf	___fldiv@b& (0+255),b
 10290  004304  0E00               	movlw	0
 10291  004306  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10292  004308  0E00               	movlw	0
 10293  00430A  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10294  00430C  0E00               	movlw	0
 10295  00430E                     L6:
 10296  00430E  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10297                           
 10298                           ; BSR set to: 0
 10299                           
 10300                           ; BSR set to: 0
 10301  004310  0100               	movlb	0	; () banked
 10302  004312  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10303  004314  0B80               	andlw	128
 10304  004316  0100               	movlb	0	; () banked
 10305  004318  1B83               	xorwf	___fldiv@sign& (0+255),f,b
 10306                           
 10307                           ; BSR set to: 0
 10308  00431A  0100               	movlb	0	; () banked
 10309  00431C  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10310  00431E  257E               	addwf	(___fldiv@a+3)& (0+255),w,b
 10311  004320  0100               	movlb	0	; () banked
 10312  004322  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10313                           
 10314                           ; BSR set to: 0
 10315  004324  0100               	movlb	0	; () banked
 10316  004326  AF7D               	btfss	(___fldiv@a+2)& (0+255),7,b
 10317  004328  D002               	goto	l7232
 10318                           
 10319                           ; BSR set to: 0
 10320  00432A  0100               	movlb	0	; () banked
 10321  00432C  818F               	bsf	___fldiv@aexp& (0+255),0,b
 10322  00432E                     l7232:
 10323                           
 10324                           ; BSR set to: 0
 10325  00432E  0100               	movlb	0	; () banked
 10326  004330  518F               	movf	___fldiv@aexp& (0+255),w,b
 10327  004332  0100               	movlb	0	; () banked
 10328  004334  B4D8               	btfsc	status,2,c
 10329  004336  D012               	goto	l7242
 10330                           
 10331                           ; BSR set to: 0
 10332  004338  0100               	movlb	0	; () banked
 10333  00433A  298F               	incf	___fldiv@aexp& (0+255),w,b
 10334  00433C  A4D8               	btfss	status,2,c
 10335  00433E  D009               	goto	l7238
 10336                           
 10337                           ; BSR set to: 0
 10338  004340  0E00               	movlw	0
 10339  004342  0100               	movlb	0	; () banked
 10340  004344  6F7B               	movwf	___fldiv@a& (0+255),b
 10341  004346  0E00               	movlw	0
 10342  004348  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
 10343  00434A  0E00               	movlw	0
 10344  00434C  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
 10345  00434E  0E00               	movlw	0
 10346  004350  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
 10347  004352                     l7238:
 10348                           
 10349                           ; BSR set to: 0
 10350  004352  0100               	movlb	0	; () banked
 10351  004354  8F7D               	bsf	(___fldiv@a+2)& (0+255),7,b
 10352                           
 10353                           ; BSR set to: 0
 10354  004356  0E00               	movlw	0
 10355  004358  0100               	movlb	0	; () banked
 10356  00435A  D008               	goto	L7
 10357  00435C                     l7242:
 10358                           
 10359                           ; BSR set to: 0
 10360  00435C  0E00               	movlw	0
 10361  00435E  0100               	movlb	0	; () banked
 10362  004360  6F7B               	movwf	___fldiv@a& (0+255),b
 10363  004362  0E00               	movlw	0
 10364  004364  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
 10365  004366  0E00               	movlw	0
 10366  004368  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
 10367  00436A  0E00               	movlw	0
 10368  00436C                     L7:
 10369  00436C  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
 10370                           
 10371                           ; BSR set to: 0
 10372                           
 10373                           ; BSR set to: 0
 10374  00436E  0100               	movlb	0	; () banked
 10375  004370  517B               	movf	___fldiv@a& (0+255),w,b
 10376  004372  0100               	movlb	0	; () banked
 10377  004374  117C               	iorwf	(___fldiv@a+1)& (0+255),w,b
 10378  004376  0100               	movlb	0	; () banked
 10379  004378  117D               	iorwf	(___fldiv@a+2)& (0+255),w,b
 10380  00437A  0100               	movlb	0	; () banked
 10381  00437C  117E               	iorwf	(___fldiv@a+3)& (0+255),w,b
 10382  00437E  A4D8               	btfss	status,2,c
 10383  004380  D017               	goto	l7254
 10384                           
 10385                           ; BSR set to: 0
 10386  004382  0E00               	movlw	0
 10387  004384  0100               	movlb	0	; () banked
 10388  004386  6F77               	movwf	___fldiv@b& (0+255),b
 10389  004388  0E00               	movlw	0
 10390  00438A  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10391  00438C  0E00               	movlw	0
 10392  00438E  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10393  004390  0E00               	movlw	0
 10394  004392  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10395                           
 10396                           ; BSR set to: 0
 10397  004394  0100               	movlb	0	; () banked
 10398  004396  0E80               	movlw	128
 10399  004398  1379               	iorwf	(___fldiv@b+2)& (0+255),f,b
 10400  00439A  0E7F               	movlw	127
 10401  00439C  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10402                           
 10403                           ; BSR set to: 0
 10404  00439E  C077  F077         	movff	___fldiv@b,?___fldiv
 10405  0043A2  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10406  0043A6  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10407  0043AA  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10408                           
 10409                           ; BSR set to: 0
 10410  0043AE  0012               	return	
 10411  0043B0                     l7254:
 10412                           
 10413                           ; BSR set to: 0
 10414  0043B0  0100               	movlb	0	; () banked
 10415  0043B2  518E               	movf	___fldiv@bexp& (0+255),w,b
 10416  0043B4  0100               	movlb	0	; () banked
 10417  0043B6  A4D8               	btfss	status,2,c
 10418  0043B8  D012               	goto	l7262
 10419                           
 10420                           ; BSR set to: 0
 10421  0043BA  0E00               	movlw	0
 10422  0043BC  0100               	movlb	0	; () banked
 10423  0043BE  6F77               	movwf	___fldiv@b& (0+255),b
 10424  0043C0  0E00               	movlw	0
 10425  0043C2  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10426  0043C4  0E00               	movlw	0
 10427  0043C6  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10428  0043C8  0E00               	movlw	0
 10429  0043CA  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10430                           
 10431                           ; BSR set to: 0
 10432  0043CC  C077  F077         	movff	___fldiv@b,?___fldiv
 10433  0043D0  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10434  0043D4  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10435  0043D8  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10436                           
 10437                           ; BSR set to: 0
 10438  0043DC  0012               	return	
 10439  0043DE                     l7262:
 10440                           
 10441                           ; BSR set to: 0
 10442  0043DE  0100               	movlb	0	; () banked
 10443  0043E0  518F               	movf	___fldiv@aexp& (0+255),w,b
 10444  0043E2  0100               	movlb	0	; () banked
 10445  0043E4  6F7F               	movwf	??___fldiv& (0+255),b
 10446  0043E6  6B80               	clrf	(??___fldiv+1)& (0+255),b
 10447  0043E8  0100               	movlb	0	; () banked
 10448  0043EA  1F7F               	comf	??___fldiv& (0+255),f,b
 10449  0043EC  1F80               	comf	(??___fldiv+1)& (0+255),f,b
 10450  0043EE  4B7F               	infsnz	??___fldiv& (0+255),f,b
 10451  0043F0  2B80               	incf	(??___fldiv+1)& (0+255),f,b
 10452  0043F2  0100               	movlb	0	; () banked
 10453  0043F4  518E               	movf	___fldiv@bexp& (0+255),w,b
 10454  0043F6  0100               	movlb	0	; () banked
 10455  0043F8  6F81               	movwf	(??___fldiv+2)& (0+255),b
 10456  0043FA  6B82               	clrf	(??___fldiv+3)& (0+255),b
 10457  0043FC  0100               	movlb	0	; () banked
 10458  0043FE  517F               	movf	??___fldiv& (0+255),w,b
 10459  004400  0100               	movlb	0	; () banked
 10460  004402  2781               	addwf	(??___fldiv+2)& (0+255),f,b
 10461  004404  0100               	movlb	0	; () banked
 10462  004406  5180               	movf	(??___fldiv+1)& (0+255),w,b
 10463  004408  0100               	movlb	0	; () banked
 10464  00440A  2382               	addwfc	(??___fldiv+3)& (0+255),f,b
 10465  00440C  0E7F               	movlw	127
 10466  00440E  0100               	movlb	0	; () banked
 10467  004410  2581               	addwf	(??___fldiv+2)& (0+255),w,b
 10468  004412  0100               	movlb	0	; () banked
 10469  004414  6F88               	movwf	___fldiv@new_exp& (0+255),b
 10470  004416  0E00               	movlw	0
 10471  004418  0100               	movlb	0	; () banked
 10472  00441A  2182               	addwfc	(??___fldiv+3)& (0+255),w,b
 10473  00441C  0100               	movlb	0	; () banked
 10474  00441E  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10475                           
 10476                           ; BSR set to: 0
 10477  004420  C077  F084         	movff	___fldiv@b,___fldiv@rem
 10478  004424  C078  F085         	movff	___fldiv@b+1,___fldiv@rem+1
 10479  004428  C079  F086         	movff	___fldiv@b+2,___fldiv@rem+2
 10480  00442C  C07A  F087         	movff	___fldiv@b+3,___fldiv@rem+3
 10481                           
 10482                           ; BSR set to: 0
 10483  004430  0E00               	movlw	0
 10484  004432  0100               	movlb	0	; () banked
 10485  004434  6F77               	movwf	___fldiv@b& (0+255),b
 10486  004436  0E00               	movlw	0
 10487  004438  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10488  00443A  0E00               	movlw	0
 10489  00443C  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10490  00443E  0E00               	movlw	0
 10491  004440  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10492                           
 10493                           ; BSR set to: 0
 10494  004442  0E00               	movlw	0
 10495  004444  0100               	movlb	0	; () banked
 10496  004446  6F8A               	movwf	___fldiv@grs& (0+255),b
 10497  004448  0E00               	movlw	0
 10498  00444A  6F8B               	movwf	(___fldiv@grs+1)& (0+255),b
 10499  00444C  0E00               	movlw	0
 10500  00444E  6F8C               	movwf	(___fldiv@grs+2)& (0+255),b
 10501  004450  0E00               	movlw	0
 10502  004452  6F8D               	movwf	(___fldiv@grs+3)& (0+255),b
 10503                           
 10504                           ; BSR set to: 0
 10505  004454  0E00               	movlw	0
 10506  004456  0100               	movlb	0	; () banked
 10507  004458  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10508  00445A  D042               	goto	l1411
 10509  00445C                     l7272:
 10510                           
 10511                           ; BSR set to: 0
 10512  00445C  0100               	movlb	0	; () banked
 10513  00445E  518F               	movf	___fldiv@aexp& (0+255),w,b
 10514  004460  0100               	movlb	0	; () banked
 10515  004462  B4D8               	btfsc	status,2,c
 10516  004464  D017               	goto	l7280
 10517                           
 10518                           ; BSR set to: 0
 10519  004466  0100               	movlb	0	; () banked
 10520  004468  90D8               	bcf	status,0,c
 10521  00446A  3784               	rlcf	___fldiv@rem& (0+255),f,b
 10522  00446C  3785               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 10523  00446E  3786               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 10524  004470  3787               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 10525  004472  0100               	movlb	0	; () banked
 10526  004474  90D8               	bcf	status,0,c
 10527  004476  3777               	rlcf	___fldiv@b& (0+255),f,b
 10528  004478  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10529  00447A  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10530  00447C  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10531                           
 10532                           ; BSR set to: 0
 10533  00447E  0100               	movlb	0	; () banked
 10534  004480  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10535  004482  D002               	goto	l1414
 10536                           
 10537                           ; BSR set to: 0
 10538  004484  0100               	movlb	0	; () banked
 10539  004486  8177               	bsf	___fldiv@b& (0+255),0,b
 10540  004488                     l1414:
 10541                           
 10542                           ; BSR set to: 0
 10543  004488  0100               	movlb	0	; () banked
 10544  00448A  90D8               	bcf	status,0,c
 10545  00448C  378A               	rlcf	___fldiv@grs& (0+255),f,b
 10546  00448E  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10547  004490  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10548  004492  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10549  004494                     l7280:
 10550                           
 10551                           ; BSR set to: 0
 10552  004494  0100               	movlb	0	; () banked
 10553  004496  517B               	movf	___fldiv@a& (0+255),w,b
 10554  004498  0100               	movlb	0	; () banked
 10555  00449A  5D84               	subwf	___fldiv@rem& (0+255),w,b
 10556  00449C  0100               	movlb	0	; () banked
 10557  00449E  517C               	movf	(___fldiv@a+1)& (0+255),w,b
 10558  0044A0  0100               	movlb	0	; () banked
 10559  0044A2  5985               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 10560  0044A4  0100               	movlb	0	; () banked
 10561  0044A6  517D               	movf	(___fldiv@a+2)& (0+255),w,b
 10562  0044A8  0100               	movlb	0	; () banked
 10563  0044AA  5986               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 10564  0044AC  0100               	movlb	0	; () banked
 10565  0044AE  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10566  0044B0  0100               	movlb	0	; () banked
 10567  0044B2  5987               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 10568  0044B4  A0D8               	btfss	status,0,c
 10569  0044B6  D012               	goto	l7286
 10570                           
 10571                           ; BSR set to: 0
 10572  0044B8  0100               	movlb	0	; () banked
 10573  0044BA  8D8D               	bsf	(___fldiv@grs+3)& (0+255),6,b
 10574                           
 10575                           ; BSR set to: 0
 10576  0044BC  0100               	movlb	0	; () banked
 10577  0044BE  517B               	movf	___fldiv@a& (0+255),w,b
 10578  0044C0  0100               	movlb	0	; () banked
 10579  0044C2  5F84               	subwf	___fldiv@rem& (0+255),f,b
 10580  0044C4  0100               	movlb	0	; () banked
 10581  0044C6  517C               	movf	(___fldiv@a+1)& (0+255),w,b
 10582  0044C8  0100               	movlb	0	; () banked
 10583  0044CA  5B85               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 10584  0044CC  0100               	movlb	0	; () banked
 10585  0044CE  517D               	movf	(___fldiv@a+2)& (0+255),w,b
 10586  0044D0  0100               	movlb	0	; () banked
 10587  0044D2  5B86               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 10588  0044D4  0100               	movlb	0	; () banked
 10589  0044D6  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10590  0044D8  0100               	movlb	0	; () banked
 10591  0044DA  5B87               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 10592  0044DC                     l7286:
 10593                           
 10594                           ; BSR set to: 0
 10595  0044DC  0100               	movlb	0	; () banked
 10596  0044DE  2B8F               	incf	___fldiv@aexp& (0+255),f,b
 10597  0044E0                     l1411:
 10598                           
 10599                           ; BSR set to: 0
 10600  0044E0  0E19               	movlw	25
 10601  0044E2  0100               	movlb	0	; () banked
 10602  0044E4  658F               	cpfsgt	___fldiv@aexp& (0+255),b
 10603  0044E6  D7BA               	goto	l7272
 10604                           
 10605                           ; BSR set to: 0
 10606                           
 10607                           ; BSR set to: 0
 10608  0044E8  0100               	movlb	0	; () banked
 10609  0044EA  5184               	movf	___fldiv@rem& (0+255),w,b
 10610  0044EC  0100               	movlb	0	; () banked
 10611  0044EE  1185               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 10612  0044F0  0100               	movlb	0	; () banked
 10613  0044F2  1186               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 10614  0044F4  0100               	movlb	0	; () banked
 10615  0044F6  1187               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 10616  0044F8  B4D8               	btfsc	status,2,c
 10617  0044FA  D018               	goto	l7298
 10618                           
 10619                           ; BSR set to: 0
 10620  0044FC  0100               	movlb	0	; () banked
 10621  0044FE  818A               	bsf	___fldiv@grs& (0+255),0,b
 10622                           
 10623                           ; BSR set to: 0
 10624  004500  D015               	goto	l7298
 10625  004502                     l7292:
 10626                           
 10627                           ; BSR set to: 0
 10628  004502  0100               	movlb	0	; () banked
 10629  004504  90D8               	bcf	status,0,c
 10630  004506  3777               	rlcf	___fldiv@b& (0+255),f,b
 10631  004508  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10632  00450A  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10633  00450C  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10634                           
 10635                           ; BSR set to: 0
 10636  00450E  0100               	movlb	0	; () banked
 10637  004510  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10638  004512  D002               	goto	l1420
 10639                           
 10640                           ; BSR set to: 0
 10641  004514  0100               	movlb	0	; () banked
 10642  004516  8177               	bsf	___fldiv@b& (0+255),0,b
 10643  004518                     l1420:
 10644                           
 10645                           ; BSR set to: 0
 10646  004518  0100               	movlb	0	; () banked
 10647  00451A  90D8               	bcf	status,0,c
 10648  00451C  378A               	rlcf	___fldiv@grs& (0+255),f,b
 10649  00451E  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10650  004520  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10651  004522  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10652  004524  0100               	movlb	0	; () banked
 10653  004526  0788               	decf	___fldiv@new_exp& (0+255),f,b
 10654  004528  A0D8               	btfss	status,0,c
 10655  00452A  0789               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 10656  00452C                     l7298:
 10657                           
 10658                           ; BSR set to: 0
 10659  00452C  0100               	movlb	0	; () banked
 10660  00452E  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
 10661  004530  D7E8               	goto	l7292
 10662                           
 10663                           ; BSR set to: 0
 10664                           
 10665                           ; BSR set to: 0
 10666  004532  0E00               	movlw	0
 10667  004534  0100               	movlb	0	; () banked
 10668  004536  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10669                           
 10670                           ; BSR set to: 0
 10671  004538  0100               	movlb	0	; () banked
 10672  00453A  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10673  00453C  D024               	goto	l1422
 10674                           
 10675                           ; BSR set to: 0
 10676  00453E  0EFF               	movlw	255
 10677  004540  0100               	movlb	0	; () banked
 10678  004542  158A               	andwf	___fldiv@grs& (0+255),w,b
 10679  004544  0100               	movlb	0	; () banked
 10680  004546  6F7F               	movwf	??___fldiv& (0+255),b
 10681  004548  0EFF               	movlw	255
 10682  00454A  0100               	movlb	0	; () banked
 10683  00454C  158B               	andwf	(___fldiv@grs+1)& (0+255),w,b
 10684  00454E  0100               	movlb	0	; () banked
 10685  004550  6F80               	movwf	(??___fldiv+1)& (0+255),b
 10686  004552  0EFF               	movlw	255
 10687  004554  0100               	movlb	0	; () banked
 10688  004556  158C               	andwf	(___fldiv@grs+2)& (0+255),w,b
 10689  004558  0100               	movlb	0	; () banked
 10690  00455A  6F81               	movwf	(??___fldiv+2)& (0+255),b
 10691  00455C  0E7F               	movlw	127
 10692  00455E  0100               	movlb	0	; () banked
 10693  004560  158D               	andwf	(___fldiv@grs+3)& (0+255),w,b
 10694  004562  0100               	movlb	0	; () banked
 10695  004564  6F82               	movwf	(??___fldiv+3)& (0+255),b
 10696  004566  0100               	movlb	0	; () banked
 10697  004568  517F               	movf	??___fldiv& (0+255),w,b
 10698  00456A  0100               	movlb	0	; () banked
 10699  00456C  1180               	iorwf	(??___fldiv+1)& (0+255),w,b
 10700  00456E  0100               	movlb	0	; () banked
 10701  004570  1181               	iorwf	(??___fldiv+2)& (0+255),w,b
 10702  004572  0100               	movlb	0	; () banked
 10703  004574  1182               	iorwf	(??___fldiv+3)& (0+255),w,b
 10704  004576  A4D8               	btfss	status,2,c
 10705  004578  D003               	goto	l7308
 10706                           
 10707                           ; BSR set to: 0
 10708                           
 10709                           ; BSR set to: 0
 10710  00457A  0100               	movlb	0	; () banked
 10711  00457C  A177               	btfss	___fldiv@b& (0+255),0,b
 10712  00457E  D003               	goto	l1422
 10713  004580                     l7308:
 10714                           
 10715                           ; BSR set to: 0
 10716  004580  0E01               	movlw	1
 10717  004582  0100               	movlb	0	; () banked
 10718  004584  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10719  004586                     l1422:
 10720                           
 10721                           ; BSR set to: 0
 10722  004586  0100               	movlb	0	; () banked
 10723  004588  518F               	movf	___fldiv@aexp& (0+255),w,b
 10724  00458A  0100               	movlb	0	; () banked
 10725  00458C  B4D8               	btfsc	status,2,c
 10726  00458E  D023               	goto	l7318
 10727                           
 10728                           ; BSR set to: 0
 10729  004590  0E01               	movlw	1
 10730  004592  0100               	movlb	0	; () banked
 10731  004594  2777               	addwf	___fldiv@b& (0+255),f,b
 10732  004596  0E00               	movlw	0
 10733  004598  2378               	addwfc	(___fldiv@b+1)& (0+255),f,b
 10734  00459A  2379               	addwfc	(___fldiv@b+2)& (0+255),f,b
 10735  00459C  237A               	addwfc	(___fldiv@b+3)& (0+255),f,b
 10736                           
 10737                           ; BSR set to: 0
 10738  00459E  0100               	movlb	0	; () banked
 10739  0045A0  A17A               	btfss	(___fldiv@b+3)& (0+255),0,b
 10740  0045A2  D019               	goto	l7318
 10741                           
 10742                           ; BSR set to: 0
 10743  0045A4  C077  F07F         	movff	___fldiv@b,??___fldiv
 10744  0045A8  C078  F080         	movff	___fldiv@b+1,??___fldiv+1
 10745  0045AC  C079  F081         	movff	___fldiv@b+2,??___fldiv+2
 10746  0045B0  C07A  F082         	movff	___fldiv@b+3,??___fldiv+3
 10747  0045B4  0100               	movlb	0	; () banked
 10748  0045B6  3582               	rlcf	(??___fldiv+3)& (0+255),w,b
 10749  0045B8  3382               	rrcf	(??___fldiv+3)& (0+255),f,b
 10750  0045BA  3381               	rrcf	(??___fldiv+2)& (0+255),f,b
 10751  0045BC  3380               	rrcf	(??___fldiv+1)& (0+255),f,b
 10752  0045BE  337F               	rrcf	??___fldiv& (0+255),f,b
 10753  0045C0  C07F  F077         	movff	??___fldiv,___fldiv@b
 10754  0045C4  C080  F078         	movff	??___fldiv+1,___fldiv@b+1
 10755  0045C8  C081  F079         	movff	??___fldiv+2,___fldiv@b+2
 10756  0045CC  C082  F07A         	movff	??___fldiv+3,___fldiv@b+3
 10757                           
 10758                           ; BSR set to: 0
 10759  0045D0  0100               	movlb	0	; () banked
 10760  0045D2  4B88               	infsnz	___fldiv@new_exp& (0+255),f,b
 10761  0045D4  2B89               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 10762  0045D6                     l7318:
 10763                           
 10764                           ; BSR set to: 0
 10765  0045D6  0100               	movlb	0	; () banked
 10766  0045D8  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10767  0045DA  D014               	goto	l7322
 10768  0045DC  0100               	movlb	0	; () banked
 10769  0045DE  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10770  0045E0  E104               	bnz	u9700
 10771  0045E2  0100               	movlb	0	; () banked
 10772  0045E4  2988               	incf	___fldiv@new_exp& (0+255),w,b
 10773  0045E6  A0D8               	btfss	status,0,c
 10774  0045E8  D00D               	goto	l7322
 10775  0045EA                     u9700:
 10776                           
 10777                           ; BSR set to: 0
 10778  0045EA  0E00               	movlw	0
 10779  0045EC  0100               	movlb	0	; () banked
 10780  0045EE  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10781  0045F0  6988               	setf	___fldiv@new_exp& (0+255),b
 10782  0045F2  0E00               	movlw	0
 10783  0045F4  0100               	movlb	0	; () banked
 10784  0045F6  6F77               	movwf	___fldiv@b& (0+255),b
 10785  0045F8  0E00               	movlw	0
 10786  0045FA  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10787  0045FC  0E00               	movlw	0
 10788  0045FE  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10789  004600  0E00               	movlw	0
 10790  004602  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10791  004604                     l7322:
 10792                           
 10793                           ; BSR set to: 0
 10794  004604  0100               	movlb	0	; () banked
 10795  004606  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10796  004608  D007               	goto	l7324
 10797  00460A  0100               	movlb	0	; () banked
 10798  00460C  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10799  00460E  E115               	bnz	l7326
 10800  004610  0100               	movlb	0	; () banked
 10801  004612  0588               	decf	___fldiv@new_exp& (0+255),w,b
 10802  004614  B0D8               	btfsc	status,0,c
 10803  004616  D011               	goto	l7326
 10804  004618                     l7324:
 10805                           
 10806                           ; BSR set to: 0
 10807  004618  0E00               	movlw	0
 10808  00461A  0100               	movlb	0	; () banked
 10809  00461C  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10810  00461E  0E00               	movlw	0
 10811  004620  6F88               	movwf	___fldiv@new_exp& (0+255),b
 10812  004622  0E00               	movlw	0
 10813  004624  0100               	movlb	0	; () banked
 10814  004626  6F77               	movwf	___fldiv@b& (0+255),b
 10815  004628  0E00               	movlw	0
 10816  00462A  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10817  00462C  0E00               	movlw	0
 10818  00462E  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10819  004630  0E00               	movlw	0
 10820  004632  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10821  004634  0E00               	movlw	0
 10822  004636  0100               	movlb	0	; () banked
 10823  004638  6F83               	movwf	___fldiv@sign& (0+255),b
 10824  00463A                     l7326:
 10825                           
 10826                           ; BSR set to: 0
 10827  00463A  C088  F08E         	movff	___fldiv@new_exp,___fldiv@bexp
 10828                           
 10829                           ; BSR set to: 0
 10830  00463E  0100               	movlb	0	; () banked
 10831  004640  A18E               	btfss	___fldiv@bexp& (0+255),0,b
 10832  004642  D003               	goto	l7332
 10833                           
 10834                           ; BSR set to: 0
 10835  004644  0100               	movlb	0	; () banked
 10836  004646  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
 10837  004648  D002               	goto	l7334
 10838  00464A                     l7332:
 10839                           
 10840                           ; BSR set to: 0
 10841  00464A  0100               	movlb	0	; () banked
 10842  00464C  9F79               	bcf	(___fldiv@b+2)& (0+255),7,b
 10843  00464E                     l7334:
 10844                           
 10845                           ; BSR set to: 0
 10846  00464E  0100               	movlb	0	; () banked
 10847  004650  90D8               	bcf	status,0,c
 10848  004652  318E               	rrcf	___fldiv@bexp& (0+255),w,b
 10849  004654  0100               	movlb	0	; () banked
 10850  004656  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10851                           
 10852                           ; BSR set to: 0
 10853  004658  0100               	movlb	0	; () banked
 10854  00465A  5183               	movf	___fldiv@sign& (0+255),w,b
 10855  00465C  0100               	movlb	0	; () banked
 10856  00465E  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10857                           
 10858                           ; BSR set to: 0
 10859  004660  C077  F077         	movff	___fldiv@b,?___fldiv
 10860  004664  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10861  004668  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10862  00466C  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10863  004670  0012               	return	
 10864  004672                     __end_of___fldiv:
 10865                           	opt stack 0
 10866                           tblptru	equ	0xFF8
 10867                           tblptrh	equ	0xFF7
 10868                           tblptrl	equ	0xFF6
 10869                           tablat	equ	0xFF5
 10870                           prodh	equ	0xFF4
 10871                           prodl	equ	0xFF3
 10872                           postinc0	equ	0xFEE
 10873                           wreg	equ	0xFE8
 10874                           postdec1	equ	0xFE5
 10875                           fsr1l	equ	0xFE1
 10876                           indf2	equ	0xFDF
 10877                           postinc2	equ	0xFDE
 10878                           postdec2	equ	0xFDD
 10879                           fsr2h	equ	0xFDA
 10880                           fsr2l	equ	0xFD9
 10881                           status	equ	0xFD8
 10882                           
 10883 ;; *************** function _delay_s *****************
 10884 ;; Defined at:
 10885 ;;		line 102 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 10886 ;; Parameters:    Size  Location     Type
 10887 ;;  value_s         1    wreg     unsigned char 
 10888 ;; Auto vars:     Size  Location     Type
 10889 ;;  value_s         1   31[BANK0 ] unsigned char 
 10890 ;;  repeat_loop     1   32[BANK0 ] unsigned char 
 10891 ;; Return value:  Size  Location     Type
 10892 ;;		None               void
 10893 ;; Registers used:
 10894 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10895 ;; Tracked objects:
 10896 ;;		On entry : 0/0
 10897 ;;		On exit  : 0/0
 10898 ;;		Unchanged: 0/0
 10899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10901 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10903 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10904 ;;Total ram usage:        2 bytes
 10905 ;; Hardware stack levels used:    1
 10906 ;; Hardware stack levels required when called:    6
 10907 ;; This function calls:
 10908 ;;		_delay_ms
 10909 ;; This function is called by:
 10910 ;;		_park_routine
 10911 ;; This function uses a non-reentrant model
 10912 ;;
 10913                           
 10914                           	psect	text26
 10915  006656                     __ptext26:
 10916                           	opt stack 0
 10917  006656                     _delay_s:
 10918                           	opt stack 23
 10919                           
 10920                           ; BSR set to: 0
 10921                           ;incstack = 0
 10922                           ;delay_s@value_s stored from wreg
 10923  006656  0100               	movlb	0	; () banked
 10924  006658  6F7F               	movwf	delay_s@value_s& (0+255),b
 10925                           
 10926                           ;src\delay.c: 104: unsigned char repeat_loop;
 10927                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
 10928  00665A  0E00               	movlw	0
 10929  00665C  0100               	movlb	0	; () banked
 10930  00665E  6F80               	movwf	delay_s@repeat_loop& (0+255),b
 10931  006660  D009               	goto	l7720
 10932  006662                     l7716:
 10933                           
 10934                           ; BSR set to: 0
 10935                           ;src\delay.c: 107: delay_ms (1000);
 10936  006662  0E03               	movlw	3
 10937  006664  0100               	movlb	0	; () banked
 10938  006666  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
 10939  006668  0EE8               	movlw	232
 10940  00666A  6F7D               	movwf	delay_ms@value_ms& (0+255),b
 10941  00666C  ECC1  F032         	call	_delay_ms	;wreg free
 10942  006670  0100               	movlb	0	; () banked
 10943  006672  2B80               	incf	delay_s@repeat_loop& (0+255),f,b
 10944  006674                     l7720:
 10945                           
 10946                           ; BSR set to: 0
 10947  006674  0100               	movlb	0	; () banked
 10948  006676  517F               	movf	delay_s@value_s& (0+255),w,b
 10949  006678  0100               	movlb	0	; () banked
 10950  00667A  5D80               	subwf	delay_s@repeat_loop& (0+255),w,b
 10951  00667C  B0D8               	btfsc	status,0,c
 10952  00667E  0012               	return	
 10953  006680  D7F0               	goto	l7716
 10954  006682                     __end_of_delay_s:
 10955                           	opt stack 0
 10956                           tblptru	equ	0xFF8
 10957                           tblptrh	equ	0xFF7
 10958                           tblptrl	equ	0xFF6
 10959                           tablat	equ	0xFF5
 10960                           prodh	equ	0xFF4
 10961                           prodl	equ	0xFF3
 10962                           postinc0	equ	0xFEE
 10963                           wreg	equ	0xFE8
 10964                           postdec1	equ	0xFE5
 10965                           fsr1l	equ	0xFE1
 10966                           indf2	equ	0xFDF
 10967                           postinc2	equ	0xFDE
 10968                           postdec2	equ	0xFDD
 10969                           fsr2h	equ	0xFDA
 10970                           fsr2l	equ	0xFD9
 10971                           status	equ	0xFD8
 10972                           
 10973 ;; *************** function _delay_ms *****************
 10974 ;; Defined at:
 10975 ;;		line 61 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 10976 ;; Parameters:    Size  Location     Type
 10977 ;;  value_ms        2   29[BANK0 ] unsigned int 
 10978 ;; Auto vars:     Size  Location     Type
 10979 ;;		None
 10980 ;; Return value:  Size  Location     Type
 10981 ;;		None               void
 10982 ;; Registers used:
 10983 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10984 ;; Tracked objects:
 10985 ;;		On entry : 0/0
 10986 ;;		On exit  : 0/0
 10987 ;;		Unchanged: 0/0
 10988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10989 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10992 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10993 ;;Total ram usage:        2 bytes
 10994 ;; Hardware stack levels used:    1
 10995 ;; Hardware stack levels required when called:    5
 10996 ;; This function calls:
 10997 ;;		___wmul
 10998 ;; This function is called by:
 10999 ;;		_delay_s
 11000 ;;		_main
 11001 ;;		_park_routine
 11002 ;; This function uses a non-reentrant model
 11003 ;;
 11004                           
 11005                           	psect	text27
 11006  006582                     __ptext27:
 11007                           	opt stack 0
 11008  006582                     _delay_ms:
 11009                           	opt stack 23
 11010                           
 11011                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 11012                           
 11013                           ; BSR set to: 0
 11014                           ;incstack = 0
 11015  006582  C0E8  F077         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 11016  006586  0100               	movlb	0	; () banked
 11017  006588  6B78               	clrf	(___wmul@multiplier+1)& (0+255),b
 11018  00658A  C07D  F079         	movff	delay_ms@value_ms,___wmul@multiplicand
 11019  00658E  C07E  F07A         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 11020  006592  ECFA  F032         	call	___wmul	;wreg free
 11021  006596  C077  F0E0         	movff	?___wmul,_clock_counter_reference	;volatile
 11022  00659A  C078  F0E1         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 11023                           
 11024                           ;src\delay.c: 75: while (clock_counter_reference) {
 11025  00659E  D007               	goto	l569
 11026  0065A0                     l7574:
 11027                           
 11028                           ;src\delay.c: 85: _delay(240);
 11029  0065A0  0E50               	movlw	80
 11030  0065A2                     u10717:
 11031  0065A2  2EE8               	decfsz	wreg,f,c
 11032  0065A4  D7FE               	goto	u10717
 11033                           
 11034                           ;src\delay.c: 88: clock_counter_reference--;
 11035  0065A6  0100               	movlb	0	; () banked
 11036  0065A8  07E0               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 11037  0065AA  A0D8               	btfss	status,0,c
 11038  0065AC  07E1               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 11039  0065AE                     l569:
 11040  0065AE  0100               	movlb	0	; () banked
 11041  0065B0  51E0               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 11042  0065B2  0100               	movlb	0	; () banked
 11043  0065B4  11E1               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 11044  0065B6  B4D8               	btfsc	status,2,c
 11045  0065B8  0012               	return	
 11046  0065BA  D7F2               	goto	l7574
 11047  0065BC                     __end_of_delay_ms:
 11048                           	opt stack 0
 11049                           tblptru	equ	0xFF8
 11050                           tblptrh	equ	0xFF7
 11051                           tblptrl	equ	0xFF6
 11052                           tablat	equ	0xFF5
 11053                           prodh	equ	0xFF4
 11054                           prodl	equ	0xFF3
 11055                           postinc0	equ	0xFEE
 11056                           wreg	equ	0xFE8
 11057                           postdec1	equ	0xFE5
 11058                           fsr1l	equ	0xFE1
 11059                           indf2	equ	0xFDF
 11060                           postinc2	equ	0xFDE
 11061                           postdec2	equ	0xFDD
 11062                           fsr2h	equ	0xFDA
 11063                           fsr2l	equ	0xFD9
 11064                           status	equ	0xFD8
 11065                           
 11066 ;; *************** function ___wmul *****************
 11067 ;; Defined at:
 11068 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 11069 ;; Parameters:    Size  Location     Type
 11070 ;;  multiplier      2   23[BANK0 ] unsigned int 
 11071 ;;  multiplicand    2   25[BANK0 ] unsigned int 
 11072 ;; Auto vars:     Size  Location     Type
 11073 ;;  product         2   27[BANK0 ] unsigned int 
 11074 ;; Return value:  Size  Location     Type
 11075 ;;                  2   23[BANK0 ] unsigned int 
 11076 ;; Registers used:
 11077 ;;		wreg, status,2, status,0, prodl, prodh
 11078 ;; Tracked objects:
 11079 ;;		On entry : 0/0
 11080 ;;		On exit  : 0/0
 11081 ;;		Unchanged: 0/0
 11082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11083 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11084 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11086 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11087 ;;Total ram usage:        6 bytes
 11088 ;; Hardware stack levels used:    1
 11089 ;; Hardware stack levels required when called:    4
 11090 ;; This function calls:
 11091 ;;		Nothing
 11092 ;; This function is called by:
 11093 ;;		_delay_ms
 11094 ;; This function uses a non-reentrant model
 11095 ;;
 11096                           
 11097                           	psect	text28
 11098  0065F4                     __ptext28:
 11099                           	opt stack 0
 11100  0065F4                     ___wmul:
 11101                           	opt stack 23
 11102                           
 11103                           ; BSR set to: 0
 11104                           ;incstack = 0
 11105  0065F4  0100               	movlb	0	; () banked
 11106  0065F6  5177               	movf	___wmul@multiplier& (0+255),w,b
 11107  0065F8  0100               	movlb	0	; () banked
 11108  0065FA  0379               	mulwf	___wmul@multiplicand& (0+255),b
 11109  0065FC  CFF3 F07B          	movff	prodl,___wmul@product
 11110  006600  CFF4 F07C          	movff	prodh,___wmul@product+1
 11111  006604  0100               	movlb	0	; () banked
 11112  006606  5177               	movf	___wmul@multiplier& (0+255),w,b
 11113  006608  0100               	movlb	0	; () banked
 11114  00660A  037A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11115  00660C  50F3               	movf	prodl,w,c
 11116  00660E  0100               	movlb	0	; () banked
 11117  006610  277C               	addwf	(___wmul@product+1)& (0+255),f,b
 11118  006612  0100               	movlb	0	; () banked
 11119  006614  5178               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11120  006616  0100               	movlb	0	; () banked
 11121  006618  0379               	mulwf	___wmul@multiplicand& (0+255),b
 11122  00661A  50F3               	movf	prodl,w,c
 11123  00661C  0100               	movlb	0	; () banked
 11124  00661E  277C               	addwf	(___wmul@product+1)& (0+255),f,b
 11125                           
 11126                           ; BSR set to: 0
 11127  006620  C07B  F077         	movff	___wmul@product,?___wmul
 11128  006624  C07C  F078         	movff	___wmul@product+1,?___wmul+1
 11129  006628  0012               	return	
 11130  00662A                     __end_of___wmul:
 11131                           	opt stack 0
 11132                           tblptru	equ	0xFF8
 11133                           tblptrh	equ	0xFF7
 11134                           tblptrl	equ	0xFF6
 11135                           tablat	equ	0xFF5
 11136                           prodh	equ	0xFF4
 11137                           prodl	equ	0xFF3
 11138                           postinc0	equ	0xFEE
 11139                           wreg	equ	0xFE8
 11140                           postdec1	equ	0xFE5
 11141                           fsr1l	equ	0xFE1
 11142                           indf2	equ	0xFDF
 11143                           postinc2	equ	0xFDE
 11144                           postdec2	equ	0xFDD
 11145                           fsr2h	equ	0xFDA
 11146                           fsr2l	equ	0xFD9
 11147                           status	equ	0xFD8
 11148                           
 11149 ;; *************** function _configurations *****************
 11150 ;; Defined at:
 11151 ;;		line 489 in file "parcheggio.c"
 11152 ;; Parameters:    Size  Location     Type
 11153 ;;		None
 11154 ;; Auto vars:     Size  Location     Type
 11155 ;;		None
 11156 ;; Return value:  Size  Location     Type
 11157 ;;		None               void
 11158 ;; Registers used:
 11159 ;;		wreg, status,2, status,0, cstack
 11160 ;; Tracked objects:
 11161 ;;		On entry : 0/0
 11162 ;;		On exit  : 0/0
 11163 ;;		Unchanged: 0/0
 11164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11169 ;;Total ram usage:        0 bytes
 11170 ;; Hardware stack levels used:    1
 11171 ;; Hardware stack levels required when called:    6
 11172 ;; This function calls:
 11173 ;;		_CANInitialize
 11174 ;; This function is called by:
 11175 ;;		_main
 11176 ;; This function uses a non-reentrant model
 11177 ;;
 11178                           
 11179                           	psect	text29
 11180  00643E                     __ptext29:
 11181                           	opt stack 0
 11182  00643E                     _configurations:
 11183                           	opt stack 24
 11184                           
 11185                           ;parcheggio.c: 490: LATA = 0x00;
 11186                           
 11187                           ; BSR set to: 0
 11188                           ;incstack = 0
 11189  00643E  0E00               	movlw	0
 11190  006440  6E89               	movwf	3977,c	;volatile
 11191                           
 11192                           ;parcheggio.c: 491: TRISA = 0b11110000;
 11193  006442  0EF0               	movlw	240
 11194  006444  6E92               	movwf	3986,c	;volatile
 11195                           
 11196                           ;parcheggio.c: 492: LATB = 0x00;
 11197  006446  0E00               	movlw	0
 11198  006448  6E8A               	movwf	3978,c	;volatile
 11199                           
 11200                           ;parcheggio.c: 493: TRISB = 0b10001010;
 11201  00644A  0E8A               	movlw	138
 11202  00644C  6E93               	movwf	3987,c	;volatile
 11203                           
 11204                           ;parcheggio.c: 494: LATC = 0x00;
 11205  00644E  0E00               	movlw	0
 11206  006450  6E8B               	movwf	3979,c	;volatile
 11207                           
 11208                           ;parcheggio.c: 495: TRISC = 0b11111111;
 11209  006452  6894               	setf	3988,c	;volatile
 11210                           
 11211                           ;parcheggio.c: 497: ADCON1 = 0xFF;
 11212  006454  68C1               	setf	4033,c	;volatile
 11213                           
 11214                           ;parcheggio.c: 498: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG
      +                          _SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
 11215  006456  0E06               	movlw	6
 11216  006458  0100               	movlb	0	; () banked
 11217  00645A  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 11218  00645C  0E05               	movlw	5
 11219  00645E  0100               	movlb	0	; () banked
 11220  006460  6F86               	movwf	CANInitialize@phaseSeg2& (0+255),b
 11221  006462  0E01               	movlw	1
 11222  006464  0100               	movlb	0	; () banked
 11223  006466  6F87               	movwf	CANInitialize@SJW& (0+255),b
 11224  006468  0E03               	movlw	3
 11225  00646A  0100               	movlb	0	; () banked
 11226  00646C  6F88               	movwf	CANInitialize@BRP& (0+255),b
 11227  00646E  0E9D               	movlw	157
 11228  006470  0100               	movlb	0	; () banked
 11229  006472  6F89               	movwf	CANInitialize@flags& (0+255),b
 11230  006474  0E04               	movlw	4
 11231  006476  EC45  F02C         	call	_CANInitialize
 11232                           
 11233                           ;parcheggio.c: 501: RCONbits.IPEN = 1;
 11234  00647A  8ED0               	bsf	4048,7,c	;volatile
 11235                           
 11236                           ;parcheggio.c: 502: IPR3bits.RXB1IP = 0;
 11237  00647C  92A5               	bcf	4005,1,c	;volatile
 11238                           
 11239                           ;parcheggio.c: 503: IPR3bits.RXB0IP = 0;
 11240  00647E  90A5               	bcf	4005,0,c	;volatile
 11241                           
 11242                           ;parcheggio.c: 504: INTCON2bits.TMR0IP = 0;
 11243  006480  94F1               	bcf	intcon2,2,c	;volatile
 11244                           
 11245                           ;parcheggio.c: 507: PIR3bits.RXB1IF = 0;
 11246  006482  92A4               	bcf	4004,1,c	;volatile
 11247                           
 11248                           ;parcheggio.c: 508: PIR3bits.RXB0IF = 0;
 11249  006484  90A4               	bcf	4004,0,c	;volatile
 11250                           
 11251                           ;parcheggio.c: 509: INTCONbits.INT0IF = 0;
 11252  006486  92F2               	bcf	intcon,1,c	;volatile
 11253                           
 11254                           ;parcheggio.c: 510: INTCONbits.TMR0IF = 0;
 11255  006488  94F2               	bcf	intcon,2,c	;volatile
 11256                           
 11257                           ;parcheggio.c: 514: PIE3bits.RXB1IE = 1;
 11258  00648A  82A3               	bsf	4003,1,c	;volatile
 11259                           
 11260                           ;parcheggio.c: 515: PIE3bits.RXB0IE = 1;
 11261  00648C  80A3               	bsf	4003,0,c	;volatile
 11262                           
 11263                           ;parcheggio.c: 516: INTCONbits.TMR0IE = 1;
 11264  00648E  8AF2               	bsf	intcon,5,c	;volatile
 11265                           
 11266                           ;parcheggio.c: 517: INTCONbits.INT0IE = 0;
 11267  006490  98F2               	bcf	intcon,4,c	;volatile
 11268                           
 11269                           ;parcheggio.c: 520: T0CON = 0x80;
 11270  006492  0E80               	movlw	128
 11271  006494  6ED5               	movwf	4053,c	;volatile
 11272                           
 11273                           ;parcheggio.c: 521: TMR0H = 0x34;
 11274  006496  0E34               	movlw	52
 11275  006498  6ED7               	movwf	4055,c	;volatile
 11276                           
 11277                           ;parcheggio.c: 522: TMR0L = 0xE0;
 11278  00649A  0EE0               	movlw	224
 11279  00649C  6ED6               	movwf	4054,c	;volatile
 11280                           
 11281                           ;parcheggio.c: 523: T3CON = 0x11;
 11282  00649E  0E11               	movlw	17
 11283  0064A0  6EB1               	movwf	4017,c	;volatile
 11284                           
 11285                           ;parcheggio.c: 525: INTCON2bits.INTEDG0 = 1;
 11286  0064A2  8CF1               	bsf	intcon2,6,c	;volatile
 11287                           
 11288                           ;parcheggio.c: 526: INTCONbits.GIEL = 1;
 11289  0064A4  8CF2               	bsf	intcon,6,c	;volatile
 11290                           
 11291                           ;parcheggio.c: 527: INTCONbits.GIEH = 1;
 11292  0064A6  8EF2               	bsf	intcon,7,c	;volatile
 11293  0064A8  0012               	return		;funcret
 11294  0064AA                     __end_of_configurations:
 11295                           	opt stack 0
 11296                           tblptru	equ	0xFF8
 11297                           tblptrh	equ	0xFF7
 11298                           tblptrl	equ	0xFF6
 11299                           tablat	equ	0xFF5
 11300                           prodh	equ	0xFF4
 11301                           prodl	equ	0xFF3
 11302                           intcon	equ	0xFF2
 11303                           intcon2	equ	0xFF1
 11304                           postinc0	equ	0xFEE
 11305                           wreg	equ	0xFE8
 11306                           postdec1	equ	0xFE5
 11307                           fsr1l	equ	0xFE1
 11308                           indf2	equ	0xFDF
 11309                           postinc2	equ	0xFDE
 11310                           postdec2	equ	0xFDD
 11311                           fsr2h	equ	0xFDA
 11312                           fsr2l	equ	0xFD9
 11313                           status	equ	0xFD8
 11314                           
 11315 ;; *************** function _CANInitialize *****************
 11316 ;; Defined at:
 11317 ;;		line 218 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 11318 ;; Parameters:    Size  Location     Type
 11319 ;;  propSeg         1    wreg     unsigned char 
 11320 ;;  phaseSeg1       1   37[BANK0 ] unsigned char 
 11321 ;;  phaseSeg2       1   38[BANK0 ] unsigned char 
 11322 ;;  SJW             1   39[BANK0 ] unsigned char 
 11323 ;;  BRP             1   40[BANK0 ] unsigned char 
 11324 ;;  flags           1   41[BANK0 ] enum E16313
 11325 ;; Auto vars:     Size  Location     Type
 11326 ;;  propSeg         1   46[BANK0 ] unsigned char 
 11327 ;;  FilterConfig    1   48[BANK0 ] unsigned char 
 11328 ;;  FilterConfig    1   47[BANK0 ] unsigned char 
 11329 ;; Return value:  Size  Location     Type
 11330 ;;		None               void
 11331 ;; Registers used:
 11332 ;;		wreg, status,2, status,0, cstack
 11333 ;; Tracked objects:
 11334 ;;		On entry : 0/0
 11335 ;;		On exit  : 0/0
 11336 ;;		Unchanged: 0/0
 11337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11338 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11339 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11340 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11341 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11342 ;;Total ram usage:       12 bytes
 11343 ;; Hardware stack levels used:    1
 11344 ;; Hardware stack levels required when called:    5
 11345 ;; This function calls:
 11346 ;;		_CANOperationMode
 11347 ;;		_CANSetFilter
 11348 ;;		_CANSetMask
 11349 ;; This function is called by:
 11350 ;;		_configurations
 11351 ;; This function uses a non-reentrant model
 11352 ;;
 11353                           
 11354                           	psect	text30
 11355  00588A                     __ptext30:
 11356                           	opt stack 0
 11357  00588A                     _CANInitialize:
 11358                           	opt stack 24
 11359                           
 11360                           ;incstack = 0
 11361                           ;CANInitialize@propSeg stored from wreg
 11362  00588A  0100               	movlb	0	; () banked
 11363  00588C  6F8E               	movwf	CANInitialize@propSeg& (0+255),b
 11364                           
 11365                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
 11366                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
 11367                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
 11368  00588E  0E80               	movlw	128
 11369  005890  EC62  F033         	call	_CANOperationMode
 11370                           
 11371                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
 11372  005894  0E00               	movlw	0
 11373  005896  6E70               	movwf	3952,c	;volatile
 11374                           
 11375                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
 11376  005898  0E00               	movlw	0
 11377  00589A  6E71               	movwf	3953,c	;volatile
 11378                           
 11379                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
 11380  00589C  0E00               	movlw	0
 11381  00589E  6E72               	movwf	3954,c	;volatile
 11382                           
 11383                           ;inc\CANlib.h: 229: SJW= SJW << 6;
 11384  0058A0  0100               	movlb	0	; () banked
 11385  0058A2  4187               	rrncf	CANInitialize@SJW& (0+255),w,b
 11386  0058A4  42E8               	rrncf	wreg,f,c
 11387  0058A6  0BC0               	andlw	192
 11388  0058A8  0100               	movlb	0	; () banked
 11389  0058AA  6F87               	movwf	CANInitialize@SJW& (0+255),b
 11390                           
 11391                           ; BSR set to: 0
 11392                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
 11393  0058AC  0100               	movlb	0	; () banked
 11394  0058AE  5187               	movf	CANInitialize@SJW& (0+255),w,b
 11395  0058B0  1270               	iorwf	3952,f,c	;volatile
 11396                           
 11397                           ; BSR set to: 0
 11398                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
 11399  0058B2  0100               	movlb	0	; () banked
 11400  0058B4  5188               	movf	CANInitialize@BRP& (0+255),w,b
 11401  0058B6  1270               	iorwf	3952,f,c	;volatile
 11402                           
 11403                           ; BSR set to: 0
 11404                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
 11405  0058B8  0100               	movlb	0	; () banked
 11406  0058BA  518E               	movf	CANInitialize@propSeg& (0+255),w,b
 11407  0058BC  1271               	iorwf	3953,f,c	;volatile
 11408                           
 11409                           ; BSR set to: 0
 11410                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
 11411  0058BE  0100               	movlb	0	; () banked
 11412  0058C0  3985               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
 11413  0058C2  42E8               	rrncf	wreg,f,c
 11414  0058C4  0BF8               	andlw	248
 11415  0058C6  0100               	movlb	0	; () banked
 11416  0058C8  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 11417                           
 11418                           ; BSR set to: 0
 11419                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
 11420  0058CA  0100               	movlb	0	; () banked
 11421  0058CC  5185               	movf	CANInitialize@phaseSeg1& (0+255),w,b
 11422  0058CE  1271               	iorwf	3953,f,c	;volatile
 11423                           
 11424                           ; BSR set to: 0
 11425                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
 11426  0058D0  0100               	movlb	0	; () banked
 11427  0058D2  A589               	btfss	CANInitialize@flags& (0+255),2,b
 11428                           
 11429                           ; BSR set to: 0
 11430                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
 11431  0058D4  8C71               	bsf	3953,6,c	;volatile
 11432                           
 11433                           ; BSR set to: 0
 11434                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
 11435  0058D6  0100               	movlb	0	; () banked
 11436  0058D8  B189               	btfsc	CANInitialize@flags& (0+255),0,b
 11437                           
 11438                           ; BSR set to: 0
 11439                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
 11440  0058DA  8E71               	bsf	3953,7,c	;volatile
 11441                           
 11442                           ; BSR set to: 0
 11443                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
 11444                           
 11445                           ; BSR set to: 0
 11446  0058DC  0100               	movlb	0	; () banked
 11447  0058DE  5186               	movf	CANInitialize@phaseSeg2& (0+255),w,b
 11448  0058E0  1272               	iorwf	3954,f,c	;volatile
 11449                           
 11450                           ; BSR set to: 0
 11451                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
 11452  0058E2  0100               	movlb	0	; () banked
 11453  0058E4  B389               	btfsc	CANInitialize@flags& (0+255),1,b
 11454                           
 11455                           ; BSR set to: 0
 11456                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
 11457  0058E6  8C72               	bsf	3954,6,c	;volatile
 11458                           
 11459                           ; BSR set to: 0
 11460                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
 11461                           
 11462                           ; BSR set to: 0
 11463  0058E8  0100               	movlb	0	; () banked
 11464  0058EA  5189               	movf	CANInitialize@flags& (0+255),w,b
 11465  0058EC  0B60               	andlw	96
 11466  0058EE  6E60               	movwf	3936,c	;volatile
 11467                           
 11468                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
 11469  0058F0  0100               	movlb	0	; () banked
 11470  0058F2  5189               	movf	CANInitialize@flags& (0+255),w,b
 11471  0058F4  0B10               	andlw	16
 11472  0058F6  0AFF               	xorlw	255
 11473  0058F8  B4D8               	btfsc	status,2,c
 11474                           
 11475                           ; BSR set to: 0
 11476                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
 11477  0058FA  8460               	bsf	3936,2,c	;volatile
 11478                           
 11479                           ; BSR set to: 0
 11480                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
 11481  0058FC  CF60 FF50          	movff	3936,3920	;volatile
 11482                           
 11483                           ; BSR set to: 0
 11484                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
 11485  005900  0E00               	movlw	0
 11486  005902  0100               	movlb	0	; () banked
 11487  005904  6F77               	movwf	CANSetMask@mask& (0+255),b
 11488  005906  0E00               	movlw	0
 11489  005908  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 11490  00590A  0E00               	movlw	0
 11491  00590C  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 11492  00590E  0E00               	movlw	0
 11493  005910  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 11494  005912  0EF7               	movlw	247
 11495  005914  0100               	movlb	0	; () banked
 11496  005916  6F7B               	movwf	CANSetMask@type& (0+255),b
 11497  005918  0E01               	movlw	1
 11498  00591A  EC39  F023         	call	_CANSetMask
 11499                           
 11500                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
 11501  00591E  0E00               	movlw	0
 11502  005920  0100               	movlb	0	; () banked
 11503  005922  6F77               	movwf	CANSetMask@mask& (0+255),b
 11504  005924  0E00               	movlw	0
 11505  005926  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 11506  005928  0E00               	movlw	0
 11507  00592A  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 11508  00592C  0E00               	movlw	0
 11509  00592E  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 11510  005930  0EF7               	movlw	247
 11511  005932  0100               	movlb	0	; () banked
 11512  005934  6F7B               	movwf	CANSetMask@type& (0+255),b
 11513  005936  0E02               	movlw	2
 11514  005938  EC39  F023         	call	_CANSetMask
 11515                           
 11516                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
 11517  00593C  D00F               	goto	l7706
 11518  00593E                     l7700:
 11519                           
 11520                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
 11521  00593E  0EF7               	movlw	247
 11522  005940  0100               	movlb	0	; () banked
 11523  005942  6F8F               	movwf	CANInitialize@FilterConfig1& (0+255),b
 11524  005944  D007               	goto	l7702
 11525  005946                     l358:
 11526                           
 11527                           ; BSR set to: 0
 11528                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
 11529  005946  0100               	movlb	0	; () banked
 11530  005948  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 11531                           
 11532                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
 11533  00594A  0100               	movlb	0	; () banked
 11534  00594C  6990               	setf	CANInitialize@FilterConfig2& (0+255),b
 11535                           
 11536                           ;inc\CANlib.h: 273: break;
 11537  00594E  D028               	goto	l7708
 11538  005950                     l359:
 11539                           
 11540                           ; BSR set to: 0
 11541                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
 11542  005950  0100               	movlb	0	; () banked
 11543  005952  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 11544  005954                     l7702:
 11545                           
 11546                           ; BSR set to: 0
 11547                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
 11548  005954  0EF7               	movlw	247
 11549  005956  0100               	movlb	0	; () banked
 11550  005958  6F90               	movwf	CANInitialize@FilterConfig2& (0+255),b
 11551                           
 11552                           ; BSR set to: 0
 11553                           ;inc\CANlib.h: 278: }
 11554                           
 11555                           ;inc\CANlib.h: 277: break;
 11556  00595A  D022               	goto	l7708
 11557  00595C                     l7706:
 11558  00595C  0E9F               	movlw	159
 11559  00595E  0100               	movlb	0	; () banked
 11560  005960  6F8A               	movwf	??_CANInitialize& (0+255),b
 11561  005962  0EFF               	movlw	255
 11562  005964  0100               	movlb	0	; () banked
 11563  005966  6F8B               	movwf	(??_CANInitialize+1)& (0+255),b
 11564  005968  0100               	movlb	0	; () banked
 11565  00596A  5189               	movf	CANInitialize@flags& (0+255),w,b
 11566  00596C  0B60               	andlw	96
 11567  00596E  0100               	movlb	0	; () banked
 11568  005970  6F8C               	movwf	(??_CANInitialize+2)& (0+255),b
 11569  005972  6B8D               	clrf	(??_CANInitialize+3)& (0+255),b
 11570  005974  0100               	movlb	0	; () banked
 11571  005976  518A               	movf	??_CANInitialize& (0+255),w,b
 11572  005978  0100               	movlb	0	; () banked
 11573  00597A  138C               	iorwf	(??_CANInitialize+2)& (0+255),f,b
 11574  00597C  0100               	movlb	0	; () banked
 11575  00597E  518B               	movf	(??_CANInitialize+1)& (0+255),w,b
 11576  005980  0100               	movlb	0	; () banked
 11577  005982  138D               	iorwf	(??_CANInitialize+3)& (0+255),f,b
 11578                           
 11579                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11580                           ; Switch size 1, requested type "space"
 11581                           ; Number of cases is 1, Range of values is 0 to 0
 11582                           ; switch strategies available:
 11583                           ; Name         Instructions Cycles
 11584                           ; simple_byte            4     3 (average)
 11585                           ;	Chosen strategy is simple_byte
 11586  005984  0100               	movlb	0	; () banked
 11587  005986  518D               	movf	(??_CANInitialize+3)& (0+255),w,b
 11588  005988  0A00               	xorlw	0	; case 0
 11589  00598A  A4D8               	btfss	status,2,c
 11590  00598C  D7E1               	goto	l359
 11591                           
 11592                           ; BSR set to: 0
 11593                           ; Switch size 1, requested type "space"
 11594                           ; Number of cases is 2, Range of values is 191 to 223
 11595                           ; switch strategies available:
 11596                           ; Name         Instructions Cycles
 11597                           ; simple_byte            7     4 (average)
 11598                           ;	Chosen strategy is simple_byte
 11599  00598E  0100               	movlb	0	; () banked
 11600  005990  518C               	movf	(??_CANInitialize+2)& (0+255),w,b
 11601  005992  0ABF               	xorlw	191	; case 191
 11602  005994  B4D8               	btfsc	status,2,c
 11603  005996  D7D7               	goto	l358
 11604  005998  0A60               	xorlw	96	; case 223
 11605  00599A  B4D8               	btfsc	status,2,c
 11606  00599C  D7D0               	goto	l7700
 11607  00599E  D7D8               	goto	l359
 11608  0059A0                     l7708:
 11609                           
 11610                           ; BSR set to: 0
 11611                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
 11612  0059A0  0E00               	movlw	0
 11613  0059A2  0100               	movlb	0	; () banked
 11614  0059A4  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11615  0059A6  0E00               	movlw	0
 11616  0059A8  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11617  0059AA  0E00               	movlw	0
 11618  0059AC  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11619  0059AE  0E00               	movlw	0
 11620  0059B0  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11621  0059B2  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11622  0059B6  0E00               	movlw	0
 11623  0059B8  ECA9  F006         	call	_CANSetFilter
 11624                           
 11625                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
 11626  0059BC  0E00               	movlw	0
 11627  0059BE  0100               	movlb	0	; () banked
 11628  0059C0  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11629  0059C2  0E00               	movlw	0
 11630  0059C4  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11631  0059C6  0E00               	movlw	0
 11632  0059C8  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11633  0059CA  0E00               	movlw	0
 11634  0059CC  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11635  0059CE  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11636  0059D2  0E01               	movlw	1
 11637  0059D4  ECA9  F006         	call	_CANSetFilter
 11638                           
 11639                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
 11640  0059D8  0E00               	movlw	0
 11641  0059DA  0100               	movlb	0	; () banked
 11642  0059DC  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11643  0059DE  0E00               	movlw	0
 11644  0059E0  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11645  0059E2  0E00               	movlw	0
 11646  0059E4  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11647  0059E6  0E00               	movlw	0
 11648  0059E8  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11649  0059EA  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11650  0059EE  0E02               	movlw	2
 11651  0059F0  ECA9  F006         	call	_CANSetFilter
 11652                           
 11653                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
 11654  0059F4  0E00               	movlw	0
 11655  0059F6  0100               	movlb	0	; () banked
 11656  0059F8  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11657  0059FA  0E00               	movlw	0
 11658  0059FC  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11659  0059FE  0E00               	movlw	0
 11660  005A00  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11661  005A02  0E00               	movlw	0
 11662  005A04  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11663  005A06  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11664  005A0A  0E03               	movlw	3
 11665  005A0C  ECA9  F006         	call	_CANSetFilter
 11666                           
 11667                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
 11668  005A10  0E00               	movlw	0
 11669  005A12  0100               	movlb	0	; () banked
 11670  005A14  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11671  005A16  0E00               	movlw	0
 11672  005A18  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11673  005A1A  0E00               	movlw	0
 11674  005A1C  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11675  005A1E  0E00               	movlw	0
 11676  005A20  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11677  005A22  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11678  005A26  0E04               	movlw	4
 11679  005A28  ECA9  F006         	call	_CANSetFilter
 11680                           
 11681                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
 11682  005A2C  0E00               	movlw	0
 11683  005A2E  0100               	movlb	0	; () banked
 11684  005A30  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11685  005A32  0E00               	movlw	0
 11686  005A34  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11687  005A36  0E00               	movlw	0
 11688  005A38  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11689  005A3A  0E00               	movlw	0
 11690  005A3C  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11691  005A3E  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11692  005A42  0E05               	movlw	5
 11693  005A44  ECA9  F006         	call	_CANSetFilter
 11694                           
 11695                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
 11696  005A48  0E00               	movlw	0
 11697  005A4A  EC62  F033         	call	_CANOperationMode
 11698  005A4E  0012               	return		;funcret
 11699  005A50                     __end_of_CANInitialize:
 11700                           	opt stack 0
 11701                           tblptru	equ	0xFF8
 11702                           tblptrh	equ	0xFF7
 11703                           tblptrl	equ	0xFF6
 11704                           tablat	equ	0xFF5
 11705                           prodh	equ	0xFF4
 11706                           prodl	equ	0xFF3
 11707                           intcon	equ	0xFF2
 11708                           intcon2	equ	0xFF1
 11709                           postinc0	equ	0xFEE
 11710                           wreg	equ	0xFE8
 11711                           postdec1	equ	0xFE5
 11712                           fsr1l	equ	0xFE1
 11713                           indf2	equ	0xFDF
 11714                           postinc2	equ	0xFDE
 11715                           postdec2	equ	0xFDD
 11716                           fsr2h	equ	0xFDA
 11717                           fsr2l	equ	0xFD9
 11718                           status	equ	0xFD8
 11719                           
 11720 ;; *************** function _CANSetMask *****************
 11721 ;; Defined at:
 11722 ;;		line 640 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 11723 ;; Parameters:    Size  Location     Type
 11724 ;;  numBuffer       1    wreg     enum E16347
 11725 ;;  mask            4   23[BANK0 ] unsigned long 
 11726 ;;  type            1   27[BANK0 ] enum E16313
 11727 ;; Auto vars:     Size  Location     Type
 11728 ;;  numBuffer       1   32[BANK0 ] enum E16347
 11729 ;;  tamp            4   33[BANK0 ] unsigned long 
 11730 ;; Return value:  Size  Location     Type
 11731 ;;		None               void
 11732 ;; Registers used:
 11733 ;;		wreg, status,2, status,0
 11734 ;; Tracked objects:
 11735 ;;		On entry : 0/0
 11736 ;;		On exit  : 0/0
 11737 ;;		Unchanged: 0/0
 11738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11739 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11740 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11741 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11742 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11743 ;;Total ram usage:       14 bytes
 11744 ;; Hardware stack levels used:    1
 11745 ;; Hardware stack levels required when called:    4
 11746 ;; This function calls:
 11747 ;;		Nothing
 11748 ;; This function is called by:
 11749 ;;		_CANInitialize
 11750 ;; This function uses a non-reentrant model
 11751 ;;
 11752                           
 11753                           	psect	text31
 11754  004672                     __ptext31:
 11755                           	opt stack 0
 11756  004672                     _CANSetMask:
 11757                           	opt stack 24
 11758                           
 11759                           ;incstack = 0
 11760                           ;CANSetMask@numBuffer stored from wreg
 11761  004672  0100               	movlb	0	; () banked
 11762  004674  6F80               	movwf	CANSetMask@numBuffer& (0+255),b
 11763                           
 11764                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
 11765  004676  0100               	movlb	0	; () banked
 11766  004678  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 11767  00467A  A4D8               	btfss	status,2,c
 11768  00467C  D056               	goto	l5258
 11769                           
 11770                           ; BSR set to: 0
 11771  00467E  0100               	movlb	0	; () banked
 11772  004680  297B               	incf	CANSetMask@type& (0+255),w,b
 11773  004682  A4D8               	btfss	status,2,c
 11774  004684  D052               	goto	l5258
 11775                           
 11776                           ; BSR set to: 0
 11777                           ;inc\CANlib.h: 644: {
 11778                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
 11779  004686  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11780  00468A  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11781  00468E  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11782  004692  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11783  004696  0E04               	movlw	4
 11784  004698  D006               	goto	u6150
 11785  00469A                     u6155:
 11786  00469A  0100               	movlb	0	; () banked
 11787  00469C  90D8               	bcf	status,0,c
 11788  00469E  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11789  0046A0  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11790  0046A2  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11791  0046A4  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11792  0046A6                     u6150:
 11793  0046A6  2EE8               	decfsz	wreg,f,c
 11794  0046A8  D7F8               	goto	u6155
 11795  0046AA  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11796  0046AE  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11797  0046B2  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11798  0046B6  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11799                           
 11800                           ; BSR set to: 0
 11801                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
 11802  0046BA  0100               	movlb	0	; () banked
 11803  0046BC  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11804  0046BE  0100               	movlb	0	; () banked
 11805  0046C0  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11806  0046C2  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11807  0046C4  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11808  0046C6  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11809                           
 11810                           ; BSR set to: 0
 11811                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
 11812  0046C8  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 11813                           
 11814                           ; BSR set to: 0
 11815                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
 11816  0046CC  0E07               	movlw	7
 11817  0046CE  0100               	movlb	0	; () banked
 11818  0046D0  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11819  0046D2  0100               	movlb	0	; () banked
 11820  0046D4  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11821  0046D6  0E00               	movlw	0
 11822  0046D8  0100               	movlb	0	; () banked
 11823  0046DA  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11824  0046DC  0100               	movlb	0	; () banked
 11825  0046DE  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11826  0046E0  0E00               	movlw	0
 11827  0046E2  0100               	movlb	0	; () banked
 11828  0046E4  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11829  0046E6  0100               	movlb	0	; () banked
 11830  0046E8  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11831  0046EA  0E00               	movlw	0
 11832  0046EC  0100               	movlb	0	; () banked
 11833  0046EE  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11834  0046F0  0100               	movlb	0	; () banked
 11835  0046F2  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11836                           
 11837                           ; BSR set to: 0
 11838                           ;inc\CANlib.h: 650: tamp = tamp << 5;
 11839  0046F4  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11840  0046F8  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11841  0046FC  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11842  004700  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11843  004704  0E05               	movlw	5
 11844  004706                     u6165:
 11845  004706  90D8               	bcf	status,0,c
 11846  004708  0100               	movlb	0	; () banked
 11847  00470A  377C               	rlcf	??_CANSetMask& (0+255),f,b
 11848  00470C  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 11849  00470E  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 11850  004710  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 11851  004712  2EE8               	decfsz	wreg,f,c
 11852  004714  D7F8               	goto	u6165
 11853  004716  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11854  00471A  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11855  00471E  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11856  004722  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11857                           
 11858                           ; BSR set to: 0
 11859                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
 11860  004726  C081  FF19         	movff	CANSetMask@tamp,3865	;volatile
 11861  00472A                     l5258:
 11862                           
 11863                           ; BSR set to: 0
 11864                           ;inc\CANlib.h: 652: }
 11865                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
 11866  00472A  0E02               	movlw	2
 11867  00472C  0100               	movlb	0	; () banked
 11868  00472E  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 11869  004730  A4D8               	btfss	status,2,c
 11870  004732  D056               	goto	l5274
 11871                           
 11872                           ; BSR set to: 0
 11873  004734  0100               	movlb	0	; () banked
 11874  004736  297B               	incf	CANSetMask@type& (0+255),w,b
 11875  004738  A4D8               	btfss	status,2,c
 11876  00473A  D052               	goto	l5274
 11877                           
 11878                           ; BSR set to: 0
 11879                           ;inc\CANlib.h: 655: {
 11880                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
 11881  00473C  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11882  004740  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11883  004744  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11884  004748  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11885  00474C  0E04               	movlw	4
 11886  00474E  D006               	goto	u6190
 11887  004750                     u6195:
 11888  004750  0100               	movlb	0	; () banked
 11889  004752  90D8               	bcf	status,0,c
 11890  004754  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11891  004756  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11892  004758  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11893  00475A  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11894  00475C                     u6190:
 11895  00475C  2EE8               	decfsz	wreg,f,c
 11896  00475E  D7F8               	goto	u6195
 11897  004760  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11898  004764  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11899  004768  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11900  00476C  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11901                           
 11902                           ; BSR set to: 0
 11903                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
 11904  004770  0100               	movlb	0	; () banked
 11905  004772  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11906  004774  0100               	movlb	0	; () banked
 11907  004776  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11908  004778  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11909  00477A  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11910  00477C  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11911                           
 11912                           ; BSR set to: 0
 11913                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
 11914  00477E  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 11915                           
 11916                           ; BSR set to: 0
 11917                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
 11918  004782  0E07               	movlw	7
 11919  004784  0100               	movlb	0	; () banked
 11920  004786  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11921  004788  0100               	movlb	0	; () banked
 11922  00478A  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11923  00478C  0E00               	movlw	0
 11924  00478E  0100               	movlb	0	; () banked
 11925  004790  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11926  004792  0100               	movlb	0	; () banked
 11927  004794  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11928  004796  0E00               	movlw	0
 11929  004798  0100               	movlb	0	; () banked
 11930  00479A  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11931  00479C  0100               	movlb	0	; () banked
 11932  00479E  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11933  0047A0  0E00               	movlw	0
 11934  0047A2  0100               	movlb	0	; () banked
 11935  0047A4  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11936  0047A6  0100               	movlb	0	; () banked
 11937  0047A8  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11938                           
 11939                           ; BSR set to: 0
 11940                           ;inc\CANlib.h: 661: tamp = tamp << 5;
 11941  0047AA  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11942  0047AE  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11943  0047B2  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11944  0047B6  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11945  0047BA  0E05               	movlw	5
 11946  0047BC                     u6205:
 11947  0047BC  90D8               	bcf	status,0,c
 11948  0047BE  0100               	movlb	0	; () banked
 11949  0047C0  377C               	rlcf	??_CANSetMask& (0+255),f,b
 11950  0047C2  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 11951  0047C4  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 11952  0047C6  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 11953  0047C8  2EE8               	decfsz	wreg,f,c
 11954  0047CA  D7F8               	goto	u6205
 11955  0047CC  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11956  0047D0  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11957  0047D4  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11958  0047D8  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11959                           
 11960                           ; BSR set to: 0
 11961                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
 11962  0047DC  C081  FF1D         	movff	CANSetMask@tamp,3869	;volatile
 11963  0047E0                     l5274:
 11964                           
 11965                           ; BSR set to: 0
 11966                           ;inc\CANlib.h: 663: }
 11967                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
 11968  0047E0  0100               	movlb	0	; () banked
 11969  0047E2  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 11970  0047E4  A4D8               	btfss	status,2,c
 11971  0047E6  D087               	goto	l5306
 11972                           
 11973                           ; BSR set to: 0
 11974  0047E8  0EF7               	movlw	247
 11975  0047EA  0100               	movlb	0	; () banked
 11976  0047EC  197B               	xorwf	CANSetMask@type& (0+255),w,b
 11977  0047EE  A4D8               	btfss	status,2,c
 11978  0047F0  D082               	goto	l5306
 11979                           
 11980                           ; BSR set to: 0
 11981                           ;inc\CANlib.h: 666: {
 11982                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
 11983  0047F2  0100               	movlb	0	; () banked
 11984  0047F4  5177               	movf	CANSetMask@mask& (0+255),w,b
 11985  0047F6  0100               	movlb	0	; () banked
 11986  0047F8  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11987  0047FA  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11988  0047FC  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11989  0047FE  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11990                           
 11991                           ; BSR set to: 0
 11992                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
 11993  004800  C081  FF1B         	movff	CANSetMask@tamp,3867	;volatile
 11994                           
 11995                           ; BSR set to: 0
 11996                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
 11997  004804  0E00               	movlw	0
 11998  004806  0100               	movlb	0	; () banked
 11999  004808  1577               	andwf	CANSetMask@mask& (0+255),w,b
 12000  00480A  0100               	movlb	0	; () banked
 12001  00480C  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12002  00480E  0EFF               	movlw	255
 12003  004810  0100               	movlb	0	; () banked
 12004  004812  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 12005  004814  0100               	movlb	0	; () banked
 12006  004816  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 12007  004818  0E00               	movlw	0
 12008  00481A  0100               	movlb	0	; () banked
 12009  00481C  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 12010  00481E  0100               	movlb	0	; () banked
 12011  004820  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 12012  004822  0E00               	movlw	0
 12013  004824  0100               	movlb	0	; () banked
 12014  004826  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 12015  004828  0100               	movlb	0	; () banked
 12016  00482A  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 12017                           
 12018                           ; BSR set to: 0
 12019                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
 12020  00482C  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 12021  004830  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 12022  004834  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 12023  004838  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 12024  00483C  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 12025  004840  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 12026  004844  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 12027  004848  0100               	movlb	0	; () banked
 12028  00484A  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 12029  00484C  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12030  004850  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12031  004854  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12032  004858  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12033                           
 12034                           ; BSR set to: 0
 12035                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
 12036  00485C  C081  FF1A         	movff	CANSetMask@tamp,3866	;volatile
 12037                           
 12038                           ; BSR set to: 0
 12039                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
 12040  004860  0100               	movlb	0	; () banked
 12041  004862  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 12042  004864  D003               	goto	l432
 12043                           
 12044                           ; BSR set to: 0
 12045                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
 12046  004866  010F               	movlb	15	; () banked
 12047  004868  8119               	bsf	25,0,b	;volatile
 12048  00486A  D002               	goto	l433
 12049  00486C                     l432:
 12050                           
 12051                           ; BSR set to: 0
 12052                           ;inc\CANlib.h: 676: else
 12053                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
 12054  00486C  010F               	movlb	15	; () banked
 12055  00486E  9119               	bcf	25,0,b	;volatile
 12056  004870                     l433:
 12057                           
 12058                           ; BSR set to: 15
 12059                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
 12060  004870  0100               	movlb	0	; () banked
 12061  004872  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 12062  004874  D003               	goto	l434
 12063                           
 12064                           ; BSR set to: 0
 12065                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
 12066  004876  010F               	movlb	15	; () banked
 12067  004878  8319               	bsf	25,1,b	;volatile
 12068  00487A  D002               	goto	l435
 12069  00487C                     l434:
 12070                           
 12071                           ; BSR set to: 0
 12072                           ;inc\CANlib.h: 681: else
 12073                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
 12074  00487C  010F               	movlb	15	; () banked
 12075  00487E  9319               	bcf	25,1,b	;volatile
 12076  004880                     l435:
 12077                           
 12078                           ; BSR set to: 15
 12079                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
 12080  004880  0100               	movlb	0	; () banked
 12081  004882  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 12082  004884  D003               	goto	l436
 12083                           
 12084                           ; BSR set to: 0
 12085                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
 12086  004886  010F               	movlb	15	; () banked
 12087  004888  8B19               	bsf	25,5,b	;volatile
 12088  00488A  D002               	goto	l437
 12089  00488C                     l436:
 12090                           
 12091                           ; BSR set to: 0
 12092                           ;inc\CANlib.h: 686: else
 12093                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
 12094  00488C  010F               	movlb	15	; () banked
 12095  00488E  9B19               	bcf	25,5,b	;volatile
 12096  004890                     l437:
 12097                           
 12098                           ; BSR set to: 15
 12099                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
 12100  004890  0100               	movlb	0	; () banked
 12101  004892  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 12102  004894  D003               	goto	l438
 12103                           
 12104                           ; BSR set to: 0
 12105                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
 12106  004896  010F               	movlb	15	; () banked
 12107  004898  8D19               	bsf	25,6,b	;volatile
 12108  00489A  D002               	goto	l439
 12109  00489C                     l438:
 12110                           
 12111                           ; BSR set to: 0
 12112                           ;inc\CANlib.h: 691: else
 12113                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
 12114  00489C  010F               	movlb	15	; () banked
 12115  00489E  9D19               	bcf	25,6,b	;volatile
 12116  0048A0                     l439:
 12117                           
 12118                           ; BSR set to: 15
 12119                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
 12120  0048A0  0100               	movlb	0	; () banked
 12121  0048A2  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 12122  0048A4  D003               	goto	l440
 12123                           
 12124                           ; BSR set to: 0
 12125                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
 12126  0048A6  010F               	movlb	15	; () banked
 12127  0048A8  8F19               	bsf	25,7,b	;volatile
 12128  0048AA  D002               	goto	l5300
 12129  0048AC                     l440:
 12130                           
 12131                           ; BSR set to: 0
 12132                           ;inc\CANlib.h: 696: else
 12133                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
 12134  0048AC  010F               	movlb	15	; () banked
 12135  0048AE  9F19               	bcf	25,7,b	;volatile
 12136  0048B0                     l5300:
 12137                           
 12138                           ; BSR set to: 15
 12139                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
 12140  0048B0  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 12141  0048B4  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 12142  0048B8  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 12143  0048BC  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 12144  0048C0  0E16               	movlw	22
 12145  0048C2  D006               	goto	u6280
 12146  0048C4                     u6285:
 12147  0048C4  0100               	movlb	0	; () banked
 12148  0048C6  90D8               	bcf	status,0,c
 12149  0048C8  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 12150  0048CA  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 12151  0048CC  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 12152  0048CE  337C               	rrcf	??_CANSetMask& (0+255),f,b
 12153  0048D0                     u6280:
 12154  0048D0  2EE8               	decfsz	wreg,f,c
 12155  0048D2  D7F8               	goto	u6285
 12156  0048D4  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12157  0048D8  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12158  0048DC  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12159  0048E0  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12160                           
 12161                           ; BSR set to: 0
 12162                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
 12163  0048E4  0100               	movlb	0	; () banked
 12164  0048E6  5181               	movf	CANSetMask@tamp& (0+255),w,b
 12165  0048E8  0100               	movlb	0	; () banked
 12166  0048EA  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12167  0048EC  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12168  0048EE  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12169  0048F0  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12170                           
 12171                           ; BSR set to: 0
 12172                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
 12173  0048F2  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 12174  0048F6                     l5306:
 12175                           
 12176                           ; BSR set to: 0
 12177                           ;inc\CANlib.h: 702: }
 12178                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
 12179  0048F6  0E02               	movlw	2
 12180  0048F8  0100               	movlb	0	; () banked
 12181  0048FA  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 12182  0048FC  A4D8               	btfss	status,2,c
 12183  0048FE  0012               	return	
 12184                           
 12185                           ; BSR set to: 0
 12186  004900  0EF7               	movlw	247
 12187  004902  0100               	movlb	0	; () banked
 12188  004904  197B               	xorwf	CANSetMask@type& (0+255),w,b
 12189  004906  A4D8               	btfss	status,2,c
 12190  004908  0012               	return	
 12191                           
 12192                           ; BSR set to: 0
 12193                           ;inc\CANlib.h: 705: {
 12194                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
 12195  00490A  0100               	movlb	0	; () banked
 12196  00490C  5177               	movf	CANSetMask@mask& (0+255),w,b
 12197  00490E  0100               	movlb	0	; () banked
 12198  004910  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12199  004912  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12200  004914  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12201  004916  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12202                           
 12203                           ; BSR set to: 0
 12204                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
 12205  004918  C081  FF1F         	movff	CANSetMask@tamp,3871	;volatile
 12206                           
 12207                           ; BSR set to: 0
 12208                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
 12209  00491C  0E00               	movlw	0
 12210  00491E  0100               	movlb	0	; () banked
 12211  004920  1577               	andwf	CANSetMask@mask& (0+255),w,b
 12212  004922  0100               	movlb	0	; () banked
 12213  004924  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12214  004926  0EFF               	movlw	255
 12215  004928  0100               	movlb	0	; () banked
 12216  00492A  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 12217  00492C  0100               	movlb	0	; () banked
 12218  00492E  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 12219  004930  0E00               	movlw	0
 12220  004932  0100               	movlb	0	; () banked
 12221  004934  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 12222  004936  0100               	movlb	0	; () banked
 12223  004938  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 12224  00493A  0E00               	movlw	0
 12225  00493C  0100               	movlb	0	; () banked
 12226  00493E  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 12227  004940  0100               	movlb	0	; () banked
 12228  004942  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 12229                           
 12230                           ; BSR set to: 0
 12231                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
 12232  004944  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 12233  004948  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 12234  00494C  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 12235  004950  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 12236  004954  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 12237  004958  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 12238  00495C  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 12239  004960  0100               	movlb	0	; () banked
 12240  004962  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 12241  004964  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12242  004968  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12243  00496C  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12244  004970  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12245                           
 12246                           ; BSR set to: 0
 12247                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
 12248  004974  C081  FF1E         	movff	CANSetMask@tamp,3870	;volatile
 12249                           
 12250                           ; BSR set to: 0
 12251                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
 12252  004978  0100               	movlb	0	; () banked
 12253  00497A  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 12254  00497C  D003               	goto	l443
 12255                           
 12256                           ; BSR set to: 0
 12257                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
 12258  00497E  010F               	movlb	15	; () banked
 12259  004980  811D               	bsf	29,0,b	;volatile
 12260  004982  D002               	goto	l444
 12261  004984                     l443:
 12262                           
 12263                           ; BSR set to: 0
 12264                           ;inc\CANlib.h: 715: else
 12265                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
 12266  004984  010F               	movlb	15	; () banked
 12267  004986  911D               	bcf	29,0,b	;volatile
 12268  004988                     l444:
 12269                           
 12270                           ; BSR set to: 15
 12271                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
 12272  004988  0100               	movlb	0	; () banked
 12273  00498A  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 12274  00498C  D003               	goto	l445
 12275                           
 12276                           ; BSR set to: 0
 12277                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
 12278  00498E  010F               	movlb	15	; () banked
 12279  004990  831D               	bsf	29,1,b	;volatile
 12280  004992  D002               	goto	l446
 12281  004994                     l445:
 12282                           
 12283                           ; BSR set to: 0
 12284                           ;inc\CANlib.h: 720: else
 12285                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
 12286  004994  010F               	movlb	15	; () banked
 12287  004996  931D               	bcf	29,1,b	;volatile
 12288  004998                     l446:
 12289                           
 12290                           ; BSR set to: 15
 12291                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
 12292  004998  0100               	movlb	0	; () banked
 12293  00499A  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 12294  00499C  D003               	goto	l447
 12295                           
 12296                           ; BSR set to: 0
 12297                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
 12298  00499E  010F               	movlb	15	; () banked
 12299  0049A0  8B1D               	bsf	29,5,b	;volatile
 12300  0049A2  D002               	goto	l448
 12301  0049A4                     l447:
 12302                           
 12303                           ; BSR set to: 0
 12304                           ;inc\CANlib.h: 725: else
 12305                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
 12306  0049A4  010F               	movlb	15	; () banked
 12307  0049A6  9B1D               	bcf	29,5,b	;volatile
 12308  0049A8                     l448:
 12309                           
 12310                           ; BSR set to: 15
 12311                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
 12312  0049A8  0100               	movlb	0	; () banked
 12313  0049AA  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 12314  0049AC  D003               	goto	l449
 12315                           
 12316                           ; BSR set to: 0
 12317                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
 12318  0049AE  010F               	movlb	15	; () banked
 12319  0049B0  8D1D               	bsf	29,6,b	;volatile
 12320  0049B2  D002               	goto	l450
 12321  0049B4                     l449:
 12322                           
 12323                           ; BSR set to: 0
 12324                           ;inc\CANlib.h: 730: else
 12325                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
 12326  0049B4  010F               	movlb	15	; () banked
 12327  0049B6  9D1D               	bcf	29,6,b	;volatile
 12328  0049B8                     l450:
 12329                           
 12330                           ; BSR set to: 15
 12331                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
 12332  0049B8  0100               	movlb	0	; () banked
 12333  0049BA  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 12334  0049BC  D003               	goto	l451
 12335                           
 12336                           ; BSR set to: 0
 12337                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
 12338  0049BE  010F               	movlb	15	; () banked
 12339  0049C0  8F1D               	bsf	29,7,b	;volatile
 12340  0049C2  D002               	goto	l5332
 12341  0049C4                     l451:
 12342                           
 12343                           ; BSR set to: 0
 12344                           ;inc\CANlib.h: 735: else
 12345                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
 12346  0049C4  010F               	movlb	15	; () banked
 12347  0049C6  9F1D               	bcf	29,7,b	;volatile
 12348  0049C8                     l5332:
 12349                           
 12350                           ; BSR set to: 15
 12351                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
 12352  0049C8  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 12353  0049CC  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 12354  0049D0  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 12355  0049D4  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 12356  0049D8  0E16               	movlw	22
 12357  0049DA  D006               	goto	u6360
 12358  0049DC                     u6365:
 12359  0049DC  0100               	movlb	0	; () banked
 12360  0049DE  90D8               	bcf	status,0,c
 12361  0049E0  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 12362  0049E2  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 12363  0049E4  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 12364  0049E6  337C               	rrcf	??_CANSetMask& (0+255),f,b
 12365  0049E8                     u6360:
 12366  0049E8  2EE8               	decfsz	wreg,f,c
 12367  0049EA  D7F8               	goto	u6365
 12368  0049EC  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12369  0049F0  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12370  0049F4  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12371  0049F8  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12372                           
 12373                           ; BSR set to: 0
 12374                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
 12375  0049FC  0100               	movlb	0	; () banked
 12376  0049FE  5181               	movf	CANSetMask@tamp& (0+255),w,b
 12377  004A00  0100               	movlb	0	; () banked
 12378  004A02  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12379  004A04  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12380  004A06  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12381  004A08  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12382                           
 12383                           ; BSR set to: 0
 12384                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
 12385  004A0A  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 12386  004A0E  0012               	return	
 12387  004A10                     __end_of_CANSetMask:
 12388                           	opt stack 0
 12389                           tblptru	equ	0xFF8
 12390                           tblptrh	equ	0xFF7
 12391                           tblptrl	equ	0xFF6
 12392                           tablat	equ	0xFF5
 12393                           prodh	equ	0xFF4
 12394                           prodl	equ	0xFF3
 12395                           intcon	equ	0xFF2
 12396                           intcon2	equ	0xFF1
 12397                           postinc0	equ	0xFEE
 12398                           wreg	equ	0xFE8
 12399                           postdec1	equ	0xFE5
 12400                           fsr1l	equ	0xFE1
 12401                           indf2	equ	0xFDF
 12402                           postinc2	equ	0xFDE
 12403                           postdec2	equ	0xFDD
 12404                           fsr2h	equ	0xFDA
 12405                           fsr2l	equ	0xFD9
 12406                           status	equ	0xFD8
 12407                           
 12408 ;; *************** function _CANSetFilter *****************
 12409 ;; Defined at:
 12410 ;;		line 748 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 12411 ;; Parameters:    Size  Location     Type
 12412 ;;  numBuffer       1    wreg     enum E16350
 12413 ;;  filter          4   23[BANK0 ] unsigned long 
 12414 ;;  type            1   27[BANK0 ] enum E16313
 12415 ;; Auto vars:     Size  Location     Type
 12416 ;;  numBuffer       1   32[BANK0 ] enum E16350
 12417 ;;  tamp            4   33[BANK0 ] unsigned long 
 12418 ;; Return value:  Size  Location     Type
 12419 ;;		None               void
 12420 ;; Registers used:
 12421 ;;		wreg, status,2, status,0
 12422 ;; Tracked objects:
 12423 ;;		On entry : 0/0
 12424 ;;		On exit  : 0/0
 12425 ;;		Unchanged: 0/0
 12426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12427 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12428 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12429 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12430 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12431 ;;Total ram usage:       14 bytes
 12432 ;; Hardware stack levels used:    1
 12433 ;; Hardware stack levels required when called:    4
 12434 ;; This function calls:
 12435 ;;		Nothing
 12436 ;; This function is called by:
 12437 ;;		_CANInitialize
 12438 ;; This function uses a non-reentrant model
 12439 ;;
 12440                           
 12441                           	psect	text32
 12442  000D52                     __ptext32:
 12443                           	opt stack 0
 12444  000D52                     _CANSetFilter:
 12445                           	opt stack 24
 12446                           
 12447                           ; BSR set to: 0
 12448                           ;incstack = 0
 12449                           ;CANSetFilter@numBuffer stored from wreg
 12450  000D52  0100               	movlb	0	; () banked
 12451  000D54  6F80               	movwf	CANSetFilter@numBuffer& (0+255),b
 12452                           
 12453                           ;inc\CANlib.h: 750: unsigned long tamp;
 12454                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
 12455  000D56  0100               	movlb	0	; () banked
 12456  000D58  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 12457  000D5A  0100               	movlb	0	; () banked
 12458  000D5C  A4D8               	btfss	status,2,c
 12459  000D5E  D058               	goto	l5356
 12460                           
 12461                           ; BSR set to: 0
 12462  000D60  0100               	movlb	0	; () banked
 12463  000D62  297B               	incf	CANSetFilter@type& (0+255),w,b
 12464  000D64  A4D8               	btfss	status,2,c
 12465  000D66  D054               	goto	l5356
 12466                           
 12467                           ; BSR set to: 0
 12468                           ;inc\CANlib.h: 753: {
 12469                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
 12470  000D68  010F               	movlb	15	; () banked
 12471  000D6A  9701               	bcf	1,3,b	;volatile
 12472                           
 12473                           ; BSR set to: 15
 12474                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
 12475  000D6C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12476  000D70  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12477  000D74  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12478  000D78  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12479  000D7C  0E04               	movlw	4
 12480  000D7E  D006               	goto	u6390
 12481  000D80                     u6395:
 12482  000D80  0100               	movlb	0	; () banked
 12483  000D82  90D8               	bcf	status,0,c
 12484  000D84  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12485  000D86  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12486  000D88  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12487  000D8A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12488  000D8C                     u6390:
 12489  000D8C  2EE8               	decfsz	wreg,f,c
 12490  000D8E  D7F8               	goto	u6395
 12491  000D90  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12492  000D94  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12493  000D98  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12494  000D9C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12495                           
 12496                           ; BSR set to: 0
 12497                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
 12498  000DA0  0100               	movlb	0	; () banked
 12499  000DA2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12500  000DA4  0100               	movlb	0	; () banked
 12501  000DA6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12502  000DA8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12503  000DAA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12504  000DAC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12505                           
 12506                           ; BSR set to: 0
 12507                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
 12508  000DAE  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 12509                           
 12510                           ; BSR set to: 0
 12511                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
 12512  000DB2  0E07               	movlw	7
 12513  000DB4  0100               	movlb	0	; () banked
 12514  000DB6  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12515  000DB8  0100               	movlb	0	; () banked
 12516  000DBA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12517  000DBC  0E00               	movlw	0
 12518  000DBE  0100               	movlb	0	; () banked
 12519  000DC0  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12520  000DC2  0100               	movlb	0	; () banked
 12521  000DC4  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12522  000DC6  0E00               	movlw	0
 12523  000DC8  0100               	movlb	0	; () banked
 12524  000DCA  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12525  000DCC  0100               	movlb	0	; () banked
 12526  000DCE  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12527  000DD0  0E00               	movlw	0
 12528  000DD2  0100               	movlb	0	; () banked
 12529  000DD4  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12530  000DD6  0100               	movlb	0	; () banked
 12531  000DD8  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12532                           
 12533                           ; BSR set to: 0
 12534                           ;inc\CANlib.h: 761: tamp = tamp << 5;
 12535  000DDA  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12536  000DDE  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12537  000DE2  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12538  000DE6  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12539  000DEA  0E05               	movlw	5
 12540  000DEC                     u6405:
 12541  000DEC  90D8               	bcf	status,0,c
 12542  000DEE  0100               	movlb	0	; () banked
 12543  000DF0  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12544  000DF2  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12545  000DF4  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12546  000DF6  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12547  000DF8  2EE8               	decfsz	wreg,f,c
 12548  000DFA  D7F8               	goto	u6405
 12549  000DFC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12550  000E00  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12551  000E04  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12552  000E08  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12553                           
 12554                           ; BSR set to: 0
 12555                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
 12556  000E0C  C081  FF01         	movff	CANSetFilter@tamp,3841	;volatile
 12557  000E10                     l5356:
 12558                           
 12559                           ; BSR set to: 0
 12560                           ;inc\CANlib.h: 763: }
 12561                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
 12562  000E10  0100               	movlb	0	; () banked
 12563  000E12  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 12564  000E14  A4D8               	btfss	status,2,c
 12565  000E16  D058               	goto	l5374
 12566                           
 12567                           ; BSR set to: 0
 12568  000E18  0100               	movlb	0	; () banked
 12569  000E1A  297B               	incf	CANSetFilter@type& (0+255),w,b
 12570  000E1C  A4D8               	btfss	status,2,c
 12571  000E1E  D054               	goto	l5374
 12572                           
 12573                           ; BSR set to: 0
 12574                           ;inc\CANlib.h: 766: {
 12575                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
 12576  000E20  010F               	movlb	15	; () banked
 12577  000E22  9705               	bcf	5,3,b	;volatile
 12578                           
 12579                           ; BSR set to: 15
 12580                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
 12581  000E24  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12582  000E28  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12583  000E2C  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12584  000E30  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12585  000E34  0E04               	movlw	4
 12586  000E36  D006               	goto	u6430
 12587  000E38                     u6435:
 12588  000E38  0100               	movlb	0	; () banked
 12589  000E3A  90D8               	bcf	status,0,c
 12590  000E3C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12591  000E3E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12592  000E40  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12593  000E42  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12594  000E44                     u6430:
 12595  000E44  2EE8               	decfsz	wreg,f,c
 12596  000E46  D7F8               	goto	u6435
 12597  000E48  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12598  000E4C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12599  000E50  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12600  000E54  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12601                           
 12602                           ; BSR set to: 0
 12603                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
 12604  000E58  0100               	movlb	0	; () banked
 12605  000E5A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12606  000E5C  0100               	movlb	0	; () banked
 12607  000E5E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12608  000E60  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12609  000E62  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12610  000E64  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12611                           
 12612                           ; BSR set to: 0
 12613                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
 12614  000E66  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 12615                           
 12616                           ; BSR set to: 0
 12617                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
 12618  000E6A  0E07               	movlw	7
 12619  000E6C  0100               	movlb	0	; () banked
 12620  000E6E  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12621  000E70  0100               	movlb	0	; () banked
 12622  000E72  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12623  000E74  0E00               	movlw	0
 12624  000E76  0100               	movlb	0	; () banked
 12625  000E78  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12626  000E7A  0100               	movlb	0	; () banked
 12627  000E7C  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12628  000E7E  0E00               	movlw	0
 12629  000E80  0100               	movlb	0	; () banked
 12630  000E82  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12631  000E84  0100               	movlb	0	; () banked
 12632  000E86  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12633  000E88  0E00               	movlw	0
 12634  000E8A  0100               	movlb	0	; () banked
 12635  000E8C  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12636  000E8E  0100               	movlb	0	; () banked
 12637  000E90  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12638                           
 12639                           ; BSR set to: 0
 12640                           ;inc\CANlib.h: 774: tamp = tamp << 5;
 12641  000E92  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12642  000E96  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12643  000E9A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12644  000E9E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12645  000EA2  0E05               	movlw	5
 12646  000EA4                     u6445:
 12647  000EA4  90D8               	bcf	status,0,c
 12648  000EA6  0100               	movlb	0	; () banked
 12649  000EA8  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12650  000EAA  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12651  000EAC  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12652  000EAE  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12653  000EB0  2EE8               	decfsz	wreg,f,c
 12654  000EB2  D7F8               	goto	u6445
 12655  000EB4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12656  000EB8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12657  000EBC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12658  000EC0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12659                           
 12660                           ; BSR set to: 0
 12661                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
 12662  000EC4  C081  FF05         	movff	CANSetFilter@tamp,3845	;volatile
 12663  000EC8                     l5374:
 12664                           
 12665                           ; BSR set to: 0
 12666                           ;inc\CANlib.h: 776: }
 12667                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
 12668  000EC8  0E02               	movlw	2
 12669  000ECA  0100               	movlb	0	; () banked
 12670  000ECC  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12671  000ECE  A4D8               	btfss	status,2,c
 12672  000ED0  D058               	goto	l5392
 12673                           
 12674                           ; BSR set to: 0
 12675  000ED2  0100               	movlb	0	; () banked
 12676  000ED4  297B               	incf	CANSetFilter@type& (0+255),w,b
 12677  000ED6  A4D8               	btfss	status,2,c
 12678  000ED8  D054               	goto	l5392
 12679                           
 12680                           ; BSR set to: 0
 12681                           ;inc\CANlib.h: 779: {
 12682                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
 12683  000EDA  010F               	movlb	15	; () banked
 12684  000EDC  9709               	bcf	9,3,b	;volatile
 12685                           
 12686                           ; BSR set to: 15
 12687                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
 12688  000EDE  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12689  000EE2  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12690  000EE6  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12691  000EEA  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12692  000EEE  0E04               	movlw	4
 12693  000EF0  D006               	goto	u6470
 12694  000EF2                     u6475:
 12695  000EF2  0100               	movlb	0	; () banked
 12696  000EF4  90D8               	bcf	status,0,c
 12697  000EF6  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12698  000EF8  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12699  000EFA  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12700  000EFC  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12701  000EFE                     u6470:
 12702  000EFE  2EE8               	decfsz	wreg,f,c
 12703  000F00  D7F8               	goto	u6475
 12704  000F02  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12705  000F06  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12706  000F0A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12707  000F0E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12708                           
 12709                           ; BSR set to: 0
 12710                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
 12711  000F12  0100               	movlb	0	; () banked
 12712  000F14  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12713  000F16  0100               	movlb	0	; () banked
 12714  000F18  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12715  000F1A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12716  000F1C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12717  000F1E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12718                           
 12719                           ; BSR set to: 0
 12720                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
 12721  000F20  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 12722                           
 12723                           ; BSR set to: 0
 12724                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
 12725  000F24  0E07               	movlw	7
 12726  000F26  0100               	movlb	0	; () banked
 12727  000F28  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12728  000F2A  0100               	movlb	0	; () banked
 12729  000F2C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12730  000F2E  0E00               	movlw	0
 12731  000F30  0100               	movlb	0	; () banked
 12732  000F32  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12733  000F34  0100               	movlb	0	; () banked
 12734  000F36  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12735  000F38  0E00               	movlw	0
 12736  000F3A  0100               	movlb	0	; () banked
 12737  000F3C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12738  000F3E  0100               	movlb	0	; () banked
 12739  000F40  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12740  000F42  0E00               	movlw	0
 12741  000F44  0100               	movlb	0	; () banked
 12742  000F46  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12743  000F48  0100               	movlb	0	; () banked
 12744  000F4A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12745                           
 12746                           ; BSR set to: 0
 12747                           ;inc\CANlib.h: 787: tamp = tamp << 5;
 12748  000F4C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12749  000F50  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12750  000F54  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12751  000F58  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12752  000F5C  0E05               	movlw	5
 12753  000F5E                     u6485:
 12754  000F5E  90D8               	bcf	status,0,c
 12755  000F60  0100               	movlb	0	; () banked
 12756  000F62  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12757  000F64  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12758  000F66  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12759  000F68  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12760  000F6A  2EE8               	decfsz	wreg,f,c
 12761  000F6C  D7F8               	goto	u6485
 12762  000F6E  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12763  000F72  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12764  000F76  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12765  000F7A  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12766                           
 12767                           ; BSR set to: 0
 12768                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
 12769  000F7E  C081  FF09         	movff	CANSetFilter@tamp,3849	;volatile
 12770  000F82                     l5392:
 12771                           
 12772                           ; BSR set to: 0
 12773                           ;inc\CANlib.h: 789: }
 12774                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
 12775  000F82  0E03               	movlw	3
 12776  000F84  0100               	movlb	0	; () banked
 12777  000F86  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12778  000F88  A4D8               	btfss	status,2,c
 12779  000F8A  D058               	goto	l5410
 12780                           
 12781                           ; BSR set to: 0
 12782  000F8C  0100               	movlb	0	; () banked
 12783  000F8E  297B               	incf	CANSetFilter@type& (0+255),w,b
 12784  000F90  A4D8               	btfss	status,2,c
 12785  000F92  D054               	goto	l5410
 12786                           
 12787                           ; BSR set to: 0
 12788                           ;inc\CANlib.h: 792: {
 12789                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
 12790  000F94  010F               	movlb	15	; () banked
 12791  000F96  970D               	bcf	13,3,b	;volatile
 12792                           
 12793                           ; BSR set to: 15
 12794                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
 12795  000F98  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12796  000F9C  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12797  000FA0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12798  000FA4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12799  000FA8  0E04               	movlw	4
 12800  000FAA  D006               	goto	u6510
 12801  000FAC                     u6515:
 12802  000FAC  0100               	movlb	0	; () banked
 12803  000FAE  90D8               	bcf	status,0,c
 12804  000FB0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12805  000FB2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12806  000FB4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12807  000FB6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12808  000FB8                     u6510:
 12809  000FB8  2EE8               	decfsz	wreg,f,c
 12810  000FBA  D7F8               	goto	u6515
 12811  000FBC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12812  000FC0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12813  000FC4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12814  000FC8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12815                           
 12816                           ; BSR set to: 0
 12817                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
 12818  000FCC  0100               	movlb	0	; () banked
 12819  000FCE  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12820  000FD0  0100               	movlb	0	; () banked
 12821  000FD2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12822  000FD4  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12823  000FD6  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12824  000FD8  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12825                           
 12826                           ; BSR set to: 0
 12827                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
 12828  000FDA  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 12829                           
 12830                           ; BSR set to: 0
 12831                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
 12832  000FDE  0E07               	movlw	7
 12833  000FE0  0100               	movlb	0	; () banked
 12834  000FE2  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12835  000FE4  0100               	movlb	0	; () banked
 12836  000FE6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12837  000FE8  0E00               	movlw	0
 12838  000FEA  0100               	movlb	0	; () banked
 12839  000FEC  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12840  000FEE  0100               	movlb	0	; () banked
 12841  000FF0  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12842  000FF2  0E00               	movlw	0
 12843  000FF4  0100               	movlb	0	; () banked
 12844  000FF6  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12845  000FF8  0100               	movlb	0	; () banked
 12846  000FFA  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12847  000FFC  0E00               	movlw	0
 12848  000FFE  0100               	movlb	0	; () banked
 12849  001000  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12850  001002  0100               	movlb	0	; () banked
 12851  001004  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12852                           
 12853                           ; BSR set to: 0
 12854                           ;inc\CANlib.h: 800: tamp = tamp << 5;
 12855  001006  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12856  00100A  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12857  00100E  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12858  001012  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12859  001016  0E05               	movlw	5
 12860  001018                     u6525:
 12861  001018  90D8               	bcf	status,0,c
 12862  00101A  0100               	movlb	0	; () banked
 12863  00101C  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12864  00101E  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12865  001020  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12866  001022  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12867  001024  2EE8               	decfsz	wreg,f,c
 12868  001026  D7F8               	goto	u6525
 12869  001028  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12870  00102C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12871  001030  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12872  001034  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12873                           
 12874                           ; BSR set to: 0
 12875                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
 12876  001038  C081  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
 12877  00103C                     l5410:
 12878                           
 12879                           ; BSR set to: 0
 12880                           ;inc\CANlib.h: 802: }
 12881                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
 12882  00103C  0E04               	movlw	4
 12883  00103E  0100               	movlb	0	; () banked
 12884  001040  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12885  001042  A4D8               	btfss	status,2,c
 12886  001044  D058               	goto	l5428
 12887                           
 12888                           ; BSR set to: 0
 12889  001046  0100               	movlb	0	; () banked
 12890  001048  297B               	incf	CANSetFilter@type& (0+255),w,b
 12891  00104A  A4D8               	btfss	status,2,c
 12892  00104C  D054               	goto	l5428
 12893                           
 12894                           ; BSR set to: 0
 12895                           ;inc\CANlib.h: 805: {
 12896                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
 12897  00104E  010F               	movlb	15	; () banked
 12898  001050  9711               	bcf	17,3,b	;volatile
 12899                           
 12900                           ; BSR set to: 15
 12901                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
 12902  001052  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12903  001056  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12904  00105A  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12905  00105E  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12906  001062  0E04               	movlw	4
 12907  001064  D006               	goto	u6550
 12908  001066                     u6555:
 12909  001066  0100               	movlb	0	; () banked
 12910  001068  90D8               	bcf	status,0,c
 12911  00106A  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12912  00106C  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12913  00106E  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12914  001070  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12915  001072                     u6550:
 12916  001072  2EE8               	decfsz	wreg,f,c
 12917  001074  D7F8               	goto	u6555
 12918  001076  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12919  00107A  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12920  00107E  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12921  001082  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12922                           
 12923                           ; BSR set to: 0
 12924                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
 12925  001086  0100               	movlb	0	; () banked
 12926  001088  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12927  00108A  0100               	movlb	0	; () banked
 12928  00108C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12929  00108E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12930  001090  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12931  001092  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12932                           
 12933                           ; BSR set to: 0
 12934                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
 12935  001094  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 12936                           
 12937                           ; BSR set to: 0
 12938                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
 12939  001098  0E07               	movlw	7
 12940  00109A  0100               	movlb	0	; () banked
 12941  00109C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12942  00109E  0100               	movlb	0	; () banked
 12943  0010A0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12944  0010A2  0E00               	movlw	0
 12945  0010A4  0100               	movlb	0	; () banked
 12946  0010A6  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12947  0010A8  0100               	movlb	0	; () banked
 12948  0010AA  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12949  0010AC  0E00               	movlw	0
 12950  0010AE  0100               	movlb	0	; () banked
 12951  0010B0  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12952  0010B2  0100               	movlb	0	; () banked
 12953  0010B4  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12954  0010B6  0E00               	movlw	0
 12955  0010B8  0100               	movlb	0	; () banked
 12956  0010BA  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12957  0010BC  0100               	movlb	0	; () banked
 12958  0010BE  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12959                           
 12960                           ; BSR set to: 0
 12961                           ;inc\CANlib.h: 813: tamp = tamp << 5;
 12962  0010C0  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12963  0010C4  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12964  0010C8  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12965  0010CC  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12966  0010D0  0E05               	movlw	5
 12967  0010D2                     u6565:
 12968  0010D2  90D8               	bcf	status,0,c
 12969  0010D4  0100               	movlb	0	; () banked
 12970  0010D6  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12971  0010D8  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12972  0010DA  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12973  0010DC  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12974  0010DE  2EE8               	decfsz	wreg,f,c
 12975  0010E0  D7F8               	goto	u6565
 12976  0010E2  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12977  0010E6  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12978  0010EA  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12979  0010EE  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12980                           
 12981                           ; BSR set to: 0
 12982                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
 12983  0010F2  C081  FF11         	movff	CANSetFilter@tamp,3857	;volatile
 12984  0010F6                     l5428:
 12985                           
 12986                           ; BSR set to: 0
 12987                           ;inc\CANlib.h: 815: }
 12988                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
 12989  0010F6  0E05               	movlw	5
 12990  0010F8  0100               	movlb	0	; () banked
 12991  0010FA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12992  0010FC  A4D8               	btfss	status,2,c
 12993  0010FE  D058               	goto	l5446
 12994                           
 12995                           ; BSR set to: 0
 12996  001100  0100               	movlb	0	; () banked
 12997  001102  297B               	incf	CANSetFilter@type& (0+255),w,b
 12998  001104  A4D8               	btfss	status,2,c
 12999  001106  D054               	goto	l5446
 13000                           
 13001                           ; BSR set to: 0
 13002                           ;inc\CANlib.h: 818: {
 13003                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
 13004  001108  010F               	movlb	15	; () banked
 13005  00110A  9715               	bcf	21,3,b	;volatile
 13006                           
 13007                           ; BSR set to: 15
 13008                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
 13009  00110C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13010  001110  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13011  001114  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13012  001118  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13013  00111C  0E04               	movlw	4
 13014  00111E  D006               	goto	u6590
 13015  001120                     u6595:
 13016  001120  0100               	movlb	0	; () banked
 13017  001122  90D8               	bcf	status,0,c
 13018  001124  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13019  001126  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13020  001128  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13021  00112A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13022  00112C                     u6590:
 13023  00112C  2EE8               	decfsz	wreg,f,c
 13024  00112E  D7F8               	goto	u6595
 13025  001130  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13026  001134  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13027  001138  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13028  00113C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13029                           
 13030                           ; BSR set to: 0
 13031                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
 13032  001140  0100               	movlb	0	; () banked
 13033  001142  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13034  001144  0100               	movlb	0	; () banked
 13035  001146  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13036  001148  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13037  00114A  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13038  00114C  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13039                           
 13040                           ; BSR set to: 0
 13041                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
 13042  00114E  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 13043                           
 13044                           ; BSR set to: 0
 13045                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
 13046  001152  0E07               	movlw	7
 13047  001154  0100               	movlb	0	; () banked
 13048  001156  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13049  001158  0100               	movlb	0	; () banked
 13050  00115A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13051  00115C  0E00               	movlw	0
 13052  00115E  0100               	movlb	0	; () banked
 13053  001160  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13054  001162  0100               	movlb	0	; () banked
 13055  001164  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13056  001166  0E00               	movlw	0
 13057  001168  0100               	movlb	0	; () banked
 13058  00116A  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13059  00116C  0100               	movlb	0	; () banked
 13060  00116E  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13061  001170  0E00               	movlw	0
 13062  001172  0100               	movlb	0	; () banked
 13063  001174  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13064  001176  0100               	movlb	0	; () banked
 13065  001178  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13066                           
 13067                           ; BSR set to: 0
 13068                           ;inc\CANlib.h: 826: tamp = tamp << 5;
 13069  00117A  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13070  00117E  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13071  001182  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13072  001186  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13073  00118A  0E05               	movlw	5
 13074  00118C                     u6605:
 13075  00118C  90D8               	bcf	status,0,c
 13076  00118E  0100               	movlb	0	; () banked
 13077  001190  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 13078  001192  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 13079  001194  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 13080  001196  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 13081  001198  2EE8               	decfsz	wreg,f,c
 13082  00119A  D7F8               	goto	u6605
 13083  00119C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13084  0011A0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13085  0011A4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13086  0011A8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13087                           
 13088                           ; BSR set to: 0
 13089                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
 13090  0011AC  C081  FF15         	movff	CANSetFilter@tamp,3861	;volatile
 13091  0011B0                     l5446:
 13092                           
 13093                           ; BSR set to: 0
 13094                           ;inc\CANlib.h: 828: }
 13095                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
 13096  0011B0  0100               	movlb	0	; () banked
 13097  0011B2  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 13098  0011B4  0100               	movlb	0	; () banked
 13099  0011B6  A4D8               	btfss	status,2,c
 13100  0011B8  D089               	goto	l5480
 13101                           
 13102                           ; BSR set to: 0
 13103  0011BA  0EF7               	movlw	247
 13104  0011BC  0100               	movlb	0	; () banked
 13105  0011BE  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13106  0011C0  A4D8               	btfss	status,2,c
 13107  0011C2  D084               	goto	l5480
 13108                           
 13109                           ; BSR set to: 0
 13110                           ;inc\CANlib.h: 832: {
 13111                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
 13112  0011C4  010F               	movlb	15	; () banked
 13113  0011C6  8701               	bsf	1,3,b	;volatile
 13114                           
 13115                           ; BSR set to: 15
 13116                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
 13117  0011C8  0100               	movlb	0	; () banked
 13118  0011CA  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13119  0011CC  0100               	movlb	0	; () banked
 13120  0011CE  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13121  0011D0  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13122  0011D2  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13123  0011D4  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13124                           
 13125                           ; BSR set to: 0
 13126                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
 13127  0011D6  C081  FF03         	movff	CANSetFilter@tamp,3843	;volatile
 13128                           
 13129                           ; BSR set to: 0
 13130                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
 13131  0011DA  0E00               	movlw	0
 13132  0011DC  0100               	movlb	0	; () banked
 13133  0011DE  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13134  0011E0  0100               	movlb	0	; () banked
 13135  0011E2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13136  0011E4  0EFF               	movlw	255
 13137  0011E6  0100               	movlb	0	; () banked
 13138  0011E8  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13139  0011EA  0100               	movlb	0	; () banked
 13140  0011EC  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13141  0011EE  0E00               	movlw	0
 13142  0011F0  0100               	movlb	0	; () banked
 13143  0011F2  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13144  0011F4  0100               	movlb	0	; () banked
 13145  0011F6  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13146  0011F8  0E00               	movlw	0
 13147  0011FA  0100               	movlb	0	; () banked
 13148  0011FC  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13149  0011FE  0100               	movlb	0	; () banked
 13150  001200  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13151                           
 13152                           ; BSR set to: 0
 13153                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
 13154  001202  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13155  001206  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13156  00120A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13157  00120E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13158  001212  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13159  001216  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13160  00121A  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13161  00121E  0100               	movlb	0	; () banked
 13162  001220  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13163  001222  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13164  001226  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13165  00122A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13166  00122E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13167                           
 13168                           ; BSR set to: 0
 13169                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
 13170  001232  C081  FF02         	movff	CANSetFilter@tamp,3842	;volatile
 13171                           
 13172                           ; BSR set to: 0
 13173                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
 13174  001236  0100               	movlb	0	; () banked
 13175  001238  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13176  00123A  D003               	goto	l463
 13177                           
 13178                           ; BSR set to: 0
 13179                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
 13180  00123C  010F               	movlb	15	; () banked
 13181  00123E  8101               	bsf	1,0,b	;volatile
 13182  001240  D002               	goto	l464
 13183  001242                     l463:
 13184                           
 13185                           ; BSR set to: 0
 13186                           ;inc\CANlib.h: 844: else
 13187                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
 13188  001242  010F               	movlb	15	; () banked
 13189  001244  9101               	bcf	1,0,b	;volatile
 13190  001246                     l464:
 13191                           
 13192                           ; BSR set to: 15
 13193                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
 13194  001246  0100               	movlb	0	; () banked
 13195  001248  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13196  00124A  D003               	goto	l465
 13197                           
 13198                           ; BSR set to: 0
 13199                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
 13200  00124C  010F               	movlb	15	; () banked
 13201  00124E  8301               	bsf	1,1,b	;volatile
 13202  001250  D002               	goto	l466
 13203  001252                     l465:
 13204                           
 13205                           ; BSR set to: 0
 13206                           ;inc\CANlib.h: 849: else
 13207                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
 13208  001252  010F               	movlb	15	; () banked
 13209  001254  9301               	bcf	1,1,b	;volatile
 13210  001256                     l466:
 13211                           
 13212                           ; BSR set to: 15
 13213                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
 13214  001256  0100               	movlb	0	; () banked
 13215  001258  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13216  00125A  D003               	goto	l467
 13217                           
 13218                           ; BSR set to: 0
 13219                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
 13220  00125C  010F               	movlb	15	; () banked
 13221  00125E  8B01               	bsf	1,5,b	;volatile
 13222  001260  D002               	goto	l468
 13223  001262                     l467:
 13224                           
 13225                           ; BSR set to: 0
 13226                           ;inc\CANlib.h: 854: else
 13227                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
 13228  001262  010F               	movlb	15	; () banked
 13229  001264  9B01               	bcf	1,5,b	;volatile
 13230  001266                     l468:
 13231                           
 13232                           ; BSR set to: 15
 13233                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
 13234  001266  0100               	movlb	0	; () banked
 13235  001268  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13236  00126A  D003               	goto	l469
 13237                           
 13238                           ; BSR set to: 0
 13239                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
 13240  00126C  010F               	movlb	15	; () banked
 13241  00126E  8D01               	bsf	1,6,b	;volatile
 13242  001270  D002               	goto	l470
 13243  001272                     l469:
 13244                           
 13245                           ; BSR set to: 0
 13246                           ;inc\CANlib.h: 859: else
 13247                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
 13248  001272  010F               	movlb	15	; () banked
 13249  001274  9D01               	bcf	1,6,b	;volatile
 13250  001276                     l470:
 13251                           
 13252                           ; BSR set to: 15
 13253                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
 13254  001276  0100               	movlb	0	; () banked
 13255  001278  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13256  00127A  D003               	goto	l471
 13257                           
 13258                           ; BSR set to: 0
 13259                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
 13260  00127C  010F               	movlb	15	; () banked
 13261  00127E  8F01               	bsf	1,7,b	;volatile
 13262  001280  D002               	goto	l5474
 13263  001282                     l471:
 13264                           
 13265                           ; BSR set to: 0
 13266                           ;inc\CANlib.h: 864: else
 13267                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
 13268  001282  010F               	movlb	15	; () banked
 13269  001284  9F01               	bcf	1,7,b	;volatile
 13270  001286                     l5474:
 13271                           
 13272                           ; BSR set to: 15
 13273                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
 13274  001286  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13275  00128A  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13276  00128E  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13277  001292  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13278  001296  0E16               	movlw	22
 13279  001298  D006               	goto	u6680
 13280  00129A                     u6685:
 13281  00129A  0100               	movlb	0	; () banked
 13282  00129C  90D8               	bcf	status,0,c
 13283  00129E  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13284  0012A0  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13285  0012A2  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13286  0012A4  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13287  0012A6                     u6680:
 13288  0012A6  2EE8               	decfsz	wreg,f,c
 13289  0012A8  D7F8               	goto	u6685
 13290  0012AA  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13291  0012AE  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13292  0012B2  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13293  0012B6  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13294                           
 13295                           ; BSR set to: 0
 13296                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
 13297  0012BA  0100               	movlb	0	; () banked
 13298  0012BC  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13299  0012BE  0100               	movlb	0	; () banked
 13300  0012C0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13301  0012C2  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13302  0012C4  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13303  0012C6  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13304                           
 13305                           ; BSR set to: 0
 13306                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
 13307  0012C8  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 13308  0012CC                     l5480:
 13309                           
 13310                           ; BSR set to: 0
 13311                           ;inc\CANlib.h: 870: }
 13312                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
 13313  0012CC  0100               	movlb	0	; () banked
 13314  0012CE  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 13315  0012D0  A4D8               	btfss	status,2,c
 13316  0012D2  D089               	goto	l5514
 13317                           
 13318                           ; BSR set to: 0
 13319  0012D4  0EF7               	movlw	247
 13320  0012D6  0100               	movlb	0	; () banked
 13321  0012D8  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13322  0012DA  A4D8               	btfss	status,2,c
 13323  0012DC  D084               	goto	l5514
 13324                           
 13325                           ; BSR set to: 0
 13326                           ;inc\CANlib.h: 873: {
 13327                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
 13328  0012DE  010F               	movlb	15	; () banked
 13329  0012E0  8705               	bsf	5,3,b	;volatile
 13330                           
 13331                           ; BSR set to: 15
 13332                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
 13333  0012E2  0100               	movlb	0	; () banked
 13334  0012E4  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13335  0012E6  0100               	movlb	0	; () banked
 13336  0012E8  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13337  0012EA  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13338  0012EC  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13339  0012EE  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13340                           
 13341                           ; BSR set to: 0
 13342                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
 13343  0012F0  C081  FF07         	movff	CANSetFilter@tamp,3847	;volatile
 13344                           
 13345                           ; BSR set to: 0
 13346                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
 13347  0012F4  0E00               	movlw	0
 13348  0012F6  0100               	movlb	0	; () banked
 13349  0012F8  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13350  0012FA  0100               	movlb	0	; () banked
 13351  0012FC  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13352  0012FE  0EFF               	movlw	255
 13353  001300  0100               	movlb	0	; () banked
 13354  001302  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13355  001304  0100               	movlb	0	; () banked
 13356  001306  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13357  001308  0E00               	movlw	0
 13358  00130A  0100               	movlb	0	; () banked
 13359  00130C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13360  00130E  0100               	movlb	0	; () banked
 13361  001310  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13362  001312  0E00               	movlw	0
 13363  001314  0100               	movlb	0	; () banked
 13364  001316  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13365  001318  0100               	movlb	0	; () banked
 13366  00131A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13367                           
 13368                           ; BSR set to: 0
 13369                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
 13370  00131C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13371  001320  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13372  001324  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13373  001328  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13374  00132C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13375  001330  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13376  001334  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13377  001338  0100               	movlb	0	; () banked
 13378  00133A  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13379  00133C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13380  001340  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13381  001344  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13382  001348  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13383                           
 13384                           ; BSR set to: 0
 13385                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
 13386  00134C  C081  FF06         	movff	CANSetFilter@tamp,3846	;volatile
 13387                           
 13388                           ; BSR set to: 0
 13389                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
 13390  001350  0100               	movlb	0	; () banked
 13391  001352  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13392  001354  D003               	goto	l474
 13393                           
 13394                           ; BSR set to: 0
 13395                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
 13396  001356  010F               	movlb	15	; () banked
 13397  001358  8105               	bsf	5,0,b	;volatile
 13398  00135A  D002               	goto	l475
 13399  00135C                     l474:
 13400                           
 13401                           ; BSR set to: 0
 13402                           ;inc\CANlib.h: 885: else
 13403                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
 13404  00135C  010F               	movlb	15	; () banked
 13405  00135E  9105               	bcf	5,0,b	;volatile
 13406  001360                     l475:
 13407                           
 13408                           ; BSR set to: 15
 13409                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
 13410  001360  0100               	movlb	0	; () banked
 13411  001362  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13412  001364  D003               	goto	l476
 13413                           
 13414                           ; BSR set to: 0
 13415                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
 13416  001366  010F               	movlb	15	; () banked
 13417  001368  8305               	bsf	5,1,b	;volatile
 13418  00136A  D002               	goto	l477
 13419  00136C                     l476:
 13420                           
 13421                           ; BSR set to: 0
 13422                           ;inc\CANlib.h: 890: else
 13423                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
 13424  00136C  010F               	movlb	15	; () banked
 13425  00136E  9305               	bcf	5,1,b	;volatile
 13426  001370                     l477:
 13427                           
 13428                           ; BSR set to: 15
 13429                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
 13430  001370  0100               	movlb	0	; () banked
 13431  001372  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13432  001374  D003               	goto	l478
 13433                           
 13434                           ; BSR set to: 0
 13435                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
 13436  001376  010F               	movlb	15	; () banked
 13437  001378  8B05               	bsf	5,5,b	;volatile
 13438  00137A  D002               	goto	l479
 13439  00137C                     l478:
 13440                           
 13441                           ; BSR set to: 0
 13442                           ;inc\CANlib.h: 895: else
 13443                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
 13444  00137C  010F               	movlb	15	; () banked
 13445  00137E  9B05               	bcf	5,5,b	;volatile
 13446  001380                     l479:
 13447                           
 13448                           ; BSR set to: 15
 13449                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
 13450  001380  0100               	movlb	0	; () banked
 13451  001382  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13452  001384  D003               	goto	l480
 13453                           
 13454                           ; BSR set to: 0
 13455                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
 13456  001386  010F               	movlb	15	; () banked
 13457  001388  8D05               	bsf	5,6,b	;volatile
 13458  00138A  D002               	goto	l481
 13459  00138C                     l480:
 13460                           
 13461                           ; BSR set to: 0
 13462                           ;inc\CANlib.h: 900: else
 13463                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
 13464  00138C  010F               	movlb	15	; () banked
 13465  00138E  9D05               	bcf	5,6,b	;volatile
 13466  001390                     l481:
 13467                           
 13468                           ; BSR set to: 15
 13469                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
 13470  001390  0100               	movlb	0	; () banked
 13471  001392  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13472  001394  D003               	goto	l482
 13473                           
 13474                           ; BSR set to: 0
 13475                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
 13476  001396  010F               	movlb	15	; () banked
 13477  001398  8F05               	bsf	5,7,b	;volatile
 13478  00139A  D002               	goto	l5508
 13479  00139C                     l482:
 13480                           
 13481                           ; BSR set to: 0
 13482                           ;inc\CANlib.h: 905: else
 13483                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
 13484  00139C  010F               	movlb	15	; () banked
 13485  00139E  9F05               	bcf	5,7,b	;volatile
 13486  0013A0                     l5508:
 13487                           
 13488                           ; BSR set to: 15
 13489                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
 13490  0013A0  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13491  0013A4  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13492  0013A8  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13493  0013AC  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13494  0013B0  0E16               	movlw	22
 13495  0013B2  D006               	goto	u6760
 13496  0013B4                     u6765:
 13497  0013B4  0100               	movlb	0	; () banked
 13498  0013B6  90D8               	bcf	status,0,c
 13499  0013B8  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13500  0013BA  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13501  0013BC  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13502  0013BE  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13503  0013C0                     u6760:
 13504  0013C0  2EE8               	decfsz	wreg,f,c
 13505  0013C2  D7F8               	goto	u6765
 13506  0013C4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13507  0013C8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13508  0013CC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13509  0013D0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13510                           
 13511                           ; BSR set to: 0
 13512                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
 13513  0013D4  0100               	movlb	0	; () banked
 13514  0013D6  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13515  0013D8  0100               	movlb	0	; () banked
 13516  0013DA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13517  0013DC  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13518  0013DE  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13519  0013E0  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13520                           
 13521                           ; BSR set to: 0
 13522                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
 13523  0013E2  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 13524  0013E6                     l5514:
 13525                           
 13526                           ; BSR set to: 0
 13527                           ;inc\CANlib.h: 911: }
 13528                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
 13529  0013E6  0E02               	movlw	2
 13530  0013E8  0100               	movlb	0	; () banked
 13531  0013EA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13532  0013EC  A4D8               	btfss	status,2,c
 13533  0013EE  D089               	goto	l5548
 13534                           
 13535                           ; BSR set to: 0
 13536  0013F0  0EF7               	movlw	247
 13537  0013F2  0100               	movlb	0	; () banked
 13538  0013F4  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13539  0013F6  A4D8               	btfss	status,2,c
 13540  0013F8  D084               	goto	l5548
 13541                           
 13542                           ; BSR set to: 0
 13543                           ;inc\CANlib.h: 915: {
 13544                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
 13545  0013FA  010F               	movlb	15	; () banked
 13546  0013FC  8709               	bsf	9,3,b	;volatile
 13547                           
 13548                           ; BSR set to: 15
 13549                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
 13550  0013FE  0100               	movlb	0	; () banked
 13551  001400  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13552  001402  0100               	movlb	0	; () banked
 13553  001404  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13554  001406  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13555  001408  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13556  00140A  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13557                           
 13558                           ; BSR set to: 0
 13559                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
 13560  00140C  C081  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
 13561                           
 13562                           ; BSR set to: 0
 13563                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
 13564  001410  0E00               	movlw	0
 13565  001412  0100               	movlb	0	; () banked
 13566  001414  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13567  001416  0100               	movlb	0	; () banked
 13568  001418  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13569  00141A  0EFF               	movlw	255
 13570  00141C  0100               	movlb	0	; () banked
 13571  00141E  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13572  001420  0100               	movlb	0	; () banked
 13573  001422  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13574  001424  0E00               	movlw	0
 13575  001426  0100               	movlb	0	; () banked
 13576  001428  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13577  00142A  0100               	movlb	0	; () banked
 13578  00142C  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13579  00142E  0E00               	movlw	0
 13580  001430  0100               	movlb	0	; () banked
 13581  001432  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13582  001434  0100               	movlb	0	; () banked
 13583  001436  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13584                           
 13585                           ; BSR set to: 0
 13586                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
 13587  001438  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13588  00143C  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13589  001440  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13590  001444  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13591  001448  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13592  00144C  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13593  001450  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13594  001454  0100               	movlb	0	; () banked
 13595  001456  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13596  001458  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13597  00145C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13598  001460  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13599  001464  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13600                           
 13601                           ; BSR set to: 0
 13602                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
 13603  001468  C081  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
 13604                           
 13605                           ; BSR set to: 0
 13606                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
 13607  00146C  0100               	movlb	0	; () banked
 13608  00146E  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13609  001470  D003               	goto	l485
 13610                           
 13611                           ; BSR set to: 0
 13612                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
 13613  001472  010F               	movlb	15	; () banked
 13614  001474  8109               	bsf	9,0,b	;volatile
 13615  001476  D002               	goto	l486
 13616  001478                     l485:
 13617                           
 13618                           ; BSR set to: 0
 13619                           ;inc\CANlib.h: 927: else
 13620                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
 13621  001478  010F               	movlb	15	; () banked
 13622  00147A  9109               	bcf	9,0,b	;volatile
 13623  00147C                     l486:
 13624                           
 13625                           ; BSR set to: 15
 13626                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
 13627  00147C  0100               	movlb	0	; () banked
 13628  00147E  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13629  001480  D003               	goto	l487
 13630                           
 13631                           ; BSR set to: 0
 13632                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
 13633  001482  010F               	movlb	15	; () banked
 13634  001484  8309               	bsf	9,1,b	;volatile
 13635  001486  D002               	goto	l488
 13636  001488                     l487:
 13637                           
 13638                           ; BSR set to: 0
 13639                           ;inc\CANlib.h: 932: else
 13640                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
 13641  001488  010F               	movlb	15	; () banked
 13642  00148A  9309               	bcf	9,1,b	;volatile
 13643  00148C                     l488:
 13644                           
 13645                           ; BSR set to: 15
 13646                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
 13647  00148C  0100               	movlb	0	; () banked
 13648  00148E  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13649  001490  D003               	goto	l489
 13650                           
 13651                           ; BSR set to: 0
 13652                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
 13653  001492  010F               	movlb	15	; () banked
 13654  001494  8B09               	bsf	9,5,b	;volatile
 13655  001496  D002               	goto	l490
 13656  001498                     l489:
 13657                           
 13658                           ; BSR set to: 0
 13659                           ;inc\CANlib.h: 937: else
 13660                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
 13661  001498  010F               	movlb	15	; () banked
 13662  00149A  9B09               	bcf	9,5,b	;volatile
 13663  00149C                     l490:
 13664                           
 13665                           ; BSR set to: 15
 13666                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
 13667  00149C  0100               	movlb	0	; () banked
 13668  00149E  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13669  0014A0  D003               	goto	l491
 13670                           
 13671                           ; BSR set to: 0
 13672                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
 13673  0014A2  010F               	movlb	15	; () banked
 13674  0014A4  8D09               	bsf	9,6,b	;volatile
 13675  0014A6  D002               	goto	l492
 13676  0014A8                     l491:
 13677                           
 13678                           ; BSR set to: 0
 13679                           ;inc\CANlib.h: 942: else
 13680                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
 13681  0014A8  010F               	movlb	15	; () banked
 13682  0014AA  9D09               	bcf	9,6,b	;volatile
 13683  0014AC                     l492:
 13684                           
 13685                           ; BSR set to: 15
 13686                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
 13687  0014AC  0100               	movlb	0	; () banked
 13688  0014AE  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13689  0014B0  D003               	goto	l493
 13690                           
 13691                           ; BSR set to: 0
 13692                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
 13693  0014B2  010F               	movlb	15	; () banked
 13694  0014B4  8F09               	bsf	9,7,b	;volatile
 13695  0014B6  D002               	goto	l5542
 13696  0014B8                     l493:
 13697                           
 13698                           ; BSR set to: 0
 13699                           ;inc\CANlib.h: 947: else
 13700                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
 13701  0014B8  010F               	movlb	15	; () banked
 13702  0014BA  9F09               	bcf	9,7,b	;volatile
 13703  0014BC                     l5542:
 13704                           
 13705                           ; BSR set to: 15
 13706                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
 13707  0014BC  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13708  0014C0  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13709  0014C4  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13710  0014C8  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13711  0014CC  0E16               	movlw	22
 13712  0014CE  D006               	goto	u6840
 13713  0014D0                     u6845:
 13714  0014D0  0100               	movlb	0	; () banked
 13715  0014D2  90D8               	bcf	status,0,c
 13716  0014D4  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13717  0014D6  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13718  0014D8  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13719  0014DA  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13720  0014DC                     u6840:
 13721  0014DC  2EE8               	decfsz	wreg,f,c
 13722  0014DE  D7F8               	goto	u6845
 13723  0014E0  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13724  0014E4  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13725  0014E8  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13726  0014EC  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13727                           
 13728                           ; BSR set to: 0
 13729                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
 13730  0014F0  0100               	movlb	0	; () banked
 13731  0014F2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13732  0014F4  0100               	movlb	0	; () banked
 13733  0014F6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13734  0014F8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13735  0014FA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13736  0014FC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13737                           
 13738                           ; BSR set to: 0
 13739                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
 13740  0014FE  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 13741  001502                     l5548:
 13742                           
 13743                           ; BSR set to: 0
 13744                           ;inc\CANlib.h: 953: }
 13745                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
 13746  001502  0E03               	movlw	3
 13747  001504  0100               	movlb	0	; () banked
 13748  001506  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13749  001508  A4D8               	btfss	status,2,c
 13750  00150A  D089               	goto	l5582
 13751                           
 13752                           ; BSR set to: 0
 13753  00150C  0EF7               	movlw	247
 13754  00150E  0100               	movlb	0	; () banked
 13755  001510  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13756  001512  A4D8               	btfss	status,2,c
 13757  001514  D084               	goto	l5582
 13758                           
 13759                           ; BSR set to: 0
 13760                           ;inc\CANlib.h: 956: {
 13761                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
 13762  001516  010F               	movlb	15	; () banked
 13763  001518  870D               	bsf	13,3,b	;volatile
 13764                           
 13765                           ; BSR set to: 15
 13766                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
 13767  00151A  0100               	movlb	0	; () banked
 13768  00151C  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13769  00151E  0100               	movlb	0	; () banked
 13770  001520  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13771  001522  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13772  001524  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13773  001526  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13774                           
 13775                           ; BSR set to: 0
 13776                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
 13777  001528  C081  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
 13778                           
 13779                           ; BSR set to: 0
 13780                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
 13781  00152C  0E00               	movlw	0
 13782  00152E  0100               	movlb	0	; () banked
 13783  001530  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13784  001532  0100               	movlb	0	; () banked
 13785  001534  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13786  001536  0EFF               	movlw	255
 13787  001538  0100               	movlb	0	; () banked
 13788  00153A  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13789  00153C  0100               	movlb	0	; () banked
 13790  00153E  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13791  001540  0E00               	movlw	0
 13792  001542  0100               	movlb	0	; () banked
 13793  001544  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13794  001546  0100               	movlb	0	; () banked
 13795  001548  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13796  00154A  0E00               	movlw	0
 13797  00154C  0100               	movlb	0	; () banked
 13798  00154E  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13799  001550  0100               	movlb	0	; () banked
 13800  001552  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13801                           
 13802                           ; BSR set to: 0
 13803                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
 13804  001554  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13805  001558  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13806  00155C  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13807  001560  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13808  001564  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13809  001568  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13810  00156C  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13811  001570  0100               	movlb	0	; () banked
 13812  001572  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13813  001574  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13814  001578  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13815  00157C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13816  001580  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13817                           
 13818                           ; BSR set to: 0
 13819                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
 13820  001584  C081  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
 13821                           
 13822                           ; BSR set to: 0
 13823                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
 13824  001588  0100               	movlb	0	; () banked
 13825  00158A  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13826  00158C  D003               	goto	l496
 13827                           
 13828                           ; BSR set to: 0
 13829                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
 13830  00158E  010F               	movlb	15	; () banked
 13831  001590  810D               	bsf	13,0,b	;volatile
 13832  001592  D002               	goto	l497
 13833  001594                     l496:
 13834                           
 13835                           ; BSR set to: 0
 13836                           ;inc\CANlib.h: 968: else
 13837                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
 13838  001594  010F               	movlb	15	; () banked
 13839  001596  910D               	bcf	13,0,b	;volatile
 13840  001598                     l497:
 13841                           
 13842                           ; BSR set to: 15
 13843                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
 13844  001598  0100               	movlb	0	; () banked
 13845  00159A  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13846  00159C  D003               	goto	l498
 13847                           
 13848                           ; BSR set to: 0
 13849                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
 13850  00159E  010F               	movlb	15	; () banked
 13851  0015A0  830D               	bsf	13,1,b	;volatile
 13852  0015A2  D002               	goto	l499
 13853  0015A4                     l498:
 13854                           
 13855                           ; BSR set to: 0
 13856                           ;inc\CANlib.h: 973: else
 13857                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
 13858  0015A4  010F               	movlb	15	; () banked
 13859  0015A6  930D               	bcf	13,1,b	;volatile
 13860  0015A8                     l499:
 13861                           
 13862                           ; BSR set to: 15
 13863                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
 13864  0015A8  0100               	movlb	0	; () banked
 13865  0015AA  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13866  0015AC  D003               	goto	l500
 13867                           
 13868                           ; BSR set to: 0
 13869                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
 13870  0015AE  010F               	movlb	15	; () banked
 13871  0015B0  8B0D               	bsf	13,5,b	;volatile
 13872  0015B2  D002               	goto	l501
 13873  0015B4                     l500:
 13874                           
 13875                           ; BSR set to: 0
 13876                           ;inc\CANlib.h: 978: else
 13877                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
 13878  0015B4  010F               	movlb	15	; () banked
 13879  0015B6  9B0D               	bcf	13,5,b	;volatile
 13880  0015B8                     l501:
 13881                           
 13882                           ; BSR set to: 15
 13883                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
 13884  0015B8  0100               	movlb	0	; () banked
 13885  0015BA  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13886  0015BC  D003               	goto	l502
 13887                           
 13888                           ; BSR set to: 0
 13889                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
 13890  0015BE  010F               	movlb	15	; () banked
 13891  0015C0  8D0D               	bsf	13,6,b	;volatile
 13892  0015C2  D002               	goto	l503
 13893  0015C4                     l502:
 13894                           
 13895                           ; BSR set to: 0
 13896                           ;inc\CANlib.h: 983: else
 13897                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
 13898  0015C4  010F               	movlb	15	; () banked
 13899  0015C6  9D0D               	bcf	13,6,b	;volatile
 13900  0015C8                     l503:
 13901                           
 13902                           ; BSR set to: 15
 13903                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
 13904  0015C8  0100               	movlb	0	; () banked
 13905  0015CA  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13906  0015CC  D003               	goto	l504
 13907                           
 13908                           ; BSR set to: 0
 13909                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
 13910  0015CE  010F               	movlb	15	; () banked
 13911  0015D0  8F0D               	bsf	13,7,b	;volatile
 13912  0015D2  D002               	goto	l5576
 13913  0015D4                     l504:
 13914                           
 13915                           ; BSR set to: 0
 13916                           ;inc\CANlib.h: 988: else
 13917                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
 13918  0015D4  010F               	movlb	15	; () banked
 13919  0015D6  9F0D               	bcf	13,7,b	;volatile
 13920  0015D8                     l5576:
 13921                           
 13922                           ; BSR set to: 15
 13923                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
 13924  0015D8  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13925  0015DC  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13926  0015E0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13927  0015E4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13928  0015E8  0E16               	movlw	22
 13929  0015EA  D006               	goto	u6920
 13930  0015EC                     u6925:
 13931  0015EC  0100               	movlb	0	; () banked
 13932  0015EE  90D8               	bcf	status,0,c
 13933  0015F0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13934  0015F2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13935  0015F4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13936  0015F6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13937  0015F8                     u6920:
 13938  0015F8  2EE8               	decfsz	wreg,f,c
 13939  0015FA  D7F8               	goto	u6925
 13940  0015FC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13941  001600  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13942  001604  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13943  001608  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13944                           
 13945                           ; BSR set to: 0
 13946                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
 13947  00160C  0100               	movlb	0	; () banked
 13948  00160E  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13949  001610  0100               	movlb	0	; () banked
 13950  001612  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13951  001614  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13952  001616  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13953  001618  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13954                           
 13955                           ; BSR set to: 0
 13956                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
 13957  00161A  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 13958  00161E                     l5582:
 13959                           
 13960                           ; BSR set to: 0
 13961                           ;inc\CANlib.h: 994: }
 13962                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
 13963  00161E  0E04               	movlw	4
 13964  001620  0100               	movlb	0	; () banked
 13965  001622  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13966  001624  A4D8               	btfss	status,2,c
 13967  001626  D089               	goto	l5616
 13968                           
 13969                           ; BSR set to: 0
 13970  001628  0EF7               	movlw	247
 13971  00162A  0100               	movlb	0	; () banked
 13972  00162C  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13973  00162E  A4D8               	btfss	status,2,c
 13974  001630  D084               	goto	l5616
 13975                           
 13976                           ; BSR set to: 0
 13977                           ;inc\CANlib.h: 997: {
 13978                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
 13979  001632  010F               	movlb	15	; () banked
 13980  001634  8711               	bsf	17,3,b	;volatile
 13981                           
 13982                           ; BSR set to: 15
 13983                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
 13984  001636  0100               	movlb	0	; () banked
 13985  001638  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13986  00163A  0100               	movlb	0	; () banked
 13987  00163C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13988  00163E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13989  001640  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13990  001642  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13991                           
 13992                           ; BSR set to: 0
 13993                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
 13994  001644  C081  FF13         	movff	CANSetFilter@tamp,3859	;volatile
 13995                           
 13996                           ; BSR set to: 0
 13997                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
 13998  001648  0E00               	movlw	0
 13999  00164A  0100               	movlb	0	; () banked
 14000  00164C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 14001  00164E  0100               	movlb	0	; () banked
 14002  001650  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14003  001652  0EFF               	movlw	255
 14004  001654  0100               	movlb	0	; () banked
 14005  001656  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 14006  001658  0100               	movlb	0	; () banked
 14007  00165A  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 14008  00165C  0E00               	movlw	0
 14009  00165E  0100               	movlb	0	; () banked
 14010  001660  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 14011  001662  0100               	movlb	0	; () banked
 14012  001664  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 14013  001666  0E00               	movlw	0
 14014  001668  0100               	movlb	0	; () banked
 14015  00166A  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 14016  00166C  0100               	movlb	0	; () banked
 14017  00166E  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 14018                           
 14019                           ; BSR set to: 0
 14020                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
 14021  001670  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 14022  001674  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 14023  001678  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 14024  00167C  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 14025  001680  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 14026  001684  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 14027  001688  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 14028  00168C  0100               	movlb	0	; () banked
 14029  00168E  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 14030  001690  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14031  001694  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14032  001698  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14033  00169C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14034                           
 14035                           ; BSR set to: 0
 14036                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
 14037  0016A0  C081  FF12         	movff	CANSetFilter@tamp,3858	;volatile
 14038                           
 14039                           ; BSR set to: 0
 14040                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
 14041  0016A4  0100               	movlb	0	; () banked
 14042  0016A6  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 14043  0016A8  D003               	goto	l507
 14044                           
 14045                           ; BSR set to: 0
 14046                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
 14047  0016AA  010F               	movlb	15	; () banked
 14048  0016AC  8111               	bsf	17,0,b	;volatile
 14049  0016AE  D002               	goto	l508
 14050  0016B0                     l507:
 14051                           
 14052                           ; BSR set to: 0
 14053                           ;inc\CANlib.h: 1009: else
 14054                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
 14055  0016B0  010F               	movlb	15	; () banked
 14056  0016B2  9111               	bcf	17,0,b	;volatile
 14057  0016B4                     l508:
 14058                           
 14059                           ; BSR set to: 15
 14060                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
 14061  0016B4  0100               	movlb	0	; () banked
 14062  0016B6  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 14063  0016B8  D003               	goto	l509
 14064                           
 14065                           ; BSR set to: 0
 14066                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
 14067  0016BA  010F               	movlb	15	; () banked
 14068  0016BC  8311               	bsf	17,1,b	;volatile
 14069  0016BE  D002               	goto	l510
 14070  0016C0                     l509:
 14071                           
 14072                           ; BSR set to: 0
 14073                           ;inc\CANlib.h: 1014: else
 14074                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
 14075  0016C0  010F               	movlb	15	; () banked
 14076  0016C2  9311               	bcf	17,1,b	;volatile
 14077  0016C4                     l510:
 14078                           
 14079                           ; BSR set to: 15
 14080                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
 14081  0016C4  0100               	movlb	0	; () banked
 14082  0016C6  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 14083  0016C8  D003               	goto	l511
 14084                           
 14085                           ; BSR set to: 0
 14086                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
 14087  0016CA  010F               	movlb	15	; () banked
 14088  0016CC  8B11               	bsf	17,5,b	;volatile
 14089  0016CE  D002               	goto	l512
 14090  0016D0                     l511:
 14091                           
 14092                           ; BSR set to: 0
 14093                           ;inc\CANlib.h: 1019: else
 14094                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
 14095  0016D0  010F               	movlb	15	; () banked
 14096  0016D2  9B11               	bcf	17,5,b	;volatile
 14097  0016D4                     l512:
 14098                           
 14099                           ; BSR set to: 15
 14100                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
 14101  0016D4  0100               	movlb	0	; () banked
 14102  0016D6  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 14103  0016D8  D003               	goto	l513
 14104                           
 14105                           ; BSR set to: 0
 14106                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
 14107  0016DA  010F               	movlb	15	; () banked
 14108  0016DC  8D11               	bsf	17,6,b	;volatile
 14109  0016DE  D002               	goto	l514
 14110  0016E0                     l513:
 14111                           
 14112                           ; BSR set to: 0
 14113                           ;inc\CANlib.h: 1024: else
 14114                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
 14115  0016E0  010F               	movlb	15	; () banked
 14116  0016E2  9D11               	bcf	17,6,b	;volatile
 14117  0016E4                     l514:
 14118                           
 14119                           ; BSR set to: 15
 14120                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
 14121  0016E4  0100               	movlb	0	; () banked
 14122  0016E6  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 14123  0016E8  D003               	goto	l515
 14124                           
 14125                           ; BSR set to: 0
 14126                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
 14127  0016EA  010F               	movlb	15	; () banked
 14128  0016EC  8F11               	bsf	17,7,b	;volatile
 14129  0016EE  D002               	goto	l5610
 14130  0016F0                     l515:
 14131                           
 14132                           ; BSR set to: 0
 14133                           ;inc\CANlib.h: 1029: else
 14134                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
 14135  0016F0  010F               	movlb	15	; () banked
 14136  0016F2  9F11               	bcf	17,7,b	;volatile
 14137  0016F4                     l5610:
 14138                           
 14139                           ; BSR set to: 15
 14140                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
 14141  0016F4  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 14142  0016F8  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 14143  0016FC  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 14144  001700  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 14145  001704  0E16               	movlw	22
 14146  001706  D006               	goto	u7000
 14147  001708                     u7005:
 14148  001708  0100               	movlb	0	; () banked
 14149  00170A  90D8               	bcf	status,0,c
 14150  00170C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 14151  00170E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 14152  001710  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 14153  001712  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 14154  001714                     u7000:
 14155  001714  2EE8               	decfsz	wreg,f,c
 14156  001716  D7F8               	goto	u7005
 14157  001718  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14158  00171C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14159  001720  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14160  001724  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14161                           
 14162                           ; BSR set to: 0
 14163                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
 14164  001728  0100               	movlb	0	; () banked
 14165  00172A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 14166  00172C  0100               	movlb	0	; () banked
 14167  00172E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14168  001730  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14169  001732  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14170  001734  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14171                           
 14172                           ; BSR set to: 0
 14173                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
 14174  001736  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 14175  00173A                     l5616:
 14176                           
 14177                           ; BSR set to: 0
 14178                           ;inc\CANlib.h: 1035: }
 14179                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
 14180  00173A  0E05               	movlw	5
 14181  00173C  0100               	movlb	0	; () banked
 14182  00173E  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 14183  001740  A4D8               	btfss	status,2,c
 14184  001742  0012               	return	
 14185                           
 14186                           ; BSR set to: 0
 14187  001744  0EF7               	movlw	247
 14188  001746  0100               	movlb	0	; () banked
 14189  001748  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 14190  00174A  A4D8               	btfss	status,2,c
 14191  00174C  0012               	return	
 14192                           
 14193                           ; BSR set to: 0
 14194                           ;inc\CANlib.h: 1038: {
 14195                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
 14196  00174E  010F               	movlb	15	; () banked
 14197  001750  8715               	bsf	21,3,b	;volatile
 14198                           
 14199                           ; BSR set to: 15
 14200                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
 14201  001752  0100               	movlb	0	; () banked
 14202  001754  5177               	movf	CANSetFilter@filter& (0+255),w,b
 14203  001756  0100               	movlb	0	; () banked
 14204  001758  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14205  00175A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14206  00175C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14207  00175E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14208                           
 14209                           ; BSR set to: 0
 14210                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
 14211  001760  C081  FF17         	movff	CANSetFilter@tamp,3863	;volatile
 14212                           
 14213                           ; BSR set to: 0
 14214                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
 14215  001764  0E00               	movlw	0
 14216  001766  0100               	movlb	0	; () banked
 14217  001768  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 14218  00176A  0100               	movlb	0	; () banked
 14219  00176C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14220  00176E  0EFF               	movlw	255
 14221  001770  0100               	movlb	0	; () banked
 14222  001772  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 14223  001774  0100               	movlb	0	; () banked
 14224  001776  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 14225  001778  0E00               	movlw	0
 14226  00177A  0100               	movlb	0	; () banked
 14227  00177C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 14228  00177E  0100               	movlb	0	; () banked
 14229  001780  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 14230  001782  0E00               	movlw	0
 14231  001784  0100               	movlb	0	; () banked
 14232  001786  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 14233  001788  0100               	movlb	0	; () banked
 14234  00178A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 14235                           
 14236                           ; BSR set to: 0
 14237                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
 14238  00178C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 14239  001790  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 14240  001794  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 14241  001798  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 14242  00179C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 14243  0017A0  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 14244  0017A4  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 14245  0017A8  0100               	movlb	0	; () banked
 14246  0017AA  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 14247  0017AC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14248  0017B0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14249  0017B4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14250  0017B8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14251                           
 14252                           ; BSR set to: 0
 14253                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
 14254  0017BC  C081  FF16         	movff	CANSetFilter@tamp,3862	;volatile
 14255                           
 14256                           ; BSR set to: 0
 14257                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
 14258  0017C0  0100               	movlb	0	; () banked
 14259  0017C2  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 14260  0017C4  D003               	goto	l518
 14261                           
 14262                           ; BSR set to: 0
 14263                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
 14264  0017C6  010F               	movlb	15	; () banked
 14265  0017C8  8115               	bsf	21,0,b	;volatile
 14266  0017CA  D002               	goto	l519
 14267  0017CC                     l518:
 14268                           
 14269                           ; BSR set to: 0
 14270                           ;inc\CANlib.h: 1050: else
 14271                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
 14272  0017CC  010F               	movlb	15	; () banked
 14273  0017CE  9115               	bcf	21,0,b	;volatile
 14274  0017D0                     l519:
 14275                           
 14276                           ; BSR set to: 15
 14277                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
 14278  0017D0  0100               	movlb	0	; () banked
 14279  0017D2  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 14280  0017D4  D003               	goto	l520
 14281                           
 14282                           ; BSR set to: 0
 14283                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
 14284  0017D6  010F               	movlb	15	; () banked
 14285  0017D8  8315               	bsf	21,1,b	;volatile
 14286  0017DA  D002               	goto	l521
 14287  0017DC                     l520:
 14288                           
 14289                           ; BSR set to: 0
 14290                           ;inc\CANlib.h: 1055: else
 14291                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
 14292  0017DC  010F               	movlb	15	; () banked
 14293  0017DE  9315               	bcf	21,1,b	;volatile
 14294  0017E0                     l521:
 14295                           
 14296                           ; BSR set to: 15
 14297                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
 14298  0017E0  0100               	movlb	0	; () banked
 14299  0017E2  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 14300  0017E4  D003               	goto	l522
 14301                           
 14302                           ; BSR set to: 0
 14303                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
 14304  0017E6  010F               	movlb	15	; () banked
 14305  0017E8  8B15               	bsf	21,5,b	;volatile
 14306  0017EA  D002               	goto	l523
 14307  0017EC                     l522:
 14308                           
 14309                           ; BSR set to: 0
 14310                           ;inc\CANlib.h: 1060: else
 14311                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
 14312  0017EC  010F               	movlb	15	; () banked
 14313  0017EE  9B15               	bcf	21,5,b	;volatile
 14314  0017F0                     l523:
 14315                           
 14316                           ; BSR set to: 15
 14317                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
 14318  0017F0  0100               	movlb	0	; () banked
 14319  0017F2  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 14320  0017F4  D003               	goto	l524
 14321                           
 14322                           ; BSR set to: 0
 14323                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
 14324  0017F6  010F               	movlb	15	; () banked
 14325  0017F8  8D15               	bsf	21,6,b	;volatile
 14326  0017FA  D002               	goto	l525
 14327  0017FC                     l524:
 14328                           
 14329                           ; BSR set to: 0
 14330                           ;inc\CANlib.h: 1065: else
 14331                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
 14332  0017FC  010F               	movlb	15	; () banked
 14333  0017FE  9D15               	bcf	21,6,b	;volatile
 14334  001800                     l525:
 14335                           
 14336                           ; BSR set to: 15
 14337                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
 14338  001800  0100               	movlb	0	; () banked
 14339  001802  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 14340  001804  D003               	goto	l526
 14341                           
 14342                           ; BSR set to: 0
 14343                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
 14344  001806  010F               	movlb	15	; () banked
 14345  001808  8F15               	bsf	21,7,b	;volatile
 14346  00180A  D002               	goto	l5644
 14347  00180C                     l526:
 14348                           
 14349                           ; BSR set to: 0
 14350                           ;inc\CANlib.h: 1070: else
 14351                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
 14352  00180C  010F               	movlb	15	; () banked
 14353  00180E  9F15               	bcf	21,7,b	;volatile
 14354  001810                     l5644:
 14355                           
 14356                           ; BSR set to: 15
 14357                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
 14358  001810  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 14359  001814  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 14360  001818  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 14361  00181C  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 14362  001820  0E16               	movlw	22
 14363  001822  D006               	goto	u7080
 14364  001824                     u7085:
 14365  001824  0100               	movlb	0	; () banked
 14366  001826  90D8               	bcf	status,0,c
 14367  001828  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 14368  00182A  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 14369  00182C  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 14370  00182E  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 14371  001830                     u7080:
 14372  001830  2EE8               	decfsz	wreg,f,c
 14373  001832  D7F8               	goto	u7085
 14374  001834  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14375  001838  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14376  00183C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14377  001840  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14378                           
 14379                           ; BSR set to: 0
 14380                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
 14381  001844  0100               	movlb	0	; () banked
 14382  001846  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 14383  001848  0100               	movlb	0	; () banked
 14384  00184A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14385  00184C  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14386  00184E  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14387  001850  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14388                           
 14389                           ; BSR set to: 0
 14390                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
 14391  001852  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 14392  001856  0012               	return	
 14393  001858                     __end_of_CANSetFilter:
 14394                           	opt stack 0
 14395                           tblptru	equ	0xFF8
 14396                           tblptrh	equ	0xFF7
 14397                           tblptrl	equ	0xFF6
 14398                           tablat	equ	0xFF5
 14399                           prodh	equ	0xFF4
 14400                           prodl	equ	0xFF3
 14401                           intcon	equ	0xFF2
 14402                           intcon2	equ	0xFF1
 14403                           postinc0	equ	0xFEE
 14404                           wreg	equ	0xFE8
 14405                           postdec1	equ	0xFE5
 14406                           fsr1l	equ	0xFE1
 14407                           indf2	equ	0xFDF
 14408                           postinc2	equ	0xFDE
 14409                           postdec2	equ	0xFDD
 14410                           fsr2h	equ	0xFDA
 14411                           fsr2l	equ	0xFD9
 14412                           status	equ	0xFD8
 14413                           
 14414 ;; *************** function _CANOperationMode *****************
 14415 ;; Defined at:
 14416 ;;		line 206 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 14417 ;; Parameters:    Size  Location     Type
 14418 ;;  mode            1    wreg     enum E16307
 14419 ;; Auto vars:     Size  Location     Type
 14420 ;;  mode            1   23[BANK0 ] enum E16307
 14421 ;; Return value:  Size  Location     Type
 14422 ;;		None               void
 14423 ;; Registers used:
 14424 ;;		wreg, status,2, status,0
 14425 ;; Tracked objects:
 14426 ;;		On entry : 0/0
 14427 ;;		On exit  : 0/0
 14428 ;;		Unchanged: 0/0
 14429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14431 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14433 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14434 ;;Total ram usage:        1 bytes
 14435 ;; Hardware stack levels used:    1
 14436 ;; Hardware stack levels required when called:    4
 14437 ;; This function calls:
 14438 ;;		Nothing
 14439 ;; This function is called by:
 14440 ;;		_CANInitialize
 14441 ;; This function uses a non-reentrant model
 14442 ;;
 14443                           
 14444                           	psect	text33
 14445  0066C4                     __ptext33:
 14446                           	opt stack 0
 14447  0066C4                     _CANOperationMode:
 14448                           	opt stack 24
 14449                           
 14450                           ; BSR set to: 0
 14451                           ;incstack = 0
 14452                           ;CANOperationMode@mode stored from wreg
 14453  0066C4  0100               	movlb	0	; () banked
 14454  0066C6  6F77               	movwf	CANOperationMode@mode& (0+255),b
 14455                           
 14456                           ;inc\CANlib.h: 208: CANCON = mode;
 14457  0066C8  C077  FF6F         	movff	CANOperationMode@mode,3951	;volatile
 14458  0066CC                     l7570:
 14459  0066CC  506E               	movf	3950,w,c	;volatile
 14460  0066CE  0BE0               	andlw	224
 14461  0066D0  0100               	movlb	0	; () banked
 14462  0066D2  1977               	xorwf	CANOperationMode@mode& (0+255),w,b
 14463  0066D4  B4D8               	btfsc	status,2,c
 14464  0066D6  0012               	return	
 14465  0066D8  D7F9               	goto	l7570
 14466  0066DA                     __end_of_CANOperationMode:
 14467                           	opt stack 0
 14468                           tblptru	equ	0xFF8
 14469                           tblptrh	equ	0xFF7
 14470                           tblptrl	equ	0xFF6
 14471                           tablat	equ	0xFF5
 14472                           prodh	equ	0xFF4
 14473                           prodl	equ	0xFF3
 14474                           intcon	equ	0xFF2
 14475                           intcon2	equ	0xFF1
 14476                           postinc0	equ	0xFEE
 14477                           wreg	equ	0xFE8
 14478                           postdec1	equ	0xFE5
 14479                           fsr1l	equ	0xFE1
 14480                           indf2	equ	0xFDF
 14481                           postinc2	equ	0xFDE
 14482                           postdec2	equ	0xFDD
 14483                           fsr2h	equ	0xFDA
 14484                           fsr2l	equ	0xFD9
 14485                           status	equ	0xFD8
 14486                           
 14487 ;; *************** function _can_interpreter *****************
 14488 ;; Defined at:
 14489 ;;		line 481 in file "parcheggio.c"
 14490 ;; Parameters:    Size  Location     Type
 14491 ;;		None
 14492 ;; Auto vars:     Size  Location     Type
 14493 ;;		None
 14494 ;; Return value:  Size  Location     Type
 14495 ;;		None               void
 14496 ;; Registers used:
 14497 ;;		wreg, status,2, status,0
 14498 ;; Tracked objects:
 14499 ;;		On entry : 0/0
 14500 ;;		On exit  : 0/0
 14501 ;;		Unchanged: 0/0
 14502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14505 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14506 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14507 ;;Total ram usage:        4 bytes
 14508 ;; Hardware stack levels used:    1
 14509 ;; Hardware stack levels required when called:    4
 14510 ;; This function calls:
 14511 ;;		Nothing
 14512 ;; This function is called by:
 14513 ;;		_main
 14514 ;; This function uses a non-reentrant model
 14515 ;;
 14516                           
 14517                           	psect	text34
 14518  0064AA                     __ptext34:
 14519                           	opt stack 0
 14520  0064AA                     _can_interpreter:
 14521                           	opt stack 26
 14522                           
 14523                           ;parcheggio.c: 482: left_speed = data_speed_rx[1];
 14524                           
 14525                           ; BSR set to: 0
 14526                           ;incstack = 0
 14527  0064AA  C109  F01D         	movff	_data_speed_rx+1,_left_speed
 14528  0064AE  6A1E               	clrf	_left_speed+1,c
 14529                           
 14530                           ;parcheggio.c: 483: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 14531  0064B0  501D               	movf	_left_speed,w,c
 14532  0064B2  0100               	movlb	0	; () banked
 14533  0064B4  6F77               	movwf	??_can_interpreter& (0+255),b
 14534  0064B6  0101               	movlb	1	; () banked
 14535  0064B8  5108               	movf	_data_speed_rx& (0+255),w,b
 14536  0064BA  6E1D               	movwf	_left_speed,c
 14537  0064BC  C077  F01E         	movff	??_can_interpreter,_left_speed+1
 14538                           
 14539                           ; BSR set to: 1
 14540                           ;parcheggio.c: 484: right_speed = data_speed_rx[3];
 14541  0064C0  C10B  F021         	movff	_data_speed_rx+3,_right_speed
 14542  0064C4  6A22               	clrf	_right_speed+1,c
 14543                           
 14544                           ;parcheggio.c: 485: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 14545  0064C6  5021               	movf	_right_speed,w,c
 14546  0064C8  0100               	movlb	0	; () banked
 14547  0064CA  6F77               	movwf	??_can_interpreter& (0+255),b
 14548  0064CC  0101               	movlb	1	; () banked
 14549  0064CE  510A               	movf	(_data_speed_rx+2)& (0+255),w,b
 14550  0064D0  6E21               	movwf	_right_speed,c
 14551  0064D2  C077  F022         	movff	??_can_interpreter,_right_speed+1
 14552                           
 14553                           ; BSR set to: 1
 14554                           ;parcheggio.c: 486: actual_speed = (right_speed + left_speed) / 2;
 14555  0064D6  501D               	movf	_left_speed,w,c
 14556  0064D8  2421               	addwf	_right_speed,w,c
 14557  0064DA  0100               	movlb	0	; () banked
 14558  0064DC  6F77               	movwf	??_can_interpreter& (0+255),b
 14559  0064DE  501E               	movf	_left_speed+1,w,c
 14560  0064E0  2022               	addwfc	_right_speed+1,w,c
 14561  0064E2  0100               	movlb	0	; () banked
 14562  0064E4  6F78               	movwf	(??_can_interpreter+1)& (0+255),b
 14563  0064E6  90D8               	bcf	status,0,c
 14564  0064E8  0100               	movlb	0	; () banked
 14565  0064EA  3178               	rrcf	(??_can_interpreter+1)& (0+255),w,b
 14566  0064EC  0100               	movlb	0	; () banked
 14567  0064EE  6F79               	movwf	(??_can_interpreter+2)& (0+255),b
 14568  0064F0  0100               	movlb	0	; () banked
 14569  0064F2  3177               	rrcf	??_can_interpreter& (0+255),w,b
 14570  0064F4  6E15               	movwf	_actual_speed,c
 14571  0064F6  C079  F016         	movff	??_can_interpreter+2,_actual_speed+1
 14572                           
 14573                           ; BSR set to: 0
 14574  0064FA  0012               	return		;funcret
 14575  0064FC                     __end_of_can_interpreter:
 14576                           	opt stack 0
 14577                           tblptru	equ	0xFF8
 14578                           tblptrh	equ	0xFF7
 14579                           tblptrl	equ	0xFF6
 14580                           tablat	equ	0xFF5
 14581                           prodh	equ	0xFF4
 14582                           prodl	equ	0xFF3
 14583                           intcon	equ	0xFF2
 14584                           intcon2	equ	0xFF1
 14585                           postinc0	equ	0xFEE
 14586                           wreg	equ	0xFE8
 14587                           postdec1	equ	0xFE5
 14588                           fsr1l	equ	0xFE1
 14589                           indf2	equ	0xFDF
 14590                           postinc2	equ	0xFDE
 14591                           postdec2	equ	0xFDD
 14592                           fsr2h	equ	0xFDA
 14593                           fsr2l	equ	0xFD9
 14594                           status	equ	0xFD8
 14595                           
 14596 ;; *************** function _ISR_Bassa *****************
 14597 ;; Defined at:
 14598 ;;		line 123 in file "parcheggio.c"
 14599 ;; Parameters:    Size  Location     Type
 14600 ;;		None
 14601 ;; Auto vars:     Size  Location     Type
 14602 ;;  i               1   38[COMRAM] unsigned char 
 14603 ;;  PORTA_temp      1   37[COMRAM] unsigned char 
 14604 ;; Return value:  Size  Location     Type
 14605 ;;		None               void
 14606 ;; Registers used:
 14607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14608 ;; Tracked objects:
 14609 ;;		On entry : 0/0
 14610 ;;		On exit  : 0/0
 14611 ;;		Unchanged: 0/0
 14612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14614 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14615 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14616 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14617 ;;Total ram usage:       23 bytes
 14618 ;; Hardware stack levels used:    1
 14619 ;; Hardware stack levels required when called:    3
 14620 ;; This function calls:
 14621 ;;		_CANreceiveMessage
 14622 ;;		i1_CANisTxReady
 14623 ;;		i1_CANsendMessage
 14624 ;; This function is called by:
 14625 ;;		Interrupt level 1
 14626 ;; This function uses a non-reentrant model
 14627 ;;
 14628                           
 14629                           	psect	intcodelo
 14630  000018                     __pintcodelo:
 14631                           	opt stack 0
 14632  000018                     _ISR_Bassa:
 14633                           	opt stack 21
 14634                           
 14635                           ; BSR set to: 0
 14636                           ;incstack = 0
 14637  000018  8055               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 14638  00001A  CFD8 F03E          	movff	status,??_ISR_Bassa+4
 14639  00001E  CFE8 F03F          	movff	wreg,??_ISR_Bassa+5
 14640  000022  CFE0 F040          	movff	bsr,??_ISR_Bassa+6
 14641  000026  CFFA F041          	movff	pclath,??_ISR_Bassa+7
 14642  00002A  CFFB F042          	movff	pclatu,??_ISR_Bassa+8
 14643  00002E  CFE9 F043          	movff	fsr0l,??_ISR_Bassa+9
 14644  000032  CFEA F044          	movff	fsr0h,??_ISR_Bassa+10
 14645  000036  CFE1 F045          	movff	fsr1l,??_ISR_Bassa+11
 14646  00003A  CFE2 F046          	movff	fsr1h,??_ISR_Bassa+12
 14647  00003E  CFD9 F047          	movff	fsr2l,??_ISR_Bassa+13
 14648  000042  CFDA F048          	movff	fsr2h,??_ISR_Bassa+14
 14649  000046  CFF3 F049          	movff	prodl,??_ISR_Bassa+15
 14650  00004A  CFF4 F04A          	movff	prodh,??_ISR_Bassa+16
 14651  00004E  CFF6 F04B          	movff	tblptrl,??_ISR_Bassa+17
 14652  000052  CFF7 F04C          	movff	tblptrh,??_ISR_Bassa+18
 14653  000056  CFF8 F04D          	movff	tblptru,??_ISR_Bassa+19
 14654  00005A  CFF5 F04E          	movff	tablat,??_ISR_Bassa+20
 14655                           
 14656                           ;parcheggio.c: 126: if (INTCONbits.TMR0IF == 1) {
 14657  00005E  A4F2               	btfss	intcon,2,c	;volatile
 14658  000060  D0A3               	goto	i1l6632
 14659                           
 14660                           ;parcheggio.c: 127: INTCONbits.INT0IE = 0;
 14661  000062  98F2               	bcf	intcon,4,c	;volatile
 14662                           
 14663                           ;parcheggio.c: 128: T0CONbits.TMR0ON = 0;
 14664  000064  9ED5               	bcf	4053,7,c	;volatile
 14665                           
 14666                           ;parcheggio.c: 129: TMR0H = 0x34;
 14667  000066  0E34               	movlw	52
 14668  000068  6ED7               	movwf	4055,c	;volatile
 14669                           
 14670                           ;parcheggio.c: 130: TMR0L = 0xE0;
 14671  00006A  0EE0               	movlw	224
 14672  00006C  6ED6               	movwf	4054,c	;volatile
 14673                           
 14674                           ;parcheggio.c: 131: T0CONbits.TMR0ON = 1;
 14675  00006E  8ED5               	bsf	4053,7,c	;volatile
 14676                           
 14677                           ;parcheggio.c: 133: if (distance_error == 1) {
 14678  000070  A851               	btfss	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14679  000072  D00C               	goto	i1l706
 14680                           
 14681                           ;parcheggio.c: 134: sensor_distance[MUX_index] = 5000;
 14682  000074  5025               	movf	_MUX_index,w,c	;volatile
 14683  000076  0D02               	mullw	2
 14684  000078  0E01               	movlw	low _sensor_distance
 14685  00007A  24F3               	addwf	prodl,w,c
 14686  00007C  6ED9               	movwf	fsr2l,c
 14687  00007E  0E00               	movlw	high _sensor_distance
 14688  000080  20F4               	addwfc	prodh,w,c
 14689  000082  6EDA               	movwf	fsr2h,c
 14690  000084  0E88               	movlw	136
 14691  000086  6EDE               	movwf	postinc2,c
 14692  000088  0E13               	movlw	19
 14693  00008A  6EDD               	movwf	postdec2,c
 14694  00008C                     i1l706:
 14695                           
 14696                           ;parcheggio.c: 135: }
 14697                           ;parcheggio.c: 137: if ((sensor_distance[MUX_index] < 10)&&(start_operation == 0)) {
 14698  00008C  5025               	movf	_MUX_index,w,c	;volatile
 14699  00008E  0D02               	mullw	2
 14700  000090  0E01               	movlw	low _sensor_distance
 14701  000092  24F3               	addwf	prodl,w,c
 14702  000094  6ED9               	movwf	fsr2l,c
 14703  000096  0E00               	movlw	high _sensor_distance
 14704  000098  20F4               	addwfc	prodh,w,c
 14705  00009A  6EDA               	movwf	fsr2h,c
 14706  00009C  0E01               	movlw	1
 14707  00009E  50DB               	movf	plusw2,w,c
 14708  0000A0  E113               	bnz	i1l6578
 14709  0000A2  0E0A               	movlw	10
 14710  0000A4  5CDE               	subwf	postinc2,w,c
 14711  0000A6  A0D8               	btfss	status,0,c
 14712  0000A8  BA52               	btfsc	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 14713  0000AA  D00E               	goto	i1l6578
 14714                           
 14715                           ;parcheggio.c: 138: sensor_distance_short[0] = sensor_distance_short[0] | (0b00000001 <<
      +                           MUX_index);
 14716  0000AC  C025  F03A         	movff	_MUX_index,??_ISR_Bassa	;volatile
 14717  0000B0  0E01               	movlw	1
 14718  0000B2  6E3B               	movwf	(??_ISR_Bassa+1)& (0+255),c
 14719  0000B4  2A3A               	incf	??_ISR_Bassa,f,c
 14720  0000B6  D002               	goto	i1u841_24
 14721  0000B8                     i1u841_25:
 14722  0000B8  90D8               	bcf	status,0,c
 14723  0000BA  363B               	rlcf	??_ISR_Bassa+1,f,c
 14724  0000BC                     i1u841_24:
 14725  0000BC  2E3A               	decfsz	??_ISR_Bassa,f,c
 14726  0000BE  D7FC               	goto	i1u841_25
 14727  0000C0  503B               	movf	??_ISR_Bassa+1,w,c
 14728  0000C2  0101               	movlb	1	; () banked
 14729  0000C4  1183               	iorwf	_sensor_distance_short& (0+255),w,b	;volatile
 14730  0000C6  D04D               	goto	L8
 14731  0000C8                     i1l6578:
 14732  0000C8  5025               	movf	_MUX_index,w,c	;volatile
 14733  0000CA  0D02               	mullw	2
 14734  0000CC  0E01               	movlw	low _sensor_distance
 14735  0000CE  24F3               	addwf	prodl,w,c
 14736  0000D0  6ED9               	movwf	fsr2l,c
 14737  0000D2  0E00               	movlw	high _sensor_distance
 14738  0000D4  20F4               	addwfc	prodh,w,c
 14739  0000D6  6EDA               	movwf	fsr2h,c
 14740  0000D8  0E01               	movlw	1
 14741  0000DA  50DB               	movf	plusw2,w,c
 14742  0000DC  E134               	bnz	i1l6600
 14743  0000DE  0E04               	movlw	4
 14744  0000E0  5CDE               	subwf	postinc2,w,c
 14745  0000E2  A0D8               	btfss	status,0,c
 14746  0000E4  AA52               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 14747  0000E6  D02F               	goto	i1l6600
 14748  0000E8  B451               	btfsc	_avvicinamento/(0+8),_avvicinamento& (0+7),c	;volatile
 14749  0000EA  D02D               	goto	i1l6600
 14750                           
 14751                           ;parcheggio.c: 140: counter++;
 14752  0000EC  2A28               	incf	_counter,f,c	;volatile
 14753                           
 14754                           ;parcheggio.c: 141: if (counter > 5) {
 14755  0000EE  0E05               	movlw	5
 14756  0000F0  6428               	cpfsgt	_counter,c	;volatile
 14757  0000F2  D039               	goto	i1l6602
 14758                           
 14759                           ;parcheggio.c: 142: if ((MUX_index == 0) || (MUX_index == 1) || (MUX_index == 2)) {
 14760  0000F4  5025               	movf	_MUX_index,w,c	;volatile
 14761  0000F6  B4D8               	btfsc	status,2,c
 14762  0000F8  D007               	goto	i1l6594
 14763  0000FA  0425               	decf	_MUX_index,w,c	;volatile
 14764  0000FC  B4D8               	btfsc	status,2,c
 14765  0000FE  D004               	goto	i1l6594
 14766  000100  0E02               	movlw	2
 14767  000102  1825               	xorwf	_MUX_index,w,c	;volatile
 14768  000104  A4D8               	btfss	status,2,c
 14769  000106  D02F               	goto	i1l6602
 14770  000108                     i1l6594:
 14771                           
 14772                           ;parcheggio.c: 143: data[1] = 0;
 14773  000108  0E00               	movlw	0
 14774  00010A  0101               	movlb	1	; () banked
 14775  00010C  6F54               	movwf	(_data+1)& (0+255),b
 14776                           
 14777                           ;parcheggio.c: 144: data[0] = 4;
 14778  00010E  0E04               	movlw	4
 14779  000110  0101               	movlb	1	; () banked
 14780  000112  6F53               	movwf	_data& (0+255),b
 14781  000114                     i1l6596:
 14782  000114  EC53  F033         	call	i1_CANisTxReady	;wreg free
 14783  000118  0900               	iorlw	0
 14784  00011A  B4D8               	btfsc	status,2,c
 14785  00011C  D7FB               	goto	i1l6596
 14786                           
 14787                           ;parcheggio.c: 146: CANsendMessage(0b00000001011, data, 8, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
 14788  00011E  0E0B               	movlw	11
 14789  000120  6E2A               	movwf	i1CANsendMessage@identifier,c
 14790  000122  0E00               	movlw	0
 14791  000124  6E2B               	movwf	i1CANsendMessage@identifier+1,c
 14792  000126  0E00               	movlw	0
 14793  000128  6E2C               	movwf	i1CANsendMessage@identifier+2,c
 14794  00012A  0E00               	movlw	0
 14795  00012C  6E2D               	movwf	i1CANsendMessage@identifier+3,c
 14796  00012E  0E53               	movlw	low _data
 14797  000130  6E2E               	movwf	i1CANsendMessage@data,c
 14798  000132  0E01               	movlw	high _data
 14799  000134  6E2F               	movwf	i1CANsendMessage@data+1,c
 14800  000136  0E08               	movlw	8
 14801  000138  6E30               	movwf	i1CANsendMessage@dataLength,c
 14802  00013A  0EBC               	movlw	188
 14803  00013C  6E31               	movwf	i1CANsendMessage@flags,c
 14804  00013E  ECF2  F00F         	call	i1_CANsendMessage	;wreg free
 14805  000142  00FF               	reset		;# 
 14806                           
 14807                           ;parcheggio.c: 148: }
 14808                           ;parcheggio.c: 149: }
 14809                           ;parcheggio.c: 150: } else {
 14810  000144  D010               	goto	i1l6602
 14811  000146                     i1l6600:
 14812                           
 14813                           ;parcheggio.c: 151: sensor_distance_short[0] = sensor_distance_short[0] & (~(0b00000001 
      +                          << MUX_index));
 14814  000146  C025  F03A         	movff	_MUX_index,??_ISR_Bassa	;volatile
 14815  00014A  0E01               	movlw	1
 14816  00014C  6E3B               	movwf	(??_ISR_Bassa+1)& (0+255),c
 14817  00014E  2A3A               	incf	??_ISR_Bassa,f,c
 14818  000150  D002               	goto	i1u850_24
 14819  000152                     i1u850_25:
 14820  000152  90D8               	bcf	status,0,c
 14821  000154  363B               	rlcf	??_ISR_Bassa+1,f,c
 14822  000156                     i1u850_24:
 14823  000156  2E3A               	decfsz	??_ISR_Bassa,f,c
 14824  000158  D7FC               	goto	i1u850_25
 14825  00015A  503B               	movf	??_ISR_Bassa+1,w,c
 14826  00015C  0AFF               	xorlw	255
 14827  00015E  0101               	movlb	1	; () banked
 14828  000160  1583               	andwf	_sensor_distance_short& (0+255),w,b	;volatile
 14829  000162                     L8:
 14830  000162  0101               	movlb	1	; () banked
 14831  000164  6F83               	movwf	_sensor_distance_short& (0+255),b	;volatile
 14832  000166                     i1l6602:
 14833                           
 14834                           ;parcheggio.c: 152: }
 14835                           ;parcheggio.c: 154: MUX_index++;
 14836  000166  2A25               	incf	_MUX_index,f,c	;volatile
 14837                           
 14838                           ;parcheggio.c: 155: if (MUX_index == 8) {
 14839  000168  0E08               	movlw	8
 14840  00016A  1825               	xorwf	_MUX_index,w,c	;volatile
 14841  00016C  A4D8               	btfss	status,2,c
 14842  00016E  D002               	goto	i1l718
 14843                           
 14844                           ;parcheggio.c: 156: MUX_index = 0;
 14845  000170  0E00               	movlw	0
 14846  000172  6E25               	movwf	_MUX_index,c	;volatile
 14847  000174                     i1l718:
 14848                           
 14849                           ;parcheggio.c: 157: }
 14850                           ;parcheggio.c: 159: unsigned char PORTA_temp = 0;
 14851  000174  0E00               	movlw	0
 14852  000176  6E4F               	movwf	ISR_Bassa@PORTA_temp,c
 14853                           
 14854                           ;parcheggio.c: 160: PORTA_temp = MUX_select[MUX_index];
 14855  000178  5025               	movf	_MUX_index,w,c	;volatile
 14856  00017A  0D01               	mullw	1
 14857  00017C  0E00               	movlw	low _MUX_select
 14858  00017E  24F3               	addwf	prodl,w,c
 14859  000180  6ED9               	movwf	fsr2l,c
 14860  000182  0E01               	movlw	high _MUX_select
 14861  000184  20F4               	addwfc	prodh,w,c
 14862  000186  6EDA               	movwf	fsr2h,c
 14863  000188  50DF               	movf	indf2,w,c
 14864  00018A  6E4F               	movwf	ISR_Bassa@PORTA_temp,c
 14865                           
 14866                           ;parcheggio.c: 161: PORTA = PORTA_temp;
 14867  00018C  C04F  FF80         	movff	ISR_Bassa@PORTA_temp,3968	;volatile
 14868                           
 14869                           ;parcheggio.c: 163: TRISBbits.RB0 = 0;
 14870  000190  9093               	bcf	3987,0,c	;volatile
 14871                           
 14872                           ;parcheggio.c: 164: LATBbits.LATB0 = 1;
 14873  000192  808A               	bsf	3978,0,c	;volatile
 14874                           
 14875                           ;parcheggio.c: 165: _delay((unsigned long)((15)*(16000000/4000000.0)));
 14876  000194  0E14               	movlw	20
 14877  000196                     i1u1072_27:
 14878  000196  2EE8               	decfsz	wreg,f,c
 14879  000198  D7FE               	goto	i1u1072_27
 14880                           
 14881                           ;parcheggio.c: 166: distance_error = 1;
 14882  00019A  8851               	bsf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14883                           
 14884                           ;parcheggio.c: 167: LATBbits.LATB0 = 0;
 14885  00019C  908A               	bcf	3978,0,c	;volatile
 14886                           
 14887                           ;parcheggio.c: 168: TRISBbits.RB0 = 1;
 14888  00019E  8093               	bsf	3987,0,c	;volatile
 14889                           
 14890                           ;parcheggio.c: 169: INTCONbits.INT0IF = 0;
 14891  0001A0  92F2               	bcf	intcon,1,c	;volatile
 14892                           
 14893                           ;parcheggio.c: 170: INTCONbits.INT0IE = 1;
 14894  0001A2  88F2               	bsf	intcon,4,c	;volatile
 14895                           
 14896                           ;parcheggio.c: 171: INTCONbits.TMR0IF = 0;
 14897  0001A4  94F2               	bcf	intcon,2,c	;volatile
 14898                           
 14899                           ;parcheggio.c: 172: INTCON2bits.INTEDG0 = 1;
 14900  0001A6  8CF1               	bsf	intcon2,6,c	;volatile
 14901  0001A8                     i1l6632:
 14902                           
 14903                           ;parcheggio.c: 173: }
 14904                           ;parcheggio.c: 176: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
 14905  0001A8  A0A4               	btfss	4004,0,c	;volatile
 14906  0001AA  B2A4               	btfsc	4004,1,c	;volatile
 14907  0001AC  D001               	goto	i1l6636
 14908  0001AE  D09D               	goto	i1l732
 14909  0001B0                     i1l6636:
 14910                           
 14911                           ;parcheggio.c: 177: CANreceiveMessage(&msg);
 14912  0001B0  0E44               	movlw	low _msg
 14913  0001B2  6E2A               	movwf	CANreceiveMessage@msg,c
 14914  0001B4  0E01               	movlw	high _msg
 14915  0001B6  6E2B               	movwf	CANreceiveMessage@msg+1,c
 14916  0001B8  ECFF  F015         	call	_CANreceiveMessage	;wreg free
 14917                           
 14918                           ;parcheggio.c: 179: if (msg.identifier == 0b00000001101) {
 14919  0001BC  0E0D               	movlw	13
 14920  0001BE  0101               	movlb	1	; () banked
 14921  0001C0  1944               	xorwf	_msg& (0+255),w,b
 14922  0001C2  0101               	movlb	1	; () banked
 14923  0001C4  1145               	iorwf	(_msg+1)& (0+255),w,b
 14924  0001C6  0101               	movlb	1	; () banked
 14925  0001C8  1146               	iorwf	(_msg+2)& (0+255),w,b
 14926  0001CA  0101               	movlb	1	; () banked
 14927  0001CC  1147               	iorwf	(_msg+3)& (0+255),w,b
 14928  0001CE  B4D8               	btfsc	status,2,c
 14929                           
 14930                           ; BSR set to: 1
 14931                           ;parcheggio.c: 180: asd = 0;
 14932  0001D0  9251               	bcf	_asd/(0+8),_asd& (0+7),c	;volatile
 14933                           
 14934                           ; BSR set to: 1
 14935                           ;parcheggio.c: 181: }
 14936                           ;parcheggio.c: 183: if ((msg.identifier == 0b00000000111) && (msg.RTR != 1)) {
 14937                           
 14938                           ; BSR set to: 1
 14939  0001D2  0E07               	movlw	7
 14940  0001D4  0101               	movlb	1	; () banked
 14941  0001D6  1944               	xorwf	_msg& (0+255),w,b
 14942  0001D8  0101               	movlb	1	; () banked
 14943  0001DA  1145               	iorwf	(_msg+1)& (0+255),w,b
 14944  0001DC  0101               	movlb	1	; () banked
 14945  0001DE  1146               	iorwf	(_msg+2)& (0+255),w,b
 14946  0001E0  0101               	movlb	1	; () banked
 14947  0001E2  1147               	iorwf	(_msg+3)& (0+255),w,b
 14948  0001E4  A4D8               	btfss	status,2,c
 14949  0001E6  D02D               	goto	i1l6658
 14950                           
 14951                           ; BSR set to: 1
 14952  0001E8  0101               	movlb	1	; () banked
 14953  0001EA  0552               	decf	(_msg+14)& (0+255),w,b
 14954  0001EC  B4D8               	btfsc	status,2,c
 14955  0001EE  D029               	goto	i1l6658
 14956                           
 14957                           ; BSR set to: 1
 14958                           ;parcheggio.c: 184: distance_average = 0;
 14959  0001F0  0E00               	movlw	0
 14960  0001F2  0100               	movlb	0	; () banked
 14961  0001F4  6FE3               	movwf	(_distance_average+1)& (0+255),b	;volatile
 14962  0001F6  0E00               	movlw	0
 14963  0001F8  6FE2               	movwf	_distance_average& (0+255),b	;volatile
 14964                           
 14965                           ; BSR set to: 0
 14966                           ;parcheggio.c: 185: distance_dx = msg.data[1];
 14967  0001FA  C149  F019         	movff	_msg+5,_distance_dx	;volatile
 14968  0001FE  6A1A               	clrf	_distance_dx+1,c	;volatile
 14969                           
 14970                           ;parcheggio.c: 186: distance_dx = ((distance_dx << 8) | msg.data[0]);
 14971  000200  5019               	movf	_distance_dx,w,c	;volatile
 14972  000202  6E3A               	movwf	??_ISR_Bassa& (0+255),c
 14973  000204  0101               	movlb	1	; () banked
 14974  000206  5148               	movf	(_msg+4)& (0+255),w,b
 14975  000208  6E19               	movwf	_distance_dx,c	;volatile
 14976  00020A  C03A  F01A         	movff	??_ISR_Bassa,_distance_dx+1	;volatile
 14977                           
 14978                           ; BSR set to: 1
 14979                           ;parcheggio.c: 187: distance_sx = msg.data[3];
 14980  00020E  C14B  F01B         	movff	_msg+7,_distance_sx	;volatile
 14981  000212  6A1C               	clrf	_distance_sx+1,c	;volatile
 14982                           
 14983                           ;parcheggio.c: 188: distance_sx = ((distance_sx << 8) | msg.data[2]);
 14984  000214  501B               	movf	_distance_sx,w,c	;volatile
 14985  000216  6E3A               	movwf	??_ISR_Bassa& (0+255),c
 14986  000218  0101               	movlb	1	; () banked
 14987  00021A  514A               	movf	(_msg+6)& (0+255),w,b
 14988  00021C  6E1B               	movwf	_distance_sx,c	;volatile
 14989  00021E  C03A  F01C         	movff	??_ISR_Bassa,_distance_sx+1	;volatile
 14990                           
 14991                           ; BSR set to: 1
 14992                           ;parcheggio.c: 189: distance_average = (distance_sx + distance_dx) / 2;
 14993  000222  5019               	movf	_distance_dx,w,c	;volatile
 14994  000224  241B               	addwf	_distance_sx,w,c	;volatile
 14995  000226  6E3A               	movwf	??_ISR_Bassa& (0+255),c
 14996  000228  501A               	movf	_distance_dx+1,w,c	;volatile
 14997  00022A  201C               	addwfc	_distance_sx+1,w,c	;volatile
 14998  00022C  6E3B               	movwf	(??_ISR_Bassa+1)& (0+255),c
 14999  00022E  90D8               	bcf	status,0,c
 15000  000230  303B               	rrcf	??_ISR_Bassa+1,w,c
 15001  000232  6E3C               	movwf	(??_ISR_Bassa+2)& (0+255),c
 15002  000234  303A               	rrcf	??_ISR_Bassa,w,c
 15003  000236  0100               	movlb	0	; () banked
 15004  000238  6FE2               	movwf	_distance_average& (0+255),b	;volatile
 15005  00023A  C03C  F0E3         	movff	??_ISR_Bassa+2,_distance_average+1	;volatile
 15006                           
 15007                           ; BSR set to: 0
 15008                           ;parcheggio.c: 190: distance_received = 1;
 15009  00023E  8A51               	bsf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
 15010                           
 15011                           ; BSR set to: 0
 15012                           ;parcheggio.c: 191: distance_received1 = 1;
 15013  000240  8C51               	bsf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
 15014  000242                     i1l6658:
 15015                           
 15016                           ;parcheggio.c: 192: }
 15017                           ;parcheggio.c: 194: if (msg.identifier == 0b00000001010) {
 15018  000242  0E0A               	movlw	10
 15019  000244  0101               	movlb	1	; () banked
 15020  000246  1944               	xorwf	_msg& (0+255),w,b
 15021  000248  0101               	movlb	1	; () banked
 15022  00024A  1145               	iorwf	(_msg+1)& (0+255),w,b
 15023  00024C  0101               	movlb	1	; () banked
 15024  00024E  1146               	iorwf	(_msg+2)& (0+255),w,b
 15025  000250  0101               	movlb	1	; () banked
 15026  000252  1147               	iorwf	(_msg+3)& (0+255),w,b
 15027  000254  A4D8               	btfss	status,2,c
 15028  000256  D00C               	goto	i1l6664
 15029                           
 15030                           ; BSR set to: 1
 15031                           ;parcheggio.c: 195: if (msg.data[0] == 1) {
 15032  000258  0101               	movlb	1	; () banked
 15033  00025A  0548               	decf	(_msg+4)& (0+255),w,b
 15034  00025C  A4D8               	btfss	status,2,c
 15035  00025E  D003               	goto	i1l725
 15036                           
 15037                           ; BSR set to: 1
 15038                           ;parcheggio.c: 196: activation = 1;
 15039  000260  8051               	bsf	_activation/(0+8),_activation& (0+7),c	;volatile
 15040                           
 15041                           ;parcheggio.c: 197: PORTBbits.RB6 = 1;
 15042  000262  8C81               	bsf	3969,6,c	;volatile
 15043                           
 15044                           ;parcheggio.c: 198: } else {
 15045  000264  D005               	goto	i1l6664
 15046  000266                     i1l725:
 15047                           
 15048                           ; BSR set to: 1
 15049                           ;parcheggio.c: 199: activation = 0;
 15050  000266  9051               	bcf	_activation/(0+8),_activation& (0+7),c	;volatile
 15051                           
 15052                           ;parcheggio.c: 200: PORTBbits.RB4 = 0;
 15053  000268  9881               	bcf	3969,4,c	;volatile
 15054                           
 15055                           ;parcheggio.c: 201: PORTBbits.RB5 = 0;
 15056  00026A  9A81               	bcf	3969,5,c	;volatile
 15057                           
 15058                           ;parcheggio.c: 202: PORTBbits.RB6 = 0;
 15059  00026C  9C81               	bcf	3969,6,c	;volatile
 15060                           
 15061                           ;parcheggio.c: 203: request_sent = 0;
 15062  00026E  9652               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
 15063  000270                     i1l6664:
 15064                           
 15065                           ; BSR set to: 1
 15066                           ;parcheggio.c: 204: }
 15067                           ;parcheggio.c: 205: }
 15068                           ;parcheggio.c: 207: if (msg.identifier == 0b00000001100) {
 15069  000270  0E0C               	movlw	12
 15070  000272  0101               	movlb	1	; () banked
 15071  000274  1944               	xorwf	_msg& (0+255),w,b
 15072  000276  0101               	movlb	1	; () banked
 15073  000278  1145               	iorwf	(_msg+1)& (0+255),w,b
 15074  00027A  0101               	movlb	1	; () banked
 15075  00027C  1146               	iorwf	(_msg+2)& (0+255),w,b
 15076  00027E  0101               	movlb	1	; () banked
 15077  000280  1147               	iorwf	(_msg+3)& (0+255),w,b
 15078  000282  B4D8               	btfsc	status,2,c
 15079                           
 15080                           ; BSR set to: 1
 15081                           ;parcheggio.c: 208: start_operation = 1;
 15082  000284  8A52               	bsf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 15083                           
 15084                           ; BSR set to: 1
 15085                           ;parcheggio.c: 209: }
 15086                           ;parcheggio.c: 212: if (msg.identifier == 0b00000000110) {
 15087                           
 15088                           ; BSR set to: 1
 15089  000286  0E06               	movlw	6
 15090  000288  0101               	movlb	1	; () banked
 15091  00028A  1944               	xorwf	_msg& (0+255),w,b
 15092  00028C  0101               	movlb	1	; () banked
 15093  00028E  1145               	iorwf	(_msg+1)& (0+255),w,b
 15094  000290  0101               	movlb	1	; () banked
 15095  000292  1146               	iorwf	(_msg+2)& (0+255),w,b
 15096  000294  0101               	movlb	1	; () banked
 15097  000296  1147               	iorwf	(_msg+3)& (0+255),w,b
 15098  000298  A4D8               	btfss	status,2,c
 15099  00029A  D01A               	goto	i1l6682
 15100                           
 15101                           ; BSR set to: 1
 15102                           ;parcheggio.c: 213: for (unsigned char i = 0; i < 8; i++) {
 15103  00029C  0E00               	movlw	0
 15104  00029E  6E50               	movwf	ISR_Bassa@i,c
 15105  0002A0                     i1l6672:
 15106                           
 15107                           ; BSR set to: 1
 15108  0002A0  0E07               	movlw	7
 15109  0002A2  6450               	cpfsgt	ISR_Bassa@i,c
 15110  0002A4  D001               	goto	i1l6676
 15111  0002A6  D014               	goto	i1l6682
 15112  0002A8                     i1l6676:
 15113                           
 15114                           ;parcheggio.c: 214: data_speed_rx[i] = msg.data[i];
 15115  0002A8  5050               	movf	ISR_Bassa@i,w,c
 15116  0002AA  0D01               	mullw	1
 15117  0002AC  0E48               	movlw	low (_msg+4)
 15118  0002AE  24F3               	addwf	prodl,w,c
 15119  0002B0  6ED9               	movwf	fsr2l,c
 15120  0002B2  0E01               	movlw	high (_msg+4)
 15121  0002B4  20F4               	addwfc	prodh,w,c
 15122  0002B6  6EDA               	movwf	fsr2h,c
 15123  0002B8  5050               	movf	ISR_Bassa@i,w,c
 15124  0002BA  0D01               	mullw	1
 15125  0002BC  0E08               	movlw	low _data_speed_rx
 15126  0002BE  24F3               	addwf	prodl,w,c
 15127  0002C0  6EE1               	movwf	fsr1l,c
 15128  0002C2  0E01               	movlw	high _data_speed_rx
 15129  0002C4  20F4               	addwfc	prodh,w,c
 15130  0002C6  6EE2               	movwf	fsr1h,c
 15131  0002C8  CFDF FFE7          	movff	indf2,indf1
 15132  0002CC  2A50               	incf	ISR_Bassa@i,f,c
 15133  0002CE  D7E8               	goto	i1l6672
 15134  0002D0                     i1l6682:
 15135                           
 15136                           ;parcheggio.c: 215: }
 15137                           ;parcheggio.c: 216: }
 15138                           ;parcheggio.c: 217: if (msg.identifier == 0b00000001101) {
 15139  0002D0  0E0D               	movlw	13
 15140  0002D2  0101               	movlb	1	; () banked
 15141  0002D4  1944               	xorwf	_msg& (0+255),w,b
 15142  0002D6  0101               	movlb	1	; () banked
 15143  0002D8  1145               	iorwf	(_msg+1)& (0+255),w,b
 15144  0002DA  0101               	movlb	1	; () banked
 15145  0002DC  1146               	iorwf	(_msg+2)& (0+255),w,b
 15146  0002DE  0101               	movlb	1	; () banked
 15147  0002E0  1147               	iorwf	(_msg+3)& (0+255),w,b
 15148  0002E2  B4D8               	btfsc	status,2,c
 15149                           
 15150                           ; BSR set to: 1
 15151                           ;parcheggio.c: 218: distance_wait = 0;
 15152  0002E4  9E51               	bcf	_distance_wait/(0+8),_distance_wait& (0+7),c	;volatile
 15153                           
 15154                           ; BSR set to: 1
 15155                           ;parcheggio.c: 219: }
 15156                           ;parcheggio.c: 222: PIR3bits.RXB0IF = 0;
 15157  0002E6  90A4               	bcf	4004,0,c	;volatile
 15158                           
 15159                           ;parcheggio.c: 223: PIR3bits.RXB1IF = 0;
 15160  0002E8  92A4               	bcf	4004,1,c	;volatile
 15161  0002EA                     i1l732:
 15162  0002EA  C04E  FFF5         	movff	??_ISR_Bassa+20,tablat
 15163  0002EE  C04D  FFF8         	movff	??_ISR_Bassa+19,tblptru
 15164  0002F2  C04C  FFF7         	movff	??_ISR_Bassa+18,tblptrh
 15165  0002F6  C04B  FFF6         	movff	??_ISR_Bassa+17,tblptrl
 15166  0002FA  C04A  FFF4         	movff	??_ISR_Bassa+16,prodh
 15167  0002FE  C049  FFF3         	movff	??_ISR_Bassa+15,prodl
 15168  000302  C048  FFDA         	movff	??_ISR_Bassa+14,fsr2h
 15169  000306  C047  FFD9         	movff	??_ISR_Bassa+13,fsr2l
 15170  00030A  C046  FFE2         	movff	??_ISR_Bassa+12,fsr1h
 15171  00030E  C045  FFE1         	movff	??_ISR_Bassa+11,fsr1l
 15172  000312  C044  FFEA         	movff	??_ISR_Bassa+10,fsr0h
 15173  000316  C043  FFE9         	movff	??_ISR_Bassa+9,fsr0l
 15174  00031A  C042  FFFB         	movff	??_ISR_Bassa+8,pclatu
 15175  00031E  C041  FFFA         	movff	??_ISR_Bassa+7,pclath
 15176  000322  C040  FFE0         	movff	??_ISR_Bassa+6,bsr
 15177  000326  C03F  FFE8         	movff	??_ISR_Bassa+5,wreg
 15178  00032A  C03E  FFD8         	movff	??_ISR_Bassa+4,status
 15179  00032E  9055               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 15180  000330  0010               	retfie	
 15181  000332                     __end_of_ISR_Bassa:
 15182                           	opt stack 0
 15183                           pclatu	equ	0xFFB
 15184                           pclath	equ	0xFFA
 15185                           tblptru	equ	0xFF8
 15186                           tblptrh	equ	0xFF7
 15187                           tblptrl	equ	0xFF6
 15188                           tablat	equ	0xFF5
 15189                           prodh	equ	0xFF4
 15190                           prodl	equ	0xFF3
 15191                           intcon	equ	0xFF2
 15192                           intcon2	equ	0xFF1
 15193                           postinc0	equ	0xFEE
 15194                           fsr0h	equ	0xFEA
 15195                           fsr0l	equ	0xFE9
 15196                           wreg	equ	0xFE8
 15197                           indf1	equ	0xFE7
 15198                           postdec1	equ	0xFE5
 15199                           fsr1h	equ	0xFE2
 15200                           fsr1l	equ	0xFE1
 15201                           bsr	equ	0xFE0
 15202                           indf2	equ	0xFDF
 15203                           postinc2	equ	0xFDE
 15204                           postdec2	equ	0xFDD
 15205                           plusw2	equ	0xFDB
 15206                           fsr2h	equ	0xFDA
 15207                           fsr2l	equ	0xFD9
 15208                           status	equ	0xFD8
 15209                           
 15210 ;; *************** function i1_CANsendMessage *****************
 15211 ;; Defined at:
 15212 ;;		line 294 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 15213 ;; Parameters:    Size  Location     Type
 15214 ;;  identifier      4    0[COMRAM] unsigned long 
 15215 ;;  data            2    4[COMRAM] PTR unsigned char 
 15216 ;;		 -> data_speed(8), data_brake(8), data_steering(8), data_correction(8), 
 15217 ;;		 -> data_test(8), data(8), sensor_distance_short(8), 
 15218 ;;  dataLength      1    6[COMRAM] unsigned char 
 15219 ;;  flags           1    7[COMRAM] enum E16335
 15220 ;; Auto vars:     Size  Location     Type
 15221 ;;  CANsendMessa    4   12[COMRAM] unsigned long 
 15222 ;; Return value:  Size  Location     Type
 15223 ;;		None               void
 15224 ;; Registers used:
 15225 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15226 ;; Tracked objects:
 15227 ;;		On entry : 0/0
 15228 ;;		On exit  : 0/0
 15229 ;;		Unchanged: 0/0
 15230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15231 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15232 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15233 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15234 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15235 ;;Total ram usage:       16 bytes
 15236 ;; Hardware stack levels used:    1
 15237 ;; Hardware stack levels required when called:    2
 15238 ;; This function calls:
 15239 ;;		Nothing
 15240 ;; This function is called by:
 15241 ;;		_ISR_Bassa
 15242 ;; This function uses a non-reentrant model
 15243 ;;
 15244                           
 15245                           	psect	text36
 15246  001FE4                     __ptext36:
 15247                           	opt stack 0
 15248  001FE4                     i1_CANsendMessage:
 15249                           	opt stack 21
 15250                           
 15251                           ;inc\CANlib.h: 296: unsigned long tamp;
 15252                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 15253                           
 15254                           ;incstack = 0
 15255  001FE4  010F               	movlb	15	; () banked
 15256  001FE6  B740               	btfsc	64,3,b	;volatile
 15257  001FE8  D115               	goto	i1l363
 15258                           
 15259                           ; BSR set to: 15
 15260                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 15261  001FEA  C030  FF45         	movff	i1CANsendMessage@dataLength,3909	;volatile
 15262                           
 15263                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 15264  001FEE  AC31               	btfss	i1CANsendMessage@flags,6,c
 15265  001FF0  D003               	goto	i1l364
 15266                           
 15267                           ; BSR set to: 15
 15268                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 15269  001FF2  010F               	movlb	15	; () banked
 15270  001FF4  8D45               	bsf	69,6,b	;volatile
 15271  001FF6  D002               	goto	i1l365
 15272  001FF8                     i1l364:
 15273                           
 15274                           ; BSR set to: 15
 15275                           ;inc\CANlib.h: 302: else
 15276                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 15277  001FF8  010F               	movlb	15	; () banked
 15278  001FFA  9D45               	bcf	69,6,b	;volatile
 15279  001FFC                     i1l365:
 15280                           
 15281                           ; BSR set to: 15
 15282                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 15283  001FFC  A631               	btfss	i1CANsendMessage@flags,3,c
 15284  001FFE  D066               	goto	i1l366
 15285                           
 15286                           ; BSR set to: 15
 15287                           ;inc\CANlib.h: 306: {
 15288                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 15289  002000  502A               	movf	i1CANsendMessage@identifier,w,c
 15290  002002  6E36               	movwf	i1CANsendMessage@tamp,c
 15291  002004  6A37               	clrf	i1CANsendMessage@tamp+1,c
 15292  002006  6A38               	clrf	i1CANsendMessage@tamp+2,c
 15293  002008  6A39               	clrf	i1CANsendMessage@tamp+3,c
 15294                           
 15295                           ; BSR set to: 15
 15296                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 15297  00200A  C036  FF44         	movff	i1CANsendMessage@tamp,3908	;volatile
 15298                           
 15299                           ; BSR set to: 15
 15300                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 15301  00200E  0E00               	movlw	0
 15302  002010  142A               	andwf	i1CANsendMessage@identifier,w,c
 15303  002012  6E36               	movwf	i1CANsendMessage@tamp,c
 15304  002014  0EFF               	movlw	255
 15305  002016  142B               	andwf	i1CANsendMessage@identifier+1,w,c
 15306  002018  6E37               	movwf	i1CANsendMessage@tamp+1,c
 15307  00201A  0E00               	movlw	0
 15308  00201C  142C               	andwf	i1CANsendMessage@identifier+2,w,c
 15309  00201E  6E38               	movwf	i1CANsendMessage@tamp+2,c
 15310  002020  0E00               	movlw	0
 15311  002022  142D               	andwf	i1CANsendMessage@identifier+3,w,c
 15312  002024  6E39               	movwf	i1CANsendMessage@tamp+3,c
 15313                           
 15314                           ; BSR set to: 15
 15315                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 15316  002026  C036  F032         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 15317  00202A  C037  F033         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 15318  00202E  C038  F034         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 15319  002032  C039  F035         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 15320  002036  C033  F032         	movff	??i1_CANsendMessage+1,??i1_CANsendMessage
 15321  00203A  C034  F033         	movff	??i1_CANsendMessage+2,??i1_CANsendMessage+1
 15322  00203E  C035  F034         	movff	??i1_CANsendMessage+3,??i1_CANsendMessage+2
 15323  002042  6A35               	clrf	??i1_CANsendMessage+3,c
 15324  002044  C032  F036         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15325  002048  C033  F037         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15326  00204C  C034  F038         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15327  002050  C035  F039         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15328                           
 15329                           ; BSR set to: 15
 15330                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 15331  002054  C036  FF43         	movff	i1CANsendMessage@tamp,3907	;volatile
 15332                           
 15333                           ; BSR set to: 15
 15334                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 15335  002058  0E00               	movlw	0
 15336  00205A  010F               	movlb	15	; () banked
 15337  00205C  6F42               	movwf	66,b	;volatile
 15338                           
 15339                           ; BSR set to: 15
 15340                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 15341  00205E  010F               	movlb	15	; () banked
 15342  002060  8742               	bsf	66,3,b	;volatile
 15343                           
 15344                           ; BSR set to: 15
 15345                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 15346  002062  A02C               	btfss	i1CANsendMessage@identifier+2,0,c
 15347  002064  D002               	goto	i1l367
 15348                           
 15349                           ; BSR set to: 15
 15350                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 15351  002066  010F               	movlb	15	; () banked
 15352  002068  8142               	bsf	66,0,b	;volatile
 15353  00206A                     i1l367:
 15354                           
 15355                           ; BSR set to: 15
 15356                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 15357  00206A  A22C               	btfss	i1CANsendMessage@identifier+2,1,c
 15358  00206C  D002               	goto	i1l368
 15359                           
 15360                           ; BSR set to: 15
 15361                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 15362  00206E  010F               	movlb	15	; () banked
 15363  002070  8342               	bsf	66,1,b	;volatile
 15364  002072                     i1l368:
 15365                           
 15366                           ; BSR set to: 15
 15367                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 15368  002072  A42C               	btfss	i1CANsendMessage@identifier+2,2,c
 15369  002074  D002               	goto	i1l369
 15370                           
 15371                           ; BSR set to: 15
 15372                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 15373  002076  010F               	movlb	15	; () banked
 15374  002078  8B42               	bsf	66,5,b	;volatile
 15375  00207A                     i1l369:
 15376                           
 15377                           ; BSR set to: 15
 15378                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 15379  00207A  A62C               	btfss	i1CANsendMessage@identifier+2,3,c
 15380  00207C  D002               	goto	i1l370
 15381                           
 15382                           ; BSR set to: 15
 15383                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 15384  00207E  010F               	movlb	15	; () banked
 15385  002080  8D42               	bsf	66,6,b	;volatile
 15386  002082                     i1l370:
 15387                           
 15388                           ; BSR set to: 15
 15389                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 15390  002082  A82C               	btfss	i1CANsendMessage@identifier+2,4,c
 15391  002084  D002               	goto	i1l6332
 15392                           
 15393                           ; BSR set to: 15
 15394                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 15395  002086  010F               	movlb	15	; () banked
 15396  002088  8F42               	bsf	66,7,b	;volatile
 15397  00208A                     i1l6332:
 15398                           
 15399                           ; BSR set to: 15
 15400                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 15401  00208A  C02A  F032         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 15402  00208E  C02B  F033         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 15403  002092  C02C  F034         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 15404  002096  C02D  F035         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 15405  00209A  0E16               	movlw	22
 15406  00209C  D005               	goto	i1u802_20
 15407  00209E                     i1u802_25:
 15408  00209E  90D8               	bcf	status,0,c
 15409  0020A0  3235               	rrcf	??i1_CANsendMessage+3,f,c
 15410  0020A2  3234               	rrcf	??i1_CANsendMessage+2,f,c
 15411  0020A4  3233               	rrcf	??i1_CANsendMessage+1,f,c
 15412  0020A6  3232               	rrcf	??i1_CANsendMessage,f,c
 15413  0020A8                     i1u802_20:
 15414  0020A8  2EE8               	decfsz	wreg,f,c
 15415  0020AA  D7F9               	goto	i1u802_25
 15416  0020AC  C032  F036         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15417  0020B0  C033  F037         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15418  0020B4  C034  F038         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15419  0020B8  C035  F039         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15420                           
 15421                           ; BSR set to: 15
 15422                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 15423  0020BC  5036               	movf	i1CANsendMessage@tamp,w,c
 15424  0020BE  6E36               	movwf	i1CANsendMessage@tamp,c
 15425  0020C0  6A37               	clrf	i1CANsendMessage@tamp+1,c
 15426  0020C2  6A38               	clrf	i1CANsendMessage@tamp+2,c
 15427  0020C4  6A39               	clrf	i1CANsendMessage@tamp+3,c
 15428                           
 15429                           ; BSR set to: 15
 15430                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 15431  0020C6  C036  FF41         	movff	i1CANsendMessage@tamp,3905	;volatile
 15432                           
 15433                           ;inc\CANlib.h: 332: }
 15434  0020CA  D04D               	goto	i1l6352
 15435  0020CC                     i1l366:
 15436                           
 15437                           ; BSR set to: 15
 15438                           ;inc\CANlib.h: 334: else
 15439                           ;inc\CANlib.h: 336: {
 15440                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 15441  0020CC  010F               	movlb	15	; () banked
 15442  0020CE  9742               	bcf	66,3,b	;volatile
 15443                           
 15444                           ; BSR set to: 15
 15445                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 15446  0020D0  C02A  F032         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 15447  0020D4  C02B  F033         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 15448  0020D8  C02C  F034         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 15449  0020DC  C02D  F035         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 15450  0020E0  0E04               	movlw	4
 15451  0020E2  D005               	goto	i1u803_20
 15452  0020E4                     i1u803_25:
 15453  0020E4  90D8               	bcf	status,0,c
 15454  0020E6  3235               	rrcf	??i1_CANsendMessage+3,f,c
 15455  0020E8  3234               	rrcf	??i1_CANsendMessage+2,f,c
 15456  0020EA  3233               	rrcf	??i1_CANsendMessage+1,f,c
 15457  0020EC  3232               	rrcf	??i1_CANsendMessage,f,c
 15458  0020EE                     i1u803_20:
 15459  0020EE  2EE8               	decfsz	wreg,f,c
 15460  0020F0  D7F9               	goto	i1u803_25
 15461  0020F2  C032  F036         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15462  0020F6  C033  F037         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15463  0020FA  C034  F038         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15464  0020FE  C035  F039         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15465                           
 15466                           ; BSR set to: 15
 15467                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 15468  002102  5036               	movf	i1CANsendMessage@tamp,w,c
 15469  002104  6E36               	movwf	i1CANsendMessage@tamp,c
 15470  002106  6A37               	clrf	i1CANsendMessage@tamp+1,c
 15471  002108  6A38               	clrf	i1CANsendMessage@tamp+2,c
 15472  00210A  6A39               	clrf	i1CANsendMessage@tamp+3,c
 15473                           
 15474                           ; BSR set to: 15
 15475                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 15476  00210C  C036  FF41         	movff	i1CANsendMessage@tamp,3905	;volatile
 15477                           
 15478                           ; BSR set to: 15
 15479                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 15480  002110  0E07               	movlw	7
 15481  002112  142A               	andwf	i1CANsendMessage@identifier,w,c
 15482  002114  6E36               	movwf	i1CANsendMessage@tamp,c
 15483  002116  0E00               	movlw	0
 15484  002118  142B               	andwf	i1CANsendMessage@identifier+1,w,c
 15485  00211A  6E37               	movwf	i1CANsendMessage@tamp+1,c
 15486  00211C  0E00               	movlw	0
 15487  00211E  142C               	andwf	i1CANsendMessage@identifier+2,w,c
 15488  002120  6E38               	movwf	i1CANsendMessage@tamp+2,c
 15489  002122  0E00               	movlw	0
 15490  002124  142D               	andwf	i1CANsendMessage@identifier+3,w,c
 15491  002126  6E39               	movwf	i1CANsendMessage@tamp+3,c
 15492                           
 15493                           ; BSR set to: 15
 15494                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 15495  002128  C036  F032         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 15496  00212C  C037  F033         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 15497  002130  C038  F034         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 15498  002134  C039  F035         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 15499  002138  0E05               	movlw	5
 15500  00213A                     i1u804_25:
 15501  00213A  90D8               	bcf	status,0,c
 15502  00213C  3632               	rlcf	??i1_CANsendMessage,f,c
 15503  00213E  3633               	rlcf	??i1_CANsendMessage+1,f,c
 15504  002140  3634               	rlcf	??i1_CANsendMessage+2,f,c
 15505  002142  3635               	rlcf	??i1_CANsendMessage+3,f,c
 15506  002144  2EE8               	decfsz	wreg,f,c
 15507  002146  D7F9               	goto	i1u804_25
 15508  002148  C032  F036         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15509  00214C  C033  F037         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15510  002150  C034  F038         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15511  002154  C035  F039         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15512                           
 15513                           ; BSR set to: 15
 15514                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 15515  002158  010F               	movlb	15	; () banked
 15516  00215A  5142               	movf	66,w,b	;volatile
 15517  00215C  0B1F               	andlw	31
 15518  00215E  010F               	movlb	15	; () banked
 15519  002160  6F42               	movwf	66,b	;volatile
 15520                           
 15521                           ; BSR set to: 15
 15522                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 15523  002162  C036  FF42         	movff	i1CANsendMessage@tamp,3906	;volatile
 15524  002166                     i1l6352:
 15525                           
 15526                           ; BSR set to: 15
 15527                           ;inc\CANlib.h: 347: }
 15528                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 15529  002166  A031               	btfss	i1CANsendMessage@flags,0,c
 15530  002168  D003               	goto	i1l373
 15531                           
 15532                           ; BSR set to: 15
 15533                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 15534  00216A  010F               	movlb	15	; () banked
 15535  00216C  8140               	bsf	64,0,b	;volatile
 15536  00216E  D002               	goto	i1l374
 15537  002170                     i1l373:
 15538                           
 15539                           ; BSR set to: 15
 15540                           ;inc\CANlib.h: 351: else
 15541                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 15542  002170  010F               	movlb	15	; () banked
 15543  002172  9140               	bcf	64,0,b	;volatile
 15544  002174                     i1l374:
 15545                           
 15546                           ; BSR set to: 15
 15547                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 15548  002174  A231               	btfss	i1CANsendMessage@flags,1,c
 15549  002176  D003               	goto	i1l375
 15550                           
 15551                           ; BSR set to: 15
 15552                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 15553  002178  010F               	movlb	15	; () banked
 15554  00217A  8340               	bsf	64,1,b	;volatile
 15555  00217C  D002               	goto	i1l6358
 15556  00217E                     i1l375:
 15557                           
 15558                           ; BSR set to: 15
 15559                           ;inc\CANlib.h: 355: else
 15560                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 15561  00217E  010F               	movlb	15	; () banked
 15562  002180  9340               	bcf	64,1,b	;volatile
 15563  002182                     i1l6358:
 15564                           
 15565                           ; BSR set to: 15
 15566                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 15567  002182  C02E  FFD9         	movff	i1CANsendMessage@data,fsr2l
 15568  002186  C02F  FFDA         	movff	i1CANsendMessage@data+1,fsr2h
 15569  00218A  50DF               	movf	indf2,w,c
 15570  00218C  010F               	movlb	15	; () banked
 15571  00218E  6F46               	movwf	70,b	;volatile
 15572                           
 15573                           ; BSR set to: 15
 15574                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 15575  002190  EE20 F001          	lfsr	2,1
 15576  002194  502E               	movf	i1CANsendMessage@data,w,c
 15577  002196  26D9               	addwf	fsr2l,f,c
 15578  002198  502F               	movf	i1CANsendMessage@data+1,w,c
 15579  00219A  22DA               	addwfc	fsr2h,f,c
 15580  00219C  50DF               	movf	indf2,w,c
 15581  00219E  010F               	movlb	15	; () banked
 15582  0021A0  6F47               	movwf	71,b	;volatile
 15583                           
 15584                           ; BSR set to: 15
 15585                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 15586  0021A2  EE20 F002          	lfsr	2,2
 15587  0021A6  502E               	movf	i1CANsendMessage@data,w,c
 15588  0021A8  26D9               	addwf	fsr2l,f,c
 15589  0021AA  502F               	movf	i1CANsendMessage@data+1,w,c
 15590  0021AC  22DA               	addwfc	fsr2h,f,c
 15591  0021AE  50DF               	movf	indf2,w,c
 15592  0021B0  010F               	movlb	15	; () banked
 15593  0021B2  6F48               	movwf	72,b	;volatile
 15594                           
 15595                           ; BSR set to: 15
 15596                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 15597  0021B4  EE20 F003          	lfsr	2,3
 15598  0021B8  502E               	movf	i1CANsendMessage@data,w,c
 15599  0021BA  26D9               	addwf	fsr2l,f,c
 15600  0021BC  502F               	movf	i1CANsendMessage@data+1,w,c
 15601  0021BE  22DA               	addwfc	fsr2h,f,c
 15602  0021C0  50DF               	movf	indf2,w,c
 15603  0021C2  010F               	movlb	15	; () banked
 15604  0021C4  6F49               	movwf	73,b	;volatile
 15605                           
 15606                           ; BSR set to: 15
 15607                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 15608  0021C6  EE20 F004          	lfsr	2,4
 15609  0021CA  502E               	movf	i1CANsendMessage@data,w,c
 15610  0021CC  26D9               	addwf	fsr2l,f,c
 15611  0021CE  502F               	movf	i1CANsendMessage@data+1,w,c
 15612  0021D0  22DA               	addwfc	fsr2h,f,c
 15613  0021D2  50DF               	movf	indf2,w,c
 15614  0021D4  010F               	movlb	15	; () banked
 15615  0021D6  6F4A               	movwf	74,b	;volatile
 15616                           
 15617                           ; BSR set to: 15
 15618                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 15619  0021D8  EE20 F005          	lfsr	2,5
 15620  0021DC  502E               	movf	i1CANsendMessage@data,w,c
 15621  0021DE  26D9               	addwf	fsr2l,f,c
 15622  0021E0  502F               	movf	i1CANsendMessage@data+1,w,c
 15623  0021E2  22DA               	addwfc	fsr2h,f,c
 15624  0021E4  50DF               	movf	indf2,w,c
 15625  0021E6  010F               	movlb	15	; () banked
 15626  0021E8  6F4B               	movwf	75,b	;volatile
 15627                           
 15628                           ; BSR set to: 15
 15629                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 15630  0021EA  EE20 F006          	lfsr	2,6
 15631  0021EE  502E               	movf	i1CANsendMessage@data,w,c
 15632  0021F0  26D9               	addwf	fsr2l,f,c
 15633  0021F2  502F               	movf	i1CANsendMessage@data+1,w,c
 15634  0021F4  22DA               	addwfc	fsr2h,f,c
 15635  0021F6  50DF               	movf	indf2,w,c
 15636  0021F8  010F               	movlb	15	; () banked
 15637  0021FA  6F4C               	movwf	76,b	;volatile
 15638                           
 15639                           ; BSR set to: 15
 15640                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 15641  0021FC  EE20 F007          	lfsr	2,7
 15642  002200  502E               	movf	i1CANsendMessage@data,w,c
 15643  002202  26D9               	addwf	fsr2l,f,c
 15644  002204  502F               	movf	i1CANsendMessage@data+1,w,c
 15645  002206  22DA               	addwfc	fsr2h,f,c
 15646  002208  50DF               	movf	indf2,w,c
 15647  00220A  010F               	movlb	15	; () banked
 15648  00220C  6F4D               	movwf	77,b	;volatile
 15649                           
 15650                           ; BSR set to: 15
 15651                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 15652  00220E  010F               	movlb	15	; () banked
 15653  002210  8740               	bsf	64,3,b	;volatile
 15654                           
 15655                           ; BSR set to: 15
 15656                           ;inc\CANlib.h: 368: return;
 15657  002212  0012               	return	
 15658  002214                     i1l363:
 15659                           
 15660                           ; BSR set to: 15
 15661                           ;inc\CANlib.h: 369: }
 15662                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 15663  002214  010F               	movlb	15	; () banked
 15664  002216  B730               	btfsc	48,3,b	;volatile
 15665  002218  D115               	goto	i1l378
 15666                           
 15667                           ; BSR set to: 15
 15668                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 15669  00221A  C030  FF35         	movff	i1CANsendMessage@dataLength,3893	;volatile
 15670                           
 15671                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 15672  00221E  AC31               	btfss	i1CANsendMessage@flags,6,c
 15673  002220  D003               	goto	i1l379
 15674                           
 15675                           ; BSR set to: 15
 15676                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 15677  002222  010F               	movlb	15	; () banked
 15678  002224  8D35               	bsf	53,6,b	;volatile
 15679  002226  D002               	goto	i1l380
 15680  002228                     i1l379:
 15681                           
 15682                           ; BSR set to: 15
 15683                           ;inc\CANlib.h: 378: else
 15684                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 15685  002228  010F               	movlb	15	; () banked
 15686  00222A  9D35               	bcf	53,6,b	;volatile
 15687  00222C                     i1l380:
 15688                           
 15689                           ; BSR set to: 15
 15690                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 15691  00222C  A631               	btfss	i1CANsendMessage@flags,3,c
 15692  00222E  D066               	goto	i1l381
 15693                           
 15694                           ; BSR set to: 15
 15695                           ;inc\CANlib.h: 382: {
 15696                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 15697  002230  502A               	movf	i1CANsendMessage@identifier,w,c
 15698  002232  6E36               	movwf	i1CANsendMessage@tamp,c
 15699  002234  6A37               	clrf	i1CANsendMessage@tamp+1,c
 15700  002236  6A38               	clrf	i1CANsendMessage@tamp+2,c
 15701  002238  6A39               	clrf	i1CANsendMessage@tamp+3,c
 15702                           
 15703                           ; BSR set to: 15
 15704                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 15705  00223A  C036  FF34         	movff	i1CANsendMessage@tamp,3892	;volatile
 15706                           
 15707                           ; BSR set to: 15
 15708                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 15709  00223E  0E00               	movlw	0
 15710  002240  142A               	andwf	i1CANsendMessage@identifier,w,c
 15711  002242  6E36               	movwf	i1CANsendMessage@tamp,c
 15712  002244  0EFF               	movlw	255
 15713  002246  142B               	andwf	i1CANsendMessage@identifier+1,w,c
 15714  002248  6E37               	movwf	i1CANsendMessage@tamp+1,c
 15715  00224A  0E00               	movlw	0
 15716  00224C  142C               	andwf	i1CANsendMessage@identifier+2,w,c
 15717  00224E  6E38               	movwf	i1CANsendMessage@tamp+2,c
 15718  002250  0E00               	movlw	0
 15719  002252  142D               	andwf	i1CANsendMessage@identifier+3,w,c
 15720  002254  6E39               	movwf	i1CANsendMessage@tamp+3,c
 15721                           
 15722                           ; BSR set to: 15
 15723                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 15724  002256  C036  F032         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 15725  00225A  C037  F033         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 15726  00225E  C038  F034         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 15727  002262  C039  F035         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 15728  002266  C033  F032         	movff	??i1_CANsendMessage+1,??i1_CANsendMessage
 15729  00226A  C034  F033         	movff	??i1_CANsendMessage+2,??i1_CANsendMessage+1
 15730  00226E  C035  F034         	movff	??i1_CANsendMessage+3,??i1_CANsendMessage+2
 15731  002272  6A35               	clrf	??i1_CANsendMessage+3,c
 15732  002274  C032  F036         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15733  002278  C033  F037         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15734  00227C  C034  F038         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15735  002280  C035  F039         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15736                           
 15737                           ; BSR set to: 15
 15738                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 15739  002284  C036  FF33         	movff	i1CANsendMessage@tamp,3891	;volatile
 15740                           
 15741                           ; BSR set to: 15
 15742                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 15743  002288  0E00               	movlw	0
 15744  00228A  010F               	movlb	15	; () banked
 15745  00228C  6F32               	movwf	50,b	;volatile
 15746                           
 15747                           ; BSR set to: 15
 15748                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 15749  00228E  010F               	movlb	15	; () banked
 15750  002290  8732               	bsf	50,3,b	;volatile
 15751                           
 15752                           ; BSR set to: 15
 15753                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 15754  002292  A02C               	btfss	i1CANsendMessage@identifier+2,0,c
 15755  002294  D002               	goto	i1l382
 15756                           
 15757                           ; BSR set to: 15
 15758                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 15759  002296  010F               	movlb	15	; () banked
 15760  002298  8132               	bsf	50,0,b	;volatile
 15761  00229A                     i1l382:
 15762                           
 15763                           ; BSR set to: 15
 15764                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 15765  00229A  A22C               	btfss	i1CANsendMessage@identifier+2,1,c
 15766  00229C  D002               	goto	i1l383
 15767                           
 15768                           ; BSR set to: 15
 15769                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 15770  00229E  010F               	movlb	15	; () banked
 15771  0022A0  8332               	bsf	50,1,b	;volatile
 15772  0022A2                     i1l383:
 15773                           
 15774                           ; BSR set to: 15
 15775                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 15776  0022A2  A42C               	btfss	i1CANsendMessage@identifier+2,2,c
 15777  0022A4  D002               	goto	i1l384
 15778                           
 15779                           ; BSR set to: 15
 15780                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 15781  0022A6  010F               	movlb	15	; () banked
 15782  0022A8  8B32               	bsf	50,5,b	;volatile
 15783  0022AA                     i1l384:
 15784                           
 15785                           ; BSR set to: 15
 15786                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 15787  0022AA  A62C               	btfss	i1CANsendMessage@identifier+2,3,c
 15788  0022AC  D002               	goto	i1l385
 15789                           
 15790                           ; BSR set to: 15
 15791                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 15792  0022AE  010F               	movlb	15	; () banked
 15793  0022B0  8D32               	bsf	50,6,b	;volatile
 15794  0022B2                     i1l385:
 15795                           
 15796                           ; BSR set to: 15
 15797                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 15798  0022B2  A82C               	btfss	i1CANsendMessage@identifier+2,4,c
 15799  0022B4  D002               	goto	i1l6408
 15800                           
 15801                           ; BSR set to: 15
 15802                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 15803  0022B6  010F               	movlb	15	; () banked
 15804  0022B8  8F32               	bsf	50,7,b	;volatile
 15805  0022BA                     i1l6408:
 15806                           
 15807                           ; BSR set to: 15
 15808                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 15809  0022BA  C02A  F032         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 15810  0022BE  C02B  F033         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 15811  0022C2  C02C  F034         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 15812  0022C6  C02D  F035         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 15813  0022CA  0E16               	movlw	22
 15814  0022CC  D005               	goto	i1u815_20
 15815  0022CE                     i1u815_25:
 15816  0022CE  90D8               	bcf	status,0,c
 15817  0022D0  3235               	rrcf	??i1_CANsendMessage+3,f,c
 15818  0022D2  3234               	rrcf	??i1_CANsendMessage+2,f,c
 15819  0022D4  3233               	rrcf	??i1_CANsendMessage+1,f,c
 15820  0022D6  3232               	rrcf	??i1_CANsendMessage,f,c
 15821  0022D8                     i1u815_20:
 15822  0022D8  2EE8               	decfsz	wreg,f,c
 15823  0022DA  D7F9               	goto	i1u815_25
 15824  0022DC  C032  F036         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15825  0022E0  C033  F037         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15826  0022E4  C034  F038         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15827  0022E8  C035  F039         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15828                           
 15829                           ; BSR set to: 15
 15830                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 15831  0022EC  5036               	movf	i1CANsendMessage@tamp,w,c
 15832  0022EE  6E36               	movwf	i1CANsendMessage@tamp,c
 15833  0022F0  6A37               	clrf	i1CANsendMessage@tamp+1,c
 15834  0022F2  6A38               	clrf	i1CANsendMessage@tamp+2,c
 15835  0022F4  6A39               	clrf	i1CANsendMessage@tamp+3,c
 15836                           
 15837                           ; BSR set to: 15
 15838                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 15839  0022F6  C036  FF31         	movff	i1CANsendMessage@tamp,3889	;volatile
 15840                           
 15841                           ;inc\CANlib.h: 407: }
 15842  0022FA  D04D               	goto	i1l6428
 15843  0022FC                     i1l381:
 15844                           
 15845                           ; BSR set to: 15
 15846                           ;inc\CANlib.h: 409: else
 15847                           ;inc\CANlib.h: 411: {
 15848                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 15849  0022FC  010F               	movlb	15	; () banked
 15850  0022FE  9732               	bcf	50,3,b	;volatile
 15851                           
 15852                           ; BSR set to: 15
 15853                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 15854  002300  C02A  F032         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 15855  002304  C02B  F033         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 15856  002308  C02C  F034         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 15857  00230C  C02D  F035         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 15858  002310  0E04               	movlw	4
 15859  002312  D005               	goto	i1u816_20
 15860  002314                     i1u816_25:
 15861  002314  90D8               	bcf	status,0,c
 15862  002316  3235               	rrcf	??i1_CANsendMessage+3,f,c
 15863  002318  3234               	rrcf	??i1_CANsendMessage+2,f,c
 15864  00231A  3233               	rrcf	??i1_CANsendMessage+1,f,c
 15865  00231C  3232               	rrcf	??i1_CANsendMessage,f,c
 15866  00231E                     i1u816_20:
 15867  00231E  2EE8               	decfsz	wreg,f,c
 15868  002320  D7F9               	goto	i1u816_25
 15869  002322  C032  F036         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15870  002326  C033  F037         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15871  00232A  C034  F038         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15872  00232E  C035  F039         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15873                           
 15874                           ; BSR set to: 15
 15875                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 15876  002332  5036               	movf	i1CANsendMessage@tamp,w,c
 15877  002334  6E36               	movwf	i1CANsendMessage@tamp,c
 15878  002336  6A37               	clrf	i1CANsendMessage@tamp+1,c
 15879  002338  6A38               	clrf	i1CANsendMessage@tamp+2,c
 15880  00233A  6A39               	clrf	i1CANsendMessage@tamp+3,c
 15881                           
 15882                           ; BSR set to: 15
 15883                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 15884  00233C  C036  FF31         	movff	i1CANsendMessage@tamp,3889	;volatile
 15885                           
 15886                           ; BSR set to: 15
 15887                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 15888  002340  0E07               	movlw	7
 15889  002342  142A               	andwf	i1CANsendMessage@identifier,w,c
 15890  002344  6E36               	movwf	i1CANsendMessage@tamp,c
 15891  002346  0E00               	movlw	0
 15892  002348  142B               	andwf	i1CANsendMessage@identifier+1,w,c
 15893  00234A  6E37               	movwf	i1CANsendMessage@tamp+1,c
 15894  00234C  0E00               	movlw	0
 15895  00234E  142C               	andwf	i1CANsendMessage@identifier+2,w,c
 15896  002350  6E38               	movwf	i1CANsendMessage@tamp+2,c
 15897  002352  0E00               	movlw	0
 15898  002354  142D               	andwf	i1CANsendMessage@identifier+3,w,c
 15899  002356  6E39               	movwf	i1CANsendMessage@tamp+3,c
 15900                           
 15901                           ; BSR set to: 15
 15902                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 15903  002358  C036  F032         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 15904  00235C  C037  F033         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 15905  002360  C038  F034         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 15906  002364  C039  F035         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 15907  002368  0E05               	movlw	5
 15908  00236A                     i1u817_25:
 15909  00236A  90D8               	bcf	status,0,c
 15910  00236C  3632               	rlcf	??i1_CANsendMessage,f,c
 15911  00236E  3633               	rlcf	??i1_CANsendMessage+1,f,c
 15912  002370  3634               	rlcf	??i1_CANsendMessage+2,f,c
 15913  002372  3635               	rlcf	??i1_CANsendMessage+3,f,c
 15914  002374  2EE8               	decfsz	wreg,f,c
 15915  002376  D7F9               	goto	i1u817_25
 15916  002378  C032  F036         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15917  00237C  C033  F037         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15918  002380  C034  F038         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15919  002384  C035  F039         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15920                           
 15921                           ; BSR set to: 15
 15922                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 15923  002388  010F               	movlb	15	; () banked
 15924  00238A  5132               	movf	50,w,b	;volatile
 15925  00238C  0B1F               	andlw	31
 15926  00238E  010F               	movlb	15	; () banked
 15927  002390  6F32               	movwf	50,b	;volatile
 15928                           
 15929                           ; BSR set to: 15
 15930                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 15931  002392  C036  FF32         	movff	i1CANsendMessage@tamp,3890	;volatile
 15932  002396                     i1l6428:
 15933                           
 15934                           ; BSR set to: 15
 15935                           ;inc\CANlib.h: 422: }
 15936                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 15937  002396  A031               	btfss	i1CANsendMessage@flags,0,c
 15938  002398  D003               	goto	i1l388
 15939                           
 15940                           ; BSR set to: 15
 15941                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 15942  00239A  010F               	movlb	15	; () banked
 15943  00239C  8130               	bsf	48,0,b	;volatile
 15944  00239E  D002               	goto	i1l389
 15945  0023A0                     i1l388:
 15946                           
 15947                           ; BSR set to: 15
 15948                           ;inc\CANlib.h: 426: else
 15949                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 15950  0023A0  010F               	movlb	15	; () banked
 15951  0023A2  9130               	bcf	48,0,b	;volatile
 15952  0023A4                     i1l389:
 15953                           
 15954                           ; BSR set to: 15
 15955                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 15956  0023A4  A231               	btfss	i1CANsendMessage@flags,1,c
 15957  0023A6  D003               	goto	i1l390
 15958                           
 15959                           ; BSR set to: 15
 15960                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 15961  0023A8  010F               	movlb	15	; () banked
 15962  0023AA  8330               	bsf	48,1,b	;volatile
 15963  0023AC  D002               	goto	i1l6434
 15964  0023AE                     i1l390:
 15965                           
 15966                           ; BSR set to: 15
 15967                           ;inc\CANlib.h: 430: else
 15968                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 15969  0023AE  010F               	movlb	15	; () banked
 15970  0023B0  9330               	bcf	48,1,b	;volatile
 15971  0023B2                     i1l6434:
 15972                           
 15973                           ; BSR set to: 15
 15974                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 15975  0023B2  C02E  FFD9         	movff	i1CANsendMessage@data,fsr2l
 15976  0023B6  C02F  FFDA         	movff	i1CANsendMessage@data+1,fsr2h
 15977  0023BA  50DF               	movf	indf2,w,c
 15978  0023BC  010F               	movlb	15	; () banked
 15979  0023BE  6F36               	movwf	54,b	;volatile
 15980                           
 15981                           ; BSR set to: 15
 15982                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 15983  0023C0  EE20 F001          	lfsr	2,1
 15984  0023C4  502E               	movf	i1CANsendMessage@data,w,c
 15985  0023C6  26D9               	addwf	fsr2l,f,c
 15986  0023C8  502F               	movf	i1CANsendMessage@data+1,w,c
 15987  0023CA  22DA               	addwfc	fsr2h,f,c
 15988  0023CC  50DF               	movf	indf2,w,c
 15989  0023CE  010F               	movlb	15	; () banked
 15990  0023D0  6F37               	movwf	55,b	;volatile
 15991                           
 15992                           ; BSR set to: 15
 15993                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 15994  0023D2  EE20 F002          	lfsr	2,2
 15995  0023D6  502E               	movf	i1CANsendMessage@data,w,c
 15996  0023D8  26D9               	addwf	fsr2l,f,c
 15997  0023DA  502F               	movf	i1CANsendMessage@data+1,w,c
 15998  0023DC  22DA               	addwfc	fsr2h,f,c
 15999  0023DE  50DF               	movf	indf2,w,c
 16000  0023E0  010F               	movlb	15	; () banked
 16001  0023E2  6F38               	movwf	56,b	;volatile
 16002                           
 16003                           ; BSR set to: 15
 16004                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 16005  0023E4  EE20 F003          	lfsr	2,3
 16006  0023E8  502E               	movf	i1CANsendMessage@data,w,c
 16007  0023EA  26D9               	addwf	fsr2l,f,c
 16008  0023EC  502F               	movf	i1CANsendMessage@data+1,w,c
 16009  0023EE  22DA               	addwfc	fsr2h,f,c
 16010  0023F0  50DF               	movf	indf2,w,c
 16011  0023F2  010F               	movlb	15	; () banked
 16012  0023F4  6F39               	movwf	57,b	;volatile
 16013                           
 16014                           ; BSR set to: 15
 16015                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 16016  0023F6  EE20 F004          	lfsr	2,4
 16017  0023FA  502E               	movf	i1CANsendMessage@data,w,c
 16018  0023FC  26D9               	addwf	fsr2l,f,c
 16019  0023FE  502F               	movf	i1CANsendMessage@data+1,w,c
 16020  002400  22DA               	addwfc	fsr2h,f,c
 16021  002402  50DF               	movf	indf2,w,c
 16022  002404  010F               	movlb	15	; () banked
 16023  002406  6F3A               	movwf	58,b	;volatile
 16024                           
 16025                           ; BSR set to: 15
 16026                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 16027  002408  EE20 F005          	lfsr	2,5
 16028  00240C  502E               	movf	i1CANsendMessage@data,w,c
 16029  00240E  26D9               	addwf	fsr2l,f,c
 16030  002410  502F               	movf	i1CANsendMessage@data+1,w,c
 16031  002412  22DA               	addwfc	fsr2h,f,c
 16032  002414  50DF               	movf	indf2,w,c
 16033  002416  010F               	movlb	15	; () banked
 16034  002418  6F3B               	movwf	59,b	;volatile
 16035                           
 16036                           ; BSR set to: 15
 16037                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 16038  00241A  EE20 F006          	lfsr	2,6
 16039  00241E  502E               	movf	i1CANsendMessage@data,w,c
 16040  002420  26D9               	addwf	fsr2l,f,c
 16041  002422  502F               	movf	i1CANsendMessage@data+1,w,c
 16042  002424  22DA               	addwfc	fsr2h,f,c
 16043  002426  50DF               	movf	indf2,w,c
 16044  002428  010F               	movlb	15	; () banked
 16045  00242A  6F3C               	movwf	60,b	;volatile
 16046                           
 16047                           ; BSR set to: 15
 16048                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 16049  00242C  EE20 F007          	lfsr	2,7
 16050  002430  502E               	movf	i1CANsendMessage@data,w,c
 16051  002432  26D9               	addwf	fsr2l,f,c
 16052  002434  502F               	movf	i1CANsendMessage@data+1,w,c
 16053  002436  22DA               	addwfc	fsr2h,f,c
 16054  002438  50DF               	movf	indf2,w,c
 16055  00243A  010F               	movlb	15	; () banked
 16056  00243C  6F3D               	movwf	61,b	;volatile
 16057                           
 16058                           ; BSR set to: 15
 16059                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 16060  00243E  010F               	movlb	15	; () banked
 16061  002440  8730               	bsf	48,3,b	;volatile
 16062                           
 16063                           ; BSR set to: 15
 16064                           ;inc\CANlib.h: 444: return;
 16065  002442  0012               	return	
 16066  002444                     i1l378:
 16067                           
 16068                           ; BSR set to: 15
 16069                           ;inc\CANlib.h: 445: }
 16070                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 16071  002444  010F               	movlb	15	; () banked
 16072  002446  B720               	btfsc	32,3,b	;volatile
 16073  002448  0012               	return	
 16074                           
 16075                           ; BSR set to: 15
 16076                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 16077  00244A  C030  FF25         	movff	i1CANsendMessage@dataLength,3877	;volatile
 16078                           
 16079                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 16080  00244E  AC31               	btfss	i1CANsendMessage@flags,6,c
 16081  002450  D003               	goto	i1l393
 16082                           
 16083                           ; BSR set to: 15
 16084                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 16085  002452  010F               	movlb	15	; () banked
 16086  002454  8D25               	bsf	37,6,b	;volatile
 16087  002456  D002               	goto	i1l394
 16088  002458                     i1l393:
 16089                           
 16090                           ; BSR set to: 15
 16091                           ;inc\CANlib.h: 454: else
 16092                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 16093  002458  010F               	movlb	15	; () banked
 16094  00245A  9D25               	bcf	37,6,b	;volatile
 16095  00245C                     i1l394:
 16096                           
 16097                           ; BSR set to: 15
 16098                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 16099  00245C  A631               	btfss	i1CANsendMessage@flags,3,c
 16100  00245E  D066               	goto	i1l395
 16101                           
 16102                           ; BSR set to: 15
 16103                           ;inc\CANlib.h: 458: {
 16104                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 16105  002460  502A               	movf	i1CANsendMessage@identifier,w,c
 16106  002462  6E36               	movwf	i1CANsendMessage@tamp,c
 16107  002464  6A37               	clrf	i1CANsendMessage@tamp+1,c
 16108  002466  6A38               	clrf	i1CANsendMessage@tamp+2,c
 16109  002468  6A39               	clrf	i1CANsendMessage@tamp+3,c
 16110                           
 16111                           ; BSR set to: 15
 16112                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 16113  00246A  C036  FF24         	movff	i1CANsendMessage@tamp,3876	;volatile
 16114                           
 16115                           ; BSR set to: 15
 16116                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 16117  00246E  0E00               	movlw	0
 16118  002470  142A               	andwf	i1CANsendMessage@identifier,w,c
 16119  002472  6E36               	movwf	i1CANsendMessage@tamp,c
 16120  002474  0EFF               	movlw	255
 16121  002476  142B               	andwf	i1CANsendMessage@identifier+1,w,c
 16122  002478  6E37               	movwf	i1CANsendMessage@tamp+1,c
 16123  00247A  0E00               	movlw	0
 16124  00247C  142C               	andwf	i1CANsendMessage@identifier+2,w,c
 16125  00247E  6E38               	movwf	i1CANsendMessage@tamp+2,c
 16126  002480  0E00               	movlw	0
 16127  002482  142D               	andwf	i1CANsendMessage@identifier+3,w,c
 16128  002484  6E39               	movwf	i1CANsendMessage@tamp+3,c
 16129                           
 16130                           ; BSR set to: 15
 16131                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 16132  002486  C036  F032         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 16133  00248A  C037  F033         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 16134  00248E  C038  F034         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 16135  002492  C039  F035         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 16136  002496  C033  F032         	movff	??i1_CANsendMessage+1,??i1_CANsendMessage
 16137  00249A  C034  F033         	movff	??i1_CANsendMessage+2,??i1_CANsendMessage+1
 16138  00249E  C035  F034         	movff	??i1_CANsendMessage+3,??i1_CANsendMessage+2
 16139  0024A2  6A35               	clrf	??i1_CANsendMessage+3,c
 16140  0024A4  C032  F036         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 16141  0024A8  C033  F037         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 16142  0024AC  C034  F038         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 16143  0024B0  C035  F039         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 16144                           
 16145                           ; BSR set to: 15
 16146                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 16147  0024B4  C036  FF23         	movff	i1CANsendMessage@tamp,3875	;volatile
 16148                           
 16149                           ; BSR set to: 15
 16150                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 16151  0024B8  0E00               	movlw	0
 16152  0024BA  010F               	movlb	15	; () banked
 16153  0024BC  6F22               	movwf	34,b	;volatile
 16154                           
 16155                           ; BSR set to: 15
 16156                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 16157  0024BE  010F               	movlb	15	; () banked
 16158  0024C0  8722               	bsf	34,3,b	;volatile
 16159                           
 16160                           ; BSR set to: 15
 16161                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 16162  0024C2  A02C               	btfss	i1CANsendMessage@identifier+2,0,c
 16163  0024C4  D002               	goto	i1l396
 16164                           
 16165                           ; BSR set to: 15
 16166                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 16167  0024C6  010F               	movlb	15	; () banked
 16168  0024C8  8122               	bsf	34,0,b	;volatile
 16169  0024CA                     i1l396:
 16170                           
 16171                           ; BSR set to: 15
 16172                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 16173  0024CA  A22C               	btfss	i1CANsendMessage@identifier+2,1,c
 16174  0024CC  D002               	goto	i1l397
 16175                           
 16176                           ; BSR set to: 15
 16177                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 16178  0024CE  010F               	movlb	15	; () banked
 16179  0024D0  8322               	bsf	34,1,b	;volatile
 16180  0024D2                     i1l397:
 16181                           
 16182                           ; BSR set to: 15
 16183                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 16184  0024D2  A42C               	btfss	i1CANsendMessage@identifier+2,2,c
 16185  0024D4  D002               	goto	i1l398
 16186                           
 16187                           ; BSR set to: 15
 16188                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 16189  0024D6  010F               	movlb	15	; () banked
 16190  0024D8  8B22               	bsf	34,5,b	;volatile
 16191  0024DA                     i1l398:
 16192                           
 16193                           ; BSR set to: 15
 16194                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 16195  0024DA  A62C               	btfss	i1CANsendMessage@identifier+2,3,c
 16196  0024DC  D002               	goto	i1l399
 16197                           
 16198                           ; BSR set to: 15
 16199                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 16200  0024DE  010F               	movlb	15	; () banked
 16201  0024E0  8D22               	bsf	34,6,b	;volatile
 16202  0024E2                     i1l399:
 16203                           
 16204                           ; BSR set to: 15
 16205                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 16206  0024E2  A82C               	btfss	i1CANsendMessage@identifier+2,4,c
 16207  0024E4  D002               	goto	i1l6484
 16208                           
 16209                           ; BSR set to: 15
 16210                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 16211  0024E6  010F               	movlb	15	; () banked
 16212  0024E8  8F22               	bsf	34,7,b	;volatile
 16213  0024EA                     i1l6484:
 16214                           
 16215                           ; BSR set to: 15
 16216                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 16217  0024EA  C02A  F032         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 16218  0024EE  C02B  F033         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 16219  0024F2  C02C  F034         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 16220  0024F6  C02D  F035         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 16221  0024FA  0E16               	movlw	22
 16222  0024FC  D005               	goto	i1u828_20
 16223  0024FE                     i1u828_25:
 16224  0024FE  90D8               	bcf	status,0,c
 16225  002500  3235               	rrcf	??i1_CANsendMessage+3,f,c
 16226  002502  3234               	rrcf	??i1_CANsendMessage+2,f,c
 16227  002504  3233               	rrcf	??i1_CANsendMessage+1,f,c
 16228  002506  3232               	rrcf	??i1_CANsendMessage,f,c
 16229  002508                     i1u828_20:
 16230  002508  2EE8               	decfsz	wreg,f,c
 16231  00250A  D7F9               	goto	i1u828_25
 16232  00250C  C032  F036         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 16233  002510  C033  F037         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 16234  002514  C034  F038         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 16235  002518  C035  F039         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 16236                           
 16237                           ; BSR set to: 15
 16238                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 16239  00251C  5036               	movf	i1CANsendMessage@tamp,w,c
 16240  00251E  6E36               	movwf	i1CANsendMessage@tamp,c
 16241  002520  6A37               	clrf	i1CANsendMessage@tamp+1,c
 16242  002522  6A38               	clrf	i1CANsendMessage@tamp+2,c
 16243  002524  6A39               	clrf	i1CANsendMessage@tamp+3,c
 16244                           
 16245                           ; BSR set to: 15
 16246                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 16247  002526  C036  FF21         	movff	i1CANsendMessage@tamp,3873	;volatile
 16248                           
 16249                           ;inc\CANlib.h: 483: }
 16250  00252A  D04D               	goto	i1l6504
 16251  00252C                     i1l395:
 16252                           
 16253                           ; BSR set to: 15
 16254                           ;inc\CANlib.h: 485: else
 16255                           ;inc\CANlib.h: 487: {
 16256                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 16257  00252C  010F               	movlb	15	; () banked
 16258  00252E  9722               	bcf	34,3,b	;volatile
 16259                           
 16260                           ; BSR set to: 15
 16261                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 16262  002530  C02A  F032         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 16263  002534  C02B  F033         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 16264  002538  C02C  F034         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 16265  00253C  C02D  F035         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 16266  002540  0E04               	movlw	4
 16267  002542  D005               	goto	i1u829_20
 16268  002544                     i1u829_25:
 16269  002544  90D8               	bcf	status,0,c
 16270  002546  3235               	rrcf	??i1_CANsendMessage+3,f,c
 16271  002548  3234               	rrcf	??i1_CANsendMessage+2,f,c
 16272  00254A  3233               	rrcf	??i1_CANsendMessage+1,f,c
 16273  00254C  3232               	rrcf	??i1_CANsendMessage,f,c
 16274  00254E                     i1u829_20:
 16275  00254E  2EE8               	decfsz	wreg,f,c
 16276  002550  D7F9               	goto	i1u829_25
 16277  002552  C032  F036         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 16278  002556  C033  F037         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 16279  00255A  C034  F038         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 16280  00255E  C035  F039         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 16281                           
 16282                           ; BSR set to: 15
 16283                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 16284  002562  5036               	movf	i1CANsendMessage@tamp,w,c
 16285  002564  6E36               	movwf	i1CANsendMessage@tamp,c
 16286  002566  6A37               	clrf	i1CANsendMessage@tamp+1,c
 16287  002568  6A38               	clrf	i1CANsendMessage@tamp+2,c
 16288  00256A  6A39               	clrf	i1CANsendMessage@tamp+3,c
 16289                           
 16290                           ; BSR set to: 15
 16291                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 16292  00256C  C036  FF21         	movff	i1CANsendMessage@tamp,3873	;volatile
 16293                           
 16294                           ; BSR set to: 15
 16295                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 16296  002570  0E07               	movlw	7
 16297  002572  142A               	andwf	i1CANsendMessage@identifier,w,c
 16298  002574  6E36               	movwf	i1CANsendMessage@tamp,c
 16299  002576  0E00               	movlw	0
 16300  002578  142B               	andwf	i1CANsendMessage@identifier+1,w,c
 16301  00257A  6E37               	movwf	i1CANsendMessage@tamp+1,c
 16302  00257C  0E00               	movlw	0
 16303  00257E  142C               	andwf	i1CANsendMessage@identifier+2,w,c
 16304  002580  6E38               	movwf	i1CANsendMessage@tamp+2,c
 16305  002582  0E00               	movlw	0
 16306  002584  142D               	andwf	i1CANsendMessage@identifier+3,w,c
 16307  002586  6E39               	movwf	i1CANsendMessage@tamp+3,c
 16308                           
 16309                           ; BSR set to: 15
 16310                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 16311  002588  C036  F032         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 16312  00258C  C037  F033         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 16313  002590  C038  F034         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 16314  002594  C039  F035         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 16315  002598  0E05               	movlw	5
 16316  00259A                     i1u830_25:
 16317  00259A  90D8               	bcf	status,0,c
 16318  00259C  3632               	rlcf	??i1_CANsendMessage,f,c
 16319  00259E  3633               	rlcf	??i1_CANsendMessage+1,f,c
 16320  0025A0  3634               	rlcf	??i1_CANsendMessage+2,f,c
 16321  0025A2  3635               	rlcf	??i1_CANsendMessage+3,f,c
 16322  0025A4  2EE8               	decfsz	wreg,f,c
 16323  0025A6  D7F9               	goto	i1u830_25
 16324  0025A8  C032  F036         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 16325  0025AC  C033  F037         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 16326  0025B0  C034  F038         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 16327  0025B4  C035  F039         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 16328                           
 16329                           ; BSR set to: 15
 16330                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 16331  0025B8  010F               	movlb	15	; () banked
 16332  0025BA  5122               	movf	34,w,b	;volatile
 16333  0025BC  0B1F               	andlw	31
 16334  0025BE  010F               	movlb	15	; () banked
 16335  0025C0  6F22               	movwf	34,b	;volatile
 16336                           
 16337                           ; BSR set to: 15
 16338                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 16339  0025C2  C036  FF22         	movff	i1CANsendMessage@tamp,3874	;volatile
 16340  0025C6                     i1l6504:
 16341                           
 16342                           ; BSR set to: 15
 16343                           ;inc\CANlib.h: 498: }
 16344                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 16345  0025C6  A031               	btfss	i1CANsendMessage@flags,0,c
 16346  0025C8  D003               	goto	i1l402
 16347                           
 16348                           ; BSR set to: 15
 16349                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 16350  0025CA  010F               	movlb	15	; () banked
 16351  0025CC  8120               	bsf	32,0,b	;volatile
 16352  0025CE  D002               	goto	i1l403
 16353  0025D0                     i1l402:
 16354                           
 16355                           ; BSR set to: 15
 16356                           ;inc\CANlib.h: 502: else
 16357                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 16358  0025D0  010F               	movlb	15	; () banked
 16359  0025D2  9120               	bcf	32,0,b	;volatile
 16360  0025D4                     i1l403:
 16361                           
 16362                           ; BSR set to: 15
 16363                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 16364  0025D4  A231               	btfss	i1CANsendMessage@flags,1,c
 16365  0025D6  D003               	goto	i1l404
 16366                           
 16367                           ; BSR set to: 15
 16368                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 16369  0025D8  010F               	movlb	15	; () banked
 16370  0025DA  8320               	bsf	32,1,b	;volatile
 16371  0025DC  D002               	goto	i1l6510
 16372  0025DE                     i1l404:
 16373                           
 16374                           ; BSR set to: 15
 16375                           ;inc\CANlib.h: 506: else
 16376                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 16377  0025DE  010F               	movlb	15	; () banked
 16378  0025E0  9320               	bcf	32,1,b	;volatile
 16379  0025E2                     i1l6510:
 16380                           
 16381                           ; BSR set to: 15
 16382                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 16383  0025E2  C02E  FFD9         	movff	i1CANsendMessage@data,fsr2l
 16384  0025E6  C02F  FFDA         	movff	i1CANsendMessage@data+1,fsr2h
 16385  0025EA  50DF               	movf	indf2,w,c
 16386  0025EC  010F               	movlb	15	; () banked
 16387  0025EE  6F26               	movwf	38,b	;volatile
 16388                           
 16389                           ; BSR set to: 15
 16390                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 16391  0025F0  EE20 F001          	lfsr	2,1
 16392  0025F4  502E               	movf	i1CANsendMessage@data,w,c
 16393  0025F6  26D9               	addwf	fsr2l,f,c
 16394  0025F8  502F               	movf	i1CANsendMessage@data+1,w,c
 16395  0025FA  22DA               	addwfc	fsr2h,f,c
 16396  0025FC  50DF               	movf	indf2,w,c
 16397  0025FE  010F               	movlb	15	; () banked
 16398  002600  6F27               	movwf	39,b	;volatile
 16399                           
 16400                           ; BSR set to: 15
 16401                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 16402  002602  EE20 F002          	lfsr	2,2
 16403  002606  502E               	movf	i1CANsendMessage@data,w,c
 16404  002608  26D9               	addwf	fsr2l,f,c
 16405  00260A  502F               	movf	i1CANsendMessage@data+1,w,c
 16406  00260C  22DA               	addwfc	fsr2h,f,c
 16407  00260E  50DF               	movf	indf2,w,c
 16408  002610  010F               	movlb	15	; () banked
 16409  002612  6F28               	movwf	40,b	;volatile
 16410                           
 16411                           ; BSR set to: 15
 16412                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 16413  002614  EE20 F003          	lfsr	2,3
 16414  002618  502E               	movf	i1CANsendMessage@data,w,c
 16415  00261A  26D9               	addwf	fsr2l,f,c
 16416  00261C  502F               	movf	i1CANsendMessage@data+1,w,c
 16417  00261E  22DA               	addwfc	fsr2h,f,c
 16418  002620  50DF               	movf	indf2,w,c
 16419  002622  010F               	movlb	15	; () banked
 16420  002624  6F29               	movwf	41,b	;volatile
 16421                           
 16422                           ; BSR set to: 15
 16423                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 16424  002626  EE20 F004          	lfsr	2,4
 16425  00262A  502E               	movf	i1CANsendMessage@data,w,c
 16426  00262C  26D9               	addwf	fsr2l,f,c
 16427  00262E  502F               	movf	i1CANsendMessage@data+1,w,c
 16428  002630  22DA               	addwfc	fsr2h,f,c
 16429  002632  50DF               	movf	indf2,w,c
 16430  002634  010F               	movlb	15	; () banked
 16431  002636  6F2A               	movwf	42,b	;volatile
 16432                           
 16433                           ; BSR set to: 15
 16434                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 16435  002638  EE20 F005          	lfsr	2,5
 16436  00263C  502E               	movf	i1CANsendMessage@data,w,c
 16437  00263E  26D9               	addwf	fsr2l,f,c
 16438  002640  502F               	movf	i1CANsendMessage@data+1,w,c
 16439  002642  22DA               	addwfc	fsr2h,f,c
 16440  002644  50DF               	movf	indf2,w,c
 16441  002646  010F               	movlb	15	; () banked
 16442  002648  6F2B               	movwf	43,b	;volatile
 16443                           
 16444                           ; BSR set to: 15
 16445                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 16446  00264A  EE20 F006          	lfsr	2,6
 16447  00264E  502E               	movf	i1CANsendMessage@data,w,c
 16448  002650  26D9               	addwf	fsr2l,f,c
 16449  002652  502F               	movf	i1CANsendMessage@data+1,w,c
 16450  002654  22DA               	addwfc	fsr2h,f,c
 16451  002656  50DF               	movf	indf2,w,c
 16452  002658  010F               	movlb	15	; () banked
 16453  00265A  6F2C               	movwf	44,b	;volatile
 16454                           
 16455                           ; BSR set to: 15
 16456                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 16457  00265C  EE20 F007          	lfsr	2,7
 16458  002660  502E               	movf	i1CANsendMessage@data,w,c
 16459  002662  26D9               	addwf	fsr2l,f,c
 16460  002664  502F               	movf	i1CANsendMessage@data+1,w,c
 16461  002666  22DA               	addwfc	fsr2h,f,c
 16462  002668  50DF               	movf	indf2,w,c
 16463  00266A  010F               	movlb	15	; () banked
 16464  00266C  6F2D               	movwf	45,b	;volatile
 16465                           
 16466                           ; BSR set to: 15
 16467                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 16468  00266E  010F               	movlb	15	; () banked
 16469  002670  8720               	bsf	32,3,b	;volatile
 16470                           
 16471                           ; BSR set to: 15
 16472                           ;inc\CANlib.h: 520: return;
 16473  002672  0012               	return	
 16474  002674                     __end_ofi1_CANsendMessage:
 16475                           	opt stack 0
 16476                           pclatu	equ	0xFFB
 16477                           pclath	equ	0xFFA
 16478                           tblptru	equ	0xFF8
 16479                           tblptrh	equ	0xFF7
 16480                           tblptrl	equ	0xFF6
 16481                           tablat	equ	0xFF5
 16482                           prodh	equ	0xFF4
 16483                           prodl	equ	0xFF3
 16484                           intcon	equ	0xFF2
 16485                           intcon2	equ	0xFF1
 16486                           postinc0	equ	0xFEE
 16487                           fsr0h	equ	0xFEA
 16488                           fsr0l	equ	0xFE9
 16489                           wreg	equ	0xFE8
 16490                           indf1	equ	0xFE7
 16491                           postdec1	equ	0xFE5
 16492                           fsr1h	equ	0xFE2
 16493                           fsr1l	equ	0xFE1
 16494                           bsr	equ	0xFE0
 16495                           indf2	equ	0xFDF
 16496                           postinc2	equ	0xFDE
 16497                           postdec2	equ	0xFDD
 16498                           plusw2	equ	0xFDB
 16499                           fsr2h	equ	0xFDA
 16500                           fsr2l	equ	0xFD9
 16501                           status	equ	0xFD8
 16502                           
 16503 ;; *************** function i1_CANisTxReady *****************
 16504 ;; Defined at:
 16505 ;;		line 1154 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 16506 ;; Parameters:    Size  Location     Type
 16507 ;;		None
 16508 ;; Auto vars:     Size  Location     Type
 16509 ;;		None
 16510 ;; Return value:  Size  Location     Type
 16511 ;;                  1    wreg      unsigned char 
 16512 ;; Registers used:
 16513 ;;		wreg, status,2
 16514 ;; Tracked objects:
 16515 ;;		On entry : 0/0
 16516 ;;		On exit  : 0/0
 16517 ;;		Unchanged: 0/0
 16518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16520 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16522 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16523 ;;Total ram usage:        1 bytes
 16524 ;; Hardware stack levels used:    1
 16525 ;; Hardware stack levels required when called:    2
 16526 ;; This function calls:
 16527 ;;		Nothing
 16528 ;; This function is called by:
 16529 ;;		_ISR_Bassa
 16530 ;; This function uses a non-reentrant model
 16531 ;;
 16532                           
 16533                           	psect	text37
 16534  0066A6                     __ptext37:
 16535                           	opt stack 0
 16536  0066A6                     i1_CANisTxReady:
 16537                           	opt stack 21
 16538                           
 16539                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 16540                           
 16541                           ; BSR set to: 15
 16542                           ;incstack = 0
 16543  0066A6  0E01               	movlw	1
 16544  0066A8  6E2A               	movwf	i1_CANisTxReady$2845,c
 16545  0066AA  010F               	movlb	15	; () banked
 16546  0066AC  A740               	btfss	64,3,b	;volatile
 16547  0066AE  D008               	goto	i1l556
 16548                           
 16549                           ; BSR set to: 15
 16550  0066B0  010F               	movlb	15	; () banked
 16551  0066B2  A730               	btfss	48,3,b	;volatile
 16552  0066B4  D005               	goto	i1l556
 16553                           
 16554                           ; BSR set to: 15
 16555  0066B6  010F               	movlb	15	; () banked
 16556  0066B8  A720               	btfss	32,3,b	;volatile
 16557  0066BA  D002               	goto	i1l556
 16558                           
 16559                           ; BSR set to: 15
 16560  0066BC  0E00               	movlw	0
 16561  0066BE  6E2A               	movwf	i1_CANisTxReady$2845,c
 16562  0066C0                     i1l556:
 16563                           
 16564                           ; BSR set to: 15
 16565  0066C0  502A               	movf	i1_CANisTxReady$2845,w,c
 16566  0066C2  0012               	return	
 16567  0066C4                     __end_ofi1_CANisTxReady:
 16568                           	opt stack 0
 16569                           pclatu	equ	0xFFB
 16570                           pclath	equ	0xFFA
 16571                           tblptru	equ	0xFF8
 16572                           tblptrh	equ	0xFF7
 16573                           tblptrl	equ	0xFF6
 16574                           tablat	equ	0xFF5
 16575                           prodh	equ	0xFF4
 16576                           prodl	equ	0xFF3
 16577                           intcon	equ	0xFF2
 16578                           intcon2	equ	0xFF1
 16579                           postinc0	equ	0xFEE
 16580                           fsr0h	equ	0xFEA
 16581                           fsr0l	equ	0xFE9
 16582                           wreg	equ	0xFE8
 16583                           indf1	equ	0xFE7
 16584                           postdec1	equ	0xFE5
 16585                           fsr1h	equ	0xFE2
 16586                           fsr1l	equ	0xFE1
 16587                           bsr	equ	0xFE0
 16588                           indf2	equ	0xFDF
 16589                           postinc2	equ	0xFDE
 16590                           postdec2	equ	0xFDD
 16591                           plusw2	equ	0xFDB
 16592                           fsr2h	equ	0xFDA
 16593                           fsr2l	equ	0xFD9
 16594                           status	equ	0xFD8
 16595                           
 16596 ;; *************** function _CANreceiveMessage *****************
 16597 ;; Defined at:
 16598 ;;		line 528 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 16599 ;; Parameters:    Size  Location     Type
 16600 ;;  msg             2    0[COMRAM] PTR struct .
 16601 ;;		 -> msg(15), 
 16602 ;; Auto vars:     Size  Location     Type
 16603 ;;  tamp            1   11[COMRAM] unsigned char 
 16604 ;;  error           1   10[COMRAM] unsigned char 
 16605 ;; Return value:  Size  Location     Type
 16606 ;;                  1    wreg      unsigned char 
 16607 ;; Registers used:
 16608 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16609 ;; Tracked objects:
 16610 ;;		On entry : 0/0
 16611 ;;		On exit  : 0/0
 16612 ;;		Unchanged: 0/0
 16613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16614 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16615 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16616 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16617 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16618 ;;Total ram usage:       12 bytes
 16619 ;; Hardware stack levels used:    1
 16620 ;; Hardware stack levels required when called:    2
 16621 ;; This function calls:
 16622 ;;		Nothing
 16623 ;; This function is called by:
 16624 ;;		_ISR_Bassa
 16625 ;; This function uses a non-reentrant model
 16626 ;;
 16627                           
 16628                           	psect	text38
 16629  002BFE                     __ptext38:
 16630                           	opt stack 0
 16631  002BFE                     _CANreceiveMessage:
 16632                           	opt stack 21
 16633                           
 16634                           ;inc\CANlib.h: 530: BYTE tamp;
 16635                           ;inc\CANlib.h: 531: BYTE error = 0;
 16636                           
 16637                           ; BSR set to: 15
 16638                           ;incstack = 0
 16639  002BFE  0E00               	movlw	0
 16640  002C00  6E34               	movwf	CANreceiveMessage@error,c
 16641                           
 16642                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 16643  002C02  BE74               	btfsc	3956,7,c	;volatile
 16644                           
 16645                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 16646  002C04  8034               	bsf	CANreceiveMessage@error,0,c
 16647                           
 16648                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 16649  002C06  BC74               	btfsc	3956,6,c	;volatile
 16650                           
 16651                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 16652  002C08  8234               	bsf	CANreceiveMessage@error,1,c
 16653                           
 16654                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 16655  002C0A  010F               	movlb	15	; () banked
 16656  002C0C  AF50               	btfss	80,7,b	;volatile
 16657  002C0E  D143               	goto	i1l410
 16658                           
 16659                           ; BSR set to: 15
 16660                           ;inc\CANlib.h: 541: {
 16661                           ;inc\CANlib.h: 542: msg->identifier = 0;
 16662  002C10  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16663  002C14  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16664  002C18  6ADE               	clrf	postinc2,c
 16665  002C1A  6ADE               	clrf	postinc2,c
 16666  002C1C  6ADE               	clrf	postinc2,c
 16667  002C1E  6ADD               	clrf	postdec2,c
 16668                           
 16669                           ; BSR set to: 15
 16670                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 16671  002C20  EE20 F004          	lfsr	2,4
 16672  002C24  502A               	movf	CANreceiveMessage@msg,w,c
 16673  002C26  26D9               	addwf	fsr2l,f,c
 16674  002C28  502B               	movf	CANreceiveMessage@msg+1,w,c
 16675  002C2A  22DA               	addwfc	fsr2h,f,c
 16676  002C2C  CF56 FFDF          	movff	3926,indf2	;volatile
 16677                           
 16678                           ; BSR set to: 15
 16679                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 16680  002C30  EE20 F005          	lfsr	2,5
 16681  002C34  502A               	movf	CANreceiveMessage@msg,w,c
 16682  002C36  26D9               	addwf	fsr2l,f,c
 16683  002C38  502B               	movf	CANreceiveMessage@msg+1,w,c
 16684  002C3A  22DA               	addwfc	fsr2h,f,c
 16685  002C3C  CF57 FFDF          	movff	3927,indf2	;volatile
 16686                           
 16687                           ; BSR set to: 15
 16688                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 16689  002C40  EE20 F006          	lfsr	2,6
 16690  002C44  502A               	movf	CANreceiveMessage@msg,w,c
 16691  002C46  26D9               	addwf	fsr2l,f,c
 16692  002C48  502B               	movf	CANreceiveMessage@msg+1,w,c
 16693  002C4A  22DA               	addwfc	fsr2h,f,c
 16694  002C4C  CF58 FFDF          	movff	3928,indf2	;volatile
 16695                           
 16696                           ; BSR set to: 15
 16697                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 16698  002C50  EE20 F007          	lfsr	2,7
 16699  002C54  502A               	movf	CANreceiveMessage@msg,w,c
 16700  002C56  26D9               	addwf	fsr2l,f,c
 16701  002C58  502B               	movf	CANreceiveMessage@msg+1,w,c
 16702  002C5A  22DA               	addwfc	fsr2h,f,c
 16703  002C5C  CF59 FFDF          	movff	3929,indf2	;volatile
 16704                           
 16705                           ; BSR set to: 15
 16706                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 16707  002C60  EE20 F008          	lfsr	2,8
 16708  002C64  502A               	movf	CANreceiveMessage@msg,w,c
 16709  002C66  26D9               	addwf	fsr2l,f,c
 16710  002C68  502B               	movf	CANreceiveMessage@msg+1,w,c
 16711  002C6A  22DA               	addwfc	fsr2h,f,c
 16712  002C6C  CF5A FFDF          	movff	3930,indf2	;volatile
 16713                           
 16714                           ; BSR set to: 15
 16715                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 16716  002C70  EE20 F009          	lfsr	2,9
 16717  002C74  502A               	movf	CANreceiveMessage@msg,w,c
 16718  002C76  26D9               	addwf	fsr2l,f,c
 16719  002C78  502B               	movf	CANreceiveMessage@msg+1,w,c
 16720  002C7A  22DA               	addwfc	fsr2h,f,c
 16721  002C7C  CF5B FFDF          	movff	3931,indf2	;volatile
 16722                           
 16723                           ; BSR set to: 15
 16724                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 16725  002C80  EE20 F00A          	lfsr	2,10
 16726  002C84  502A               	movf	CANreceiveMessage@msg,w,c
 16727  002C86  26D9               	addwf	fsr2l,f,c
 16728  002C88  502B               	movf	CANreceiveMessage@msg+1,w,c
 16729  002C8A  22DA               	addwfc	fsr2h,f,c
 16730  002C8C  CF5C FFDF          	movff	3932,indf2	;volatile
 16731                           
 16732                           ; BSR set to: 15
 16733                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 16734  002C90  EE20 F00B          	lfsr	2,11
 16735  002C94  502A               	movf	CANreceiveMessage@msg,w,c
 16736  002C96  26D9               	addwf	fsr2l,f,c
 16737  002C98  502B               	movf	CANreceiveMessage@msg+1,w,c
 16738  002C9A  22DA               	addwfc	fsr2h,f,c
 16739  002C9C  CF5D FFDF          	movff	3933,indf2	;volatile
 16740                           
 16741                           ; BSR set to: 15
 16742                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 16743  002CA0  EE20 F00E          	lfsr	2,14
 16744  002CA4  502A               	movf	CANreceiveMessage@msg,w,c
 16745  002CA6  26D9               	addwf	fsr2l,f,c
 16746  002CA8  502B               	movf	CANreceiveMessage@msg+1,w,c
 16747  002CAA  22DA               	addwfc	fsr2h,f,c
 16748  002CAC  010F               	movlb	15	; () banked
 16749  002CAE  AD55               	btfss	85,6,b	;volatile
 16750  002CB0  D002               	goto	i1u736_20
 16751  002CB2  0E01               	movlw	1
 16752  002CB4  D001               	goto	i1u736_26
 16753  002CB6                     i1u736_20:
 16754  002CB6  0E00               	movlw	0
 16755  002CB8                     i1u736_26:
 16756  002CB8  6EDF               	movwf	indf2,c
 16757                           
 16758                           ; BSR set to: 15
 16759                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 16760  002CBA  EE20 F00D          	lfsr	2,13
 16761  002CBE  502A               	movf	CANreceiveMessage@msg,w,c
 16762  002CC0  26D9               	addwf	fsr2l,f,c
 16763  002CC2  502B               	movf	CANreceiveMessage@msg+1,w,c
 16764  002CC4  22DA               	addwfc	fsr2h,f,c
 16765  002CC6  010F               	movlb	15	; () banked
 16766  002CC8  5155               	movf	85,w,b	;volatile
 16767  002CCA  0B0F               	andlw	15
 16768  002CCC  6EDF               	movwf	indf2,c
 16769                           
 16770                           ; BSR set to: 15
 16771                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 16772  002CCE  EE20 F00C          	lfsr	2,12
 16773  002CD2  502A               	movf	CANreceiveMessage@msg,w,c
 16774  002CD4  26D9               	addwf	fsr2l,f,c
 16775  002CD6  502B               	movf	CANreceiveMessage@msg+1,w,c
 16776  002CD8  22DA               	addwfc	fsr2h,f,c
 16777  002CDA  010F               	movlb	15	; () banked
 16778  002CDC  A752               	btfss	82,3,b	;volatile
 16779  002CDE  D002               	goto	i1u737_20
 16780  002CE0  0E01               	movlw	1
 16781  002CE2  D001               	goto	i1u737_26
 16782  002CE4                     i1u737_20:
 16783  002CE4  0E00               	movlw	0
 16784  002CE6                     i1u737_26:
 16785  002CE6  6EDF               	movwf	indf2,c
 16786                           
 16787                           ; BSR set to: 15
 16788                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 16789  002CE8  010F               	movlb	15	; () banked
 16790  002CEA  B752               	btfsc	82,3,b	;volatile
 16791  002CEC  D044               	goto	i1l5914
 16792                           
 16793                           ; BSR set to: 15
 16794                           ;inc\CANlib.h: 559: {
 16795                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 16796  002CEE  CF51 F02C          	movff	3921,??_CANreceiveMessage	;volatile
 16797  002CF2  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16798  002CF4  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 16799  002CF6  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 16800  002CF8  0E03               	movlw	3
 16801  002CFA                     i1u739_25:
 16802  002CFA  90D8               	bcf	status,0,c
 16803  002CFC  362C               	rlcf	??_CANreceiveMessage,f,c
 16804  002CFE  362D               	rlcf	??_CANreceiveMessage+1,f,c
 16805  002D00  362E               	rlcf	??_CANreceiveMessage+2,f,c
 16806  002D02  362F               	rlcf	??_CANreceiveMessage+3,f,c
 16807  002D04  2EE8               	decfsz	wreg,f,c
 16808  002D06  D7F9               	goto	i1u739_25
 16809  002D08  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16810  002D0C  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16811  002D10  C02C  FFDE         	movff	??_CANreceiveMessage,postinc2
 16812  002D14  C02D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 16813  002D18  C02E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 16814  002D1C  C02F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 16815                           
 16816                           ; BSR set to: 15
 16817                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 16818  002D20  010F               	movlb	15	; () banked
 16819  002D22  3952               	swapf	82,w,b	;volatile
 16820  002D24  42E8               	rrncf	wreg,f,c
 16821  002D26  0B07               	andlw	7
 16822  002D28  0B07               	andlw	7
 16823  002D2A  6E35               	movwf	CANreceiveMessage@tamp,c
 16824                           
 16825                           ; BSR set to: 15
 16826                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 16827  002D2C  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16828  002D30  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16829  002D34  CFDE F02C          	movff	postinc2,??_CANreceiveMessage
 16830  002D38  CFDE F02D          	movff	postinc2,??_CANreceiveMessage+1
 16831  002D3C  CFDE F02E          	movff	postinc2,??_CANreceiveMessage+2
 16832  002D40  CFDE F02F          	movff	postinc2,??_CANreceiveMessage+3
 16833  002D44  5035               	movf	CANreceiveMessage@tamp,w,c
 16834  002D46  242C               	addwf	??_CANreceiveMessage,w,c
 16835  002D48  6E30               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 16836  002D4A  0E00               	movlw	0
 16837  002D4C  202D               	addwfc	??_CANreceiveMessage+1,w,c
 16838  002D4E  6E31               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 16839  002D50  0E00               	movlw	0
 16840  002D52  202E               	addwfc	??_CANreceiveMessage+2,w,c
 16841  002D54  6E32               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 16842  002D56  0E00               	movlw	0
 16843  002D58  202F               	addwfc	??_CANreceiveMessage+3,w,c
 16844  002D5A  6E33               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 16845  002D5C  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16846  002D60  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16847  002D64  C030  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 16848  002D68  C031  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 16849  002D6C  C032  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 16850  002D70  C033  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 16851                           
 16852                           ;inc\CANlib.h: 563: }
 16853  002D74  D08D               	goto	i1l5940
 16854  002D76                     i1l5914:
 16855                           
 16856                           ; BSR set to: 15
 16857                           ;inc\CANlib.h: 564: else
 16858                           ;inc\CANlib.h: 565: {
 16859                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 16860  002D76  CF54 F02C          	movff	3924,??_CANreceiveMessage	;volatile
 16861  002D7A  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16862  002D7C  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 16863  002D7E  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 16864  002D80  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16865  002D84  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16866  002D88  C02C  FFDE         	movff	??_CANreceiveMessage,postinc2
 16867  002D8C  C02D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 16868  002D90  C02E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 16869  002D94  C02F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 16870                           
 16871                           ; BSR set to: 15
 16872                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 16873  002D98  CF53 F02C          	movff	3923,??_CANreceiveMessage	;volatile
 16874  002D9C  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16875  002D9E  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 16876  002DA0  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 16877  002DA2  C02E  F02F         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 16878  002DA6  C02D  F02E         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 16879  002DAA  C02C  F02D         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 16880  002DAE  6A2C               	clrf	??_CANreceiveMessage,c
 16881  002DB0  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16882  002DB4  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16883  002DB8  502C               	movf	??_CANreceiveMessage,w,c
 16884  002DBA  26DE               	addwf	postinc2,f,c
 16885  002DBC  502D               	movf	??_CANreceiveMessage+1,w,c
 16886  002DBE  22DE               	addwfc	postinc2,f,c
 16887  002DC0  502E               	movf	??_CANreceiveMessage+2,w,c
 16888  002DC2  22DE               	addwfc	postinc2,f,c
 16889  002DC4  502F               	movf	??_CANreceiveMessage+3,w,c
 16890  002DC6  22DE               	addwfc	postinc2,f,c
 16891                           
 16892                           ; BSR set to: 15
 16893                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 16894  002DC8  010F               	movlb	15	; () banked
 16895  002DCA  A152               	btfss	82,0,b	;volatile
 16896  002DCC  D00C               	goto	i1l5922
 16897                           
 16898                           ; BSR set to: 15
 16899                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 16900  002DCE  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16901  002DD2  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16902  002DD6  0E00               	movlw	0
 16903  002DD8  12DE               	iorwf	postinc2,f,c
 16904  002DDA  0E00               	movlw	0
 16905  002DDC  12DE               	iorwf	postinc2,f,c
 16906  002DDE  0E01               	movlw	1
 16907  002DE0  12DE               	iorwf	postinc2,f,c
 16908  002DE2  0E00               	movlw	0
 16909  002DE4  12DE               	iorwf	postinc2,f,c
 16910  002DE6                     i1l5922:
 16911                           
 16912                           ; BSR set to: 15
 16913                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 16914  002DE6  010F               	movlb	15	; () banked
 16915  002DE8  A352               	btfss	82,1,b	;volatile
 16916  002DEA  D00C               	goto	i1l5926
 16917                           
 16918                           ; BSR set to: 15
 16919                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 16920  002DEC  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16921  002DF0  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16922  002DF4  0E00               	movlw	0
 16923  002DF6  12DE               	iorwf	postinc2,f,c
 16924  002DF8  0E00               	movlw	0
 16925  002DFA  12DE               	iorwf	postinc2,f,c
 16926  002DFC  0E02               	movlw	2
 16927  002DFE  12DE               	iorwf	postinc2,f,c
 16928  002E00  0E00               	movlw	0
 16929  002E02  12DE               	iorwf	postinc2,f,c
 16930  002E04                     i1l5926:
 16931                           
 16932                           ; BSR set to: 15
 16933                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 16934  002E04  010F               	movlb	15	; () banked
 16935  002E06  AB52               	btfss	82,5,b	;volatile
 16936  002E08  D00C               	goto	i1l5930
 16937                           
 16938                           ; BSR set to: 15
 16939                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 16940  002E0A  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16941  002E0E  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16942  002E12  0E00               	movlw	0
 16943  002E14  12DE               	iorwf	postinc2,f,c
 16944  002E16  0E00               	movlw	0
 16945  002E18  12DE               	iorwf	postinc2,f,c
 16946  002E1A  0E04               	movlw	4
 16947  002E1C  12DE               	iorwf	postinc2,f,c
 16948  002E1E  0E00               	movlw	0
 16949  002E20  12DE               	iorwf	postinc2,f,c
 16950  002E22                     i1l5930:
 16951                           
 16952                           ; BSR set to: 15
 16953                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 16954  002E22  010F               	movlb	15	; () banked
 16955  002E24  AD52               	btfss	82,6,b	;volatile
 16956  002E26  D00C               	goto	i1l5934
 16957                           
 16958                           ; BSR set to: 15
 16959                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 16960  002E28  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16961  002E2C  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16962  002E30  0E00               	movlw	0
 16963  002E32  12DE               	iorwf	postinc2,f,c
 16964  002E34  0E00               	movlw	0
 16965  002E36  12DE               	iorwf	postinc2,f,c
 16966  002E38  0E08               	movlw	8
 16967  002E3A  12DE               	iorwf	postinc2,f,c
 16968  002E3C  0E00               	movlw	0
 16969  002E3E  12DE               	iorwf	postinc2,f,c
 16970  002E40                     i1l5934:
 16971                           
 16972                           ; BSR set to: 15
 16973                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 16974  002E40  010F               	movlb	15	; () banked
 16975  002E42  AF52               	btfss	82,7,b	;volatile
 16976  002E44  D00C               	goto	i1l5938
 16977                           
 16978                           ; BSR set to: 15
 16979                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 16980  002E46  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16981  002E4A  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16982  002E4E  0E00               	movlw	0
 16983  002E50  12DE               	iorwf	postinc2,f,c
 16984  002E52  0E00               	movlw	0
 16985  002E54  12DE               	iorwf	postinc2,f,c
 16986  002E56  0E10               	movlw	16
 16987  002E58  12DE               	iorwf	postinc2,f,c
 16988  002E5A  0E00               	movlw	0
 16989  002E5C  12DE               	iorwf	postinc2,f,c
 16990  002E5E                     i1l5938:
 16991                           
 16992                           ; BSR set to: 15
 16993                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 16994  002E5E  CF51 F02C          	movff	3921,??_CANreceiveMessage	;volatile
 16995  002E62  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16996  002E64  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 16997  002E66  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 16998  002E68  0E15               	movlw	21
 16999  002E6A                     i1u745_25:
 17000  002E6A  90D8               	bcf	status,0,c
 17001  002E6C  362C               	rlcf	??_CANreceiveMessage,f,c
 17002  002E6E  362D               	rlcf	??_CANreceiveMessage+1,f,c
 17003  002E70  362E               	rlcf	??_CANreceiveMessage+2,f,c
 17004  002E72  362F               	rlcf	??_CANreceiveMessage+3,f,c
 17005  002E74  2EE8               	decfsz	wreg,f,c
 17006  002E76  D7F9               	goto	i1u745_25
 17007  002E78  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17008  002E7C  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17009  002E80  502C               	movf	??_CANreceiveMessage,w,c
 17010  002E82  12DE               	iorwf	postinc2,f,c
 17011  002E84  502D               	movf	??_CANreceiveMessage+1,w,c
 17012  002E86  12DE               	iorwf	postinc2,f,c
 17013  002E88  502E               	movf	??_CANreceiveMessage+2,w,c
 17014  002E8A  12DE               	iorwf	postinc2,f,c
 17015  002E8C  502F               	movf	??_CANreceiveMessage+3,w,c
 17016  002E8E  12DE               	iorwf	postinc2,f,c
 17017  002E90                     i1l5940:
 17018                           
 17019                           ; BSR set to: 15
 17020                           ;inc\CANlib.h: 581: }
 17021                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 17022  002E90  010F               	movlb	15	; () banked
 17023  002E92  9F50               	bcf	80,7,b	;volatile
 17024                           
 17025                           ; BSR set to: 15
 17026                           ;inc\CANlib.h: 584: return (error);
 17027                           ;	Return value of _CANreceiveMessage is never used
 17028  002E94  0012               	return	
 17029  002E96                     i1l410:
 17030                           
 17031                           ; BSR set to: 15
 17032                           ;inc\CANlib.h: 585: }
 17033                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 17034  002E96  AE60               	btfss	3936,7,c	;volatile
 17035  002E98  0012               	return	
 17036                           
 17037                           ; BSR set to: 15
 17038                           ;inc\CANlib.h: 588: {
 17039                           ;inc\CANlib.h: 589: msg->identifier = 0;
 17040  002E9A  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17041  002E9E  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17042  002EA2  6ADE               	clrf	postinc2,c
 17043  002EA4  6ADE               	clrf	postinc2,c
 17044  002EA6  6ADE               	clrf	postinc2,c
 17045  002EA8  6ADD               	clrf	postdec2,c
 17046                           
 17047                           ; BSR set to: 15
 17048                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 17049  002EAA  EE20 F004          	lfsr	2,4
 17050  002EAE  502A               	movf	CANreceiveMessage@msg,w,c
 17051  002EB0  26D9               	addwf	fsr2l,f,c
 17052  002EB2  502B               	movf	CANreceiveMessage@msg+1,w,c
 17053  002EB4  22DA               	addwfc	fsr2h,f,c
 17054  002EB6  CF66 FFDF          	movff	3942,indf2	;volatile
 17055                           
 17056                           ; BSR set to: 15
 17057                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 17058  002EBA  EE20 F005          	lfsr	2,5
 17059  002EBE  502A               	movf	CANreceiveMessage@msg,w,c
 17060  002EC0  26D9               	addwf	fsr2l,f,c
 17061  002EC2  502B               	movf	CANreceiveMessage@msg+1,w,c
 17062  002EC4  22DA               	addwfc	fsr2h,f,c
 17063  002EC6  CF67 FFDF          	movff	3943,indf2	;volatile
 17064                           
 17065                           ; BSR set to: 15
 17066                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 17067  002ECA  EE20 F006          	lfsr	2,6
 17068  002ECE  502A               	movf	CANreceiveMessage@msg,w,c
 17069  002ED0  26D9               	addwf	fsr2l,f,c
 17070  002ED2  502B               	movf	CANreceiveMessage@msg+1,w,c
 17071  002ED4  22DA               	addwfc	fsr2h,f,c
 17072  002ED6  CF68 FFDF          	movff	3944,indf2	;volatile
 17073                           
 17074                           ; BSR set to: 15
 17075                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 17076  002EDA  EE20 F007          	lfsr	2,7
 17077  002EDE  502A               	movf	CANreceiveMessage@msg,w,c
 17078  002EE0  26D9               	addwf	fsr2l,f,c
 17079  002EE2  502B               	movf	CANreceiveMessage@msg+1,w,c
 17080  002EE4  22DA               	addwfc	fsr2h,f,c
 17081  002EE6  CF69 FFDF          	movff	3945,indf2	;volatile
 17082                           
 17083                           ; BSR set to: 15
 17084                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 17085  002EEA  EE20 F008          	lfsr	2,8
 17086  002EEE  502A               	movf	CANreceiveMessage@msg,w,c
 17087  002EF0  26D9               	addwf	fsr2l,f,c
 17088  002EF2  502B               	movf	CANreceiveMessage@msg+1,w,c
 17089  002EF4  22DA               	addwfc	fsr2h,f,c
 17090  002EF6  CF6A FFDF          	movff	3946,indf2	;volatile
 17091                           
 17092                           ; BSR set to: 15
 17093                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 17094  002EFA  EE20 F009          	lfsr	2,9
 17095  002EFE  502A               	movf	CANreceiveMessage@msg,w,c
 17096  002F00  26D9               	addwf	fsr2l,f,c
 17097  002F02  502B               	movf	CANreceiveMessage@msg+1,w,c
 17098  002F04  22DA               	addwfc	fsr2h,f,c
 17099  002F06  CF6B FFDF          	movff	3947,indf2	;volatile
 17100                           
 17101                           ; BSR set to: 15
 17102                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 17103  002F0A  EE20 F00A          	lfsr	2,10
 17104  002F0E  502A               	movf	CANreceiveMessage@msg,w,c
 17105  002F10  26D9               	addwf	fsr2l,f,c
 17106  002F12  502B               	movf	CANreceiveMessage@msg+1,w,c
 17107  002F14  22DA               	addwfc	fsr2h,f,c
 17108  002F16  CF6C FFDF          	movff	3948,indf2	;volatile
 17109                           
 17110                           ; BSR set to: 15
 17111                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 17112  002F1A  EE20 F00B          	lfsr	2,11
 17113  002F1E  502A               	movf	CANreceiveMessage@msg,w,c
 17114  002F20  26D9               	addwf	fsr2l,f,c
 17115  002F22  502B               	movf	CANreceiveMessage@msg+1,w,c
 17116  002F24  22DA               	addwfc	fsr2h,f,c
 17117  002F26  CF6D FFDF          	movff	3949,indf2	;volatile
 17118                           
 17119                           ; BSR set to: 15
 17120                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 17121  002F2A  EE20 F00E          	lfsr	2,14
 17122  002F2E  502A               	movf	CANreceiveMessage@msg,w,c
 17123  002F30  26D9               	addwf	fsr2l,f,c
 17124  002F32  502B               	movf	CANreceiveMessage@msg+1,w,c
 17125  002F34  22DA               	addwfc	fsr2h,f,c
 17126  002F36  AC65               	btfss	3941,6,c	;volatile
 17127  002F38  D002               	goto	i1u747_20
 17128  002F3A  0E01               	movlw	1
 17129  002F3C  D001               	goto	i1u747_26
 17130  002F3E                     i1u747_20:
 17131  002F3E  0E00               	movlw	0
 17132  002F40                     i1u747_26:
 17133  002F40  6EDF               	movwf	indf2,c
 17134                           
 17135                           ; BSR set to: 15
 17136                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 17137  002F42  EE20 F00D          	lfsr	2,13
 17138  002F46  502A               	movf	CANreceiveMessage@msg,w,c
 17139  002F48  26D9               	addwf	fsr2l,f,c
 17140  002F4A  502B               	movf	CANreceiveMessage@msg+1,w,c
 17141  002F4C  22DA               	addwfc	fsr2h,f,c
 17142  002F4E  5065               	movf	3941,w,c	;volatile
 17143  002F50  0B0F               	andlw	15
 17144  002F52  6EDF               	movwf	indf2,c
 17145                           
 17146                           ; BSR set to: 15
 17147                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 17148  002F54  EE20 F00C          	lfsr	2,12
 17149  002F58  502A               	movf	CANreceiveMessage@msg,w,c
 17150  002F5A  26D9               	addwf	fsr2l,f,c
 17151  002F5C  502B               	movf	CANreceiveMessage@msg+1,w,c
 17152  002F5E  22DA               	addwfc	fsr2h,f,c
 17153  002F60  A662               	btfss	3938,3,c	;volatile
 17154  002F62  D002               	goto	i1u748_20
 17155  002F64  0E01               	movlw	1
 17156  002F66  D001               	goto	i1u748_26
 17157  002F68                     i1u748_20:
 17158  002F68  0E00               	movlw	0
 17159  002F6A                     i1u748_26:
 17160  002F6A  6EDF               	movwf	indf2,c
 17161                           
 17162                           ; BSR set to: 15
 17163                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 17164  002F6C  B662               	btfsc	3938,3,c	;volatile
 17165  002F6E  D043               	goto	i1l5976
 17166                           
 17167                           ; BSR set to: 15
 17168                           ;inc\CANlib.h: 606: {
 17169                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 17170  002F70  CF61 F02C          	movff	3937,??_CANreceiveMessage	;volatile
 17171  002F74  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17172  002F76  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17173  002F78  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17174  002F7A  0E03               	movlw	3
 17175  002F7C                     i1u750_25:
 17176  002F7C  90D8               	bcf	status,0,c
 17177  002F7E  362C               	rlcf	??_CANreceiveMessage,f,c
 17178  002F80  362D               	rlcf	??_CANreceiveMessage+1,f,c
 17179  002F82  362E               	rlcf	??_CANreceiveMessage+2,f,c
 17180  002F84  362F               	rlcf	??_CANreceiveMessage+3,f,c
 17181  002F86  2EE8               	decfsz	wreg,f,c
 17182  002F88  D7F9               	goto	i1u750_25
 17183  002F8A  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17184  002F8E  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17185  002F92  C02C  FFDE         	movff	??_CANreceiveMessage,postinc2
 17186  002F96  C02D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 17187  002F9A  C02E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 17188  002F9E  C02F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 17189                           
 17190                           ; BSR set to: 15
 17191                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 17192  002FA2  3862               	swapf	3938,w,c	;volatile
 17193  002FA4  42E8               	rrncf	wreg,f,c
 17194  002FA6  0B07               	andlw	7
 17195  002FA8  0B07               	andlw	7
 17196  002FAA  6E35               	movwf	CANreceiveMessage@tamp,c
 17197                           
 17198                           ; BSR set to: 15
 17199                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 17200  002FAC  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17201  002FB0  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17202  002FB4  CFDE F02C          	movff	postinc2,??_CANreceiveMessage
 17203  002FB8  CFDE F02D          	movff	postinc2,??_CANreceiveMessage+1
 17204  002FBC  CFDE F02E          	movff	postinc2,??_CANreceiveMessage+2
 17205  002FC0  CFDE F02F          	movff	postinc2,??_CANreceiveMessage+3
 17206  002FC4  5035               	movf	CANreceiveMessage@tamp,w,c
 17207  002FC6  242C               	addwf	??_CANreceiveMessage,w,c
 17208  002FC8  6E30               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 17209  002FCA  0E00               	movlw	0
 17210  002FCC  202D               	addwfc	??_CANreceiveMessage+1,w,c
 17211  002FCE  6E31               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 17212  002FD0  0E00               	movlw	0
 17213  002FD2  202E               	addwfc	??_CANreceiveMessage+2,w,c
 17214  002FD4  6E32               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 17215  002FD6  0E00               	movlw	0
 17216  002FD8  202F               	addwfc	??_CANreceiveMessage+3,w,c
 17217  002FDA  6E33               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 17218  002FDC  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17219  002FE0  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17220  002FE4  C030  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 17221  002FE8  C031  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 17222  002FEC  C032  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 17223  002FF0  C033  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 17224                           
 17225                           ;inc\CANlib.h: 610: }
 17226  002FF4  D088               	goto	i1l6002
 17227  002FF6                     i1l5976:
 17228                           
 17229                           ; BSR set to: 15
 17230                           ;inc\CANlib.h: 611: else
 17231                           ;inc\CANlib.h: 612: {
 17232                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 17233  002FF6  CF64 F02C          	movff	3940,??_CANreceiveMessage	;volatile
 17234  002FFA  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17235  002FFC  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17236  002FFE  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17237  003000  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17238  003004  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17239  003008  C02C  FFDE         	movff	??_CANreceiveMessage,postinc2
 17240  00300C  C02D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 17241  003010  C02E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 17242  003014  C02F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 17243                           
 17244                           ; BSR set to: 15
 17245                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 17246  003018  CF63 F02C          	movff	3939,??_CANreceiveMessage	;volatile
 17247  00301C  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17248  00301E  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17249  003020  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17250  003022  C02E  F02F         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 17251  003026  C02D  F02E         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 17252  00302A  C02C  F02D         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 17253  00302E  6A2C               	clrf	??_CANreceiveMessage,c
 17254  003030  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17255  003034  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17256  003038  502C               	movf	??_CANreceiveMessage,w,c
 17257  00303A  26DE               	addwf	postinc2,f,c
 17258  00303C  502D               	movf	??_CANreceiveMessage+1,w,c
 17259  00303E  22DE               	addwfc	postinc2,f,c
 17260  003040  502E               	movf	??_CANreceiveMessage+2,w,c
 17261  003042  22DE               	addwfc	postinc2,f,c
 17262  003044  502F               	movf	??_CANreceiveMessage+3,w,c
 17263  003046  22DE               	addwfc	postinc2,f,c
 17264                           
 17265                           ; BSR set to: 15
 17266                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 17267  003048  A062               	btfss	3938,0,c	;volatile
 17268  00304A  D00C               	goto	i1l5984
 17269                           
 17270                           ; BSR set to: 15
 17271                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 17272  00304C  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17273  003050  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17274  003054  0E00               	movlw	0
 17275  003056  12DE               	iorwf	postinc2,f,c
 17276  003058  0E00               	movlw	0
 17277  00305A  12DE               	iorwf	postinc2,f,c
 17278  00305C  0E01               	movlw	1
 17279  00305E  12DE               	iorwf	postinc2,f,c
 17280  003060  0E00               	movlw	0
 17281  003062  12DE               	iorwf	postinc2,f,c
 17282  003064                     i1l5984:
 17283                           
 17284                           ; BSR set to: 15
 17285                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 17286  003064  A262               	btfss	3938,1,c	;volatile
 17287  003066  D00C               	goto	i1l5988
 17288                           
 17289                           ; BSR set to: 15
 17290                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 17291  003068  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17292  00306C  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17293  003070  0E00               	movlw	0
 17294  003072  12DE               	iorwf	postinc2,f,c
 17295  003074  0E00               	movlw	0
 17296  003076  12DE               	iorwf	postinc2,f,c
 17297  003078  0E02               	movlw	2
 17298  00307A  12DE               	iorwf	postinc2,f,c
 17299  00307C  0E00               	movlw	0
 17300  00307E  12DE               	iorwf	postinc2,f,c
 17301  003080                     i1l5988:
 17302                           
 17303                           ; BSR set to: 15
 17304                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 17305  003080  AA62               	btfss	3938,5,c	;volatile
 17306  003082  D00C               	goto	i1l5992
 17307                           
 17308                           ; BSR set to: 15
 17309                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 17310  003084  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17311  003088  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17312  00308C  0E00               	movlw	0
 17313  00308E  12DE               	iorwf	postinc2,f,c
 17314  003090  0E00               	movlw	0
 17315  003092  12DE               	iorwf	postinc2,f,c
 17316  003094  0E04               	movlw	4
 17317  003096  12DE               	iorwf	postinc2,f,c
 17318  003098  0E00               	movlw	0
 17319  00309A  12DE               	iorwf	postinc2,f,c
 17320  00309C                     i1l5992:
 17321                           
 17322                           ; BSR set to: 15
 17323                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 17324  00309C  AC62               	btfss	3938,6,c	;volatile
 17325  00309E  D00C               	goto	i1l5996
 17326                           
 17327                           ; BSR set to: 15
 17328                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 17329  0030A0  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17330  0030A4  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17331  0030A8  0E00               	movlw	0
 17332  0030AA  12DE               	iorwf	postinc2,f,c
 17333  0030AC  0E00               	movlw	0
 17334  0030AE  12DE               	iorwf	postinc2,f,c
 17335  0030B0  0E08               	movlw	8
 17336  0030B2  12DE               	iorwf	postinc2,f,c
 17337  0030B4  0E00               	movlw	0
 17338  0030B6  12DE               	iorwf	postinc2,f,c
 17339  0030B8                     i1l5996:
 17340                           
 17341                           ; BSR set to: 15
 17342                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 17343  0030B8  AE62               	btfss	3938,7,c	;volatile
 17344  0030BA  D00C               	goto	i1l6000
 17345                           
 17346                           ; BSR set to: 15
 17347                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 17348  0030BC  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17349  0030C0  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17350  0030C4  0E00               	movlw	0
 17351  0030C6  12DE               	iorwf	postinc2,f,c
 17352  0030C8  0E00               	movlw	0
 17353  0030CA  12DE               	iorwf	postinc2,f,c
 17354  0030CC  0E10               	movlw	16
 17355  0030CE  12DE               	iorwf	postinc2,f,c
 17356  0030D0  0E00               	movlw	0
 17357  0030D2  12DE               	iorwf	postinc2,f,c
 17358  0030D4                     i1l6000:
 17359                           
 17360                           ; BSR set to: 15
 17361                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 17362  0030D4  CF61 F02C          	movff	3937,??_CANreceiveMessage	;volatile
 17363  0030D8  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17364  0030DA  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17365  0030DC  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17366  0030DE  0E15               	movlw	21
 17367  0030E0                     i1u756_25:
 17368  0030E0  90D8               	bcf	status,0,c
 17369  0030E2  362C               	rlcf	??_CANreceiveMessage,f,c
 17370  0030E4  362D               	rlcf	??_CANreceiveMessage+1,f,c
 17371  0030E6  362E               	rlcf	??_CANreceiveMessage+2,f,c
 17372  0030E8  362F               	rlcf	??_CANreceiveMessage+3,f,c
 17373  0030EA  2EE8               	decfsz	wreg,f,c
 17374  0030EC  D7F9               	goto	i1u756_25
 17375  0030EE  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17376  0030F2  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17377  0030F6  502C               	movf	??_CANreceiveMessage,w,c
 17378  0030F8  12DE               	iorwf	postinc2,f,c
 17379  0030FA  502D               	movf	??_CANreceiveMessage+1,w,c
 17380  0030FC  12DE               	iorwf	postinc2,f,c
 17381  0030FE  502E               	movf	??_CANreceiveMessage+2,w,c
 17382  003100  12DE               	iorwf	postinc2,f,c
 17383  003102  502F               	movf	??_CANreceiveMessage+3,w,c
 17384  003104  12DE               	iorwf	postinc2,f,c
 17385  003106                     i1l6002:
 17386                           
 17387                           ; BSR set to: 15
 17388                           ;inc\CANlib.h: 629: }
 17389                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 17390  003106  9E60               	bcf	3936,7,c	;volatile
 17391                           
 17392                           ; BSR set to: 15
 17393                           ;inc\CANlib.h: 632: return (error);
 17394                           ;	Return value of _CANreceiveMessage is never used
 17395  003108  0012               	return	
 17396  00310A                     __end_of_CANreceiveMessage:
 17397                           	opt stack 0
 17398                           pclatu	equ	0xFFB
 17399                           pclath	equ	0xFFA
 17400                           tblptru	equ	0xFF8
 17401                           tblptrh	equ	0xFF7
 17402                           tblptrl	equ	0xFF6
 17403                           tablat	equ	0xFF5
 17404                           prodh	equ	0xFF4
 17405                           prodl	equ	0xFF3
 17406                           intcon	equ	0xFF2
 17407                           intcon2	equ	0xFF1
 17408                           postinc0	equ	0xFEE
 17409                           fsr0h	equ	0xFEA
 17410                           fsr0l	equ	0xFE9
 17411                           wreg	equ	0xFE8
 17412                           indf1	equ	0xFE7
 17413                           postdec1	equ	0xFE5
 17414                           fsr1h	equ	0xFE2
 17415                           fsr1l	equ	0xFE1
 17416                           bsr	equ	0xFE0
 17417                           indf2	equ	0xFDF
 17418                           postinc2	equ	0xFDE
 17419                           postdec2	equ	0xFDD
 17420                           plusw2	equ	0xFDB
 17421                           fsr2h	equ	0xFDA
 17422                           fsr2l	equ	0xFD9
 17423                           status	equ	0xFD8
 17424                           
 17425 ;; *************** function _ISR_Alta *****************
 17426 ;; Defined at:
 17427 ;;		line 105 in file "parcheggio.c"
 17428 ;; Parameters:    Size  Location     Type
 17429 ;;		None
 17430 ;; Auto vars:     Size  Location     Type
 17431 ;;		None
 17432 ;; Return value:  Size  Location     Type
 17433 ;;		None               void
 17434 ;; Registers used:
 17435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17436 ;; Tracked objects:
 17437 ;;		On entry : 0/0
 17438 ;;		On exit  : 0/0
 17439 ;;		Unchanged: 0/0
 17440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17443 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17444 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17445 ;;Total ram usage:       16 bytes
 17446 ;; Hardware stack levels used:    1
 17447 ;; Hardware stack levels required when called:    1
 17448 ;; This function calls:
 17449 ;;		___lwdiv
 17450 ;; This function is called by:
 17451 ;;		Interrupt level 2
 17452 ;; This function uses a non-reentrant model
 17453 ;;
 17454                           
 17455                           	psect	intcode
 17456  000008                     __pintcode:
 17457                           	opt stack 0
 17458  000008                     _ISR_Alta:
 17459                           	opt stack 21
 17460                           
 17461                           ; BSR set to: 15
 17462                           ;incstack = 0
 17463  000008  8255               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 17464  00000A  CFFA F069          	movff	pclath,??_ISR_Alta+2
 17465  00000E  CFFB F06A          	movff	pclatu,??_ISR_Alta+3
 17466  000012  EF88  F030         	goto	int_func
 17467                           pclatu	equ	0xFFB
 17468                           pclath	equ	0xFFA
 17469                           tblptru	equ	0xFF8
 17470                           tblptrh	equ	0xFF7
 17471                           tblptrl	equ	0xFF6
 17472                           tablat	equ	0xFF5
 17473                           prodh	equ	0xFF4
 17474                           prodl	equ	0xFF3
 17475                           intcon	equ	0xFF2
 17476                           intcon2	equ	0xFF1
 17477                           postinc0	equ	0xFEE
 17478                           fsr0h	equ	0xFEA
 17479                           fsr0l	equ	0xFE9
 17480                           wreg	equ	0xFE8
 17481                           indf1	equ	0xFE7
 17482                           postdec1	equ	0xFE5
 17483                           fsr1h	equ	0xFE2
 17484                           fsr1l	equ	0xFE1
 17485                           bsr	equ	0xFE0
 17486                           indf2	equ	0xFDF
 17487                           postinc2	equ	0xFDE
 17488                           postdec2	equ	0xFDD
 17489                           plusw2	equ	0xFDB
 17490                           fsr2h	equ	0xFDA
 17491                           fsr2l	equ	0xFD9
 17492                           status	equ	0xFD8
 17493                           
 17494                           	psect	intcode_body
 17495  006110                     __pintcode_body:
 17496                           	opt stack 21
 17497  006110                     int_func:
 17498                           	opt stack 21
 17499  006110  CFE9 F06B          	movff	fsr0l,??_ISR_Alta+4
 17500  006114  CFEA F06C          	movff	fsr0h,??_ISR_Alta+5
 17501  006118  CFE1 F06D          	movff	fsr1l,??_ISR_Alta+6
 17502  00611C  CFE2 F06E          	movff	fsr1h,??_ISR_Alta+7
 17503  006120  CFD9 F06F          	movff	fsr2l,??_ISR_Alta+8
 17504  006124  CFDA F070          	movff	fsr2h,??_ISR_Alta+9
 17505  006128  CFF3 F071          	movff	prodl,??_ISR_Alta+10
 17506  00612C  CFF4 F072          	movff	prodh,??_ISR_Alta+11
 17507  006130  CFF6 F073          	movff	tblptrl,??_ISR_Alta+12
 17508  006134  CFF7 F074          	movff	tblptrh,??_ISR_Alta+13
 17509  006138  CFF8 F075          	movff	tblptru,??_ISR_Alta+14
 17510  00613C  CFF5 F076          	movff	tablat,??_ISR_Alta+15
 17511                           
 17512                           ;parcheggio.c: 106: if (INTCON2bits.INTEDG0 == 1) {
 17513  006140  ACF1               	btfss	intcon2,6,c	;volatile
 17514  006142  D007               	goto	i2l700
 17515                           
 17516                           ;parcheggio.c: 107: INTCON2bits.INTEDG0 = 0;
 17517  006144  9CF1               	bcf	intcon2,6,c	;volatile
 17518                           
 17519                           ;parcheggio.c: 108: TMR3H = 0;
 17520  006146  0E00               	movlw	0
 17521  006148  6EB3               	movwf	4019,c	;volatile
 17522                           
 17523                           ;parcheggio.c: 109: TMR3L = 0;
 17524  00614A  0E00               	movlw	0
 17525  00614C  6EB2               	movwf	4018,c	;volatile
 17526                           
 17527                           ;parcheggio.c: 110: distance_error = 0;
 17528  00614E  9851               	bcf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 17529                           
 17530                           ;parcheggio.c: 111: } else {
 17531  006150  D030               	goto	i2l8094
 17532  006152                     i2l700:
 17533                           
 17534                           ;parcheggio.c: 112: TMR3H_temp = TMR3H;
 17535  006152  CFB3 F026          	movff	4019,_TMR3H_temp	;volatile
 17536                           
 17537                           ;parcheggio.c: 113: TMR3L_temp = TMR3L;
 17538  006156  CFB2 F027          	movff	4018,_TMR3L_temp	;volatile
 17539                           
 17540                           ;parcheggio.c: 114: timerValue2 = TMR3H_temp;
 17541  00615A  C026  F023         	movff	_TMR3H_temp,_timerValue2	;volatile
 17542  00615E  6A24               	clrf	_timerValue2+1,c	;volatile
 17543                           
 17544                           ;parcheggio.c: 115: timerValue2 = ((timerValue2 << 8) | (TMR3L_temp));
 17545  006160  5023               	movf	_timerValue2,w,c	;volatile
 17546  006162  0100               	movlb	0	; () banked
 17547  006164  6F67               	movwf	??_ISR_Alta& (0+255),b
 17548  006166  5027               	movf	_TMR3L_temp,w,c	;volatile
 17549  006168  6E23               	movwf	_timerValue2,c	;volatile
 17550  00616A  C067  F024         	movff	??_ISR_Alta,_timerValue2+1	;volatile
 17551                           
 17552                           ; BSR set to: 0
 17553                           ;parcheggio.c: 116: pulse_time = timerValue2 / 2;
 17554  00616E  90D8               	bcf	status,0,c
 17555  006170  3024               	rrcf	_timerValue2+1,w,c	;volatile
 17556  006172  0100               	movlb	0	; () banked
 17557  006174  6F67               	movwf	??_ISR_Alta& (0+255),b
 17558  006176  3023               	rrcf	_timerValue2,w,c	;volatile
 17559  006178  6E1F               	movwf	_pulse_time,c	;volatile
 17560  00617A  C067  F020         	movff	??_ISR_Alta,_pulse_time+1	;volatile
 17561                           
 17562                           ; BSR set to: 0
 17563                           ;parcheggio.c: 117: sensor_distance[MUX_index] = pulse_time / 58;
 17564  00617E  C01F  F060         	movff	_pulse_time,___lwdiv@dividend	;volatile
 17565  006182  C020  F061         	movff	_pulse_time+1,___lwdiv@dividend+1	;volatile
 17566  006186  0E00               	movlw	0
 17567  006188  0100               	movlb	0	; () banked
 17568  00618A  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 17569  00618C  0E3A               	movlw	58
 17570  00618E  6F62               	movwf	___lwdiv@divisor& (0+255),b
 17571  006190  ECE3  F031         	call	___lwdiv	;wreg free
 17572  006194  5025               	movf	_MUX_index,w,c	;volatile
 17573  006196  0D02               	mullw	2
 17574  006198  0E01               	movlw	low _sensor_distance
 17575  00619A  24F3               	addwf	prodl,w,c
 17576  00619C  6ED9               	movwf	fsr2l,c
 17577  00619E  0E00               	movlw	high _sensor_distance
 17578  0061A0  20F4               	addwfc	prodh,w,c
 17579  0061A2  6EDA               	movwf	fsr2h,c
 17580  0061A4  0100               	movlb	0	; () banked
 17581  0061A6  C060  FFDE         	movff	?___lwdiv,postinc2
 17582  0061AA  0100               	movlb	0	; () banked
 17583  0061AC  C061  FFDD         	movff	?___lwdiv+1,postdec2
 17584                           
 17585                           ; BSR set to: 0
 17586                           ;parcheggio.c: 118: INTCON2bits.INTEDG0 = 1;
 17587  0061B0  8CF1               	bsf	intcon2,6,c	;volatile
 17588  0061B2                     i2l8094:
 17589                           
 17590                           ;parcheggio.c: 119: }
 17591                           ;parcheggio.c: 120: INTCONbits.INT0IF = 0;
 17592  0061B2  92F2               	bcf	intcon,1,c	;volatile
 17593  0061B4  C076  FFF5         	movff	??_ISR_Alta+15,tablat
 17594  0061B8  C075  FFF8         	movff	??_ISR_Alta+14,tblptru
 17595  0061BC  C074  FFF7         	movff	??_ISR_Alta+13,tblptrh
 17596  0061C0  C073  FFF6         	movff	??_ISR_Alta+12,tblptrl
 17597  0061C4  C072  FFF4         	movff	??_ISR_Alta+11,prodh
 17598  0061C8  C071  FFF3         	movff	??_ISR_Alta+10,prodl
 17599  0061CC  C070  FFDA         	movff	??_ISR_Alta+9,fsr2h
 17600  0061D0  C06F  FFD9         	movff	??_ISR_Alta+8,fsr2l
 17601  0061D4  C06E  FFE2         	movff	??_ISR_Alta+7,fsr1h
 17602  0061D8  C06D  FFE1         	movff	??_ISR_Alta+6,fsr1l
 17603  0061DC  C06C  FFEA         	movff	??_ISR_Alta+5,fsr0h
 17604  0061E0  C06B  FFE9         	movff	??_ISR_Alta+4,fsr0l
 17605  0061E4  C06A  FFFB         	movff	??_ISR_Alta+3,pclatu
 17606  0061E8  C069  FFFA         	movff	??_ISR_Alta+2,pclath
 17607  0061EC  9255               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 17608  0061EE  0011               	retfie		f
 17609  0061F0                     __end_of_ISR_Alta:
 17610                           	opt stack 0
 17611                           pclatu	equ	0xFFB
 17612                           pclath	equ	0xFFA
 17613                           tblptru	equ	0xFF8
 17614                           tblptrh	equ	0xFF7
 17615                           tblptrl	equ	0xFF6
 17616                           tablat	equ	0xFF5
 17617                           prodh	equ	0xFF4
 17618                           prodl	equ	0xFF3
 17619                           intcon	equ	0xFF2
 17620                           intcon2	equ	0xFF1
 17621                           postinc0	equ	0xFEE
 17622                           fsr0h	equ	0xFEA
 17623                           fsr0l	equ	0xFE9
 17624                           wreg	equ	0xFE8
 17625                           indf1	equ	0xFE7
 17626                           postdec1	equ	0xFE5
 17627                           fsr1h	equ	0xFE2
 17628                           fsr1l	equ	0xFE1
 17629                           bsr	equ	0xFE0
 17630                           indf2	equ	0xFDF
 17631                           postinc2	equ	0xFDE
 17632                           postdec2	equ	0xFDD
 17633                           plusw2	equ	0xFDB
 17634                           fsr2h	equ	0xFDA
 17635                           fsr2l	equ	0xFD9
 17636                           status	equ	0xFD8
 17637                           
 17638 ;; *************** function ___lwdiv *****************
 17639 ;; Defined at:
 17640 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 17641 ;; Parameters:    Size  Location     Type
 17642 ;;  dividend        2    0[BANK0 ] unsigned int 
 17643 ;;  divisor         2    2[BANK0 ] unsigned int 
 17644 ;; Auto vars:     Size  Location     Type
 17645 ;;  quotient        2    5[BANK0 ] unsigned int 
 17646 ;;  counter         1    4[BANK0 ] unsigned char 
 17647 ;; Return value:  Size  Location     Type
 17648 ;;                  2    0[BANK0 ] unsigned int 
 17649 ;; Registers used:
 17650 ;;		wreg, status,2, status,0
 17651 ;; Tracked objects:
 17652 ;;		On entry : 0/0
 17653 ;;		On exit  : 0/0
 17654 ;;		Unchanged: 0/0
 17655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17656 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17657 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17659 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17660 ;;Total ram usage:        7 bytes
 17661 ;; Hardware stack levels used:    1
 17662 ;; This function calls:
 17663 ;;		Nothing
 17664 ;; This function is called by:
 17665 ;;		_ISR_Alta
 17666 ;; This function uses a non-reentrant model
 17667 ;;
 17668                           
 17669                           	psect	text40
 17670  0063C6                     __ptext40:
 17671                           	opt stack 0
 17672  0063C6                     ___lwdiv:
 17673                           	opt stack 21
 17674                           
 17675                           ;incstack = 0
 17676  0063C6  0E00               	movlw	0
 17677  0063C8  0100               	movlb	0	; () banked
 17678  0063CA  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 17679  0063CC  0E00               	movlw	0
 17680  0063CE  6F65               	movwf	___lwdiv@quotient& (0+255),b
 17681                           
 17682                           ; BSR set to: 0
 17683  0063D0  0100               	movlb	0	; () banked
 17684  0063D2  5162               	movf	___lwdiv@divisor& (0+255),w,b
 17685  0063D4  0100               	movlb	0	; () banked
 17686  0063D6  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 17687  0063D8  B4D8               	btfsc	status,2,c
 17688  0063DA  D02C               	goto	i2l1303
 17689                           
 17690                           ; BSR set to: 0
 17691  0063DC  0E01               	movlw	1
 17692  0063DE  0100               	movlb	0	; () banked
 17693  0063E0  6F64               	movwf	___lwdiv@counter& (0+255),b
 17694  0063E2  D006               	goto	i2l8064
 17695  0063E4                     i2l8062:
 17696                           
 17697                           ; BSR set to: 0
 17698  0063E4  0100               	movlb	0	; () banked
 17699  0063E6  90D8               	bcf	status,0,c
 17700  0063E8  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 17701  0063EA  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 17702  0063EC  0100               	movlb	0	; () banked
 17703  0063EE  2B64               	incf	___lwdiv@counter& (0+255),f,b
 17704  0063F0                     i2l8064:
 17705                           
 17706                           ; BSR set to: 0
 17707  0063F0  0100               	movlb	0	; () banked
 17708  0063F2  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 17709  0063F4  D7F7               	goto	i2l8062
 17710  0063F6                     i2l8066:
 17711                           
 17712                           ; BSR set to: 0
 17713  0063F6  0100               	movlb	0	; () banked
 17714  0063F8  90D8               	bcf	status,0,c
 17715  0063FA  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 17716  0063FC  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 17717                           
 17718                           ; BSR set to: 0
 17719  0063FE  0100               	movlb	0	; () banked
 17720  006400  5162               	movf	___lwdiv@divisor& (0+255),w,b
 17721  006402  0100               	movlb	0	; () banked
 17722  006404  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 17723  006406  0100               	movlb	0	; () banked
 17724  006408  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 17725  00640A  0100               	movlb	0	; () banked
 17726  00640C  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 17727  00640E  A0D8               	btfss	status,0,c
 17728  006410  D00A               	goto	i2l8074
 17729                           
 17730                           ; BSR set to: 0
 17731  006412  0100               	movlb	0	; () banked
 17732  006414  5162               	movf	___lwdiv@divisor& (0+255),w,b
 17733  006416  0100               	movlb	0	; () banked
 17734  006418  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 17735  00641A  0100               	movlb	0	; () banked
 17736  00641C  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 17737  00641E  0100               	movlb	0	; () banked
 17738  006420  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 17739                           
 17740                           ; BSR set to: 0
 17741  006422  0100               	movlb	0	; () banked
 17742  006424  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 17743  006426                     i2l8074:
 17744                           
 17745                           ; BSR set to: 0
 17746  006426  0100               	movlb	0	; () banked
 17747  006428  90D8               	bcf	status,0,c
 17748  00642A  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 17749  00642C  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 17750                           
 17751                           ; BSR set to: 0
 17752  00642E  0100               	movlb	0	; () banked
 17753  006430  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 17754  006432  D7E1               	goto	i2l8066
 17755  006434                     i2l1303:
 17756                           
 17757                           ; BSR set to: 0
 17758  006434  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 17759  006438  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 17760                           
 17761                           ; BSR set to: 0
 17762  00643C  0012               	return		;funcret
 17763  00643E                     __end_of___lwdiv:
 17764                           	opt stack 0
 17765                           pclatu	equ	0xFFB
 17766                           pclath	equ	0xFFA
 17767                           tblptru	equ	0xFF8
 17768                           tblptrh	equ	0xFF7
 17769                           tblptrl	equ	0xFF6
 17770                           tablat	equ	0xFF5
 17771                           prodh	equ	0xFF4
 17772                           prodl	equ	0xFF3
 17773                           intcon	equ	0xFF2
 17774                           intcon2	equ	0xFF1
 17775                           postinc0	equ	0xFEE
 17776                           fsr0h	equ	0xFEA
 17777                           fsr0l	equ	0xFE9
 17778                           wreg	equ	0xFE8
 17779                           indf1	equ	0xFE7
 17780                           postdec1	equ	0xFE5
 17781                           fsr1h	equ	0xFE2
 17782                           fsr1l	equ	0xFE1
 17783                           bsr	equ	0xFE0
 17784                           indf2	equ	0xFDF
 17785                           postinc2	equ	0xFDE
 17786                           postdec2	equ	0xFDD
 17787                           plusw2	equ	0xFDB
 17788                           fsr2h	equ	0xFDA
 17789                           fsr2l	equ	0xFD9
 17790                           status	equ	0xFD8
 17791                           pclatu	equ	0xFFB
 17792                           pclath	equ	0xFFA
 17793                           tblptru	equ	0xFF8
 17794                           tblptrh	equ	0xFF7
 17795                           tblptrl	equ	0xFF6
 17796                           tablat	equ	0xFF5
 17797                           prodh	equ	0xFF4
 17798                           prodl	equ	0xFF3
 17799                           intcon	equ	0xFF2
 17800                           intcon2	equ	0xFF1
 17801                           postinc0	equ	0xFEE
 17802                           fsr0h	equ	0xFEA
 17803                           fsr0l	equ	0xFE9
 17804                           wreg	equ	0xFE8
 17805                           indf1	equ	0xFE7
 17806                           postdec1	equ	0xFE5
 17807                           fsr1h	equ	0xFE2
 17808                           fsr1l	equ	0xFE1
 17809                           bsr	equ	0xFE0
 17810                           indf2	equ	0xFDF
 17811                           postinc2	equ	0xFDE
 17812                           postdec2	equ	0xFDD
 17813                           plusw2	equ	0xFDB
 17814                           fsr2h	equ	0xFDA
 17815                           fsr2l	equ	0xFD9
 17816                           status	equ	0xFD8
 17817                           
 17818                           	psect	param0
 17819  0000                     pclatu	equ	0xFFB
 17820                           pclath	equ	0xFFA
 17821                           tblptru	equ	0xFF8
 17822                           tblptrh	equ	0xFF7
 17823                           tblptrl	equ	0xFF6
 17824                           tablat	equ	0xFF5
 17825                           prodh	equ	0xFF4
 17826                           prodl	equ	0xFF3
 17827                           intcon	equ	0xFF2
 17828                           intcon2	equ	0xFF1
 17829                           postinc0	equ	0xFEE
 17830                           fsr0h	equ	0xFEA
 17831                           fsr0l	equ	0xFE9
 17832                           wreg	equ	0xFE8
 17833                           indf1	equ	0xFE7
 17834                           postdec1	equ	0xFE5
 17835                           fsr1h	equ	0xFE2
 17836                           fsr1l	equ	0xFE1
 17837                           bsr	equ	0xFE0
 17838                           indf2	equ	0xFDF
 17839                           postinc2	equ	0xFDE
 17840                           postdec2	equ	0xFDD
 17841                           plusw2	equ	0xFDB
 17842                           fsr2h	equ	0xFDA
 17843                           fsr2l	equ	0xFD9
 17844                           status	equ	0xFD8
 17845                           
 17846                           	psect	temp
 17847  000055                     btemp:
 17848                           	opt stack 0
 17849  000055                     	ds	1
 17850  0000                     int$flags	set	btemp
 17851                           pclatu	equ	0xFFB
 17852                           pclath	equ	0xFFA
 17853                           tblptru	equ	0xFF8
 17854                           tblptrh	equ	0xFF7
 17855                           tblptrl	equ	0xFF6
 17856                           tablat	equ	0xFF5
 17857                           prodh	equ	0xFF4
 17858                           prodl	equ	0xFF3
 17859                           intcon	equ	0xFF2
 17860                           intcon2	equ	0xFF1
 17861                           postinc0	equ	0xFEE
 17862                           fsr0h	equ	0xFEA
 17863                           fsr0l	equ	0xFE9
 17864                           wreg	equ	0xFE8
 17865                           indf1	equ	0xFE7
 17866                           postdec1	equ	0xFE5
 17867                           fsr1h	equ	0xFE2
 17868                           fsr1l	equ	0xFE1
 17869                           bsr	equ	0xFE0
 17870                           indf2	equ	0xFDF
 17871                           postinc2	equ	0xFDE
 17872                           postdec2	equ	0xFDD
 17873                           plusw2	equ	0xFDB
 17874                           fsr2h	equ	0xFDA
 17875                           fsr2l	equ	0xFD9
 17876                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    80
    Data        11
    BSS         196
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      84
    BANK0           160    120     137
    BANK1           256     93     240
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK1[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_speed(BANK1[8]), data_brake(BANK1[8]), data_steering(BANK1[8]), data_correction(BANK1[8]), 
		 -> data_test(BANK1[8]), data(BANK1[8]), sensor_distance_short(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    None.

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->i1_CANsendMessage

Critical Paths under _main in BANK0

    _park_search->_parallelo
    _park_routine->_parallelo
    _can_send->_CANsendMessage
    _sin->_floor
    _floor->___xxtofl
    ___xxtofl->___fltol
    ___fltol->___flneg
    ___flsub->_floor
    _asin->_atan
    _sqrt->___flneg
    _atan->___flge
    _fabs->___flneg
    ___flneg->___fladd
    _eval_poly->___fladd
    ___flmul->___fldiv
    ___fladd->___flmul
    ___flge->_fabs
    _delay_s->_delay_ms
    _delay_ms->___wmul
    _configurations->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask

Critical Paths under _ISR_Alta in BANK0

    _ISR_Alta->___lwdiv

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_park_routine
    _park_routine->_matematica
    _parallelo->_asin
    _matematica->_cos
    _cos->_asin
    _sin->___flsub
    _floor->___xxtofl
    ___flsub->_floor
    _asin->_sqrt

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Alta in BANK3

    None.

Critical Paths under _ISR_Bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Alta in BANK4

    None.

Critical Paths under _ISR_Bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Alta in BANK5

    None.

Critical Paths under _ISR_Bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Alta in BANK6

    None.

Critical Paths under _ISR_Bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Alta in BANK7

    None.

Critical Paths under _ISR_Bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Alta in BANK8

    None.

Critical Paths under _ISR_Bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Alta in BANK9

    None.

Critical Paths under _ISR_Bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Alta in BANK10

    None.

Critical Paths under _ISR_Bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Alta in BANK11

    None.

Critical Paths under _ISR_Bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Alta in BANK12

    None.

Critical Paths under _ISR_Bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  345764
                                            119 BANK0      1     1      0
                       _CANisTxReady
                     _CANsendMessage
                    _can_interpreter
                     _configurations
                           _delay_ms
                       _park_routine
                        _park_search
 ---------------------------------------------------------------------------------
 (1) _park_search                                          2     2      0   91701
                                             45 BANK1      2     2      0
                       _CANisTxReady
                     _CANsendMessage
                           ___xxtofl
                                _abs
                          _parallelo
 ---------------------------------------------------------------------------------
 (1) _park_routine                                        12    12      0  240889
                                             81 BANK1     12    12      0
                       _CANisTxReady
                     _CANsendMessage
                            ___fladd
                            ___flneg
                            ___fltol
                           ___xxtofl
                           _can_send
                           _delay_ms
                            _delay_s
                         _matematica
                          _parallelo
 ---------------------------------------------------------------------------------
 (2) _parallelo                                            2     2      0   84502
                                            117 BANK0      2     2      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _abs
                               _asin
                           _can_send
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _can_send                                             0     0      0    6168
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (4) _CANsendMessage                                      16     8      8    6131
                                             23 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (4) _CANisTxReady                                         1     1      0      37
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     247
                                             23 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _matematica                                          32    32      0  133218
                                             53 BANK1     28    28      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                               _asin
                                _cos
 ---------------------------------------------------------------------------------
 (3) _cos                                                 12     8      4   57965
                                             45 BANK1      8     4      4
                            ___fladd
                             ___flge
                               _asin (ARG)
                                _sin
 ---------------------------------------------------------------------------------
 (4) _sin                                                 17    13      4   49794
                                             20 BANK1     17    13      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                          _eval_poly
                              _floor
 ---------------------------------------------------------------------------------
 (5) _floor                                               10     6      4   10191
                                            115 BANK0      4     0      4
                                              6 BANK1      6     6      0
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (6) _frexp                                                8     2      6     452
                                             23 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     784
                                            107 BANK0      8     4      4
                                              0 BANK1      6     6      0
                            ___fltol (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     722
                                             97 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    6777
                                             12 BANK1      8     0      8
                            ___fladd
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (3) _asin                                                36    32      4   57438
                                             21 BANK1     24    20      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                               _atan
                               _fabs
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _sqrt                                                29    25      4    1467
                                             97 BANK0      8     4      4
                                              0 BANK1     21    21      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (4) _atan                                                21    17      4   34323
                                            113 BANK0      4     0      4
                                              0 BANK1     17    17      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                          _eval_poly
                               _fabs
 ---------------------------------------------------------------------------------
 (4) _fabs                                                 4     0      4    1621
                                             97 BANK0      4     0      4
                            ___flneg
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4    1297
                                             93 BANK0      4     0      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           16     8      8   13009
                                             93 BANK0     16     8      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    5541
                                             48 BANK0     25    17      8
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    6290
                                             73 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1498
                                            101 BANK0     12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4347
                                             23 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (2) _delay_s                                              2     2      0     870
                                             31 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             2     0      2     802
                                             29 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     386
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _configurations                                       0     0      0    6204
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    6204
                                             37 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      4     4      0       0
                                             23 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_Bassa                                           23    23      0    3518
                                             16 COMRAM    23    23      0
                  _CANreceiveMessage
                     i1_CANisTxReady
                   i1_CANsendMessage
 ---------------------------------------------------------------------------------
 (8) i1_CANsendMessage                                    16     8      8    2243
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (8) i1_CANisTxReady                                       1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_Alta                                            16    16      0     395
                                              7 BANK0     16    16      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (10) ___lwdiv                                             7     3      4     395
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisTxReady
   _CANsendMessage
   _can_interpreter
   _configurations
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _delay_ms
     ___wmul
   _park_routine
     _CANisTxReady
     _CANsendMessage
     ___fladd
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
     ___flneg
       ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___flneg (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
     ___xxtofl
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       _abs (ARG)
     _can_send
       _CANisTxReady
       _CANsendMessage
     _delay_ms
       ___wmul
     _delay_s
       _delay_ms
         ___wmul
     _matematica
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flmul
         ___fldiv (ARG)
       ___flneg
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _cos
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _asin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _atan
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___flmul
               ___fldiv (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _eval_poly
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _fabs
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           _sqrt
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _sin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flsub
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _floor (ARG)
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___flge
                 _fabs (ARG)
                   ___flneg
                     ___fladd (ARG)
                       ___fldiv (ARG)
                       ___flmul (ARG)
                         ___fldiv (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
               ___xxtofl
                 ___fltol (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___flneg (ARG)
                     ___fladd (ARG)
                       ___fldiv (ARG)
                       ___flmul (ARG)
                         ___fldiv (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                 _abs (ARG)
               _frexp
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _floor
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___flneg (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___xxtofl
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
               _abs (ARG)
             _frexp
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___flmul
         ___fldiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _abs (ARG)
       _abs
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
   _park_search
     _CANisTxReady
     _CANsendMessage
     ___xxtofl
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       _abs (ARG)
     _abs
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___flmul
         ___fldiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _abs (ARG)
       _abs
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)

 _ISR_Bassa (ROOT)
   _CANreceiveMessage
   i1_CANisTxReady
   i1_CANsendMessage

 _ISR_Alta (ROOT)
   ___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     5D      F0       7       93.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     78      89       5       85.6%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     27      54       1       89.4%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1CD      20        0.0%
DATA                 0      0     1CD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat May 28 17:30:07 2016

                ___fldiv@aexp 008F                  ___fldiv@bexp 008E                             _n 0138  
                           _x 0011                             _z 00DC          __end_of_CANSetFilter 1858  
                ___fldiv@sign 0083            delay_s@repeat_loop 0080                            bsr 000FE0  
         ___wmul@multiplicand 0079                   __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                 __CFG_OSC$HS 000000                    _MUX_select 0100                           l402 1F30  
                         l403 1F34                           l500 15B4                           l404 1F40  
                         l501 15B8                           l510 16C4                           l502 15C4  
                         l511 16D0                           l503 15C8                           l520 17DC  
                         l512 16D4                           l504 15D4                           l440 48AC  
                         l432 486C                           l521 17E0                           l513 16E0  
                         l433 4870                           l522 17EC                           l514 16E4  
                         l450 49B8                           l434 487C                           l370 1918  
                         l523 17F0                           l515 16F0                           l507 16B0  
                         l451 49C4                           l443 4984                           l435 4880  
                         l363 1ADC                           l524 17FC                           l508 16B4  
                         l444 4988                           l436 488C                           l380 1AF6  
                         l364 186E                           l525 1800                           l509 16C0  
                         l445 4994                           l437 4890                           l381 1BEE  
                         l373 1A28                           l365 1872                           l526 180C  
                         l518 17CC                           l470 1276                           l446 4998  
                         l438 489C                           l358 5946                           l390 1CBC  
                         l382 1B7E                           l374 1A2C                           l366 196A  
                         l519 17D0                           l471 1282                           l463 1242  
                         l447 49A4                           l439 48A0                           l359 5950  
                         l383 1B88                           l375 1A38                           l367 18FA  
                         l480 138C                           l464 1246                           l448 49A8  
                         l384 1B92                           l368 1904                           l481 1390  
                         l465 1252                           l449 49B4                           l393 1D76  
                         l385 1B9C                           l369 190E                           l490 149C  
                         l482 139C                           l474 135C                           l466 1256  
                         l394 1D7A                           l378 1D60                           l491 14A8  
                         l475 1360                           l467 1262                           l395 1E72  
                         l379 1AF2                           l492 14AC                           l476 136C  
                         l468 1266                           l556 66A0                           l396 1E02  
                         l388 1CAC                           l493 14B8                           l485 1478  
                         l477 1370                           l469 1272                           l397 1E0C  
                         l389 1CB0                           l486 147C                           l478 137C  
                         l398 1E16                           l487 1488                           l479 1380  
                         l399 1E20                           l496 1594                           l488 148C  
                         l760 587C                           l497 1598                           l489 1498  
                         l569 65AE                           l498 15A4                           l499 15A8  
                         l835 5276                           l747 5880                           l780 3AEC  
                         l749 572A                           l790 3CDC                           l783 3B2A  
                         l793 3D74                           l796 3DFE                           l789 3B58  
                         l896 664C                  __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000  
                         _abs 662A                           _asd 0289                           _dir 028B  
                         _cos 602C                           _msg 0144                           _sin 4A10  
                         prod 000FF3                           wreg 000FE8               ?_configurations 002A  
                ___flmul@aexp 009D                  ___flmul@bexp 00A2                  ___flmul@sign 009C  
                ___flmul@temp 00A7                  ___flmul@prod 00A3                  __CFG_LVP$OFF 000000  
                ___fltol@exp1 00CA                  __CFG_WDT$OFF 000000                          l1103 5B90  
                        ?_abs 0077                          l1411 44E0                          l1420 4518  
                        l1422 4586                          l1414 4488                          l1096 6570  
                        l1441 3666                          l1450 3970                          l1355 32EA  
                        l1339 4D16                          l1372 345E                          l1356 32DE  
                        l1508 5CF2                          l1381 34F2                          l1357 32AA  
                        l1448 3902                          l1458 3A14                          l1490 55EC  
                        l1483 5540                          l5008 1E2A                          l1497 5648  
                        l1498 5660                          l5034 1F44                          l5300 48B0  
                        l5028 1F24                          ?_cos 01B8                          l5410 103C  
                        l5306 48F6                          l5332 49C8                          l7100 65E2  
                        l7110 5E42                          l7032 3916                          l5610 16F4  
                        l5514 13E6                          l5274 47E0                          l5258 472A  
                        l7042 396A                          l7026 38EC                          l7130 5EC4  
                        l5508 13A0                          l5428 10F6                          l5356 0E10  
                        l7212 42D0                          l7052 39C0                          l7140 5EFA  
                        l5542 14BC                          l5446 11B0                          l5374 0EC8  
                        l7222 42FE                          l7126 5EB0                          l5616 173A  
                        l5480 12CC                          l5392 0F82                          l7232 432E  
                        l7056 39E6                          l7144 5F16                          l7136 5EE0  
                        l7160 5578                          l8032 3E58                          l8112 623E  
                        l8120 62A4                          l5474 1286                          l7322 4604  
                        l7242 435C                          l7218 42F4                          l7082 5AEC  
                        l7066 3A34                          l7058 39FA                          l7402 3F06  
                        l7138 5EF0                          l7162 5580                          l7154 5550  
                        l8034 3E64                          l8050 3EDA                          l8114 624C  
                        l5644 1810                          l5548 1502                          l7332 464A  
                        l7324 4618                          l7308 4580                          l7092 5BDC  
                        l7068 3A3E                          l7172 562A                          l7164 5590  
                        l4932 1BA6                          l8044 3E92                          l5582 161E  
                        l7334 464E                          l7326 463A                          l7318 45D6  
                        l7262 43DE                          l7254 43B0                          l7238 4352  
                        l7086 5B3E                          l7078 5A9E                          l7510 5364  
                        l7422 3F84                          l7414 3F52                          l7174 563A  
                        l7166 55CE                          l5576 15D8                          l7280 4494  
                        l7272 445C                          l7416 3F64                          l4952 1CA0  
                        l4856 1922                          l7522 54B8                          l7506 52F0  
                        l7442 3FF6                          l7434 3FC6                          l7186 56B2  
                        l7370 5C20                          l4882 1A3C                          l7602 5FB8  
                        l7700 593E                          l7292 4502                          l6900 34C6  
                        l6820 322A                          l7356 5D5A                          l7460 4140  
                        l7452 4078                          l7196 62DC                          l4876 1A1C  
                        l7702 5954                          l7286 44DC                          l6910 34EC  
                        l6902 34CC                          l7358 5DFE                          l7526 54D0  
                        l7454 4080                          l7374 5C34                          l7550 4B70  
                        l4958 1CC0                          l7606 5FF2                          l7720 6674  
                        l6920 3548                          l6832 32BE                          l7640 4F96  
                        l7616 4D86                          l7570 66CC                          l7706 595C  
                        l7298 452C                          l6834 32C4                          l6754 314C  
                        l7458 4106                          l7466 417C                          l7378 5C56  
                        l7554 4BE6                          l7538 4A46                          l7708 59A0  
                        l7716 6662                          l6940 35A0                          l6932 3588  
                        l6924 355A                          l6772 3196                          l6748 3128  
                        l7628 4EB4                          l7574 65A0                          l6934 358C  
                        l6862 335C                          l6838 32CE                          l6790 31EE  
                        l6782 31C4                          l6766 3182                          l6758 3156  
                        l6950 35D0                          l7486 4292                          l7478 425C  
                        l6928 357C                          l6856 334C                          l6848 330E  
                        l6960 360C                          l7656 60B4                          l7752 5292  
                        l7920 3AE2                          l7840 56C6                          l6890 34A6  
                        l6858 3352                          l6866 336E                          l6778 31BA  
                        l7586 5F2C                          l7746 5238                          l7754 5298  
                        l7906 3A66                          l6884 3490                          l6876 343E  
                        l6980 367A                          l6956 35F4                          l7596 5F7A  
                        l7940 3B50                          l7916 3AAA                          l7860 5788  
                        ?_sin 019F                          l6894 34B2                          l6974 364E  
                        l6958 35FA                          l6984 368E                          l6976 3654  
                        l6968 362A                          l7872 57DC                          l7848 56DA  
                        l7856 5726                          l7890 583E                          l7868 57A4  
                        _LATA 000F89                          _LATB 000F8A                          _LATC 000F8B  
                        u7000 1714                          u7005 1708                          u6205 47BC  
                        u6150 46A6                          u6155 469A                          u6405 0DEC  
                        u6165 4706                          u6510 0FB8                          u6430 0E44  
                        u6190 475C                          u5550 1942                          u7080 1830  
                        u6360 49E8                          u6280 48D0                          u5560 198E  
                        u5705 1C72                          u5810 1E4A                          u6515 0FAC  
                        u6435 0E38                          u6195 4750                          u5555 1936  
                        u5820 1E96                          u7085 1824                          u6605 118C  
                        u6525 1018                          u6445 0EA4                          u6365 49DC  
                        u6285 48C4                          u5565 1982                          u6550 1072  
                        u6470 0EFE                          u6390 0D8C                          u5815 1E3E  
                        u5575 19EE                          u5680 1BC6                          u5825 1E8A  
                        u5690 1C12                          u6555 1066                          u6475 0EF2  
                        u6395 0D80                          u5835 1EF6                          u9220 39D4  
                        u9140 388E                          u6565 10D2                          u6485 0F5E  
                        u5685 1BBA                          u6590 112C                          u5695 1C06  
                        u6920 15F8                          u6840 14DC                          u6760 13C0  
                        u6680 12A6                          u9320 5E62                          u9145 3882  
                        u6595 1120                          u6925 15EC                          u6845 14D0  
                        u6765 13B4                          u6685 129A                          u9325 5E56  
                        u9700 45EA                          u8760 3274                          u8770 328C  
                        u9490 630E                          u8780 328E                          u9498 6312  
                        u9770 5C44                          u9940 5320                          u9950 5322  
    __end_ofi1_CANsendMessage 2674           __size_of_CANSetMask 039E                          _Pmin 0128  
                        abs@a 0077                          _alfa 012C                          _fabs 6544  
                        _data 0153                          _beta 0130                          _atan 52A4  
                        _asin 4D28                          _main 61F0                          cos@f 01B8  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr0l 000FE9  
                        fsr2h 000FDA                          indf1 000FE7                          fsr1l 000FE1  
                        indf2 000FDF                          fsr2l 000FD9                          btemp 0055  
                        _sqrt 3EE8                          pclat 000FFA                          sin@f 019F  
                        sin@y 01A3                          prodh 000FF4                          prodl 000FF3  
                        start 0332                 __CFG_IESO$OFF 000000               ___fldiv@new_exp 0088  
              delay_s@value_s 007F           ISR_Bassa@PORTA_temp 004F                 __CFG_MCLRE$ON 000000  
                ___param_bank 000000              _CANOperationMode 66C4                         ??_abs 0079  
                       ??_cos 00D7                         ??_sin 00D7    __size_of_CANreceiveMessage 050C  
                       ?_fabs 00C1                 ___fltol@sign1 00C9                         ?_atan 00D1  
                       ?_asin 01A0               __end_of___fladd 35B2                         ?_main 002A  
             __end_of___fldiv 4672               __end_of___flneg 65F4               __end_of___flmul 3A58  
             __end_of___flsub 6544               __end_of___fltol 5F28                         u10010 4B6A  
                       u10020 4B6C                         ?_sqrt 00C1                         u10300 56D6  
                       u10231 50CC                         u10241 50D8                         u10280 5290  
                       u10440 3A7C                         _T0CON 000FD5                         u10380 57F0  
                       u10446 3A7E                         u10580 3E36                         u10717 65A2  
                       u10690 625E                         u10696 6260                         _T3CON 000FB1  
          __size_of_ISR_Bassa 031A               __end_of___lwdiv 643E                         i1l410 2E96  
                       i1l402 25D0                         i1l403 25D4                         i1l404 25DE  
                       i1l370 2082                         i1l363 2214                         i1l380 222C  
                       i1l364 1FF8                         i1l381 22FC                         i1l373 2170  
                       i1l365 1FFC                         i1l390 23AE                         i1l382 229A  
                       i1l374 2174                         i1l366 20CC                         i1l383 22A2  
                       i1l375 217E                         i1l367 206A                         i1l384 22AA  
                       i1l368 2072                         i1l393 2458                         i1l385 22B2  
                       i1l369 207A                         i1l394 245C                         i1l378 2444  
                       i1l706 008C                         i1l395 252C                         i1l379 2228  
                       i1l556 66C0                         i1l396 24CA                         i1l388 23A0  
                       i1l732 02EA                         i1l397 24D2                         i1l389 23A4  
                       i1l725 0266                         i1l398 24DA                         i1l718 0174  
                       i1l399 24E2                         i2l700 6152                         _TMR0H 000FD7  
                       _TMR0L 000FD6                         _TMR3H 000FB3                         _TMR3L 000FB2  
                       _PORTA 000F80                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISC 000F94            __end_ofsin@coeff_a 0D41            __end_ofsin@coeff_b 0D51  
               __CFG_PWRT$OFF 000000              __end_of_ISR_Alta 61F0               __end_of_delay_s 6682  
               __CFG_WRT0$OFF 000000                         _J_var 0120                 __CFG_WRT1$OFF 000000  
                       _K_var 0124                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
          CANInitialize@flags 0089                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000                         _bordo 0134                         fabs@d 00C1  
                       _first 0290                         _floor 5BE0                         _frexp 62B6  
                       _errno 00E4                         atan@f 00D1                         atan@x 018F  
                       atan@y 018B                         asin@x 01A0                         asin@y 01B0  
              __pbitbssCOMRAM 0288                         sin@x2 01AB                         tablat 000FF5  
        __end_of_CANisTxReady 66A6                         plusw2 000FDB                         sqrt@a 00C1  
                       sqrt@i 018C                         sqrt@p 0191                         status 000FD8  
                ?_park_search 002A               __initialization 634A                  __end_of_fabs 6582  
                __end_of_atan 54F6                  __end_of_asin 503A                  __end_of_main 62B6  
                __end_of_sqrt 42B2                        ??_fabs 00C5                        ??_atan 00D5  
                      ??_asin 00D5                        ??_main 00D7             _park_routine$3743 01E0  
           _park_routine$3744 01E4                        ??_sqrt 00C5                 __activetblptr 000003  
           _CANisTxReady$2845 0077                        _ADCON1 000FC1                        ?_floor 00D3  
                      ?_frexp 0077                        _CANCON 000F6F            _distance_received1 028E  
             __CFG_BBSIZ$1024 000000             _spazio_parcheggio 0053                 _avvicinamento 028A  
                      i1l6000 30D4                        i1l6002 3106                        i2l1303 6434  
                      i1l6332 208A                        i1l6510 25E2                        i1l6504 25C6  
                      i1l6408 22BA                        i1l6352 2166                        i1l6600 0146  
                      i1l6434 23B2                        i1l6602 0166                        i1l6428 2396  
                      i1l6358 2182                        i1l6632 01A8                        i1l5930 2E22  
                      i1l5922 2DE6                        i1l5914 2D76                        i1l5940 2E90  
                      i1l6484 24EA                        i1l6636 01B0                        i1l5934 2E40  
                      i1l5926 2E04                        i1l6672 02A0                        i1l6664 0270  
                      i1l5938 2E5E                        i1l6682 02D0                        i1l6658 0242  
                      i1l6594 0108                        i1l6578 00C8                        i1l6676 02A8  
                      i1l6596 0114                        i1l5992 309C                        i1l5984 3064  
                      i1l5976 2FF6                        i1l5996 30B8                        i1l5988 3080  
                      i2l8062 63E4                        i2l8064 63F0                        i2l8074 6426  
                      i2l8066 63F6                        i2l8094 61B2                        _RXB0D0 000F66  
                      _RXB0D1 000F67                        _RXB0D2 000F68                        _RXB0D3 000F69  
                      _RXB0D4 000F6A                        _RXB1D0 000F56                        _RXB0D5 000F6B  
                      _RXB1D1 000F57                        _RXB0D6 000F6C                        _RXB1D2 000F58  
                      _RXB0D7 000F6D                        _RXB1D3 000F59                        _RXB1D4 000F5A  
                      _RXB1D5 000F5B                        _RXB1D6 000F5C                        _RXB1D7 000F5D  
                      _TXB0D0 000F46                        _TXB0D1 000F47                        _TXB0D2 000F48  
                      _TXB0D3 000F49                        _TXB1D0 000F36                        _TXB0D4 000F4A  
                      _TXB1D1 000F37                        _TXB0D5 000F4B                        _TXB1D2 000F38  
                      _TXB0D6 000F4C                        _TXB1D3 000F39                        _TXB0D7 000F4D  
                      _TXB2D0 000F26                        _TXB1D4 000F3A                        _TXB2D1 000F27  
                      _TXB1D5 000F3B                        _TXB2D2 000F28                        _TXB1D6 000F3C  
                      _TXB2D3 000F29                        _TXB1D7 000F3D                        _TXB2D4 000F2A  
                      _TXB2D5 000F2B                        _TXB2D6 000F2C                        _TXB2D7 000F2D  
          CANsendMessage@data 007B              __end_of_can_send 602C            CANsendMessage@tamp 0083  
            __end_of___xxtofl 56C4             __end_of_ISR_Bassa 0332              __end_of_delay_ms 65BC  
       __size_of_CANSetFilter 0B06                __CFG_XINST$OFF 000000                        ___flge 5A50  
             _data_correction 0163                     ??___fladd 00B1                        ___wmul 65F4  
                   ??___fldiv 007F                     ??___flneg 00C1                __CFG_STVREN$ON 000000  
                   ??___flmul 0098                     ??___flsub 00D7                     ??___fltol 00C5  
                   ??___lwdiv 0064                  ??_CANSetMask 007C                        _raggio 01EC  
                      clear_0 6350                        clear_1 635C                        clear_2 636C  
                   ??_delay_s 007F                        floor@i 0191                        floor@x 00D3  
             __CFG_BOREN$BOHW 000000       __size_ofi1_CANisTxReady 001E                  __pdataCOMRAM 0053  
                      sin@sgn 01AF                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                  _CANSetFilter 0D52  
                  ___flge@ff1 00C5                    ___flge@ff2 00C9                  ___xxtofl@arg 018D  
                ___xxtofl@exp 018C                  ___xxtofl@val 00CB                    __accesstop 0060  
     __end_of__initialization 63BC            __end_of_CANSetMask 4A10               __CFG_PBADEN$OFF 000000  
                  ___flneg@f1 00BD                 ?_park_routine 002A                  eval_poly@res 00C9  
               ___rparam_used 000000                    ___fltol@f1 00C1                __pcstackCOMRAM 002A  
                   ?_ISR_Alta 002A                  __pidataBANK0 66E4                  __pidataBANK1 66DA  
               __end_of_floor 5D04                 __end_of_frexp 634A              ??_configurations 0091  
       CANSetFilter@numBuffer 0080                  _actual_speed 0015         __size_of_CANisTxReady 0024  
                     ??_floor 00D7                       ??_frexp 007D      __end_of_CANOperationMode 66DA  
                  __pbssBANK0 00D8                    __pbssBANK1 0100               _sensor_distance 0001  
          __size_of_eval_poly 0118             ?i1_CANsendMessage 002A                    _data_brake 015B  
              ??_park_routine 01DC       __size_of_CANsendMessage 078C                    _data_speed 016B  
                  _activation 0288            ??i1_CANsendMessage 0032      __size_of_can_interpreter 0052  
          __size_of_parallelo 026A          __size_of_park_search 01C6             _old_alignment_gap 013C  
                  ??_ISR_Alta 0067                       ?___flge 00C5                       ?___wmul 0077  
                     _CANSTAT 000F6E                  _CANisTxReady 6682                       _BRGCON1 000F70  
                     _BRGCON2 000F71                       _BRGCON3 000F72                     ?_can_send 002A  
                   ?___xxtofl 00CB        __size_of_CANInitialize 01C6                     ?_delay_ms 007D  
                     _RXB0DLC 000F65                       _RXB1DLC 000F55                       _RXB0CON 000F60  
                     _RXB1CON 000F50                       _TXB0DLC 000F45                       _TXB1DLC 000F35  
                     _TXB2DLC 000F25           CANsendMessage@flags 007E                       __Hparam 0000  
                  _left_speed 001D                       __Lparam 0000              delay_ms@value_ms 007D  
             __size_of___flge 0190                    _matematica 2674                       ___fladd 310A  
                     ___fldiv 42B2                       ___flneg 65BC                       ___flmul 35B2  
                     ___flsub 64FC                       ___fltol 5E1C               __size_of___wmul 0036  
                     ___lwdiv 63C6                  __psmallconst 0D00          CANInitialize@propSeg 008E  
                     __pcinit 634A             __end_of_eval_poly 5E1C                       _delay_s 6656  
                     __ramtop 0D00                       __ptext0 61F0                       __ptext1 56C4  
                     __ptext2 3A58                       __ptext3 503A                       __ptext4 5F28  
                     __ptext5 1858                       __ptext6 6682                       __ptext7 662A  
                     __ptext8 2674                       __ptext9 602C                     _T0CONbits 000FD5  
              i1_CANisTxReady 66A6                       _counter 0028                    ??_can_send 0087  
                __size_of_abs 002C                  __size_of_cos 00E4               atan@val_squared 0194  
                __size_of_sin 0318                    ??___xxtofl 00CF                       atan@val 0198  
           __end_of_parallelo 52A4                    ??_delay_ms 007F                       asin@sgn 01A4  
      CANreceiveMessage@error 0034               _start_operation 0295                __pintcode_body 6110  
        end_of_initialization 63BC                     i1u1072_27 0196                       int_func 6110  
               _CANInitialize 588A                     _ISR_Bassa 0018                       postdec1 000FE5  
                     postdec2 000FDD                       postinc0 000FEE                       postinc2 000FDE  
                     sqrt@grs 0192                       sqrt@exp 0196             ??_can_interpreter 0077  
      __end_ofi1_CANisTxReady 66C4       _steering_correction_dir 0296                     _PORTBbits 000F81  
              CANSetMask@mask 0077                CANSetMask@tamp 0081                  _distance_set 0110  
              CANSetMask@type 007B          __end_of_park_routine 3EE8                   ___fladd@grs 00BC  
               ___xxtofl@sign 018B                     _TRISBbits 000F93                   ___fldiv@grs 008A  
                 ___fldiv@rem 0084                     _MUX_index 0025                    _pulse_time 001F  
     _clock_counter_reference 00E0                   ___flmul@grs 009E                _CANsendMessage 1858  
            CANInitialize@BRP 0088              CANInitialize@SJW 0087                ?_CANInitialize 0085  
         i1_CANisTxReady$2845 002A                    ?_ISR_Bassa 002A                   ?_matematica 002A  
              __end_of___flge 5BE0             __size_of_ISR_Alta 61E8                __end_of___wmul 662A  
               __pidataCOMRAM 66E2               ?i1_CANisTxReady 002A                    floor@expon 0195  
         start_initialization 634A                    eval_poly@d 00C1                    eval_poly@n 00C3  
                  eval_poly@x 00BD                   __end_of_abs 6656                   __end_of_cos 6110  
                 __end_of_sin 4D28           CANSetMask@numBuffer 0080                 _data_speed_rx 0108  
      __end_of_CANsendMessage 1FE4             ?_CANOperationMode 002A                 _data_steering 0173  
                  frexp@value 0077            ??_CANOperationMode 0077             _distance_received 028D  
  CANInitialize@FilterConfig1 008F    CANInitialize@FilterConfig2 0090           _steering_correction 0029  
                    ??___flge 00CD                      ??___wmul 007B                   __pdataBANK0 00E8  
                 __pdataBANK1 01E8              __CFG_LPT1OSC$OFF 000000     __size_ofi1_CANsendMessage 0690  
                   ___fladd@a 00AD                     ___fladd@b 00A9        CANInitialize@phaseSeg1 0085  
      CANInitialize@phaseSeg2 0086                     ___fldiv@a 007B                     ___fldiv@b 0077  
                   ___flmul@a 0094                     ___flmul@b 0090                   __pbssCOMRAM 0001  
                   ___flsub@a 019B                     ___flsub@b 0197                 __pcstackBANK0 0060  
               __pcstackBANK1 018B                   _BRGCON2bits 000F71                   _BRGCON3bits 000F72  
           __size_of_can_send 0104             __size_of___xxtofl 01CE             __size_of_delay_ms 003A  
             ?_CANsendMessage 0077           __size_of_matematica 058A               ??_CANInitialize 008A  
                   _asin$3752 01B4                     _asin$3753 01AC                     _asin$3754 01A8  
                  sin@coeff_a 0D2D                    sin@coeff_b 0D41                 ??_park_search 01B8  
               _alignment_gap 00D8            CANSetFilter@filter 0077                     _data_test 017B  
            ___lwdiv@dividend 0060                    ISR_Bassa@i 0050                   ??_ISR_Bassa 003A  
                   __pintcode 0008                      ?___fladd 00A9                      ?___fldiv 0077  
                    ?___flneg 00BD                      ?___flmul 0090                      ?___flsub 0197  
                    ?___fltol 00C1         __size_of_park_routine 0490                      ?___lwdiv 0060  
                 __pintcodelo 0018                      ?_delay_s 002A                   __smallconst 0D00  
                 _COMSTATbits 000F74                     _eval_poly 5D04                     _larghezza 01E8  
            ___lwdiv@quotient 0065                __size_of_floor 0124                __size_of_frexp 0094  
     __size_of_configurations 006C                     _parallelo 503A                  _new_distance 0291  
       CANreceiveMessage@tamp 0035                _prima_sterzata 0140                ___wmul@product 007B  
                    _LATBbits 000F8A               _can_interpreter 64AA                     atan@recip 0193  
                _park_routine 3A58  _delay_quartz_frequency_value 00E8                      _IPR3bits 000FA5  
                    _PIE3bits 000FA3                      i1u802_20 20A8                      i1u802_25 209E  
                    i1u803_20 20EE                      i1u803_25 20E4                      i1u804_25 213A  
                    i1u750_25 2F7C                      i1u830_25 259A                      i1u815_20 22D8  
                    i1u815_25 22CE                      i1u736_20 2CB6                      i1u816_20 231E  
                    i1u816_25 2314                      i1u736_26 2CB8                      i1u737_20 2CE4  
                    i1u841_24 00BC                      i1u745_25 2E6A                      i1u817_25 236A  
                    i1u841_25 00B8                      i1u737_26 2CE6                      i1u850_24 0156  
                    i1u850_25 0152                      i1u747_20 2F3E                      i1u739_25 2CFA  
                    i1u747_26 2F40                      i1u748_20 2F68                      i1u828_20 2508  
                    i1u756_25 30E0                      i1u828_25 24FE                      i1u748_26 2F6A  
                    i1u829_20 254E                      i1u829_25 2544                      _PIR3bits 000FA4  
                    _RXB0EIDH 000F63                      _RXB0EIDL 000F64                      _RXB1EIDH 000F53  
                    _RXB1EIDL 000F54                      _ISR_Alta 0008                     _set_speed 00E6  
                    _RCONbits 000FD0              __CFG_WDTPS$32768 000000                      _RXB0SIDH 000F61  
                    _RXB0SIDL 000F62                      _RXF0EIDH 000F02                      _RXB1SIDH 000F51  
                    _RXF0EIDL 000F03                      _RXB1SIDL 000F52                      _RXF1EIDH 000F06  
                    _RXF1EIDL 000F07                      _RXF2EIDH 000F0A                      _RXF2EIDL 000F0B  
                    _RXF3EIDH 000F0E                      _RXF3EIDL 000F0F                      _RXF4EIDH 000F12  
                    _RXF4EIDL 000F13                      _RXF5EIDH 000F16                      _RXF5EIDL 000F17  
                    _RXF0SIDH 000F00                      _RXF0SIDL 000F01           __end_of_park_search 588A  
                    _TXB0EIDH 000F43                      _RXF1SIDH 000F04                      _TXB0EIDL 000F44  
                    _RXF1SIDL 000F05                      _TXB1EIDH 000F33                      _RXF2SIDH 000F08  
                    _TXB1EIDL 000F34                      _RXF2SIDL 000F09                      _TXB2EIDH 000F23  
                    _RXF3SIDH 000F0C                      _TXB2EIDL 000F24                      _RXF3SIDL 000F0D  
                    _RXF4SIDH 000F10                      _RXF4SIDL 000F11                      _RXF5SIDH 000F14  
                    _RXF5SIDL 000F15                      _RXM0EIDH 000F1A                      _RXM0EIDL 000F1B  
                    _TXB0SIDH 000F41                      _RXM1EIDH 000F1E                      _TXB0SIDL 000F42  
                    _RXM1EIDL 000F1F                      _TXB1SIDH 000F31                      _TXB1SIDL 000F32  
                    _TXB2SIDH 000F21                      _TXB2SIDL 000F22                      _RXM0SIDH 000F18  
                    _RXM0SIDL 000F19                      _RXM1SIDH 000F1C                      _RXM1SIDL 000F1D  
                 _distance_dx 0019                   _distance_sx 001B                      _RXERRCNT 000F75  
                    _TXERRCNT 000F76             ___wmul@multiplier 0077                    ?_eval_poly 00BD  
         __end_ofatan@coeff_a 0D19           __end_ofatan@coeff_b 0D2D                 ?_CANSetFilter 0077  
                 _INTCON2bits 000FF1                     copy_data0 6386                    _CANCONbits 000F6F  
                  ?_parallelo 002A              _distance_average 00E2                     frexp@eptr 007B  
                    __Hparam0 0000                      __Lparam0 0000                  _RXB0SIDLbits 000F62  
                _RXB1SIDLbits 000F52              ??i1_CANisTxReady 002A                  ??_matematica 00D7  
               _request_sent1 0294              __size_of___fladd 04A8                    _CANSetMask 4672  
            __size_of___fldiv 03C0              __size_of___flneg 0038              __size_of___flmul 04A6  
            __size_of___flsub 0048              __size_of___fltol 010C              i1_CANsendMessage 1FE4  
                    _cos$3755 01BC              __size_of___lwdiv 0078              __size_of_delay_s 002C  
                    _can_send 5F28                      ___xxtofl 54F6                  _RXF0SIDLbits 000F01  
                    _delay_ms 6582               ___lwdiv@divisor 0062                  _RXF1SIDLbits 000F05  
             ___lwdiv@counter 0064         i1CANsendMessage@flags 0031                ??_CANSetFilter 007C  
                    __ptext10 4A10                      __ptext11 5BE0                      __ptext20 65BC  
                    __ptext12 62B6                      __ptext21 5D04                      __ptext13 54F6  
                    __ptext30 588A                      __ptext22 35B2                      __ptext14 5E1C  
                    __ptext31 4672                      __ptext23 310A                      __ptext15 64FC  
                    __ptext40 63C6                      __ptext32 0D52                      __ptext24 5A50  
                    __ptext16 4D28                      __ptext33 66C4                      __ptext25 42B2  
                    __ptext17 3EE8                      __ptext34 64AA                      __ptext26 6656  
                    __ptext18 52A4                      __ptext27 6582                      __ptext19 6544  
                    __ptext36 1FE4                      __ptext28 65F4                      __ptext37 66A6  
                    __ptext29 643E                      __ptext38 2BFE                  _RXF2SIDLbits 000F09  
                    _sin$3756 01A7       __end_of_can_interpreter 64FC                  _RXF3SIDLbits 000F0D  
                    _distance 0017            __end_of_matematica 2BFE                  _RXF4SIDLbits 000F11  
                _RXF5SIDLbits 000F15      CANsendMessage@dataLength 007D                 __size_of_fabs 003E  
               __size_of_atan 0252                 __size_of_asin 0312                 __size_of_main 00C6  
               __size_of_sqrt 03CA                   _park_search 56C4          CANreceiveMessage@msg 002A  
                _TXB0SIDLbits 000F42                  _TXB1SIDLbits 000F32                  _TXB2SIDLbits 000F22  
                    int$flags 0055     __size_of_CANOperationMode 0016                 ?_CANisTxReady 002A  
                 atan@coeff_a 0D01                   atan@coeff_b 0D19                   _RXB0DLCbits 000F65  
                 _RXB1DLCbits 000F55                  _RXM0SIDLbits 000F19                   _RXB0CONbits 000F60  
                 _RXB1CONbits 000F50             _CANreceiveMessage 2BFE                  _RXM1SIDLbits 000F1D  
                  _INTCONbits 000FF2                   ??_eval_poly 00C5              ??_CANsendMessage 007F  
  i1CANsendMessage@dataLength 0030            ?_CANreceiveMessage 002A                  _request_sent 0293  
              _configurations 643E                     sqrt@tfrac 018D      CANsendMessage@identifier 0077  
                 ??_parallelo 00D5                      intlevel1 0000                      intlevel2 0000  
            CANSetFilter@tamp 0081              CANSetFilter@type 007B           ??_CANreceiveMessage 002C  
        i1CANsendMessage@data 002E          i1CANsendMessage@tamp 0036                   _TXB0DLCbits 000F45  
                 _right_speed 0021                   _TXB1DLCbits 000F35                   _TXB0CONbits 000F40  
                 _TXB2DLCbits 000F25                   _TXB1CONbits 000F30                   _TXB2CONbits 000F20  
        CANOperationMode@mode 0077                   ?_CANSetMask 0077                ??_CANisTxReady 0077  
              _distance_error 028C               _matematica$3750 01D0               _matematica$3751 01D4  
             _matematica$3745 01C0               _matematica$3746 01C4               _matematica$3747 01C8  
             _matematica$3748 01CC               _matematica$3749 01D8     __end_of_CANreceiveMessage 310A  
                    sqrt@frac 019C                      sqrt@sign 018B                      sqrt@root 0198  
  i1CANsendMessage@identifier 002A                   _timerValue2 0023                    _TMR3H_temp 0026  
      __end_of_configurations 64AA                    _TMR3L_temp 0027                 ___fladd@signs 00B9  
               _distance_wait 028F              ?_can_interpreter 002A                  ___fladd@aexp 00BA  
          _old_dir_correction 0292                  ___fladd@bexp 00BB         __end_of_CANInitialize 5A50  
       _sensor_distance_short 0183           _sensor_distance_old 0118  
