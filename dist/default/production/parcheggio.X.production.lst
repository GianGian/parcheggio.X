

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Apr 18 18:19:23 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2685
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    50                           	psect	param0,global,class=BANK0,space=1,delta=1
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52  0000                     
    53                           	psect	idataCOMRAM
    54  004DF6                     __pidataCOMRAM:
    55                           	opt stack 0
    56                           
    57                           ;initializer for _delay_quartz_frequency_value
    58  004DF6  14                 	db	20
    59                           
    60                           	psect	idataBANK0
    61  004DF4                     __pidataBANK0:
    62                           	opt stack 0
    63                           
    64                           ;initializer for _spazio_parcheggio
    65  004DF4  0064               	dw	100
    66                           
    67                           	psect	smallconst
    68  000D00                     __psmallconst:
    69                           	opt stack 0
    70  000D00  00                 	db	0
    71  000D01                     atan@coeff_a:
    72                           	opt stack 0
    73  000D01  3C06               	dw	15366
    74  000D03  4204               	dw	16900
    75  000D05  9F7D               	dw	40829
    76  000D07  426A               	dw	17002
    77  000D09  905C               	dw	36956
    78  000D0B  4201               	dw	16897
    79  000D0D  4D60               	dw	19808
    80  000D0F  40BB               	dw	16571
    81  000D11  EC51               	dw	60497
    82  000D13  3E47               	dw	15943
    83  000D15  8DDE               	dw	36318
    84  000D17  BB1F               	dw	47903
    85  000D19                     __end_ofatan@coeff_a:
    86                           	opt stack 0
    87  000D19                     atan@coeff_b:
    88                           	opt stack 0
    89  000D19  3C06               	dw	15366
    90  000D1B  4204               	dw	16900
    91  000D1D  59C0               	dw	22976
    92  000D1F  428B               	dw	17035
    93  000D21  0474               	dw	1140
    94  000D23  4244               	dw	16964
    95  000D25  9BF9               	dw	39929
    96  000D27  414F               	dw	16719
    97  000D29  0000               	dw	0
    98  000D2B  3F80               	dw	16256
    99  000D2D                     __end_ofatan@coeff_b:
   100                           	opt stack 0
   101  0000                     _RXB1CON	set	3920
   102  0000                     _RXB1CONbits	set	3920
   103  0000                     _RXB1D0	set	3926
   104  0000                     _RXB1D1	set	3927
   105  0000                     _RXB1D2	set	3928
   106  0000                     _RXB1D3	set	3929
   107  0000                     _RXB1D4	set	3930
   108  0000                     _RXB1D5	set	3931
   109  0000                     _RXB1D6	set	3932
   110  0000                     _RXB1D7	set	3933
   111  0000                     _RXB1DLC	set	3925
   112  0000                     _RXB1DLCbits	set	3925
   113  0000                     _RXB1EIDH	set	3923
   114  0000                     _RXB1EIDL	set	3924
   115  0000                     _RXB1SIDH	set	3921
   116  0000                     _RXB1SIDL	set	3922
   117  0000                     _RXB1SIDLbits	set	3922
   118  0000                     _RXF0EIDH	set	3842
   119  0000                     _RXF0EIDL	set	3843
   120  0000                     _RXF0SIDH	set	3840
   121  0000                     _RXF0SIDL	set	3841
   122  0000                     _RXF0SIDLbits	set	3841
   123  0000                     _RXF1EIDH	set	3846
   124  0000                     _RXF1EIDL	set	3847
   125  0000                     _RXF1SIDH	set	3844
   126  0000                     _RXF1SIDL	set	3845
   127  0000                     _RXF1SIDLbits	set	3845
   128  0000                     _RXF2EIDH	set	3850
   129  0000                     _RXF2EIDL	set	3851
   130  0000                     _RXF2SIDH	set	3848
   131  0000                     _RXF2SIDL	set	3849
   132  0000                     _RXF2SIDLbits	set	3849
   133  0000                     _RXF3EIDH	set	3854
   134  0000                     _RXF3EIDL	set	3855
   135  0000                     _RXF3SIDH	set	3852
   136  0000                     _RXF3SIDL	set	3853
   137  0000                     _RXF3SIDLbits	set	3853
   138  0000                     _RXF4EIDH	set	3858
   139  0000                     _RXF4EIDL	set	3859
   140  0000                     _RXF4SIDH	set	3856
   141  0000                     _RXF4SIDL	set	3857
   142  0000                     _RXF4SIDLbits	set	3857
   143  0000                     _RXF5EIDH	set	3862
   144  0000                     _RXF5EIDL	set	3863
   145  0000                     _RXF5SIDH	set	3860
   146  0000                     _RXF5SIDL	set	3861
   147  0000                     _RXF5SIDLbits	set	3861
   148  0000                     _RXM0EIDH	set	3866
   149  0000                     _RXM0EIDL	set	3867
   150  0000                     _RXM0SIDH	set	3864
   151  0000                     _RXM0SIDL	set	3865
   152  0000                     _RXM0SIDLbits	set	3865
   153  0000                     _RXM1EIDH	set	3870
   154  0000                     _RXM1EIDL	set	3871
   155  0000                     _RXM1SIDH	set	3868
   156  0000                     _RXM1SIDL	set	3869
   157  0000                     _RXM1SIDLbits	set	3869
   158  0000                     _TXB0CONbits	set	3904
   159  0000                     _TXB0D0	set	3910
   160  0000                     _TXB0D1	set	3911
   161  0000                     _TXB0D2	set	3912
   162  0000                     _TXB0D3	set	3913
   163  0000                     _TXB0D4	set	3914
   164  0000                     _TXB0D5	set	3915
   165  0000                     _TXB0D6	set	3916
   166  0000                     _TXB0D7	set	3917
   167  0000                     _TXB0DLC	set	3909
   168  0000                     _TXB0DLCbits	set	3909
   169  0000                     _TXB0EIDH	set	3907
   170  0000                     _TXB0EIDL	set	3908
   171  0000                     _TXB0SIDH	set	3905
   172  0000                     _TXB0SIDL	set	3906
   173  0000                     _TXB0SIDLbits	set	3906
   174  0000                     _TXB1CONbits	set	3888
   175  0000                     _TXB1D0	set	3894
   176  0000                     _TXB1D1	set	3895
   177  0000                     _TXB1D2	set	3896
   178  0000                     _TXB1D3	set	3897
   179  0000                     _TXB1D4	set	3898
   180  0000                     _TXB1D5	set	3899
   181  0000                     _TXB1D6	set	3900
   182  0000                     _TXB1D7	set	3901
   183  0000                     _TXB1DLC	set	3893
   184  0000                     _TXB1DLCbits	set	3893
   185  0000                     _TXB1EIDH	set	3891
   186  0000                     _TXB1EIDL	set	3892
   187  0000                     _TXB1SIDH	set	3889
   188  0000                     _TXB1SIDL	set	3890
   189  0000                     _TXB1SIDLbits	set	3890
   190  0000                     _TXB2CONbits	set	3872
   191  0000                     _TXB2D0	set	3878
   192  0000                     _TXB2D1	set	3879
   193  0000                     _TXB2D2	set	3880
   194  0000                     _TXB2D3	set	3881
   195  0000                     _TXB2D4	set	3882
   196  0000                     _TXB2D5	set	3883
   197  0000                     _TXB2D6	set	3884
   198  0000                     _TXB2D7	set	3885
   199  0000                     _TXB2DLC	set	3877
   200  0000                     _TXB2DLCbits	set	3877
   201  0000                     _TXB2EIDH	set	3875
   202  0000                     _TXB2EIDL	set	3876
   203  0000                     _TXB2SIDH	set	3873
   204  0000                     _TXB2SIDL	set	3874
   205  0000                     _TXB2SIDLbits	set	3874
   206  0000                     _ADCON1	set	4033
   207  0000                     _BRGCON1	set	3952
   208  0000                     _BRGCON2	set	3953
   209  0000                     _BRGCON2bits	set	3953
   210  0000                     _BRGCON3	set	3954
   211  0000                     _BRGCON3bits	set	3954
   212  0000                     _CANCON	set	3951
   213  0000                     _CANCONbits	set	3951
   214  0000                     _CANSTAT	set	3950
   215  0000                     _COMSTATbits	set	3956
   216  0000                     _INTCON2bits	set	4081
   217  0000                     _INTCONbits	set	4082
   218  0000                     _IPR3bits	set	4005
   219  0000                     _LATA	set	3977
   220  0000                     _LATB	set	3978
   221  0000                     _LATBbits	set	3978
   222  0000                     _LATC	set	3979
   223  0000                     _PIE3bits	set	4003
   224  0000                     _PIR3bits	set	4004
   225  0000                     _PORTA	set	3968
   226  0000                     _PORTBbits	set	3969
   227  0000                     _RCONbits	set	4048
   228  0000                     _RXB0CON	set	3936
   229  0000                     _RXB0CONbits	set	3936
   230  0000                     _RXB0D0	set	3942
   231  0000                     _RXB0D1	set	3943
   232  0000                     _RXB0D2	set	3944
   233  0000                     _RXB0D3	set	3945
   234  0000                     _RXB0D4	set	3946
   235  0000                     _RXB0D5	set	3947
   236  0000                     _RXB0D6	set	3948
   237  0000                     _RXB0D7	set	3949
   238  0000                     _RXB0DLC	set	3941
   239  0000                     _RXB0DLCbits	set	3941
   240  0000                     _RXB0EIDH	set	3939
   241  0000                     _RXB0EIDL	set	3940
   242  0000                     _RXB0SIDH	set	3937
   243  0000                     _RXB0SIDL	set	3938
   244  0000                     _RXB0SIDLbits	set	3938
   245  0000                     _RXERRCNT	set	3957
   246  0000                     _T0CON	set	4053
   247  0000                     _T3CON	set	4017
   248  0000                     _TMR0H	set	4055
   249  0000                     _TMR0L	set	4054
   250  0000                     _TMR3H	set	4019
   251  0000                     _TMR3L	set	4018
   252  0000                     _TRISA	set	3986
   253  0000                     _TRISB	set	3987
   254  0000                     _TRISBbits	set	3987
   255  0000                     _TRISC	set	3988
   256  0000                     _TXERRCNT	set	3958
   257                           
   258                           ; #config settings
   259  000D2D  00                 	db	0	; dummy byte at the end
   260  0000                     
   261                           	psect	cinit
   262  004BFC                     __pcinit:
   263                           	opt stack 0
   264  004BFC                     start_initialization:
   265                           	opt stack 0
   266  004BFC                     __initialization:
   267                           	opt stack 0
   268                           
   269                           ; Clear objects allocated to BANK1 (73 bytes)
   270  004BFC  EE01  F000         	lfsr	0,__pbssBANK1
   271  004C00  0E49               	movlw	73
   272  004C02                     clear_0:
   273  004C02  6AEE               	clrf	postinc0,c
   274  004C04  06E8               	decf	wreg,f,c
   275  004C06  E1FD               	bnz	clear_0
   276                           
   277                           ; Clear objects allocated to BANK0 (21 bytes)
   278  004C08  EE00  F0D1         	lfsr	0,__pbssBANK0
   279  004C0C  0E15               	movlw	21
   280  004C0E                     clear_1:
   281  004C0E  6AEE               	clrf	postinc0,c
   282  004C10  06E8               	decf	wreg,f,c
   283  004C12  E1FD               	bnz	clear_1
   284                           
   285                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   286  004C14  6A45               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   287                           
   288                           ; Clear objects allocated to COMRAM (33 bytes)
   289  004C16  EE00  F024         	lfsr	0,__pbssCOMRAM
   290  004C1A  0E21               	movlw	33
   291  004C1C                     clear_2:
   292  004C1C  6AEE               	clrf	postinc0,c
   293  004C1E  06E8               	decf	wreg,f,c
   294  004C20  E1FD               	bnz	clear_2
   295                           
   296                           ; Initialize objects allocated to BANK0 (2 bytes)
   297                           ; load TBLPTR registers with __pidataBANK0
   298  004C22  0EF4               	movlw	low __pidataBANK0
   299  004C24  6EF6               	movwf	tblptrl,c
   300  004C26  0E4D               	movlw	high __pidataBANK0
   301  004C28  6EF7               	movwf	tblptrh,c
   302  004C2A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   303  004C2C  6EF8               	movwf	tblptru,c
   304  004C2E  0009               	tblrd		*+	;fetch initializer
   305  004C30  CFF5 F0E6          	movff	tablat,__pdataBANK0
   306  004C34  0009               	tblrd		*+	;fetch initializer
   307  004C36  CFF5 F0E7          	movff	tablat,__pdataBANK0+1
   308                           
   309                           ; Initialize objects allocated to COMRAM (1 bytes)
   310                           ; load TBLPTR registers with __pidataCOMRAM
   311  004C3A  0EF6               	movlw	low __pidataCOMRAM
   312  004C3C  6EF6               	movwf	tblptrl,c
   313  004C3E  0E4D               	movlw	high __pidataCOMRAM
   314  004C40  6EF7               	movwf	tblptrh,c
   315  004C42  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   316  004C44  6EF8               	movwf	tblptru,c
   317  004C46  0009               	tblrd		*+	;fetch initializer
   318  004C48  CFF5 F046          	movff	tablat,__pdataCOMRAM
   319  004C4C                     end_of_initialization:
   320                           	opt stack 0
   321  004C4C                     __end_of__initialization:
   322                           	opt stack 0
   323  004C4C  9047               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   324  004C4E  9247               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   325  004C50  0100               	movlb	0
   326  004C52  EF55  F026         	goto	_main	;jump to C main() function
   327                           tblptru	equ	0xFF8
   328                           tblptrh	equ	0xFF7
   329                           tblptrl	equ	0xFF6
   330                           tablat	equ	0xFF5
   331                           postinc0	equ	0xFEE
   332                           wreg	equ	0xFE8
   333                           
   334                           	psect	bitbssCOMRAM
   335  000228                     __pbitbssCOMRAM:
   336                           	opt stack 0
   337  000228                     _activation:
   338                           	opt stack 0
   339  000228                     	ds	1
   340  000229                     _dir:
   341                           	opt stack 0
   342  000229                     	ds	1
   343  00022A                     _distance_error:
   344                           	opt stack 0
   345  00022A                     	ds	1
   346  00022B                     _distance_received:
   347                           	opt stack 0
   348  00022B                     	ds	1
   349  00022C                     _distance_wait:
   350                           	opt stack 0
   351  00022C                     	ds	1
   352  00022D                     _request_sent:
   353                           	opt stack 0
   354  00022D                     	ds	1
   355  00022E                     _start_operation:
   356                           	opt stack 0
   357  00022E                     	ds	1
   358  00022F                     _steering_correction_dir:
   359                           	opt stack 0
   360  00022F                     	ds	1
   361                           tblptru	equ	0xFF8
   362                           tblptrh	equ	0xFF7
   363                           tblptrl	equ	0xFF6
   364                           tablat	equ	0xFF5
   365                           postinc0	equ	0xFEE
   366                           wreg	equ	0xFE8
   367                           
   368                           	psect	bssCOMRAM
   369  000024                     __pbssCOMRAM:
   370                           	opt stack 0
   371  000024                     _sensor_distance:
   372                           	opt stack 0
   373  000024                     	ds	16
   374  000034                     _clock_counter_reference:
   375                           	opt stack 0
   376  000034                     	ds	2
   377  000036                     _distance_dx:
   378                           	opt stack 0
   379  000036                     	ds	2
   380  000038                     _distance_sx:
   381                           	opt stack 0
   382  000038                     	ds	2
   383  00003A                     _left_speed:
   384                           	opt stack 0
   385  00003A                     	ds	2
   386  00003C                     _pulse_time:
   387                           	opt stack 0
   388  00003C                     	ds	2
   389  00003E                     _right_speed:
   390                           	opt stack 0
   391  00003E                     	ds	2
   392  000040                     _timerValue2:
   393                           	opt stack 0
   394  000040                     	ds	2
   395  000042                     _MUX_index:
   396                           	opt stack 0
   397  000042                     	ds	1
   398  000043                     _asus:
   399                           	opt stack 0
   400  000043                     	ds	1
   401  000044                     _gianni:
   402                           	opt stack 0
   403  000044                     	ds	1
   404                           tblptru	equ	0xFF8
   405                           tblptrh	equ	0xFF7
   406                           tblptrl	equ	0xFF6
   407                           tablat	equ	0xFF5
   408                           postinc0	equ	0xFEE
   409                           wreg	equ	0xFE8
   410                           
   411                           	psect	dataCOMRAM
   412  000046                     __pdataCOMRAM:
   413                           	opt stack 0
   414  000046                     _delay_quartz_frequency_value:
   415                           	opt stack 0
   416  000046                     	ds	1
   417                           tblptru	equ	0xFF8
   418                           tblptrh	equ	0xFF7
   419                           tblptrl	equ	0xFF6
   420                           tablat	equ	0xFF5
   421                           postinc0	equ	0xFEE
   422                           wreg	equ	0xFE8
   423                           
   424                           	psect	bssBANK0
   425  0000D1                     __pbssBANK0:
   426                           	opt stack 0
   427  0000D1                     _alignment_gap:
   428                           	opt stack 0
   429  0000D1                     	ds	4
   430  0000D5                     _x:
   431                           	opt stack 0
   432  0000D5                     	ds	4
   433  0000D9                     _z:
   434                           	opt stack 0
   435  0000D9                     	ds	4
   436  0000DD                     _actual_speed:
   437                           	opt stack 0
   438  0000DD                     	ds	2
   439  0000DF                     _distance:
   440                           	opt stack 0
   441  0000DF                     	ds	2
   442  0000E1                     _distance_average:
   443                           	opt stack 0
   444  0000E1                     	ds	2
   445  0000E3                     _set_speed:
   446                           	opt stack 0
   447  0000E3                     	ds	2
   448  0000E5                     _steering_correction:
   449                           	opt stack 0
   450  0000E5                     	ds	1
   451                           tblptru	equ	0xFF8
   452                           tblptrh	equ	0xFF7
   453                           tblptrl	equ	0xFF6
   454                           tablat	equ	0xFF5
   455                           postinc0	equ	0xFEE
   456                           wreg	equ	0xFE8
   457                           
   458                           	psect	dataBANK0
   459  0000E6                     __pdataBANK0:
   460                           	opt stack 0
   461  0000E6                     _spazio_parcheggio:
   462                           	opt stack 0
   463  0000E6                     	ds	2
   464                           tblptru	equ	0xFF8
   465                           tblptrh	equ	0xFF7
   466                           tblptrl	equ	0xFF6
   467                           tablat	equ	0xFF5
   468                           postinc0	equ	0xFEE
   469                           wreg	equ	0xFE8
   470                           
   471                           	psect	bssBANK1
   472  000100                     __pbssBANK1:
   473                           	opt stack 0
   474  000100                     _MUX_select:
   475                           	opt stack 0
   476  000100                     	ds	8
   477  000108                     _data_speed_rx:
   478                           	opt stack 0
   479  000108                     	ds	8
   480  000110                     _distance_set:
   481                           	opt stack 0
   482  000110                     	ds	8
   483  000118                     _errno:
   484                           	opt stack 0
   485  000118                     	ds	2
   486  00011A                     _msg:
   487                           	opt stack 0
   488  00011A                     	ds	15
   489  000129                     _data:
   490                           	opt stack 0
   491  000129                     	ds	8
   492  000131                     _data_brake:
   493                           	opt stack 0
   494  000131                     	ds	8
   495  000139                     _data_speed:
   496                           	opt stack 0
   497  000139                     	ds	8
   498  000141                     _data_steering:
   499                           	opt stack 0
   500  000141                     	ds	8
   501                           tblptru	equ	0xFF8
   502                           tblptrh	equ	0xFF7
   503                           tblptrl	equ	0xFF6
   504                           tablat	equ	0xFF5
   505                           postinc0	equ	0xFEE
   506                           wreg	equ	0xFE8
   507                           
   508                           	psect	cstackBANK1
   509  000149                     __pcstackBANK1:
   510                           	opt stack 0
   511  000149                     ?_atan:
   512                           	opt stack 0
   513  000149                     sqrt@sign:
   514                           	opt stack 0
   515  000149                     atan@f:
   516                           	opt stack 0
   517                           
   518                           ; 4 bytes @ 0x0
   519  000149                     	ds	1
   520  00014A                     sqrt@i:
   521                           	opt stack 0
   522                           
   523                           ; 1 bytes @ 0x1
   524  00014A                     	ds	1
   525  00014B                     sqrt@tfrac:
   526                           	opt stack 0
   527                           
   528                           ; 4 bytes @ 0x2
   529  00014B                     	ds	2
   530  00014D                     atan@y:
   531                           	opt stack 0
   532                           
   533                           ; 4 bytes @ 0x4
   534  00014D                     	ds	2
   535  00014F                     sqrt@p:
   536                           	opt stack 0
   537                           
   538                           ; 1 bytes @ 0x6
   539  00014F                     	ds	1
   540  000150                     sqrt@grs:
   541                           	opt stack 0
   542                           
   543                           ; 4 bytes @ 0x7
   544  000150                     	ds	1
   545  000151                     atan@x:
   546                           	opt stack 0
   547                           
   548                           ; 4 bytes @ 0x8
   549  000151                     	ds	3
   550  000154                     sqrt@exp:
   551                           	opt stack 0
   552                           
   553                           ; 2 bytes @ 0xB
   554  000154                     	ds	1
   555  000155                     atan@recip:
   556                           	opt stack 0
   557                           
   558                           ; 1 bytes @ 0xC
   559  000155                     	ds	1
   560  000156                     atan@val_squared:
   561                           	opt stack 0
   562  000156                     sqrt@root:
   563                           	opt stack 0
   564                           
   565                           ; 4 bytes @ 0xD
   566  000156                     	ds	4
   567  00015A                     atan@val:
   568                           	opt stack 0
   569  00015A                     sqrt@frac:
   570                           	opt stack 0
   571                           
   572                           ; 4 bytes @ 0x11
   573  00015A                     	ds	4
   574  00015E                     ?_asin:
   575                           	opt stack 0
   576  00015E                     asin@x:
   577                           	opt stack 0
   578                           
   579                           ; 4 bytes @ 0x15
   580  00015E                     	ds	4
   581  000162                     asin@sgn:
   582                           	opt stack 0
   583                           
   584                           ; 4 bytes @ 0x19
   585  000162                     	ds	4
   586  000166                     _asin$3619:
   587                           	opt stack 0
   588                           
   589                           ; 4 bytes @ 0x1D
   590  000166                     	ds	4
   591  00016A                     _asin$3618:
   592                           	opt stack 0
   593                           
   594                           ; 4 bytes @ 0x21
   595  00016A                     	ds	4
   596  00016E                     asin@y:
   597                           	opt stack 0
   598                           
   599                           ; 4 bytes @ 0x25
   600  00016E                     	ds	4
   601  000172                     _asin$3617:
   602                           	opt stack 0
   603                           
   604                           ; 4 bytes @ 0x29
   605  000172                     	ds	4
   606  000176                     ??_parallelo:
   607                           
   608                           ; 0 bytes @ 0x2D
   609  000176                     	ds	2
   610                           tblptru	equ	0xFF8
   611                           tblptrh	equ	0xFF7
   612                           tblptrl	equ	0xFF6
   613                           tablat	equ	0xFF5
   614                           postinc0	equ	0xFEE
   615                           wreg	equ	0xFE8
   616                           
   617                           	psect	cstackBANK0
   618  000060                     __pcstackBANK0:
   619                           	opt stack 0
   620  000060                     ?___lwdiv:
   621                           	opt stack 0
   622  000060                     ___lwdiv@dividend:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0x0
   626  000060                     	ds	2
   627  000062                     ___lwdiv@divisor:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0x2
   631  000062                     	ds	2
   632  000064                     ___lwdiv@counter:
   633                           	opt stack 0
   634                           
   635                           ; 1 bytes @ 0x4
   636  000064                     	ds	1
   637  000065                     ___lwdiv@quotient:
   638                           	opt stack 0
   639                           
   640                           ; 2 bytes @ 0x5
   641  000065                     	ds	2
   642  000067                     ??_ISR_Alta:
   643                           
   644                           ; 0 bytes @ 0x7
   645  000067                     	ds	16
   646  000077                     ??_can_interpreter:
   647  000077                     ?_abs:
   648                           	opt stack 0
   649  000077                     ?___fldiv:
   650                           	opt stack 0
   651  000077                     CANOperationMode@mode:
   652                           	opt stack 0
   653  000077                     _CANisTxReady$2808:
   654                           	opt stack 0
   655  000077                     abs@a:
   656                           	opt stack 0
   657  000077                     CANsendMessage@identifier:
   658                           	opt stack 0
   659  000077                     CANSetMask@mask:
   660                           	opt stack 0
   661  000077                     CANSetFilter@filter:
   662                           	opt stack 0
   663  000077                     ___fldiv@b:
   664                           	opt stack 0
   665                           
   666                           ; 4 bytes @ 0x17
   667  000077                     	ds	2
   668  000079                     ??_abs:
   669                           
   670                           ; 0 bytes @ 0x19
   671  000079                     	ds	2
   672  00007B                     ?___xxtofl:
   673                           	opt stack 0
   674  00007B                     CANSetMask@type:
   675                           	opt stack 0
   676  00007B                     CANSetFilter@type:
   677                           	opt stack 0
   678  00007B                     CANsendMessage@data:
   679                           	opt stack 0
   680  00007B                     ___fldiv@a:
   681                           	opt stack 0
   682  00007B                     ___xxtofl@val:
   683                           	opt stack 0
   684                           
   685                           ; 4 bytes @ 0x1B
   686  00007B                     	ds	1
   687  00007C                     ??_CANSetMask:
   688  00007C                     ??_CANSetFilter:
   689                           
   690                           ; 0 bytes @ 0x1C
   691  00007C                     	ds	1
   692  00007D                     CANsendMessage@dataLength:
   693                           	opt stack 0
   694                           
   695                           ; 1 bytes @ 0x1D
   696  00007D                     	ds	1
   697  00007E                     CANsendMessage@flags:
   698                           	opt stack 0
   699                           
   700                           ; 1 bytes @ 0x1E
   701  00007E                     	ds	1
   702  00007F                     ??___fldiv:
   703  00007F                     ??_CANsendMessage:
   704  00007F                     ??___xxtofl:
   705                           
   706                           ; 0 bytes @ 0x1F
   707  00007F                     	ds	1
   708  000080                     CANSetMask@numBuffer:
   709                           	opt stack 0
   710  000080                     CANSetFilter@numBuffer:
   711                           	opt stack 0
   712                           
   713                           ; 1 bytes @ 0x20
   714  000080                     	ds	1
   715  000081                     CANSetMask@tamp:
   716                           	opt stack 0
   717  000081                     CANSetFilter@tamp:
   718                           	opt stack 0
   719                           
   720                           ; 4 bytes @ 0x21
   721  000081                     	ds	2
   722  000083                     ___fldiv@sign:
   723                           	opt stack 0
   724  000083                     ___xxtofl@sign:
   725                           	opt stack 0
   726  000083                     CANsendMessage@tamp:
   727                           	opt stack 0
   728                           
   729                           ; 4 bytes @ 0x23
   730  000083                     	ds	1
   731  000084                     ___xxtofl@exp:
   732                           	opt stack 0
   733  000084                     ___fldiv@rem:
   734                           	opt stack 0
   735                           
   736                           ; 4 bytes @ 0x24
   737  000084                     	ds	1
   738  000085                     CANInitialize@phaseSeg1:
   739                           	opt stack 0
   740  000085                     ___xxtofl@arg:
   741                           	opt stack 0
   742                           
   743                           ; 4 bytes @ 0x25
   744  000085                     	ds	1
   745  000086                     CANInitialize@phaseSeg2:
   746                           	opt stack 0
   747                           
   748                           ; 1 bytes @ 0x26
   749  000086                     	ds	1
   750  000087                     CANInitialize@SJW:
   751                           	opt stack 0
   752                           
   753                           ; 1 bytes @ 0x27
   754  000087                     	ds	1
   755  000088                     CANInitialize@BRP:
   756                           	opt stack 0
   757  000088                     ___fldiv@new_exp:
   758                           	opt stack 0
   759                           
   760                           ; 2 bytes @ 0x28
   761  000088                     	ds	1
   762  000089                     ??_park_search:
   763  000089                     CANInitialize@flags:
   764                           	opt stack 0
   765                           
   766                           ; 1 bytes @ 0x29
   767  000089                     	ds	1
   768  00008A                     ??_CANInitialize:
   769  00008A                     ___fldiv@grs:
   770                           	opt stack 0
   771                           
   772                           ; 4 bytes @ 0x2A
   773  00008A                     	ds	4
   774  00008E                     CANInitialize@propSeg:
   775                           	opt stack 0
   776  00008E                     ___fldiv@bexp:
   777                           	opt stack 0
   778                           
   779                           ; 1 bytes @ 0x2E
   780  00008E                     	ds	1
   781  00008F                     CANInitialize@FilterConfig1:
   782                           	opt stack 0
   783  00008F                     ___fldiv@aexp:
   784                           	opt stack 0
   785                           
   786                           ; 1 bytes @ 0x2F
   787  00008F                     	ds	1
   788  000090                     ?___flmul:
   789                           	opt stack 0
   790  000090                     ?___fltol:
   791                           	opt stack 0
   792  000090                     CANInitialize@FilterConfig2:
   793                           	opt stack 0
   794  000090                     ___fltol@f1:
   795                           	opt stack 0
   796  000090                     ___flmul@b:
   797                           	opt stack 0
   798                           
   799                           ; 4 bytes @ 0x30
   800  000090                     	ds	1
   801  000091                     
   802                           ; 0 bytes @ 0x31
   803  000091                     	ds	3
   804  000094                     ??___fltol:
   805  000094                     ___flmul@a:
   806                           	opt stack 0
   807                           
   808                           ; 4 bytes @ 0x34
   809  000094                     	ds	4
   810  000098                     ??___flmul:
   811  000098                     ___fltol@sign1:
   812                           	opt stack 0
   813                           
   814                           ; 1 bytes @ 0x38
   815  000098                     	ds	1
   816  000099                     ___fltol@exp1:
   817                           	opt stack 0
   818                           
   819                           ; 1 bytes @ 0x39
   820  000099                     	ds	3
   821  00009C                     ___flmul@sign:
   822                           	opt stack 0
   823                           
   824                           ; 1 bytes @ 0x3C
   825  00009C                     	ds	1
   826  00009D                     ___flmul@aexp:
   827                           	opt stack 0
   828                           
   829                           ; 1 bytes @ 0x3D
   830  00009D                     	ds	1
   831  00009E                     ___flmul@grs:
   832                           	opt stack 0
   833                           
   834                           ; 4 bytes @ 0x3E
   835  00009E                     	ds	4
   836  0000A2                     ___flmul@bexp:
   837                           	opt stack 0
   838                           
   839                           ; 1 bytes @ 0x42
   840  0000A2                     	ds	1
   841  0000A3                     ___flmul@prod:
   842                           	opt stack 0
   843                           
   844                           ; 4 bytes @ 0x43
   845  0000A3                     	ds	4
   846  0000A7                     ___flmul@temp:
   847                           	opt stack 0
   848                           
   849                           ; 2 bytes @ 0x47
   850  0000A7                     	ds	2
   851  0000A9                     ?___flneg:
   852                           	opt stack 0
   853  0000A9                     ___flneg@f1:
   854                           	opt stack 0
   855                           
   856                           ; 4 bytes @ 0x49
   857  0000A9                     	ds	4
   858  0000AD                     ?___fladd:
   859                           	opt stack 0
   860  0000AD                     ?_fabs:
   861                           	opt stack 0
   862  0000AD                     fabs@d:
   863                           	opt stack 0
   864  0000AD                     ___fladd@b:
   865                           	opt stack 0
   866                           
   867                           ; 4 bytes @ 0x4D
   868  0000AD                     	ds	4
   869  0000B1                     ___flge@ff1:
   870                           	opt stack 0
   871  0000B1                     ___fladd@a:
   872                           	opt stack 0
   873                           
   874                           ; 4 bytes @ 0x51
   875  0000B1                     	ds	4
   876  0000B5                     ??___fladd:
   877  0000B5                     ___flge@ff2:
   878                           	opt stack 0
   879                           
   880                           ; 4 bytes @ 0x55
   881  0000B5                     	ds	4
   882  0000B9                     ??___flge:
   883                           
   884                           ; 0 bytes @ 0x59
   885  0000B9                     	ds	4
   886  0000BD                     ___fladd@signs:
   887                           	opt stack 0
   888                           
   889                           ; 1 bytes @ 0x5D
   890  0000BD                     	ds	1
   891  0000BE                     ___fladd@aexp:
   892                           	opt stack 0
   893                           
   894                           ; 1 bytes @ 0x5E
   895  0000BE                     	ds	1
   896  0000BF                     ___fladd@bexp:
   897                           	opt stack 0
   898                           
   899                           ; 1 bytes @ 0x5F
   900  0000BF                     	ds	1
   901  0000C0                     ___fladd@grs:
   902                           	opt stack 0
   903                           
   904                           ; 1 bytes @ 0x60
   905  0000C0                     	ds	1
   906  0000C1                     ?_sqrt:
   907                           	opt stack 0
   908  0000C1                     ?_eval_poly:
   909                           	opt stack 0
   910  0000C1                     eval_poly@x:
   911                           	opt stack 0
   912  0000C1                     sqrt@a:
   913                           	opt stack 0
   914                           
   915                           ; 4 bytes @ 0x61
   916  0000C1                     	ds	4
   917  0000C5                     ??_sqrt:
   918  0000C5                     eval_poly@d:
   919                           	opt stack 0
   920                           
   921                           ; 2 bytes @ 0x65
   922  0000C5                     	ds	2
   923  0000C7                     eval_poly@n:
   924                           	opt stack 0
   925                           
   926                           ; 2 bytes @ 0x67
   927  0000C7                     	ds	2
   928  0000C9                     ??_eval_poly:
   929                           
   930                           ; 0 bytes @ 0x69
   931  0000C9                     	ds	4
   932  0000CD                     eval_poly@res:
   933                           	opt stack 0
   934                           
   935                           ; 4 bytes @ 0x6D
   936  0000CD                     	ds	4
   937  0000D1                     tblptru	equ	0xFF8
   938                           tblptrh	equ	0xFF7
   939                           tblptrl	equ	0xFF6
   940                           tablat	equ	0xFF5
   941                           postinc0	equ	0xFEE
   942                           wreg	equ	0xFE8
   943                           
   944                           ; 0 bytes @ 0x71
   945                           
   946                           	psect	cstackCOMRAM
   947  000001                     __pcstackCOMRAM:
   948                           	opt stack 0
   949  000001                     CANreceiveMessage@msg:
   950                           	opt stack 0
   951                           
   952                           ; 2 bytes @ 0x0
   953  000001                     	ds	2
   954  000003                     ??_CANreceiveMessage:
   955                           
   956                           ; 0 bytes @ 0x2
   957  000003                     	ds	8
   958  00000B                     CANreceiveMessage@error:
   959                           	opt stack 0
   960                           
   961                           ; 1 bytes @ 0xA
   962  00000B                     	ds	1
   963  00000C                     CANreceiveMessage@tamp:
   964                           	opt stack 0
   965                           
   966                           ; 1 bytes @ 0xB
   967  00000C                     	ds	1
   968  00000D                     ??_ISR_Bassa:
   969                           
   970                           ; 0 bytes @ 0xC
   971  00000D                     	ds	21
   972  000022                     ISR_Bassa@gigi:
   973                           	opt stack 0
   974                           
   975                           ; 1 bytes @ 0x21
   976  000022                     	ds	1
   977  000023                     ISR_Bassa@i:
   978                           	opt stack 0
   979                           
   980                           ; 1 bytes @ 0x22
   981  000023                     	ds	1
   982                           tblptru	equ	0xFF8
   983                           tblptrh	equ	0xFF7
   984                           tblptrl	equ	0xFF6
   985                           tablat	equ	0xFF5
   986                           postinc0	equ	0xFEE
   987                           wreg	equ	0xFE8
   988                           
   989 ;;
   990 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   991 ;;
   992 ;; *************** function _main *****************
   993 ;; Defined at:
   994 ;;		line 159 in file "parcheggio.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;		None
   997 ;; Auto vars:     Size  Location     Type
   998 ;;		None
   999 ;; Return value:  Size  Location     Type
  1000 ;;		None               void
  1001 ;; Registers used:
  1002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1012 ;;Total ram usage:        0 bytes
  1013 ;; Hardware stack levels required when called:    9
  1014 ;; This function calls:
  1015 ;;		_can_interpreter
  1016 ;;		_configurazione
  1017 ;;		_parallelo
  1018 ;;		_park_routine
  1019 ;;		_park_search
  1020 ;; This function is called by:
  1021 ;;		Startup code after reset
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           	psect	text0
  1026  004CAA                     __ptext0:
  1027                           	opt stack 0
  1028  004CAA                     _main:
  1029                           	opt stack 22
  1030                           
  1031                           ;parcheggio.c: 160: configurazione();
  1032                           
  1033                           ; BSR set to: 15
  1034                           ;incstack = 0
  1035  004CAA  ECC8  F025         	call	_configurazione	;wreg free
  1036                           
  1037                           ;parcheggio.c: 161: MUX_select[0] = 0b00000000;
  1038  004CAE  0E00               	movlw	0
  1039  004CB0  0101               	movlb	1	; () banked
  1040  004CB2  6F00               	movwf	_MUX_select& (0+255),b
  1041                           
  1042                           ; BSR set to: 1
  1043                           ;parcheggio.c: 162: MUX_select[1] = 0b00000001;
  1044  004CB4  0E01               	movlw	1
  1045  004CB6  0101               	movlb	1	; () banked
  1046  004CB8  6F01               	movwf	(_MUX_select+1)& (0+255),b
  1047                           
  1048                           ; BSR set to: 1
  1049                           ;parcheggio.c: 163: MUX_select[2] = 0b00000010;
  1050  004CBA  0E02               	movlw	2
  1051  004CBC  0101               	movlb	1	; () banked
  1052  004CBE  6F02               	movwf	(_MUX_select+2)& (0+255),b
  1053                           
  1054                           ; BSR set to: 1
  1055                           ;parcheggio.c: 164: MUX_select[3] = 0b00000011;
  1056  004CC0  0E03               	movlw	3
  1057  004CC2  0101               	movlb	1	; () banked
  1058  004CC4  6F03               	movwf	(_MUX_select+3)& (0+255),b
  1059                           
  1060                           ; BSR set to: 1
  1061                           ;parcheggio.c: 165: MUX_select[4] = 0b00000100;
  1062  004CC6  0E04               	movlw	4
  1063  004CC8  0101               	movlb	1	; () banked
  1064  004CCA  6F04               	movwf	(_MUX_select+4)& (0+255),b
  1065                           
  1066                           ; BSR set to: 1
  1067                           ;parcheggio.c: 166: MUX_select[5] = 0b00000101;
  1068  004CCC  0E05               	movlw	5
  1069  004CCE  0101               	movlb	1	; () banked
  1070  004CD0  6F05               	movwf	(_MUX_select+5)& (0+255),b
  1071                           
  1072                           ; BSR set to: 1
  1073                           ;parcheggio.c: 167: MUX_select[6] = 0b00000110;
  1074  004CD2  0E06               	movlw	6
  1075  004CD4  0101               	movlb	1	; () banked
  1076  004CD6  6F06               	movwf	(_MUX_select+6)& (0+255),b
  1077                           
  1078                           ; BSR set to: 1
  1079                           ;parcheggio.c: 168: MUX_select[7] = 0b00000111;
  1080  004CD8  0E07               	movlw	7
  1081  004CDA  0101               	movlb	1	; () banked
  1082  004CDC  6F07               	movwf	(_MUX_select+7)& (0+255),b
  1083                           
  1084                           ; BSR set to: 1
  1085                           ;parcheggio.c: 170: PORTBbits.RB4 = 0;
  1086  004CDE  9881               	bcf	3969,4,c	;volatile
  1087                           
  1088                           ; BSR set to: 1
  1089                           ;parcheggio.c: 171: PORTBbits.RB5 = 0;
  1090  004CE0  9A81               	bcf	3969,5,c	;volatile
  1091                           
  1092                           ; BSR set to: 1
  1093                           ;parcheggio.c: 172: PORTBbits.RB6 = 0;
  1094  004CE2  9C81               	bcf	3969,6,c	;volatile
  1095                           
  1096                           ; BSR set to: 1
  1097                           ;parcheggio.c: 173: request_sent = 0;
  1098  004CE4  9A45               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1099  004CE6                     l6125:
  1100                           
  1101                           ;parcheggio.c: 175: park_search();
  1102  004CE6  ECF9  F022         	call	_park_search	;wreg free
  1103                           
  1104                           ;parcheggio.c: 176: can_interpreter();
  1105  004CEA  EC2B  F026         	call	_can_interpreter	;wreg free
  1106                           
  1107                           ;parcheggio.c: 177: parallelo();
  1108  004CEE  EC53  F01F         	call	_parallelo	;wreg free
  1109                           
  1110                           ;parcheggio.c: 178: park_routine();
  1111  004CF2  ECDF  F026         	call	_park_routine	;wreg free
  1112  004CF6  D7F7               	goto	l6125
  1113  004CF8                     __end_of_main:
  1114                           	opt stack 0
  1115                           tblptru	equ	0xFF8
  1116                           tblptrh	equ	0xFF7
  1117                           tblptrl	equ	0xFF6
  1118                           tablat	equ	0xFF5
  1119                           postinc0	equ	0xFEE
  1120                           wreg	equ	0xFE8
  1121                           
  1122 ;; *************** function _park_search *****************
  1123 ;; Defined at:
  1124 ;;		line 182 in file "parcheggio.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;		None
  1127 ;; Auto vars:     Size  Location     Type
  1128 ;;		None
  1129 ;; Return value:  Size  Location     Type
  1130 ;;		None               void
  1131 ;; Registers used:
  1132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1140 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1141 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1142 ;;Total ram usage:        2 bytes
  1143 ;; Hardware stack levels used:    1
  1144 ;; Hardware stack levels required when called:    5
  1145 ;; This function calls:
  1146 ;;		_CANisTxReady
  1147 ;;		_CANsendMessage
  1148 ;;		___xxtofl
  1149 ;;		_abs
  1150 ;; This function is called by:
  1151 ;;		_main
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155                           	psect	text1
  1156  0045F2                     __ptext1:
  1157                           	opt stack 0
  1158  0045F2                     _park_search:
  1159                           	opt stack 25
  1160                           
  1161                           ;parcheggio.c: 183: while ((activation == 1) && (PORTBbits.RB5 == 0)) {
  1162                           
  1163                           ;incstack = 0
  1164  0045F2  D0AB               	goto	l677
  1165  0045F4                     l5093:
  1166                           
  1167                           ;parcheggio.c: 184: if (sensor_distance[0] > 50) {
  1168  0045F4  5025               	movf	_sensor_distance+1,w,c	;volatile
  1169  0045F6  E104               	bnz	u6330
  1170  0045F8  0E33               	movlw	51
  1171  0045FA  5C24               	subwf	_sensor_distance,w,c	;volatile
  1172  0045FC  A0D8               	btfss	status,0,c
  1173  0045FE  D02A               	goto	l5109
  1174  004600                     u6330:
  1175                           
  1176                           ;parcheggio.c: 185: if (request_sent == 0) {
  1177  004600  BA45               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1178  004602  D056               	goto	l5111
  1179  004604                     l5099:
  1180  004604  ECCD  F026         	call	_CANisTxReady	;wreg free
  1181  004608  0900               	iorlw	0
  1182  00460A  B4D8               	btfsc	status,2,c
  1183  00460C  D7FB               	goto	l5099
  1184                           
  1185                           ;parcheggio.c: 187: CANsendMessage(0b00000001000, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1186  00460E  0E08               	movlw	8
  1187  004610  0100               	movlb	0	; () banked
  1188  004612  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1189  004614  0E00               	movlw	0
  1190  004616  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1191  004618  0E00               	movlw	0
  1192  00461A  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1193  00461C  0E00               	movlw	0
  1194  00461E  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1195  004620  0E29               	movlw	low _data
  1196  004622  0100               	movlb	0	; () banked
  1197  004624  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1198  004626  0E01               	movlw	high _data
  1199  004628  0100               	movlb	0	; () banked
  1200  00462A  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1201  00462C  0E08               	movlw	8
  1202  00462E  0100               	movlb	0	; () banked
  1203  004630  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1204  004632  0EFC               	movlw	252
  1205  004634  0100               	movlb	0	; () banked
  1206  004636  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1207  004638  EC1A  F00C         	call	_CANsendMessage	;wreg free
  1208                           
  1209                           ;parcheggio.c: 188: request_sent = 1;
  1210  00463C  8A45               	bsf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1211                           
  1212                           ;parcheggio.c: 189: alignment_gap = 0;
  1213  00463E  0E00               	movlw	0
  1214  004640  0100               	movlb	0	; () banked
  1215  004642  6FD1               	movwf	_alignment_gap& (0+255),b
  1216  004644  0E00               	movlw	0
  1217  004646  6FD2               	movwf	(_alignment_gap+1)& (0+255),b
  1218  004648  0E00               	movlw	0
  1219  00464A  6FD3               	movwf	(_alignment_gap+2)& (0+255),b
  1220  00464C  0E00               	movlw	0
  1221  00464E  6FD4               	movwf	(_alignment_gap+3)& (0+255),b
  1222                           
  1223                           ; BSR set to: 0
  1224                           ;parcheggio.c: 190: LATBbits.LATB4 = 1;
  1225  004650  888A               	bsf	3978,4,c	;volatile
  1226                           
  1227                           ; BSR set to: 0
  1228                           ;parcheggio.c: 191: }
  1229                           ;parcheggio.c: 192: } else {
  1230  004652  D02E               	goto	l5111
  1231  004654                     l5109:
  1232                           
  1233                           ;parcheggio.c: 193: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  1234  004654  EE20  F026         	lfsr	2,_sensor_distance+2	;volatile
  1235  004658  CFDE F089          	movff	postinc2,??_park_search
  1236  00465C  CFDD F08A          	movff	postdec2,??_park_search+1
  1237  004660  0100               	movlb	0	; () banked
  1238  004662  1F89               	comf	??_park_search& (0+255),f,b
  1239  004664  1F8A               	comf	(??_park_search+1)& (0+255),f,b
  1240  004666  4B89               	infsnz	??_park_search& (0+255),f,b
  1241  004668  2B8A               	incf	(??_park_search+1)& (0+255),f,b
  1242  00466A  5024               	movf	_sensor_distance,w,c	;volatile
  1243  00466C  0100               	movlb	0	; () banked
  1244  00466E  2589               	addwf	??_park_search& (0+255),w,b
  1245  004670  0100               	movlb	0	; () banked
  1246  004672  6F77               	movwf	abs@a& (0+255),b
  1247  004674  5025               	movf	_sensor_distance+1,w,c	;volatile
  1248  004676  0100               	movlb	0	; () banked
  1249  004678  218A               	addwfc	(??_park_search+1)& (0+255),w,b
  1250  00467A  0100               	movlb	0	; () banked
  1251  00467C  6F78               	movwf	(abs@a+1)& (0+255),b
  1252  00467E  ECB7  F026         	call	_abs	;wreg free
  1253  004682  0100               	movlb	0	; () banked
  1254  004684  C077  F07B         	movff	?_abs,___xxtofl@val
  1255  004688  0100               	movlb	0	; () banked
  1256  00468A  C078  F07C         	movff	?_abs+1,___xxtofl@val+1
  1257  00468E  0100               	movlb	0	; () banked
  1258  004690  0E00               	movlw	0
  1259  004692  BF7C               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1260  004694  0EFF               	movlw	-1
  1261  004696  6F7D               	movwf	(___xxtofl@val+2)& (0+255),b
  1262  004698  6F7E               	movwf	(___xxtofl@val+3)& (0+255),b
  1263  00469A  0E01               	movlw	1
  1264  00469C  EC67  F020         	call	___xxtofl
  1265  0046A0  C07B  F0D1         	movff	?___xxtofl,_alignment_gap
  1266  0046A4  C07C  F0D2         	movff	?___xxtofl+1,_alignment_gap+1
  1267  0046A8  C07D  F0D3         	movff	?___xxtofl+2,_alignment_gap+2
  1268  0046AC  C07E  F0D4         	movff	?___xxtofl+3,_alignment_gap+3
  1269  0046B0                     l5111:
  1270                           
  1271                           ;parcheggio.c: 194: }
  1272                           ;parcheggio.c: 195: if ((sensor_distance[0] < 50) && (request_sent == 1)) {
  1273  0046B0  5025               	movf	_sensor_distance+1,w,c	;volatile
  1274  0046B2  E122               	bnz	l5121
  1275  0046B4  0E32               	movlw	50
  1276  0046B6  5C24               	subwf	_sensor_distance,w,c	;volatile
  1277  0046B8  A0D8               	btfss	status,0,c
  1278  0046BA  AA45               	btfss	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1279  0046BC  D01D               	goto	l5121
  1280                           
  1281                           ;parcheggio.c: 196: request_sent = 0;
  1282  0046BE  9A45               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1283  0046C0                     l5117:
  1284  0046C0  ECCD  F026         	call	_CANisTxReady	;wreg free
  1285  0046C4  0900               	iorlw	0
  1286  0046C6  B4D8               	btfsc	status,2,c
  1287  0046C8  D7FB               	goto	l5117
  1288                           
  1289                           ;parcheggio.c: 198: CANsendMessage(0b00000000111, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1290  0046CA  0E07               	movlw	7
  1291  0046CC  0100               	movlb	0	; () banked
  1292  0046CE  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1293  0046D0  0E00               	movlw	0
  1294  0046D2  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1295  0046D4  0E00               	movlw	0
  1296  0046D6  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1297  0046D8  0E00               	movlw	0
  1298  0046DA  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1299  0046DC  0E29               	movlw	low _data
  1300  0046DE  0100               	movlb	0	; () banked
  1301  0046E0  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1302  0046E2  0E01               	movlw	high _data
  1303  0046E4  0100               	movlb	0	; () banked
  1304  0046E6  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1305  0046E8  0E08               	movlw	8
  1306  0046EA  0100               	movlb	0	; () banked
  1307  0046EC  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1308  0046EE  0EFC               	movlw	252
  1309  0046F0  0100               	movlb	0	; () banked
  1310  0046F2  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1311  0046F4  EC1A  F00C         	call	_CANsendMessage	;wreg free
  1312  0046F8                     l5121:
  1313                           
  1314                           ;parcheggio.c: 199: }
  1315                           ;parcheggio.c: 200: if (distance_received == 1) {
  1316  0046F8  A645               	btfss	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1317  0046FA  D027               	goto	l677
  1318                           
  1319                           ;parcheggio.c: 201: if (distance_average > 100) {
  1320  0046FC  0100               	movlb	0	; () banked
  1321  0046FE  51E2               	movf	(_distance_average+1)& (0+255),w,b	;volatile
  1322  004700  E105               	bnz	u6400
  1323  004702  0E65               	movlw	101
  1324  004704  0100               	movlb	0	; () banked
  1325  004706  5DE1               	subwf	_distance_average& (0+255),w,b	;volatile
  1326  004708  A0D8               	btfss	status,0,c
  1327  00470A  D01D               	goto	l690
  1328  00470C                     u6400:
  1329                           
  1330                           ; BSR set to: 0
  1331                           ;parcheggio.c: 202: PORTBbits.RB5 = 1;
  1332  00470C  8A81               	bsf	3969,5,c	;volatile
  1333                           
  1334                           ; BSR set to: 0
  1335                           ;parcheggio.c: 203: data[0] = 1;
  1336  00470E  0E01               	movlw	1
  1337  004710  0101               	movlb	1	; () banked
  1338  004712  6F29               	movwf	_data& (0+255),b
  1339                           
  1340                           ; BSR set to: 1
  1341                           ;parcheggio.c: 204: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  1342  004714  0E0B               	movlw	11
  1343  004716  0100               	movlb	0	; () banked
  1344  004718  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1345  00471A  0E00               	movlw	0
  1346  00471C  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1347  00471E  0E00               	movlw	0
  1348  004720  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1349  004722  0E00               	movlw	0
  1350  004724  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1351  004726  0E29               	movlw	low _data
  1352  004728  0100               	movlb	0	; () banked
  1353  00472A  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1354  00472C  0E01               	movlw	high _data
  1355  00472E  0100               	movlb	0	; () banked
  1356  004730  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1357  004732  0E01               	movlw	1
  1358  004734  0100               	movlb	0	; () banked
  1359  004736  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1360  004738  0EBC               	movlw	188
  1361  00473A  0100               	movlb	0	; () banked
  1362  00473C  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1363  00473E  EC1A  F00C         	call	_CANsendMessage	;wreg free
  1364                           
  1365                           ;parcheggio.c: 205: distance_received = 0;
  1366  004742  9645               	bcf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1367                           
  1368                           ;parcheggio.c: 206: } else {
  1369  004744  D002               	goto	l677
  1370  004746                     l690:
  1371                           
  1372                           ; BSR set to: 0
  1373                           ;parcheggio.c: 207: distance_received = 0;
  1374  004746  9645               	bcf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1375                           
  1376                           ;parcheggio.c: 208: PORTBbits.RB5 = 0;
  1377  004748  9A81               	bcf	3969,5,c	;volatile
  1378  00474A                     l677:
  1379  00474A  A045               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1380  00474C  0012               	return	
  1381  00474E  BA81               	btfsc	3969,5,c	;volatile
  1382  004750  0012               	return	
  1383  004752  D750               	goto	l5093
  1384  004754                     __end_of_park_search:
  1385                           	opt stack 0
  1386                           tblptru	equ	0xFF8
  1387                           tblptrh	equ	0xFF7
  1388                           tblptrl	equ	0xFF6
  1389                           tablat	equ	0xFF5
  1390                           postinc0	equ	0xFEE
  1391                           wreg	equ	0xFE8
  1392                           postinc2	equ	0xFDE
  1393                           postdec2	equ	0xFDD
  1394                           status	equ	0xFD8
  1395                           
  1396 ;; *************** function _park_routine *****************
  1397 ;; Defined at:
  1398 ;;		line 214 in file "parcheggio.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;		None
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;		None
  1403 ;; Return value:  Size  Location     Type
  1404 ;;		None               void
  1405 ;; Registers used:
  1406 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1416 ;;Total ram usage:        0 bytes
  1417 ;; Hardware stack levels used:    1
  1418 ;; Hardware stack levels required when called:    6
  1419 ;; This function calls:
  1420 ;;		_can_send
  1421 ;; This function is called by:
  1422 ;;		_main
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426                           	psect	text2
  1427  004DBE                     __ptext2:
  1428                           	opt stack 0
  1429  004DBE                     _park_routine:
  1430                           	opt stack 24
  1431                           
  1432                           ;parcheggio.c: 215: while ((PORTBbits.RB5 == 1) && (activation == 1)) {
  1433                           
  1434                           ;incstack = 0
  1435  004DBE  D00A               	goto	l5173
  1436  004DC0                     l5169:
  1437                           
  1438                           ;parcheggio.c: 216: set_speed = 0;
  1439  004DC0  0E00               	movlw	0
  1440  004DC2  0100               	movlb	0	; () banked
  1441  004DC4  6FE4               	movwf	(_set_speed+1)& (0+255),b
  1442  004DC6  0E00               	movlw	0
  1443  004DC8  6FE3               	movwf	_set_speed& (0+255),b
  1444                           
  1445                           ;parcheggio.c: 217: data_brake[0] = 0;
  1446  004DCA  0E00               	movlw	0
  1447  004DCC  0101               	movlb	1	; () banked
  1448  004DCE  6F31               	movwf	_data_brake& (0+255),b
  1449                           
  1450                           ; BSR set to: 1
  1451                           ;parcheggio.c: 218: can_send();
  1452  004DD0  EC2C  F025         	call	_can_send	;wreg free
  1453  004DD4                     l5173:
  1454  004DD4  AA81               	btfss	3969,5,c	;volatile
  1455  004DD6  0012               	return	
  1456  004DD8  A045               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1457  004DDA  0012               	return	
  1458  004DDC  D7F1               	goto	l5169
  1459  004DDE                     __end_of_park_routine:
  1460                           	opt stack 0
  1461                           tblptru	equ	0xFF8
  1462                           tblptrh	equ	0xFF7
  1463                           tblptrl	equ	0xFF6
  1464                           tablat	equ	0xFF5
  1465                           postinc0	equ	0xFEE
  1466                           wreg	equ	0xFE8
  1467                           postinc2	equ	0xFDE
  1468                           postdec2	equ	0xFDD
  1469                           status	equ	0xFD8
  1470                           
  1471 ;; *************** function _can_send *****************
  1472 ;; Defined at:
  1473 ;;		line 223 in file "parcheggio.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;		None
  1476 ;; Auto vars:     Size  Location     Type
  1477 ;;		None
  1478 ;; Return value:  Size  Location     Type
  1479 ;;		None               void
  1480 ;; Registers used:
  1481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1482 ;; Tracked objects:
  1483 ;;		On entry : 0/0
  1484 ;;		On exit  : 0/0
  1485 ;;		Unchanged: 0/0
  1486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1491 ;;Total ram usage:        0 bytes
  1492 ;; Hardware stack levels used:    1
  1493 ;; Hardware stack levels required when called:    5
  1494 ;; This function calls:
  1495 ;;		_CANisTxReady
  1496 ;;		_CANsendMessage
  1497 ;; This function is called by:
  1498 ;;		_park_routine
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           	psect	text3
  1503  004A58                     __ptext3:
  1504                           	opt stack 0
  1505  004A58                     _can_send:
  1506                           	opt stack 24
  1507  004A58                     l4767:
  1508  004A58  ECCD  F026         	call	_CANisTxReady	;wreg free
  1509  004A5C  06E8               	decf	wreg,f,c
  1510  004A5E  A4D8               	btfss	status,2,c
  1511  004A60  D7FB               	goto	l4767
  1512                           
  1513                           ;parcheggio.c: 225: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG &
      +                           CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1514  004A62  0E05               	movlw	5
  1515  004A64  0100               	movlb	0	; () banked
  1516  004A66  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1517  004A68  0E00               	movlw	0
  1518  004A6A  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1519  004A6C  0E00               	movlw	0
  1520  004A6E  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1521  004A70  0E00               	movlw	0
  1522  004A72  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1523  004A74  0E41               	movlw	low _data_steering
  1524  004A76  0100               	movlb	0	; () banked
  1525  004A78  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1526  004A7A  0E01               	movlw	high _data_steering
  1527  004A7C  0100               	movlb	0	; () banked
  1528  004A7E  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1529  004A80  0E08               	movlw	8
  1530  004A82  0100               	movlb	0	; () banked
  1531  004A84  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1532  004A86  0EBC               	movlw	188
  1533  004A88  0100               	movlb	0	; () banked
  1534  004A8A  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1535  004A8C  EC1A  F00C         	call	_CANsendMessage	;wreg free
  1536                           
  1537                           ;parcheggio.c: 226: data_speed[0] = set_speed;
  1538  004A90  C0E3  F139         	movff	_set_speed,_data_speed
  1539                           
  1540                           ;parcheggio.c: 227: data_speed[1] = (set_speed >> 8);
  1541  004A94  0100               	movlb	0	; () banked
  1542  004A96  51E4               	movf	(_set_speed+1)& (0+255),w,b
  1543  004A98  0101               	movlb	1	; () banked
  1544  004A9A  6F3A               	movwf	(_data_speed+1)& (0+255),b
  1545                           
  1546                           ; BSR set to: 1
  1547                           ;parcheggio.c: 228: data_speed[2] = dir;
  1548  004A9C  0E00               	movlw	0
  1549  004A9E  B245               	btfsc	_dir/(0+8),_dir& (0+7),c
  1550  004AA0  0E01               	movlw	1
  1551  004AA2  0101               	movlb	1	; () banked
  1552  004AA4  6F3B               	movwf	(_data_speed+2)& (0+255),b
  1553  004AA6                     l4777:
  1554  004AA6  ECCD  F026         	call	_CANisTxReady	;wreg free
  1555  004AAA  06E8               	decf	wreg,f,c
  1556  004AAC  A4D8               	btfss	status,2,c
  1557  004AAE  D7FB               	goto	l4777
  1558                           
  1559                           ;parcheggio.c: 230: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1560  004AB0  0E03               	movlw	3
  1561  004AB2  0100               	movlb	0	; () banked
  1562  004AB4  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1563  004AB6  0E00               	movlw	0
  1564  004AB8  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1565  004ABA  0E00               	movlw	0
  1566  004ABC  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1567  004ABE  0E00               	movlw	0
  1568  004AC0  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1569  004AC2  0E39               	movlw	low _data_speed
  1570  004AC4  0100               	movlb	0	; () banked
  1571  004AC6  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1572  004AC8  0E01               	movlw	high _data_speed
  1573  004ACA  0100               	movlb	0	; () banked
  1574  004ACC  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1575  004ACE  0E08               	movlw	8
  1576  004AD0  0100               	movlb	0	; () banked
  1577  004AD2  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1578  004AD4  0EBC               	movlw	188
  1579  004AD6  0100               	movlb	0	; () banked
  1580  004AD8  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1581  004ADA  EC1A  F00C         	call	_CANsendMessage	;wreg free
  1582  004ADE                     l4781:
  1583  004ADE  ECCD  F026         	call	_CANisTxReady	;wreg free
  1584  004AE2  06E8               	decf	wreg,f,c
  1585  004AE4  A4D8               	btfss	status,2,c
  1586  004AE6  D7FB               	goto	l4781
  1587                           
  1588                           ;parcheggio.c: 232: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_1);
  1589  004AE8  0E04               	movlw	4
  1590  004AEA  0100               	movlb	0	; () banked
  1591  004AEC  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1592  004AEE  0E00               	movlw	0
  1593  004AF0  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1594  004AF2  0E00               	movlw	0
  1595  004AF4  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1596  004AF6  0E00               	movlw	0
  1597  004AF8  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1598  004AFA  0E31               	movlw	low _data_brake
  1599  004AFC  0100               	movlb	0	; () banked
  1600  004AFE  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1601  004B00  0E01               	movlw	high _data_brake
  1602  004B02  0100               	movlb	0	; () banked
  1603  004B04  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1604  004B06  0E08               	movlw	8
  1605  004B08  0100               	movlb	0	; () banked
  1606  004B0A  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1607  004B0C  0EBD               	movlw	189
  1608  004B0E  0100               	movlb	0	; () banked
  1609  004B10  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1610  004B12  EC1A  F00C         	call	_CANsendMessage	;wreg free
  1611  004B16  0012               	return		;funcret
  1612  004B18                     __end_of_can_send:
  1613                           	opt stack 0
  1614                           tblptru	equ	0xFF8
  1615                           tblptrh	equ	0xFF7
  1616                           tblptrl	equ	0xFF6
  1617                           tablat	equ	0xFF5
  1618                           postinc0	equ	0xFEE
  1619                           wreg	equ	0xFE8
  1620                           postinc2	equ	0xFDE
  1621                           postdec2	equ	0xFDD
  1622                           status	equ	0xFD8
  1623                           
  1624 ;; *************** function _CANsendMessage *****************
  1625 ;; Defined at:
  1626 ;;		line 294 in file "../../Scuola/Triennio/sistemi/4^/PIC/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;  identifier      4   23[BANK0 ] unsigned long 
  1629 ;;  data            2   27[BANK0 ] PTR unsigned char 
  1630 ;;		 -> data_speed(8), data_steering(8), data_brake(8), data(8), 
  1631 ;;  dataLength      1   29[BANK0 ] unsigned char 
  1632 ;;  flags           1   30[BANK0 ] enum E16335
  1633 ;; Auto vars:     Size  Location     Type
  1634 ;;  tamp            4   35[BANK0 ] unsigned long 
  1635 ;; Return value:  Size  Location     Type
  1636 ;;		None               void
  1637 ;; Registers used:
  1638 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1644 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1645 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1646 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1647 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1648 ;;Total ram usage:       16 bytes
  1649 ;; Hardware stack levels used:    1
  1650 ;; Hardware stack levels required when called:    4
  1651 ;; This function calls:
  1652 ;;		Nothing
  1653 ;; This function is called by:
  1654 ;;		_park_search
  1655 ;;		_can_send
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659                           	psect	text4
  1660  001834                     __ptext4:
  1661                           	opt stack 0
  1662  001834                     _CANsendMessage:
  1663                           	opt stack 25
  1664                           
  1665                           ;inc\CANlib.h: 296: unsigned long tamp;
  1666                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  1667                           
  1668                           ;incstack = 0
  1669  001834  010F               	movlb	15	; () banked
  1670  001836  B740               	btfsc	64,3,b	;volatile
  1671  001838  D13F               	goto	l357
  1672                           
  1673                           ; BSR set to: 15
  1674                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  1675  00183A  C07D  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1676                           
  1677                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  1678  00183E  0100               	movlb	0	; () banked
  1679  001840  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  1680  001842  D003               	goto	l358
  1681                           
  1682                           ; BSR set to: 0
  1683                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  1684  001844  010F               	movlb	15	; () banked
  1685  001846  8D45               	bsf	69,6,b	;volatile
  1686  001848  D002               	goto	l359
  1687  00184A                     l358:
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;inc\CANlib.h: 302: else
  1691                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  1692  00184A  010F               	movlb	15	; () banked
  1693  00184C  9D45               	bcf	69,6,b	;volatile
  1694  00184E                     l359:
  1695                           
  1696                           ; BSR set to: 15
  1697                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  1698  00184E  0100               	movlb	0	; () banked
  1699  001850  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  1700  001852  D079               	goto	l360
  1701                           
  1702                           ; BSR set to: 0
  1703                           ;inc\CANlib.h: 306: {
  1704                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  1705  001854  0100               	movlb	0	; () banked
  1706  001856  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  1707  001858  0100               	movlb	0	; () banked
  1708  00185A  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  1709  00185C  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1710  00185E  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1711  001860  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1712                           
  1713                           ; BSR set to: 0
  1714                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  1715  001862  C083  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1716                           
  1717                           ; BSR set to: 0
  1718                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  1719  001866  0E00               	movlw	0
  1720  001868  0100               	movlb	0	; () banked
  1721  00186A  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  1722  00186C  0100               	movlb	0	; () banked
  1723  00186E  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  1724  001870  0EFF               	movlw	255
  1725  001872  0100               	movlb	0	; () banked
  1726  001874  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1727  001876  0100               	movlb	0	; () banked
  1728  001878  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1729  00187A  0E00               	movlw	0
  1730  00187C  0100               	movlb	0	; () banked
  1731  00187E  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1732  001880  0100               	movlb	0	; () banked
  1733  001882  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1734  001884  0E00               	movlw	0
  1735  001886  0100               	movlb	0	; () banked
  1736  001888  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1737  00188A  0100               	movlb	0	; () banked
  1738  00188C  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1739                           
  1740                           ; BSR set to: 0
  1741                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  1742  00188E  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  1743  001892  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1744  001896  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1745  00189A  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1746  00189E  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  1747  0018A2  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1748  0018A6  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1749  0018AA  0100               	movlb	0	; () banked
  1750  0018AC  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  1751  0018AE  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  1752  0018B2  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1753  0018B6  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1754  0018BA  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  1758  0018BE  C083  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1759                           
  1760                           ; BSR set to: 0
  1761                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  1762  0018C2  0E00               	movlw	0
  1763  0018C4  010F               	movlb	15	; () banked
  1764  0018C6  6F42               	movwf	66,b	;volatile
  1765                           
  1766                           ; BSR set to: 15
  1767                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  1768  0018C8  010F               	movlb	15	; () banked
  1769  0018CA  8742               	bsf	66,3,b	;volatile
  1770                           
  1771                           ; BSR set to: 15
  1772                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  1773  0018CC  0100               	movlb	0	; () banked
  1774  0018CE  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1775  0018D0  D002               	goto	l361
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  1779  0018D2  010F               	movlb	15	; () banked
  1780  0018D4  8142               	bsf	66,0,b	;volatile
  1781  0018D6                     l361:
  1782                           
  1783                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  1784  0018D6  0100               	movlb	0	; () banked
  1785  0018D8  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1786  0018DA  D002               	goto	l362
  1787                           
  1788                           ; BSR set to: 0
  1789                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  1790  0018DC  010F               	movlb	15	; () banked
  1791  0018DE  8342               	bsf	66,1,b	;volatile
  1792  0018E0                     l362:
  1793                           
  1794                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  1795  0018E0  0100               	movlb	0	; () banked
  1796  0018E2  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1797  0018E4  D002               	goto	l363
  1798                           
  1799                           ; BSR set to: 0
  1800                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  1801  0018E6  010F               	movlb	15	; () banked
  1802  0018E8  8B42               	bsf	66,5,b	;volatile
  1803  0018EA                     l363:
  1804                           
  1805                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  1806  0018EA  0100               	movlb	0	; () banked
  1807  0018EC  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1808  0018EE  D002               	goto	l364
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  1812  0018F0  010F               	movlb	15	; () banked
  1813  0018F2  8D42               	bsf	66,6,b	;volatile
  1814  0018F4                     l364:
  1815                           
  1816                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  1817  0018F4  0100               	movlb	0	; () banked
  1818  0018F6  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1819  0018F8  D002               	goto	l4371
  1820                           
  1821                           ; BSR set to: 0
  1822                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  1823  0018FA  010F               	movlb	15	; () banked
  1824  0018FC  8F42               	bsf	66,7,b	;volatile
  1825  0018FE                     l4371:
  1826                           
  1827                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  1828  0018FE  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  1829  001902  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1830  001906  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1831  00190A  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1832  00190E  0E16               	movlw	22
  1833  001910  D006               	goto	u5300
  1834  001912                     u5305:
  1835  001912  0100               	movlb	0	; () banked
  1836  001914  90D8               	bcf	status,0,c
  1837  001916  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1838  001918  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1839  00191A  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1840  00191C  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  1841  00191E                     u5300:
  1842  00191E  2EE8               	decfsz	wreg,f,c
  1843  001920  D7F8               	goto	u5305
  1844  001922  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  1845  001926  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1846  00192A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1847  00192E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1848                           
  1849                           ; BSR set to: 0
  1850                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  1851  001932  0100               	movlb	0	; () banked
  1852  001934  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  1853  001936  0100               	movlb	0	; () banked
  1854  001938  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  1855  00193A  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1856  00193C  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1857  00193E  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1858                           
  1859                           ; BSR set to: 0
  1860                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  1861  001940  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1862                           
  1863                           ;inc\CANlib.h: 332: }
  1864  001944  D059               	goto	l4391
  1865  001946                     l360:
  1866                           
  1867                           ; BSR set to: 0
  1868                           ;inc\CANlib.h: 334: else
  1869                           ;inc\CANlib.h: 336: {
  1870                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  1871  001946  010F               	movlb	15	; () banked
  1872  001948  9742               	bcf	66,3,b	;volatile
  1873                           
  1874                           ; BSR set to: 15
  1875                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  1876  00194A  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  1877  00194E  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1878  001952  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1879  001956  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1880  00195A  0E04               	movlw	4
  1881  00195C  D006               	goto	u5310
  1882  00195E                     u5315:
  1883  00195E  0100               	movlb	0	; () banked
  1884  001960  90D8               	bcf	status,0,c
  1885  001962  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1886  001964  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1887  001966  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1888  001968  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  1889  00196A                     u5310:
  1890  00196A  2EE8               	decfsz	wreg,f,c
  1891  00196C  D7F8               	goto	u5315
  1892  00196E  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  1893  001972  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1894  001976  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1895  00197A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1896                           
  1897                           ; BSR set to: 0
  1898                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  1899  00197E  0100               	movlb	0	; () banked
  1900  001980  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  1901  001982  0100               	movlb	0	; () banked
  1902  001984  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  1903  001986  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1904  001988  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1905  00198A  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1906                           
  1907                           ; BSR set to: 0
  1908                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  1909  00198C  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1910                           
  1911                           ; BSR set to: 0
  1912                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  1913  001990  0E07               	movlw	7
  1914  001992  0100               	movlb	0	; () banked
  1915  001994  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  1916  001996  0100               	movlb	0	; () banked
  1917  001998  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  1918  00199A  0E00               	movlw	0
  1919  00199C  0100               	movlb	0	; () banked
  1920  00199E  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1921  0019A0  0100               	movlb	0	; () banked
  1922  0019A2  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1923  0019A4  0E00               	movlw	0
  1924  0019A6  0100               	movlb	0	; () banked
  1925  0019A8  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1926  0019AA  0100               	movlb	0	; () banked
  1927  0019AC  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1928  0019AE  0E00               	movlw	0
  1929  0019B0  0100               	movlb	0	; () banked
  1930  0019B2  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1931  0019B4  0100               	movlb	0	; () banked
  1932  0019B6  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1933                           
  1934                           ; BSR set to: 0
  1935                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  1936  0019B8  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  1937  0019BC  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1938  0019C0  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1939  0019C4  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1940  0019C8  0E05               	movlw	5
  1941  0019CA                     u5325:
  1942  0019CA  90D8               	bcf	status,0,c
  1943  0019CC  0100               	movlb	0	; () banked
  1944  0019CE  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  1945  0019D0  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1946  0019D2  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1947  0019D4  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1948  0019D6  2EE8               	decfsz	wreg,f,c
  1949  0019D8  D7F8               	goto	u5325
  1950  0019DA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  1951  0019DE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1952  0019E2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1953  0019E6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1954                           
  1955                           ; BSR set to: 0
  1956                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  1957  0019EA  010F               	movlb	15	; () banked
  1958  0019EC  5142               	movf	66,w,b	;volatile
  1959  0019EE  0B1F               	andlw	31
  1960  0019F0  010F               	movlb	15	; () banked
  1961  0019F2  6F42               	movwf	66,b	;volatile
  1962                           
  1963                           ; BSR set to: 15
  1964                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  1965  0019F4  C083  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  1966  0019F8                     l4391:
  1967                           
  1968                           ;inc\CANlib.h: 347: }
  1969                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  1970  0019F8  0100               	movlb	0	; () banked
  1971  0019FA  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  1972  0019FC  D003               	goto	l367
  1973                           
  1974                           ; BSR set to: 0
  1975                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  1976  0019FE  010F               	movlb	15	; () banked
  1977  001A00  8140               	bsf	64,0,b	;volatile
  1978  001A02  D002               	goto	l368
  1979  001A04                     l367:
  1980                           
  1981                           ; BSR set to: 0
  1982                           ;inc\CANlib.h: 351: else
  1983                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  1984  001A04  010F               	movlb	15	; () banked
  1985  001A06  9140               	bcf	64,0,b	;volatile
  1986  001A08                     l368:
  1987                           
  1988                           ; BSR set to: 15
  1989                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  1990  001A08  0100               	movlb	0	; () banked
  1991  001A0A  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  1992  001A0C  D003               	goto	l369
  1993                           
  1994                           ; BSR set to: 0
  1995                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  1996  001A0E  010F               	movlb	15	; () banked
  1997  001A10  8340               	bsf	64,1,b	;volatile
  1998  001A12  D002               	goto	l4397
  1999  001A14                     l369:
  2000                           
  2001                           ; BSR set to: 0
  2002                           ;inc\CANlib.h: 355: else
  2003                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  2004  001A14  010F               	movlb	15	; () banked
  2005  001A16  9340               	bcf	64,1,b	;volatile
  2006  001A18                     l4397:
  2007                           
  2008                           ; BSR set to: 15
  2009                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  2010  001A18  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  2011  001A1C  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2012  001A20  50DF               	movf	indf2,w,c
  2013  001A22  010F               	movlb	15	; () banked
  2014  001A24  6F46               	movwf	70,b	;volatile
  2015                           
  2016                           ; BSR set to: 15
  2017                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  2018  001A26  0100               	movlb	0	; () banked
  2019  001A28  EE20 F001          	lfsr	2,1
  2020  001A2C  517B               	movf	CANsendMessage@data& (0+255),w,b
  2021  001A2E  26D9               	addwf	fsr2l,f,c
  2022  001A30  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2023  001A32  22DA               	addwfc	fsr2h,f,c
  2024  001A34  50DF               	movf	indf2,w,c
  2025  001A36  010F               	movlb	15	; () banked
  2026  001A38  6F47               	movwf	71,b	;volatile
  2027                           
  2028                           ; BSR set to: 15
  2029                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  2030  001A3A  0100               	movlb	0	; () banked
  2031  001A3C  EE20 F002          	lfsr	2,2
  2032  001A40  517B               	movf	CANsendMessage@data& (0+255),w,b
  2033  001A42  26D9               	addwf	fsr2l,f,c
  2034  001A44  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2035  001A46  22DA               	addwfc	fsr2h,f,c
  2036  001A48  50DF               	movf	indf2,w,c
  2037  001A4A  010F               	movlb	15	; () banked
  2038  001A4C  6F48               	movwf	72,b	;volatile
  2039                           
  2040                           ; BSR set to: 15
  2041                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  2042  001A4E  0100               	movlb	0	; () banked
  2043  001A50  EE20 F003          	lfsr	2,3
  2044  001A54  517B               	movf	CANsendMessage@data& (0+255),w,b
  2045  001A56  26D9               	addwf	fsr2l,f,c
  2046  001A58  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2047  001A5A  22DA               	addwfc	fsr2h,f,c
  2048  001A5C  50DF               	movf	indf2,w,c
  2049  001A5E  010F               	movlb	15	; () banked
  2050  001A60  6F49               	movwf	73,b	;volatile
  2051                           
  2052                           ; BSR set to: 15
  2053                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  2054  001A62  0100               	movlb	0	; () banked
  2055  001A64  EE20 F004          	lfsr	2,4
  2056  001A68  517B               	movf	CANsendMessage@data& (0+255),w,b
  2057  001A6A  26D9               	addwf	fsr2l,f,c
  2058  001A6C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2059  001A6E  22DA               	addwfc	fsr2h,f,c
  2060  001A70  50DF               	movf	indf2,w,c
  2061  001A72  010F               	movlb	15	; () banked
  2062  001A74  6F4A               	movwf	74,b	;volatile
  2063                           
  2064                           ; BSR set to: 15
  2065                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  2066  001A76  0100               	movlb	0	; () banked
  2067  001A78  EE20 F005          	lfsr	2,5
  2068  001A7C  517B               	movf	CANsendMessage@data& (0+255),w,b
  2069  001A7E  26D9               	addwf	fsr2l,f,c
  2070  001A80  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2071  001A82  22DA               	addwfc	fsr2h,f,c
  2072  001A84  50DF               	movf	indf2,w,c
  2073  001A86  010F               	movlb	15	; () banked
  2074  001A88  6F4B               	movwf	75,b	;volatile
  2075                           
  2076                           ; BSR set to: 15
  2077                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  2078  001A8A  0100               	movlb	0	; () banked
  2079  001A8C  EE20 F006          	lfsr	2,6
  2080  001A90  517B               	movf	CANsendMessage@data& (0+255),w,b
  2081  001A92  26D9               	addwf	fsr2l,f,c
  2082  001A94  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2083  001A96  22DA               	addwfc	fsr2h,f,c
  2084  001A98  50DF               	movf	indf2,w,c
  2085  001A9A  010F               	movlb	15	; () banked
  2086  001A9C  6F4C               	movwf	76,b	;volatile
  2087                           
  2088                           ; BSR set to: 15
  2089                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  2090  001A9E  0100               	movlb	0	; () banked
  2091  001AA0  EE20 F007          	lfsr	2,7
  2092  001AA4  517B               	movf	CANsendMessage@data& (0+255),w,b
  2093  001AA6  26D9               	addwf	fsr2l,f,c
  2094  001AA8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2095  001AAA  22DA               	addwfc	fsr2h,f,c
  2096  001AAC  50DF               	movf	indf2,w,c
  2097  001AAE  010F               	movlb	15	; () banked
  2098  001AB0  6F4D               	movwf	77,b	;volatile
  2099                           
  2100                           ; BSR set to: 15
  2101                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  2102  001AB2  010F               	movlb	15	; () banked
  2103  001AB4  8740               	bsf	64,3,b	;volatile
  2104                           
  2105                           ; BSR set to: 15
  2106                           ;inc\CANlib.h: 368: return;
  2107  001AB6  0012               	return	
  2108  001AB8                     l357:
  2109                           
  2110                           ; BSR set to: 15
  2111                           ;inc\CANlib.h: 369: }
  2112                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  2113  001AB8  010F               	movlb	15	; () banked
  2114  001ABA  B730               	btfsc	48,3,b	;volatile
  2115  001ABC  D13F               	goto	l372
  2116                           
  2117                           ; BSR set to: 15
  2118                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  2119  001ABE  C07D  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  2120                           
  2121                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  2122  001AC2  0100               	movlb	0	; () banked
  2123  001AC4  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  2124  001AC6  D003               	goto	l373
  2125                           
  2126                           ; BSR set to: 0
  2127                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  2128  001AC8  010F               	movlb	15	; () banked
  2129  001ACA  8D35               	bsf	53,6,b	;volatile
  2130  001ACC  D002               	goto	l374
  2131  001ACE                     l373:
  2132                           
  2133                           ; BSR set to: 0
  2134                           ;inc\CANlib.h: 378: else
  2135                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  2136  001ACE  010F               	movlb	15	; () banked
  2137  001AD0  9D35               	bcf	53,6,b	;volatile
  2138  001AD2                     l374:
  2139                           
  2140                           ; BSR set to: 15
  2141                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  2142  001AD2  0100               	movlb	0	; () banked
  2143  001AD4  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  2144  001AD6  D079               	goto	l375
  2145                           
  2146                           ; BSR set to: 0
  2147                           ;inc\CANlib.h: 382: {
  2148                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  2149  001AD8  0100               	movlb	0	; () banked
  2150  001ADA  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  2151  001ADC  0100               	movlb	0	; () banked
  2152  001ADE  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  2153  001AE0  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2154  001AE2  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2155  001AE4  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2156                           
  2157                           ; BSR set to: 0
  2158                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  2159  001AE6  C083  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  2160                           
  2161                           ; BSR set to: 0
  2162                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  2163  001AEA  0E00               	movlw	0
  2164  001AEC  0100               	movlb	0	; () banked
  2165  001AEE  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  2166  001AF0  0100               	movlb	0	; () banked
  2167  001AF2  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  2168  001AF4  0EFF               	movlw	255
  2169  001AF6  0100               	movlb	0	; () banked
  2170  001AF8  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2171  001AFA  0100               	movlb	0	; () banked
  2172  001AFC  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2173  001AFE  0E00               	movlw	0
  2174  001B00  0100               	movlb	0	; () banked
  2175  001B02  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2176  001B04  0100               	movlb	0	; () banked
  2177  001B06  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2178  001B08  0E00               	movlw	0
  2179  001B0A  0100               	movlb	0	; () banked
  2180  001B0C  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2181  001B0E  0100               	movlb	0	; () banked
  2182  001B10  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2183                           
  2184                           ; BSR set to: 0
  2185                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  2186  001B12  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  2187  001B16  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2188  001B1A  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2189  001B1E  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2190  001B22  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  2191  001B26  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2192  001B2A  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2193  001B2E  0100               	movlb	0	; () banked
  2194  001B30  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  2195  001B32  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  2196  001B36  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2197  001B3A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2198  001B3E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2199                           
  2200                           ; BSR set to: 0
  2201                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  2202  001B42  C083  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  2203                           
  2204                           ; BSR set to: 0
  2205                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  2206  001B46  0E00               	movlw	0
  2207  001B48  010F               	movlb	15	; () banked
  2208  001B4A  6F32               	movwf	50,b	;volatile
  2209                           
  2210                           ; BSR set to: 15
  2211                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  2212  001B4C  010F               	movlb	15	; () banked
  2213  001B4E  8732               	bsf	50,3,b	;volatile
  2214                           
  2215                           ; BSR set to: 15
  2216                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  2217  001B50  0100               	movlb	0	; () banked
  2218  001B52  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2219  001B54  D002               	goto	l376
  2220                           
  2221                           ; BSR set to: 0
  2222                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  2223  001B56  010F               	movlb	15	; () banked
  2224  001B58  8132               	bsf	50,0,b	;volatile
  2225  001B5A                     l376:
  2226                           
  2227                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  2228  001B5A  0100               	movlb	0	; () banked
  2229  001B5C  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2230  001B5E  D002               	goto	l377
  2231                           
  2232                           ; BSR set to: 0
  2233                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  2234  001B60  010F               	movlb	15	; () banked
  2235  001B62  8332               	bsf	50,1,b	;volatile
  2236  001B64                     l377:
  2237                           
  2238                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  2239  001B64  0100               	movlb	0	; () banked
  2240  001B66  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2241  001B68  D002               	goto	l378
  2242                           
  2243                           ; BSR set to: 0
  2244                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  2245  001B6A  010F               	movlb	15	; () banked
  2246  001B6C  8B32               	bsf	50,5,b	;volatile
  2247  001B6E                     l378:
  2248                           
  2249                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  2250  001B6E  0100               	movlb	0	; () banked
  2251  001B70  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2252  001B72  D002               	goto	l379
  2253                           
  2254                           ; BSR set to: 0
  2255                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  2256  001B74  010F               	movlb	15	; () banked
  2257  001B76  8D32               	bsf	50,6,b	;volatile
  2258  001B78                     l379:
  2259                           
  2260                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  2261  001B78  0100               	movlb	0	; () banked
  2262  001B7A  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2263  001B7C  D002               	goto	l4447
  2264                           
  2265                           ; BSR set to: 0
  2266                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  2267  001B7E  010F               	movlb	15	; () banked
  2268  001B80  8F32               	bsf	50,7,b	;volatile
  2269  001B82                     l4447:
  2270                           
  2271                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  2272  001B82  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  2273  001B86  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2274  001B8A  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2275  001B8E  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2276  001B92  0E16               	movlw	22
  2277  001B94  D006               	goto	u5430
  2278  001B96                     u5435:
  2279  001B96  0100               	movlb	0	; () banked
  2280  001B98  90D8               	bcf	status,0,c
  2281  001B9A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2282  001B9C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2283  001B9E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2284  001BA0  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  2285  001BA2                     u5430:
  2286  001BA2  2EE8               	decfsz	wreg,f,c
  2287  001BA4  D7F8               	goto	u5435
  2288  001BA6  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  2289  001BAA  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2290  001BAE  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2291  001BB2  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2292                           
  2293                           ; BSR set to: 0
  2294                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  2295  001BB6  0100               	movlb	0	; () banked
  2296  001BB8  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  2297  001BBA  0100               	movlb	0	; () banked
  2298  001BBC  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  2299  001BBE  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2300  001BC0  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2301  001BC2  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2302                           
  2303                           ; BSR set to: 0
  2304                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  2305  001BC4  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2306                           
  2307                           ;inc\CANlib.h: 407: }
  2308  001BC8  D059               	goto	l4467
  2309  001BCA                     l375:
  2310                           
  2311                           ; BSR set to: 0
  2312                           ;inc\CANlib.h: 409: else
  2313                           ;inc\CANlib.h: 411: {
  2314                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  2315  001BCA  010F               	movlb	15	; () banked
  2316  001BCC  9732               	bcf	50,3,b	;volatile
  2317                           
  2318                           ; BSR set to: 15
  2319                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  2320  001BCE  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  2321  001BD2  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2322  001BD6  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2323  001BDA  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2324  001BDE  0E04               	movlw	4
  2325  001BE0  D006               	goto	u5440
  2326  001BE2                     u5445:
  2327  001BE2  0100               	movlb	0	; () banked
  2328  001BE4  90D8               	bcf	status,0,c
  2329  001BE6  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2330  001BE8  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2331  001BEA  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2332  001BEC  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  2333  001BEE                     u5440:
  2334  001BEE  2EE8               	decfsz	wreg,f,c
  2335  001BF0  D7F8               	goto	u5445
  2336  001BF2  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  2337  001BF6  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2338  001BFA  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2339  001BFE  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2340                           
  2341                           ; BSR set to: 0
  2342                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  2343  001C02  0100               	movlb	0	; () banked
  2344  001C04  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  2345  001C06  0100               	movlb	0	; () banked
  2346  001C08  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  2347  001C0A  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2348  001C0C  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2349  001C0E  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2350                           
  2351                           ; BSR set to: 0
  2352                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  2353  001C10  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2354                           
  2355                           ; BSR set to: 0
  2356                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  2357  001C14  0E07               	movlw	7
  2358  001C16  0100               	movlb	0	; () banked
  2359  001C18  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  2360  001C1A  0100               	movlb	0	; () banked
  2361  001C1C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  2362  001C1E  0E00               	movlw	0
  2363  001C20  0100               	movlb	0	; () banked
  2364  001C22  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2365  001C24  0100               	movlb	0	; () banked
  2366  001C26  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2367  001C28  0E00               	movlw	0
  2368  001C2A  0100               	movlb	0	; () banked
  2369  001C2C  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2370  001C2E  0100               	movlb	0	; () banked
  2371  001C30  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2372  001C32  0E00               	movlw	0
  2373  001C34  0100               	movlb	0	; () banked
  2374  001C36  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2375  001C38  0100               	movlb	0	; () banked
  2376  001C3A  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  2380  001C3C  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  2381  001C40  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2382  001C44  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2383  001C48  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2384  001C4C  0E05               	movlw	5
  2385  001C4E                     u5455:
  2386  001C4E  90D8               	bcf	status,0,c
  2387  001C50  0100               	movlb	0	; () banked
  2388  001C52  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  2389  001C54  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2390  001C56  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2391  001C58  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2392  001C5A  2EE8               	decfsz	wreg,f,c
  2393  001C5C  D7F8               	goto	u5455
  2394  001C5E  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  2395  001C62  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2396  001C66  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2397  001C6A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2398                           
  2399                           ; BSR set to: 0
  2400                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  2401  001C6E  010F               	movlb	15	; () banked
  2402  001C70  5132               	movf	50,w,b	;volatile
  2403  001C72  0B1F               	andlw	31
  2404  001C74  010F               	movlb	15	; () banked
  2405  001C76  6F32               	movwf	50,b	;volatile
  2406                           
  2407                           ; BSR set to: 15
  2408                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  2409  001C78  C083  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  2410  001C7C                     l4467:
  2411                           
  2412                           ;inc\CANlib.h: 422: }
  2413                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  2414  001C7C  0100               	movlb	0	; () banked
  2415  001C7E  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  2416  001C80  D003               	goto	l382
  2417                           
  2418                           ; BSR set to: 0
  2419                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  2420  001C82  010F               	movlb	15	; () banked
  2421  001C84  8130               	bsf	48,0,b	;volatile
  2422  001C86  D002               	goto	l383
  2423  001C88                     l382:
  2424                           
  2425                           ; BSR set to: 0
  2426                           ;inc\CANlib.h: 426: else
  2427                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  2428  001C88  010F               	movlb	15	; () banked
  2429  001C8A  9130               	bcf	48,0,b	;volatile
  2430  001C8C                     l383:
  2431                           
  2432                           ; BSR set to: 15
  2433                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  2434  001C8C  0100               	movlb	0	; () banked
  2435  001C8E  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  2436  001C90  D003               	goto	l384
  2437                           
  2438                           ; BSR set to: 0
  2439                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  2440  001C92  010F               	movlb	15	; () banked
  2441  001C94  8330               	bsf	48,1,b	;volatile
  2442  001C96  D002               	goto	l4473
  2443  001C98                     l384:
  2444                           
  2445                           ; BSR set to: 0
  2446                           ;inc\CANlib.h: 430: else
  2447                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  2448  001C98  010F               	movlb	15	; () banked
  2449  001C9A  9330               	bcf	48,1,b	;volatile
  2450  001C9C                     l4473:
  2451                           
  2452                           ; BSR set to: 15
  2453                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  2454  001C9C  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  2455  001CA0  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2456  001CA4  50DF               	movf	indf2,w,c
  2457  001CA6  010F               	movlb	15	; () banked
  2458  001CA8  6F36               	movwf	54,b	;volatile
  2459                           
  2460                           ; BSR set to: 15
  2461                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  2462  001CAA  0100               	movlb	0	; () banked
  2463  001CAC  EE20 F001          	lfsr	2,1
  2464  001CB0  517B               	movf	CANsendMessage@data& (0+255),w,b
  2465  001CB2  26D9               	addwf	fsr2l,f,c
  2466  001CB4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2467  001CB6  22DA               	addwfc	fsr2h,f,c
  2468  001CB8  50DF               	movf	indf2,w,c
  2469  001CBA  010F               	movlb	15	; () banked
  2470  001CBC  6F37               	movwf	55,b	;volatile
  2471                           
  2472                           ; BSR set to: 15
  2473                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  2474  001CBE  0100               	movlb	0	; () banked
  2475  001CC0  EE20 F002          	lfsr	2,2
  2476  001CC4  517B               	movf	CANsendMessage@data& (0+255),w,b
  2477  001CC6  26D9               	addwf	fsr2l,f,c
  2478  001CC8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2479  001CCA  22DA               	addwfc	fsr2h,f,c
  2480  001CCC  50DF               	movf	indf2,w,c
  2481  001CCE  010F               	movlb	15	; () banked
  2482  001CD0  6F38               	movwf	56,b	;volatile
  2483                           
  2484                           ; BSR set to: 15
  2485                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  2486  001CD2  0100               	movlb	0	; () banked
  2487  001CD4  EE20 F003          	lfsr	2,3
  2488  001CD8  517B               	movf	CANsendMessage@data& (0+255),w,b
  2489  001CDA  26D9               	addwf	fsr2l,f,c
  2490  001CDC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2491  001CDE  22DA               	addwfc	fsr2h,f,c
  2492  001CE0  50DF               	movf	indf2,w,c
  2493  001CE2  010F               	movlb	15	; () banked
  2494  001CE4  6F39               	movwf	57,b	;volatile
  2495                           
  2496                           ; BSR set to: 15
  2497                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  2498  001CE6  0100               	movlb	0	; () banked
  2499  001CE8  EE20 F004          	lfsr	2,4
  2500  001CEC  517B               	movf	CANsendMessage@data& (0+255),w,b
  2501  001CEE  26D9               	addwf	fsr2l,f,c
  2502  001CF0  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2503  001CF2  22DA               	addwfc	fsr2h,f,c
  2504  001CF4  50DF               	movf	indf2,w,c
  2505  001CF6  010F               	movlb	15	; () banked
  2506  001CF8  6F3A               	movwf	58,b	;volatile
  2507                           
  2508                           ; BSR set to: 15
  2509                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  2510  001CFA  0100               	movlb	0	; () banked
  2511  001CFC  EE20 F005          	lfsr	2,5
  2512  001D00  517B               	movf	CANsendMessage@data& (0+255),w,b
  2513  001D02  26D9               	addwf	fsr2l,f,c
  2514  001D04  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2515  001D06  22DA               	addwfc	fsr2h,f,c
  2516  001D08  50DF               	movf	indf2,w,c
  2517  001D0A  010F               	movlb	15	; () banked
  2518  001D0C  6F3B               	movwf	59,b	;volatile
  2519                           
  2520                           ; BSR set to: 15
  2521                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  2522  001D0E  0100               	movlb	0	; () banked
  2523  001D10  EE20 F006          	lfsr	2,6
  2524  001D14  517B               	movf	CANsendMessage@data& (0+255),w,b
  2525  001D16  26D9               	addwf	fsr2l,f,c
  2526  001D18  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2527  001D1A  22DA               	addwfc	fsr2h,f,c
  2528  001D1C  50DF               	movf	indf2,w,c
  2529  001D1E  010F               	movlb	15	; () banked
  2530  001D20  6F3C               	movwf	60,b	;volatile
  2531                           
  2532                           ; BSR set to: 15
  2533                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  2534  001D22  0100               	movlb	0	; () banked
  2535  001D24  EE20 F007          	lfsr	2,7
  2536  001D28  517B               	movf	CANsendMessage@data& (0+255),w,b
  2537  001D2A  26D9               	addwf	fsr2l,f,c
  2538  001D2C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2539  001D2E  22DA               	addwfc	fsr2h,f,c
  2540  001D30  50DF               	movf	indf2,w,c
  2541  001D32  010F               	movlb	15	; () banked
  2542  001D34  6F3D               	movwf	61,b	;volatile
  2543                           
  2544                           ; BSR set to: 15
  2545                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  2546  001D36  010F               	movlb	15	; () banked
  2547  001D38  8730               	bsf	48,3,b	;volatile
  2548                           
  2549                           ; BSR set to: 15
  2550                           ;inc\CANlib.h: 444: return;
  2551  001D3A  0012               	return	
  2552  001D3C                     l372:
  2553                           
  2554                           ; BSR set to: 15
  2555                           ;inc\CANlib.h: 445: }
  2556                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  2557  001D3C  010F               	movlb	15	; () banked
  2558  001D3E  B720               	btfsc	32,3,b	;volatile
  2559  001D40  0012               	return	
  2560                           
  2561                           ; BSR set to: 15
  2562                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  2563  001D42  C07D  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  2564                           
  2565                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  2566  001D46  0100               	movlb	0	; () banked
  2567  001D48  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  2568  001D4A  D003               	goto	l387
  2569                           
  2570                           ; BSR set to: 0
  2571                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  2572  001D4C  010F               	movlb	15	; () banked
  2573  001D4E  8D25               	bsf	37,6,b	;volatile
  2574  001D50  D002               	goto	l388
  2575  001D52                     l387:
  2576                           
  2577                           ; BSR set to: 0
  2578                           ;inc\CANlib.h: 454: else
  2579                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  2580  001D52  010F               	movlb	15	; () banked
  2581  001D54  9D25               	bcf	37,6,b	;volatile
  2582  001D56                     l388:
  2583                           
  2584                           ; BSR set to: 15
  2585                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  2586  001D56  0100               	movlb	0	; () banked
  2587  001D58  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  2588  001D5A  D079               	goto	l389
  2589                           
  2590                           ; BSR set to: 0
  2591                           ;inc\CANlib.h: 458: {
  2592                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  2593  001D5C  0100               	movlb	0	; () banked
  2594  001D5E  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  2595  001D60  0100               	movlb	0	; () banked
  2596  001D62  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  2597  001D64  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2598  001D66  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2599  001D68  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2600                           
  2601                           ; BSR set to: 0
  2602                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  2603  001D6A  C083  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  2604                           
  2605                           ; BSR set to: 0
  2606                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  2607  001D6E  0E00               	movlw	0
  2608  001D70  0100               	movlb	0	; () banked
  2609  001D72  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  2610  001D74  0100               	movlb	0	; () banked
  2611  001D76  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  2612  001D78  0EFF               	movlw	255
  2613  001D7A  0100               	movlb	0	; () banked
  2614  001D7C  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2615  001D7E  0100               	movlb	0	; () banked
  2616  001D80  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2617  001D82  0E00               	movlw	0
  2618  001D84  0100               	movlb	0	; () banked
  2619  001D86  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2620  001D88  0100               	movlb	0	; () banked
  2621  001D8A  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2622  001D8C  0E00               	movlw	0
  2623  001D8E  0100               	movlb	0	; () banked
  2624  001D90  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2625  001D92  0100               	movlb	0	; () banked
  2626  001D94  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2627                           
  2628                           ; BSR set to: 0
  2629                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  2630  001D96  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  2631  001D9A  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2632  001D9E  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2633  001DA2  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2634  001DA6  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  2635  001DAA  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2636  001DAE  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2637  001DB2  0100               	movlb	0	; () banked
  2638  001DB4  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  2639  001DB6  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  2640  001DBA  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2641  001DBE  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2642  001DC2  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2643                           
  2644                           ; BSR set to: 0
  2645                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  2646  001DC6  C083  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  2647                           
  2648                           ; BSR set to: 0
  2649                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  2650  001DCA  0E00               	movlw	0
  2651  001DCC  010F               	movlb	15	; () banked
  2652  001DCE  6F22               	movwf	34,b	;volatile
  2653                           
  2654                           ; BSR set to: 15
  2655                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  2656  001DD0  010F               	movlb	15	; () banked
  2657  001DD2  8722               	bsf	34,3,b	;volatile
  2658                           
  2659                           ; BSR set to: 15
  2660                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  2661  001DD4  0100               	movlb	0	; () banked
  2662  001DD6  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2663  001DD8  D002               	goto	l390
  2664                           
  2665                           ; BSR set to: 0
  2666                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  2667  001DDA  010F               	movlb	15	; () banked
  2668  001DDC  8122               	bsf	34,0,b	;volatile
  2669  001DDE                     l390:
  2670                           
  2671                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  2672  001DDE  0100               	movlb	0	; () banked
  2673  001DE0  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2674  001DE2  D002               	goto	l391
  2675                           
  2676                           ; BSR set to: 0
  2677                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  2678  001DE4  010F               	movlb	15	; () banked
  2679  001DE6  8322               	bsf	34,1,b	;volatile
  2680  001DE8                     l391:
  2681                           
  2682                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  2683  001DE8  0100               	movlb	0	; () banked
  2684  001DEA  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2685  001DEC  D002               	goto	l392
  2686                           
  2687                           ; BSR set to: 0
  2688                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  2689  001DEE  010F               	movlb	15	; () banked
  2690  001DF0  8B22               	bsf	34,5,b	;volatile
  2691  001DF2                     l392:
  2692                           
  2693                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  2694  001DF2  0100               	movlb	0	; () banked
  2695  001DF4  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2696  001DF6  D002               	goto	l393
  2697                           
  2698                           ; BSR set to: 0
  2699                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  2700  001DF8  010F               	movlb	15	; () banked
  2701  001DFA  8D22               	bsf	34,6,b	;volatile
  2702  001DFC                     l393:
  2703                           
  2704                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  2705  001DFC  0100               	movlb	0	; () banked
  2706  001DFE  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2707  001E00  D002               	goto	l4523
  2708                           
  2709                           ; BSR set to: 0
  2710                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  2711  001E02  010F               	movlb	15	; () banked
  2712  001E04  8F22               	bsf	34,7,b	;volatile
  2713  001E06                     l4523:
  2714                           
  2715                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  2716  001E06  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  2717  001E0A  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2718  001E0E  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2719  001E12  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2720  001E16  0E16               	movlw	22
  2721  001E18  D006               	goto	u5560
  2722  001E1A                     u5565:
  2723  001E1A  0100               	movlb	0	; () banked
  2724  001E1C  90D8               	bcf	status,0,c
  2725  001E1E  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2726  001E20  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2727  001E22  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2728  001E24  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  2729  001E26                     u5560:
  2730  001E26  2EE8               	decfsz	wreg,f,c
  2731  001E28  D7F8               	goto	u5565
  2732  001E2A  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  2733  001E2E  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2734  001E32  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2735  001E36  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2736                           
  2737                           ; BSR set to: 0
  2738                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  2739  001E3A  0100               	movlb	0	; () banked
  2740  001E3C  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  2741  001E3E  0100               	movlb	0	; () banked
  2742  001E40  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  2743  001E42  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2744  001E44  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2745  001E46  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2746                           
  2747                           ; BSR set to: 0
  2748                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  2749  001E48  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2750                           
  2751                           ;inc\CANlib.h: 483: }
  2752  001E4C  D059               	goto	l4543
  2753  001E4E                     l389:
  2754                           
  2755                           ; BSR set to: 0
  2756                           ;inc\CANlib.h: 485: else
  2757                           ;inc\CANlib.h: 487: {
  2758                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  2759  001E4E  010F               	movlb	15	; () banked
  2760  001E50  9722               	bcf	34,3,b	;volatile
  2761                           
  2762                           ; BSR set to: 15
  2763                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  2764  001E52  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  2765  001E56  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2766  001E5A  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2767  001E5E  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2768  001E62  0E04               	movlw	4
  2769  001E64  D006               	goto	u5570
  2770  001E66                     u5575:
  2771  001E66  0100               	movlb	0	; () banked
  2772  001E68  90D8               	bcf	status,0,c
  2773  001E6A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2774  001E6C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2775  001E6E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2776  001E70  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  2777  001E72                     u5570:
  2778  001E72  2EE8               	decfsz	wreg,f,c
  2779  001E74  D7F8               	goto	u5575
  2780  001E76  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  2781  001E7A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2782  001E7E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2783  001E82  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2784                           
  2785                           ; BSR set to: 0
  2786                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  2787  001E86  0100               	movlb	0	; () banked
  2788  001E88  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  2789  001E8A  0100               	movlb	0	; () banked
  2790  001E8C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  2791  001E8E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2792  001E90  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2793  001E92  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2794                           
  2795                           ; BSR set to: 0
  2796                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  2797  001E94  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2798                           
  2799                           ; BSR set to: 0
  2800                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  2801  001E98  0E07               	movlw	7
  2802  001E9A  0100               	movlb	0	; () banked
  2803  001E9C  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  2804  001E9E  0100               	movlb	0	; () banked
  2805  001EA0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  2806  001EA2  0E00               	movlw	0
  2807  001EA4  0100               	movlb	0	; () banked
  2808  001EA6  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2809  001EA8  0100               	movlb	0	; () banked
  2810  001EAA  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2811  001EAC  0E00               	movlw	0
  2812  001EAE  0100               	movlb	0	; () banked
  2813  001EB0  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2814  001EB2  0100               	movlb	0	; () banked
  2815  001EB4  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2816  001EB6  0E00               	movlw	0
  2817  001EB8  0100               	movlb	0	; () banked
  2818  001EBA  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2819  001EBC  0100               	movlb	0	; () banked
  2820  001EBE  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2821                           
  2822                           ; BSR set to: 0
  2823                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  2824  001EC0  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  2825  001EC4  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2826  001EC8  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2827  001ECC  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2828  001ED0  0E05               	movlw	5
  2829  001ED2                     u5585:
  2830  001ED2  90D8               	bcf	status,0,c
  2831  001ED4  0100               	movlb	0	; () banked
  2832  001ED6  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  2833  001ED8  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2834  001EDA  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2835  001EDC  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2836  001EDE  2EE8               	decfsz	wreg,f,c
  2837  001EE0  D7F8               	goto	u5585
  2838  001EE2  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  2839  001EE6  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2840  001EEA  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2841  001EEE  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2842                           
  2843                           ; BSR set to: 0
  2844                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  2845  001EF2  010F               	movlb	15	; () banked
  2846  001EF4  5122               	movf	34,w,b	;volatile
  2847  001EF6  0B1F               	andlw	31
  2848  001EF8  010F               	movlb	15	; () banked
  2849  001EFA  6F22               	movwf	34,b	;volatile
  2850                           
  2851                           ; BSR set to: 15
  2852                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  2853  001EFC  C083  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  2854  001F00                     l4543:
  2855                           
  2856                           ;inc\CANlib.h: 498: }
  2857                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  2858  001F00  0100               	movlb	0	; () banked
  2859  001F02  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  2860  001F04  D003               	goto	l396
  2861                           
  2862                           ; BSR set to: 0
  2863                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  2864  001F06  010F               	movlb	15	; () banked
  2865  001F08  8120               	bsf	32,0,b	;volatile
  2866  001F0A  D002               	goto	l397
  2867  001F0C                     l396:
  2868                           
  2869                           ; BSR set to: 0
  2870                           ;inc\CANlib.h: 502: else
  2871                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  2872  001F0C  010F               	movlb	15	; () banked
  2873  001F0E  9120               	bcf	32,0,b	;volatile
  2874  001F10                     l397:
  2875                           
  2876                           ; BSR set to: 15
  2877                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  2878  001F10  0100               	movlb	0	; () banked
  2879  001F12  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  2880  001F14  D003               	goto	l398
  2881                           
  2882                           ; BSR set to: 0
  2883                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  2884  001F16  010F               	movlb	15	; () banked
  2885  001F18  8320               	bsf	32,1,b	;volatile
  2886  001F1A  D002               	goto	l4549
  2887  001F1C                     l398:
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;inc\CANlib.h: 506: else
  2891                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  2892  001F1C  010F               	movlb	15	; () banked
  2893  001F1E  9320               	bcf	32,1,b	;volatile
  2894  001F20                     l4549:
  2895                           
  2896                           ; BSR set to: 15
  2897                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  2898  001F20  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  2899  001F24  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2900  001F28  50DF               	movf	indf2,w,c
  2901  001F2A  010F               	movlb	15	; () banked
  2902  001F2C  6F26               	movwf	38,b	;volatile
  2903                           
  2904                           ; BSR set to: 15
  2905                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  2906  001F2E  0100               	movlb	0	; () banked
  2907  001F30  EE20 F001          	lfsr	2,1
  2908  001F34  517B               	movf	CANsendMessage@data& (0+255),w,b
  2909  001F36  26D9               	addwf	fsr2l,f,c
  2910  001F38  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2911  001F3A  22DA               	addwfc	fsr2h,f,c
  2912  001F3C  50DF               	movf	indf2,w,c
  2913  001F3E  010F               	movlb	15	; () banked
  2914  001F40  6F27               	movwf	39,b	;volatile
  2915                           
  2916                           ; BSR set to: 15
  2917                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  2918  001F42  0100               	movlb	0	; () banked
  2919  001F44  EE20 F002          	lfsr	2,2
  2920  001F48  517B               	movf	CANsendMessage@data& (0+255),w,b
  2921  001F4A  26D9               	addwf	fsr2l,f,c
  2922  001F4C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2923  001F4E  22DA               	addwfc	fsr2h,f,c
  2924  001F50  50DF               	movf	indf2,w,c
  2925  001F52  010F               	movlb	15	; () banked
  2926  001F54  6F28               	movwf	40,b	;volatile
  2927                           
  2928                           ; BSR set to: 15
  2929                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  2930  001F56  0100               	movlb	0	; () banked
  2931  001F58  EE20 F003          	lfsr	2,3
  2932  001F5C  517B               	movf	CANsendMessage@data& (0+255),w,b
  2933  001F5E  26D9               	addwf	fsr2l,f,c
  2934  001F60  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2935  001F62  22DA               	addwfc	fsr2h,f,c
  2936  001F64  50DF               	movf	indf2,w,c
  2937  001F66  010F               	movlb	15	; () banked
  2938  001F68  6F29               	movwf	41,b	;volatile
  2939                           
  2940                           ; BSR set to: 15
  2941                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  2942  001F6A  0100               	movlb	0	; () banked
  2943  001F6C  EE20 F004          	lfsr	2,4
  2944  001F70  517B               	movf	CANsendMessage@data& (0+255),w,b
  2945  001F72  26D9               	addwf	fsr2l,f,c
  2946  001F74  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2947  001F76  22DA               	addwfc	fsr2h,f,c
  2948  001F78  50DF               	movf	indf2,w,c
  2949  001F7A  010F               	movlb	15	; () banked
  2950  001F7C  6F2A               	movwf	42,b	;volatile
  2951                           
  2952                           ; BSR set to: 15
  2953                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  2954  001F7E  0100               	movlb	0	; () banked
  2955  001F80  EE20 F005          	lfsr	2,5
  2956  001F84  517B               	movf	CANsendMessage@data& (0+255),w,b
  2957  001F86  26D9               	addwf	fsr2l,f,c
  2958  001F88  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2959  001F8A  22DA               	addwfc	fsr2h,f,c
  2960  001F8C  50DF               	movf	indf2,w,c
  2961  001F8E  010F               	movlb	15	; () banked
  2962  001F90  6F2B               	movwf	43,b	;volatile
  2963                           
  2964                           ; BSR set to: 15
  2965                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  2966  001F92  0100               	movlb	0	; () banked
  2967  001F94  EE20 F006          	lfsr	2,6
  2968  001F98  517B               	movf	CANsendMessage@data& (0+255),w,b
  2969  001F9A  26D9               	addwf	fsr2l,f,c
  2970  001F9C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2971  001F9E  22DA               	addwfc	fsr2h,f,c
  2972  001FA0  50DF               	movf	indf2,w,c
  2973  001FA2  010F               	movlb	15	; () banked
  2974  001FA4  6F2C               	movwf	44,b	;volatile
  2975                           
  2976                           ; BSR set to: 15
  2977                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  2978  001FA6  0100               	movlb	0	; () banked
  2979  001FA8  EE20 F007          	lfsr	2,7
  2980  001FAC  517B               	movf	CANsendMessage@data& (0+255),w,b
  2981  001FAE  26D9               	addwf	fsr2l,f,c
  2982  001FB0  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2983  001FB2  22DA               	addwfc	fsr2h,f,c
  2984  001FB4  50DF               	movf	indf2,w,c
  2985  001FB6  010F               	movlb	15	; () banked
  2986  001FB8  6F2D               	movwf	45,b	;volatile
  2987                           
  2988                           ; BSR set to: 15
  2989                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  2990  001FBA  010F               	movlb	15	; () banked
  2991  001FBC  8720               	bsf	32,3,b	;volatile
  2992                           
  2993                           ; BSR set to: 15
  2994                           ;inc\CANlib.h: 520: return;
  2995  001FBE  0012               	return	
  2996  001FC0                     __end_of_CANsendMessage:
  2997                           	opt stack 0
  2998                           tblptru	equ	0xFF8
  2999                           tblptrh	equ	0xFF7
  3000                           tblptrl	equ	0xFF6
  3001                           tablat	equ	0xFF5
  3002                           postinc0	equ	0xFEE
  3003                           wreg	equ	0xFE8
  3004                           indf2	equ	0xFDF
  3005                           postinc2	equ	0xFDE
  3006                           postdec2	equ	0xFDD
  3007                           fsr2h	equ	0xFDA
  3008                           fsr2l	equ	0xFD9
  3009                           status	equ	0xFD8
  3010                           
  3011 ;; *************** function _CANisTxReady *****************
  3012 ;; Defined at:
  3013 ;;		line 1154 in file "../../Scuola/Triennio/sistemi/4^/PIC/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;		None
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;		None
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  1    wreg      unsigned char 
  3020 ;; Registers used:
  3021 ;;		wreg, status,2
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3028 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3030 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3031 ;;Total ram usage:        1 bytes
  3032 ;; Hardware stack levels used:    1
  3033 ;; Hardware stack levels required when called:    4
  3034 ;; This function calls:
  3035 ;;		Nothing
  3036 ;; This function is called by:
  3037 ;;		_park_search
  3038 ;;		_can_send
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042                           	psect	text5
  3043  004D9A                     __ptext5:
  3044                           	opt stack 0
  3045  004D9A                     _CANisTxReady:
  3046                           	opt stack 25
  3047                           
  3048                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  3049                           
  3050                           ; BSR set to: 15
  3051                           ;incstack = 0
  3052  004D9A  0E01               	movlw	1
  3053  004D9C  0100               	movlb	0	; () banked
  3054  004D9E  6F77               	movwf	_CANisTxReady$2808& (0+255),b
  3055                           
  3056                           ; BSR set to: 0
  3057  004DA0  010F               	movlb	15	; () banked
  3058  004DA2  A740               	btfss	64,3,b	;volatile
  3059  004DA4  D009               	goto	l550
  3060                           
  3061                           ; BSR set to: 15
  3062  004DA6  010F               	movlb	15	; () banked
  3063  004DA8  A730               	btfss	48,3,b	;volatile
  3064  004DAA  D006               	goto	l550
  3065                           
  3066                           ; BSR set to: 15
  3067  004DAC  010F               	movlb	15	; () banked
  3068  004DAE  A720               	btfss	32,3,b	;volatile
  3069  004DB0  D003               	goto	l550
  3070                           
  3071                           ; BSR set to: 15
  3072  004DB2  0E00               	movlw	0
  3073  004DB4  0100               	movlb	0	; () banked
  3074  004DB6  6F77               	movwf	_CANisTxReady$2808& (0+255),b
  3075  004DB8                     l550:
  3076  004DB8  0100               	movlb	0	; () banked
  3077  004DBA  5177               	movf	_CANisTxReady$2808& (0+255),w,b
  3078  004DBC  0012               	return	
  3079  004DBE                     __end_of_CANisTxReady:
  3080                           	opt stack 0
  3081                           tblptru	equ	0xFF8
  3082                           tblptrh	equ	0xFF7
  3083                           tblptrl	equ	0xFF6
  3084                           tablat	equ	0xFF5
  3085                           postinc0	equ	0xFEE
  3086                           wreg	equ	0xFE8
  3087                           indf2	equ	0xFDF
  3088                           postinc2	equ	0xFDE
  3089                           postdec2	equ	0xFDD
  3090                           fsr2h	equ	0xFDA
  3091                           fsr2l	equ	0xFD9
  3092                           status	equ	0xFD8
  3093                           
  3094 ;; *************** function _parallelo *****************
  3095 ;; Defined at:
  3096 ;;		line 235 in file "parcheggio.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;		None
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;		None
  3101 ;; Return value:  Size  Location     Type
  3102 ;;		None               void
  3103 ;; Registers used:
  3104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3112 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3113 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3114 ;;Total ram usage:        2 bytes
  3115 ;; Hardware stack levels used:    1
  3116 ;; Hardware stack levels required when called:    8
  3117 ;; This function calls:
  3118 ;;		___fladd
  3119 ;;		___fldiv
  3120 ;;		___flge
  3121 ;;		___flmul
  3122 ;;		___fltol
  3123 ;;		___xxtofl
  3124 ;;		_abs
  3125 ;;		_asin
  3126 ;;		_sqrt
  3127 ;; This function is called by:
  3128 ;;		_main
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131                           
  3132                           	psect	text6
  3133  003EA6                     __ptext6:
  3134                           	opt stack 0
  3135  003EA6                     _parallelo:
  3136                           	opt stack 22
  3137                           
  3138                           ;parcheggio.c: 236: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  3139                           
  3140                           ; BSR set to: 0
  3141                           ;incstack = 0
  3142  003EA6  EE20  F026         	lfsr	2,_sensor_distance+2	;volatile
  3143  003EAA  CFDE F176          	movff	postinc2,??_parallelo
  3144  003EAE  CFDD F177          	movff	postdec2,??_parallelo+1
  3145  003EB2  0101               	movlb	1	; () banked
  3146  003EB4  1F76               	comf	??_parallelo& (0+255),f,b
  3147  003EB6  1F77               	comf	(??_parallelo+1)& (0+255),f,b
  3148  003EB8  4B76               	infsnz	??_parallelo& (0+255),f,b
  3149  003EBA  2B77               	incf	(??_parallelo+1)& (0+255),f,b
  3150  003EBC  5024               	movf	_sensor_distance,w,c	;volatile
  3151  003EBE  0101               	movlb	1	; () banked
  3152  003EC0  2576               	addwf	??_parallelo& (0+255),w,b
  3153  003EC2  0100               	movlb	0	; () banked
  3154  003EC4  6F77               	movwf	abs@a& (0+255),b
  3155  003EC6  5025               	movf	_sensor_distance+1,w,c	;volatile
  3156  003EC8  0101               	movlb	1	; () banked
  3157  003ECA  2177               	addwfc	(??_parallelo+1)& (0+255),w,b
  3158  003ECC  0100               	movlb	0	; () banked
  3159  003ECE  6F78               	movwf	(abs@a+1)& (0+255),b
  3160  003ED0  ECB7  F026         	call	_abs	;wreg free
  3161  003ED4  0100               	movlb	0	; () banked
  3162  003ED6  C077  F07B         	movff	?_abs,___xxtofl@val
  3163  003EDA  0100               	movlb	0	; () banked
  3164  003EDC  C078  F07C         	movff	?_abs+1,___xxtofl@val+1
  3165  003EE0  0100               	movlb	0	; () banked
  3166  003EE2  0E00               	movlw	0
  3167  003EE4  BF7C               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  3168  003EE6  0EFF               	movlw	-1
  3169  003EE8  6F7D               	movwf	(___xxtofl@val+2)& (0+255),b
  3170  003EEA  6F7E               	movwf	(___xxtofl@val+3)& (0+255),b
  3171  003EEC  0E01               	movlw	1
  3172  003EEE  EC67  F020         	call	___xxtofl
  3173  003EF2  C07B  F0D1         	movff	?___xxtofl,_alignment_gap
  3174  003EF6  C07C  F0D2         	movff	?___xxtofl+1,_alignment_gap+1
  3175  003EFA  C07D  F0D3         	movff	?___xxtofl+2,_alignment_gap+2
  3176  003EFE  C07E  F0D4         	movff	?___xxtofl+3,_alignment_gap+3
  3177                           
  3178                           ;parcheggio.c: 238: if (alignment_gap < 30) {
  3179  003F02  C0D1  F0B1         	movff	_alignment_gap,___flge@ff1
  3180  003F06  C0D2  F0B2         	movff	_alignment_gap+1,___flge@ff1+1
  3181  003F0A  C0D3  F0B3         	movff	_alignment_gap+2,___flge@ff1+2
  3182  003F0E  C0D4  F0B4         	movff	_alignment_gap+3,___flge@ff1+3
  3183  003F12  0E00               	movlw	0
  3184  003F14  0100               	movlb	0	; () banked
  3185  003F16  6FB5               	movwf	___flge@ff2& (0+255),b
  3186  003F18  0E00               	movlw	0
  3187  003F1A  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  3188  003F1C  0EF0               	movlw	240
  3189  003F1E  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  3190  003F20  0E41               	movlw	65
  3191  003F22  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  3192  003F24  EC31  F022         	call	___flge	;wreg free
  3193  003F28  0100               	movlb	0	; () banked
  3194  003F2A  B0D8               	btfsc	status,0,c
  3195  003F2C  0012               	return	
  3196                           
  3197                           ; BSR set to: 0
  3198                           ;parcheggio.c: 239: if ((sensor_distance[0] < 30) && (sensor_distance[1] < 30)) {
  3199  003F2E  5025               	movf	_sensor_distance+1,w,c	;volatile
  3200  003F30  E103               	bnz	u7771
  3201  003F32  0E1E               	movlw	30
  3202  003F34  5C24               	subwf	_sensor_distance,w,c	;volatile
  3203  003F36  B0D8               	btfsc	status,0,c
  3204  003F38                     u7771:
  3205  003F38  0012               	return	
  3206                           
  3207                           ; BSR set to: 0
  3208  003F3A  5027               	movf	_sensor_distance+3,w,c	;volatile
  3209  003F3C  E103               	bnz	u7781
  3210  003F3E  0E1E               	movlw	30
  3211  003F40  5C26               	subwf	_sensor_distance+2,w,c	;volatile
  3212  003F42  B0D8               	btfsc	status,0,c
  3213  003F44                     u7781:
  3214  003F44  0012               	return	
  3215                           
  3216                           ; BSR set to: 0
  3217                           ;parcheggio.c: 240: steering_correction = alignment_gap / 120389719028371984721;
  3218  003F46  0E91               	movlw	145
  3219  003F48  0100               	movlb	0	; () banked
  3220  003F4A  6F7B               	movwf	___fldiv@a& (0+255),b
  3221  003F4C  0E32               	movlw	50
  3222  003F4E  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  3223  003F50  0E2F               	movlw	47
  3224  003F52  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  3225  003F54  0E4F               	movlw	79
  3226  003F56  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  3227  003F58  C0D1  F077         	movff	_alignment_gap,___fldiv@b
  3228  003F5C  C0D2  F078         	movff	_alignment_gap+1,___fldiv@b+1
  3229  003F60  C0D3  F079         	movff	_alignment_gap+2,___fldiv@b+2
  3230  003F64  C0D4  F07A         	movff	_alignment_gap+3,___fldiv@b+3
  3231  003F68  ECF2  F018         	call	___fldiv	;wreg free
  3232  003F6C  C077  F090         	movff	?___fldiv,___fltol@f1
  3233  003F70  C078  F091         	movff	?___fldiv+1,___fltol@f1+1
  3234  003F74  C079  F092         	movff	?___fldiv+2,___fltol@f1+2
  3235  003F78  C07A  F093         	movff	?___fldiv+3,___fltol@f1+3
  3236  003F7C  EC36  F024         	call	___fltol	;wreg free
  3237  003F80  0100               	movlb	0	; () banked
  3238  003F82  5190               	movf	?___fltol& (0+255),w,b
  3239  003F84  0100               	movlb	0	; () banked
  3240  003F86  6FE5               	movwf	_steering_correction& (0+255),b
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;parcheggio.c: 242: x = ((1024) + (alignment_gap * alignment_gap));
  3244  003F88  C0D1  F094         	movff	_alignment_gap,___flmul@a
  3245  003F8C  C0D2  F095         	movff	_alignment_gap+1,___flmul@a+1
  3246  003F90  C0D3  F096         	movff	_alignment_gap+2,___flmul@a+2
  3247  003F94  C0D4  F097         	movff	_alignment_gap+3,___flmul@a+3
  3248  003F98  C0D1  F090         	movff	_alignment_gap,___flmul@b
  3249  003F9C  C0D2  F091         	movff	_alignment_gap+1,___flmul@b+1
  3250  003FA0  C0D3  F092         	movff	_alignment_gap+2,___flmul@b+2
  3251  003FA4  C0D4  F093         	movff	_alignment_gap+3,___flmul@b+3
  3252  003FA8  ECBA  F014         	call	___flmul	;wreg free
  3253  003FAC  C090  F0AD         	movff	?___flmul,___fladd@b
  3254  003FB0  C091  F0AE         	movff	?___flmul+1,___fladd@b+1
  3255  003FB4  C092  F0AF         	movff	?___flmul+2,___fladd@b+2
  3256  003FB8  C093  F0B0         	movff	?___flmul+3,___fladd@b+3
  3257  003FBC  0E00               	movlw	0
  3258  003FBE  0100               	movlb	0	; () banked
  3259  003FC0  6FB1               	movwf	___fladd@a& (0+255),b
  3260  003FC2  0E00               	movlw	0
  3261  003FC4  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  3262  003FC6  0E80               	movlw	128
  3263  003FC8  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  3264  003FCA  0E44               	movlw	68
  3265  003FCC  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  3266  003FCE  EC66  F012         	call	___fladd	;wreg free
  3267  003FD2  C0AD  F0D5         	movff	?___fladd,_x
  3268  003FD6  C0AE  F0D6         	movff	?___fladd+1,_x+1
  3269  003FDA  C0AF  F0D7         	movff	?___fladd+2,_x+2
  3270  003FDE  C0B0  F0D8         	movff	?___fladd+3,_x+3
  3271                           
  3272                           ;parcheggio.c: 243: x = sqrt(x);
  3273  003FE2  C0D5  F0C1         	movff	_x,sqrt@a
  3274  003FE6  C0D6  F0C2         	movff	_x+1,sqrt@a+1
  3275  003FEA  C0D7  F0C3         	movff	_x+2,sqrt@a+2
  3276  003FEE  C0D8  F0C4         	movff	_x+3,sqrt@a+3
  3277  003FF2  EC0D  F017         	call	_sqrt	;wreg free
  3278  003FF6  C0C1  F0D5         	movff	?_sqrt,_x
  3279  003FFA  C0C2  F0D6         	movff	?_sqrt+1,_x+1
  3280  003FFE  C0C3  F0D7         	movff	?_sqrt+2,_x+2
  3281  004002  C0C4  F0D8         	movff	?_sqrt+3,_x+3
  3282                           
  3283                           ;parcheggio.c: 244: z = ((alignment_gap) / x);
  3284  004006  C0D1  F077         	movff	_alignment_gap,___fldiv@b
  3285  00400A  C0D2  F078         	movff	_alignment_gap+1,___fldiv@b+1
  3286  00400E  C0D3  F079         	movff	_alignment_gap+2,___fldiv@b+2
  3287  004012  C0D4  F07A         	movff	_alignment_gap+3,___fldiv@b+3
  3288  004016  C0D5  F07B         	movff	_x,___fldiv@a
  3289  00401A  C0D6  F07C         	movff	_x+1,___fldiv@a+1
  3290  00401E  C0D7  F07D         	movff	_x+2,___fldiv@a+2
  3291  004022  C0D8  F07E         	movff	_x+3,___fldiv@a+3
  3292  004026  ECF2  F018         	call	___fldiv	;wreg free
  3293  00402A  C077  F0D9         	movff	?___fldiv,_z
  3294  00402E  C078  F0DA         	movff	?___fldiv+1,_z+1
  3295  004032  C079  F0DB         	movff	?___fldiv+2,_z+2
  3296  004036  C07A  F0DC         	movff	?___fldiv+3,_z+3
  3297                           
  3298                           ;parcheggio.c: 245: z = asin(z);
  3299  00403A  C0D9  F15E         	movff	_z,asin@x
  3300  00403E  C0DA  F15F         	movff	_z+1,asin@x+1
  3301  004042  C0DB  F160         	movff	_z+2,asin@x+2
  3302  004046  C0DC  F161         	movff	_z+3,asin@x+3
  3303  00404A  ECA1  F01C         	call	_asin	;wreg free
  3304  00404E  C15E  F0D9         	movff	?_asin,_z
  3305  004052  C15F  F0DA         	movff	?_asin+1,_z+1
  3306  004056  C160  F0DB         	movff	?_asin+2,_z+2
  3307  00405A  C161  F0DC         	movff	?_asin+3,_z+3
  3308                           
  3309                           ;parcheggio.c: 246: z = z / 3.14159265358979323846 * 180;
  3310  00405E  0EDB               	movlw	219
  3311  004060  0100               	movlb	0	; () banked
  3312  004062  6F7B               	movwf	___fldiv@a& (0+255),b
  3313  004064  0E0F               	movlw	15
  3314  004066  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  3315  004068  0E49               	movlw	73
  3316  00406A  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  3317  00406C  0E40               	movlw	64
  3318  00406E  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  3319  004070  C0D9  F077         	movff	_z,___fldiv@b
  3320  004074  C0DA  F078         	movff	_z+1,___fldiv@b+1
  3321  004078  C0DB  F079         	movff	_z+2,___fldiv@b+2
  3322  00407C  C0DC  F07A         	movff	_z+3,___fldiv@b+3
  3323  004080  ECF2  F018         	call	___fldiv	;wreg free
  3324  004084  C077  F090         	movff	?___fldiv,___flmul@b
  3325  004088  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  3326  00408C  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  3327  004090  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  3328  004094  0E00               	movlw	0
  3329  004096  0100               	movlb	0	; () banked
  3330  004098  6F94               	movwf	___flmul@a& (0+255),b
  3331  00409A  0E00               	movlw	0
  3332  00409C  6F95               	movwf	(___flmul@a+1)& (0+255),b
  3333  00409E  0E34               	movlw	52
  3334  0040A0  6F96               	movwf	(___flmul@a+2)& (0+255),b
  3335  0040A2  0E43               	movlw	67
  3336  0040A4  6F97               	movwf	(___flmul@a+3)& (0+255),b
  3337  0040A6  ECBA  F014         	call	___flmul	;wreg free
  3338  0040AA  C090  F0D9         	movff	?___flmul,_z
  3339  0040AE  C091  F0DA         	movff	?___flmul+1,_z+1
  3340  0040B2  C092  F0DB         	movff	?___flmul+2,_z+2
  3341  0040B6  C093  F0DC         	movff	?___flmul+3,_z+3
  3342                           
  3343                           ;parcheggio.c: 247: if (sensor_distance[0] > sensor_distance[1]) {
  3344  0040BA  5024               	movf	_sensor_distance,w,c	;volatile
  3345  0040BC  5C26               	subwf	_sensor_distance+2,w,c	;volatile
  3346  0040BE  5025               	movf	_sensor_distance+1,w,c	;volatile
  3347  0040C0  5827               	subwfb	_sensor_distance+3,w,c	;volatile
  3348  0040C2  B0D8               	btfsc	status,0,c
  3349  0040C4  D002               	goto	l720
  3350                           
  3351                           ;parcheggio.c: 248: steering_correction_dir = 0;
  3352  0040C6  9E45               	bcf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
  3353                           
  3354                           ;parcheggio.c: 250: } else {
  3355  0040C8  0012               	return	
  3356  0040CA                     l720:
  3357                           
  3358                           ;parcheggio.c: 251: steering_correction_dir = 1;
  3359  0040CA  8E45               	bsf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
  3360                           
  3361                           ;parcheggio.c: 252: }
  3362                           ;parcheggio.c: 253: }
  3363                           ;parcheggio.c: 254: } else {
  3364  0040CC  0012               	return	
  3365  0040CE                     __end_of_parallelo:
  3366                           	opt stack 0
  3367                           tblptru	equ	0xFF8
  3368                           tblptrh	equ	0xFF7
  3369                           tblptrl	equ	0xFF6
  3370                           tablat	equ	0xFF5
  3371                           postinc0	equ	0xFEE
  3372                           wreg	equ	0xFE8
  3373                           indf2	equ	0xFDF
  3374                           postinc2	equ	0xFDE
  3375                           postdec2	equ	0xFDD
  3376                           fsr2h	equ	0xFDA
  3377                           fsr2l	equ	0xFD9
  3378                           status	equ	0xFD8
  3379                           
  3380 ;; *************** function _asin *****************
  3381 ;; Defined at:
  3382 ;;		line 9 in file "P:\Programmi\Microchip\xc8\v1.35\sources\common\asin.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;  x               4   21[BANK1 ] unsigned char 
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;  y               4   37[BANK1 ] unsigned char 
  3387 ;;  sgn             4   25[BANK1 ] unsigned char 
  3388 ;; Return value:  Size  Location     Type
  3389 ;;                  4   21[BANK1 ] unsigned char 
  3390 ;; Registers used:
  3391 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3392 ;; Tracked objects:
  3393 ;;		On entry : 0/0
  3394 ;;		On exit  : 0/0
  3395 ;;		Unchanged: 0/0
  3396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3397 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3398 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  3399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3400 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0
  3401 ;;Total ram usage:       24 bytes
  3402 ;; Hardware stack levels used:    1
  3403 ;; Hardware stack levels required when called:    7
  3404 ;; This function calls:
  3405 ;;		___fladd
  3406 ;;		___fldiv
  3407 ;;		___flge
  3408 ;;		___flmul
  3409 ;;		___flneg
  3410 ;;		_atan
  3411 ;;		_fabs
  3412 ;;		_sqrt
  3413 ;; This function is called by:
  3414 ;;		_parallelo
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           
  3418                           	psect	text7
  3419  003942                     __ptext7:
  3420                           	opt stack 0
  3421  003942                     _asin:
  3422                           	opt stack 22
  3423                           
  3424                           ;incstack = 0
  3425  003942  0E00               	movlw	0
  3426  003944  0100               	movlb	0	; () banked
  3427  003946  6FB1               	movwf	___flge@ff1& (0+255),b
  3428  003948  0E00               	movlw	0
  3429  00394A  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  3430  00394C  0E80               	movlw	128
  3431  00394E  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  3432  003950  0E3F               	movlw	63
  3433  003952  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  3434  003954  C15E  F0AD         	movff	asin@x,fabs@d
  3435  003958  C15F  F0AE         	movff	asin@x+1,fabs@d+1
  3436  00395C  C160  F0AF         	movff	asin@x+2,fabs@d+2
  3437  003960  C161  F0B0         	movff	asin@x+3,fabs@d+3
  3438  003964  EC7C  F026         	call	_fabs	;wreg free
  3439  003968  C0AD  F0B5         	movff	?_fabs,___flge@ff2
  3440  00396C  C0AE  F0B6         	movff	?_fabs+1,___flge@ff2+1
  3441  003970  C0AF  F0B7         	movff	?_fabs+2,___flge@ff2+2
  3442  003974  C0B0  F0B8         	movff	?_fabs+3,___flge@ff2+3
  3443  003978  EC31  F022         	call	___flge	;wreg free
  3444  00397C  0100               	movlb	0	; () banked
  3445  00397E  B0D8               	btfsc	status,0,c
  3446  003980  D00F               	goto	l6003
  3447                           
  3448                           ; BSR set to: 0
  3449  003982  0E00               	movlw	0
  3450  003984  0101               	movlb	1	; () banked
  3451  003986  6F19               	movwf	(_errno+1)& (0+255),b
  3452  003988  0E21               	movlw	33
  3453  00398A  6F18               	movwf	_errno& (0+255),b
  3454  00398C  0E00               	movlw	0
  3455  00398E  0101               	movlb	1	; () banked
  3456  003990  6F5E               	movwf	?_asin& (0+255),b
  3457  003992  0E00               	movlw	0
  3458  003994  6F5F               	movwf	(?_asin+1)& (0+255),b
  3459  003996  0E00               	movlw	0
  3460  003998  6F60               	movwf	(?_asin+2)& (0+255),b
  3461  00399A  0E00               	movlw	0
  3462  00399C  6F61               	movwf	(?_asin+3)& (0+255),b
  3463                           
  3464                           ; BSR set to: 1
  3465  00399E  0012               	return	
  3466  0039A0                     l6003:
  3467  0039A0  0E00               	movlw	0
  3468  0039A2  0101               	movlb	1	; () banked
  3469  0039A4  6F62               	movwf	asin@sgn& (0+255),b
  3470  0039A6  0E00               	movlw	0
  3471  0039A8  6F63               	movwf	(asin@sgn+1)& (0+255),b
  3472  0039AA  0E80               	movlw	128
  3473  0039AC  6F64               	movwf	(asin@sgn+2)& (0+255),b
  3474  0039AE  0E3F               	movlw	63
  3475  0039B0  6F65               	movwf	(asin@sgn+3)& (0+255),b
  3476                           
  3477                           ; BSR set to: 1
  3478  0039B2  C15E  F094         	movff	asin@x,___flmul@a
  3479  0039B6  C15F  F095         	movff	asin@x+1,___flmul@a+1
  3480  0039BA  C160  F096         	movff	asin@x+2,___flmul@a+2
  3481  0039BE  C161  F097         	movff	asin@x+3,___flmul@a+3
  3482  0039C2  C15E  F090         	movff	asin@x,___flmul@b
  3483  0039C6  C15F  F091         	movff	asin@x+1,___flmul@b+1
  3484  0039CA  C160  F092         	movff	asin@x+2,___flmul@b+2
  3485  0039CE  C161  F093         	movff	asin@x+3,___flmul@b+3
  3486  0039D2  ECBA  F014         	call	___flmul	;wreg free
  3487  0039D6  C090  F0A9         	movff	?___flmul,___flneg@f1
  3488  0039DA  C091  F0AA         	movff	?___flmul+1,___flneg@f1+1
  3489  0039DE  C092  F0AB         	movff	?___flmul+2,___flneg@f1+2
  3490  0039E2  C093  F0AC         	movff	?___flmul+3,___flneg@f1+3
  3491  0039E6  EC9B  F026         	call	___flneg	;wreg free
  3492  0039EA  C0A9  F0AD         	movff	?___flneg,___fladd@b
  3493  0039EE  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  3494  0039F2  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  3495  0039F6  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  3496  0039FA  0E00               	movlw	0
  3497  0039FC  0100               	movlb	0	; () banked
  3498  0039FE  6FB1               	movwf	___fladd@a& (0+255),b
  3499  003A00  0E00               	movlw	0
  3500  003A02  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  3501  003A04  0E80               	movlw	128
  3502  003A06  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  3503  003A08  0E3F               	movlw	63
  3504  003A0A  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  3505  003A0C  EC66  F012         	call	___fladd	;wreg free
  3506  003A10  C0AD  F0C1         	movff	?___fladd,sqrt@a
  3507  003A14  C0AE  F0C2         	movff	?___fladd+1,sqrt@a+1
  3508  003A18  C0AF  F0C3         	movff	?___fladd+2,sqrt@a+2
  3509  003A1C  C0B0  F0C4         	movff	?___fladd+3,sqrt@a+3
  3510  003A20  EC0D  F017         	call	_sqrt	;wreg free
  3511  003A24  C0C1  F16E         	movff	?_sqrt,asin@y
  3512  003A28  C0C2  F16F         	movff	?_sqrt+1,asin@y+1
  3513  003A2C  C0C3  F170         	movff	?_sqrt+2,asin@y+2
  3514  003A30  C0C4  F171         	movff	?_sqrt+3,asin@y+3
  3515  003A34  C15E  F0AD         	movff	asin@x,fabs@d
  3516  003A38  C15F  F0AE         	movff	asin@x+1,fabs@d+1
  3517  003A3C  C160  F0AF         	movff	asin@x+2,fabs@d+2
  3518  003A40  C161  F0B0         	movff	asin@x+3,fabs@d+3
  3519  003A44  EC7C  F026         	call	_fabs	;wreg free
  3520  003A48  C0AD  F0B1         	movff	?_fabs,___flge@ff1
  3521  003A4C  C0AE  F0B2         	movff	?_fabs+1,___flge@ff1+1
  3522  003A50  C0AF  F0B3         	movff	?_fabs+2,___flge@ff1+2
  3523  003A54  C0B0  F0B4         	movff	?_fabs+3,___flge@ff1+3
  3524  003A58  0E8F               	movlw	143
  3525  003A5A  0100               	movlb	0	; () banked
  3526  003A5C  6FB5               	movwf	___flge@ff2& (0+255),b
  3527  003A5E  0EC2               	movlw	194
  3528  003A60  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  3529  003A62  0E35               	movlw	53
  3530  003A64  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  3531  003A66  0E3F               	movlw	63
  3532  003A68  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  3533  003A6A  EC31  F022         	call	___flge	;wreg free
  3534  003A6E  0100               	movlb	0	; () banked
  3535  003A70  B0D8               	btfsc	status,0,c
  3536  003A72  D02D               	goto	l6015
  3537                           
  3538                           ; BSR set to: 0
  3539  003A74  C15E  F077         	movff	asin@x,___fldiv@b
  3540  003A78  C15F  F078         	movff	asin@x+1,___fldiv@b+1
  3541  003A7C  C160  F079         	movff	asin@x+2,___fldiv@b+2
  3542  003A80  C161  F07A         	movff	asin@x+3,___fldiv@b+3
  3543  003A84  C16E  F07B         	movff	asin@y,___fldiv@a
  3544  003A88  C16F  F07C         	movff	asin@y+1,___fldiv@a+1
  3545  003A8C  C170  F07D         	movff	asin@y+2,___fldiv@a+2
  3546  003A90  C171  F07E         	movff	asin@y+3,___fldiv@a+3
  3547  003A94  ECF2  F018         	call	___fldiv	;wreg free
  3548  003A98  C077  F172         	movff	?___fldiv,_asin$3617
  3549  003A9C  C078  F173         	movff	?___fldiv+1,_asin$3617+1
  3550  003AA0  C079  F174         	movff	?___fldiv+2,_asin$3617+2
  3551  003AA4  C07A  F175         	movff	?___fldiv+3,_asin$3617+3
  3552  003AA8  C172  F149         	movff	_asin$3617,atan@f
  3553  003AAC  C173  F14A         	movff	_asin$3617+1,atan@f+1
  3554  003AB0  C174  F14B         	movff	_asin$3617+2,atan@f+2
  3555  003AB4  C175  F14C         	movff	_asin$3617+3,atan@f+3
  3556  003AB8  EC2A  F01E         	call	_atan	;wreg free
  3557  003ABC  C149  F15E         	movff	?_atan,?_asin
  3558  003AC0  C14A  F15F         	movff	?_atan+1,?_asin+1
  3559  003AC4  C14B  F160         	movff	?_atan+2,?_asin+2
  3560  003AC8  C14C  F161         	movff	?_atan+3,?_asin+3
  3561  003ACC  0012               	return	
  3562  003ACE                     l6015:
  3563  003ACE  0101               	movlb	1	; () banked
  3564  003AD0  AF61               	btfss	(asin@x+3)& (0+255),7,b
  3565  003AD2  D06E               	goto	l6027
  3566                           
  3567                           ; BSR set to: 1
  3568  003AD4  C15E  F07B         	movff	asin@x,___fldiv@a
  3569  003AD8  C15F  F07C         	movff	asin@x+1,___fldiv@a+1
  3570  003ADC  C160  F07D         	movff	asin@x+2,___fldiv@a+2
  3571  003AE0  C161  F07E         	movff	asin@x+3,___fldiv@a+3
  3572  003AE4  C16E  F0A9         	movff	asin@y,___flneg@f1
  3573  003AE8  C16F  F0AA         	movff	asin@y+1,___flneg@f1+1
  3574  003AEC  C170  F0AB         	movff	asin@y+2,___flneg@f1+2
  3575  003AF0  C171  F0AC         	movff	asin@y+3,___flneg@f1+3
  3576  003AF4  EC9B  F026         	call	___flneg	;wreg free
  3577  003AF8  C0A9  F077         	movff	?___flneg,___fldiv@b
  3578  003AFC  C0AA  F078         	movff	?___flneg+1,___fldiv@b+1
  3579  003B00  C0AB  F079         	movff	?___flneg+2,___fldiv@b+2
  3580  003B04  C0AC  F07A         	movff	?___flneg+3,___fldiv@b+3
  3581  003B08  ECF2  F018         	call	___fldiv	;wreg free
  3582  003B0C  C077  F172         	movff	?___fldiv,_asin$3617
  3583  003B10  C078  F173         	movff	?___fldiv+1,_asin$3617+1
  3584  003B14  C079  F174         	movff	?___fldiv+2,_asin$3617+2
  3585  003B18  C07A  F175         	movff	?___fldiv+3,_asin$3617+3
  3586  003B1C  C172  F149         	movff	_asin$3617,atan@f
  3587  003B20  C173  F14A         	movff	_asin$3617+1,atan@f+1
  3588  003B24  C174  F14B         	movff	_asin$3617+2,atan@f+2
  3589  003B28  C175  F14C         	movff	_asin$3617+3,atan@f+3
  3590  003B2C  EC2A  F01E         	call	_atan	;wreg free
  3591  003B30  C149  F16A         	movff	?_atan,_asin$3618
  3592  003B34  C14A  F16B         	movff	?_atan+1,_asin$3618+1
  3593  003B38  C14B  F16C         	movff	?_atan+2,_asin$3618+2
  3594  003B3C  C14C  F16D         	movff	?_atan+3,_asin$3618+3
  3595  003B40  0EDB               	movlw	219
  3596  003B42  0100               	movlb	0	; () banked
  3597  003B44  6FB1               	movwf	___fladd@a& (0+255),b
  3598  003B46  0E0F               	movlw	15
  3599  003B48  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  3600  003B4A  0EC9               	movlw	201
  3601  003B4C  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  3602  003B4E  0E3F               	movlw	63
  3603  003B50  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  3604  003B52  C16A  F0A9         	movff	_asin$3618,___flneg@f1
  3605  003B56  C16B  F0AA         	movff	_asin$3618+1,___flneg@f1+1
  3606  003B5A  C16C  F0AB         	movff	_asin$3618+2,___flneg@f1+2
  3607  003B5E  C16D  F0AC         	movff	_asin$3618+3,___flneg@f1+3
  3608  003B62  EC9B  F026         	call	___flneg	;wreg free
  3609  003B66  C0A9  F0AD         	movff	?___flneg,___fladd@b
  3610  003B6A  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  3611  003B6E  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  3612  003B72  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  3613  003B76  EC66  F012         	call	___fladd	;wreg free
  3614  003B7A  C0AD  F166         	movff	?___fladd,_asin$3619
  3615  003B7E  C0AE  F167         	movff	?___fladd+1,_asin$3619+1
  3616  003B82  C0AF  F168         	movff	?___fladd+2,_asin$3619+2
  3617  003B86  C0B0  F169         	movff	?___fladd+3,_asin$3619+3
  3618  003B8A  C166  F0A9         	movff	_asin$3619,___flneg@f1
  3619  003B8E  C167  F0AA         	movff	_asin$3619+1,___flneg@f1+1
  3620  003B92  C168  F0AB         	movff	_asin$3619+2,___flneg@f1+2
  3621  003B96  C169  F0AC         	movff	_asin$3619+3,___flneg@f1+3
  3622  003B9A  EC9B  F026         	call	___flneg	;wreg free
  3623  003B9E  C0A9  F15E         	movff	?___flneg,?_asin
  3624  003BA2  C0AA  F15F         	movff	?___flneg+1,?_asin+1
  3625  003BA6  C0AB  F160         	movff	?___flneg+2,?_asin+2
  3626  003BAA  C0AC  F161         	movff	?___flneg+3,?_asin+3
  3627  003BAE  0012               	return	
  3628  003BB0                     l6027:
  3629  003BB0  C15E  F07B         	movff	asin@x,___fldiv@a
  3630  003BB4  C15F  F07C         	movff	asin@x+1,___fldiv@a+1
  3631  003BB8  C160  F07D         	movff	asin@x+2,___fldiv@a+2
  3632  003BBC  C161  F07E         	movff	asin@x+3,___fldiv@a+3
  3633  003BC0  C16E  F077         	movff	asin@y,___fldiv@b
  3634  003BC4  C16F  F078         	movff	asin@y+1,___fldiv@b+1
  3635  003BC8  C170  F079         	movff	asin@y+2,___fldiv@b+2
  3636  003BCC  C171  F07A         	movff	asin@y+3,___fldiv@b+3
  3637  003BD0  ECF2  F018         	call	___fldiv	;wreg free
  3638  003BD4  C077  F172         	movff	?___fldiv,_asin$3617
  3639  003BD8  C078  F173         	movff	?___fldiv+1,_asin$3617+1
  3640  003BDC  C079  F174         	movff	?___fldiv+2,_asin$3617+2
  3641  003BE0  C07A  F175         	movff	?___fldiv+3,_asin$3617+3
  3642  003BE4  C172  F149         	movff	_asin$3617,atan@f
  3643  003BE8  C173  F14A         	movff	_asin$3617+1,atan@f+1
  3644  003BEC  C174  F14B         	movff	_asin$3617+2,atan@f+2
  3645  003BF0  C175  F14C         	movff	_asin$3617+3,atan@f+3
  3646  003BF4  EC2A  F01E         	call	_atan	;wreg free
  3647  003BF8  C149  F16A         	movff	?_atan,_asin$3618
  3648  003BFC  C14A  F16B         	movff	?_atan+1,_asin$3618+1
  3649  003C00  C14B  F16C         	movff	?_atan+2,_asin$3618+2
  3650  003C04  C14C  F16D         	movff	?_atan+3,_asin$3618+3
  3651  003C08  C16A  F0A9         	movff	_asin$3618,___flneg@f1
  3652  003C0C  C16B  F0AA         	movff	_asin$3618+1,___flneg@f1+1
  3653  003C10  C16C  F0AB         	movff	_asin$3618+2,___flneg@f1+2
  3654  003C14  C16D  F0AC         	movff	_asin$3618+3,___flneg@f1+3
  3655  003C18  EC9B  F026         	call	___flneg	;wreg free
  3656  003C1C  C0A9  F0AD         	movff	?___flneg,___fladd@b
  3657  003C20  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  3658  003C24  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  3659  003C28  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  3660  003C2C  0EDB               	movlw	219
  3661  003C2E  0100               	movlb	0	; () banked
  3662  003C30  6FB1               	movwf	___fladd@a& (0+255),b
  3663  003C32  0E0F               	movlw	15
  3664  003C34  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  3665  003C36  0EC9               	movlw	201
  3666  003C38  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  3667  003C3A  0E3F               	movlw	63
  3668  003C3C  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  3669  003C3E  EC66  F012         	call	___fladd	;wreg free
  3670  003C42  C0AD  F15E         	movff	?___fladd,?_asin
  3671  003C46  C0AE  F15F         	movff	?___fladd+1,?_asin+1
  3672  003C4A  C0AF  F160         	movff	?___fladd+2,?_asin+2
  3673  003C4E  C0B0  F161         	movff	?___fladd+3,?_asin+3
  3674  003C52  0012               	return	
  3675  003C54                     __end_of_asin:
  3676                           	opt stack 0
  3677                           tblptru	equ	0xFF8
  3678                           tblptrh	equ	0xFF7
  3679                           tblptrl	equ	0xFF6
  3680                           tablat	equ	0xFF5
  3681                           postinc0	equ	0xFEE
  3682                           wreg	equ	0xFE8
  3683                           indf2	equ	0xFDF
  3684                           postinc2	equ	0xFDE
  3685                           postdec2	equ	0xFDD
  3686                           fsr2h	equ	0xFDA
  3687                           fsr2l	equ	0xFD9
  3688                           status	equ	0xFD8
  3689                           
  3690 ;; *************** function _sqrt *****************
  3691 ;; Defined at:
  3692 ;;		line 9 in file "P:\Programmi\Microchip\xc8\v1.35\sources\common\sprcsqrt.c"
  3693 ;; Parameters:    Size  Location     Type
  3694 ;;  a               4   97[BANK0 ] unsigned char 
  3695 ;; Auto vars:     Size  Location     Type
  3696 ;;  frac            4   17[BANK1 ] unsigned long 
  3697 ;;  root            4   13[BANK1 ] struct .
  3698 ;;  grs             4    7[BANK1 ] unsigned long 
  3699 ;;  tfrac           4    2[BANK1 ] unsigned long 
  3700 ;;  exp             2   11[BANK1 ] int 
  3701 ;;  p               1    6[BANK1 ] unsigned char 
  3702 ;;  i               1    1[BANK1 ] unsigned char 
  3703 ;;  sign            1    0[BANK1 ] unsigned char 
  3704 ;; Return value:  Size  Location     Type
  3705 ;;                  4   97[BANK0 ] unsigned char 
  3706 ;; Registers used:
  3707 ;;		wreg, status,2, status,0
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3713 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3714 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
  3715 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3716 ;;      Totals:         0       8      21       0       0       0       0       0       0       0       0       0       
      +0       0
  3717 ;;Total ram usage:       29 bytes
  3718 ;; Hardware stack levels used:    1
  3719 ;; Hardware stack levels required when called:    4
  3720 ;; This function calls:
  3721 ;;		Nothing
  3722 ;; This function is called by:
  3723 ;;		_parallelo
  3724 ;;		_asin
  3725 ;; This function uses a non-reentrant model
  3726 ;;
  3727                           
  3728                           	psect	text8
  3729  002E1A                     __ptext8:
  3730                           	opt stack 0
  3731  002E1A                     _sqrt:
  3732                           	opt stack 25
  3733                           
  3734                           ;incstack = 0
  3735  002E1A  0100               	movlb	0	; () banked
  3736  002E1C  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  3737  002E1E  0B80               	andlw	128
  3738  002E20  0101               	movlb	1	; () banked
  3739  002E22  6F49               	movwf	sqrt@sign& (0+255),b
  3740  002E24  0100               	movlb	0	; () banked
  3741  002E26  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  3742  002E28  25C4               	addwf	(sqrt@a+3)& (0+255),w,b
  3743  002E2A  0101               	movlb	1	; () banked
  3744  002E2C  6F4F               	movwf	sqrt@p& (0+255),b
  3745                           
  3746                           ; BSR set to: 1
  3747  002E2E  0100               	movlb	0	; () banked
  3748  002E30  AFC3               	btfss	(sqrt@a+2)& (0+255),7,b
  3749  002E32  D002               	goto	l5875
  3750                           
  3751                           ; BSR set to: 0
  3752  002E34  0101               	movlb	1	; () banked
  3753  002E36  814F               	bsf	sqrt@p& (0+255),0,b
  3754  002E38                     l5875:
  3755  002E38  C14F  F154         	movff	sqrt@p,sqrt@exp
  3756  002E3C  0101               	movlb	1	; () banked
  3757  002E3E  6B55               	clrf	(sqrt@exp+1)& (0+255),b
  3758                           
  3759                           ; BSR set to: 1
  3760  002E40  0EFF               	movlw	255
  3761  002E42  0100               	movlb	0	; () banked
  3762  002E44  15C1               	andwf	sqrt@a& (0+255),w,b
  3763  002E46  0101               	movlb	1	; () banked
  3764  002E48  6F5A               	movwf	sqrt@frac& (0+255),b
  3765  002E4A  0EFF               	movlw	255
  3766  002E4C  0100               	movlb	0	; () banked
  3767  002E4E  15C2               	andwf	(sqrt@a+1)& (0+255),w,b
  3768  002E50  0101               	movlb	1	; () banked
  3769  002E52  6F5B               	movwf	(sqrt@frac+1)& (0+255),b
  3770  002E54  0E7F               	movlw	127
  3771  002E56  0100               	movlb	0	; () banked
  3772  002E58  15C3               	andwf	(sqrt@a+2)& (0+255),w,b
  3773  002E5A  0101               	movlb	1	; () banked
  3774  002E5C  6F5C               	movwf	(sqrt@frac+2)& (0+255),b
  3775  002E5E  0E00               	movlw	0
  3776  002E60  0100               	movlb	0	; () banked
  3777  002E62  15C4               	andwf	(sqrt@a+3)& (0+255),w,b
  3778  002E64  0101               	movlb	1	; () banked
  3779  002E66  6F5D               	movwf	(sqrt@frac+3)& (0+255),b
  3780                           
  3781                           ; BSR set to: 1
  3782  002E68  0101               	movlb	1	; () banked
  3783  002E6A  5154               	movf	sqrt@exp& (0+255),w,b
  3784  002E6C  0101               	movlb	1	; () banked
  3785  002E6E  1155               	iorwf	(sqrt@exp+1)& (0+255),w,b
  3786  002E70  B4D8               	btfsc	status,2,c
  3787  002E72  D008               	goto	l5887
  3788                           
  3789                           ; BSR set to: 1
  3790  002E74  0101               	movlb	1	; () banked
  3791  002E76  8F5C               	bsf	(sqrt@frac+2)& (0+255),7,b
  3792                           
  3793                           ; BSR set to: 1
  3794  002E78  0101               	movlb	1	; () banked
  3795  002E7A  2954               	incf	sqrt@exp& (0+255),w,b
  3796  002E7C  0101               	movlb	1	; () banked
  3797  002E7E  1155               	iorwf	(sqrt@exp+1)& (0+255),w,b
  3798  002E80  A4D8               	btfss	status,2,c
  3799  002E82  D009               	goto	l5889
  3800  002E84                     l5887:
  3801                           
  3802                           ; BSR set to: 1
  3803  002E84  0E00               	movlw	0
  3804  002E86  0101               	movlb	1	; () banked
  3805  002E88  6F5A               	movwf	sqrt@frac& (0+255),b
  3806  002E8A  0E00               	movlw	0
  3807  002E8C  6F5B               	movwf	(sqrt@frac+1)& (0+255),b
  3808  002E8E  0E00               	movlw	0
  3809  002E90  6F5C               	movwf	(sqrt@frac+2)& (0+255),b
  3810  002E92  0E00               	movlw	0
  3811  002E94  6F5D               	movwf	(sqrt@frac+3)& (0+255),b
  3812  002E96                     l5889:
  3813                           
  3814                           ; BSR set to: 1
  3815  002E96  0101               	movlb	1	; () banked
  3816  002E98  5154               	movf	sqrt@exp& (0+255),w,b
  3817  002E9A  0101               	movlb	1	; () banked
  3818  002E9C  1155               	iorwf	(sqrt@exp+1)& (0+255),w,b
  3819  002E9E  A4D8               	btfss	status,2,c
  3820  002EA0  D00A               	goto	l5895
  3821                           
  3822                           ; BSR set to: 1
  3823  002EA2  0E00               	movlw	0
  3824  002EA4  0100               	movlb	0	; () banked
  3825  002EA6  6FC1               	movwf	?_sqrt& (0+255),b
  3826  002EA8  0E00               	movlw	0
  3827  002EAA  6FC2               	movwf	(?_sqrt+1)& (0+255),b
  3828  002EAC  0E00               	movlw	0
  3829  002EAE  6FC3               	movwf	(?_sqrt+2)& (0+255),b
  3830  002EB0  0E00               	movlw	0
  3831  002EB2  6FC4               	movwf	(?_sqrt+3)& (0+255),b
  3832                           
  3833                           ; BSR set to: 0
  3834  002EB4  0012               	return	
  3835  002EB6                     l5895:
  3836  002EB6  0101               	movlb	1	; () banked
  3837  002EB8  5149               	movf	sqrt@sign& (0+255),w,b
  3838  002EBA  0101               	movlb	1	; () banked
  3839  002EBC  B4D8               	btfsc	status,2,c
  3840  002EBE  D01C               	goto	l5907
  3841                           
  3842                           ; BSR set to: 1
  3843  002EC0  0E00               	movlw	0
  3844  002EC2  0101               	movlb	1	; () banked
  3845  002EC4  6F56               	movwf	sqrt@root& (0+255),b
  3846  002EC6  0E00               	movlw	0
  3847  002EC8  6F57               	movwf	(sqrt@root+1)& (0+255),b
  3848  002ECA  0E40               	movlw	64
  3849  002ECC  6F58               	movwf	(sqrt@root+2)& (0+255),b
  3850  002ECE  0E00               	movlw	0
  3851  002ED0  6F59               	movwf	(sqrt@root+3)& (0+255),b
  3852                           
  3853                           ; BSR set to: 1
  3854  002ED2  0101               	movlb	1	; () banked
  3855  002ED4  0E80               	movlw	128
  3856  002ED6  1358               	iorwf	(sqrt@root+2)& (0+255),f,b
  3857  002ED8  0EFF               	movlw	255
  3858  002EDA  1359               	iorwf	(sqrt@root+3)& (0+255),f,b
  3859                           
  3860                           ; BSR set to: 1
  3861  002EDC  0E00               	movlw	0
  3862  002EDE  0101               	movlb	1	; () banked
  3863  002EE0  6F19               	movwf	(_errno+1)& (0+255),b
  3864  002EE2  0E21               	movlw	33
  3865  002EE4  6F18               	movwf	_errno& (0+255),b
  3866                           
  3867                           ; BSR set to: 1
  3868  002EE6  C156  F0C1         	movff	sqrt@root,?_sqrt
  3869  002EEA  C157  F0C2         	movff	sqrt@root+1,?_sqrt+1
  3870  002EEE  C158  F0C3         	movff	sqrt@root+2,?_sqrt+2
  3871  002EF2  C159  F0C4         	movff	sqrt@root+3,?_sqrt+3
  3872                           
  3873                           ; BSR set to: 1
  3874  002EF6  0012               	return	
  3875  002EF8                     l5907:
  3876                           
  3877                           ; BSR set to: 1
  3878  002EF8  0101               	movlb	1	; () banked
  3879  002EFA  2954               	incf	sqrt@exp& (0+255),w,b
  3880  002EFC  0101               	movlb	1	; () banked
  3881  002EFE  1155               	iorwf	(sqrt@exp+1)& (0+255),w,b
  3882  002F00  A4D8               	btfss	status,2,c
  3883  002F02  D012               	goto	l5915
  3884                           
  3885                           ; BSR set to: 1
  3886  002F04  0E00               	movlw	0
  3887  002F06  0101               	movlb	1	; () banked
  3888  002F08  6F56               	movwf	sqrt@root& (0+255),b
  3889  002F0A  0E00               	movlw	0
  3890  002F0C  6F57               	movwf	(sqrt@root+1)& (0+255),b
  3891  002F0E  0E80               	movlw	128
  3892  002F10  6F58               	movwf	(sqrt@root+2)& (0+255),b
  3893  002F12  0E7F               	movlw	127
  3894  002F14  6F59               	movwf	(sqrt@root+3)& (0+255),b
  3895                           
  3896                           ; BSR set to: 1
  3897  002F16  C156  F0C1         	movff	sqrt@root,?_sqrt
  3898  002F1A  C157  F0C2         	movff	sqrt@root+1,?_sqrt+1
  3899  002F1E  C158  F0C3         	movff	sqrt@root+2,?_sqrt+2
  3900  002F22  C159  F0C4         	movff	sqrt@root+3,?_sqrt+3
  3901                           
  3902                           ; BSR set to: 1
  3903  002F26  0012               	return	
  3904  002F28                     l5915:
  3905                           
  3906                           ; BSR set to: 1
  3907  002F28  0101               	movlb	1	; () banked
  3908  002F2A  0E81               	movlw	129
  3909  002F2C  2754               	addwf	sqrt@exp& (0+255),f,b
  3910  002F2E  0EFF               	movlw	255
  3911  002F30  2355               	addwfc	(sqrt@exp+1)& (0+255),f,b
  3912  002F32  0101               	movlb	1	; () banked
  3913  002F34  5154               	movf	sqrt@exp& (0+255),w,b
  3914  002F36  0B01               	andlw	1
  3915  002F38  0101               	movlb	1	; () banked
  3916  002F3A  6F4F               	movwf	sqrt@p& (0+255),b
  3917  002F3C  0101               	movlb	1	; () banked
  3918  002F3E  3555               	rlcf	(sqrt@exp+1)& (0+255),w,b
  3919  002F40  3355               	rrcf	(sqrt@exp+1)& (0+255),f,b
  3920  002F42  3354               	rrcf	sqrt@exp& (0+255),f,b
  3921  002F44  0E7F               	movlw	127
  3922  002F46  0101               	movlb	1	; () banked
  3923  002F48  2754               	addwf	sqrt@exp& (0+255),f,b
  3924  002F4A  0E00               	movlw	0
  3925  002F4C  2355               	addwfc	(sqrt@exp+1)& (0+255),f,b
  3926  002F4E  90D8               	bcf	status,0,c
  3927  002F50  0101               	movlb	1	; () banked
  3928  002F52  355A               	rlcf	sqrt@frac& (0+255),w,b
  3929  002F54  0101               	movlb	1	; () banked
  3930  002F56  6F4B               	movwf	sqrt@tfrac& (0+255),b
  3931  002F58  0101               	movlb	1	; () banked
  3932  002F5A  355B               	rlcf	(sqrt@frac+1)& (0+255),w,b
  3933  002F5C  0101               	movlb	1	; () banked
  3934  002F5E  6F4C               	movwf	(sqrt@tfrac+1)& (0+255),b
  3935  002F60  0101               	movlb	1	; () banked
  3936  002F62  355C               	rlcf	(sqrt@frac+2)& (0+255),w,b
  3937  002F64  0101               	movlb	1	; () banked
  3938  002F66  6F4D               	movwf	(sqrt@tfrac+2)& (0+255),b
  3939  002F68  0101               	movlb	1	; () banked
  3940  002F6A  355D               	rlcf	(sqrt@frac+3)& (0+255),w,b
  3941  002F6C  0101               	movlb	1	; () banked
  3942  002F6E  6F4E               	movwf	(sqrt@tfrac+3)& (0+255),b
  3943                           
  3944                           ; BSR set to: 1
  3945  002F70  0E00               	movlw	0
  3946  002F72  0101               	movlb	1	; () banked
  3947  002F74  6F5A               	movwf	sqrt@frac& (0+255),b
  3948  002F76  0E00               	movlw	0
  3949  002F78  6F5B               	movwf	(sqrt@frac+1)& (0+255),b
  3950  002F7A  0E00               	movlw	0
  3951  002F7C  6F5C               	movwf	(sqrt@frac+2)& (0+255),b
  3952  002F7E  0E00               	movlw	0
  3953  002F80  6F5D               	movwf	(sqrt@frac+3)& (0+255),b
  3954                           
  3955                           ; BSR set to: 1
  3956  002F82  0E00               	movlw	0
  3957  002F84  0101               	movlb	1	; () banked
  3958  002F86  6F50               	movwf	sqrt@grs& (0+255),b
  3959  002F88  0E00               	movlw	0
  3960  002F8A  6F51               	movwf	(sqrt@grs+1)& (0+255),b
  3961  002F8C  0E00               	movlw	0
  3962  002F8E  6F52               	movwf	(sqrt@grs+2)& (0+255),b
  3963  002F90  0E01               	movlw	1
  3964  002F92  6F53               	movwf	(sqrt@grs+3)& (0+255),b
  3965                           
  3966                           ; BSR set to: 1
  3967  002F94  0101               	movlb	1	; () banked
  3968  002F96  514F               	movf	sqrt@p& (0+255),w,b
  3969  002F98  0101               	movlb	1	; () banked
  3970  002F9A  B4D8               	btfsc	status,2,c
  3971  002F9C  D006               	goto	l5925
  3972                           
  3973                           ; BSR set to: 1
  3974  002F9E  0101               	movlb	1	; () banked
  3975  002FA0  90D8               	bcf	status,0,c
  3976  002FA2  374B               	rlcf	sqrt@tfrac& (0+255),f,b
  3977  002FA4  374C               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  3978  002FA6  374D               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  3979  002FA8  374E               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  3980  002FAA                     l5925:
  3981                           
  3982                           ; BSR set to: 1
  3983  002FAA  0E00               	movlw	0
  3984  002FAC  0101               	movlb	1	; () banked
  3985  002FAE  6F4A               	movwf	sqrt@i& (0+255),b
  3986  002FB0  D07E               	goto	l5939
  3987  002FB2                     l5927:
  3988                           
  3989                           ; BSR set to: 1
  3990  002FB2  0101               	movlb	1	; () banked
  3991  002FB4  5150               	movf	sqrt@grs& (0+255),w,b
  3992  002FB6  0101               	movlb	1	; () banked
  3993  002FB8  135A               	iorwf	sqrt@frac& (0+255),f,b
  3994  002FBA  0101               	movlb	1	; () banked
  3995  002FBC  5151               	movf	(sqrt@grs+1)& (0+255),w,b
  3996  002FBE  0101               	movlb	1	; () banked
  3997  002FC0  135B               	iorwf	(sqrt@frac+1)& (0+255),f,b
  3998  002FC2  0101               	movlb	1	; () banked
  3999  002FC4  5152               	movf	(sqrt@grs+2)& (0+255),w,b
  4000  002FC6  0101               	movlb	1	; () banked
  4001  002FC8  135C               	iorwf	(sqrt@frac+2)& (0+255),f,b
  4002  002FCA  0101               	movlb	1	; () banked
  4003  002FCC  5153               	movf	(sqrt@grs+3)& (0+255),w,b
  4004  002FCE  0101               	movlb	1	; () banked
  4005  002FD0  135D               	iorwf	(sqrt@frac+3)& (0+255),f,b
  4006  002FD2  0101               	movlb	1	; () banked
  4007  002FD4  515A               	movf	sqrt@frac& (0+255),w,b
  4008  002FD6  0101               	movlb	1	; () banked
  4009  002FD8  5D4B               	subwf	sqrt@tfrac& (0+255),w,b
  4010  002FDA  0101               	movlb	1	; () banked
  4011  002FDC  515B               	movf	(sqrt@frac+1)& (0+255),w,b
  4012  002FDE  0101               	movlb	1	; () banked
  4013  002FE0  594C               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
  4014  002FE2  0101               	movlb	1	; () banked
  4015  002FE4  515C               	movf	(sqrt@frac+2)& (0+255),w,b
  4016  002FE6  0101               	movlb	1	; () banked
  4017  002FE8  594D               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
  4018  002FEA  0101               	movlb	1	; () banked
  4019  002FEC  515D               	movf	(sqrt@frac+3)& (0+255),w,b
  4020  002FEE  0101               	movlb	1	; () banked
  4021  002FF0  594E               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
  4022  002FF2  A0D8               	btfss	status,0,c
  4023  002FF4  D021               	goto	l5931
  4024                           
  4025                           ; BSR set to: 1
  4026  002FF6  0101               	movlb	1	; () banked
  4027  002FF8  515A               	movf	sqrt@frac& (0+255),w,b
  4028  002FFA  0101               	movlb	1	; () banked
  4029  002FFC  5F4B               	subwf	sqrt@tfrac& (0+255),f,b
  4030  002FFE  0101               	movlb	1	; () banked
  4031  003000  515B               	movf	(sqrt@frac+1)& (0+255),w,b
  4032  003002  0101               	movlb	1	; () banked
  4033  003004  5B4C               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
  4034  003006  0101               	movlb	1	; () banked
  4035  003008  515C               	movf	(sqrt@frac+2)& (0+255),w,b
  4036  00300A  0101               	movlb	1	; () banked
  4037  00300C  5B4D               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
  4038  00300E  0101               	movlb	1	; () banked
  4039  003010  515D               	movf	(sqrt@frac+3)& (0+255),w,b
  4040  003012  0101               	movlb	1	; () banked
  4041  003014  5B4E               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
  4042  003016  0101               	movlb	1	; () banked
  4043  003018  5150               	movf	sqrt@grs& (0+255),w,b
  4044  00301A  0101               	movlb	1	; () banked
  4045  00301C  275A               	addwf	sqrt@frac& (0+255),f,b
  4046  00301E  0101               	movlb	1	; () banked
  4047  003020  5151               	movf	(sqrt@grs+1)& (0+255),w,b
  4048  003022  0101               	movlb	1	; () banked
  4049  003024  235B               	addwfc	(sqrt@frac+1)& (0+255),f,b
  4050  003026  0101               	movlb	1	; () banked
  4051  003028  5152               	movf	(sqrt@grs+2)& (0+255),w,b
  4052  00302A  0101               	movlb	1	; () banked
  4053  00302C  235C               	addwfc	(sqrt@frac+2)& (0+255),f,b
  4054  00302E  0101               	movlb	1	; () banked
  4055  003030  5153               	movf	(sqrt@grs+3)& (0+255),w,b
  4056  003032  0101               	movlb	1	; () banked
  4057  003034  235D               	addwfc	(sqrt@frac+3)& (0+255),f,b
  4058  003036  D01D               	goto	l5933
  4059  003038                     l5931:
  4060                           
  4061                           ; BSR set to: 1
  4062  003038  C150  F0C5         	movff	sqrt@grs,??_sqrt
  4063  00303C  C151  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  4064  003040  C152  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  4065  003044  C153  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  4066  003048  0100               	movlb	0	; () banked
  4067  00304A  1FC5               	comf	??_sqrt& (0+255),f,b
  4068  00304C  1FC6               	comf	(??_sqrt+1)& (0+255),f,b
  4069  00304E  1FC7               	comf	(??_sqrt+2)& (0+255),f,b
  4070  003050  1FC8               	comf	(??_sqrt+3)& (0+255),f,b
  4071  003052  0100               	movlb	0	; () banked
  4072  003054  51C5               	movf	??_sqrt& (0+255),w,b
  4073  003056  0101               	movlb	1	; () banked
  4074  003058  175A               	andwf	sqrt@frac& (0+255),f,b
  4075  00305A  0100               	movlb	0	; () banked
  4076  00305C  51C6               	movf	(??_sqrt+1)& (0+255),w,b
  4077  00305E  0101               	movlb	1	; () banked
  4078  003060  175B               	andwf	(sqrt@frac+1)& (0+255),f,b
  4079  003062  0100               	movlb	0	; () banked
  4080  003064  51C7               	movf	(??_sqrt+2)& (0+255),w,b
  4081  003066  0101               	movlb	1	; () banked
  4082  003068  175C               	andwf	(sqrt@frac+2)& (0+255),f,b
  4083  00306A  0100               	movlb	0	; () banked
  4084  00306C  51C8               	movf	(??_sqrt+3)& (0+255),w,b
  4085  00306E  0101               	movlb	1	; () banked
  4086  003070  175D               	andwf	(sqrt@frac+3)& (0+255),f,b
  4087  003072                     l5933:
  4088                           
  4089                           ; BSR set to: 1
  4090  003072  C150  F0C5         	movff	sqrt@grs,??_sqrt
  4091  003076  C151  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  4092  00307A  C152  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  4093  00307E  C153  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  4094  003082  0100               	movlb	0	; () banked
  4095  003084  90D8               	bcf	status,0,c
  4096  003086  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  4097  003088  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  4098  00308A  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  4099  00308C  33C5               	rrcf	??_sqrt& (0+255),f,b
  4100  00308E  C0C5  F150         	movff	??_sqrt,sqrt@grs
  4101  003092  C0C6  F151         	movff	??_sqrt+1,sqrt@grs+1
  4102  003096  C0C7  F152         	movff	??_sqrt+2,sqrt@grs+2
  4103  00309A  C0C8  F153         	movff	??_sqrt+3,sqrt@grs+3
  4104                           
  4105                           ; BSR set to: 0
  4106  00309E  0101               	movlb	1	; () banked
  4107  0030A0  90D8               	bcf	status,0,c
  4108  0030A2  374B               	rlcf	sqrt@tfrac& (0+255),f,b
  4109  0030A4  374C               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  4110  0030A6  374D               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  4111  0030A8  374E               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  4112                           
  4113                           ; BSR set to: 1
  4114  0030AA  0101               	movlb	1	; () banked
  4115  0030AC  2B4A               	incf	sqrt@i& (0+255),f,b
  4116  0030AE                     l5939:
  4117                           
  4118                           ; BSR set to: 1
  4119  0030AE  0E18               	movlw	24
  4120  0030B0  0101               	movlb	1	; () banked
  4121  0030B2  654A               	cpfsgt	sqrt@i& (0+255),b
  4122  0030B4  D77E               	goto	l5927
  4123                           
  4124                           ; BSR set to: 1
  4125                           
  4126                           ; BSR set to: 1
  4127  0030B6  C15A  F0C5         	movff	sqrt@frac,??_sqrt
  4128  0030BA  C15B  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  4129  0030BE  C15C  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  4130  0030C2  C15D  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  4131  0030C6  0100               	movlb	0	; () banked
  4132  0030C8  90D8               	bcf	status,0,c
  4133  0030CA  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  4134  0030CC  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  4135  0030CE  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  4136  0030D0  33C5               	rrcf	??_sqrt& (0+255),f,b
  4137  0030D2  C0C5  F15A         	movff	??_sqrt,sqrt@frac
  4138  0030D6  C0C6  F15B         	movff	??_sqrt+1,sqrt@frac+1
  4139  0030DA  C0C7  F15C         	movff	??_sqrt+2,sqrt@frac+2
  4140  0030DE  C0C8  F15D         	movff	??_sqrt+3,sqrt@frac+3
  4141                           
  4142                           ; BSR set to: 0
  4143  0030E2  0E01               	movlw	1
  4144  0030E4  0101               	movlb	1	; () banked
  4145  0030E6  155A               	andwf	sqrt@frac& (0+255),w,b
  4146  0030E8  0101               	movlb	1	; () banked
  4147  0030EA  6F50               	movwf	sqrt@grs& (0+255),b
  4148  0030EC  0E00               	movlw	0
  4149  0030EE  0101               	movlb	1	; () banked
  4150  0030F0  155B               	andwf	(sqrt@frac+1)& (0+255),w,b
  4151  0030F2  0101               	movlb	1	; () banked
  4152  0030F4  6F51               	movwf	(sqrt@grs+1)& (0+255),b
  4153  0030F6  0E00               	movlw	0
  4154  0030F8  0101               	movlb	1	; () banked
  4155  0030FA  155C               	andwf	(sqrt@frac+2)& (0+255),w,b
  4156  0030FC  0101               	movlb	1	; () banked
  4157  0030FE  6F52               	movwf	(sqrt@grs+2)& (0+255),b
  4158  003100  0E00               	movlw	0
  4159  003102  0101               	movlb	1	; () banked
  4160  003104  155D               	andwf	(sqrt@frac+3)& (0+255),w,b
  4161  003106  0101               	movlb	1	; () banked
  4162  003108  6F53               	movwf	(sqrt@grs+3)& (0+255),b
  4163                           
  4164                           ; BSR set to: 1
  4165  00310A  C15A  F0C5         	movff	sqrt@frac,??_sqrt
  4166  00310E  C15B  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  4167  003112  C15C  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  4168  003116  C15D  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  4169  00311A  0100               	movlb	0	; () banked
  4170  00311C  90D8               	bcf	status,0,c
  4171  00311E  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  4172  003120  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  4173  003122  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  4174  003124  33C5               	rrcf	??_sqrt& (0+255),f,b
  4175  003126  C0C5  F15A         	movff	??_sqrt,sqrt@frac
  4176  00312A  C0C6  F15B         	movff	??_sqrt+1,sqrt@frac+1
  4177  00312E  C0C7  F15C         	movff	??_sqrt+2,sqrt@frac+2
  4178  003132  C0C8  F15D         	movff	??_sqrt+3,sqrt@frac+3
  4179  003136  0101               	movlb	1	; () banked
  4180  003138  5150               	movf	sqrt@grs& (0+255),w,b
  4181  00313A  0101               	movlb	1	; () banked
  4182  00313C  275A               	addwf	sqrt@frac& (0+255),f,b
  4183  00313E  0101               	movlb	1	; () banked
  4184  003140  5151               	movf	(sqrt@grs+1)& (0+255),w,b
  4185  003142  0101               	movlb	1	; () banked
  4186  003144  235B               	addwfc	(sqrt@frac+1)& (0+255),f,b
  4187  003146  0101               	movlb	1	; () banked
  4188  003148  5152               	movf	(sqrt@grs+2)& (0+255),w,b
  4189  00314A  0101               	movlb	1	; () banked
  4190  00314C  235C               	addwfc	(sqrt@frac+2)& (0+255),f,b
  4191  00314E  0101               	movlb	1	; () banked
  4192  003150  5153               	movf	(sqrt@grs+3)& (0+255),w,b
  4193  003152  0101               	movlb	1	; () banked
  4194  003154  235D               	addwfc	(sqrt@frac+3)& (0+255),f,b
  4195                           
  4196                           ; BSR set to: 1
  4197  003156  0101               	movlb	1	; () banked
  4198  003158  A15D               	btfss	(sqrt@frac+3)& (0+255),0,b
  4199  00315A  D019               	goto	l5951
  4200                           
  4201                           ; BSR set to: 1
  4202  00315C  C15A  F0C5         	movff	sqrt@frac,??_sqrt
  4203  003160  C15B  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  4204  003164  C15C  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  4205  003168  C15D  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  4206  00316C  0100               	movlb	0	; () banked
  4207  00316E  90D8               	bcf	status,0,c
  4208  003170  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  4209  003172  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  4210  003174  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  4211  003176  33C5               	rrcf	??_sqrt& (0+255),f,b
  4212  003178  C0C5  F15A         	movff	??_sqrt,sqrt@frac
  4213  00317C  C0C6  F15B         	movff	??_sqrt+1,sqrt@frac+1
  4214  003180  C0C7  F15C         	movff	??_sqrt+2,sqrt@frac+2
  4215  003184  C0C8  F15D         	movff	??_sqrt+3,sqrt@frac+3
  4216  003188  0101               	movlb	1	; () banked
  4217  00318A  4B54               	infsnz	sqrt@exp& (0+255),f,b
  4218  00318C  2B55               	incf	(sqrt@exp+1)& (0+255),f,b
  4219  00318E                     l5951:
  4220                           
  4221                           ; BSR set to: 1
  4222  00318E  0EFF               	movlw	255
  4223  003190  0101               	movlb	1	; () banked
  4224  003192  155A               	andwf	sqrt@frac& (0+255),w,b
  4225  003194  0101               	movlb	1	; () banked
  4226  003196  6F56               	movwf	sqrt@root& (0+255),b
  4227  003198  0EFF               	movlw	255
  4228  00319A  0101               	movlb	1	; () banked
  4229  00319C  155B               	andwf	(sqrt@frac+1)& (0+255),w,b
  4230  00319E  0101               	movlb	1	; () banked
  4231  0031A0  6F57               	movwf	(sqrt@root+1)& (0+255),b
  4232  0031A2  0E7F               	movlw	127
  4233  0031A4  0101               	movlb	1	; () banked
  4234  0031A6  155C               	andwf	(sqrt@frac+2)& (0+255),w,b
  4235  0031A8  0101               	movlb	1	; () banked
  4236  0031AA  6F58               	movwf	(sqrt@root+2)& (0+255),b
  4237  0031AC  0E00               	movlw	0
  4238  0031AE  0101               	movlb	1	; () banked
  4239  0031B0  155D               	andwf	(sqrt@frac+3)& (0+255),w,b
  4240  0031B2  0101               	movlb	1	; () banked
  4241  0031B4  6F59               	movwf	(sqrt@root+3)& (0+255),b
  4242                           
  4243                           ; BSR set to: 1
  4244  0031B6  C154  F14F         	movff	sqrt@exp,sqrt@p
  4245                           
  4246                           ; BSR set to: 1
  4247  0031BA  0101               	movlb	1	; () banked
  4248  0031BC  A14F               	btfss	sqrt@p& (0+255),0,b
  4249  0031BE  D002               	goto	l5959
  4250                           
  4251                           ; BSR set to: 1
  4252  0031C0  0101               	movlb	1	; () banked
  4253  0031C2  8F58               	bsf	(sqrt@root+2)& (0+255),7,b
  4254  0031C4                     l5959:
  4255                           
  4256                           ; BSR set to: 1
  4257  0031C4  0101               	movlb	1	; () banked
  4258  0031C6  90D8               	bcf	status,0,c
  4259  0031C8  314F               	rrcf	sqrt@p& (0+255),w,b
  4260  0031CA  0101               	movlb	1	; () banked
  4261  0031CC  6F59               	movwf	(sqrt@root+3)& (0+255),b
  4262                           
  4263                           ; BSR set to: 1
  4264  0031CE  0101               	movlb	1	; () banked
  4265  0031D0  9F59               	bcf	(sqrt@root+3)& (0+255),7,b
  4266                           
  4267                           ; BSR set to: 1
  4268  0031D2  C156  F0C1         	movff	sqrt@root,?_sqrt
  4269  0031D6  C157  F0C2         	movff	sqrt@root+1,?_sqrt+1
  4270  0031DA  C158  F0C3         	movff	sqrt@root+2,?_sqrt+2
  4271  0031DE  C159  F0C4         	movff	sqrt@root+3,?_sqrt+3
  4272  0031E2  0012               	return	
  4273  0031E4                     __end_of_sqrt:
  4274                           	opt stack 0
  4275                           tblptru	equ	0xFF8
  4276                           tblptrh	equ	0xFF7
  4277                           tblptrl	equ	0xFF6
  4278                           tablat	equ	0xFF5
  4279                           postinc0	equ	0xFEE
  4280                           wreg	equ	0xFE8
  4281                           indf2	equ	0xFDF
  4282                           postinc2	equ	0xFDE
  4283                           postdec2	equ	0xFDD
  4284                           fsr2h	equ	0xFDA
  4285                           fsr2l	equ	0xFD9
  4286                           status	equ	0xFD8
  4287                           
  4288 ;; *************** function _atan *****************
  4289 ;; Defined at:
  4290 ;;		line 8 in file "P:\Programmi\Microchip\xc8\v1.35\sources\common\atan.c"
  4291 ;; Parameters:    Size  Location     Type
  4292 ;;  f               4    0[BANK1 ] unsigned char 
  4293 ;; Auto vars:     Size  Location     Type
  4294 ;;  val             4   17[BANK1 ] unsigned char 
  4295 ;;  val_squared     4   13[BANK1 ] unsigned char 
  4296 ;;  x               4    8[BANK1 ] unsigned char 
  4297 ;;  y               4    4[BANK1 ] unsigned char 
  4298 ;;  recip           1   12[BANK1 ] unsigned char 
  4299 ;; Return value:  Size  Location     Type
  4300 ;;                  4    0[BANK1 ] unsigned char 
  4301 ;; Registers used:
  4302 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4303 ;; Tracked objects:
  4304 ;;		On entry : 0/0
  4305 ;;		On exit  : 0/0
  4306 ;;		Unchanged: 0/0
  4307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4308 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4309 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  4310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4311 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
  4312 ;;Total ram usage:       21 bytes
  4313 ;; Hardware stack levels used:    1
  4314 ;; Hardware stack levels required when called:    6
  4315 ;; This function calls:
  4316 ;;		___fladd
  4317 ;;		___fldiv
  4318 ;;		___flge
  4319 ;;		___flmul
  4320 ;;		___flneg
  4321 ;;		_eval_poly
  4322 ;;		_fabs
  4323 ;; This function is called by:
  4324 ;;		_asin
  4325 ;; This function uses a non-reentrant model
  4326 ;;
  4327                           
  4328                           	psect	text9
  4329  003C54                     __ptext9:
  4330                           	opt stack 0
  4331  003C54                     _atan:
  4332                           	opt stack 22
  4333                           
  4334                           ;incstack = 0
  4335  003C54  C149  F0AD         	movff	atan@f,fabs@d
  4336  003C58  C14A  F0AE         	movff	atan@f+1,fabs@d+1
  4337  003C5C  C14B  F0AF         	movff	atan@f+2,fabs@d+2
  4338  003C60  C14C  F0B0         	movff	atan@f+3,fabs@d+3
  4339  003C64  EC7C  F026         	call	_fabs	;wreg free
  4340  003C68  C0AD  F15A         	movff	?_fabs,atan@val
  4341  003C6C  C0AE  F15B         	movff	?_fabs+1,atan@val+1
  4342  003C70  C0AF  F15C         	movff	?_fabs+2,atan@val+2
  4343  003C74  C0B0  F15D         	movff	?_fabs+3,atan@val+3
  4344  003C78  0101               	movlb	1	; () banked
  4345  003C7A  515A               	movf	atan@val& (0+255),w,b
  4346  003C7C  0101               	movlb	1	; () banked
  4347  003C7E  115B               	iorwf	(atan@val+1)& (0+255),w,b
  4348  003C80  0101               	movlb	1	; () banked
  4349  003C82  115C               	iorwf	(atan@val+2)& (0+255),w,b
  4350  003C84  0101               	movlb	1	; () banked
  4351  003C86  115D               	iorwf	(atan@val+3)& (0+255),w,b
  4352  003C88  A4D8               	btfss	status,2,c
  4353  003C8A  D00A               	goto	l5973
  4354                           
  4355                           ; BSR set to: 1
  4356  003C8C  0E00               	movlw	0
  4357  003C8E  0101               	movlb	1	; () banked
  4358  003C90  6F49               	movwf	?_atan& (0+255),b
  4359  003C92  0E00               	movlw	0
  4360  003C94  6F4A               	movwf	(?_atan+1)& (0+255),b
  4361  003C96  0E00               	movlw	0
  4362  003C98  6F4B               	movwf	(?_atan+2)& (0+255),b
  4363  003C9A  0E00               	movlw	0
  4364  003C9C  6F4C               	movwf	(?_atan+3)& (0+255),b
  4365                           
  4366                           ; BSR set to: 1
  4367  003C9E  0012               	return	
  4368  003CA0                     l5973:
  4369                           
  4370                           ; BSR set to: 1
  4371  003CA0  0E00               	movlw	0
  4372  003CA2  0100               	movlb	0	; () banked
  4373  003CA4  6FB1               	movwf	___flge@ff1& (0+255),b
  4374  003CA6  0E00               	movlw	0
  4375  003CA8  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  4376  003CAA  0E80               	movlw	128
  4377  003CAC  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  4378  003CAE  0E3F               	movlw	63
  4379  003CB0  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  4380  003CB2  C15A  F0B5         	movff	atan@val,___flge@ff2
  4381  003CB6  C15B  F0B6         	movff	atan@val+1,___flge@ff2+1
  4382  003CBA  C15C  F0B7         	movff	atan@val+2,___flge@ff2+2
  4383  003CBE  C15D  F0B8         	movff	atan@val+3,___flge@ff2+3
  4384  003CC2  EC31  F022         	call	___flge	;wreg free
  4385  003CC6  0100               	movlb	0	; () banked
  4386  003CC8  B0D8               	btfsc	status,0,c
  4387  003CCA  D002               	goto	u7680
  4388  003CCC  0E01               	movlw	1
  4389  003CCE  D001               	goto	u7690
  4390  003CD0                     u7680:
  4391  003CD0  0E00               	movlw	0
  4392  003CD2                     u7690:
  4393  003CD2  0101               	movlb	1	; () banked
  4394  003CD4  6F55               	movwf	atan@recip& (0+255),b
  4395  003CD6  0101               	movlb	1	; () banked
  4396  003CD8  5155               	movf	atan@recip& (0+255),w,b
  4397  003CDA  B4D8               	btfsc	status,2,c
  4398  003CDC  D01B               	goto	l5977
  4399                           
  4400                           ; BSR set to: 1
  4401  003CDE  0E00               	movlw	0
  4402  003CE0  0100               	movlb	0	; () banked
  4403  003CE2  6F77               	movwf	___fldiv@b& (0+255),b
  4404  003CE4  0E00               	movlw	0
  4405  003CE6  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  4406  003CE8  0E80               	movlw	128
  4407  003CEA  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  4408  003CEC  0E3F               	movlw	63
  4409  003CEE  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  4410  003CF0  C15A  F07B         	movff	atan@val,___fldiv@a
  4411  003CF4  C15B  F07C         	movff	atan@val+1,___fldiv@a+1
  4412  003CF8  C15C  F07D         	movff	atan@val+2,___fldiv@a+2
  4413  003CFC  C15D  F07E         	movff	atan@val+3,___fldiv@a+3
  4414  003D00  ECF2  F018         	call	___fldiv	;wreg free
  4415  003D04  C077  F15A         	movff	?___fldiv,atan@val
  4416  003D08  C078  F15B         	movff	?___fldiv+1,atan@val+1
  4417  003D0C  C079  F15C         	movff	?___fldiv+2,atan@val+2
  4418  003D10  C07A  F15D         	movff	?___fldiv+3,atan@val+3
  4419  003D14                     l5977:
  4420  003D14  C15A  F090         	movff	atan@val,___flmul@b
  4421  003D18  C15B  F091         	movff	atan@val+1,___flmul@b+1
  4422  003D1C  C15C  F092         	movff	atan@val+2,___flmul@b+2
  4423  003D20  C15D  F093         	movff	atan@val+3,___flmul@b+3
  4424  003D24  C15A  F094         	movff	atan@val,___flmul@a
  4425  003D28  C15B  F095         	movff	atan@val+1,___flmul@a+1
  4426  003D2C  C15C  F096         	movff	atan@val+2,___flmul@a+2
  4427  003D30  C15D  F097         	movff	atan@val+3,___flmul@a+3
  4428  003D34  ECBA  F014         	call	___flmul	;wreg free
  4429  003D38  C090  F156         	movff	?___flmul,atan@val_squared
  4430  003D3C  C091  F157         	movff	?___flmul+1,atan@val_squared+1
  4431  003D40  C092  F158         	movff	?___flmul+2,atan@val_squared+2
  4432  003D44  C093  F159         	movff	?___flmul+3,atan@val_squared+3
  4433  003D48  C156  F0C1         	movff	atan@val_squared,eval_poly@x
  4434  003D4C  C157  F0C2         	movff	atan@val_squared+1,eval_poly@x+1
  4435  003D50  C158  F0C3         	movff	atan@val_squared+2,eval_poly@x+2
  4436  003D54  C159  F0C4         	movff	atan@val_squared+3,eval_poly@x+3
  4437  003D58  0E19               	movlw	low atan@coeff_b
  4438  003D5A  0100               	movlb	0	; () banked
  4439  003D5C  6FC5               	movwf	eval_poly@d& (0+255),b
  4440  003D5E  0E0D               	movlw	high atan@coeff_b
  4441  003D60  0100               	movlb	0	; () banked
  4442  003D62  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  4443  003D64  0E00               	movlw	0
  4444  003D66  0100               	movlb	0	; () banked
  4445  003D68  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  4446  003D6A  0E04               	movlw	4
  4447  003D6C  6FC7               	movwf	eval_poly@n& (0+255),b
  4448  003D6E  ECAA  F023         	call	_eval_poly	;wreg free
  4449  003D72  C0C1  F14D         	movff	?_eval_poly,atan@y
  4450  003D76  C0C2  F14E         	movff	?_eval_poly+1,atan@y+1
  4451  003D7A  C0C3  F14F         	movff	?_eval_poly+2,atan@y+2
  4452  003D7E  C0C4  F150         	movff	?_eval_poly+3,atan@y+3
  4453  003D82  C156  F0C1         	movff	atan@val_squared,eval_poly@x
  4454  003D86  C157  F0C2         	movff	atan@val_squared+1,eval_poly@x+1
  4455  003D8A  C158  F0C3         	movff	atan@val_squared+2,eval_poly@x+2
  4456  003D8E  C159  F0C4         	movff	atan@val_squared+3,eval_poly@x+3
  4457  003D92  0E01               	movlw	low atan@coeff_a
  4458  003D94  0100               	movlb	0	; () banked
  4459  003D96  6FC5               	movwf	eval_poly@d& (0+255),b
  4460  003D98  0E0D               	movlw	high atan@coeff_a
  4461  003D9A  0100               	movlb	0	; () banked
  4462  003D9C  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  4463  003D9E  0E00               	movlw	0
  4464  003DA0  0100               	movlb	0	; () banked
  4465  003DA2  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  4466  003DA4  0E05               	movlw	5
  4467  003DA6  6FC7               	movwf	eval_poly@n& (0+255),b
  4468  003DA8  ECAA  F023         	call	_eval_poly	;wreg free
  4469  003DAC  C0C1  F151         	movff	?_eval_poly,atan@x
  4470  003DB0  C0C2  F152         	movff	?_eval_poly+1,atan@x+1
  4471  003DB4  C0C3  F153         	movff	?_eval_poly+2,atan@x+2
  4472  003DB8  C0C4  F154         	movff	?_eval_poly+3,atan@x+3
  4473  003DBC  C15A  F090         	movff	atan@val,___flmul@b
  4474  003DC0  C15B  F091         	movff	atan@val+1,___flmul@b+1
  4475  003DC4  C15C  F092         	movff	atan@val+2,___flmul@b+2
  4476  003DC8  C15D  F093         	movff	atan@val+3,___flmul@b+3
  4477  003DCC  C14D  F07B         	movff	atan@y,___fldiv@a
  4478  003DD0  C14E  F07C         	movff	atan@y+1,___fldiv@a+1
  4479  003DD4  C14F  F07D         	movff	atan@y+2,___fldiv@a+2
  4480  003DD8  C150  F07E         	movff	atan@y+3,___fldiv@a+3
  4481  003DDC  C151  F077         	movff	atan@x,___fldiv@b
  4482  003DE0  C152  F078         	movff	atan@x+1,___fldiv@b+1
  4483  003DE4  C153  F079         	movff	atan@x+2,___fldiv@b+2
  4484  003DE8  C154  F07A         	movff	atan@x+3,___fldiv@b+3
  4485  003DEC  ECF2  F018         	call	___fldiv	;wreg free
  4486  003DF0  C077  F094         	movff	?___fldiv,___flmul@a
  4487  003DF4  C078  F095         	movff	?___fldiv+1,___flmul@a+1
  4488  003DF8  C079  F096         	movff	?___fldiv+2,___flmul@a+2
  4489  003DFC  C07A  F097         	movff	?___fldiv+3,___flmul@a+3
  4490  003E00  ECBA  F014         	call	___flmul	;wreg free
  4491  003E04  C090  F15A         	movff	?___flmul,atan@val
  4492  003E08  C091  F15B         	movff	?___flmul+1,atan@val+1
  4493  003E0C  C092  F15C         	movff	?___flmul+2,atan@val+2
  4494  003E10  C093  F15D         	movff	?___flmul+3,atan@val+3
  4495  003E14  0101               	movlb	1	; () banked
  4496  003E16  5155               	movf	atan@recip& (0+255),w,b
  4497  003E18  0101               	movlb	1	; () banked
  4498  003E1A  B4D8               	btfsc	status,2,c
  4499  003E1C  D025               	goto	l5989
  4500                           
  4501                           ; BSR set to: 1
  4502  003E1E  C15A  F0A9         	movff	atan@val,___flneg@f1
  4503  003E22  C15B  F0AA         	movff	atan@val+1,___flneg@f1+1
  4504  003E26  C15C  F0AB         	movff	atan@val+2,___flneg@f1+2
  4505  003E2A  C15D  F0AC         	movff	atan@val+3,___flneg@f1+3
  4506  003E2E  EC9B  F026         	call	___flneg	;wreg free
  4507  003E32  C0A9  F0AD         	movff	?___flneg,___fladd@b
  4508  003E36  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  4509  003E3A  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  4510  003E3E  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  4511  003E42  0EDB               	movlw	219
  4512  003E44  0100               	movlb	0	; () banked
  4513  003E46  6FB1               	movwf	___fladd@a& (0+255),b
  4514  003E48  0E0F               	movlw	15
  4515  003E4A  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  4516  003E4C  0EC9               	movlw	201
  4517  003E4E  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  4518  003E50  0E3F               	movlw	63
  4519  003E52  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  4520  003E54  EC66  F012         	call	___fladd	;wreg free
  4521  003E58  C0AD  F15A         	movff	?___fladd,atan@val
  4522  003E5C  C0AE  F15B         	movff	?___fladd+1,atan@val+1
  4523  003E60  C0AF  F15C         	movff	?___fladd+2,atan@val+2
  4524  003E64  C0B0  F15D         	movff	?___fladd+3,atan@val+3
  4525  003E68                     l5989:
  4526  003E68  0101               	movlb	1	; () banked
  4527  003E6A  BF4C               	btfsc	(atan@f+3)& (0+255),7,b
  4528  003E6C  D009               	goto	l5993
  4529                           
  4530                           ; BSR set to: 1
  4531  003E6E  C15A  F149         	movff	atan@val,?_atan
  4532  003E72  C15B  F14A         	movff	atan@val+1,?_atan+1
  4533  003E76  C15C  F14B         	movff	atan@val+2,?_atan+2
  4534  003E7A  C15D  F14C         	movff	atan@val+3,?_atan+3
  4535  003E7E  0012               	return	
  4536  003E80                     l5993:
  4537                           
  4538                           ; BSR set to: 1
  4539  003E80  C15A  F0A9         	movff	atan@val,___flneg@f1
  4540  003E84  C15B  F0AA         	movff	atan@val+1,___flneg@f1+1
  4541  003E88  C15C  F0AB         	movff	atan@val+2,___flneg@f1+2
  4542  003E8C  C15D  F0AC         	movff	atan@val+3,___flneg@f1+3
  4543  003E90  EC9B  F026         	call	___flneg	;wreg free
  4544  003E94  C0A9  F149         	movff	?___flneg,?_atan
  4545  003E98  C0AA  F14A         	movff	?___flneg+1,?_atan+1
  4546  003E9C  C0AB  F14B         	movff	?___flneg+2,?_atan+2
  4547  003EA0  C0AC  F14C         	movff	?___flneg+3,?_atan+3
  4548  003EA4  0012               	return	
  4549  003EA6                     __end_of_atan:
  4550                           	opt stack 0
  4551                           tblptru	equ	0xFF8
  4552                           tblptrh	equ	0xFF7
  4553                           tblptrl	equ	0xFF6
  4554                           tablat	equ	0xFF5
  4555                           postinc0	equ	0xFEE
  4556                           wreg	equ	0xFE8
  4557                           indf2	equ	0xFDF
  4558                           postinc2	equ	0xFDE
  4559                           postdec2	equ	0xFDD
  4560                           fsr2h	equ	0xFDA
  4561                           fsr2l	equ	0xFD9
  4562                           status	equ	0xFD8
  4563                           
  4564 ;; *************** function _fabs *****************
  4565 ;; Defined at:
  4566 ;;		line 4 in file "P:\Programmi\Microchip\xc8\v1.35\sources\common\fabs.c"
  4567 ;; Parameters:    Size  Location     Type
  4568 ;;  d               4   77[BANK0 ] unsigned char 
  4569 ;; Auto vars:     Size  Location     Type
  4570 ;;		None
  4571 ;; Return value:  Size  Location     Type
  4572 ;;                  4   77[BANK0 ] unsigned char 
  4573 ;; Registers used:
  4574 ;;		wreg, status,2, status,0, cstack
  4575 ;; Tracked objects:
  4576 ;;		On entry : 0/0
  4577 ;;		On exit  : 0/0
  4578 ;;		Unchanged: 0/0
  4579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4580 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4583 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4584 ;;Total ram usage:        4 bytes
  4585 ;; Hardware stack levels used:    1
  4586 ;; Hardware stack levels required when called:    5
  4587 ;; This function calls:
  4588 ;;		___flneg
  4589 ;; This function is called by:
  4590 ;;		_asin
  4591 ;;		_atan
  4592 ;; This function uses a non-reentrant model
  4593 ;;
  4594                           
  4595                           	psect	text10
  4596  004CF8                     __ptext10:
  4597                           	opt stack 0
  4598  004CF8                     _fabs:
  4599                           	opt stack 23
  4600                           
  4601                           ;incstack = 0
  4602  004CF8  0100               	movlb	0	; () banked
  4603  004CFA  AFB0               	btfss	(fabs@d+3)& (0+255),7,b
  4604  004CFC  D013               	goto	l973
  4605                           
  4606                           ; BSR set to: 0
  4607  004CFE  C0AD  F0A9         	movff	fabs@d,___flneg@f1
  4608  004D02  C0AE  F0AA         	movff	fabs@d+1,___flneg@f1+1
  4609  004D06  C0AF  F0AB         	movff	fabs@d+2,___flneg@f1+2
  4610  004D0A  C0B0  F0AC         	movff	fabs@d+3,___flneg@f1+3
  4611  004D0E  EC9B  F026         	call	___flneg	;wreg free
  4612  004D12  C0A9  F0AD         	movff	?___flneg,?_fabs
  4613  004D16  C0AA  F0AE         	movff	?___flneg+1,?_fabs+1
  4614  004D1A  C0AB  F0AF         	movff	?___flneg+2,?_fabs+2
  4615  004D1E  C0AC  F0B0         	movff	?___flneg+3,?_fabs+3
  4616  004D22  0012               	return	
  4617  004D24                     l973:
  4618                           
  4619                           ; BSR set to: 0
  4620  004D24  C0AD  F0AD         	movff	fabs@d,?_fabs
  4621  004D28  C0AE  F0AE         	movff	fabs@d+1,?_fabs+1
  4622  004D2C  C0AF  F0AF         	movff	fabs@d+2,?_fabs+2
  4623  004D30  C0B0  F0B0         	movff	fabs@d+3,?_fabs+3
  4624  004D34  0012               	return		;funcret
  4625  004D36                     __end_of_fabs:
  4626                           	opt stack 0
  4627                           tblptru	equ	0xFF8
  4628                           tblptrh	equ	0xFF7
  4629                           tblptrl	equ	0xFF6
  4630                           tablat	equ	0xFF5
  4631                           postinc0	equ	0xFEE
  4632                           wreg	equ	0xFE8
  4633                           indf2	equ	0xFDF
  4634                           postinc2	equ	0xFDE
  4635                           postdec2	equ	0xFDD
  4636                           fsr2h	equ	0xFDA
  4637                           fsr2l	equ	0xFD9
  4638                           status	equ	0xFD8
  4639                           
  4640 ;; *************** function ___flneg *****************
  4641 ;; Defined at:
  4642 ;;		line 15 in file "P:\Programmi\Microchip\xc8\v1.35\sources\common\flneg.c"
  4643 ;; Parameters:    Size  Location     Type
  4644 ;;  f1              4   73[BANK0 ] unsigned char 
  4645 ;; Auto vars:     Size  Location     Type
  4646 ;;		None
  4647 ;; Return value:  Size  Location     Type
  4648 ;;                  4   73[BANK0 ] unsigned char 
  4649 ;; Registers used:
  4650 ;;		wreg, status,2, status,0
  4651 ;; Tracked objects:
  4652 ;;		On entry : 0/0
  4653 ;;		On exit  : 0/0
  4654 ;;		Unchanged: 0/0
  4655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4656 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4659 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4660 ;;Total ram usage:        4 bytes
  4661 ;; Hardware stack levels used:    1
  4662 ;; Hardware stack levels required when called:    4
  4663 ;; This function calls:
  4664 ;;		Nothing
  4665 ;; This function is called by:
  4666 ;;		_asin
  4667 ;;		_atan
  4668 ;;		_fabs
  4669 ;; This function uses a non-reentrant model
  4670 ;;
  4671                           
  4672                           	psect	text11
  4673  004D36                     __ptext11:
  4674                           	opt stack 0
  4675  004D36                     ___flneg:
  4676                           	opt stack 23
  4677                           
  4678                           ;incstack = 0
  4679  004D36  0100               	movlb	0	; () banked
  4680  004D38  51A9               	movf	___flneg@f1& (0+255),w,b
  4681  004D3A  0100               	movlb	0	; () banked
  4682  004D3C  11AA               	iorwf	(___flneg@f1+1)& (0+255),w,b
  4683  004D3E  0100               	movlb	0	; () banked
  4684  004D40  11AB               	iorwf	(___flneg@f1+2)& (0+255),w,b
  4685  004D42  0100               	movlb	0	; () banked
  4686  004D44  11AC               	iorwf	(___flneg@f1+3)& (0+255),w,b
  4687  004D46  B4D8               	btfsc	status,2,c
  4688  004D48  D009               	goto	l5695
  4689                           
  4690                           ; BSR set to: 0
  4691  004D4A  0E00               	movlw	0
  4692  004D4C  0100               	movlb	0	; () banked
  4693  004D4E  1BA9               	xorwf	___flneg@f1& (0+255),f,b
  4694  004D50  0E00               	movlw	0
  4695  004D52  1BAA               	xorwf	(___flneg@f1+1)& (0+255),f,b
  4696  004D54  0E00               	movlw	0
  4697  004D56  1BAB               	xorwf	(___flneg@f1+2)& (0+255),f,b
  4698  004D58  0E80               	movlw	128
  4699  004D5A  1BAC               	xorwf	(___flneg@f1+3)& (0+255),f,b
  4700  004D5C                     l5695:
  4701                           
  4702                           ; BSR set to: 0
  4703  004D5C  C0A9  F0A9         	movff	___flneg@f1,?___flneg
  4704  004D60  C0AA  F0AA         	movff	___flneg@f1+1,?___flneg+1
  4705  004D64  C0AB  F0AB         	movff	___flneg@f1+2,?___flneg+2
  4706  004D68  C0AC  F0AC         	movff	___flneg@f1+3,?___flneg+3
  4707  004D6C  0012               	return	
  4708  004D6E                     __end_of___flneg:
  4709                           	opt stack 0
  4710                           tblptru	equ	0xFF8
  4711                           tblptrh	equ	0xFF7
  4712                           tblptrl	equ	0xFF6
  4713                           tablat	equ	0xFF5
  4714                           postinc0	equ	0xFEE
  4715                           wreg	equ	0xFE8
  4716                           indf2	equ	0xFDF
  4717                           postinc2	equ	0xFDE
  4718                           postdec2	equ	0xFDD
  4719                           fsr2h	equ	0xFDA
  4720                           fsr2l	equ	0xFD9
  4721                           status	equ	0xFD8
  4722                           
  4723 ;; *************** function _eval_poly *****************
  4724 ;; Defined at:
  4725 ;;		line 4 in file "P:\Programmi\Microchip\xc8\v1.35\sources\common\evalpoly.c"
  4726 ;; Parameters:    Size  Location     Type
  4727 ;;  x               4   97[BANK0 ] unsigned char 
  4728 ;;  d               2  101[BANK0 ] PTR const 
  4729 ;;		 -> atan@coeff_a(24), atan@coeff_b(20), 
  4730 ;;  n               2  103[BANK0 ] int 
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;  res             4  109[BANK0 ] int 
  4733 ;; Return value:  Size  Location     Type
  4734 ;;                  4   97[BANK0 ] int 
  4735 ;; Registers used:
  4736 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4742 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4743 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4744 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4745 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4746 ;;Total ram usage:       16 bytes
  4747 ;; Hardware stack levels used:    1
  4748 ;; Hardware stack levels required when called:    5
  4749 ;; This function calls:
  4750 ;;		___fladd
  4751 ;;		___flmul
  4752 ;; This function is called by:
  4753 ;;		_atan
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757                           	psect	text12
  4758  004754                     __ptext12:
  4759                           	opt stack 0
  4760  004754                     _eval_poly:
  4761                           	opt stack 22
  4762                           
  4763                           ; BSR set to: 0
  4764                           ;incstack = 0
  4765  004754  C0C7  F0C9         	movff	eval_poly@n,??_eval_poly
  4766  004758  C0C8  F0CA         	movff	eval_poly@n+1,??_eval_poly+1
  4767  00475C  0100               	movlb	0	; () banked
  4768  00475E  90D8               	bcf	status,0,c
  4769  004760  37C9               	rlcf	??_eval_poly& (0+255),f,b
  4770  004762  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  4771  004764  0100               	movlb	0	; () banked
  4772  004766  90D8               	bcf	status,0,c
  4773  004768  37C9               	rlcf	??_eval_poly& (0+255),f,b
  4774  00476A  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  4775  00476C  C0C5  F0CB         	movff	eval_poly@d,??_eval_poly+2
  4776  004770  C0C6  F0CC         	movff	eval_poly@d+1,??_eval_poly+3
  4777  004774  0100               	movlb	0	; () banked
  4778  004776  51C9               	movf	??_eval_poly& (0+255),w,b
  4779  004778  0100               	movlb	0	; () banked
  4780  00477A  27CB               	addwf	(??_eval_poly+2)& (0+255),f,b
  4781  00477C  0100               	movlb	0	; () banked
  4782  00477E  51CA               	movf	(??_eval_poly+1)& (0+255),w,b
  4783  004780  0100               	movlb	0	; () banked
  4784  004782  23CC               	addwfc	(??_eval_poly+3)& (0+255),f,b
  4785  004784  C0CB  FFF6         	movff	??_eval_poly+2,tblptrl
  4786  004788  C0CC  FFF7         	movff	??_eval_poly+3,tblptrh
  4787  00478C                     	if	0	;tblptru may be non-zero
  4788  00478C                     	endif
  4789  00478C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4790  00478C  0E00               	movlw	low (__mediumconst shr (0+16))
  4791  00478E  6EF8               	movwf	tblptru,c
  4792  004790                     	endif
  4793  004790  0009               	tblrd		*+
  4794  004792  CFF5 F0CD          	movff	tablat,eval_poly@res
  4795  004796  0009               	tblrd		*+
  4796  004798  CFF5 F0CE          	movff	tablat,eval_poly@res+1
  4797  00479C  0009               	tblrd		*+
  4798  00479E  CFF5 F0CF          	movff	tablat,eval_poly@res+2
  4799  0047A2  000A               	tblrd		*-
  4800  0047A4  CFF5 F0D0          	movff	tablat,eval_poly@res+3
  4801  0047A8  D052               	goto	l5845
  4802  0047AA                     l5843:
  4803                           
  4804                           ; BSR set to: 0
  4805  0047AA  C0CD  F094         	movff	eval_poly@res,___flmul@a
  4806  0047AE  C0CE  F095         	movff	eval_poly@res+1,___flmul@a+1
  4807  0047B2  C0CF  F096         	movff	eval_poly@res+2,___flmul@a+2
  4808  0047B6  C0D0  F097         	movff	eval_poly@res+3,___flmul@a+3
  4809  0047BA  C0C1  F090         	movff	eval_poly@x,___flmul@b
  4810  0047BE  C0C2  F091         	movff	eval_poly@x+1,___flmul@b+1
  4811  0047C2  C0C3  F092         	movff	eval_poly@x+2,___flmul@b+2
  4812  0047C6  C0C4  F093         	movff	eval_poly@x+3,___flmul@b+3
  4813  0047CA  ECBA  F014         	call	___flmul	;wreg free
  4814  0047CE  C090  F0AD         	movff	?___flmul,___fladd@b
  4815  0047D2  C091  F0AE         	movff	?___flmul+1,___fladd@b+1
  4816  0047D6  C092  F0AF         	movff	?___flmul+2,___fladd@b+2
  4817  0047DA  C093  F0B0         	movff	?___flmul+3,___fladd@b+3
  4818  0047DE  0100               	movlb	0	; () banked
  4819  0047E0  07C7               	decf	eval_poly@n& (0+255),f,b
  4820  0047E2  A0D8               	btfss	status,0,c
  4821  0047E4  07C8               	decf	(eval_poly@n+1)& (0+255),f,b
  4822  0047E6  C0C7  F0C9         	movff	eval_poly@n,??_eval_poly
  4823  0047EA  C0C8  F0CA         	movff	eval_poly@n+1,??_eval_poly+1
  4824  0047EE  0100               	movlb	0	; () banked
  4825  0047F0  90D8               	bcf	status,0,c
  4826  0047F2  37C9               	rlcf	??_eval_poly& (0+255),f,b
  4827  0047F4  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  4828  0047F6  0100               	movlb	0	; () banked
  4829  0047F8  90D8               	bcf	status,0,c
  4830  0047FA  37C9               	rlcf	??_eval_poly& (0+255),f,b
  4831  0047FC  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  4832  0047FE  C0C5  F0CB         	movff	eval_poly@d,??_eval_poly+2
  4833  004802  C0C6  F0CC         	movff	eval_poly@d+1,??_eval_poly+3
  4834  004806  0100               	movlb	0	; () banked
  4835  004808  51C9               	movf	??_eval_poly& (0+255),w,b
  4836  00480A  0100               	movlb	0	; () banked
  4837  00480C  27CB               	addwf	(??_eval_poly+2)& (0+255),f,b
  4838  00480E  0100               	movlb	0	; () banked
  4839  004810  51CA               	movf	(??_eval_poly+1)& (0+255),w,b
  4840  004812  0100               	movlb	0	; () banked
  4841  004814  23CC               	addwfc	(??_eval_poly+3)& (0+255),f,b
  4842  004816  C0CB  FFF6         	movff	??_eval_poly+2,tblptrl
  4843  00481A  C0CC  FFF7         	movff	??_eval_poly+3,tblptrh
  4844  00481E                     	if	0	;tblptru may be non-zero
  4845  00481E                     	endif
  4846  00481E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4847  00481E  0E00               	movlw	low (__mediumconst shr (0+16))
  4848  004820  6EF8               	movwf	tblptru,c
  4849  004822                     	endif
  4850  004822  0009               	tblrd		*+
  4851  004824  CFF5 F0B1          	movff	tablat,___fladd@a
  4852  004828  0009               	tblrd		*+
  4853  00482A  CFF5 F0B2          	movff	tablat,___fladd@a+1
  4854  00482E  0009               	tblrd		*+
  4855  004830  CFF5 F0B3          	movff	tablat,___fladd@a+2
  4856  004834  000A               	tblrd		*-
  4857  004836  CFF5 F0B4          	movff	tablat,___fladd@a+3
  4858  00483A  EC66  F012         	call	___fladd	;wreg free
  4859  00483E  C0AD  F0CD         	movff	?___fladd,eval_poly@res
  4860  004842  C0AE  F0CE         	movff	?___fladd+1,eval_poly@res+1
  4861  004846  C0AF  F0CF         	movff	?___fladd+2,eval_poly@res+2
  4862  00484A  C0B0  F0D0         	movff	?___fladd+3,eval_poly@res+3
  4863  00484E                     l5845:
  4864  00484E  0100               	movlb	0	; () banked
  4865  004850  51C7               	movf	eval_poly@n& (0+255),w,b
  4866  004852  0100               	movlb	0	; () banked
  4867  004854  11C8               	iorwf	(eval_poly@n+1)& (0+255),w,b
  4868  004856  A4D8               	btfss	status,2,c
  4869  004858  D7A8               	goto	l5843
  4870                           
  4871                           ; BSR set to: 0
  4872  00485A  C0CD  F0C1         	movff	eval_poly@res,?_eval_poly
  4873  00485E  C0CE  F0C2         	movff	eval_poly@res+1,?_eval_poly+1
  4874  004862  C0CF  F0C3         	movff	eval_poly@res+2,?_eval_poly+2
  4875  004866  C0D0  F0C4         	movff	eval_poly@res+3,?_eval_poly+3
  4876                           
  4877                           ; BSR set to: 0
  4878  00486A  0012               	return		;funcret
  4879  00486C                     __end_of_eval_poly:
  4880                           	opt stack 0
  4881                           tblptru	equ	0xFF8
  4882                           tblptrh	equ	0xFF7
  4883                           tblptrl	equ	0xFF6
  4884                           tablat	equ	0xFF5
  4885                           postinc0	equ	0xFEE
  4886                           wreg	equ	0xFE8
  4887                           indf2	equ	0xFDF
  4888                           postinc2	equ	0xFDE
  4889                           postdec2	equ	0xFDD
  4890                           fsr2h	equ	0xFDA
  4891                           fsr2l	equ	0xFD9
  4892                           status	equ	0xFD8
  4893                           
  4894 ;; *************** function ___flmul *****************
  4895 ;; Defined at:
  4896 ;;		line 8 in file "P:\Programmi\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;  b               4   48[BANK0 ] int 
  4899 ;;  a               4   52[BANK0 ] int 
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;  prod            4   67[BANK0 ] struct .
  4902 ;;  grs             4   62[BANK0 ] unsigned long 
  4903 ;;  temp            2   71[BANK0 ] struct .
  4904 ;;  bexp            1   66[BANK0 ] unsigned char 
  4905 ;;  aexp            1   61[BANK0 ] unsigned char 
  4906 ;;  sign            1   60[BANK0 ] unsigned char 
  4907 ;; Return value:  Size  Location     Type
  4908 ;;                  4   48[BANK0 ] unsigned char 
  4909 ;; Registers used:
  4910 ;;		wreg, status,2, status,0, prodl, prodh
  4911 ;; Tracked objects:
  4912 ;;		On entry : 0/0
  4913 ;;		On exit  : 0/0
  4914 ;;		Unchanged: 0/0
  4915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4916 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4917 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4918 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4919 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4920 ;;Total ram usage:       25 bytes
  4921 ;; Hardware stack levels used:    1
  4922 ;; Hardware stack levels required when called:    4
  4923 ;; This function calls:
  4924 ;;		Nothing
  4925 ;; This function is called by:
  4926 ;;		_parallelo
  4927 ;;		_asin
  4928 ;;		_atan
  4929 ;;		_eval_poly
  4930 ;; This function uses a non-reentrant model
  4931 ;;
  4932                           
  4933                           	psect	text13
  4934  002974                     __ptext13:
  4935                           	opt stack 0
  4936  002974                     ___flmul:
  4937                           	opt stack 22
  4938                           
  4939                           ; BSR set to: 0
  4940                           ;incstack = 0
  4941  002974  0100               	movlb	0	; () banked
  4942  002976  5193               	movf	(___flmul@b+3)& (0+255),w,b
  4943  002978  0B80               	andlw	128
  4944  00297A  0100               	movlb	0	; () banked
  4945  00297C  6F9C               	movwf	___flmul@sign& (0+255),b
  4946  00297E  0100               	movlb	0	; () banked
  4947  002980  5193               	movf	(___flmul@b+3)& (0+255),w,b
  4948  002982  2593               	addwf	(___flmul@b+3)& (0+255),w,b
  4949  002984  0100               	movlb	0	; () banked
  4950  002986  6FA2               	movwf	___flmul@bexp& (0+255),b
  4951                           
  4952                           ; BSR set to: 0
  4953  002988  0100               	movlb	0	; () banked
  4954  00298A  AF92               	btfss	(___flmul@b+2)& (0+255),7,b
  4955  00298C  D002               	goto	l5567
  4956                           
  4957                           ; BSR set to: 0
  4958  00298E  0100               	movlb	0	; () banked
  4959  002990  81A2               	bsf	___flmul@bexp& (0+255),0,b
  4960  002992                     l5567:
  4961                           
  4962                           ; BSR set to: 0
  4963  002992  0100               	movlb	0	; () banked
  4964  002994  51A2               	movf	___flmul@bexp& (0+255),w,b
  4965  002996  0100               	movlb	0	; () banked
  4966  002998  B4D8               	btfsc	status,2,c
  4967  00299A  D010               	goto	l5575
  4968                           
  4969                           ; BSR set to: 0
  4970  00299C  0100               	movlb	0	; () banked
  4971  00299E  29A2               	incf	___flmul@bexp& (0+255),w,b
  4972  0029A0  A4D8               	btfss	status,2,c
  4973  0029A2  D009               	goto	l5573
  4974                           
  4975                           ; BSR set to: 0
  4976  0029A4  0E00               	movlw	0
  4977  0029A6  0100               	movlb	0	; () banked
  4978  0029A8  6F90               	movwf	___flmul@b& (0+255),b
  4979  0029AA  0E00               	movlw	0
  4980  0029AC  6F91               	movwf	(___flmul@b+1)& (0+255),b
  4981  0029AE  0E00               	movlw	0
  4982  0029B0  6F92               	movwf	(___flmul@b+2)& (0+255),b
  4983  0029B2  0E00               	movlw	0
  4984  0029B4  6F93               	movwf	(___flmul@b+3)& (0+255),b
  4985  0029B6                     l5573:
  4986                           
  4987                           ; BSR set to: 0
  4988  0029B6  0100               	movlb	0	; () banked
  4989  0029B8  8F92               	bsf	(___flmul@b+2)& (0+255),7,b
  4990  0029BA  D009               	goto	l5577
  4991  0029BC                     l5575:
  4992                           
  4993                           ; BSR set to: 0
  4994  0029BC  0E00               	movlw	0
  4995  0029BE  0100               	movlb	0	; () banked
  4996  0029C0  6F90               	movwf	___flmul@b& (0+255),b
  4997  0029C2  0E00               	movlw	0
  4998  0029C4  6F91               	movwf	(___flmul@b+1)& (0+255),b
  4999  0029C6  0E00               	movlw	0
  5000  0029C8  6F92               	movwf	(___flmul@b+2)& (0+255),b
  5001  0029CA  0E00               	movlw	0
  5002  0029CC  6F93               	movwf	(___flmul@b+3)& (0+255),b
  5003  0029CE                     l5577:
  5004                           
  5005                           ; BSR set to: 0
  5006  0029CE  0100               	movlb	0	; () banked
  5007  0029D0  5197               	movf	(___flmul@a+3)& (0+255),w,b
  5008  0029D2  0B80               	andlw	128
  5009  0029D4  0100               	movlb	0	; () banked
  5010  0029D6  1B9C               	xorwf	___flmul@sign& (0+255),f,b
  5011                           
  5012                           ; BSR set to: 0
  5013  0029D8  0100               	movlb	0	; () banked
  5014  0029DA  5197               	movf	(___flmul@a+3)& (0+255),w,b
  5015  0029DC  2597               	addwf	(___flmul@a+3)& (0+255),w,b
  5016  0029DE  0100               	movlb	0	; () banked
  5017  0029E0  6F9D               	movwf	___flmul@aexp& (0+255),b
  5018                           
  5019                           ; BSR set to: 0
  5020  0029E2  0100               	movlb	0	; () banked
  5021  0029E4  AF96               	btfss	(___flmul@a+2)& (0+255),7,b
  5022  0029E6  D002               	goto	l5585
  5023                           
  5024                           ; BSR set to: 0
  5025  0029E8  0100               	movlb	0	; () banked
  5026  0029EA  819D               	bsf	___flmul@aexp& (0+255),0,b
  5027  0029EC                     l5585:
  5028                           
  5029                           ; BSR set to: 0
  5030  0029EC  0100               	movlb	0	; () banked
  5031  0029EE  519D               	movf	___flmul@aexp& (0+255),w,b
  5032  0029F0  0100               	movlb	0	; () banked
  5033  0029F2  B4D8               	btfsc	status,2,c
  5034  0029F4  D010               	goto	l5593
  5035                           
  5036                           ; BSR set to: 0
  5037  0029F6  0100               	movlb	0	; () banked
  5038  0029F8  299D               	incf	___flmul@aexp& (0+255),w,b
  5039  0029FA  A4D8               	btfss	status,2,c
  5040  0029FC  D009               	goto	l5591
  5041                           
  5042                           ; BSR set to: 0
  5043  0029FE  0E00               	movlw	0
  5044  002A00  0100               	movlb	0	; () banked
  5045  002A02  6F94               	movwf	___flmul@a& (0+255),b
  5046  002A04  0E00               	movlw	0
  5047  002A06  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5048  002A08  0E00               	movlw	0
  5049  002A0A  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5050  002A0C  0E00               	movlw	0
  5051  002A0E  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5052  002A10                     l5591:
  5053                           
  5054                           ; BSR set to: 0
  5055  002A10  0100               	movlb	0	; () banked
  5056  002A12  8F96               	bsf	(___flmul@a+2)& (0+255),7,b
  5057  002A14  D009               	goto	l1303
  5058  002A16                     l5593:
  5059                           
  5060                           ; BSR set to: 0
  5061  002A16  0E00               	movlw	0
  5062  002A18  0100               	movlb	0	; () banked
  5063  002A1A  6F94               	movwf	___flmul@a& (0+255),b
  5064  002A1C  0E00               	movlw	0
  5065  002A1E  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5066  002A20  0E00               	movlw	0
  5067  002A22  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5068  002A24  0E00               	movlw	0
  5069  002A26  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5070  002A28                     l1303:
  5071                           
  5072                           ; BSR set to: 0
  5073  002A28  0100               	movlb	0	; () banked
  5074  002A2A  519D               	movf	___flmul@aexp& (0+255),w,b
  5075  002A2C  0100               	movlb	0	; () banked
  5076  002A2E  B4D8               	btfsc	status,2,c
  5077  002A30  D005               	goto	l5597
  5078                           
  5079                           ; BSR set to: 0
  5080  002A32  0100               	movlb	0	; () banked
  5081  002A34  51A2               	movf	___flmul@bexp& (0+255),w,b
  5082  002A36  0100               	movlb	0	; () banked
  5083  002A38  A4D8               	btfss	status,2,c
  5084  002A3A  D00A               	goto	l5601
  5085  002A3C                     l5597:
  5086                           
  5087                           ; BSR set to: 0
  5088  002A3C  0E00               	movlw	0
  5089  002A3E  0100               	movlb	0	; () banked
  5090  002A40  6F90               	movwf	?___flmul& (0+255),b
  5091  002A42  0E00               	movlw	0
  5092  002A44  6F91               	movwf	(?___flmul+1)& (0+255),b
  5093  002A46  0E00               	movlw	0
  5094  002A48  6F92               	movwf	(?___flmul+2)& (0+255),b
  5095  002A4A  0E00               	movlw	0
  5096  002A4C  6F93               	movwf	(?___flmul+3)& (0+255),b
  5097                           
  5098                           ; BSR set to: 0
  5099  002A4E  0012               	return	
  5100  002A50                     l5601:
  5101                           
  5102                           ; BSR set to: 0
  5103  002A50  0100               	movlb	0	; () banked
  5104  002A52  5196               	movf	(___flmul@a+2)& (0+255),w,b
  5105  002A54  0100               	movlb	0	; () banked
  5106  002A56  0390               	mulwf	___flmul@b& (0+255),b
  5107  002A58  CFF3 F0A7          	movff	prodl,___flmul@temp
  5108  002A5C  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  5109                           
  5110                           ; BSR set to: 0
  5111  002A60  0100               	movlb	0	; () banked
  5112  002A62  51A7               	movf	___flmul@temp& (0+255),w,b
  5113  002A64  0100               	movlb	0	; () banked
  5114  002A66  6F9E               	movwf	___flmul@grs& (0+255),b
  5115  002A68  6B9F               	clrf	(___flmul@grs+1)& (0+255),b
  5116  002A6A  6BA0               	clrf	(___flmul@grs+2)& (0+255),b
  5117  002A6C  6BA1               	clrf	(___flmul@grs+3)& (0+255),b
  5118                           
  5119                           ; BSR set to: 0
  5120  002A6E  0100               	movlb	0	; () banked
  5121  002A70  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  5122  002A72  0100               	movlb	0	; () banked
  5123  002A74  6FA3               	movwf	___flmul@prod& (0+255),b
  5124  002A76  6BA4               	clrf	(___flmul@prod+1)& (0+255),b
  5125  002A78  6BA5               	clrf	(___flmul@prod+2)& (0+255),b
  5126  002A7A  6BA6               	clrf	(___flmul@prod+3)& (0+255),b
  5127  002A7C  0100               	movlb	0	; () banked
  5128  002A7E  5195               	movf	(___flmul@a+1)& (0+255),w,b
  5129  002A80  0100               	movlb	0	; () banked
  5130  002A82  0391               	mulwf	(___flmul@b+1)& (0+255),b
  5131  002A84  CFF3 F0A7          	movff	prodl,___flmul@temp
  5132  002A88  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  5133                           
  5134                           ; BSR set to: 0
  5135  002A8C  0100               	movlb	0	; () banked
  5136  002A8E  51A7               	movf	___flmul@temp& (0+255),w,b
  5137  002A90  0100               	movlb	0	; () banked
  5138  002A92  279E               	addwf	___flmul@grs& (0+255),f,b
  5139  002A94  0E00               	movlw	0
  5140  002A96  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5141  002A98  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5142  002A9A  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5143                           
  5144                           ; BSR set to: 0
  5145  002A9C  0100               	movlb	0	; () banked
  5146  002A9E  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  5147  002AA0  0100               	movlb	0	; () banked
  5148  002AA2  27A3               	addwf	___flmul@prod& (0+255),f,b
  5149  002AA4  0E00               	movlw	0
  5150  002AA6  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5151  002AA8  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5152  002AAA  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5153  002AAC  0100               	movlb	0	; () banked
  5154  002AAE  5194               	movf	___flmul@a& (0+255),w,b
  5155  002AB0  0100               	movlb	0	; () banked
  5156  002AB2  0392               	mulwf	(___flmul@b+2)& (0+255),b
  5157  002AB4  CFF3 F0A7          	movff	prodl,___flmul@temp
  5158  002AB8  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  5159                           
  5160                           ; BSR set to: 0
  5161  002ABC  0100               	movlb	0	; () banked
  5162  002ABE  51A7               	movf	___flmul@temp& (0+255),w,b
  5163  002AC0  0100               	movlb	0	; () banked
  5164  002AC2  279E               	addwf	___flmul@grs& (0+255),f,b
  5165  002AC4  0E00               	movlw	0
  5166  002AC6  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5167  002AC8  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5168  002ACA  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5169                           
  5170                           ; BSR set to: 0
  5171  002ACC  0100               	movlb	0	; () banked
  5172  002ACE  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  5173  002AD0  0100               	movlb	0	; () banked
  5174  002AD2  27A3               	addwf	___flmul@prod& (0+255),f,b
  5175  002AD4  0E00               	movlw	0
  5176  002AD6  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5177  002AD8  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5178  002ADA  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5179                           
  5180                           ; BSR set to: 0
  5181  002ADC  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  5182  002AE0  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  5183  002AE4  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  5184  002AE8  0100               	movlb	0	; () banked
  5185  002AEA  6B9E               	clrf	___flmul@grs& (0+255),b
  5186                           
  5187                           ; BSR set to: 0
  5188  002AEC  0100               	movlb	0	; () banked
  5189  002AEE  5194               	movf	___flmul@a& (0+255),w,b
  5190  002AF0  0100               	movlb	0	; () banked
  5191  002AF2  0391               	mulwf	(___flmul@b+1)& (0+255),b
  5192  002AF4  CFF3 F0A7          	movff	prodl,___flmul@temp
  5193  002AF8  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  5194                           
  5195                           ; BSR set to: 0
  5196  002AFC  0100               	movlb	0	; () banked
  5197  002AFE  51A7               	movf	___flmul@temp& (0+255),w,b
  5198  002B00  0100               	movlb	0	; () banked
  5199  002B02  279E               	addwf	___flmul@grs& (0+255),f,b
  5200  002B04  0100               	movlb	0	; () banked
  5201  002B06  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  5202  002B08  0100               	movlb	0	; () banked
  5203  002B0A  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5204  002B0C  0E00               	movlw	0
  5205  002B0E  0100               	movlb	0	; () banked
  5206  002B10  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5207  002B12  0E00               	movlw	0
  5208  002B14  0100               	movlb	0	; () banked
  5209  002B16  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5210                           
  5211                           ; BSR set to: 0
  5212  002B18  0100               	movlb	0	; () banked
  5213  002B1A  5195               	movf	(___flmul@a+1)& (0+255),w,b
  5214  002B1C  0100               	movlb	0	; () banked
  5215  002B1E  0390               	mulwf	___flmul@b& (0+255),b
  5216  002B20  CFF3 F0A7          	movff	prodl,___flmul@temp
  5217  002B24  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  5218                           
  5219                           ; BSR set to: 0
  5220  002B28  0100               	movlb	0	; () banked
  5221  002B2A  51A7               	movf	___flmul@temp& (0+255),w,b
  5222  002B2C  0100               	movlb	0	; () banked
  5223  002B2E  279E               	addwf	___flmul@grs& (0+255),f,b
  5224  002B30  0100               	movlb	0	; () banked
  5225  002B32  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  5226  002B34  0100               	movlb	0	; () banked
  5227  002B36  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5228  002B38  0E00               	movlw	0
  5229  002B3A  0100               	movlb	0	; () banked
  5230  002B3C  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5231  002B3E  0E00               	movlw	0
  5232  002B40  0100               	movlb	0	; () banked
  5233  002B42  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5234                           
  5235                           ; BSR set to: 0
  5236  002B44  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  5237  002B48  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  5238  002B4C  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  5239  002B50  0100               	movlb	0	; () banked
  5240  002B52  6B9E               	clrf	___flmul@grs& (0+255),b
  5241  002B54  0100               	movlb	0	; () banked
  5242  002B56  5194               	movf	___flmul@a& (0+255),w,b
  5243  002B58  0100               	movlb	0	; () banked
  5244  002B5A  0390               	mulwf	___flmul@b& (0+255),b
  5245  002B5C  CFF3 F0A7          	movff	prodl,___flmul@temp
  5246  002B60  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  5247                           
  5248                           ; BSR set to: 0
  5249  002B64  0100               	movlb	0	; () banked
  5250  002B66  51A7               	movf	___flmul@temp& (0+255),w,b
  5251  002B68  0100               	movlb	0	; () banked
  5252  002B6A  279E               	addwf	___flmul@grs& (0+255),f,b
  5253  002B6C  0100               	movlb	0	; () banked
  5254  002B6E  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  5255  002B70  0100               	movlb	0	; () banked
  5256  002B72  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5257  002B74  0E00               	movlw	0
  5258  002B76  0100               	movlb	0	; () banked
  5259  002B78  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5260  002B7A  0E00               	movlw	0
  5261  002B7C  0100               	movlb	0	; () banked
  5262  002B7E  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5263                           
  5264                           ; BSR set to: 0
  5265  002B80  0100               	movlb	0	; () banked
  5266  002B82  5196               	movf	(___flmul@a+2)& (0+255),w,b
  5267  002B84  0100               	movlb	0	; () banked
  5268  002B86  0391               	mulwf	(___flmul@b+1)& (0+255),b
  5269  002B88  CFF3 F0A7          	movff	prodl,___flmul@temp
  5270  002B8C  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  5271  002B90  0100               	movlb	0	; () banked
  5272  002B92  51A7               	movf	___flmul@temp& (0+255),w,b
  5273  002B94  0100               	movlb	0	; () banked
  5274  002B96  27A3               	addwf	___flmul@prod& (0+255),f,b
  5275  002B98  0100               	movlb	0	; () banked
  5276  002B9A  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  5277  002B9C  0100               	movlb	0	; () banked
  5278  002B9E  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5279  002BA0  0E00               	movlw	0
  5280  002BA2  0100               	movlb	0	; () banked
  5281  002BA4  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5282  002BA6  0E00               	movlw	0
  5283  002BA8  0100               	movlb	0	; () banked
  5284  002BAA  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5285                           
  5286                           ; BSR set to: 0
  5287  002BAC  0100               	movlb	0	; () banked
  5288  002BAE  5195               	movf	(___flmul@a+1)& (0+255),w,b
  5289  002BB0  0100               	movlb	0	; () banked
  5290  002BB2  0392               	mulwf	(___flmul@b+2)& (0+255),b
  5291  002BB4  CFF3 F0A7          	movff	prodl,___flmul@temp
  5292  002BB8  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  5293                           
  5294                           ; BSR set to: 0
  5295  002BBC  0100               	movlb	0	; () banked
  5296  002BBE  51A7               	movf	___flmul@temp& (0+255),w,b
  5297  002BC0  0100               	movlb	0	; () banked
  5298  002BC2  27A3               	addwf	___flmul@prod& (0+255),f,b
  5299  002BC4  0100               	movlb	0	; () banked
  5300  002BC6  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  5301  002BC8  0100               	movlb	0	; () banked
  5302  002BCA  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5303  002BCC  0E00               	movlw	0
  5304  002BCE  0100               	movlb	0	; () banked
  5305  002BD0  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5306  002BD2  0E00               	movlw	0
  5307  002BD4  0100               	movlb	0	; () banked
  5308  002BD6  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5309  002BD8  0100               	movlb	0	; () banked
  5310  002BDA  5196               	movf	(___flmul@a+2)& (0+255),w,b
  5311  002BDC  0100               	movlb	0	; () banked
  5312  002BDE  0392               	mulwf	(___flmul@b+2)& (0+255),b
  5313  002BE0  CFF3 F0A7          	movff	prodl,___flmul@temp
  5314  002BE4  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  5315                           
  5316                           ; BSR set to: 0
  5317  002BE8  0100               	movlb	0	; () banked
  5318  002BEA  51A7               	movf	___flmul@temp& (0+255),w,b
  5319  002BEC  0100               	movlb	0	; () banked
  5320  002BEE  6F98               	movwf	??___flmul& (0+255),b
  5321  002BF0  0100               	movlb	0	; () banked
  5322  002BF2  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  5323  002BF4  0100               	movlb	0	; () banked
  5324  002BF6  6F99               	movwf	(??___flmul+1)& (0+255),b
  5325  002BF8  0100               	movlb	0	; () banked
  5326  002BFA  6B9A               	clrf	(??___flmul+2)& (0+255),b
  5327  002BFC  0100               	movlb	0	; () banked
  5328  002BFE  6B9B               	clrf	(??___flmul+3)& (0+255),b
  5329  002C00  C09A  F09B         	movff	??___flmul+2,??___flmul+3
  5330  002C04  C099  F09A         	movff	??___flmul+1,??___flmul+2
  5331  002C08  C098  F099         	movff	??___flmul,??___flmul+1
  5332  002C0C  0100               	movlb	0	; () banked
  5333  002C0E  6B98               	clrf	??___flmul& (0+255),b
  5334  002C10  0100               	movlb	0	; () banked
  5335  002C12  5198               	movf	??___flmul& (0+255),w,b
  5336  002C14  0100               	movlb	0	; () banked
  5337  002C16  27A3               	addwf	___flmul@prod& (0+255),f,b
  5338  002C18  0100               	movlb	0	; () banked
  5339  002C1A  5199               	movf	(??___flmul+1)& (0+255),w,b
  5340  002C1C  0100               	movlb	0	; () banked
  5341  002C1E  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5342  002C20  0100               	movlb	0	; () banked
  5343  002C22  519A               	movf	(??___flmul+2)& (0+255),w,b
  5344  002C24  0100               	movlb	0	; () banked
  5345  002C26  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5346  002C28  0100               	movlb	0	; () banked
  5347  002C2A  519B               	movf	(??___flmul+3)& (0+255),w,b
  5348  002C2C  0100               	movlb	0	; () banked
  5349  002C2E  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5350                           
  5351                           ; BSR set to: 0
  5352  002C30  C09E  F098         	movff	___flmul@grs,??___flmul
  5353  002C34  C09F  F099         	movff	___flmul@grs+1,??___flmul+1
  5354  002C38  C0A0  F09A         	movff	___flmul@grs+2,??___flmul+2
  5355  002C3C  C0A1  F09B         	movff	___flmul@grs+3,??___flmul+3
  5356  002C40  0E19               	movlw	25
  5357  002C42  D006               	goto	u7140
  5358  002C44                     u7145:
  5359  002C44  0100               	movlb	0	; () banked
  5360  002C46  90D8               	bcf	status,0,c
  5361  002C48  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  5362  002C4A  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  5363  002C4C  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  5364  002C4E  3398               	rrcf	??___flmul& (0+255),f,b
  5365  002C50                     u7140:
  5366  002C50  2EE8               	decfsz	wreg,f,c
  5367  002C52  D7F8               	goto	u7145
  5368  002C54  0100               	movlb	0	; () banked
  5369  002C56  5198               	movf	??___flmul& (0+255),w,b
  5370  002C58  0100               	movlb	0	; () banked
  5371  002C5A  27A3               	addwf	___flmul@prod& (0+255),f,b
  5372  002C5C  0100               	movlb	0	; () banked
  5373  002C5E  5199               	movf	(??___flmul+1)& (0+255),w,b
  5374  002C60  0100               	movlb	0	; () banked
  5375  002C62  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5376  002C64  0100               	movlb	0	; () banked
  5377  002C66  519A               	movf	(??___flmul+2)& (0+255),w,b
  5378  002C68  0100               	movlb	0	; () banked
  5379  002C6A  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5380  002C6C  0100               	movlb	0	; () banked
  5381  002C6E  519B               	movf	(??___flmul+3)& (0+255),w,b
  5382  002C70  0100               	movlb	0	; () banked
  5383  002C72  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5384                           
  5385                           ; BSR set to: 0
  5386  002C74  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  5387  002C78  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  5388  002C7C  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  5389  002C80  0100               	movlb	0	; () banked
  5390  002C82  6B9E               	clrf	___flmul@grs& (0+255),b
  5391                           
  5392                           ; BSR set to: 0
  5393  002C84  0100               	movlb	0	; () banked
  5394  002C86  519D               	movf	___flmul@aexp& (0+255),w,b
  5395  002C88  C0A2  F098         	movff	___flmul@bexp,??___flmul
  5396  002C8C  0100               	movlb	0	; () banked
  5397  002C8E  6B99               	clrf	(??___flmul+1)& (0+255),b
  5398  002C90  0100               	movlb	0	; () banked
  5399  002C92  2798               	addwf	??___flmul& (0+255),f,b
  5400  002C94  0E00               	movlw	0
  5401  002C96  2399               	addwfc	(??___flmul+1)& (0+255),f,b
  5402  002C98  0E82               	movlw	130
  5403  002C9A  0100               	movlb	0	; () banked
  5404  002C9C  2598               	addwf	??___flmul& (0+255),w,b
  5405  002C9E  0100               	movlb	0	; () banked
  5406  002CA0  6FA7               	movwf	___flmul@temp& (0+255),b
  5407  002CA2  0EFF               	movlw	255
  5408  002CA4  0100               	movlb	0	; () banked
  5409  002CA6  2199               	addwfc	(??___flmul+1)& (0+255),w,b
  5410  002CA8  0100               	movlb	0	; () banked
  5411  002CAA  6FA8               	movwf	(___flmul@temp+1)& (0+255),b
  5412  002CAC  D015               	goto	l5649
  5413  002CAE                     l5643:
  5414                           
  5415                           ; BSR set to: 0
  5416  002CAE  0100               	movlb	0	; () banked
  5417  002CB0  90D8               	bcf	status,0,c
  5418  002CB2  37A3               	rlcf	___flmul@prod& (0+255),f,b
  5419  002CB4  37A4               	rlcf	(___flmul@prod+1)& (0+255),f,b
  5420  002CB6  37A5               	rlcf	(___flmul@prod+2)& (0+255),f,b
  5421  002CB8  37A6               	rlcf	(___flmul@prod+3)& (0+255),f,b
  5422                           
  5423                           ; BSR set to: 0
  5424  002CBA  0100               	movlb	0	; () banked
  5425  002CBC  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  5426  002CBE  D002               	goto	l1310
  5427                           
  5428                           ; BSR set to: 0
  5429  002CC0  0100               	movlb	0	; () banked
  5430  002CC2  81A3               	bsf	___flmul@prod& (0+255),0,b
  5431  002CC4                     l1310:
  5432                           
  5433                           ; BSR set to: 0
  5434  002CC4  0100               	movlb	0	; () banked
  5435  002CC6  90D8               	bcf	status,0,c
  5436  002CC8  379E               	rlcf	___flmul@grs& (0+255),f,b
  5437  002CCA  379F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  5438  002CCC  37A0               	rlcf	(___flmul@grs+2)& (0+255),f,b
  5439  002CCE  37A1               	rlcf	(___flmul@grs+3)& (0+255),f,b
  5440  002CD0  0100               	movlb	0	; () banked
  5441  002CD2  07A7               	decf	___flmul@temp& (0+255),f,b
  5442  002CD4  A0D8               	btfss	status,0,c
  5443  002CD6  07A8               	decf	(___flmul@temp+1)& (0+255),f,b
  5444  002CD8                     l5649:
  5445                           
  5446                           ; BSR set to: 0
  5447  002CD8  0100               	movlb	0	; () banked
  5448  002CDA  AFA5               	btfss	(___flmul@prod+2)& (0+255),7,b
  5449  002CDC  D7E8               	goto	l5643
  5450                           
  5451                           ; BSR set to: 0
  5452                           
  5453                           ; BSR set to: 0
  5454  002CDE  0E00               	movlw	0
  5455  002CE0  0100               	movlb	0	; () banked
  5456  002CE2  6F9D               	movwf	___flmul@aexp& (0+255),b
  5457                           
  5458                           ; BSR set to: 0
  5459  002CE4  0100               	movlb	0	; () banked
  5460  002CE6  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  5461  002CE8  D024               	goto	l1312
  5462                           
  5463                           ; BSR set to: 0
  5464  002CEA  0EFF               	movlw	255
  5465  002CEC  0100               	movlb	0	; () banked
  5466  002CEE  159E               	andwf	___flmul@grs& (0+255),w,b
  5467  002CF0  0100               	movlb	0	; () banked
  5468  002CF2  6F98               	movwf	??___flmul& (0+255),b
  5469  002CF4  0EFF               	movlw	255
  5470  002CF6  0100               	movlb	0	; () banked
  5471  002CF8  159F               	andwf	(___flmul@grs+1)& (0+255),w,b
  5472  002CFA  0100               	movlb	0	; () banked
  5473  002CFC  6F99               	movwf	(??___flmul+1)& (0+255),b
  5474  002CFE  0EFF               	movlw	255
  5475  002D00  0100               	movlb	0	; () banked
  5476  002D02  15A0               	andwf	(___flmul@grs+2)& (0+255),w,b
  5477  002D04  0100               	movlb	0	; () banked
  5478  002D06  6F9A               	movwf	(??___flmul+2)& (0+255),b
  5479  002D08  0E7F               	movlw	127
  5480  002D0A  0100               	movlb	0	; () banked
  5481  002D0C  15A1               	andwf	(___flmul@grs+3)& (0+255),w,b
  5482  002D0E  0100               	movlb	0	; () banked
  5483  002D10  6F9B               	movwf	(??___flmul+3)& (0+255),b
  5484  002D12  0100               	movlb	0	; () banked
  5485  002D14  5198               	movf	??___flmul& (0+255),w,b
  5486  002D16  0100               	movlb	0	; () banked
  5487  002D18  1199               	iorwf	(??___flmul+1)& (0+255),w,b
  5488  002D1A  0100               	movlb	0	; () banked
  5489  002D1C  119A               	iorwf	(??___flmul+2)& (0+255),w,b
  5490  002D1E  0100               	movlb	0	; () banked
  5491  002D20  119B               	iorwf	(??___flmul+3)& (0+255),w,b
  5492  002D22  A4D8               	btfss	status,2,c
  5493  002D24  D003               	goto	l5659
  5494                           
  5495                           ; BSR set to: 0
  5496                           
  5497                           ; BSR set to: 0
  5498  002D26  0100               	movlb	0	; () banked
  5499  002D28  A1A3               	btfss	___flmul@prod& (0+255),0,b
  5500  002D2A  D003               	goto	l1312
  5501  002D2C                     l5659:
  5502                           
  5503                           ; BSR set to: 0
  5504  002D2C  0E01               	movlw	1
  5505  002D2E  0100               	movlb	0	; () banked
  5506  002D30  6F9D               	movwf	___flmul@aexp& (0+255),b
  5507  002D32                     l1312:
  5508                           
  5509                           ; BSR set to: 0
  5510  002D32  0100               	movlb	0	; () banked
  5511  002D34  519D               	movf	___flmul@aexp& (0+255),w,b
  5512  002D36  0100               	movlb	0	; () banked
  5513  002D38  B4D8               	btfsc	status,2,c
  5514  002D3A  D023               	goto	l5669
  5515                           
  5516                           ; BSR set to: 0
  5517  002D3C  0E01               	movlw	1
  5518  002D3E  0100               	movlb	0	; () banked
  5519  002D40  27A3               	addwf	___flmul@prod& (0+255),f,b
  5520  002D42  0E00               	movlw	0
  5521  002D44  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5522  002D46  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5523  002D48  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5524                           
  5525                           ; BSR set to: 0
  5526  002D4A  0100               	movlb	0	; () banked
  5527  002D4C  A1A6               	btfss	(___flmul@prod+3)& (0+255),0,b
  5528  002D4E  D019               	goto	l5669
  5529                           
  5530                           ; BSR set to: 0
  5531  002D50  C0A3  F098         	movff	___flmul@prod,??___flmul
  5532  002D54  C0A4  F099         	movff	___flmul@prod+1,??___flmul+1
  5533  002D58  C0A5  F09A         	movff	___flmul@prod+2,??___flmul+2
  5534  002D5C  C0A6  F09B         	movff	___flmul@prod+3,??___flmul+3
  5535  002D60  0100               	movlb	0	; () banked
  5536  002D62  359B               	rlcf	(??___flmul+3)& (0+255),w,b
  5537  002D64  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  5538  002D66  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  5539  002D68  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  5540  002D6A  3398               	rrcf	??___flmul& (0+255),f,b
  5541  002D6C  C098  F0A3         	movff	??___flmul,___flmul@prod
  5542  002D70  C099  F0A4         	movff	??___flmul+1,___flmul@prod+1
  5543  002D74  C09A  F0A5         	movff	??___flmul+2,___flmul@prod+2
  5544  002D78  C09B  F0A6         	movff	??___flmul+3,___flmul@prod+3
  5545                           
  5546                           ; BSR set to: 0
  5547  002D7C  0100               	movlb	0	; () banked
  5548  002D7E  4BA7               	infsnz	___flmul@temp& (0+255),f,b
  5549  002D80  2BA8               	incf	(___flmul@temp+1)& (0+255),f,b
  5550  002D82                     l5669:
  5551                           
  5552                           ; BSR set to: 0
  5553  002D82  0100               	movlb	0	; () banked
  5554  002D84  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5555  002D86  D010               	goto	l5673
  5556  002D88  0100               	movlb	0	; () banked
  5557  002D8A  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  5558  002D8C  E104               	bnz	u7220
  5559  002D8E  0100               	movlb	0	; () banked
  5560  002D90  29A7               	incf	___flmul@temp& (0+255),w,b
  5561  002D92  A0D8               	btfss	status,0,c
  5562  002D94  D009               	goto	l5673
  5563  002D96                     u7220:
  5564                           
  5565                           ; BSR set to: 0
  5566  002D96  0E00               	movlw	0
  5567  002D98  0100               	movlb	0	; () banked
  5568  002D9A  6FA3               	movwf	___flmul@prod& (0+255),b
  5569  002D9C  0E00               	movlw	0
  5570  002D9E  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  5571  002DA0  0E80               	movlw	128
  5572  002DA2  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  5573  002DA4  0E7F               	movlw	127
  5574  002DA6  D02B               	goto	L1
  5575  002DA8                     l5673:
  5576                           
  5577                           ; BSR set to: 0
  5578  002DA8  0100               	movlb	0	; () banked
  5579  002DAA  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5580  002DAC  D007               	goto	l5675
  5581  002DAE  0100               	movlb	0	; () banked
  5582  002DB0  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  5583  002DB2  E111               	bnz	l1320
  5584  002DB4  0100               	movlb	0	; () banked
  5585  002DB6  05A7               	decf	___flmul@temp& (0+255),w,b
  5586  002DB8  B0D8               	btfsc	status,0,c
  5587  002DBA  D00D               	goto	l1320
  5588  002DBC                     l5675:
  5589                           
  5590                           ; BSR set to: 0
  5591  002DBC  0E00               	movlw	0
  5592  002DBE  0100               	movlb	0	; () banked
  5593  002DC0  6FA3               	movwf	___flmul@prod& (0+255),b
  5594  002DC2  0E00               	movlw	0
  5595  002DC4  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  5596  002DC6  0E00               	movlw	0
  5597  002DC8  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  5598  002DCA  0E00               	movlw	0
  5599  002DCC  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  5600  002DCE  0E00               	movlw	0
  5601  002DD0  0100               	movlb	0	; () banked
  5602  002DD2  6F9C               	movwf	___flmul@sign& (0+255),b
  5603  002DD4  D015               	goto	l5685
  5604  002DD6                     l1320:
  5605                           
  5606                           ; BSR set to: 0
  5607  002DD6  C0A7  F0A2         	movff	___flmul@temp,___flmul@bexp
  5608                           
  5609                           ; BSR set to: 0
  5610  002DDA  0EFF               	movlw	255
  5611  002DDC  0100               	movlb	0	; () banked
  5612  002DDE  17A3               	andwf	___flmul@prod& (0+255),f,b
  5613  002DE0  0EFF               	movlw	255
  5614  002DE2  17A4               	andwf	(___flmul@prod+1)& (0+255),f,b
  5615  002DE4  0E7F               	movlw	127
  5616  002DE6  17A5               	andwf	(___flmul@prod+2)& (0+255),f,b
  5617  002DE8  0E00               	movlw	0
  5618  002DEA  17A6               	andwf	(___flmul@prod+3)& (0+255),f,b
  5619                           
  5620                           ; BSR set to: 0
  5621  002DEC  0100               	movlb	0	; () banked
  5622  002DEE  A1A2               	btfss	___flmul@bexp& (0+255),0,b
  5623  002DF0  D002               	goto	l5683
  5624                           
  5625                           ; BSR set to: 0
  5626  002DF2  0100               	movlb	0	; () banked
  5627  002DF4  8FA5               	bsf	(___flmul@prod+2)& (0+255),7,b
  5628  002DF6                     l5683:
  5629                           
  5630                           ; BSR set to: 0
  5631  002DF6  0100               	movlb	0	; () banked
  5632  002DF8  90D8               	bcf	status,0,c
  5633  002DFA  31A2               	rrcf	___flmul@bexp& (0+255),w,b
  5634  002DFC  0100               	movlb	0	; () banked
  5635  002DFE                     L1:
  5636  002DFE  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  5637  002E00                     l5685:
  5638                           
  5639                           ; BSR set to: 0
  5640  002E00  0100               	movlb	0	; () banked
  5641  002E02  519C               	movf	___flmul@sign& (0+255),w,b
  5642  002E04  0100               	movlb	0	; () banked
  5643  002E06  13A6               	iorwf	(___flmul@prod+3)& (0+255),f,b
  5644                           
  5645                           ; BSR set to: 0
  5646  002E08  C0A3  F090         	movff	___flmul@prod,?___flmul
  5647  002E0C  C0A4  F091         	movff	___flmul@prod+1,?___flmul+1
  5648  002E10  C0A5  F092         	movff	___flmul@prod+2,?___flmul+2
  5649  002E14  C0A6  F093         	movff	___flmul@prod+3,?___flmul+3
  5650  002E18  0012               	return	
  5651  002E1A                     __end_of___flmul:
  5652                           	opt stack 0
  5653                           tblptru	equ	0xFF8
  5654                           tblptrh	equ	0xFF7
  5655                           tblptrl	equ	0xFF6
  5656                           tablat	equ	0xFF5
  5657                           prodh	equ	0xFF4
  5658                           prodl	equ	0xFF3
  5659                           postinc0	equ	0xFEE
  5660                           wreg	equ	0xFE8
  5661                           indf2	equ	0xFDF
  5662                           postinc2	equ	0xFDE
  5663                           postdec2	equ	0xFDD
  5664                           fsr2h	equ	0xFDA
  5665                           fsr2l	equ	0xFD9
  5666                           status	equ	0xFD8
  5667                           
  5668 ;; *************** function ___fladd *****************
  5669 ;; Defined at:
  5670 ;;		line 10 in file "P:\Programmi\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  5671 ;; Parameters:    Size  Location     Type
  5672 ;;  b               4   77[BANK0 ] unsigned char 
  5673 ;;  a               4   81[BANK0 ] unsigned char 
  5674 ;; Auto vars:     Size  Location     Type
  5675 ;;  grs             1   96[BANK0 ] unsigned char 
  5676 ;;  bexp            1   95[BANK0 ] unsigned char 
  5677 ;;  aexp            1   94[BANK0 ] unsigned char 
  5678 ;;  signs           1   93[BANK0 ] unsigned char 
  5679 ;; Return value:  Size  Location     Type
  5680 ;;                  4   77[BANK0 ] unsigned char 
  5681 ;; Registers used:
  5682 ;;		wreg, status,2, status,0
  5683 ;; Tracked objects:
  5684 ;;		On entry : 0/0
  5685 ;;		On exit  : 0/0
  5686 ;;		Unchanged: 0/0
  5687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5688 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5689 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5690 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5691 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5692 ;;Total ram usage:       20 bytes
  5693 ;; Hardware stack levels used:    1
  5694 ;; Hardware stack levels required when called:    4
  5695 ;; This function calls:
  5696 ;;		Nothing
  5697 ;; This function is called by:
  5698 ;;		_parallelo
  5699 ;;		_asin
  5700 ;;		_atan
  5701 ;;		_eval_poly
  5702 ;; This function uses a non-reentrant model
  5703 ;;
  5704                           
  5705                           	psect	text14
  5706  0024CC                     __ptext14:
  5707                           	opt stack 0
  5708  0024CC                     ___fladd:
  5709                           	opt stack 22
  5710                           
  5711                           ; BSR set to: 0
  5712                           ;incstack = 0
  5713  0024CC  0100               	movlb	0	; () banked
  5714  0024CE  51B0               	movf	(___fladd@b+3)& (0+255),w,b
  5715  0024D0  0B80               	andlw	128
  5716  0024D2  0100               	movlb	0	; () banked
  5717  0024D4  6FBD               	movwf	___fladd@signs& (0+255),b
  5718  0024D6  0100               	movlb	0	; () banked
  5719  0024D8  51B0               	movf	(___fladd@b+3)& (0+255),w,b
  5720  0024DA  25B0               	addwf	(___fladd@b+3)& (0+255),w,b
  5721  0024DC  0100               	movlb	0	; () banked
  5722  0024DE  6FBF               	movwf	___fladd@bexp& (0+255),b
  5723                           
  5724                           ; BSR set to: 0
  5725  0024E0  0100               	movlb	0	; () banked
  5726  0024E2  AFAF               	btfss	(___fladd@b+2)& (0+255),7,b
  5727  0024E4  D002               	goto	l5365
  5728                           
  5729                           ; BSR set to: 0
  5730  0024E6  0100               	movlb	0	; () banked
  5731  0024E8  81BF               	bsf	___fladd@bexp& (0+255),0,b
  5732  0024EA                     l5365:
  5733                           
  5734                           ; BSR set to: 0
  5735  0024EA  0100               	movlb	0	; () banked
  5736  0024EC  51BF               	movf	___fladd@bexp& (0+255),w,b
  5737  0024EE  0100               	movlb	0	; () banked
  5738  0024F0  B4D8               	btfsc	status,2,c
  5739  0024F2  D012               	goto	l5375
  5740                           
  5741                           ; BSR set to: 0
  5742  0024F4  0100               	movlb	0	; () banked
  5743  0024F6  29BF               	incf	___fladd@bexp& (0+255),w,b
  5744  0024F8  A4D8               	btfss	status,2,c
  5745  0024FA  D009               	goto	l5371
  5746                           
  5747                           ; BSR set to: 0
  5748  0024FC  0E00               	movlw	0
  5749  0024FE  0100               	movlb	0	; () banked
  5750  002500  6FAD               	movwf	___fladd@b& (0+255),b
  5751  002502  0E00               	movlw	0
  5752  002504  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  5753  002506  0E00               	movlw	0
  5754  002508  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  5755  00250A  0E00               	movlw	0
  5756  00250C  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  5757  00250E                     l5371:
  5758                           
  5759                           ; BSR set to: 0
  5760  00250E  0100               	movlb	0	; () banked
  5761  002510  8FAF               	bsf	(___fladd@b+2)& (0+255),7,b
  5762                           
  5763                           ; BSR set to: 0
  5764  002512  0E00               	movlw	0
  5765  002514  0100               	movlb	0	; () banked
  5766  002516  D008               	goto	L2
  5767  002518                     l5375:
  5768                           
  5769                           ; BSR set to: 0
  5770  002518  0E00               	movlw	0
  5771  00251A  0100               	movlb	0	; () banked
  5772  00251C  6FAD               	movwf	___fladd@b& (0+255),b
  5773  00251E  0E00               	movlw	0
  5774  002520  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  5775  002522  0E00               	movlw	0
  5776  002524  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  5777  002526  0E00               	movlw	0
  5778  002528                     L2:
  5779  002528  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  5780                           
  5781                           ; BSR set to: 0
  5782                           
  5783                           ; BSR set to: 0
  5784  00252A  0100               	movlb	0	; () banked
  5785  00252C  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  5786  00252E  0B80               	andlw	128
  5787  002530  0100               	movlb	0	; () banked
  5788  002532  6FBE               	movwf	___fladd@aexp& (0+255),b
  5789                           
  5790                           ; BSR set to: 0
  5791  002534  0100               	movlb	0	; () banked
  5792  002536  51BD               	movf	___fladd@signs& (0+255),w,b
  5793  002538  0100               	movlb	0	; () banked
  5794  00253A  19BE               	xorwf	___fladd@aexp& (0+255),w,b
  5795  00253C  B4D8               	btfsc	status,2,c
  5796  00253E  D002               	goto	l5383
  5797                           
  5798                           ; BSR set to: 0
  5799  002540  0100               	movlb	0	; () banked
  5800  002542  8DBD               	bsf	___fladd@signs& (0+255),6,b
  5801  002544                     l5383:
  5802                           
  5803                           ; BSR set to: 0
  5804  002544  0100               	movlb	0	; () banked
  5805  002546  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  5806  002548  25B4               	addwf	(___fladd@a+3)& (0+255),w,b
  5807  00254A  0100               	movlb	0	; () banked
  5808  00254C  6FBE               	movwf	___fladd@aexp& (0+255),b
  5809                           
  5810                           ; BSR set to: 0
  5811  00254E  0100               	movlb	0	; () banked
  5812  002550  AFB3               	btfss	(___fladd@a+2)& (0+255),7,b
  5813  002552  D002               	goto	l5389
  5814                           
  5815                           ; BSR set to: 0
  5816  002554  0100               	movlb	0	; () banked
  5817  002556  81BE               	bsf	___fladd@aexp& (0+255),0,b
  5818  002558                     l5389:
  5819                           
  5820                           ; BSR set to: 0
  5821  002558  0100               	movlb	0	; () banked
  5822  00255A  51BE               	movf	___fladd@aexp& (0+255),w,b
  5823  00255C  0100               	movlb	0	; () banked
  5824  00255E  B4D8               	btfsc	status,2,c
  5825  002560  D012               	goto	l5399
  5826                           
  5827                           ; BSR set to: 0
  5828  002562  0100               	movlb	0	; () banked
  5829  002564  29BE               	incf	___fladd@aexp& (0+255),w,b
  5830  002566  A4D8               	btfss	status,2,c
  5831  002568  D009               	goto	l5395
  5832                           
  5833                           ; BSR set to: 0
  5834  00256A  0E00               	movlw	0
  5835  00256C  0100               	movlb	0	; () banked
  5836  00256E  6FB1               	movwf	___fladd@a& (0+255),b
  5837  002570  0E00               	movlw	0
  5838  002572  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  5839  002574  0E00               	movlw	0
  5840  002576  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  5841  002578  0E00               	movlw	0
  5842  00257A  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  5843  00257C                     l5395:
  5844                           
  5845                           ; BSR set to: 0
  5846  00257C  0100               	movlb	0	; () banked
  5847  00257E  8FB3               	bsf	(___fladd@a+2)& (0+255),7,b
  5848                           
  5849                           ; BSR set to: 0
  5850  002580  0E00               	movlw	0
  5851  002582  0100               	movlb	0	; () banked
  5852  002584  D008               	goto	L3
  5853  002586                     l5399:
  5854                           
  5855                           ; BSR set to: 0
  5856  002586  0E00               	movlw	0
  5857  002588  0100               	movlb	0	; () banked
  5858  00258A  6FB1               	movwf	___fladd@a& (0+255),b
  5859  00258C  0E00               	movlw	0
  5860  00258E  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  5861  002590  0E00               	movlw	0
  5862  002592  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  5863  002594  0E00               	movlw	0
  5864  002596                     L3:
  5865  002596  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  5866                           
  5867                           ; BSR set to: 0
  5868                           
  5869                           ; BSR set to: 0
  5870  002598  0100               	movlb	0	; () banked
  5871  00259A  51BF               	movf	___fladd@bexp& (0+255),w,b
  5872  00259C  0100               	movlb	0	; () banked
  5873  00259E  5DBE               	subwf	___fladd@aexp& (0+255),w,b
  5874  0025A0  B0D8               	btfsc	status,0,c
  5875  0025A2  D024               	goto	l5437
  5876                           
  5877                           ; BSR set to: 0
  5878  0025A4  0100               	movlb	0	; () banked
  5879  0025A6  ADBD               	btfss	___fladd@signs& (0+255),6,b
  5880  0025A8  D003               	goto	l5407
  5881                           
  5882                           ; BSR set to: 0
  5883  0025AA  0E80               	movlw	128
  5884  0025AC  0100               	movlb	0	; () banked
  5885  0025AE  1BBD               	xorwf	___fladd@signs& (0+255),f,b
  5886  0025B0                     l5407:
  5887                           
  5888                           ; BSR set to: 0
  5889  0025B0  C0BF  F0C0         	movff	___fladd@bexp,___fladd@grs
  5890                           
  5891                           ; BSR set to: 0
  5892  0025B4  C0BE  F0BF         	movff	___fladd@aexp,___fladd@bexp
  5893                           
  5894                           ; BSR set to: 0
  5895  0025B8  C0C0  F0BE         	movff	___fladd@grs,___fladd@aexp
  5896                           
  5897                           ; BSR set to: 0
  5898  0025BC  C0AD  F0C0         	movff	___fladd@b,___fladd@grs
  5899                           
  5900                           ; BSR set to: 0
  5901  0025C0  C0B1  F0AD         	movff	___fladd@a,___fladd@b
  5902                           
  5903                           ; BSR set to: 0
  5904  0025C4  C0C0  F0B1         	movff	___fladd@grs,___fladd@a
  5905                           
  5906                           ; BSR set to: 0
  5907  0025C8  C0AE  F0C0         	movff	___fladd@b+1,___fladd@grs
  5908                           
  5909                           ; BSR set to: 0
  5910  0025CC  C0B2  F0AE         	movff	___fladd@a+1,___fladd@b+1
  5911                           
  5912                           ; BSR set to: 0
  5913  0025D0  C0C0  F0B2         	movff	___fladd@grs,___fladd@a+1
  5914                           
  5915                           ; BSR set to: 0
  5916  0025D4  C0AF  F0C0         	movff	___fladd@b+2,___fladd@grs
  5917                           
  5918                           ; BSR set to: 0
  5919  0025D8  C0B3  F0AF         	movff	___fladd@a+2,___fladd@b+2
  5920                           
  5921                           ; BSR set to: 0
  5922  0025DC  C0C0  F0B3         	movff	___fladd@grs,___fladd@a+2
  5923                           
  5924                           ; BSR set to: 0
  5925  0025E0  C0B0  F0C0         	movff	___fladd@b+3,___fladd@grs
  5926                           
  5927                           ; BSR set to: 0
  5928  0025E4  C0B4  F0B0         	movff	___fladd@a+3,___fladd@b+3
  5929                           
  5930                           ; BSR set to: 0
  5931  0025E8  C0C0  F0B4         	movff	___fladd@grs,___fladd@a+3
  5932  0025EC                     l5437:
  5933                           
  5934                           ; BSR set to: 0
  5935  0025EC  0E00               	movlw	0
  5936  0025EE  0100               	movlb	0	; () banked
  5937  0025F0  6FC0               	movwf	___fladd@grs& (0+255),b
  5938                           
  5939                           ; BSR set to: 0
  5940  0025F2  0100               	movlb	0	; () banked
  5941  0025F4  51BF               	movf	___fladd@bexp& (0+255),w,b
  5942  0025F6  0100               	movlb	0	; () banked
  5943  0025F8  6FB5               	movwf	??___fladd& (0+255),b
  5944  0025FA  6BB6               	clrf	(??___fladd+1)& (0+255),b
  5945  0025FC  0100               	movlb	0	; () banked
  5946  0025FE  1FB5               	comf	??___fladd& (0+255),f,b
  5947  002600  1FB6               	comf	(??___fladd+1)& (0+255),f,b
  5948  002602  4BB5               	infsnz	??___fladd& (0+255),f,b
  5949  002604  2BB6               	incf	(??___fladd+1)& (0+255),f,b
  5950  002606  0100               	movlb	0	; () banked
  5951  002608  51BE               	movf	___fladd@aexp& (0+255),w,b
  5952  00260A  0100               	movlb	0	; () banked
  5953  00260C  6FB7               	movwf	(??___fladd+2)& (0+255),b
  5954  00260E  6BB8               	clrf	(??___fladd+3)& (0+255),b
  5955  002610  0100               	movlb	0	; () banked
  5956  002612  51B5               	movf	??___fladd& (0+255),w,b
  5957  002614  0100               	movlb	0	; () banked
  5958  002616  27B7               	addwf	(??___fladd+2)& (0+255),f,b
  5959  002618  0100               	movlb	0	; () banked
  5960  00261A  51B6               	movf	(??___fladd+1)& (0+255),w,b
  5961  00261C  0100               	movlb	0	; () banked
  5962  00261E  23B8               	addwfc	(??___fladd+3)& (0+255),f,b
  5963  002620  0100               	movlb	0	; () banked
  5964  002622  BFB8               	btfsc	(??___fladd+3)& (0+255),7,b
  5965  002624  D03D               	goto	l1218
  5966  002626  0100               	movlb	0	; () banked
  5967  002628  51B8               	movf	(??___fladd+3)& (0+255),w,b
  5968  00262A  E105               	bnz	u6760
  5969  00262C  0E1A               	movlw	26
  5970  00262E  0100               	movlb	0	; () banked
  5971  002630  5DB7               	subwf	(??___fladd+2)& (0+255),w,b
  5972  002632  A0D8               	btfss	status,0,c
  5973  002634  D035               	goto	l1218
  5974  002636                     u6760:
  5975                           
  5976                           ; BSR set to: 0
  5977  002636  0100               	movlb	0	; () banked
  5978  002638  51AD               	movf	___fladd@b& (0+255),w,b
  5979  00263A  0100               	movlb	0	; () banked
  5980  00263C  11AE               	iorwf	(___fladd@b+1)& (0+255),w,b
  5981  00263E  0100               	movlb	0	; () banked
  5982  002640  11AF               	iorwf	(___fladd@b+2)& (0+255),w,b
  5983  002642  0100               	movlb	0	; () banked
  5984  002644  11B0               	iorwf	(___fladd@b+3)& (0+255),w,b
  5985  002646  B4D8               	btfsc	status,2,c
  5986  002648  D002               	goto	u6770
  5987  00264A  0E01               	movlw	1
  5988  00264C  D001               	goto	u6780
  5989  00264E                     u6770:
  5990  00264E  0E00               	movlw	0
  5991  002650                     u6780:
  5992  002650  0100               	movlb	0	; () banked
  5993  002652  6FC0               	movwf	___fladd@grs& (0+255),b
  5994                           
  5995                           ; BSR set to: 0
  5996  002654  0E00               	movlw	0
  5997  002656  0100               	movlb	0	; () banked
  5998  002658  6FAD               	movwf	___fladd@b& (0+255),b
  5999  00265A  0E00               	movlw	0
  6000  00265C  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  6001  00265E  0E00               	movlw	0
  6002  002660  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  6003  002662  0E00               	movlw	0
  6004  002664  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  6005                           
  6006                           ; BSR set to: 0
  6007  002666  C0BE  F0BF         	movff	___fladd@aexp,___fladd@bexp
  6008  00266A  D020               	goto	l1217
  6009  00266C                     l1219:
  6010                           
  6011                           ; BSR set to: 0
  6012  00266C  0100               	movlb	0	; () banked
  6013  00266E  A1C0               	btfss	___fladd@grs& (0+255),0,b
  6014  002670  D007               	goto	l5449
  6015                           
  6016                           ; BSR set to: 0
  6017  002672  0100               	movlb	0	; () banked
  6018  002674  90D8               	bcf	status,0,c
  6019  002676  31C0               	rrcf	___fladd@grs& (0+255),w,b
  6020  002678  0901               	iorlw	1
  6021  00267A  0100               	movlb	0	; () banked
  6022  00267C  6FC0               	movwf	___fladd@grs& (0+255),b
  6023  00267E  D003               	goto	l5451
  6024  002680                     l5449:
  6025                           
  6026                           ; BSR set to: 0
  6027  002680  0100               	movlb	0	; () banked
  6028  002682  90D8               	bcf	status,0,c
  6029  002684  33C0               	rrcf	___fladd@grs& (0+255),f,b
  6030  002686                     l5451:
  6031                           
  6032                           ; BSR set to: 0
  6033  002686  0100               	movlb	0	; () banked
  6034  002688  A1AD               	btfss	___fladd@b& (0+255),0,b
  6035  00268A  D002               	goto	l5455
  6036                           
  6037                           ; BSR set to: 0
  6038  00268C  0100               	movlb	0	; () banked
  6039  00268E  8FC0               	bsf	___fladd@grs& (0+255),7,b
  6040  002690                     l5455:
  6041                           
  6042                           ; BSR set to: 0
  6043  002690  0100               	movlb	0	; () banked
  6044  002692  35B0               	rlcf	(___fladd@b+3)& (0+255),w,b
  6045  002694  33B0               	rrcf	(___fladd@b+3)& (0+255),f,b
  6046  002696  33AF               	rrcf	(___fladd@b+2)& (0+255),f,b
  6047  002698  33AE               	rrcf	(___fladd@b+1)& (0+255),f,b
  6048  00269A  33AD               	rrcf	___fladd@b& (0+255),f,b
  6049                           
  6050                           ; BSR set to: 0
  6051  00269C  0100               	movlb	0	; () banked
  6052  00269E  2BBF               	incf	___fladd@bexp& (0+255),f,b
  6053  0026A0                     l1218:
  6054                           
  6055                           ; BSR set to: 0
  6056  0026A0  0100               	movlb	0	; () banked
  6057  0026A2  51BE               	movf	___fladd@aexp& (0+255),w,b
  6058  0026A4  0100               	movlb	0	; () banked
  6059  0026A6  5DBF               	subwf	___fladd@bexp& (0+255),w,b
  6060  0026A8  A0D8               	btfss	status,0,c
  6061  0026AA  D7E0               	goto	l1219
  6062  0026AC                     l1217:
  6063                           
  6064                           ; BSR set to: 0
  6065  0026AC  0100               	movlb	0	; () banked
  6066  0026AE  BDBD               	btfsc	___fladd@signs& (0+255),6,b
  6067  0026B0  D03F               	goto	l5483
  6068                           
  6069                           ; BSR set to: 0
  6070  0026B2  0100               	movlb	0	; () banked
  6071  0026B4  51BF               	movf	___fladd@bexp& (0+255),w,b
  6072  0026B6  0100               	movlb	0	; () banked
  6073  0026B8  A4D8               	btfss	status,2,c
  6074  0026BA  D00A               	goto	l5465
  6075                           
  6076                           ; BSR set to: 0
  6077  0026BC  0E00               	movlw	0
  6078  0026BE  0100               	movlb	0	; () banked
  6079  0026C0  6FAD               	movwf	?___fladd& (0+255),b
  6080  0026C2  0E00               	movlw	0
  6081  0026C4  6FAE               	movwf	(?___fladd+1)& (0+255),b
  6082  0026C6  0E00               	movlw	0
  6083  0026C8  6FAF               	movwf	(?___fladd+2)& (0+255),b
  6084  0026CA  0E00               	movlw	0
  6085  0026CC  6FB0               	movwf	(?___fladd+3)& (0+255),b
  6086                           
  6087                           ; BSR set to: 0
  6088  0026CE  0012               	return	
  6089  0026D0                     l5465:
  6090                           
  6091                           ; BSR set to: 0
  6092  0026D0  0100               	movlb	0	; () banked
  6093  0026D2  51B1               	movf	___fladd@a& (0+255),w,b
  6094  0026D4  0100               	movlb	0	; () banked
  6095  0026D6  27AD               	addwf	___fladd@b& (0+255),f,b
  6096  0026D8  0100               	movlb	0	; () banked
  6097  0026DA  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  6098  0026DC  0100               	movlb	0	; () banked
  6099  0026DE  23AE               	addwfc	(___fladd@b+1)& (0+255),f,b
  6100  0026E0  0100               	movlb	0	; () banked
  6101  0026E2  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  6102  0026E4  0100               	movlb	0	; () banked
  6103  0026E6  23AF               	addwfc	(___fladd@b+2)& (0+255),f,b
  6104  0026E8  0100               	movlb	0	; () banked
  6105  0026EA  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  6106  0026EC  0100               	movlb	0	; () banked
  6107  0026EE  23B0               	addwfc	(___fladd@b+3)& (0+255),f,b
  6108                           
  6109                           ; BSR set to: 0
  6110  0026F0  0100               	movlb	0	; () banked
  6111  0026F2  A1B0               	btfss	(___fladd@b+3)& (0+255),0,b
  6112  0026F4  D0CC               	goto	l5519
  6113                           
  6114                           ; BSR set to: 0
  6115  0026F6  0100               	movlb	0	; () banked
  6116  0026F8  A1C0               	btfss	___fladd@grs& (0+255),0,b
  6117  0026FA  D009               	goto	l5473
  6118                           
  6119                           ; BSR set to: 0
  6120  0026FC  0100               	movlb	0	; () banked
  6121  0026FE  90D8               	bcf	status,0,c
  6122  002700  33C0               	rrcf	___fladd@grs& (0+255),f,b
  6123  002702  0100               	movlb	0	; () banked
  6124  002704  51C0               	movf	___fladd@grs& (0+255),w,b
  6125  002706  0901               	iorlw	1
  6126  002708  0100               	movlb	0	; () banked
  6127  00270A  6FC0               	movwf	___fladd@grs& (0+255),b
  6128  00270C  D003               	goto	l5475
  6129  00270E                     l5473:
  6130                           
  6131                           ; BSR set to: 0
  6132  00270E  0100               	movlb	0	; () banked
  6133  002710  90D8               	bcf	status,0,c
  6134  002712  33C0               	rrcf	___fladd@grs& (0+255),f,b
  6135  002714                     l5475:
  6136                           
  6137                           ; BSR set to: 0
  6138  002714  0100               	movlb	0	; () banked
  6139  002716  A1AD               	btfss	___fladd@b& (0+255),0,b
  6140  002718  D002               	goto	l5479
  6141                           
  6142                           ; BSR set to: 0
  6143  00271A  0100               	movlb	0	; () banked
  6144  00271C  8FC0               	bsf	___fladd@grs& (0+255),7,b
  6145  00271E                     l5479:
  6146                           
  6147                           ; BSR set to: 0
  6148  00271E  0100               	movlb	0	; () banked
  6149  002720  35B0               	rlcf	(___fladd@b+3)& (0+255),w,b
  6150  002722  33B0               	rrcf	(___fladd@b+3)& (0+255),f,b
  6151  002724  33AF               	rrcf	(___fladd@b+2)& (0+255),f,b
  6152  002726  33AE               	rrcf	(___fladd@b+1)& (0+255),f,b
  6153  002728  33AD               	rrcf	___fladd@b& (0+255),f,b
  6154                           
  6155                           ; BSR set to: 0
  6156  00272A  0100               	movlb	0	; () banked
  6157  00272C  2BBF               	incf	___fladd@bexp& (0+255),f,b
  6158                           
  6159                           ; BSR set to: 0
  6160  00272E  D0AF               	goto	l5519
  6161  002730                     l5483:
  6162                           
  6163                           ; BSR set to: 0
  6164  002730  0100               	movlb	0	; () banked
  6165  002732  51B1               	movf	___fladd@a& (0+255),w,b
  6166  002734  0100               	movlb	0	; () banked
  6167  002736  5DAD               	subwf	___fladd@b& (0+255),w,b
  6168  002738  0100               	movlb	0	; () banked
  6169  00273A  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  6170  00273C  0100               	movlb	0	; () banked
  6171  00273E  59AE               	subwfb	(___fladd@b+1)& (0+255),w,b
  6172  002740  0100               	movlb	0	; () banked
  6173  002742  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  6174  002744  0100               	movlb	0	; () banked
  6175  002746  59AF               	subwfb	(___fladd@b+2)& (0+255),w,b
  6176  002748  0100               	movlb	0	; () banked
  6177  00274A  51B0               	movf	(___fladd@b+3)& (0+255),w,b
  6178  00274C  0A80               	xorlw	128
  6179  00274E  0100               	movlb	0	; () banked
  6180  002750  6FB5               	movwf	??___fladd& (0+255),b
  6181  002752  0100               	movlb	0	; () banked
  6182  002754  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  6183  002756  0A80               	xorlw	128
  6184  002758  0100               	movlb	0	; () banked
  6185  00275A  59B5               	subwfb	??___fladd& (0+255),w,b
  6186  00275C  B0D8               	btfsc	status,0,c
  6187  00275E  D050               	goto	l5493
  6188                           
  6189                           ; BSR set to: 0
  6190  002760  C0AD  F0B5         	movff	___fladd@b,??___fladd
  6191  002764  C0AE  F0B6         	movff	___fladd@b+1,??___fladd+1
  6192  002768  C0AF  F0B7         	movff	___fladd@b+2,??___fladd+2
  6193  00276C  C0B0  F0B8         	movff	___fladd@b+3,??___fladd+3
  6194  002770  0100               	movlb	0	; () banked
  6195  002772  1FB5               	comf	??___fladd& (0+255),f,b
  6196  002774  1FB6               	comf	(??___fladd+1)& (0+255),f,b
  6197  002776  1FB7               	comf	(??___fladd+2)& (0+255),f,b
  6198  002778  1FB8               	comf	(??___fladd+3)& (0+255),f,b
  6199  00277A  2BB5               	incf	??___fladd& (0+255),f,b
  6200  00277C  0E00               	movlw	0
  6201  00277E  23B6               	addwfc	(??___fladd+1)& (0+255),f,b
  6202  002780  23B7               	addwfc	(??___fladd+2)& (0+255),f,b
  6203  002782  23B8               	addwfc	(??___fladd+3)& (0+255),f,b
  6204  002784  0100               	movlb	0	; () banked
  6205  002786  51B1               	movf	___fladd@a& (0+255),w,b
  6206  002788  0100               	movlb	0	; () banked
  6207  00278A  25B5               	addwf	??___fladd& (0+255),w,b
  6208  00278C  0100               	movlb	0	; () banked
  6209  00278E  6FB9               	movwf	(??___fladd+4)& (0+255),b
  6210  002790  0100               	movlb	0	; () banked
  6211  002792  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  6212  002794  0100               	movlb	0	; () banked
  6213  002796  21B6               	addwfc	(??___fladd+1)& (0+255),w,b
  6214  002798  0100               	movlb	0	; () banked
  6215  00279A  6FBA               	movwf	(??___fladd+5)& (0+255),b
  6216  00279C  0100               	movlb	0	; () banked
  6217  00279E  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  6218  0027A0  0100               	movlb	0	; () banked
  6219  0027A2  21B7               	addwfc	(??___fladd+2)& (0+255),w,b
  6220  0027A4  0100               	movlb	0	; () banked
  6221  0027A6  6FBB               	movwf	(??___fladd+6)& (0+255),b
  6222  0027A8  0100               	movlb	0	; () banked
  6223  0027AA  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  6224  0027AC  0100               	movlb	0	; () banked
  6225  0027AE  21B8               	addwfc	(??___fladd+3)& (0+255),w,b
  6226  0027B0  0100               	movlb	0	; () banked
  6227  0027B2  6FBC               	movwf	(??___fladd+7)& (0+255),b
  6228  0027B4  0EFF               	movlw	255
  6229  0027B6  0100               	movlb	0	; () banked
  6230  0027B8  25B9               	addwf	(??___fladd+4)& (0+255),w,b
  6231  0027BA  0100               	movlb	0	; () banked
  6232  0027BC  6FAD               	movwf	___fladd@b& (0+255),b
  6233  0027BE  0EFF               	movlw	255
  6234  0027C0  0100               	movlb	0	; () banked
  6235  0027C2  21BA               	addwfc	(??___fladd+5)& (0+255),w,b
  6236  0027C4  0100               	movlb	0	; () banked
  6237  0027C6  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  6238  0027C8  0EFF               	movlw	255
  6239  0027CA  0100               	movlb	0	; () banked
  6240  0027CC  21BB               	addwfc	(??___fladd+6)& (0+255),w,b
  6241  0027CE  0100               	movlb	0	; () banked
  6242  0027D0  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  6243  0027D2  0EFF               	movlw	255
  6244  0027D4  0100               	movlb	0	; () banked
  6245  0027D6  21BC               	addwfc	(??___fladd+7)& (0+255),w,b
  6246  0027D8  0100               	movlb	0	; () banked
  6247  0027DA  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  6248  0027DC  0E80               	movlw	128
  6249  0027DE  0100               	movlb	0	; () banked
  6250  0027E0  1BBD               	xorwf	___fladd@signs& (0+255),f,b
  6251                           
  6252                           ; BSR set to: 0
  6253  0027E2  0100               	movlb	0	; () banked
  6254  0027E4  6DC0               	negf	___fladd@grs& (0+255),b
  6255                           
  6256                           ; BSR set to: 0
  6257  0027E6  0100               	movlb	0	; () banked
  6258  0027E8  51C0               	movf	___fladd@grs& (0+255),w,b
  6259  0027EA  0100               	movlb	0	; () banked
  6260  0027EC  A4D8               	btfss	status,2,c
  6261  0027EE  D018               	goto	l1234
  6262                           
  6263                           ; BSR set to: 0
  6264  0027F0  0E01               	movlw	1
  6265  0027F2  0100               	movlb	0	; () banked
  6266  0027F4  27AD               	addwf	___fladd@b& (0+255),f,b
  6267  0027F6  0E00               	movlw	0
  6268  0027F8  23AE               	addwfc	(___fladd@b+1)& (0+255),f,b
  6269  0027FA  23AF               	addwfc	(___fladd@b+2)& (0+255),f,b
  6270  0027FC  23B0               	addwfc	(___fladd@b+3)& (0+255),f,b
  6271                           
  6272                           ; BSR set to: 0
  6273  0027FE  D010               	goto	l1234
  6274  002800                     l5493:
  6275                           
  6276                           ; BSR set to: 0
  6277  002800  0100               	movlb	0	; () banked
  6278  002802  51B1               	movf	___fladd@a& (0+255),w,b
  6279  002804  0100               	movlb	0	; () banked
  6280  002806  5FAD               	subwf	___fladd@b& (0+255),f,b
  6281  002808  0100               	movlb	0	; () banked
  6282  00280A  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  6283  00280C  0100               	movlb	0	; () banked
  6284  00280E  5BAE               	subwfb	(___fladd@b+1)& (0+255),f,b
  6285  002810  0100               	movlb	0	; () banked
  6286  002812  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  6287  002814  0100               	movlb	0	; () banked
  6288  002816  5BAF               	subwfb	(___fladd@b+2)& (0+255),f,b
  6289  002818  0100               	movlb	0	; () banked
  6290  00281A  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  6291  00281C  0100               	movlb	0	; () banked
  6292  00281E  5BB0               	subwfb	(___fladd@b+3)& (0+255),f,b
  6293  002820                     l1234:
  6294                           
  6295                           ; BSR set to: 0
  6296  002820  0100               	movlb	0	; () banked
  6297  002822  51AD               	movf	___fladd@b& (0+255),w,b
  6298  002824  0100               	movlb	0	; () banked
  6299  002826  11AE               	iorwf	(___fladd@b+1)& (0+255),w,b
  6300  002828  0100               	movlb	0	; () banked
  6301  00282A  11AF               	iorwf	(___fladd@b+2)& (0+255),w,b
  6302  00282C  0100               	movlb	0	; () banked
  6303  00282E  11B0               	iorwf	(___fladd@b+3)& (0+255),w,b
  6304  002830  A4D8               	btfss	status,2,c
  6305  002832  D02A               	goto	l5517
  6306                           
  6307                           ; BSR set to: 0
  6308  002834  0100               	movlb	0	; () banked
  6309  002836  51C0               	movf	___fladd@grs& (0+255),w,b
  6310  002838  0100               	movlb	0	; () banked
  6311  00283A  A4D8               	btfss	status,2,c
  6312  00283C  D025               	goto	l5517
  6313                           
  6314                           ; BSR set to: 0
  6315  00283E  0E00               	movlw	0
  6316  002840  0100               	movlb	0	; () banked
  6317  002842  6FAD               	movwf	?___fladd& (0+255),b
  6318  002844  0E00               	movlw	0
  6319  002846  6FAE               	movwf	(?___fladd+1)& (0+255),b
  6320  002848  0E00               	movlw	0
  6321  00284A  6FAF               	movwf	(?___fladd+2)& (0+255),b
  6322  00284C  0E00               	movlw	0
  6323  00284E  6FB0               	movwf	(?___fladd+3)& (0+255),b
  6324                           
  6325                           ; BSR set to: 0
  6326  002850  0012               	return	
  6327  002852                     l5501:
  6328                           
  6329                           ; BSR set to: 0
  6330  002852  0100               	movlb	0	; () banked
  6331  002854  90D8               	bcf	status,0,c
  6332  002856  37AD               	rlcf	___fladd@b& (0+255),f,b
  6333  002858  37AE               	rlcf	(___fladd@b+1)& (0+255),f,b
  6334  00285A  37AF               	rlcf	(___fladd@b+2)& (0+255),f,b
  6335  00285C  37B0               	rlcf	(___fladd@b+3)& (0+255),f,b
  6336                           
  6337                           ; BSR set to: 0
  6338  00285E  0100               	movlb	0	; () banked
  6339  002860  AFC0               	btfss	___fladd@grs& (0+255),7,b
  6340  002862  D002               	goto	l5507
  6341                           
  6342                           ; BSR set to: 0
  6343  002864  0100               	movlb	0	; () banked
  6344  002866  81AD               	bsf	___fladd@b& (0+255),0,b
  6345  002868                     l5507:
  6346                           
  6347                           ; BSR set to: 0
  6348  002868  0100               	movlb	0	; () banked
  6349  00286A  A1C0               	btfss	___fladd@grs& (0+255),0,b
  6350  00286C  D003               	goto	l5511
  6351                           
  6352                           ; BSR set to: 0
  6353  00286E  80D8               	bsf	status,0,c
  6354  002870  0100               	movlb	0	; () banked
  6355  002872  D002               	goto	L4
  6356  002874                     l5511:
  6357                           
  6358                           ; BSR set to: 0
  6359  002874  0100               	movlb	0	; () banked
  6360  002876  90D8               	bcf	status,0,c
  6361  002878                     L4:
  6362  002878  37C0               	rlcf	___fladd@grs& (0+255),f,b
  6363                           
  6364                           ; BSR set to: 0
  6365                           
  6366                           ; BSR set to: 0
  6367  00287A  0100               	movlb	0	; () banked
  6368  00287C  51BF               	movf	___fladd@bexp& (0+255),w,b
  6369  00287E  0100               	movlb	0	; () banked
  6370  002880  B4D8               	btfsc	status,2,c
  6371  002882  D002               	goto	l5517
  6372                           
  6373                           ; BSR set to: 0
  6374  002884  0100               	movlb	0	; () banked
  6375  002886  07BF               	decf	___fladd@bexp& (0+255),f,b
  6376  002888                     l5517:
  6377                           
  6378                           ; BSR set to: 0
  6379  002888  0100               	movlb	0	; () banked
  6380  00288A  AFAF               	btfss	(___fladd@b+2)& (0+255),7,b
  6381  00288C  D7E2               	goto	l5501
  6382  00288E                     l5519:
  6383                           
  6384                           ; BSR set to: 0
  6385  00288E  0E00               	movlw	0
  6386  002890  0100               	movlb	0	; () banked
  6387  002892  6FBE               	movwf	___fladd@aexp& (0+255),b
  6388                           
  6389                           ; BSR set to: 0
  6390  002894  0100               	movlb	0	; () banked
  6391  002896  AFC0               	btfss	___fladd@grs& (0+255),7,b
  6392  002898  D00D               	goto	l1243
  6393                           
  6394                           ; BSR set to: 0
  6395  00289A  C0C0  F0B5         	movff	___fladd@grs,??___fladd
  6396  00289E  0E7F               	movlw	127
  6397  0028A0  0100               	movlb	0	; () banked
  6398  0028A2  17B5               	andwf	??___fladd& (0+255),f,b
  6399  0028A4  A4D8               	btfss	status,2,c
  6400  0028A6  D003               	goto	l5527
  6401                           
  6402                           ; BSR set to: 0
  6403                           
  6404                           ; BSR set to: 0
  6405  0028A8  0100               	movlb	0	; () banked
  6406  0028AA  A1AD               	btfss	___fladd@b& (0+255),0,b
  6407  0028AC  D003               	goto	l1243
  6408  0028AE                     l5527:
  6409                           
  6410                           ; BSR set to: 0
  6411  0028AE  0E01               	movlw	1
  6412  0028B0  0100               	movlb	0	; () banked
  6413  0028B2  6FBE               	movwf	___fladd@aexp& (0+255),b
  6414  0028B4                     l1243:
  6415                           
  6416                           ; BSR set to: 0
  6417  0028B4  0100               	movlb	0	; () banked
  6418  0028B6  51BE               	movf	___fladd@aexp& (0+255),w,b
  6419  0028B8  0100               	movlb	0	; () banked
  6420  0028BA  B4D8               	btfsc	status,2,c
  6421  0028BC  D026               	goto	l5537
  6422                           
  6423                           ; BSR set to: 0
  6424  0028BE  0E01               	movlw	1
  6425  0028C0  0100               	movlb	0	; () banked
  6426  0028C2  27AD               	addwf	___fladd@b& (0+255),f,b
  6427  0028C4  0E00               	movlw	0
  6428  0028C6  23AE               	addwfc	(___fladd@b+1)& (0+255),f,b
  6429  0028C8  23AF               	addwfc	(___fladd@b+2)& (0+255),f,b
  6430  0028CA  23B0               	addwfc	(___fladd@b+3)& (0+255),f,b
  6431                           
  6432                           ; BSR set to: 0
  6433  0028CC  0100               	movlb	0	; () banked
  6434  0028CE  A1B0               	btfss	(___fladd@b+3)& (0+255),0,b
  6435  0028D0  D01C               	goto	l5537
  6436                           
  6437                           ; BSR set to: 0
  6438  0028D2  C0AD  F0B5         	movff	___fladd@b,??___fladd
  6439  0028D6  C0AE  F0B6         	movff	___fladd@b+1,??___fladd+1
  6440  0028DA  C0AF  F0B7         	movff	___fladd@b+2,??___fladd+2
  6441  0028DE  C0B0  F0B8         	movff	___fladd@b+3,??___fladd+3
  6442  0028E2  0100               	movlb	0	; () banked
  6443  0028E4  35B8               	rlcf	(??___fladd+3)& (0+255),w,b
  6444  0028E6  33B8               	rrcf	(??___fladd+3)& (0+255),f,b
  6445  0028E8  33B7               	rrcf	(??___fladd+2)& (0+255),f,b
  6446  0028EA  33B6               	rrcf	(??___fladd+1)& (0+255),f,b
  6447  0028EC  33B5               	rrcf	??___fladd& (0+255),f,b
  6448  0028EE  C0B5  F0AD         	movff	??___fladd,___fladd@b
  6449  0028F2  C0B6  F0AE         	movff	??___fladd+1,___fladd@b+1
  6450  0028F6  C0B7  F0AF         	movff	??___fladd+2,___fladd@b+2
  6451  0028FA  C0B8  F0B0         	movff	??___fladd+3,___fladd@b+3
  6452  0028FE  0100               	movlb	0	; () banked
  6453  002900  29BF               	incf	___fladd@bexp& (0+255),w,b
  6454  002902  B4D8               	btfsc	status,2,c
  6455  002904  D002               	goto	l5537
  6456                           
  6457                           ; BSR set to: 0
  6458  002906  0100               	movlb	0	; () banked
  6459  002908  2BBF               	incf	___fladd@bexp& (0+255),f,b
  6460  00290A                     l5537:
  6461                           
  6462                           ; BSR set to: 0
  6463  00290A  0100               	movlb	0	; () banked
  6464  00290C  29BF               	incf	___fladd@bexp& (0+255),w,b
  6465  00290E  B4D8               	btfsc	status,2,c
  6466  002910  D005               	goto	l5541
  6467                           
  6468                           ; BSR set to: 0
  6469  002912  0100               	movlb	0	; () banked
  6470  002914  51BF               	movf	___fladd@bexp& (0+255),w,b
  6471  002916  0100               	movlb	0	; () banked
  6472  002918  A4D8               	btfss	status,2,c
  6473  00291A  D011               	goto	l5545
  6474  00291C                     l5541:
  6475                           
  6476                           ; BSR set to: 0
  6477  00291C  0E00               	movlw	0
  6478  00291E  0100               	movlb	0	; () banked
  6479  002920  6FAD               	movwf	___fladd@b& (0+255),b
  6480  002922  0E00               	movlw	0
  6481  002924  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  6482  002926  0E00               	movlw	0
  6483  002928  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  6484  00292A  0E00               	movlw	0
  6485  00292C  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  6486  00292E  0100               	movlb	0	; () banked
  6487  002930  51BF               	movf	___fladd@bexp& (0+255),w,b
  6488  002932  0100               	movlb	0	; () banked
  6489  002934  A4D8               	btfss	status,2,c
  6490  002936  D003               	goto	l5545
  6491                           
  6492                           ; BSR set to: 0
  6493  002938  0E00               	movlw	0
  6494  00293A  0100               	movlb	0	; () banked
  6495  00293C  6FBD               	movwf	___fladd@signs& (0+255),b
  6496  00293E                     l5545:
  6497                           
  6498                           ; BSR set to: 0
  6499  00293E  0100               	movlb	0	; () banked
  6500  002940  A1BF               	btfss	___fladd@bexp& (0+255),0,b
  6501  002942  D003               	goto	l5549
  6502                           
  6503                           ; BSR set to: 0
  6504  002944  0100               	movlb	0	; () banked
  6505  002946  8FAF               	bsf	(___fladd@b+2)& (0+255),7,b
  6506  002948  D002               	goto	l5551
  6507  00294A                     l5549:
  6508                           
  6509                           ; BSR set to: 0
  6510  00294A  0100               	movlb	0	; () banked
  6511  00294C  9FAF               	bcf	(___fladd@b+2)& (0+255),7,b
  6512  00294E                     l5551:
  6513                           
  6514                           ; BSR set to: 0
  6515  00294E  0100               	movlb	0	; () banked
  6516  002950  90D8               	bcf	status,0,c
  6517  002952  31BF               	rrcf	___fladd@bexp& (0+255),w,b
  6518  002954  0100               	movlb	0	; () banked
  6519  002956  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  6520                           
  6521                           ; BSR set to: 0
  6522  002958  0100               	movlb	0	; () banked
  6523  00295A  AFBD               	btfss	___fladd@signs& (0+255),7,b
  6524  00295C  D002               	goto	l5557
  6525                           
  6526                           ; BSR set to: 0
  6527  00295E  0100               	movlb	0	; () banked
  6528  002960  8FB0               	bsf	(___fladd@b+3)& (0+255),7,b
  6529  002962                     l5557:
  6530                           
  6531                           ; BSR set to: 0
  6532  002962  C0AD  F0AD         	movff	___fladd@b,?___fladd
  6533  002966  C0AE  F0AE         	movff	___fladd@b+1,?___fladd+1
  6534  00296A  C0AF  F0AF         	movff	___fladd@b+2,?___fladd+2
  6535  00296E  C0B0  F0B0         	movff	___fladd@b+3,?___fladd+3
  6536  002972  0012               	return	
  6537  002974                     __end_of___fladd:
  6538                           	opt stack 0
  6539                           tblptru	equ	0xFF8
  6540                           tblptrh	equ	0xFF7
  6541                           tblptrl	equ	0xFF6
  6542                           tablat	equ	0xFF5
  6543                           prodh	equ	0xFF4
  6544                           prodl	equ	0xFF3
  6545                           postinc0	equ	0xFEE
  6546                           wreg	equ	0xFE8
  6547                           indf2	equ	0xFDF
  6548                           postinc2	equ	0xFDE
  6549                           postdec2	equ	0xFDD
  6550                           fsr2h	equ	0xFDA
  6551                           fsr2l	equ	0xFD9
  6552                           status	equ	0xFD8
  6553                           
  6554 ;; *************** function ___flge *****************
  6555 ;; Defined at:
  6556 ;;		line 4 in file "P:\Programmi\Microchip\xc8\v1.35\sources\common\flge.c"
  6557 ;; Parameters:    Size  Location     Type
  6558 ;;  ff1             4   81[BANK0 ] unsigned char 
  6559 ;;  ff2             4   85[BANK0 ] unsigned char 
  6560 ;; Auto vars:     Size  Location     Type
  6561 ;;		None
  6562 ;; Return value:  Size  Location     Type
  6563 ;;		None               void
  6564 ;; Registers used:
  6565 ;;		wreg, status,2, status,0
  6566 ;; Tracked objects:
  6567 ;;		On entry : 0/0
  6568 ;;		On exit  : 0/0
  6569 ;;		Unchanged: 0/0
  6570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6571 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6573 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6574 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6575 ;;Total ram usage:       12 bytes
  6576 ;; Hardware stack levels used:    1
  6577 ;; Hardware stack levels required when called:    4
  6578 ;; This function calls:
  6579 ;;		Nothing
  6580 ;; This function is called by:
  6581 ;;		_parallelo
  6582 ;;		_asin
  6583 ;;		_atan
  6584 ;; This function uses a non-reentrant model
  6585 ;;
  6586                           
  6587                           	psect	text15
  6588  004462                     __ptext15:
  6589                           	opt stack 0
  6590  004462                     ___flge:
  6591                           	opt stack 23
  6592                           
  6593                           ; BSR set to: 0
  6594                           ;incstack = 0
  6595  004462  0E00               	movlw	0
  6596  004464  0100               	movlb	0	; () banked
  6597  004466  15B1               	andwf	___flge@ff1& (0+255),w,b
  6598  004468  0100               	movlb	0	; () banked
  6599  00446A  6FB9               	movwf	??___flge& (0+255),b
  6600  00446C  0E00               	movlw	0
  6601  00446E  0100               	movlb	0	; () banked
  6602  004470  15B2               	andwf	(___flge@ff1+1)& (0+255),w,b
  6603  004472  0100               	movlb	0	; () banked
  6604  004474  6FBA               	movwf	(??___flge+1)& (0+255),b
  6605  004476  0E80               	movlw	128
  6606  004478  0100               	movlb	0	; () banked
  6607  00447A  15B3               	andwf	(___flge@ff1+2)& (0+255),w,b
  6608  00447C  0100               	movlb	0	; () banked
  6609  00447E  6FBB               	movwf	(??___flge+2)& (0+255),b
  6610  004480  0E7F               	movlw	127
  6611  004482  0100               	movlb	0	; () banked
  6612  004484  15B4               	andwf	(___flge@ff1+3)& (0+255),w,b
  6613  004486  0100               	movlb	0	; () banked
  6614  004488  6FBC               	movwf	(??___flge+3)& (0+255),b
  6615  00448A  0100               	movlb	0	; () banked
  6616  00448C  51B9               	movf	??___flge& (0+255),w,b
  6617  00448E  0100               	movlb	0	; () banked
  6618  004490  11BA               	iorwf	(??___flge+1)& (0+255),w,b
  6619  004492  0100               	movlb	0	; () banked
  6620  004494  11BB               	iorwf	(??___flge+2)& (0+255),w,b
  6621  004496  0100               	movlb	0	; () banked
  6622  004498  11BC               	iorwf	(??___flge+3)& (0+255),w,b
  6623  00449A  A4D8               	btfss	status,2,c
  6624  00449C  D009               	goto	l5851
  6625                           
  6626                           ; BSR set to: 0
  6627  00449E  0E00               	movlw	0
  6628  0044A0  0100               	movlb	0	; () banked
  6629  0044A2  6FB1               	movwf	___flge@ff1& (0+255),b
  6630  0044A4  0E00               	movlw	0
  6631  0044A6  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  6632  0044A8  0E00               	movlw	0
  6633  0044AA  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  6634  0044AC  0E00               	movlw	0
  6635  0044AE  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  6636  0044B0                     l5851:
  6637                           
  6638                           ; BSR set to: 0
  6639  0044B0  0E00               	movlw	0
  6640  0044B2  0100               	movlb	0	; () banked
  6641  0044B4  15B5               	andwf	___flge@ff2& (0+255),w,b
  6642  0044B6  0100               	movlb	0	; () banked
  6643  0044B8  6FB9               	movwf	??___flge& (0+255),b
  6644  0044BA  0E00               	movlw	0
  6645  0044BC  0100               	movlb	0	; () banked
  6646  0044BE  15B6               	andwf	(___flge@ff2+1)& (0+255),w,b
  6647  0044C0  0100               	movlb	0	; () banked
  6648  0044C2  6FBA               	movwf	(??___flge+1)& (0+255),b
  6649  0044C4  0E80               	movlw	128
  6650  0044C6  0100               	movlb	0	; () banked
  6651  0044C8  15B7               	andwf	(___flge@ff2+2)& (0+255),w,b
  6652  0044CA  0100               	movlb	0	; () banked
  6653  0044CC  6FBB               	movwf	(??___flge+2)& (0+255),b
  6654  0044CE  0E7F               	movlw	127
  6655  0044D0  0100               	movlb	0	; () banked
  6656  0044D2  15B8               	andwf	(___flge@ff2+3)& (0+255),w,b
  6657  0044D4  0100               	movlb	0	; () banked
  6658  0044D6  6FBC               	movwf	(??___flge+3)& (0+255),b
  6659  0044D8  0100               	movlb	0	; () banked
  6660  0044DA  51B9               	movf	??___flge& (0+255),w,b
  6661  0044DC  0100               	movlb	0	; () banked
  6662  0044DE  11BA               	iorwf	(??___flge+1)& (0+255),w,b
  6663  0044E0  0100               	movlb	0	; () banked
  6664  0044E2  11BB               	iorwf	(??___flge+2)& (0+255),w,b
  6665  0044E4  0100               	movlb	0	; () banked
  6666  0044E6  11BC               	iorwf	(??___flge+3)& (0+255),w,b
  6667  0044E8  A4D8               	btfss	status,2,c
  6668  0044EA  D009               	goto	l5855
  6669                           
  6670                           ; BSR set to: 0
  6671  0044EC  0E00               	movlw	0
  6672  0044EE  0100               	movlb	0	; () banked
  6673  0044F0  6FB5               	movwf	___flge@ff2& (0+255),b
  6674  0044F2  0E00               	movlw	0
  6675  0044F4  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  6676  0044F6  0E00               	movlw	0
  6677  0044F8  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  6678  0044FA  0E00               	movlw	0
  6679  0044FC  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  6680  0044FE                     l5855:
  6681                           
  6682                           ; BSR set to: 0
  6683  0044FE  0100               	movlb	0	; () banked
  6684  004500  AFB4               	btfss	(___flge@ff1+3)& (0+255),7,b
  6685  004502  D026               	goto	l5859
  6686                           
  6687                           ; BSR set to: 0
  6688  004504  C0B1  F0B9         	movff	___flge@ff1,??___flge
  6689  004508  C0B2  F0BA         	movff	___flge@ff1+1,??___flge+1
  6690  00450C  C0B3  F0BB         	movff	___flge@ff1+2,??___flge+2
  6691  004510  C0B4  F0BC         	movff	___flge@ff1+3,??___flge+3
  6692  004514  0100               	movlb	0	; () banked
  6693  004516  1FB9               	comf	??___flge& (0+255),f,b
  6694  004518  1FBA               	comf	(??___flge+1)& (0+255),f,b
  6695  00451A  1FBB               	comf	(??___flge+2)& (0+255),f,b
  6696  00451C  1FBC               	comf	(??___flge+3)& (0+255),f,b
  6697  00451E  2BB9               	incf	??___flge& (0+255),f,b
  6698  004520  0E00               	movlw	0
  6699  004522  23BA               	addwfc	(??___flge+1)& (0+255),f,b
  6700  004524  23BB               	addwfc	(??___flge+2)& (0+255),f,b
  6701  004526  23BC               	addwfc	(??___flge+3)& (0+255),f,b
  6702  004528  0E00               	movlw	0
  6703  00452A  0100               	movlb	0	; () banked
  6704  00452C  25B9               	addwf	??___flge& (0+255),w,b
  6705  00452E  0100               	movlb	0	; () banked
  6706  004530  6FB1               	movwf	___flge@ff1& (0+255),b
  6707  004532  0E00               	movlw	0
  6708  004534  0100               	movlb	0	; () banked
  6709  004536  21BA               	addwfc	(??___flge+1)& (0+255),w,b
  6710  004538  0100               	movlb	0	; () banked
  6711  00453A  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  6712  00453C  0E00               	movlw	0
  6713  00453E  0100               	movlb	0	; () banked
  6714  004540  21BB               	addwfc	(??___flge+2)& (0+255),w,b
  6715  004542  0100               	movlb	0	; () banked
  6716  004544  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  6717  004546  0E80               	movlw	128
  6718  004548  0100               	movlb	0	; () banked
  6719  00454A  21BC               	addwfc	(??___flge+3)& (0+255),w,b
  6720  00454C  0100               	movlb	0	; () banked
  6721  00454E  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  6722  004550                     l5859:
  6723                           
  6724                           ; BSR set to: 0
  6725  004550  0100               	movlb	0	; () banked
  6726  004552  AFB8               	btfss	(___flge@ff2+3)& (0+255),7,b
  6727  004554  D026               	goto	l980
  6728                           
  6729                           ; BSR set to: 0
  6730  004556  C0B5  F0B9         	movff	___flge@ff2,??___flge
  6731  00455A  C0B6  F0BA         	movff	___flge@ff2+1,??___flge+1
  6732  00455E  C0B7  F0BB         	movff	___flge@ff2+2,??___flge+2
  6733  004562  C0B8  F0BC         	movff	___flge@ff2+3,??___flge+3
  6734  004566  0100               	movlb	0	; () banked
  6735  004568  1FB9               	comf	??___flge& (0+255),f,b
  6736  00456A  1FBA               	comf	(??___flge+1)& (0+255),f,b
  6737  00456C  1FBB               	comf	(??___flge+2)& (0+255),f,b
  6738  00456E  1FBC               	comf	(??___flge+3)& (0+255),f,b
  6739  004570  2BB9               	incf	??___flge& (0+255),f,b
  6740  004572  0E00               	movlw	0
  6741  004574  23BA               	addwfc	(??___flge+1)& (0+255),f,b
  6742  004576  23BB               	addwfc	(??___flge+2)& (0+255),f,b
  6743  004578  23BC               	addwfc	(??___flge+3)& (0+255),f,b
  6744  00457A  0E00               	movlw	0
  6745  00457C  0100               	movlb	0	; () banked
  6746  00457E  25B9               	addwf	??___flge& (0+255),w,b
  6747  004580  0100               	movlb	0	; () banked
  6748  004582  6FB5               	movwf	___flge@ff2& (0+255),b
  6749  004584  0E00               	movlw	0
  6750  004586  0100               	movlb	0	; () banked
  6751  004588  21BA               	addwfc	(??___flge+1)& (0+255),w,b
  6752  00458A  0100               	movlb	0	; () banked
  6753  00458C  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  6754  00458E  0E00               	movlw	0
  6755  004590  0100               	movlb	0	; () banked
  6756  004592  21BB               	addwfc	(??___flge+2)& (0+255),w,b
  6757  004594  0100               	movlb	0	; () banked
  6758  004596  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  6759  004598  0E80               	movlw	128
  6760  00459A  0100               	movlb	0	; () banked
  6761  00459C  21BC               	addwfc	(??___flge+3)& (0+255),w,b
  6762  00459E  0100               	movlb	0	; () banked
  6763  0045A0  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  6764  0045A2                     l980:
  6765                           
  6766                           ; BSR set to: 0
  6767  0045A2  0E00               	movlw	0
  6768  0045A4  0100               	movlb	0	; () banked
  6769  0045A6  1BB1               	xorwf	___flge@ff1& (0+255),f,b
  6770  0045A8  0E00               	movlw	0
  6771  0045AA  1BB2               	xorwf	(___flge@ff1+1)& (0+255),f,b
  6772  0045AC  0E00               	movlw	0
  6773  0045AE  1BB3               	xorwf	(___flge@ff1+2)& (0+255),f,b
  6774  0045B0  0E80               	movlw	128
  6775  0045B2  1BB4               	xorwf	(___flge@ff1+3)& (0+255),f,b
  6776  0045B4  0E00               	movlw	0
  6777  0045B6  0100               	movlb	0	; () banked
  6778  0045B8  1BB5               	xorwf	___flge@ff2& (0+255),f,b
  6779  0045BA  0E00               	movlw	0
  6780  0045BC  1BB6               	xorwf	(___flge@ff2+1)& (0+255),f,b
  6781  0045BE  0E00               	movlw	0
  6782  0045C0  1BB7               	xorwf	(___flge@ff2+2)& (0+255),f,b
  6783  0045C2  0E80               	movlw	128
  6784  0045C4  1BB8               	xorwf	(___flge@ff2+3)& (0+255),f,b
  6785  0045C6  0100               	movlb	0	; () banked
  6786  0045C8  51B5               	movf	___flge@ff2& (0+255),w,b
  6787  0045CA  0100               	movlb	0	; () banked
  6788  0045CC  5DB1               	subwf	___flge@ff1& (0+255),w,b
  6789  0045CE  0100               	movlb	0	; () banked
  6790  0045D0  51B6               	movf	(___flge@ff2+1)& (0+255),w,b
  6791  0045D2  0100               	movlb	0	; () banked
  6792  0045D4  59B2               	subwfb	(___flge@ff1+1)& (0+255),w,b
  6793  0045D6  0100               	movlb	0	; () banked
  6794  0045D8  51B7               	movf	(___flge@ff2+2)& (0+255),w,b
  6795  0045DA  0100               	movlb	0	; () banked
  6796  0045DC  59B3               	subwfb	(___flge@ff1+2)& (0+255),w,b
  6797  0045DE  0100               	movlb	0	; () banked
  6798  0045E0  51B8               	movf	(___flge@ff2+3)& (0+255),w,b
  6799  0045E2  0100               	movlb	0	; () banked
  6800  0045E4  59B4               	subwfb	(___flge@ff1+3)& (0+255),w,b
  6801  0045E6  B0D8               	btfsc	status,0,c
  6802  0045E8  D002               	goto	l5865
  6803                           
  6804                           ; BSR set to: 0
  6805  0045EA  90D8               	bcf	status,0,c
  6806  0045EC  0012               	return	
  6807  0045EE                     l5865:
  6808                           
  6809                           ; BSR set to: 0
  6810  0045EE  80D8               	bsf	status,0,c
  6811                           
  6812                           ; BSR set to: 0
  6813  0045F0  0012               	return	
  6814  0045F2                     __end_of___flge:
  6815                           	opt stack 0
  6816                           tblptru	equ	0xFF8
  6817                           tblptrh	equ	0xFF7
  6818                           tblptrl	equ	0xFF6
  6819                           tablat	equ	0xFF5
  6820                           prodh	equ	0xFF4
  6821                           prodl	equ	0xFF3
  6822                           postinc0	equ	0xFEE
  6823                           wreg	equ	0xFE8
  6824                           indf2	equ	0xFDF
  6825                           postinc2	equ	0xFDE
  6826                           postdec2	equ	0xFDD
  6827                           fsr2h	equ	0xFDA
  6828                           fsr2l	equ	0xFD9
  6829                           status	equ	0xFD8
  6830                           
  6831 ;; *************** function ___fldiv *****************
  6832 ;; Defined at:
  6833 ;;		line 11 in file "P:\Programmi\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
  6834 ;; Parameters:    Size  Location     Type
  6835 ;;  b               4   23[BANK0 ] unsigned char 
  6836 ;;  a               4   27[BANK0 ] unsigned char 
  6837 ;; Auto vars:     Size  Location     Type
  6838 ;;  grs             4   42[BANK0 ] unsigned long 
  6839 ;;  rem             4   36[BANK0 ] unsigned long 
  6840 ;;  new_exp         2   40[BANK0 ] int 
  6841 ;;  aexp            1   47[BANK0 ] unsigned char 
  6842 ;;  bexp            1   46[BANK0 ] unsigned char 
  6843 ;;  sign            1   35[BANK0 ] unsigned char 
  6844 ;; Return value:  Size  Location     Type
  6845 ;;                  4   23[BANK0 ] unsigned char 
  6846 ;; Registers used:
  6847 ;;		wreg, status,2, status,0
  6848 ;; Tracked objects:
  6849 ;;		On entry : 0/0
  6850 ;;		On exit  : 0/0
  6851 ;;		Unchanged: 0/0
  6852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6853 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6854 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6855 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6856 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6857 ;;Total ram usage:       25 bytes
  6858 ;; Hardware stack levels used:    1
  6859 ;; Hardware stack levels required when called:    4
  6860 ;; This function calls:
  6861 ;;		Nothing
  6862 ;; This function is called by:
  6863 ;;		_parallelo
  6864 ;;		_asin
  6865 ;;		_atan
  6866 ;; This function uses a non-reentrant model
  6867 ;;
  6868                           
  6869                           	psect	text16
  6870  0031E4                     __ptext16:
  6871                           	opt stack 0
  6872  0031E4                     ___fldiv:
  6873                           	opt stack 23
  6874                           
  6875                           ; BSR set to: 0
  6876                           ;incstack = 0
  6877  0031E4  0100               	movlb	0	; () banked
  6878  0031E6  517A               	movf	(___fldiv@b+3)& (0+255),w,b
  6879  0031E8  0B80               	andlw	128
  6880  0031EA  0100               	movlb	0	; () banked
  6881  0031EC  6F83               	movwf	___fldiv@sign& (0+255),b
  6882  0031EE  0100               	movlb	0	; () banked
  6883  0031F0  517A               	movf	(___fldiv@b+3)& (0+255),w,b
  6884  0031F2  257A               	addwf	(___fldiv@b+3)& (0+255),w,b
  6885  0031F4  0100               	movlb	0	; () banked
  6886  0031F6  6F8E               	movwf	___fldiv@bexp& (0+255),b
  6887                           
  6888                           ; BSR set to: 0
  6889  0031F8  0100               	movlb	0	; () banked
  6890  0031FA  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
  6891  0031FC  D002               	goto	l5705
  6892                           
  6893                           ; BSR set to: 0
  6894  0031FE  0100               	movlb	0	; () banked
  6895  003200  818E               	bsf	___fldiv@bexp& (0+255),0,b
  6896  003202                     l5705:
  6897                           
  6898                           ; BSR set to: 0
  6899  003202  0100               	movlb	0	; () banked
  6900  003204  518E               	movf	___fldiv@bexp& (0+255),w,b
  6901  003206  0100               	movlb	0	; () banked
  6902  003208  B4D8               	btfsc	status,2,c
  6903  00320A  D012               	goto	l5715
  6904                           
  6905                           ; BSR set to: 0
  6906  00320C  0100               	movlb	0	; () banked
  6907  00320E  298E               	incf	___fldiv@bexp& (0+255),w,b
  6908  003210  A4D8               	btfss	status,2,c
  6909  003212  D009               	goto	l5711
  6910                           
  6911                           ; BSR set to: 0
  6912  003214  0E00               	movlw	0
  6913  003216  0100               	movlb	0	; () banked
  6914  003218  6F77               	movwf	___fldiv@b& (0+255),b
  6915  00321A  0E00               	movlw	0
  6916  00321C  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  6917  00321E  0E00               	movlw	0
  6918  003220  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  6919  003222  0E00               	movlw	0
  6920  003224  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  6921  003226                     l5711:
  6922                           
  6923                           ; BSR set to: 0
  6924  003226  0100               	movlb	0	; () banked
  6925  003228  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
  6926                           
  6927                           ; BSR set to: 0
  6928  00322A  0E00               	movlw	0
  6929  00322C  0100               	movlb	0	; () banked
  6930  00322E  D008               	goto	L5
  6931  003230                     l5715:
  6932                           
  6933                           ; BSR set to: 0
  6934  003230  0E00               	movlw	0
  6935  003232  0100               	movlb	0	; () banked
  6936  003234  6F77               	movwf	___fldiv@b& (0+255),b
  6937  003236  0E00               	movlw	0
  6938  003238  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  6939  00323A  0E00               	movlw	0
  6940  00323C  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  6941  00323E  0E00               	movlw	0
  6942  003240                     L5:
  6943  003240  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  6944                           
  6945                           ; BSR set to: 0
  6946                           
  6947                           ; BSR set to: 0
  6948  003242  0100               	movlb	0	; () banked
  6949  003244  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  6950  003246  0B80               	andlw	128
  6951  003248  0100               	movlb	0	; () banked
  6952  00324A  1B83               	xorwf	___fldiv@sign& (0+255),f,b
  6953                           
  6954                           ; BSR set to: 0
  6955  00324C  0100               	movlb	0	; () banked
  6956  00324E  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  6957  003250  257E               	addwf	(___fldiv@a+3)& (0+255),w,b
  6958  003252  0100               	movlb	0	; () banked
  6959  003254  6F8F               	movwf	___fldiv@aexp& (0+255),b
  6960                           
  6961                           ; BSR set to: 0
  6962  003256  0100               	movlb	0	; () banked
  6963  003258  AF7D               	btfss	(___fldiv@a+2)& (0+255),7,b
  6964  00325A  D002               	goto	l5725
  6965                           
  6966                           ; BSR set to: 0
  6967  00325C  0100               	movlb	0	; () banked
  6968  00325E  818F               	bsf	___fldiv@aexp& (0+255),0,b
  6969  003260                     l5725:
  6970                           
  6971                           ; BSR set to: 0
  6972  003260  0100               	movlb	0	; () banked
  6973  003262  518F               	movf	___fldiv@aexp& (0+255),w,b
  6974  003264  0100               	movlb	0	; () banked
  6975  003266  B4D8               	btfsc	status,2,c
  6976  003268  D012               	goto	l5735
  6977                           
  6978                           ; BSR set to: 0
  6979  00326A  0100               	movlb	0	; () banked
  6980  00326C  298F               	incf	___fldiv@aexp& (0+255),w,b
  6981  00326E  A4D8               	btfss	status,2,c
  6982  003270  D009               	goto	l5731
  6983                           
  6984                           ; BSR set to: 0
  6985  003272  0E00               	movlw	0
  6986  003274  0100               	movlb	0	; () banked
  6987  003276  6F7B               	movwf	___fldiv@a& (0+255),b
  6988  003278  0E00               	movlw	0
  6989  00327A  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  6990  00327C  0E00               	movlw	0
  6991  00327E  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  6992  003280  0E00               	movlw	0
  6993  003282  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  6994  003284                     l5731:
  6995                           
  6996                           ; BSR set to: 0
  6997  003284  0100               	movlb	0	; () banked
  6998  003286  8F7D               	bsf	(___fldiv@a+2)& (0+255),7,b
  6999                           
  7000                           ; BSR set to: 0
  7001  003288  0E00               	movlw	0
  7002  00328A  0100               	movlb	0	; () banked
  7003  00328C  D008               	goto	L6
  7004  00328E                     l5735:
  7005                           
  7006                           ; BSR set to: 0
  7007  00328E  0E00               	movlw	0
  7008  003290  0100               	movlb	0	; () banked
  7009  003292  6F7B               	movwf	___fldiv@a& (0+255),b
  7010  003294  0E00               	movlw	0
  7011  003296  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  7012  003298  0E00               	movlw	0
  7013  00329A  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  7014  00329C  0E00               	movlw	0
  7015  00329E                     L6:
  7016  00329E  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  7017                           
  7018                           ; BSR set to: 0
  7019                           
  7020                           ; BSR set to: 0
  7021  0032A0  0100               	movlb	0	; () banked
  7022  0032A2  517B               	movf	___fldiv@a& (0+255),w,b
  7023  0032A4  0100               	movlb	0	; () banked
  7024  0032A6  117C               	iorwf	(___fldiv@a+1)& (0+255),w,b
  7025  0032A8  0100               	movlb	0	; () banked
  7026  0032AA  117D               	iorwf	(___fldiv@a+2)& (0+255),w,b
  7027  0032AC  0100               	movlb	0	; () banked
  7028  0032AE  117E               	iorwf	(___fldiv@a+3)& (0+255),w,b
  7029  0032B0  A4D8               	btfss	status,2,c
  7030  0032B2  D017               	goto	l5747
  7031                           
  7032                           ; BSR set to: 0
  7033  0032B4  0E00               	movlw	0
  7034  0032B6  0100               	movlb	0	; () banked
  7035  0032B8  6F77               	movwf	___fldiv@b& (0+255),b
  7036  0032BA  0E00               	movlw	0
  7037  0032BC  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  7038  0032BE  0E00               	movlw	0
  7039  0032C0  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  7040  0032C2  0E00               	movlw	0
  7041  0032C4  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  7042                           
  7043                           ; BSR set to: 0
  7044  0032C6  0100               	movlb	0	; () banked
  7045  0032C8  0E80               	movlw	128
  7046  0032CA  1379               	iorwf	(___fldiv@b+2)& (0+255),f,b
  7047  0032CC  0E7F               	movlw	127
  7048  0032CE  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
  7049                           
  7050                           ; BSR set to: 0
  7051  0032D0  C077  F077         	movff	___fldiv@b,?___fldiv
  7052  0032D4  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
  7053  0032D8  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
  7054  0032DC  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
  7055                           
  7056                           ; BSR set to: 0
  7057  0032E0  0012               	return	
  7058  0032E2                     l5747:
  7059                           
  7060                           ; BSR set to: 0
  7061  0032E2  0100               	movlb	0	; () banked
  7062  0032E4  518E               	movf	___fldiv@bexp& (0+255),w,b
  7063  0032E6  0100               	movlb	0	; () banked
  7064  0032E8  A4D8               	btfss	status,2,c
  7065  0032EA  D012               	goto	l5755
  7066                           
  7067                           ; BSR set to: 0
  7068  0032EC  0E00               	movlw	0
  7069  0032EE  0100               	movlb	0	; () banked
  7070  0032F0  6F77               	movwf	___fldiv@b& (0+255),b
  7071  0032F2  0E00               	movlw	0
  7072  0032F4  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  7073  0032F6  0E00               	movlw	0
  7074  0032F8  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  7075  0032FA  0E00               	movlw	0
  7076  0032FC  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  7077                           
  7078                           ; BSR set to: 0
  7079  0032FE  C077  F077         	movff	___fldiv@b,?___fldiv
  7080  003302  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
  7081  003306  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
  7082  00330A  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
  7083                           
  7084                           ; BSR set to: 0
  7085  00330E  0012               	return	
  7086  003310                     l5755:
  7087                           
  7088                           ; BSR set to: 0
  7089  003310  0100               	movlb	0	; () banked
  7090  003312  518F               	movf	___fldiv@aexp& (0+255),w,b
  7091  003314  0100               	movlb	0	; () banked
  7092  003316  6F7F               	movwf	??___fldiv& (0+255),b
  7093  003318  6B80               	clrf	(??___fldiv+1)& (0+255),b
  7094  00331A  0100               	movlb	0	; () banked
  7095  00331C  1F7F               	comf	??___fldiv& (0+255),f,b
  7096  00331E  1F80               	comf	(??___fldiv+1)& (0+255),f,b
  7097  003320  4B7F               	infsnz	??___fldiv& (0+255),f,b
  7098  003322  2B80               	incf	(??___fldiv+1)& (0+255),f,b
  7099  003324  0100               	movlb	0	; () banked
  7100  003326  518E               	movf	___fldiv@bexp& (0+255),w,b
  7101  003328  0100               	movlb	0	; () banked
  7102  00332A  6F81               	movwf	(??___fldiv+2)& (0+255),b
  7103  00332C  6B82               	clrf	(??___fldiv+3)& (0+255),b
  7104  00332E  0100               	movlb	0	; () banked
  7105  003330  517F               	movf	??___fldiv& (0+255),w,b
  7106  003332  0100               	movlb	0	; () banked
  7107  003334  2781               	addwf	(??___fldiv+2)& (0+255),f,b
  7108  003336  0100               	movlb	0	; () banked
  7109  003338  5180               	movf	(??___fldiv+1)& (0+255),w,b
  7110  00333A  0100               	movlb	0	; () banked
  7111  00333C  2382               	addwfc	(??___fldiv+3)& (0+255),f,b
  7112  00333E  0E7F               	movlw	127
  7113  003340  0100               	movlb	0	; () banked
  7114  003342  2581               	addwf	(??___fldiv+2)& (0+255),w,b
  7115  003344  0100               	movlb	0	; () banked
  7116  003346  6F88               	movwf	___fldiv@new_exp& (0+255),b
  7117  003348  0E00               	movlw	0
  7118  00334A  0100               	movlb	0	; () banked
  7119  00334C  2182               	addwfc	(??___fldiv+3)& (0+255),w,b
  7120  00334E  0100               	movlb	0	; () banked
  7121  003350  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7122                           
  7123                           ; BSR set to: 0
  7124  003352  C077  F084         	movff	___fldiv@b,___fldiv@rem
  7125  003356  C078  F085         	movff	___fldiv@b+1,___fldiv@rem+1
  7126  00335A  C079  F086         	movff	___fldiv@b+2,___fldiv@rem+2
  7127  00335E  C07A  F087         	movff	___fldiv@b+3,___fldiv@rem+3
  7128                           
  7129                           ; BSR set to: 0
  7130  003362  0E00               	movlw	0
  7131  003364  0100               	movlb	0	; () banked
  7132  003366  6F77               	movwf	___fldiv@b& (0+255),b
  7133  003368  0E00               	movlw	0
  7134  00336A  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  7135  00336C  0E00               	movlw	0
  7136  00336E  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  7137  003370  0E00               	movlw	0
  7138  003372  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  7139                           
  7140                           ; BSR set to: 0
  7141  003374  0E00               	movlw	0
  7142  003376  0100               	movlb	0	; () banked
  7143  003378  6F8A               	movwf	___fldiv@grs& (0+255),b
  7144  00337A  0E00               	movlw	0
  7145  00337C  6F8B               	movwf	(___fldiv@grs+1)& (0+255),b
  7146  00337E  0E00               	movlw	0
  7147  003380  6F8C               	movwf	(___fldiv@grs+2)& (0+255),b
  7148  003382  0E00               	movlw	0
  7149  003384  6F8D               	movwf	(___fldiv@grs+3)& (0+255),b
  7150                           
  7151                           ; BSR set to: 0
  7152  003386  0E00               	movlw	0
  7153  003388  0100               	movlb	0	; () banked
  7154  00338A  6F8F               	movwf	___fldiv@aexp& (0+255),b
  7155  00338C  D042               	goto	l1273
  7156  00338E                     l5765:
  7157                           
  7158                           ; BSR set to: 0
  7159  00338E  0100               	movlb	0	; () banked
  7160  003390  518F               	movf	___fldiv@aexp& (0+255),w,b
  7161  003392  0100               	movlb	0	; () banked
  7162  003394  B4D8               	btfsc	status,2,c
  7163  003396  D017               	goto	l5773
  7164                           
  7165                           ; BSR set to: 0
  7166  003398  0100               	movlb	0	; () banked
  7167  00339A  90D8               	bcf	status,0,c
  7168  00339C  3784               	rlcf	___fldiv@rem& (0+255),f,b
  7169  00339E  3785               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  7170  0033A0  3786               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  7171  0033A2  3787               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  7172  0033A4  0100               	movlb	0	; () banked
  7173  0033A6  90D8               	bcf	status,0,c
  7174  0033A8  3777               	rlcf	___fldiv@b& (0+255),f,b
  7175  0033AA  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
  7176  0033AC  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
  7177  0033AE  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
  7178                           
  7179                           ; BSR set to: 0
  7180  0033B0  0100               	movlb	0	; () banked
  7181  0033B2  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7182  0033B4  D002               	goto	l1276
  7183                           
  7184                           ; BSR set to: 0
  7185  0033B6  0100               	movlb	0	; () banked
  7186  0033B8  8177               	bsf	___fldiv@b& (0+255),0,b
  7187  0033BA                     l1276:
  7188                           
  7189                           ; BSR set to: 0
  7190  0033BA  0100               	movlb	0	; () banked
  7191  0033BC  90D8               	bcf	status,0,c
  7192  0033BE  378A               	rlcf	___fldiv@grs& (0+255),f,b
  7193  0033C0  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7194  0033C2  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7195  0033C4  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7196  0033C6                     l5773:
  7197                           
  7198                           ; BSR set to: 0
  7199  0033C6  0100               	movlb	0	; () banked
  7200  0033C8  517B               	movf	___fldiv@a& (0+255),w,b
  7201  0033CA  0100               	movlb	0	; () banked
  7202  0033CC  5D84               	subwf	___fldiv@rem& (0+255),w,b
  7203  0033CE  0100               	movlb	0	; () banked
  7204  0033D0  517C               	movf	(___fldiv@a+1)& (0+255),w,b
  7205  0033D2  0100               	movlb	0	; () banked
  7206  0033D4  5985               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  7207  0033D6  0100               	movlb	0	; () banked
  7208  0033D8  517D               	movf	(___fldiv@a+2)& (0+255),w,b
  7209  0033DA  0100               	movlb	0	; () banked
  7210  0033DC  5986               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  7211  0033DE  0100               	movlb	0	; () banked
  7212  0033E0  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  7213  0033E2  0100               	movlb	0	; () banked
  7214  0033E4  5987               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  7215  0033E6  A0D8               	btfss	status,0,c
  7216  0033E8  D012               	goto	l5779
  7217                           
  7218                           ; BSR set to: 0
  7219  0033EA  0100               	movlb	0	; () banked
  7220  0033EC  8D8D               	bsf	(___fldiv@grs+3)& (0+255),6,b
  7221                           
  7222                           ; BSR set to: 0
  7223  0033EE  0100               	movlb	0	; () banked
  7224  0033F0  517B               	movf	___fldiv@a& (0+255),w,b
  7225  0033F2  0100               	movlb	0	; () banked
  7226  0033F4  5F84               	subwf	___fldiv@rem& (0+255),f,b
  7227  0033F6  0100               	movlb	0	; () banked
  7228  0033F8  517C               	movf	(___fldiv@a+1)& (0+255),w,b
  7229  0033FA  0100               	movlb	0	; () banked
  7230  0033FC  5B85               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  7231  0033FE  0100               	movlb	0	; () banked
  7232  003400  517D               	movf	(___fldiv@a+2)& (0+255),w,b
  7233  003402  0100               	movlb	0	; () banked
  7234  003404  5B86               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  7235  003406  0100               	movlb	0	; () banked
  7236  003408  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  7237  00340A  0100               	movlb	0	; () banked
  7238  00340C  5B87               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  7239  00340E                     l5779:
  7240                           
  7241                           ; BSR set to: 0
  7242  00340E  0100               	movlb	0	; () banked
  7243  003410  2B8F               	incf	___fldiv@aexp& (0+255),f,b
  7244  003412                     l1273:
  7245                           
  7246                           ; BSR set to: 0
  7247  003412  0E19               	movlw	25
  7248  003414  0100               	movlb	0	; () banked
  7249  003416  658F               	cpfsgt	___fldiv@aexp& (0+255),b
  7250  003418  D7BA               	goto	l5765
  7251                           
  7252                           ; BSR set to: 0
  7253                           
  7254                           ; BSR set to: 0
  7255  00341A  0100               	movlb	0	; () banked
  7256  00341C  5184               	movf	___fldiv@rem& (0+255),w,b
  7257  00341E  0100               	movlb	0	; () banked
  7258  003420  1185               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  7259  003422  0100               	movlb	0	; () banked
  7260  003424  1186               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  7261  003426  0100               	movlb	0	; () banked
  7262  003428  1187               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  7263  00342A  B4D8               	btfsc	status,2,c
  7264  00342C  D018               	goto	l5791
  7265                           
  7266                           ; BSR set to: 0
  7267  00342E  0100               	movlb	0	; () banked
  7268  003430  818A               	bsf	___fldiv@grs& (0+255),0,b
  7269                           
  7270                           ; BSR set to: 0
  7271  003432  D015               	goto	l5791
  7272  003434                     l5785:
  7273                           
  7274                           ; BSR set to: 0
  7275  003434  0100               	movlb	0	; () banked
  7276  003436  90D8               	bcf	status,0,c
  7277  003438  3777               	rlcf	___fldiv@b& (0+255),f,b
  7278  00343A  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
  7279  00343C  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
  7280  00343E  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
  7281                           
  7282                           ; BSR set to: 0
  7283  003440  0100               	movlb	0	; () banked
  7284  003442  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7285  003444  D002               	goto	l1282
  7286                           
  7287                           ; BSR set to: 0
  7288  003446  0100               	movlb	0	; () banked
  7289  003448  8177               	bsf	___fldiv@b& (0+255),0,b
  7290  00344A                     l1282:
  7291                           
  7292                           ; BSR set to: 0
  7293  00344A  0100               	movlb	0	; () banked
  7294  00344C  90D8               	bcf	status,0,c
  7295  00344E  378A               	rlcf	___fldiv@grs& (0+255),f,b
  7296  003450  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7297  003452  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7298  003454  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7299  003456  0100               	movlb	0	; () banked
  7300  003458  0788               	decf	___fldiv@new_exp& (0+255),f,b
  7301  00345A  A0D8               	btfss	status,0,c
  7302  00345C  0789               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  7303  00345E                     l5791:
  7304                           
  7305                           ; BSR set to: 0
  7306  00345E  0100               	movlb	0	; () banked
  7307  003460  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
  7308  003462  D7E8               	goto	l5785
  7309                           
  7310                           ; BSR set to: 0
  7311                           
  7312                           ; BSR set to: 0
  7313  003464  0E00               	movlw	0
  7314  003466  0100               	movlb	0	; () banked
  7315  003468  6F8F               	movwf	___fldiv@aexp& (0+255),b
  7316                           
  7317                           ; BSR set to: 0
  7318  00346A  0100               	movlb	0	; () banked
  7319  00346C  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7320  00346E  D024               	goto	l1284
  7321                           
  7322                           ; BSR set to: 0
  7323  003470  0EFF               	movlw	255
  7324  003472  0100               	movlb	0	; () banked
  7325  003474  158A               	andwf	___fldiv@grs& (0+255),w,b
  7326  003476  0100               	movlb	0	; () banked
  7327  003478  6F7F               	movwf	??___fldiv& (0+255),b
  7328  00347A  0EFF               	movlw	255
  7329  00347C  0100               	movlb	0	; () banked
  7330  00347E  158B               	andwf	(___fldiv@grs+1)& (0+255),w,b
  7331  003480  0100               	movlb	0	; () banked
  7332  003482  6F80               	movwf	(??___fldiv+1)& (0+255),b
  7333  003484  0EFF               	movlw	255
  7334  003486  0100               	movlb	0	; () banked
  7335  003488  158C               	andwf	(___fldiv@grs+2)& (0+255),w,b
  7336  00348A  0100               	movlb	0	; () banked
  7337  00348C  6F81               	movwf	(??___fldiv+2)& (0+255),b
  7338  00348E  0E7F               	movlw	127
  7339  003490  0100               	movlb	0	; () banked
  7340  003492  158D               	andwf	(___fldiv@grs+3)& (0+255),w,b
  7341  003494  0100               	movlb	0	; () banked
  7342  003496  6F82               	movwf	(??___fldiv+3)& (0+255),b
  7343  003498  0100               	movlb	0	; () banked
  7344  00349A  517F               	movf	??___fldiv& (0+255),w,b
  7345  00349C  0100               	movlb	0	; () banked
  7346  00349E  1180               	iorwf	(??___fldiv+1)& (0+255),w,b
  7347  0034A0  0100               	movlb	0	; () banked
  7348  0034A2  1181               	iorwf	(??___fldiv+2)& (0+255),w,b
  7349  0034A4  0100               	movlb	0	; () banked
  7350  0034A6  1182               	iorwf	(??___fldiv+3)& (0+255),w,b
  7351  0034A8  A4D8               	btfss	status,2,c
  7352  0034AA  D003               	goto	l5801
  7353                           
  7354                           ; BSR set to: 0
  7355                           
  7356                           ; BSR set to: 0
  7357  0034AC  0100               	movlb	0	; () banked
  7358  0034AE  A177               	btfss	___fldiv@b& (0+255),0,b
  7359  0034B0  D003               	goto	l1284
  7360  0034B2                     l5801:
  7361                           
  7362                           ; BSR set to: 0
  7363  0034B2  0E01               	movlw	1
  7364  0034B4  0100               	movlb	0	; () banked
  7365  0034B6  6F8F               	movwf	___fldiv@aexp& (0+255),b
  7366  0034B8                     l1284:
  7367                           
  7368                           ; BSR set to: 0
  7369  0034B8  0100               	movlb	0	; () banked
  7370  0034BA  518F               	movf	___fldiv@aexp& (0+255),w,b
  7371  0034BC  0100               	movlb	0	; () banked
  7372  0034BE  B4D8               	btfsc	status,2,c
  7373  0034C0  D023               	goto	l5811
  7374                           
  7375                           ; BSR set to: 0
  7376  0034C2  0E01               	movlw	1
  7377  0034C4  0100               	movlb	0	; () banked
  7378  0034C6  2777               	addwf	___fldiv@b& (0+255),f,b
  7379  0034C8  0E00               	movlw	0
  7380  0034CA  2378               	addwfc	(___fldiv@b+1)& (0+255),f,b
  7381  0034CC  2379               	addwfc	(___fldiv@b+2)& (0+255),f,b
  7382  0034CE  237A               	addwfc	(___fldiv@b+3)& (0+255),f,b
  7383                           
  7384                           ; BSR set to: 0
  7385  0034D0  0100               	movlb	0	; () banked
  7386  0034D2  A17A               	btfss	(___fldiv@b+3)& (0+255),0,b
  7387  0034D4  D019               	goto	l5811
  7388                           
  7389                           ; BSR set to: 0
  7390  0034D6  C077  F07F         	movff	___fldiv@b,??___fldiv
  7391  0034DA  C078  F080         	movff	___fldiv@b+1,??___fldiv+1
  7392  0034DE  C079  F081         	movff	___fldiv@b+2,??___fldiv+2
  7393  0034E2  C07A  F082         	movff	___fldiv@b+3,??___fldiv+3
  7394  0034E6  0100               	movlb	0	; () banked
  7395  0034E8  3582               	rlcf	(??___fldiv+3)& (0+255),w,b
  7396  0034EA  3382               	rrcf	(??___fldiv+3)& (0+255),f,b
  7397  0034EC  3381               	rrcf	(??___fldiv+2)& (0+255),f,b
  7398  0034EE  3380               	rrcf	(??___fldiv+1)& (0+255),f,b
  7399  0034F0  337F               	rrcf	??___fldiv& (0+255),f,b
  7400  0034F2  C07F  F077         	movff	??___fldiv,___fldiv@b
  7401  0034F6  C080  F078         	movff	??___fldiv+1,___fldiv@b+1
  7402  0034FA  C081  F079         	movff	??___fldiv+2,___fldiv@b+2
  7403  0034FE  C082  F07A         	movff	??___fldiv+3,___fldiv@b+3
  7404                           
  7405                           ; BSR set to: 0
  7406  003502  0100               	movlb	0	; () banked
  7407  003504  4B88               	infsnz	___fldiv@new_exp& (0+255),f,b
  7408  003506  2B89               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  7409  003508                     l5811:
  7410                           
  7411                           ; BSR set to: 0
  7412  003508  0100               	movlb	0	; () banked
  7413  00350A  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7414  00350C  D014               	goto	l5815
  7415  00350E  0100               	movlb	0	; () banked
  7416  003510  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7417  003512  E104               	bnz	u7460
  7418  003514  0100               	movlb	0	; () banked
  7419  003516  2988               	incf	___fldiv@new_exp& (0+255),w,b
  7420  003518  A0D8               	btfss	status,0,c
  7421  00351A  D00D               	goto	l5815
  7422  00351C                     u7460:
  7423                           
  7424                           ; BSR set to: 0
  7425  00351C  0E00               	movlw	0
  7426  00351E  0100               	movlb	0	; () banked
  7427  003520  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7428  003522  6988               	setf	___fldiv@new_exp& (0+255),b
  7429  003524  0E00               	movlw	0
  7430  003526  0100               	movlb	0	; () banked
  7431  003528  6F77               	movwf	___fldiv@b& (0+255),b
  7432  00352A  0E00               	movlw	0
  7433  00352C  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  7434  00352E  0E00               	movlw	0
  7435  003530  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  7436  003532  0E00               	movlw	0
  7437  003534  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  7438  003536                     l5815:
  7439                           
  7440                           ; BSR set to: 0
  7441  003536  0100               	movlb	0	; () banked
  7442  003538  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7443  00353A  D007               	goto	l5817
  7444  00353C  0100               	movlb	0	; () banked
  7445  00353E  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7446  003540  E115               	bnz	l5819
  7447  003542  0100               	movlb	0	; () banked
  7448  003544  0588               	decf	___fldiv@new_exp& (0+255),w,b
  7449  003546  B0D8               	btfsc	status,0,c
  7450  003548  D011               	goto	l5819
  7451  00354A                     l5817:
  7452                           
  7453                           ; BSR set to: 0
  7454  00354A  0E00               	movlw	0
  7455  00354C  0100               	movlb	0	; () banked
  7456  00354E  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7457  003550  0E00               	movlw	0
  7458  003552  6F88               	movwf	___fldiv@new_exp& (0+255),b
  7459  003554  0E00               	movlw	0
  7460  003556  0100               	movlb	0	; () banked
  7461  003558  6F77               	movwf	___fldiv@b& (0+255),b
  7462  00355A  0E00               	movlw	0
  7463  00355C  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  7464  00355E  0E00               	movlw	0
  7465  003560  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  7466  003562  0E00               	movlw	0
  7467  003564  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  7468  003566  0E00               	movlw	0
  7469  003568  0100               	movlb	0	; () banked
  7470  00356A  6F83               	movwf	___fldiv@sign& (0+255),b
  7471  00356C                     l5819:
  7472                           
  7473                           ; BSR set to: 0
  7474  00356C  C088  F08E         	movff	___fldiv@new_exp,___fldiv@bexp
  7475                           
  7476                           ; BSR set to: 0
  7477  003570  0100               	movlb	0	; () banked
  7478  003572  A18E               	btfss	___fldiv@bexp& (0+255),0,b
  7479  003574  D003               	goto	l5825
  7480                           
  7481                           ; BSR set to: 0
  7482  003576  0100               	movlb	0	; () banked
  7483  003578  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
  7484  00357A  D002               	goto	l5827
  7485  00357C                     l5825:
  7486                           
  7487                           ; BSR set to: 0
  7488  00357C  0100               	movlb	0	; () banked
  7489  00357E  9F79               	bcf	(___fldiv@b+2)& (0+255),7,b
  7490  003580                     l5827:
  7491                           
  7492                           ; BSR set to: 0
  7493  003580  0100               	movlb	0	; () banked
  7494  003582  90D8               	bcf	status,0,c
  7495  003584  318E               	rrcf	___fldiv@bexp& (0+255),w,b
  7496  003586  0100               	movlb	0	; () banked
  7497  003588  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  7498                           
  7499                           ; BSR set to: 0
  7500  00358A  0100               	movlb	0	; () banked
  7501  00358C  5183               	movf	___fldiv@sign& (0+255),w,b
  7502  00358E  0100               	movlb	0	; () banked
  7503  003590  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
  7504                           
  7505                           ; BSR set to: 0
  7506  003592  C077  F077         	movff	___fldiv@b,?___fldiv
  7507  003596  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
  7508  00359A  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
  7509  00359E  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
  7510  0035A2  0012               	return	
  7511  0035A4                     __end_of___fldiv:
  7512                           	opt stack 0
  7513                           tblptru	equ	0xFF8
  7514                           tblptrh	equ	0xFF7
  7515                           tblptrl	equ	0xFF6
  7516                           tablat	equ	0xFF5
  7517                           prodh	equ	0xFF4
  7518                           prodl	equ	0xFF3
  7519                           postinc0	equ	0xFEE
  7520                           wreg	equ	0xFE8
  7521                           indf2	equ	0xFDF
  7522                           postinc2	equ	0xFDE
  7523                           postdec2	equ	0xFDD
  7524                           fsr2h	equ	0xFDA
  7525                           fsr2l	equ	0xFD9
  7526                           status	equ	0xFD8
  7527                           
  7528 ;; *************** function _abs *****************
  7529 ;; Defined at:
  7530 ;;		line 4 in file "P:\Programmi\Microchip\xc8\v1.35\sources\common\abs.c"
  7531 ;; Parameters:    Size  Location     Type
  7532 ;;  a               2   23[BANK0 ] int 
  7533 ;; Auto vars:     Size  Location     Type
  7534 ;;		None
  7535 ;; Return value:  Size  Location     Type
  7536 ;;                  2   23[BANK0 ] int 
  7537 ;; Registers used:
  7538 ;;		wreg, status,2, status,0
  7539 ;; Tracked objects:
  7540 ;;		On entry : 0/0
  7541 ;;		On exit  : 0/0
  7542 ;;		Unchanged: 0/0
  7543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7544 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7546 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7547 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7548 ;;Total ram usage:        4 bytes
  7549 ;; Hardware stack levels used:    1
  7550 ;; Hardware stack levels required when called:    4
  7551 ;; This function calls:
  7552 ;;		Nothing
  7553 ;; This function is called by:
  7554 ;;		_park_search
  7555 ;;		_parallelo
  7556 ;; This function uses a non-reentrant model
  7557 ;;
  7558                           
  7559                           	psect	text17
  7560  004D6E                     __ptext17:
  7561                           	opt stack 0
  7562  004D6E                     _abs:
  7563                           	opt stack 25
  7564                           
  7565                           ; BSR set to: 0
  7566                           ;incstack = 0
  7567  004D6E  0100               	movlb	0	; () banked
  7568  004D70  AF78               	btfss	(abs@a+1)& (0+255),7,b
  7569  004D72  D00E               	goto	l779
  7570                           
  7571                           ; BSR set to: 0
  7572  004D74  C077  F079         	movff	abs@a,??_abs
  7573  004D78  C078  F07A         	movff	abs@a+1,??_abs+1
  7574  004D7C  0100               	movlb	0	; () banked
  7575  004D7E  1F79               	comf	??_abs& (0+255),f,b
  7576  004D80  1F7A               	comf	(??_abs+1)& (0+255),f,b
  7577  004D82  4B79               	infsnz	??_abs& (0+255),f,b
  7578  004D84  2B7A               	incf	(??_abs+1)& (0+255),f,b
  7579  004D86  C079  F077         	movff	??_abs,?_abs
  7580  004D8A  C07A  F078         	movff	??_abs+1,?_abs+1
  7581  004D8E  0012               	return	
  7582  004D90                     l779:
  7583                           
  7584                           ; BSR set to: 0
  7585  004D90  C077  F077         	movff	abs@a,?_abs
  7586  004D94  C078  F078         	movff	abs@a+1,?_abs+1
  7587                           
  7588                           ; BSR set to: 0
  7589  004D98  0012               	return		;funcret
  7590  004D9A                     __end_of_abs:
  7591                           	opt stack 0
  7592                           tblptru	equ	0xFF8
  7593                           tblptrh	equ	0xFF7
  7594                           tblptrl	equ	0xFF6
  7595                           tablat	equ	0xFF5
  7596                           prodh	equ	0xFF4
  7597                           prodl	equ	0xFF3
  7598                           postinc0	equ	0xFEE
  7599                           wreg	equ	0xFE8
  7600                           indf2	equ	0xFDF
  7601                           postinc2	equ	0xFDE
  7602                           postdec2	equ	0xFDD
  7603                           fsr2h	equ	0xFDA
  7604                           fsr2l	equ	0xFD9
  7605                           status	equ	0xFD8
  7606                           
  7607 ;; *************** function ___xxtofl *****************
  7608 ;; Defined at:
  7609 ;;		line 10 in file "P:\Programmi\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  7610 ;; Parameters:    Size  Location     Type
  7611 ;;  sign            1    wreg     unsigned char 
  7612 ;;  val             4   27[BANK0 ] long 
  7613 ;; Auto vars:     Size  Location     Type
  7614 ;;  sign            1   35[BANK0 ] unsigned char 
  7615 ;;  arg             4   37[BANK0 ] unsigned long 
  7616 ;;  exp             1   36[BANK0 ] unsigned char 
  7617 ;; Return value:  Size  Location     Type
  7618 ;;                  4   27[BANK0 ] unsigned char 
  7619 ;; Registers used:
  7620 ;;		wreg, status,2, status,0
  7621 ;; Tracked objects:
  7622 ;;		On entry : 0/0
  7623 ;;		On exit  : 0/0
  7624 ;;		Unchanged: 0/0
  7625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7626 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7627 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7628 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7629 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7630 ;;Total ram usage:       14 bytes
  7631 ;; Hardware stack levels used:    1
  7632 ;; Hardware stack levels required when called:    4
  7633 ;; This function calls:
  7634 ;;		Nothing
  7635 ;; This function is called by:
  7636 ;;		_park_search
  7637 ;;		_parallelo
  7638 ;; This function uses a non-reentrant model
  7639 ;;
  7640                           
  7641                           	psect	text18
  7642  0040CE                     __ptext18:
  7643                           	opt stack 0
  7644  0040CE                     ___xxtofl:
  7645                           	opt stack 25
  7646                           
  7647                           ; BSR set to: 0
  7648                           ;incstack = 0
  7649                           ;___xxtofl@sign stored from wreg
  7650  0040CE  0100               	movlb	0	; () banked
  7651  0040D0  6F83               	movwf	___xxtofl@sign& (0+255),b
  7652  0040D2  0100               	movlb	0	; () banked
  7653  0040D4  5183               	movf	___xxtofl@sign& (0+255),w,b
  7654  0040D6  0100               	movlb	0	; () banked
  7655  0040D8  B4D8               	btfsc	status,2,c
  7656  0040DA  D01E               	goto	l1345
  7657                           
  7658                           ; BSR set to: 0
  7659  0040DC  0100               	movlb	0	; () banked
  7660  0040DE  AF7E               	btfss	(___xxtofl@val+3)& (0+255),7,b
  7661  0040E0  D01B               	goto	l1345
  7662                           
  7663                           ; BSR set to: 0
  7664  0040E2  C07B  F07F         	movff	___xxtofl@val,??___xxtofl
  7665  0040E6  C07C  F080         	movff	___xxtofl@val+1,??___xxtofl+1
  7666  0040EA  C07D  F081         	movff	___xxtofl@val+2,??___xxtofl+2
  7667  0040EE  C07E  F082         	movff	___xxtofl@val+3,??___xxtofl+3
  7668  0040F2  0100               	movlb	0	; () banked
  7669  0040F4  1F7F               	comf	??___xxtofl& (0+255),f,b
  7670  0040F6  1F80               	comf	(??___xxtofl+1)& (0+255),f,b
  7671  0040F8  1F81               	comf	(??___xxtofl+2)& (0+255),f,b
  7672  0040FA  1F82               	comf	(??___xxtofl+3)& (0+255),f,b
  7673  0040FC  2B7F               	incf	??___xxtofl& (0+255),f,b
  7674  0040FE  0E00               	movlw	0
  7675  004100  2380               	addwfc	(??___xxtofl+1)& (0+255),f,b
  7676  004102  2381               	addwfc	(??___xxtofl+2)& (0+255),f,b
  7677  004104  2382               	addwfc	(??___xxtofl+3)& (0+255),f,b
  7678  004106  C07F  F085         	movff	??___xxtofl,___xxtofl@arg
  7679  00410A  C080  F086         	movff	??___xxtofl+1,___xxtofl@arg+1
  7680  00410E  C081  F087         	movff	??___xxtofl+2,___xxtofl@arg+2
  7681  004112  C082  F088         	movff	??___xxtofl+3,___xxtofl@arg+3
  7682  004116  D008               	goto	l4873
  7683  004118                     l1345:
  7684                           
  7685                           ; BSR set to: 0
  7686  004118  C07B  F085         	movff	___xxtofl@val,___xxtofl@arg
  7687  00411C  C07C  F086         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7688  004120  C07D  F087         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7689  004124  C07E  F088         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7690  004128                     l4873:
  7691                           
  7692                           ; BSR set to: 0
  7693  004128  0100               	movlb	0	; () banked
  7694  00412A  517B               	movf	___xxtofl@val& (0+255),w,b
  7695  00412C  0100               	movlb	0	; () banked
  7696  00412E  117C               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  7697  004130  0100               	movlb	0	; () banked
  7698  004132  117D               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  7699  004134  0100               	movlb	0	; () banked
  7700  004136  117E               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  7701  004138  A4D8               	btfss	status,2,c
  7702  00413A  D00A               	goto	l4879
  7703                           
  7704                           ; BSR set to: 0
  7705  00413C  0E00               	movlw	0
  7706  00413E  0100               	movlb	0	; () banked
  7707  004140  6F7B               	movwf	?___xxtofl& (0+255),b
  7708  004142  0E00               	movlw	0
  7709  004144  6F7C               	movwf	(?___xxtofl+1)& (0+255),b
  7710  004146  0E00               	movlw	0
  7711  004148  6F7D               	movwf	(?___xxtofl+2)& (0+255),b
  7712  00414A  0E00               	movlw	0
  7713  00414C  6F7E               	movwf	(?___xxtofl+3)& (0+255),b
  7714                           
  7715                           ; BSR set to: 0
  7716  00414E  0012               	return	
  7717  004150                     l4879:
  7718                           
  7719                           ; BSR set to: 0
  7720  004150  0E96               	movlw	150
  7721  004152  0100               	movlb	0	; () banked
  7722  004154  6F84               	movwf	___xxtofl@exp& (0+255),b
  7723  004156  D008               	goto	l4883
  7724  004158                     l4881:
  7725                           
  7726                           ; BSR set to: 0
  7727  004158  0100               	movlb	0	; () banked
  7728  00415A  2B84               	incf	___xxtofl@exp& (0+255),f,b
  7729  00415C  0100               	movlb	0	; () banked
  7730  00415E  90D8               	bcf	status,0,c
  7731  004160  3388               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7732  004162  3387               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7733  004164  3386               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7734  004166  3385               	rrcf	___xxtofl@arg& (0+255),f,b
  7735  004168                     l4883:
  7736                           
  7737                           ; BSR set to: 0
  7738  004168  0E00               	movlw	0
  7739  00416A  0100               	movlb	0	; () banked
  7740  00416C  1585               	andwf	___xxtofl@arg& (0+255),w,b
  7741  00416E  0100               	movlb	0	; () banked
  7742  004170  6F7F               	movwf	??___xxtofl& (0+255),b
  7743  004172  0E00               	movlw	0
  7744  004174  0100               	movlb	0	; () banked
  7745  004176  1586               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7746  004178  0100               	movlb	0	; () banked
  7747  00417A  6F80               	movwf	(??___xxtofl+1)& (0+255),b
  7748  00417C  0E00               	movlw	0
  7749  00417E  0100               	movlb	0	; () banked
  7750  004180  1587               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7751  004182  0100               	movlb	0	; () banked
  7752  004184  6F81               	movwf	(??___xxtofl+2)& (0+255),b
  7753  004186  0EFE               	movlw	254
  7754  004188  0100               	movlb	0	; () banked
  7755  00418A  1588               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7756  00418C  0100               	movlb	0	; () banked
  7757  00418E  6F82               	movwf	(??___xxtofl+3)& (0+255),b
  7758  004190  0100               	movlb	0	; () banked
  7759  004192  517F               	movf	??___xxtofl& (0+255),w,b
  7760  004194  0100               	movlb	0	; () banked
  7761  004196  1180               	iorwf	(??___xxtofl+1)& (0+255),w,b
  7762  004198  0100               	movlb	0	; () banked
  7763  00419A  1181               	iorwf	(??___xxtofl+2)& (0+255),w,b
  7764  00419C  0100               	movlb	0	; () banked
  7765  00419E  1182               	iorwf	(??___xxtofl+3)& (0+255),w,b
  7766  0041A0  B4D8               	btfsc	status,2,c
  7767  0041A2  D010               	goto	l1352
  7768  0041A4  D7D9               	goto	l4881
  7769  0041A6                     l4885:
  7770                           
  7771                           ; BSR set to: 0
  7772  0041A6  0100               	movlb	0	; () banked
  7773  0041A8  2B84               	incf	___xxtofl@exp& (0+255),f,b
  7774                           
  7775                           ; BSR set to: 0
  7776  0041AA  0E01               	movlw	1
  7777  0041AC  0100               	movlb	0	; () banked
  7778  0041AE  2785               	addwf	___xxtofl@arg& (0+255),f,b
  7779  0041B0  0E00               	movlw	0
  7780  0041B2  2386               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  7781  0041B4  2387               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  7782  0041B6  2388               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  7783                           
  7784                           ; BSR set to: 0
  7785  0041B8  0100               	movlb	0	; () banked
  7786  0041BA  90D8               	bcf	status,0,c
  7787  0041BC  3388               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7788  0041BE  3387               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7789  0041C0  3386               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7790  0041C2  3385               	rrcf	___xxtofl@arg& (0+255),f,b
  7791  0041C4                     l1352:
  7792                           
  7793                           ; BSR set to: 0
  7794  0041C4  0E00               	movlw	0
  7795  0041C6  0100               	movlb	0	; () banked
  7796  0041C8  1585               	andwf	___xxtofl@arg& (0+255),w,b
  7797  0041CA  0100               	movlb	0	; () banked
  7798  0041CC  6F7F               	movwf	??___xxtofl& (0+255),b
  7799  0041CE  0E00               	movlw	0
  7800  0041D0  0100               	movlb	0	; () banked
  7801  0041D2  1586               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7802  0041D4  0100               	movlb	0	; () banked
  7803  0041D6  6F80               	movwf	(??___xxtofl+1)& (0+255),b
  7804  0041D8  0E00               	movlw	0
  7805  0041DA  0100               	movlb	0	; () banked
  7806  0041DC  1587               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7807  0041DE  0100               	movlb	0	; () banked
  7808  0041E0  6F81               	movwf	(??___xxtofl+2)& (0+255),b
  7809  0041E2  0EFF               	movlw	255
  7810  0041E4  0100               	movlb	0	; () banked
  7811  0041E6  1588               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7812  0041E8  0100               	movlb	0	; () banked
  7813  0041EA  6F82               	movwf	(??___xxtofl+3)& (0+255),b
  7814  0041EC  0100               	movlb	0	; () banked
  7815  0041EE  517F               	movf	??___xxtofl& (0+255),w,b
  7816  0041F0  0100               	movlb	0	; () banked
  7817  0041F2  1180               	iorwf	(??___xxtofl+1)& (0+255),w,b
  7818  0041F4  0100               	movlb	0	; () banked
  7819  0041F6  1181               	iorwf	(??___xxtofl+2)& (0+255),w,b
  7820  0041F8  0100               	movlb	0	; () banked
  7821  0041FA  1182               	iorwf	(??___xxtofl+3)& (0+255),w,b
  7822  0041FC  B4D8               	btfsc	status,2,c
  7823  0041FE  D009               	goto	l4893
  7824  004200  D7D2               	goto	l4885
  7825  004202                     l4891:
  7826                           
  7827                           ; BSR set to: 0
  7828  004202  0100               	movlb	0	; () banked
  7829  004204  0784               	decf	___xxtofl@exp& (0+255),f,b
  7830  004206  0100               	movlb	0	; () banked
  7831  004208  90D8               	bcf	status,0,c
  7832  00420A  3785               	rlcf	___xxtofl@arg& (0+255),f,b
  7833  00420C  3786               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  7834  00420E  3787               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  7835  004210  3788               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  7836  004212                     l4893:
  7837                           
  7838                           ; BSR set to: 0
  7839  004212  0100               	movlb	0	; () banked
  7840  004214  BF87               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  7841  004216  D004               	goto	l1359
  7842                           
  7843                           ; BSR set to: 0
  7844  004218  0E02               	movlw	2
  7845  00421A  0100               	movlb	0	; () banked
  7846  00421C  6184               	cpfslt	___xxtofl@exp& (0+255),b
  7847  00421E  D7F1               	goto	l4891
  7848  004220                     l1359:
  7849                           
  7850                           ; BSR set to: 0
  7851  004220  0100               	movlb	0	; () banked
  7852  004222  B184               	btfsc	___xxtofl@exp& (0+255),0,b
  7853  004224  D009               	goto	l1360
  7854                           
  7855                           ; BSR set to: 0
  7856  004226  0EFF               	movlw	255
  7857  004228  0100               	movlb	0	; () banked
  7858  00422A  1785               	andwf	___xxtofl@arg& (0+255),f,b
  7859  00422C  0EFF               	movlw	255
  7860  00422E  1786               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  7861  004230  0E7F               	movlw	127
  7862  004232  1787               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  7863  004234  0EFF               	movlw	255
  7864  004236  1788               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  7865  004238                     l1360:
  7866                           
  7867                           ; BSR set to: 0
  7868  004238  0100               	movlb	0	; () banked
  7869  00423A  90D8               	bcf	status,0,c
  7870  00423C  3384               	rrcf	___xxtofl@exp& (0+255),f,b
  7871  00423E  C084  F07F         	movff	___xxtofl@exp,??___xxtofl
  7872  004242  0100               	movlb	0	; () banked
  7873  004244  6B80               	clrf	(??___xxtofl+1)& (0+255),b
  7874  004246  6B81               	clrf	(??___xxtofl+2)& (0+255),b
  7875  004248  6B82               	clrf	(??___xxtofl+3)& (0+255),b
  7876  00424A  C07F  F082         	movff	??___xxtofl,??___xxtofl+3
  7877  00424E  0100               	movlb	0	; () banked
  7878  004250  6B81               	clrf	(??___xxtofl+2)& (0+255),b
  7879  004252  6B80               	clrf	(??___xxtofl+1)& (0+255),b
  7880  004254  6B7F               	clrf	??___xxtofl& (0+255),b
  7881  004256  0100               	movlb	0	; () banked
  7882  004258  517F               	movf	??___xxtofl& (0+255),w,b
  7883  00425A  0100               	movlb	0	; () banked
  7884  00425C  1385               	iorwf	___xxtofl@arg& (0+255),f,b
  7885  00425E  0100               	movlb	0	; () banked
  7886  004260  5180               	movf	(??___xxtofl+1)& (0+255),w,b
  7887  004262  0100               	movlb	0	; () banked
  7888  004264  1386               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  7889  004266  0100               	movlb	0	; () banked
  7890  004268  5181               	movf	(??___xxtofl+2)& (0+255),w,b
  7891  00426A  0100               	movlb	0	; () banked
  7892  00426C  1387               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  7893  00426E  0100               	movlb	0	; () banked
  7894  004270  5182               	movf	(??___xxtofl+3)& (0+255),w,b
  7895  004272  0100               	movlb	0	; () banked
  7896  004274  1388               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  7897                           
  7898                           ; BSR set to: 0
  7899  004276  0100               	movlb	0	; () banked
  7900  004278  5183               	movf	___xxtofl@sign& (0+255),w,b
  7901  00427A  0100               	movlb	0	; () banked
  7902  00427C  B4D8               	btfsc	status,2,c
  7903  00427E  D005               	goto	l4905
  7904                           
  7905                           ; BSR set to: 0
  7906  004280  0100               	movlb	0	; () banked
  7907  004282  AF7E               	btfss	(___xxtofl@val+3)& (0+255),7,b
  7908  004284  D002               	goto	l4905
  7909                           
  7910                           ; BSR set to: 0
  7911  004286  0100               	movlb	0	; () banked
  7912  004288  8F88               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  7913  00428A                     l4905:
  7914                           
  7915                           ; BSR set to: 0
  7916  00428A  C085  F07B         	movff	___xxtofl@arg,?___xxtofl
  7917  00428E  C086  F07C         	movff	___xxtofl@arg+1,?___xxtofl+1
  7918  004292  C087  F07D         	movff	___xxtofl@arg+2,?___xxtofl+2
  7919  004296  C088  F07E         	movff	___xxtofl@arg+3,?___xxtofl+3
  7920  00429A  0012               	return	
  7921  00429C                     __end_of___xxtofl:
  7922                           	opt stack 0
  7923                           tblptru	equ	0xFF8
  7924                           tblptrh	equ	0xFF7
  7925                           tblptrl	equ	0xFF6
  7926                           tablat	equ	0xFF5
  7927                           prodh	equ	0xFF4
  7928                           prodl	equ	0xFF3
  7929                           postinc0	equ	0xFEE
  7930                           wreg	equ	0xFE8
  7931                           indf2	equ	0xFDF
  7932                           postinc2	equ	0xFDE
  7933                           postdec2	equ	0xFDD
  7934                           fsr2h	equ	0xFDA
  7935                           fsr2l	equ	0xFD9
  7936                           status	equ	0xFD8
  7937                           
  7938 ;; *************** function ___fltol *****************
  7939 ;; Defined at:
  7940 ;;		line 43 in file "P:\Programmi\Microchip\xc8\v1.35\sources\common\fltol.c"
  7941 ;; Parameters:    Size  Location     Type
  7942 ;;  f1              4   48[BANK0 ] unsigned char 
  7943 ;; Auto vars:     Size  Location     Type
  7944 ;;  exp1            1   57[BANK0 ] unsigned char 
  7945 ;;  sign1           1   56[BANK0 ] unsigned char 
  7946 ;; Return value:  Size  Location     Type
  7947 ;;                  4   48[BANK0 ] long 
  7948 ;; Registers used:
  7949 ;;		wreg, status,2, status,0
  7950 ;; Tracked objects:
  7951 ;;		On entry : 0/0
  7952 ;;		On exit  : 0/0
  7953 ;;		Unchanged: 0/0
  7954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7955 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7956 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7957 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7958 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7959 ;;Total ram usage:       10 bytes
  7960 ;; Hardware stack levels used:    1
  7961 ;; Hardware stack levels required when called:    4
  7962 ;; This function calls:
  7963 ;;		Nothing
  7964 ;; This function is called by:
  7965 ;;		_parallelo
  7966 ;; This function uses a non-reentrant model
  7967 ;;
  7968                           
  7969                           	psect	text19
  7970  00486C                     __ptext19:
  7971                           	opt stack 0
  7972  00486C                     ___fltol:
  7973                           	opt stack 25
  7974                           
  7975                           ; BSR set to: 0
  7976                           ;incstack = 0
  7977  00486C  0100               	movlb	0	; () banked
  7978  00486E  3592               	rlcf	(___fltol@f1+2)& (0+255),w,b
  7979  004870  3593               	rlcf	(___fltol@f1+3)& (0+255),w,b
  7980  004872  0100               	movlb	0	; () banked
  7981  004874  6F99               	movwf	___fltol@exp1& (0+255),b
  7982  004876  0100               	movlb	0	; () banked
  7983  004878  5199               	movf	___fltol@exp1& (0+255),w,b
  7984  00487A  A4D8               	btfss	status,2,c
  7985  00487C  D00A               	goto	l4829
  7986                           
  7987                           ; BSR set to: 0
  7988  00487E  0E00               	movlw	0
  7989  004880  0100               	movlb	0	; () banked
  7990  004882  6F90               	movwf	?___fltol& (0+255),b
  7991  004884  0E00               	movlw	0
  7992  004886  6F91               	movwf	(?___fltol+1)& (0+255),b
  7993  004888  0E00               	movlw	0
  7994  00488A  6F92               	movwf	(?___fltol+2)& (0+255),b
  7995  00488C  0E00               	movlw	0
  7996  00488E  6F93               	movwf	(?___fltol+3)& (0+255),b
  7997                           
  7998                           ; BSR set to: 0
  7999  004890  0012               	return	
  8000  004892                     l4829:
  8001                           
  8002                           ; BSR set to: 0
  8003  004892  C090  F094         	movff	___fltol@f1,??___fltol
  8004  004896  C091  F095         	movff	___fltol@f1+1,??___fltol+1
  8005  00489A  C092  F096         	movff	___fltol@f1+2,??___fltol+2
  8006  00489E  C093  F097         	movff	___fltol@f1+3,??___fltol+3
  8007  0048A2  0E20               	movlw	32
  8008  0048A4  D006               	goto	u5930
  8009  0048A6                     u5935:
  8010  0048A6  0100               	movlb	0	; () banked
  8011  0048A8  90D8               	bcf	status,0,c
  8012  0048AA  3397               	rrcf	(??___fltol+3)& (0+255),f,b
  8013  0048AC  3396               	rrcf	(??___fltol+2)& (0+255),f,b
  8014  0048AE  3395               	rrcf	(??___fltol+1)& (0+255),f,b
  8015  0048B0  3394               	rrcf	??___fltol& (0+255),f,b
  8016  0048B2                     u5930:
  8017  0048B2  2EE8               	decfsz	wreg,f,c
  8018  0048B4  D7F8               	goto	u5935
  8019  0048B6  0100               	movlb	0	; () banked
  8020  0048B8  5194               	movf	??___fltol& (0+255),w,b
  8021  0048BA  0100               	movlb	0	; () banked
  8022  0048BC  6F98               	movwf	___fltol@sign1& (0+255),b
  8023                           
  8024                           ; BSR set to: 0
  8025  0048BE  0100               	movlb	0	; () banked
  8026  0048C0  8F92               	bsf	(___fltol@f1+2)& (0+255),7,b
  8027                           
  8028                           ; BSR set to: 0
  8029  0048C2  0EFF               	movlw	255
  8030  0048C4  0100               	movlb	0	; () banked
  8031  0048C6  1790               	andwf	___fltol@f1& (0+255),f,b
  8032  0048C8  0EFF               	movlw	255
  8033  0048CA  1791               	andwf	(___fltol@f1+1)& (0+255),f,b
  8034  0048CC  0EFF               	movlw	255
  8035  0048CE  1792               	andwf	(___fltol@f1+2)& (0+255),f,b
  8036  0048D0  0E00               	movlw	0
  8037  0048D2  1793               	andwf	(___fltol@f1+3)& (0+255),f,b
  8038                           
  8039                           ; BSR set to: 0
  8040  0048D4  0E96               	movlw	150
  8041  0048D6  0100               	movlb	0	; () banked
  8042  0048D8  5F99               	subwf	___fltol@exp1& (0+255),f,b
  8043                           
  8044                           ; BSR set to: 0
  8045  0048DA  0100               	movlb	0	; () banked
  8046  0048DC  AF99               	btfss	___fltol@exp1& (0+255),7,b
  8047  0048DE  D01A               	goto	l4849
  8048                           
  8049                           ; BSR set to: 0
  8050  0048E0  0100               	movlb	0	; () banked
  8051  0048E2  5199               	movf	___fltol@exp1& (0+255),w,b
  8052  0048E4  0A80               	xorlw	128
  8053  0048E6  0F97               	addlw	151
  8054  0048E8  B0D8               	btfsc	status,0,c
  8055  0048EA  D00A               	goto	l4845
  8056                           
  8057                           ; BSR set to: 0
  8058  0048EC  0E00               	movlw	0
  8059  0048EE  0100               	movlb	0	; () banked
  8060  0048F0  6F90               	movwf	?___fltol& (0+255),b
  8061  0048F2  0E00               	movlw	0
  8062  0048F4  6F91               	movwf	(?___fltol+1)& (0+255),b
  8063  0048F6  0E00               	movlw	0
  8064  0048F8  6F92               	movwf	(?___fltol+2)& (0+255),b
  8065  0048FA  0E00               	movlw	0
  8066  0048FC  6F93               	movwf	(?___fltol+3)& (0+255),b
  8067                           
  8068                           ; BSR set to: 0
  8069  0048FE  0012               	return	
  8070  004900                     l4845:
  8071                           
  8072                           ; BSR set to: 0
  8073  004900  0100               	movlb	0	; () banked
  8074  004902  90D8               	bcf	status,0,c
  8075  004904  3393               	rrcf	(___fltol@f1+3)& (0+255),f,b
  8076  004906  3392               	rrcf	(___fltol@f1+2)& (0+255),f,b
  8077  004908  3391               	rrcf	(___fltol@f1+1)& (0+255),f,b
  8078  00490A  3390               	rrcf	___fltol@f1& (0+255),f,b
  8079                           
  8080                           ; BSR set to: 0
  8081  00490C  0100               	movlb	0	; () banked
  8082  00490E  3F99               	incfsz	___fltol@exp1& (0+255),f,b
  8083  004910  D7F7               	goto	l4845
  8084                           
  8085                           ; BSR set to: 0
  8086  004912  D01B               	goto	l4859
  8087  004914                     l4849:
  8088                           
  8089                           ; BSR set to: 0
  8090  004914  0E1F               	movlw	31
  8091  004916  0100               	movlb	0	; () banked
  8092  004918  6599               	cpfsgt	___fltol@exp1& (0+255),b
  8093  00491A  D012               	goto	l4857
  8094                           
  8095                           ; BSR set to: 0
  8096  00491C  0E00               	movlw	0
  8097  00491E  0100               	movlb	0	; () banked
  8098  004920  6F90               	movwf	?___fltol& (0+255),b
  8099  004922  0E00               	movlw	0
  8100  004924  6F91               	movwf	(?___fltol+1)& (0+255),b
  8101  004926  0E00               	movlw	0
  8102  004928  6F92               	movwf	(?___fltol+2)& (0+255),b
  8103  00492A  0E00               	movlw	0
  8104  00492C  6F93               	movwf	(?___fltol+3)& (0+255),b
  8105                           
  8106                           ; BSR set to: 0
  8107  00492E  0012               	return	
  8108  004930                     l4855:
  8109                           
  8110                           ; BSR set to: 0
  8111  004930  0100               	movlb	0	; () banked
  8112  004932  90D8               	bcf	status,0,c
  8113  004934  3790               	rlcf	___fltol@f1& (0+255),f,b
  8114  004936  3791               	rlcf	(___fltol@f1+1)& (0+255),f,b
  8115  004938  3792               	rlcf	(___fltol@f1+2)& (0+255),f,b
  8116  00493A  3793               	rlcf	(___fltol@f1+3)& (0+255),f,b
  8117  00493C  0100               	movlb	0	; () banked
  8118  00493E  0799               	decf	___fltol@exp1& (0+255),f,b
  8119  004940                     l4857:
  8120                           
  8121                           ; BSR set to: 0
  8122  004940  0100               	movlb	0	; () banked
  8123  004942  5199               	movf	___fltol@exp1& (0+255),w,b
  8124  004944  0100               	movlb	0	; () banked
  8125  004946  A4D8               	btfss	status,2,c
  8126  004948  D7F3               	goto	l4855
  8127  00494A                     l4859:
  8128                           
  8129                           ; BSR set to: 0
  8130  00494A  0100               	movlb	0	; () banked
  8131  00494C  5198               	movf	___fltol@sign1& (0+255),w,b
  8132  00494E  0100               	movlb	0	; () banked
  8133  004950  B4D8               	btfsc	status,2,c
  8134  004952  D009               	goto	l4863
  8135                           
  8136                           ; BSR set to: 0
  8137  004954  0100               	movlb	0	; () banked
  8138  004956  1F93               	comf	(___fltol@f1+3)& (0+255),f,b
  8139  004958  1F92               	comf	(___fltol@f1+2)& (0+255),f,b
  8140  00495A  1F91               	comf	(___fltol@f1+1)& (0+255),f,b
  8141  00495C  6D90               	negf	___fltol@f1& (0+255),b
  8142  00495E  0E00               	movlw	0
  8143  004960  2391               	addwfc	(___fltol@f1+1)& (0+255),f,b
  8144  004962  2392               	addwfc	(___fltol@f1+2)& (0+255),f,b
  8145  004964  2393               	addwfc	(___fltol@f1+3)& (0+255),f,b
  8146  004966                     l4863:
  8147                           
  8148                           ; BSR set to: 0
  8149  004966  C090  F090         	movff	___fltol@f1,?___fltol
  8150  00496A  C091  F091         	movff	___fltol@f1+1,?___fltol+1
  8151  00496E  C092  F092         	movff	___fltol@f1+2,?___fltol+2
  8152  004972  C093  F093         	movff	___fltol@f1+3,?___fltol+3
  8153  004976  0012               	return	
  8154  004978                     __end_of___fltol:
  8155                           	opt stack 0
  8156                           tblptru	equ	0xFF8
  8157                           tblptrh	equ	0xFF7
  8158                           tblptrl	equ	0xFF6
  8159                           tablat	equ	0xFF5
  8160                           prodh	equ	0xFF4
  8161                           prodl	equ	0xFF3
  8162                           postinc0	equ	0xFEE
  8163                           wreg	equ	0xFE8
  8164                           indf2	equ	0xFDF
  8165                           postinc2	equ	0xFDE
  8166                           postdec2	equ	0xFDD
  8167                           fsr2h	equ	0xFDA
  8168                           fsr2l	equ	0xFD9
  8169                           status	equ	0xFD8
  8170                           
  8171 ;; *************** function _configurazione *****************
  8172 ;; Defined at:
  8173 ;;		line 267 in file "parcheggio.c"
  8174 ;; Parameters:    Size  Location     Type
  8175 ;;		None
  8176 ;; Auto vars:     Size  Location     Type
  8177 ;;		None
  8178 ;; Return value:  Size  Location     Type
  8179 ;;		None               void
  8180 ;; Registers used:
  8181 ;;		wreg, status,2, status,0, cstack
  8182 ;; Tracked objects:
  8183 ;;		On entry : 0/0
  8184 ;;		On exit  : 0/0
  8185 ;;		Unchanged: 0/0
  8186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8191 ;;Total ram usage:        0 bytes
  8192 ;; Hardware stack levels used:    1
  8193 ;; Hardware stack levels required when called:    6
  8194 ;; This function calls:
  8195 ;;		_CANInitialize
  8196 ;; This function is called by:
  8197 ;;		_main
  8198 ;; This function uses a non-reentrant model
  8199 ;;
  8200                           
  8201                           	psect	text20
  8202  004B90                     __ptext20:
  8203                           	opt stack 0
  8204  004B90                     _configurazione:
  8205                           	opt stack 24
  8206                           
  8207                           ;parcheggio.c: 268: LATA = 0x00;
  8208                           
  8209                           ; BSR set to: 0
  8210                           ;incstack = 0
  8211  004B90  0E00               	movlw	0
  8212  004B92  6E89               	movwf	3977,c	;volatile
  8213                           
  8214                           ;parcheggio.c: 269: TRISA = 0b11110000;
  8215  004B94  0EF0               	movlw	240
  8216  004B96  6E92               	movwf	3986,c	;volatile
  8217                           
  8218                           ;parcheggio.c: 271: LATB = 0x00;
  8219  004B98  0E00               	movlw	0
  8220  004B9A  6E8A               	movwf	3978,c	;volatile
  8221                           
  8222                           ;parcheggio.c: 272: TRISB = 0b10001010;
  8223  004B9C  0E8A               	movlw	138
  8224  004B9E  6E93               	movwf	3987,c	;volatile
  8225                           
  8226                           ;parcheggio.c: 274: LATC = 0x00;
  8227  004BA0  0E00               	movlw	0
  8228  004BA2  6E8B               	movwf	3979,c	;volatile
  8229                           
  8230                           ;parcheggio.c: 275: TRISC = 0b11111111;
  8231  004BA4  6894               	setf	3988,c	;volatile
  8232                           
  8233                           ;parcheggio.c: 277: ADCON1 = 0xFF;
  8234  004BA6  68C1               	setf	4033,c	;volatile
  8235                           
  8236                           ;parcheggio.c: 278: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG
      +                          _SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  8237  004BA8  0E06               	movlw	6
  8238  004BAA  0100               	movlb	0	; () banked
  8239  004BAC  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
  8240  004BAE  0E05               	movlw	5
  8241  004BB0  0100               	movlb	0	; () banked
  8242  004BB2  6F86               	movwf	CANInitialize@phaseSeg2& (0+255),b
  8243  004BB4  0E01               	movlw	1
  8244  004BB6  0100               	movlb	0	; () banked
  8245  004BB8  6F87               	movwf	CANInitialize@SJW& (0+255),b
  8246  004BBA  0E03               	movlw	3
  8247  004BBC  0100               	movlb	0	; () banked
  8248  004BBE  6F88               	movwf	CANInitialize@BRP& (0+255),b
  8249  004BC0  0E9D               	movlw	157
  8250  004BC2  0100               	movlb	0	; () banked
  8251  004BC4  6F89               	movwf	CANInitialize@flags& (0+255),b
  8252  004BC6  0E04               	movlw	4
  8253  004BC8  EC4E  F021         	call	_CANInitialize
  8254                           
  8255                           ;parcheggio.c: 280: RCONbits.IPEN = 1;
  8256  004BCC  8ED0               	bsf	4048,7,c	;volatile
  8257                           
  8258                           ;parcheggio.c: 281: PIR3bits.RXB1IF = 0;
  8259  004BCE  92A4               	bcf	4004,1,c	;volatile
  8260                           
  8261                           ;parcheggio.c: 282: PIR3bits.RXB0IF = 0;
  8262  004BD0  90A4               	bcf	4004,0,c	;volatile
  8263                           
  8264                           ;parcheggio.c: 283: IPR3bits.RXB1IP = 0;
  8265  004BD2  92A5               	bcf	4005,1,c	;volatile
  8266                           
  8267                           ;parcheggio.c: 284: IPR3bits.RXB0IP = 0;
  8268  004BD4  90A5               	bcf	4005,0,c	;volatile
  8269                           
  8270                           ;parcheggio.c: 285: PIE3bits.RXB1IE = 1;
  8271  004BD6  82A3               	bsf	4003,1,c	;volatile
  8272                           
  8273                           ;parcheggio.c: 286: PIE3bits.RXB0IE = 1;
  8274  004BD8  80A3               	bsf	4003,0,c	;volatile
  8275                           
  8276                           ;parcheggio.c: 287: INTCON2bits.TMR0IP = 0;
  8277  004BDA  94F1               	bcf	intcon2,2,c	;volatile
  8278                           
  8279                           ;parcheggio.c: 288: T0CON = 0x80;
  8280  004BDC  0E80               	movlw	128
  8281  004BDE  6ED5               	movwf	4053,c	;volatile
  8282                           
  8283                           ;parcheggio.c: 289: T3CON = 0x11;
  8284  004BE0  0E11               	movlw	17
  8285  004BE2  6EB1               	movwf	4017,c	;volatile
  8286                           
  8287                           ;parcheggio.c: 290: TMR0H = 0x34;
  8288  004BE4  0E34               	movlw	52
  8289  004BE6  6ED7               	movwf	4055,c	;volatile
  8290                           
  8291                           ;parcheggio.c: 291: TMR0L = 0xE0;
  8292  004BE8  0EE0               	movlw	224
  8293  004BEA  6ED6               	movwf	4054,c	;volatile
  8294                           
  8295                           ;parcheggio.c: 292: INTCONbits.TMR0IF = 0;
  8296  004BEC  94F2               	bcf	intcon,2,c	;volatile
  8297                           
  8298                           ;parcheggio.c: 293: INTCONbits.TMR0IE = 1;
  8299  004BEE  8AF2               	bsf	intcon,5,c	;volatile
  8300                           
  8301                           ;parcheggio.c: 294: INTCON2bits.INTEDG0 = 1;
  8302  004BF0  8CF1               	bsf	intcon2,6,c	;volatile
  8303                           
  8304                           ;parcheggio.c: 295: INTCONbits.INT0IF = 0;
  8305  004BF2  92F2               	bcf	intcon,1,c	;volatile
  8306                           
  8307                           ;parcheggio.c: 296: INTCONbits.INT0IE = 0;
  8308  004BF4  98F2               	bcf	intcon,4,c	;volatile
  8309                           
  8310                           ;parcheggio.c: 297: INTCONbits.GIEL = 1;
  8311  004BF6  8CF2               	bsf	intcon,6,c	;volatile
  8312                           
  8313                           ;parcheggio.c: 298: INTCONbits.GIEH = 1;
  8314  004BF8  8EF2               	bsf	intcon,7,c	;volatile
  8315  004BFA  0012               	return		;funcret
  8316  004BFC                     __end_of_configurazione:
  8317                           	opt stack 0
  8318                           tblptru	equ	0xFF8
  8319                           tblptrh	equ	0xFF7
  8320                           tblptrl	equ	0xFF6
  8321                           tablat	equ	0xFF5
  8322                           prodh	equ	0xFF4
  8323                           prodl	equ	0xFF3
  8324                           intcon	equ	0xFF2
  8325                           intcon2	equ	0xFF1
  8326                           postinc0	equ	0xFEE
  8327                           wreg	equ	0xFE8
  8328                           indf2	equ	0xFDF
  8329                           postinc2	equ	0xFDE
  8330                           postdec2	equ	0xFDD
  8331                           fsr2h	equ	0xFDA
  8332                           fsr2l	equ	0xFD9
  8333                           status	equ	0xFD8
  8334                           
  8335 ;; *************** function _CANInitialize *****************
  8336 ;; Defined at:
  8337 ;;		line 218 in file "../../Scuola/Triennio/sistemi/4^/PIC/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  8338 ;; Parameters:    Size  Location     Type
  8339 ;;  propSeg         1    wreg     unsigned char 
  8340 ;;  phaseSeg1       1   37[BANK0 ] unsigned char 
  8341 ;;  phaseSeg2       1   38[BANK0 ] unsigned char 
  8342 ;;  SJW             1   39[BANK0 ] unsigned char 
  8343 ;;  BRP             1   40[BANK0 ] unsigned char 
  8344 ;;  flags           1   41[BANK0 ] enum E16313
  8345 ;; Auto vars:     Size  Location     Type
  8346 ;;  propSeg         1   46[BANK0 ] unsigned char 
  8347 ;;  FilterConfig    1   48[BANK0 ] unsigned char 
  8348 ;;  FilterConfig    1   47[BANK0 ] unsigned char 
  8349 ;; Return value:  Size  Location     Type
  8350 ;;		None               void
  8351 ;; Registers used:
  8352 ;;		wreg, status,2, status,0, cstack
  8353 ;; Tracked objects:
  8354 ;;		On entry : 0/0
  8355 ;;		On exit  : 0/0
  8356 ;;		Unchanged: 0/0
  8357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8358 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8359 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8360 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8361 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8362 ;;Total ram usage:       12 bytes
  8363 ;; Hardware stack levels used:    1
  8364 ;; Hardware stack levels required when called:    5
  8365 ;; This function calls:
  8366 ;;		_CANOperationMode
  8367 ;;		_CANSetFilter
  8368 ;;		_CANSetMask
  8369 ;; This function is called by:
  8370 ;;		_configurazione
  8371 ;; This function uses a non-reentrant model
  8372 ;;
  8373                           
  8374                           	psect	text21
  8375  00429C                     __ptext21:
  8376                           	opt stack 0
  8377  00429C                     _CANInitialize:
  8378                           	opt stack 24
  8379                           
  8380                           ;incstack = 0
  8381                           ;CANInitialize@propSeg stored from wreg
  8382  00429C  0100               	movlb	0	; () banked
  8383  00429E  6F8E               	movwf	CANInitialize@propSeg& (0+255),b
  8384                           
  8385                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  8386                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  8387                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  8388  0042A0  0E80               	movlw	128
  8389  0042A2  ECEF  F026         	call	_CANOperationMode
  8390                           
  8391                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  8392  0042A6  0E00               	movlw	0
  8393  0042A8  6E70               	movwf	3952,c	;volatile
  8394                           
  8395                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  8396  0042AA  0E00               	movlw	0
  8397  0042AC  6E71               	movwf	3953,c	;volatile
  8398                           
  8399                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  8400  0042AE  0E00               	movlw	0
  8401  0042B0  6E72               	movwf	3954,c	;volatile
  8402                           
  8403                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  8404  0042B2  0100               	movlb	0	; () banked
  8405  0042B4  4187               	rrncf	CANInitialize@SJW& (0+255),w,b
  8406  0042B6  42E8               	rrncf	wreg,f,c
  8407  0042B8  0BC0               	andlw	192
  8408  0042BA  0100               	movlb	0	; () banked
  8409  0042BC  6F87               	movwf	CANInitialize@SJW& (0+255),b
  8410                           
  8411                           ; BSR set to: 0
  8412                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  8413  0042BE  0100               	movlb	0	; () banked
  8414  0042C0  5187               	movf	CANInitialize@SJW& (0+255),w,b
  8415  0042C2  1270               	iorwf	3952,f,c	;volatile
  8416                           
  8417                           ; BSR set to: 0
  8418                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  8419  0042C4  0100               	movlb	0	; () banked
  8420  0042C6  5188               	movf	CANInitialize@BRP& (0+255),w,b
  8421  0042C8  1270               	iorwf	3952,f,c	;volatile
  8422                           
  8423                           ; BSR set to: 0
  8424                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  8425  0042CA  0100               	movlb	0	; () banked
  8426  0042CC  518E               	movf	CANInitialize@propSeg& (0+255),w,b
  8427  0042CE  1271               	iorwf	3953,f,c	;volatile
  8428                           
  8429                           ; BSR set to: 0
  8430                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  8431  0042D0  0100               	movlb	0	; () banked
  8432  0042D2  3985               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  8433  0042D4  42E8               	rrncf	wreg,f,c
  8434  0042D6  0BF8               	andlw	248
  8435  0042D8  0100               	movlb	0	; () banked
  8436  0042DA  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
  8437                           
  8438                           ; BSR set to: 0
  8439                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  8440  0042DC  0100               	movlb	0	; () banked
  8441  0042DE  5185               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  8442  0042E0  1271               	iorwf	3953,f,c	;volatile
  8443                           
  8444                           ; BSR set to: 0
  8445                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  8446  0042E2  0100               	movlb	0	; () banked
  8447  0042E4  A589               	btfss	CANInitialize@flags& (0+255),2,b
  8448                           
  8449                           ; BSR set to: 0
  8450                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  8451  0042E6  8C71               	bsf	3953,6,c	;volatile
  8452                           
  8453                           ; BSR set to: 0
  8454                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  8455  0042E8  0100               	movlb	0	; () banked
  8456  0042EA  B189               	btfsc	CANInitialize@flags& (0+255),0,b
  8457                           
  8458                           ; BSR set to: 0
  8459                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  8460  0042EC  8E71               	bsf	3953,7,c	;volatile
  8461                           
  8462                           ; BSR set to: 0
  8463                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  8464                           
  8465                           ; BSR set to: 0
  8466  0042EE  0100               	movlb	0	; () banked
  8467  0042F0  5186               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  8468  0042F2  1272               	iorwf	3954,f,c	;volatile
  8469                           
  8470                           ; BSR set to: 0
  8471                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  8472  0042F4  0100               	movlb	0	; () banked
  8473  0042F6  B389               	btfsc	CANInitialize@flags& (0+255),1,b
  8474                           
  8475                           ; BSR set to: 0
  8476                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  8477  0042F8  8C72               	bsf	3954,6,c	;volatile
  8478                           
  8479                           ; BSR set to: 0
  8480                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  8481                           
  8482                           ; BSR set to: 0
  8483  0042FA  0100               	movlb	0	; () banked
  8484  0042FC  5189               	movf	CANInitialize@flags& (0+255),w,b
  8485  0042FE  0B60               	andlw	96
  8486  004300  6E60               	movwf	3936,c	;volatile
  8487                           
  8488                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  8489  004302  0100               	movlb	0	; () banked
  8490  004304  5189               	movf	CANInitialize@flags& (0+255),w,b
  8491  004306  0B10               	andlw	16
  8492  004308  0AFF               	xorlw	255
  8493  00430A  B4D8               	btfsc	status,2,c
  8494                           
  8495                           ; BSR set to: 0
  8496                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  8497  00430C  8460               	bsf	3936,2,c	;volatile
  8498                           
  8499                           ; BSR set to: 0
  8500                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  8501  00430E  CF60 FF50          	movff	3936,3920	;volatile
  8502                           
  8503                           ; BSR set to: 0
  8504                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  8505  004312  0E00               	movlw	0
  8506  004314  0100               	movlb	0	; () banked
  8507  004316  6F77               	movwf	CANSetMask@mask& (0+255),b
  8508  004318  0E00               	movlw	0
  8509  00431A  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
  8510  00431C  0E00               	movlw	0
  8511  00431E  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
  8512  004320  0E00               	movlw	0
  8513  004322  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
  8514  004324  0EF7               	movlw	247
  8515  004326  0100               	movlb	0	; () banked
  8516  004328  6F7B               	movwf	CANSetMask@type& (0+255),b
  8517  00432A  0E01               	movlw	1
  8518  00432C  ECD2  F01A         	call	_CANSetMask
  8519                           
  8520                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  8521  004330  0E00               	movlw	0
  8522  004332  0100               	movlb	0	; () banked
  8523  004334  6F77               	movwf	CANSetMask@mask& (0+255),b
  8524  004336  0E00               	movlw	0
  8525  004338  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
  8526  00433A  0E00               	movlw	0
  8527  00433C  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
  8528  00433E  0E00               	movlw	0
  8529  004340  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
  8530  004342  0EF7               	movlw	247
  8531  004344  0100               	movlb	0	; () banked
  8532  004346  6F7B               	movwf	CANSetMask@type& (0+255),b
  8533  004348  0E02               	movlw	2
  8534  00434A  ECD2  F01A         	call	_CANSetMask
  8535                           
  8536                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  8537  00434E  D00F               	goto	l4753
  8538  004350                     l4747:
  8539                           
  8540                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  8541  004350  0EF7               	movlw	247
  8542  004352  0100               	movlb	0	; () banked
  8543  004354  6F8F               	movwf	CANInitialize@FilterConfig1& (0+255),b
  8544  004356  D007               	goto	l4749
  8545  004358                     l352:
  8546                           
  8547                           ; BSR set to: 0
  8548                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  8549  004358  0100               	movlb	0	; () banked
  8550  00435A  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
  8551                           
  8552                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  8553  00435C  0100               	movlb	0	; () banked
  8554  00435E  6990               	setf	CANInitialize@FilterConfig2& (0+255),b
  8555                           
  8556                           ;inc\CANlib.h: 273: break;
  8557  004360  D028               	goto	l4755
  8558  004362                     l353:
  8559                           
  8560                           ; BSR set to: 0
  8561                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  8562  004362  0100               	movlb	0	; () banked
  8563  004364  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
  8564  004366                     l4749:
  8565                           
  8566                           ; BSR set to: 0
  8567                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  8568  004366  0EF7               	movlw	247
  8569  004368  0100               	movlb	0	; () banked
  8570  00436A  6F90               	movwf	CANInitialize@FilterConfig2& (0+255),b
  8571                           
  8572                           ; BSR set to: 0
  8573                           ;inc\CANlib.h: 278: }
  8574                           
  8575                           ;inc\CANlib.h: 277: break;
  8576  00436C  D022               	goto	l4755
  8577  00436E                     l4753:
  8578  00436E  0E9F               	movlw	159
  8579  004370  0100               	movlb	0	; () banked
  8580  004372  6F8A               	movwf	??_CANInitialize& (0+255),b
  8581  004374  0EFF               	movlw	255
  8582  004376  0100               	movlb	0	; () banked
  8583  004378  6F8B               	movwf	(??_CANInitialize+1)& (0+255),b
  8584  00437A  0100               	movlb	0	; () banked
  8585  00437C  5189               	movf	CANInitialize@flags& (0+255),w,b
  8586  00437E  0B60               	andlw	96
  8587  004380  0100               	movlb	0	; () banked
  8588  004382  6F8C               	movwf	(??_CANInitialize+2)& (0+255),b
  8589  004384  6B8D               	clrf	(??_CANInitialize+3)& (0+255),b
  8590  004386  0100               	movlb	0	; () banked
  8591  004388  518A               	movf	??_CANInitialize& (0+255),w,b
  8592  00438A  0100               	movlb	0	; () banked
  8593  00438C  138C               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  8594  00438E  0100               	movlb	0	; () banked
  8595  004390  518B               	movf	(??_CANInitialize+1)& (0+255),w,b
  8596  004392  0100               	movlb	0	; () banked
  8597  004394  138D               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  8598                           
  8599                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8600                           ; Switch size 1, requested type "space"
  8601                           ; Number of cases is 1, Range of values is 0 to 0
  8602                           ; switch strategies available:
  8603                           ; Name         Instructions Cycles
  8604                           ; simple_byte            4     3 (average)
  8605                           ;	Chosen strategy is simple_byte
  8606  004396  0100               	movlb	0	; () banked
  8607  004398  518D               	movf	(??_CANInitialize+3)& (0+255),w,b
  8608  00439A  0A00               	xorlw	0	; case 0
  8609  00439C  A4D8               	btfss	status,2,c
  8610  00439E  D7E1               	goto	l353
  8611                           
  8612                           ; BSR set to: 0
  8613                           ; Switch size 1, requested type "space"
  8614                           ; Number of cases is 2, Range of values is 191 to 223
  8615                           ; switch strategies available:
  8616                           ; Name         Instructions Cycles
  8617                           ; simple_byte            7     4 (average)
  8618                           ;	Chosen strategy is simple_byte
  8619  0043A0  0100               	movlb	0	; () banked
  8620  0043A2  518C               	movf	(??_CANInitialize+2)& (0+255),w,b
  8621  0043A4  0ABF               	xorlw	191	; case 191
  8622  0043A6  B4D8               	btfsc	status,2,c
  8623  0043A8  D7D7               	goto	l352
  8624  0043AA  0A60               	xorlw	96	; case 223
  8625  0043AC  B4D8               	btfsc	status,2,c
  8626  0043AE  D7D0               	goto	l4747
  8627  0043B0  D7D8               	goto	l353
  8628  0043B2                     l4755:
  8629                           
  8630                           ; BSR set to: 0
  8631                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  8632  0043B2  0E00               	movlw	0
  8633  0043B4  0100               	movlb	0	; () banked
  8634  0043B6  6F77               	movwf	CANSetFilter@filter& (0+255),b
  8635  0043B8  0E00               	movlw	0
  8636  0043BA  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
  8637  0043BC  0E00               	movlw	0
  8638  0043BE  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
  8639  0043C0  0E00               	movlw	0
  8640  0043C2  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
  8641  0043C4  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  8642  0043C8  0E00               	movlw	0
  8643  0043CA  EC97  F006         	call	_CANSetFilter
  8644                           
  8645                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  8646  0043CE  0E00               	movlw	0
  8647  0043D0  0100               	movlb	0	; () banked
  8648  0043D2  6F77               	movwf	CANSetFilter@filter& (0+255),b
  8649  0043D4  0E00               	movlw	0
  8650  0043D6  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
  8651  0043D8  0E00               	movlw	0
  8652  0043DA  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
  8653  0043DC  0E00               	movlw	0
  8654  0043DE  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
  8655  0043E0  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  8656  0043E4  0E01               	movlw	1
  8657  0043E6  EC97  F006         	call	_CANSetFilter
  8658                           
  8659                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  8660  0043EA  0E00               	movlw	0
  8661  0043EC  0100               	movlb	0	; () banked
  8662  0043EE  6F77               	movwf	CANSetFilter@filter& (0+255),b
  8663  0043F0  0E00               	movlw	0
  8664  0043F2  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
  8665  0043F4  0E00               	movlw	0
  8666  0043F6  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
  8667  0043F8  0E00               	movlw	0
  8668  0043FA  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
  8669  0043FC  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  8670  004400  0E02               	movlw	2
  8671  004402  EC97  F006         	call	_CANSetFilter
  8672                           
  8673                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  8674  004406  0E00               	movlw	0
  8675  004408  0100               	movlb	0	; () banked
  8676  00440A  6F77               	movwf	CANSetFilter@filter& (0+255),b
  8677  00440C  0E00               	movlw	0
  8678  00440E  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
  8679  004410  0E00               	movlw	0
  8680  004412  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
  8681  004414  0E00               	movlw	0
  8682  004416  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
  8683  004418  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  8684  00441C  0E03               	movlw	3
  8685  00441E  EC97  F006         	call	_CANSetFilter
  8686                           
  8687                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  8688  004422  0E00               	movlw	0
  8689  004424  0100               	movlb	0	; () banked
  8690  004426  6F77               	movwf	CANSetFilter@filter& (0+255),b
  8691  004428  0E00               	movlw	0
  8692  00442A  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
  8693  00442C  0E00               	movlw	0
  8694  00442E  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
  8695  004430  0E00               	movlw	0
  8696  004432  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
  8697  004434  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  8698  004438  0E04               	movlw	4
  8699  00443A  EC97  F006         	call	_CANSetFilter
  8700                           
  8701                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  8702  00443E  0E00               	movlw	0
  8703  004440  0100               	movlb	0	; () banked
  8704  004442  6F77               	movwf	CANSetFilter@filter& (0+255),b
  8705  004444  0E00               	movlw	0
  8706  004446  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
  8707  004448  0E00               	movlw	0
  8708  00444A  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
  8709  00444C  0E00               	movlw	0
  8710  00444E  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
  8711  004450  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  8712  004454  0E05               	movlw	5
  8713  004456  EC97  F006         	call	_CANSetFilter
  8714                           
  8715                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  8716  00445A  0E00               	movlw	0
  8717  00445C  ECEF  F026         	call	_CANOperationMode
  8718  004460  0012               	return		;funcret
  8719  004462                     __end_of_CANInitialize:
  8720                           	opt stack 0
  8721                           tblptru	equ	0xFF8
  8722                           tblptrh	equ	0xFF7
  8723                           tblptrl	equ	0xFF6
  8724                           tablat	equ	0xFF5
  8725                           prodh	equ	0xFF4
  8726                           prodl	equ	0xFF3
  8727                           intcon	equ	0xFF2
  8728                           intcon2	equ	0xFF1
  8729                           postinc0	equ	0xFEE
  8730                           wreg	equ	0xFE8
  8731                           indf2	equ	0xFDF
  8732                           postinc2	equ	0xFDE
  8733                           postdec2	equ	0xFDD
  8734                           fsr2h	equ	0xFDA
  8735                           fsr2l	equ	0xFD9
  8736                           status	equ	0xFD8
  8737                           
  8738 ;; *************** function _CANSetMask *****************
  8739 ;; Defined at:
  8740 ;;		line 640 in file "../../Scuola/Triennio/sistemi/4^/PIC/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  8741 ;; Parameters:    Size  Location     Type
  8742 ;;  numBuffer       1    wreg     enum E16347
  8743 ;;  mask            4   23[BANK0 ] unsigned long 
  8744 ;;  type            1   27[BANK0 ] enum E16313
  8745 ;; Auto vars:     Size  Location     Type
  8746 ;;  numBuffer       1   32[BANK0 ] enum E16347
  8747 ;;  tamp            4   33[BANK0 ] unsigned long 
  8748 ;; Return value:  Size  Location     Type
  8749 ;;		None               void
  8750 ;; Registers used:
  8751 ;;		wreg, status,2, status,0
  8752 ;; Tracked objects:
  8753 ;;		On entry : 0/0
  8754 ;;		On exit  : 0/0
  8755 ;;		Unchanged: 0/0
  8756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8757 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8758 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8759 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8760 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8761 ;;Total ram usage:       14 bytes
  8762 ;; Hardware stack levels used:    1
  8763 ;; Hardware stack levels required when called:    4
  8764 ;; This function calls:
  8765 ;;		Nothing
  8766 ;; This function is called by:
  8767 ;;		_CANInitialize
  8768 ;; This function uses a non-reentrant model
  8769 ;;
  8770                           
  8771                           	psect	text22
  8772  0035A4                     __ptext22:
  8773                           	opt stack 0
  8774  0035A4                     _CANSetMask:
  8775                           	opt stack 24
  8776                           
  8777                           ;incstack = 0
  8778                           ;CANSetMask@numBuffer stored from wreg
  8779  0035A4  0100               	movlb	0	; () banked
  8780  0035A6  6F80               	movwf	CANSetMask@numBuffer& (0+255),b
  8781                           
  8782                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  8783  0035A8  0100               	movlb	0	; () banked
  8784  0035AA  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
  8785  0035AC  A4D8               	btfss	status,2,c
  8786  0035AE  D056               	goto	l3947
  8787                           
  8788                           ; BSR set to: 0
  8789  0035B0  0100               	movlb	0	; () banked
  8790  0035B2  297B               	incf	CANSetMask@type& (0+255),w,b
  8791  0035B4  A4D8               	btfss	status,2,c
  8792  0035B6  D052               	goto	l3947
  8793                           
  8794                           ; BSR set to: 0
  8795                           ;inc\CANlib.h: 644: {
  8796                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  8797  0035B8  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
  8798  0035BC  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
  8799  0035C0  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
  8800  0035C4  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
  8801  0035C8  0E04               	movlw	4
  8802  0035CA  D006               	goto	u4280
  8803  0035CC                     u4285:
  8804  0035CC  0100               	movlb	0	; () banked
  8805  0035CE  90D8               	bcf	status,0,c
  8806  0035D0  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  8807  0035D2  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  8808  0035D4  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  8809  0035D6  337C               	rrcf	??_CANSetMask& (0+255),f,b
  8810  0035D8                     u4280:
  8811  0035D8  2EE8               	decfsz	wreg,f,c
  8812  0035DA  D7F8               	goto	u4285
  8813  0035DC  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
  8814  0035E0  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  8815  0035E4  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  8816  0035E8  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  8817                           
  8818                           ; BSR set to: 0
  8819                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  8820  0035EC  0100               	movlb	0	; () banked
  8821  0035EE  5181               	movf	CANSetMask@tamp& (0+255),w,b
  8822  0035F0  0100               	movlb	0	; () banked
  8823  0035F2  6F81               	movwf	CANSetMask@tamp& (0+255),b
  8824  0035F4  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
  8825  0035F6  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
  8826  0035F8  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
  8827                           
  8828                           ; BSR set to: 0
  8829                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  8830  0035FA  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
  8831                           
  8832                           ; BSR set to: 0
  8833                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  8834  0035FE  0E07               	movlw	7
  8835  003600  0100               	movlb	0	; () banked
  8836  003602  1577               	andwf	CANSetMask@mask& (0+255),w,b
  8837  003604  0100               	movlb	0	; () banked
  8838  003606  6F81               	movwf	CANSetMask@tamp& (0+255),b
  8839  003608  0E00               	movlw	0
  8840  00360A  0100               	movlb	0	; () banked
  8841  00360C  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  8842  00360E  0100               	movlb	0	; () banked
  8843  003610  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
  8844  003612  0E00               	movlw	0
  8845  003614  0100               	movlb	0	; () banked
  8846  003616  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  8847  003618  0100               	movlb	0	; () banked
  8848  00361A  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
  8849  00361C  0E00               	movlw	0
  8850  00361E  0100               	movlb	0	; () banked
  8851  003620  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  8852  003622  0100               	movlb	0	; () banked
  8853  003624  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
  8854                           
  8855                           ; BSR set to: 0
  8856                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  8857  003626  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
  8858  00362A  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  8859  00362E  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  8860  003632  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  8861  003636  0E05               	movlw	5
  8862  003638                     u4295:
  8863  003638  90D8               	bcf	status,0,c
  8864  00363A  0100               	movlb	0	; () banked
  8865  00363C  377C               	rlcf	??_CANSetMask& (0+255),f,b
  8866  00363E  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  8867  003640  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  8868  003642  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  8869  003644  2EE8               	decfsz	wreg,f,c
  8870  003646  D7F8               	goto	u4295
  8871  003648  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
  8872  00364C  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  8873  003650  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  8874  003654  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  8875                           
  8876                           ; BSR set to: 0
  8877                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  8878  003658  C081  FF19         	movff	CANSetMask@tamp,3865	;volatile
  8879  00365C                     l3947:
  8880                           
  8881                           ; BSR set to: 0
  8882                           ;inc\CANlib.h: 652: }
  8883                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  8884  00365C  0E02               	movlw	2
  8885  00365E  0100               	movlb	0	; () banked
  8886  003660  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  8887  003662  A4D8               	btfss	status,2,c
  8888  003664  D056               	goto	l3963
  8889                           
  8890                           ; BSR set to: 0
  8891  003666  0100               	movlb	0	; () banked
  8892  003668  297B               	incf	CANSetMask@type& (0+255),w,b
  8893  00366A  A4D8               	btfss	status,2,c
  8894  00366C  D052               	goto	l3963
  8895                           
  8896                           ; BSR set to: 0
  8897                           ;inc\CANlib.h: 655: {
  8898                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  8899  00366E  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
  8900  003672  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
  8901  003676  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
  8902  00367A  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
  8903  00367E  0E04               	movlw	4
  8904  003680  D006               	goto	u4320
  8905  003682                     u4325:
  8906  003682  0100               	movlb	0	; () banked
  8907  003684  90D8               	bcf	status,0,c
  8908  003686  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  8909  003688  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  8910  00368A  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  8911  00368C  337C               	rrcf	??_CANSetMask& (0+255),f,b
  8912  00368E                     u4320:
  8913  00368E  2EE8               	decfsz	wreg,f,c
  8914  003690  D7F8               	goto	u4325
  8915  003692  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
  8916  003696  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  8917  00369A  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  8918  00369E  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  8919                           
  8920                           ; BSR set to: 0
  8921                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  8922  0036A2  0100               	movlb	0	; () banked
  8923  0036A4  5181               	movf	CANSetMask@tamp& (0+255),w,b
  8924  0036A6  0100               	movlb	0	; () banked
  8925  0036A8  6F81               	movwf	CANSetMask@tamp& (0+255),b
  8926  0036AA  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
  8927  0036AC  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
  8928  0036AE  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
  8929                           
  8930                           ; BSR set to: 0
  8931                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  8932  0036B0  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  8933                           
  8934                           ; BSR set to: 0
  8935                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  8936  0036B4  0E07               	movlw	7
  8937  0036B6  0100               	movlb	0	; () banked
  8938  0036B8  1577               	andwf	CANSetMask@mask& (0+255),w,b
  8939  0036BA  0100               	movlb	0	; () banked
  8940  0036BC  6F81               	movwf	CANSetMask@tamp& (0+255),b
  8941  0036BE  0E00               	movlw	0
  8942  0036C0  0100               	movlb	0	; () banked
  8943  0036C2  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  8944  0036C4  0100               	movlb	0	; () banked
  8945  0036C6  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
  8946  0036C8  0E00               	movlw	0
  8947  0036CA  0100               	movlb	0	; () banked
  8948  0036CC  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  8949  0036CE  0100               	movlb	0	; () banked
  8950  0036D0  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
  8951  0036D2  0E00               	movlw	0
  8952  0036D4  0100               	movlb	0	; () banked
  8953  0036D6  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  8954  0036D8  0100               	movlb	0	; () banked
  8955  0036DA  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
  8956                           
  8957                           ; BSR set to: 0
  8958                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  8959  0036DC  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
  8960  0036E0  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  8961  0036E4  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  8962  0036E8  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  8963  0036EC  0E05               	movlw	5
  8964  0036EE                     u4335:
  8965  0036EE  90D8               	bcf	status,0,c
  8966  0036F0  0100               	movlb	0	; () banked
  8967  0036F2  377C               	rlcf	??_CANSetMask& (0+255),f,b
  8968  0036F4  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  8969  0036F6  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  8970  0036F8  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  8971  0036FA  2EE8               	decfsz	wreg,f,c
  8972  0036FC  D7F8               	goto	u4335
  8973  0036FE  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
  8974  003702  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  8975  003706  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  8976  00370A  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  8977                           
  8978                           ; BSR set to: 0
  8979                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  8980  00370E  C081  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  8981  003712                     l3963:
  8982                           
  8983                           ; BSR set to: 0
  8984                           ;inc\CANlib.h: 663: }
  8985                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  8986  003712  0100               	movlb	0	; () banked
  8987  003714  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
  8988  003716  A4D8               	btfss	status,2,c
  8989  003718  D087               	goto	l3995
  8990                           
  8991                           ; BSR set to: 0
  8992  00371A  0EF7               	movlw	247
  8993  00371C  0100               	movlb	0	; () banked
  8994  00371E  197B               	xorwf	CANSetMask@type& (0+255),w,b
  8995  003720  A4D8               	btfss	status,2,c
  8996  003722  D082               	goto	l3995
  8997                           
  8998                           ; BSR set to: 0
  8999                           ;inc\CANlib.h: 666: {
  9000                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  9001  003724  0100               	movlb	0	; () banked
  9002  003726  5177               	movf	CANSetMask@mask& (0+255),w,b
  9003  003728  0100               	movlb	0	; () banked
  9004  00372A  6F81               	movwf	CANSetMask@tamp& (0+255),b
  9005  00372C  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
  9006  00372E  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
  9007  003730  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
  9008                           
  9009                           ; BSR set to: 0
  9010                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  9011  003732  C081  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  9012                           
  9013                           ; BSR set to: 0
  9014                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  9015  003736  0E00               	movlw	0
  9016  003738  0100               	movlb	0	; () banked
  9017  00373A  1577               	andwf	CANSetMask@mask& (0+255),w,b
  9018  00373C  0100               	movlb	0	; () banked
  9019  00373E  6F81               	movwf	CANSetMask@tamp& (0+255),b
  9020  003740  0EFF               	movlw	255
  9021  003742  0100               	movlb	0	; () banked
  9022  003744  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  9023  003746  0100               	movlb	0	; () banked
  9024  003748  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
  9025  00374A  0E00               	movlw	0
  9026  00374C  0100               	movlb	0	; () banked
  9027  00374E  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  9028  003750  0100               	movlb	0	; () banked
  9029  003752  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
  9030  003754  0E00               	movlw	0
  9031  003756  0100               	movlb	0	; () banked
  9032  003758  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  9033  00375A  0100               	movlb	0	; () banked
  9034  00375C  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
  9035                           
  9036                           ; BSR set to: 0
  9037                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  9038  00375E  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
  9039  003762  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  9040  003766  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  9041  00376A  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  9042  00376E  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
  9043  003772  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
  9044  003776  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
  9045  00377A  0100               	movlb	0	; () banked
  9046  00377C  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
  9047  00377E  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
  9048  003782  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  9049  003786  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  9050  00378A  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  9051                           
  9052                           ; BSR set to: 0
  9053                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  9054  00378E  C081  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  9055                           
  9056                           ; BSR set to: 0
  9057                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  9058  003792  0100               	movlb	0	; () banked
  9059  003794  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  9060  003796  D003               	goto	l426
  9061                           
  9062                           ; BSR set to: 0
  9063                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  9064  003798  010F               	movlb	15	; () banked
  9065  00379A  8119               	bsf	25,0,b	;volatile
  9066  00379C  D002               	goto	l427
  9067  00379E                     l426:
  9068                           
  9069                           ; BSR set to: 0
  9070                           ;inc\CANlib.h: 676: else
  9071                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  9072  00379E  010F               	movlb	15	; () banked
  9073  0037A0  9119               	bcf	25,0,b	;volatile
  9074  0037A2                     l427:
  9075                           
  9076                           ; BSR set to: 15
  9077                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  9078  0037A2  0100               	movlb	0	; () banked
  9079  0037A4  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  9080  0037A6  D003               	goto	l428
  9081                           
  9082                           ; BSR set to: 0
  9083                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  9084  0037A8  010F               	movlb	15	; () banked
  9085  0037AA  8319               	bsf	25,1,b	;volatile
  9086  0037AC  D002               	goto	l429
  9087  0037AE                     l428:
  9088                           
  9089                           ; BSR set to: 0
  9090                           ;inc\CANlib.h: 681: else
  9091                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  9092  0037AE  010F               	movlb	15	; () banked
  9093  0037B0  9319               	bcf	25,1,b	;volatile
  9094  0037B2                     l429:
  9095                           
  9096                           ; BSR set to: 15
  9097                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  9098  0037B2  0100               	movlb	0	; () banked
  9099  0037B4  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  9100  0037B6  D003               	goto	l430
  9101                           
  9102                           ; BSR set to: 0
  9103                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  9104  0037B8  010F               	movlb	15	; () banked
  9105  0037BA  8B19               	bsf	25,5,b	;volatile
  9106  0037BC  D002               	goto	l431
  9107  0037BE                     l430:
  9108                           
  9109                           ; BSR set to: 0
  9110                           ;inc\CANlib.h: 686: else
  9111                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  9112  0037BE  010F               	movlb	15	; () banked
  9113  0037C0  9B19               	bcf	25,5,b	;volatile
  9114  0037C2                     l431:
  9115                           
  9116                           ; BSR set to: 15
  9117                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  9118  0037C2  0100               	movlb	0	; () banked
  9119  0037C4  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  9120  0037C6  D003               	goto	l432
  9121                           
  9122                           ; BSR set to: 0
  9123                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  9124  0037C8  010F               	movlb	15	; () banked
  9125  0037CA  8D19               	bsf	25,6,b	;volatile
  9126  0037CC  D002               	goto	l433
  9127  0037CE                     l432:
  9128                           
  9129                           ; BSR set to: 0
  9130                           ;inc\CANlib.h: 691: else
  9131                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  9132  0037CE  010F               	movlb	15	; () banked
  9133  0037D0  9D19               	bcf	25,6,b	;volatile
  9134  0037D2                     l433:
  9135                           
  9136                           ; BSR set to: 15
  9137                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  9138  0037D2  0100               	movlb	0	; () banked
  9139  0037D4  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  9140  0037D6  D003               	goto	l434
  9141                           
  9142                           ; BSR set to: 0
  9143                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  9144  0037D8  010F               	movlb	15	; () banked
  9145  0037DA  8F19               	bsf	25,7,b	;volatile
  9146  0037DC  D002               	goto	l3989
  9147  0037DE                     l434:
  9148                           
  9149                           ; BSR set to: 0
  9150                           ;inc\CANlib.h: 696: else
  9151                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  9152  0037DE  010F               	movlb	15	; () banked
  9153  0037E0  9F19               	bcf	25,7,b	;volatile
  9154  0037E2                     l3989:
  9155                           
  9156                           ; BSR set to: 15
  9157                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  9158  0037E2  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
  9159  0037E6  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
  9160  0037EA  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
  9161  0037EE  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
  9162  0037F2  0E16               	movlw	22
  9163  0037F4  D006               	goto	u4410
  9164  0037F6                     u4415:
  9165  0037F6  0100               	movlb	0	; () banked
  9166  0037F8  90D8               	bcf	status,0,c
  9167  0037FA  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  9168  0037FC  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  9169  0037FE  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  9170  003800  337C               	rrcf	??_CANSetMask& (0+255),f,b
  9171  003802                     u4410:
  9172  003802  2EE8               	decfsz	wreg,f,c
  9173  003804  D7F8               	goto	u4415
  9174  003806  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
  9175  00380A  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  9176  00380E  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  9177  003812  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  9178                           
  9179                           ; BSR set to: 0
  9180                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  9181  003816  0100               	movlb	0	; () banked
  9182  003818  5181               	movf	CANSetMask@tamp& (0+255),w,b
  9183  00381A  0100               	movlb	0	; () banked
  9184  00381C  6F81               	movwf	CANSetMask@tamp& (0+255),b
  9185  00381E  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
  9186  003820  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
  9187  003822  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
  9188                           
  9189                           ; BSR set to: 0
  9190                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  9191  003824  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
  9192  003828                     l3995:
  9193                           
  9194                           ; BSR set to: 0
  9195                           ;inc\CANlib.h: 702: }
  9196                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  9197  003828  0E02               	movlw	2
  9198  00382A  0100               	movlb	0	; () banked
  9199  00382C  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  9200  00382E  A4D8               	btfss	status,2,c
  9201  003830  0012               	return	
  9202                           
  9203                           ; BSR set to: 0
  9204  003832  0EF7               	movlw	247
  9205  003834  0100               	movlb	0	; () banked
  9206  003836  197B               	xorwf	CANSetMask@type& (0+255),w,b
  9207  003838  A4D8               	btfss	status,2,c
  9208  00383A  0012               	return	
  9209                           
  9210                           ; BSR set to: 0
  9211                           ;inc\CANlib.h: 705: {
  9212                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  9213  00383C  0100               	movlb	0	; () banked
  9214  00383E  5177               	movf	CANSetMask@mask& (0+255),w,b
  9215  003840  0100               	movlb	0	; () banked
  9216  003842  6F81               	movwf	CANSetMask@tamp& (0+255),b
  9217  003844  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
  9218  003846  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
  9219  003848  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
  9220                           
  9221                           ; BSR set to: 0
  9222                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  9223  00384A  C081  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  9224                           
  9225                           ; BSR set to: 0
  9226                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  9227  00384E  0E00               	movlw	0
  9228  003850  0100               	movlb	0	; () banked
  9229  003852  1577               	andwf	CANSetMask@mask& (0+255),w,b
  9230  003854  0100               	movlb	0	; () banked
  9231  003856  6F81               	movwf	CANSetMask@tamp& (0+255),b
  9232  003858  0EFF               	movlw	255
  9233  00385A  0100               	movlb	0	; () banked
  9234  00385C  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  9235  00385E  0100               	movlb	0	; () banked
  9236  003860  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
  9237  003862  0E00               	movlw	0
  9238  003864  0100               	movlb	0	; () banked
  9239  003866  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  9240  003868  0100               	movlb	0	; () banked
  9241  00386A  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
  9242  00386C  0E00               	movlw	0
  9243  00386E  0100               	movlb	0	; () banked
  9244  003870  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  9245  003872  0100               	movlb	0	; () banked
  9246  003874  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
  9247                           
  9248                           ; BSR set to: 0
  9249                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  9250  003876  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
  9251  00387A  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  9252  00387E  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  9253  003882  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  9254  003886  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
  9255  00388A  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
  9256  00388E  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
  9257  003892  0100               	movlb	0	; () banked
  9258  003894  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
  9259  003896  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
  9260  00389A  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  9261  00389E  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  9262  0038A2  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  9263                           
  9264                           ; BSR set to: 0
  9265                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  9266  0038A6  C081  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  9267                           
  9268                           ; BSR set to: 0
  9269                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  9270  0038AA  0100               	movlb	0	; () banked
  9271  0038AC  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  9272  0038AE  D003               	goto	l437
  9273                           
  9274                           ; BSR set to: 0
  9275                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  9276  0038B0  010F               	movlb	15	; () banked
  9277  0038B2  811D               	bsf	29,0,b	;volatile
  9278  0038B4  D002               	goto	l438
  9279  0038B6                     l437:
  9280                           
  9281                           ; BSR set to: 0
  9282                           ;inc\CANlib.h: 715: else
  9283                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  9284  0038B6  010F               	movlb	15	; () banked
  9285  0038B8  911D               	bcf	29,0,b	;volatile
  9286  0038BA                     l438:
  9287                           
  9288                           ; BSR set to: 15
  9289                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  9290  0038BA  0100               	movlb	0	; () banked
  9291  0038BC  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  9292  0038BE  D003               	goto	l439
  9293                           
  9294                           ; BSR set to: 0
  9295                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  9296  0038C0  010F               	movlb	15	; () banked
  9297  0038C2  831D               	bsf	29,1,b	;volatile
  9298  0038C4  D002               	goto	l440
  9299  0038C6                     l439:
  9300                           
  9301                           ; BSR set to: 0
  9302                           ;inc\CANlib.h: 720: else
  9303                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  9304  0038C6  010F               	movlb	15	; () banked
  9305  0038C8  931D               	bcf	29,1,b	;volatile
  9306  0038CA                     l440:
  9307                           
  9308                           ; BSR set to: 15
  9309                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  9310  0038CA  0100               	movlb	0	; () banked
  9311  0038CC  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  9312  0038CE  D003               	goto	l441
  9313                           
  9314                           ; BSR set to: 0
  9315                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  9316  0038D0  010F               	movlb	15	; () banked
  9317  0038D2  8B1D               	bsf	29,5,b	;volatile
  9318  0038D4  D002               	goto	l442
  9319  0038D6                     l441:
  9320                           
  9321                           ; BSR set to: 0
  9322                           ;inc\CANlib.h: 725: else
  9323                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  9324  0038D6  010F               	movlb	15	; () banked
  9325  0038D8  9B1D               	bcf	29,5,b	;volatile
  9326  0038DA                     l442:
  9327                           
  9328                           ; BSR set to: 15
  9329                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  9330  0038DA  0100               	movlb	0	; () banked
  9331  0038DC  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  9332  0038DE  D003               	goto	l443
  9333                           
  9334                           ; BSR set to: 0
  9335                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  9336  0038E0  010F               	movlb	15	; () banked
  9337  0038E2  8D1D               	bsf	29,6,b	;volatile
  9338  0038E4  D002               	goto	l444
  9339  0038E6                     l443:
  9340                           
  9341                           ; BSR set to: 0
  9342                           ;inc\CANlib.h: 730: else
  9343                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  9344  0038E6  010F               	movlb	15	; () banked
  9345  0038E8  9D1D               	bcf	29,6,b	;volatile
  9346  0038EA                     l444:
  9347                           
  9348                           ; BSR set to: 15
  9349                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  9350  0038EA  0100               	movlb	0	; () banked
  9351  0038EC  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  9352  0038EE  D003               	goto	l445
  9353                           
  9354                           ; BSR set to: 0
  9355                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  9356  0038F0  010F               	movlb	15	; () banked
  9357  0038F2  8F1D               	bsf	29,7,b	;volatile
  9358  0038F4  D002               	goto	l4021
  9359  0038F6                     l445:
  9360                           
  9361                           ; BSR set to: 0
  9362                           ;inc\CANlib.h: 735: else
  9363                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  9364  0038F6  010F               	movlb	15	; () banked
  9365  0038F8  9F1D               	bcf	29,7,b	;volatile
  9366  0038FA                     l4021:
  9367                           
  9368                           ; BSR set to: 15
  9369                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  9370  0038FA  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
  9371  0038FE  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
  9372  003902  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
  9373  003906  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
  9374  00390A  0E16               	movlw	22
  9375  00390C  D006               	goto	u4490
  9376  00390E                     u4495:
  9377  00390E  0100               	movlb	0	; () banked
  9378  003910  90D8               	bcf	status,0,c
  9379  003912  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  9380  003914  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  9381  003916  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  9382  003918  337C               	rrcf	??_CANSetMask& (0+255),f,b
  9383  00391A                     u4490:
  9384  00391A  2EE8               	decfsz	wreg,f,c
  9385  00391C  D7F8               	goto	u4495
  9386  00391E  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
  9387  003922  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  9388  003926  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  9389  00392A  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  9390                           
  9391                           ; BSR set to: 0
  9392                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  9393  00392E  0100               	movlb	0	; () banked
  9394  003930  5181               	movf	CANSetMask@tamp& (0+255),w,b
  9395  003932  0100               	movlb	0	; () banked
  9396  003934  6F81               	movwf	CANSetMask@tamp& (0+255),b
  9397  003936  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
  9398  003938  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
  9399  00393A  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
  9400                           
  9401                           ; BSR set to: 0
  9402                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  9403  00393C  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  9404  003940  0012               	return	
  9405  003942                     __end_of_CANSetMask:
  9406                           	opt stack 0
  9407                           tblptru	equ	0xFF8
  9408                           tblptrh	equ	0xFF7
  9409                           tblptrl	equ	0xFF6
  9410                           tablat	equ	0xFF5
  9411                           prodh	equ	0xFF4
  9412                           prodl	equ	0xFF3
  9413                           intcon	equ	0xFF2
  9414                           intcon2	equ	0xFF1
  9415                           postinc0	equ	0xFEE
  9416                           wreg	equ	0xFE8
  9417                           indf2	equ	0xFDF
  9418                           postinc2	equ	0xFDE
  9419                           postdec2	equ	0xFDD
  9420                           fsr2h	equ	0xFDA
  9421                           fsr2l	equ	0xFD9
  9422                           status	equ	0xFD8
  9423                           
  9424 ;; *************** function _CANSetFilter *****************
  9425 ;; Defined at:
  9426 ;;		line 748 in file "../../Scuola/Triennio/sistemi/4^/PIC/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  9427 ;; Parameters:    Size  Location     Type
  9428 ;;  numBuffer       1    wreg     enum E16350
  9429 ;;  filter          4   23[BANK0 ] unsigned long 
  9430 ;;  type            1   27[BANK0 ] enum E16313
  9431 ;; Auto vars:     Size  Location     Type
  9432 ;;  numBuffer       1   32[BANK0 ] enum E16350
  9433 ;;  tamp            4   33[BANK0 ] unsigned long 
  9434 ;; Return value:  Size  Location     Type
  9435 ;;		None               void
  9436 ;; Registers used:
  9437 ;;		wreg, status,2, status,0
  9438 ;; Tracked objects:
  9439 ;;		On entry : 0/0
  9440 ;;		On exit  : 0/0
  9441 ;;		Unchanged: 0/0
  9442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9443 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9444 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9445 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9446 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9447 ;;Total ram usage:       14 bytes
  9448 ;; Hardware stack levels used:    1
  9449 ;; Hardware stack levels required when called:    4
  9450 ;; This function calls:
  9451 ;;		Nothing
  9452 ;; This function is called by:
  9453 ;;		_CANInitialize
  9454 ;; This function uses a non-reentrant model
  9455 ;;
  9456                           
  9457                           	psect	text23
  9458  000D2E                     __ptext23:
  9459                           	opt stack 0
  9460  000D2E                     _CANSetFilter:
  9461                           	opt stack 24
  9462                           
  9463                           ; BSR set to: 0
  9464                           ;incstack = 0
  9465                           ;CANSetFilter@numBuffer stored from wreg
  9466  000D2E  0100               	movlb	0	; () banked
  9467  000D30  6F80               	movwf	CANSetFilter@numBuffer& (0+255),b
  9468                           
  9469                           ;inc\CANlib.h: 750: unsigned long tamp;
  9470                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  9471  000D32  0100               	movlb	0	; () banked
  9472  000D34  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
  9473  000D36  0100               	movlb	0	; () banked
  9474  000D38  A4D8               	btfss	status,2,c
  9475  000D3A  D058               	goto	l4045
  9476                           
  9477                           ; BSR set to: 0
  9478  000D3C  0100               	movlb	0	; () banked
  9479  000D3E  297B               	incf	CANSetFilter@type& (0+255),w,b
  9480  000D40  A4D8               	btfss	status,2,c
  9481  000D42  D054               	goto	l4045
  9482                           
  9483                           ; BSR set to: 0
  9484                           ;inc\CANlib.h: 753: {
  9485                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  9486  000D44  010F               	movlb	15	; () banked
  9487  000D46  9701               	bcf	1,3,b	;volatile
  9488                           
  9489                           ; BSR set to: 15
  9490                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  9491  000D48  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
  9492  000D4C  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9493  000D50  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9494  000D54  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9495  000D58  0E04               	movlw	4
  9496  000D5A  D006               	goto	u4520
  9497  000D5C                     u4525:
  9498  000D5C  0100               	movlb	0	; () banked
  9499  000D5E  90D8               	bcf	status,0,c
  9500  000D60  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9501  000D62  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9502  000D64  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9503  000D66  337C               	rrcf	??_CANSetFilter& (0+255),f,b
  9504  000D68                     u4520:
  9505  000D68  2EE8               	decfsz	wreg,f,c
  9506  000D6A  D7F8               	goto	u4525
  9507  000D6C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
  9508  000D70  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9509  000D74  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9510  000D78  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9511                           
  9512                           ; BSR set to: 0
  9513                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  9514  000D7C  0100               	movlb	0	; () banked
  9515  000D7E  5181               	movf	CANSetFilter@tamp& (0+255),w,b
  9516  000D80  0100               	movlb	0	; () banked
  9517  000D82  6F81               	movwf	CANSetFilter@tamp& (0+255),b
  9518  000D84  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9519  000D86  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9520  000D88  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9521                           
  9522                           ; BSR set to: 0
  9523                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  9524  000D8A  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  9525                           
  9526                           ; BSR set to: 0
  9527                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  9528  000D8E  0E07               	movlw	7
  9529  000D90  0100               	movlb	0	; () banked
  9530  000D92  1577               	andwf	CANSetFilter@filter& (0+255),w,b
  9531  000D94  0100               	movlb	0	; () banked
  9532  000D96  6F81               	movwf	CANSetFilter@tamp& (0+255),b
  9533  000D98  0E00               	movlw	0
  9534  000D9A  0100               	movlb	0	; () banked
  9535  000D9C  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9536  000D9E  0100               	movlb	0	; () banked
  9537  000DA0  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9538  000DA2  0E00               	movlw	0
  9539  000DA4  0100               	movlb	0	; () banked
  9540  000DA6  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9541  000DA8  0100               	movlb	0	; () banked
  9542  000DAA  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9543  000DAC  0E00               	movlw	0
  9544  000DAE  0100               	movlb	0	; () banked
  9545  000DB0  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9546  000DB2  0100               	movlb	0	; () banked
  9547  000DB4  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9548                           
  9549                           ; BSR set to: 0
  9550                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  9551  000DB6  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
  9552  000DBA  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9553  000DBE  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9554  000DC2  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9555  000DC6  0E05               	movlw	5
  9556  000DC8                     u4535:
  9557  000DC8  90D8               	bcf	status,0,c
  9558  000DCA  0100               	movlb	0	; () banked
  9559  000DCC  377C               	rlcf	??_CANSetFilter& (0+255),f,b
  9560  000DCE  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  9561  000DD0  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  9562  000DD2  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  9563  000DD4  2EE8               	decfsz	wreg,f,c
  9564  000DD6  D7F8               	goto	u4535
  9565  000DD8  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
  9566  000DDC  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9567  000DE0  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9568  000DE4  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9569                           
  9570                           ; BSR set to: 0
  9571                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  9572  000DE8  C081  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  9573  000DEC                     l4045:
  9574                           
  9575                           ; BSR set to: 0
  9576                           ;inc\CANlib.h: 763: }
  9577                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  9578  000DEC  0100               	movlb	0	; () banked
  9579  000DEE  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
  9580  000DF0  A4D8               	btfss	status,2,c
  9581  000DF2  D058               	goto	l4063
  9582                           
  9583                           ; BSR set to: 0
  9584  000DF4  0100               	movlb	0	; () banked
  9585  000DF6  297B               	incf	CANSetFilter@type& (0+255),w,b
  9586  000DF8  A4D8               	btfss	status,2,c
  9587  000DFA  D054               	goto	l4063
  9588                           
  9589                           ; BSR set to: 0
  9590                           ;inc\CANlib.h: 766: {
  9591                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  9592  000DFC  010F               	movlb	15	; () banked
  9593  000DFE  9705               	bcf	5,3,b	;volatile
  9594                           
  9595                           ; BSR set to: 15
  9596                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  9597  000E00  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
  9598  000E04  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9599  000E08  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9600  000E0C  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9601  000E10  0E04               	movlw	4
  9602  000E12  D006               	goto	u4560
  9603  000E14                     u4565:
  9604  000E14  0100               	movlb	0	; () banked
  9605  000E16  90D8               	bcf	status,0,c
  9606  000E18  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9607  000E1A  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9608  000E1C  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9609  000E1E  337C               	rrcf	??_CANSetFilter& (0+255),f,b
  9610  000E20                     u4560:
  9611  000E20  2EE8               	decfsz	wreg,f,c
  9612  000E22  D7F8               	goto	u4565
  9613  000E24  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
  9614  000E28  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9615  000E2C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9616  000E30  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9617                           
  9618                           ; BSR set to: 0
  9619                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  9620  000E34  0100               	movlb	0	; () banked
  9621  000E36  5181               	movf	CANSetFilter@tamp& (0+255),w,b
  9622  000E38  0100               	movlb	0	; () banked
  9623  000E3A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
  9624  000E3C  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9625  000E3E  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9626  000E40  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9627                           
  9628                           ; BSR set to: 0
  9629                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  9630  000E42  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  9631                           
  9632                           ; BSR set to: 0
  9633                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  9634  000E46  0E07               	movlw	7
  9635  000E48  0100               	movlb	0	; () banked
  9636  000E4A  1577               	andwf	CANSetFilter@filter& (0+255),w,b
  9637  000E4C  0100               	movlb	0	; () banked
  9638  000E4E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
  9639  000E50  0E00               	movlw	0
  9640  000E52  0100               	movlb	0	; () banked
  9641  000E54  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9642  000E56  0100               	movlb	0	; () banked
  9643  000E58  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9644  000E5A  0E00               	movlw	0
  9645  000E5C  0100               	movlb	0	; () banked
  9646  000E5E  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9647  000E60  0100               	movlb	0	; () banked
  9648  000E62  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9649  000E64  0E00               	movlw	0
  9650  000E66  0100               	movlb	0	; () banked
  9651  000E68  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9652  000E6A  0100               	movlb	0	; () banked
  9653  000E6C  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9654                           
  9655                           ; BSR set to: 0
  9656                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  9657  000E6E  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
  9658  000E72  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9659  000E76  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9660  000E7A  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9661  000E7E  0E05               	movlw	5
  9662  000E80                     u4575:
  9663  000E80  90D8               	bcf	status,0,c
  9664  000E82  0100               	movlb	0	; () banked
  9665  000E84  377C               	rlcf	??_CANSetFilter& (0+255),f,b
  9666  000E86  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  9667  000E88  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  9668  000E8A  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  9669  000E8C  2EE8               	decfsz	wreg,f,c
  9670  000E8E  D7F8               	goto	u4575
  9671  000E90  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
  9672  000E94  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9673  000E98  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9674  000E9C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9675                           
  9676                           ; BSR set to: 0
  9677                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  9678  000EA0  C081  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  9679  000EA4                     l4063:
  9680                           
  9681                           ; BSR set to: 0
  9682                           ;inc\CANlib.h: 776: }
  9683                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  9684  000EA4  0E02               	movlw	2
  9685  000EA6  0100               	movlb	0	; () banked
  9686  000EA8  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  9687  000EAA  A4D8               	btfss	status,2,c
  9688  000EAC  D058               	goto	l4081
  9689                           
  9690                           ; BSR set to: 0
  9691  000EAE  0100               	movlb	0	; () banked
  9692  000EB0  297B               	incf	CANSetFilter@type& (0+255),w,b
  9693  000EB2  A4D8               	btfss	status,2,c
  9694  000EB4  D054               	goto	l4081
  9695                           
  9696                           ; BSR set to: 0
  9697                           ;inc\CANlib.h: 779: {
  9698                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  9699  000EB6  010F               	movlb	15	; () banked
  9700  000EB8  9709               	bcf	9,3,b	;volatile
  9701                           
  9702                           ; BSR set to: 15
  9703                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  9704  000EBA  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
  9705  000EBE  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9706  000EC2  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9707  000EC6  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9708  000ECA  0E04               	movlw	4
  9709  000ECC  D006               	goto	u4600
  9710  000ECE                     u4605:
  9711  000ECE  0100               	movlb	0	; () banked
  9712  000ED0  90D8               	bcf	status,0,c
  9713  000ED2  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9714  000ED4  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9715  000ED6  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9716  000ED8  337C               	rrcf	??_CANSetFilter& (0+255),f,b
  9717  000EDA                     u4600:
  9718  000EDA  2EE8               	decfsz	wreg,f,c
  9719  000EDC  D7F8               	goto	u4605
  9720  000EDE  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
  9721  000EE2  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9722  000EE6  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9723  000EEA  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9724                           
  9725                           ; BSR set to: 0
  9726                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  9727  000EEE  0100               	movlb	0	; () banked
  9728  000EF0  5181               	movf	CANSetFilter@tamp& (0+255),w,b
  9729  000EF2  0100               	movlb	0	; () banked
  9730  000EF4  6F81               	movwf	CANSetFilter@tamp& (0+255),b
  9731  000EF6  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9732  000EF8  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9733  000EFA  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9734                           
  9735                           ; BSR set to: 0
  9736                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  9737  000EFC  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  9738                           
  9739                           ; BSR set to: 0
  9740                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  9741  000F00  0E07               	movlw	7
  9742  000F02  0100               	movlb	0	; () banked
  9743  000F04  1577               	andwf	CANSetFilter@filter& (0+255),w,b
  9744  000F06  0100               	movlb	0	; () banked
  9745  000F08  6F81               	movwf	CANSetFilter@tamp& (0+255),b
  9746  000F0A  0E00               	movlw	0
  9747  000F0C  0100               	movlb	0	; () banked
  9748  000F0E  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9749  000F10  0100               	movlb	0	; () banked
  9750  000F12  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9751  000F14  0E00               	movlw	0
  9752  000F16  0100               	movlb	0	; () banked
  9753  000F18  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9754  000F1A  0100               	movlb	0	; () banked
  9755  000F1C  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9756  000F1E  0E00               	movlw	0
  9757  000F20  0100               	movlb	0	; () banked
  9758  000F22  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9759  000F24  0100               	movlb	0	; () banked
  9760  000F26  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9761                           
  9762                           ; BSR set to: 0
  9763                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  9764  000F28  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
  9765  000F2C  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9766  000F30  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9767  000F34  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9768  000F38  0E05               	movlw	5
  9769  000F3A                     u4615:
  9770  000F3A  90D8               	bcf	status,0,c
  9771  000F3C  0100               	movlb	0	; () banked
  9772  000F3E  377C               	rlcf	??_CANSetFilter& (0+255),f,b
  9773  000F40  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  9774  000F42  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  9775  000F44  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  9776  000F46  2EE8               	decfsz	wreg,f,c
  9777  000F48  D7F8               	goto	u4615
  9778  000F4A  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
  9779  000F4E  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9780  000F52  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9781  000F56  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9782                           
  9783                           ; BSR set to: 0
  9784                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  9785  000F5A  C081  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  9786  000F5E                     l4081:
  9787                           
  9788                           ; BSR set to: 0
  9789                           ;inc\CANlib.h: 789: }
  9790                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  9791  000F5E  0E03               	movlw	3
  9792  000F60  0100               	movlb	0	; () banked
  9793  000F62  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  9794  000F64  A4D8               	btfss	status,2,c
  9795  000F66  D058               	goto	l4099
  9796                           
  9797                           ; BSR set to: 0
  9798  000F68  0100               	movlb	0	; () banked
  9799  000F6A  297B               	incf	CANSetFilter@type& (0+255),w,b
  9800  000F6C  A4D8               	btfss	status,2,c
  9801  000F6E  D054               	goto	l4099
  9802                           
  9803                           ; BSR set to: 0
  9804                           ;inc\CANlib.h: 792: {
  9805                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  9806  000F70  010F               	movlb	15	; () banked
  9807  000F72  970D               	bcf	13,3,b	;volatile
  9808                           
  9809                           ; BSR set to: 15
  9810                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  9811  000F74  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
  9812  000F78  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9813  000F7C  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9814  000F80  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9815  000F84  0E04               	movlw	4
  9816  000F86  D006               	goto	u4640
  9817  000F88                     u4645:
  9818  000F88  0100               	movlb	0	; () banked
  9819  000F8A  90D8               	bcf	status,0,c
  9820  000F8C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9821  000F8E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9822  000F90  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9823  000F92  337C               	rrcf	??_CANSetFilter& (0+255),f,b
  9824  000F94                     u4640:
  9825  000F94  2EE8               	decfsz	wreg,f,c
  9826  000F96  D7F8               	goto	u4645
  9827  000F98  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
  9828  000F9C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9829  000FA0  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9830  000FA4  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9831                           
  9832                           ; BSR set to: 0
  9833                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  9834  000FA8  0100               	movlb	0	; () banked
  9835  000FAA  5181               	movf	CANSetFilter@tamp& (0+255),w,b
  9836  000FAC  0100               	movlb	0	; () banked
  9837  000FAE  6F81               	movwf	CANSetFilter@tamp& (0+255),b
  9838  000FB0  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9839  000FB2  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9840  000FB4  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9841                           
  9842                           ; BSR set to: 0
  9843                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  9844  000FB6  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  9845                           
  9846                           ; BSR set to: 0
  9847                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  9848  000FBA  0E07               	movlw	7
  9849  000FBC  0100               	movlb	0	; () banked
  9850  000FBE  1577               	andwf	CANSetFilter@filter& (0+255),w,b
  9851  000FC0  0100               	movlb	0	; () banked
  9852  000FC2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
  9853  000FC4  0E00               	movlw	0
  9854  000FC6  0100               	movlb	0	; () banked
  9855  000FC8  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9856  000FCA  0100               	movlb	0	; () banked
  9857  000FCC  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9858  000FCE  0E00               	movlw	0
  9859  000FD0  0100               	movlb	0	; () banked
  9860  000FD2  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9861  000FD4  0100               	movlb	0	; () banked
  9862  000FD6  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9863  000FD8  0E00               	movlw	0
  9864  000FDA  0100               	movlb	0	; () banked
  9865  000FDC  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9866  000FDE  0100               	movlb	0	; () banked
  9867  000FE0  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9868                           
  9869                           ; BSR set to: 0
  9870                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  9871  000FE2  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
  9872  000FE6  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9873  000FEA  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9874  000FEE  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9875  000FF2  0E05               	movlw	5
  9876  000FF4                     u4655:
  9877  000FF4  90D8               	bcf	status,0,c
  9878  000FF6  0100               	movlb	0	; () banked
  9879  000FF8  377C               	rlcf	??_CANSetFilter& (0+255),f,b
  9880  000FFA  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  9881  000FFC  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  9882  000FFE  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  9883  001000  2EE8               	decfsz	wreg,f,c
  9884  001002  D7F8               	goto	u4655
  9885  001004  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
  9886  001008  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9887  00100C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9888  001010  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9889                           
  9890                           ; BSR set to: 0
  9891                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  9892  001014  C081  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  9893  001018                     l4099:
  9894                           
  9895                           ; BSR set to: 0
  9896                           ;inc\CANlib.h: 802: }
  9897                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  9898  001018  0E04               	movlw	4
  9899  00101A  0100               	movlb	0	; () banked
  9900  00101C  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  9901  00101E  A4D8               	btfss	status,2,c
  9902  001020  D058               	goto	l4117
  9903                           
  9904                           ; BSR set to: 0
  9905  001022  0100               	movlb	0	; () banked
  9906  001024  297B               	incf	CANSetFilter@type& (0+255),w,b
  9907  001026  A4D8               	btfss	status,2,c
  9908  001028  D054               	goto	l4117
  9909                           
  9910                           ; BSR set to: 0
  9911                           ;inc\CANlib.h: 805: {
  9912                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  9913  00102A  010F               	movlb	15	; () banked
  9914  00102C  9711               	bcf	17,3,b	;volatile
  9915                           
  9916                           ; BSR set to: 15
  9917                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  9918  00102E  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
  9919  001032  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9920  001036  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9921  00103A  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9922  00103E  0E04               	movlw	4
  9923  001040  D006               	goto	u4680
  9924  001042                     u4685:
  9925  001042  0100               	movlb	0	; () banked
  9926  001044  90D8               	bcf	status,0,c
  9927  001046  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9928  001048  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9929  00104A  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9930  00104C  337C               	rrcf	??_CANSetFilter& (0+255),f,b
  9931  00104E                     u4680:
  9932  00104E  2EE8               	decfsz	wreg,f,c
  9933  001050  D7F8               	goto	u4685
  9934  001052  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
  9935  001056  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9936  00105A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9937  00105E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9938                           
  9939                           ; BSR set to: 0
  9940                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  9941  001062  0100               	movlb	0	; () banked
  9942  001064  5181               	movf	CANSetFilter@tamp& (0+255),w,b
  9943  001066  0100               	movlb	0	; () banked
  9944  001068  6F81               	movwf	CANSetFilter@tamp& (0+255),b
  9945  00106A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9946  00106C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9947  00106E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9948                           
  9949                           ; BSR set to: 0
  9950                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  9951  001070  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  9952                           
  9953                           ; BSR set to: 0
  9954                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  9955  001074  0E07               	movlw	7
  9956  001076  0100               	movlb	0	; () banked
  9957  001078  1577               	andwf	CANSetFilter@filter& (0+255),w,b
  9958  00107A  0100               	movlb	0	; () banked
  9959  00107C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
  9960  00107E  0E00               	movlw	0
  9961  001080  0100               	movlb	0	; () banked
  9962  001082  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9963  001084  0100               	movlb	0	; () banked
  9964  001086  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9965  001088  0E00               	movlw	0
  9966  00108A  0100               	movlb	0	; () banked
  9967  00108C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9968  00108E  0100               	movlb	0	; () banked
  9969  001090  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9970  001092  0E00               	movlw	0
  9971  001094  0100               	movlb	0	; () banked
  9972  001096  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9973  001098  0100               	movlb	0	; () banked
  9974  00109A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9975                           
  9976                           ; BSR set to: 0
  9977                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  9978  00109C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
  9979  0010A0  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9980  0010A4  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9981  0010A8  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9982  0010AC  0E05               	movlw	5
  9983  0010AE                     u4695:
  9984  0010AE  90D8               	bcf	status,0,c
  9985  0010B0  0100               	movlb	0	; () banked
  9986  0010B2  377C               	rlcf	??_CANSetFilter& (0+255),f,b
  9987  0010B4  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  9988  0010B6  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  9989  0010B8  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  9990  0010BA  2EE8               	decfsz	wreg,f,c
  9991  0010BC  D7F8               	goto	u4695
  9992  0010BE  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
  9993  0010C2  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9994  0010C6  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9995  0010CA  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9996                           
  9997                           ; BSR set to: 0
  9998                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  9999  0010CE  C081  FF11         	movff	CANSetFilter@tamp,3857	;volatile
 10000  0010D2                     l4117:
 10001                           
 10002                           ; BSR set to: 0
 10003                           ;inc\CANlib.h: 815: }
 10004                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
 10005  0010D2  0E05               	movlw	5
 10006  0010D4  0100               	movlb	0	; () banked
 10007  0010D6  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 10008  0010D8  A4D8               	btfss	status,2,c
 10009  0010DA  D058               	goto	l4135
 10010                           
 10011                           ; BSR set to: 0
 10012  0010DC  0100               	movlb	0	; () banked
 10013  0010DE  297B               	incf	CANSetFilter@type& (0+255),w,b
 10014  0010E0  A4D8               	btfss	status,2,c
 10015  0010E2  D054               	goto	l4135
 10016                           
 10017                           ; BSR set to: 0
 10018                           ;inc\CANlib.h: 818: {
 10019                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
 10020  0010E4  010F               	movlb	15	; () banked
 10021  0010E6  9715               	bcf	21,3,b	;volatile
 10022                           
 10023                           ; BSR set to: 15
 10024                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
 10025  0010E8  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 10026  0010EC  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10027  0010F0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10028  0010F4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10029  0010F8  0E04               	movlw	4
 10030  0010FA  D006               	goto	u4720
 10031  0010FC                     u4725:
 10032  0010FC  0100               	movlb	0	; () banked
 10033  0010FE  90D8               	bcf	status,0,c
 10034  001100  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10035  001102  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10036  001104  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10037  001106  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 10038  001108                     u4720:
 10039  001108  2EE8               	decfsz	wreg,f,c
 10040  00110A  D7F8               	goto	u4725
 10041  00110C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10042  001110  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10043  001114  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10044  001118  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10045                           
 10046                           ; BSR set to: 0
 10047                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
 10048  00111C  0100               	movlb	0	; () banked
 10049  00111E  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 10050  001120  0100               	movlb	0	; () banked
 10051  001122  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10052  001124  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10053  001126  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10054  001128  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10055                           
 10056                           ; BSR set to: 0
 10057                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
 10058  00112A  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 10059                           
 10060                           ; BSR set to: 0
 10061                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
 10062  00112E  0E07               	movlw	7
 10063  001130  0100               	movlb	0	; () banked
 10064  001132  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 10065  001134  0100               	movlb	0	; () banked
 10066  001136  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10067  001138  0E00               	movlw	0
 10068  00113A  0100               	movlb	0	; () banked
 10069  00113C  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 10070  00113E  0100               	movlb	0	; () banked
 10071  001140  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10072  001142  0E00               	movlw	0
 10073  001144  0100               	movlb	0	; () banked
 10074  001146  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 10075  001148  0100               	movlb	0	; () banked
 10076  00114A  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10077  00114C  0E00               	movlw	0
 10078  00114E  0100               	movlb	0	; () banked
 10079  001150  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 10080  001152  0100               	movlb	0	; () banked
 10081  001154  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10082                           
 10083                           ; BSR set to: 0
 10084                           ;inc\CANlib.h: 826: tamp = tamp << 5;
 10085  001156  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 10086  00115A  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10087  00115E  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10088  001162  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10089  001166  0E05               	movlw	5
 10090  001168                     u4735:
 10091  001168  90D8               	bcf	status,0,c
 10092  00116A  0100               	movlb	0	; () banked
 10093  00116C  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 10094  00116E  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 10095  001170  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 10096  001172  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 10097  001174  2EE8               	decfsz	wreg,f,c
 10098  001176  D7F8               	goto	u4735
 10099  001178  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10100  00117C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10101  001180  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10102  001184  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10103                           
 10104                           ; BSR set to: 0
 10105                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
 10106  001188  C081  FF15         	movff	CANSetFilter@tamp,3861	;volatile
 10107  00118C                     l4135:
 10108                           
 10109                           ; BSR set to: 0
 10110                           ;inc\CANlib.h: 828: }
 10111                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
 10112  00118C  0100               	movlb	0	; () banked
 10113  00118E  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 10114  001190  0100               	movlb	0	; () banked
 10115  001192  A4D8               	btfss	status,2,c
 10116  001194  D089               	goto	l4169
 10117                           
 10118                           ; BSR set to: 0
 10119  001196  0EF7               	movlw	247
 10120  001198  0100               	movlb	0	; () banked
 10121  00119A  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 10122  00119C  A4D8               	btfss	status,2,c
 10123  00119E  D084               	goto	l4169
 10124                           
 10125                           ; BSR set to: 0
 10126                           ;inc\CANlib.h: 832: {
 10127                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
 10128  0011A0  010F               	movlb	15	; () banked
 10129  0011A2  8701               	bsf	1,3,b	;volatile
 10130                           
 10131                           ; BSR set to: 15
 10132                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
 10133  0011A4  0100               	movlb	0	; () banked
 10134  0011A6  5177               	movf	CANSetFilter@filter& (0+255),w,b
 10135  0011A8  0100               	movlb	0	; () banked
 10136  0011AA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10137  0011AC  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10138  0011AE  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10139  0011B0  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10140                           
 10141                           ; BSR set to: 0
 10142                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
 10143  0011B2  C081  FF03         	movff	CANSetFilter@tamp,3843	;volatile
 10144                           
 10145                           ; BSR set to: 0
 10146                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
 10147  0011B6  0E00               	movlw	0
 10148  0011B8  0100               	movlb	0	; () banked
 10149  0011BA  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 10150  0011BC  0100               	movlb	0	; () banked
 10151  0011BE  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10152  0011C0  0EFF               	movlw	255
 10153  0011C2  0100               	movlb	0	; () banked
 10154  0011C4  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 10155  0011C6  0100               	movlb	0	; () banked
 10156  0011C8  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10157  0011CA  0E00               	movlw	0
 10158  0011CC  0100               	movlb	0	; () banked
 10159  0011CE  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 10160  0011D0  0100               	movlb	0	; () banked
 10161  0011D2  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10162  0011D4  0E00               	movlw	0
 10163  0011D6  0100               	movlb	0	; () banked
 10164  0011D8  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 10165  0011DA  0100               	movlb	0	; () banked
 10166  0011DC  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10167                           
 10168                           ; BSR set to: 0
 10169                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
 10170  0011DE  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 10171  0011E2  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10172  0011E6  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10173  0011EA  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10174  0011EE  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 10175  0011F2  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 10176  0011F6  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 10177  0011FA  0100               	movlb	0	; () banked
 10178  0011FC  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 10179  0011FE  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10180  001202  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10181  001206  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10182  00120A  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10183                           
 10184                           ; BSR set to: 0
 10185                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
 10186  00120E  C081  FF02         	movff	CANSetFilter@tamp,3842	;volatile
 10187                           
 10188                           ; BSR set to: 0
 10189                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
 10190  001212  0100               	movlb	0	; () banked
 10191  001214  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 10192  001216  D003               	goto	l457
 10193                           
 10194                           ; BSR set to: 0
 10195                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
 10196  001218  010F               	movlb	15	; () banked
 10197  00121A  8101               	bsf	1,0,b	;volatile
 10198  00121C  D002               	goto	l458
 10199  00121E                     l457:
 10200                           
 10201                           ; BSR set to: 0
 10202                           ;inc\CANlib.h: 844: else
 10203                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
 10204  00121E  010F               	movlb	15	; () banked
 10205  001220  9101               	bcf	1,0,b	;volatile
 10206  001222                     l458:
 10207                           
 10208                           ; BSR set to: 15
 10209                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
 10210  001222  0100               	movlb	0	; () banked
 10211  001224  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 10212  001226  D003               	goto	l459
 10213                           
 10214                           ; BSR set to: 0
 10215                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
 10216  001228  010F               	movlb	15	; () banked
 10217  00122A  8301               	bsf	1,1,b	;volatile
 10218  00122C  D002               	goto	l460
 10219  00122E                     l459:
 10220                           
 10221                           ; BSR set to: 0
 10222                           ;inc\CANlib.h: 849: else
 10223                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
 10224  00122E  010F               	movlb	15	; () banked
 10225  001230  9301               	bcf	1,1,b	;volatile
 10226  001232                     l460:
 10227                           
 10228                           ; BSR set to: 15
 10229                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
 10230  001232  0100               	movlb	0	; () banked
 10231  001234  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 10232  001236  D003               	goto	l461
 10233                           
 10234                           ; BSR set to: 0
 10235                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
 10236  001238  010F               	movlb	15	; () banked
 10237  00123A  8B01               	bsf	1,5,b	;volatile
 10238  00123C  D002               	goto	l462
 10239  00123E                     l461:
 10240                           
 10241                           ; BSR set to: 0
 10242                           ;inc\CANlib.h: 854: else
 10243                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
 10244  00123E  010F               	movlb	15	; () banked
 10245  001240  9B01               	bcf	1,5,b	;volatile
 10246  001242                     l462:
 10247                           
 10248                           ; BSR set to: 15
 10249                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
 10250  001242  0100               	movlb	0	; () banked
 10251  001244  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 10252  001246  D003               	goto	l463
 10253                           
 10254                           ; BSR set to: 0
 10255                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
 10256  001248  010F               	movlb	15	; () banked
 10257  00124A  8D01               	bsf	1,6,b	;volatile
 10258  00124C  D002               	goto	l464
 10259  00124E                     l463:
 10260                           
 10261                           ; BSR set to: 0
 10262                           ;inc\CANlib.h: 859: else
 10263                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
 10264  00124E  010F               	movlb	15	; () banked
 10265  001250  9D01               	bcf	1,6,b	;volatile
 10266  001252                     l464:
 10267                           
 10268                           ; BSR set to: 15
 10269                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
 10270  001252  0100               	movlb	0	; () banked
 10271  001254  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 10272  001256  D003               	goto	l465
 10273                           
 10274                           ; BSR set to: 0
 10275                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
 10276  001258  010F               	movlb	15	; () banked
 10277  00125A  8F01               	bsf	1,7,b	;volatile
 10278  00125C  D002               	goto	l4163
 10279  00125E                     l465:
 10280                           
 10281                           ; BSR set to: 0
 10282                           ;inc\CANlib.h: 864: else
 10283                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
 10284  00125E  010F               	movlb	15	; () banked
 10285  001260  9F01               	bcf	1,7,b	;volatile
 10286  001262                     l4163:
 10287                           
 10288                           ; BSR set to: 15
 10289                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
 10290  001262  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 10291  001266  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10292  00126A  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10293  00126E  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10294  001272  0E16               	movlw	22
 10295  001274  D006               	goto	u4810
 10296  001276                     u4815:
 10297  001276  0100               	movlb	0	; () banked
 10298  001278  90D8               	bcf	status,0,c
 10299  00127A  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10300  00127C  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10301  00127E  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10302  001280  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 10303  001282                     u4810:
 10304  001282  2EE8               	decfsz	wreg,f,c
 10305  001284  D7F8               	goto	u4815
 10306  001286  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10307  00128A  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10308  00128E  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10309  001292  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10310                           
 10311                           ; BSR set to: 0
 10312                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
 10313  001296  0100               	movlb	0	; () banked
 10314  001298  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 10315  00129A  0100               	movlb	0	; () banked
 10316  00129C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10317  00129E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10318  0012A0  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10319  0012A2  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10320                           
 10321                           ; BSR set to: 0
 10322                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
 10323  0012A4  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 10324  0012A8                     l4169:
 10325                           
 10326                           ; BSR set to: 0
 10327                           ;inc\CANlib.h: 870: }
 10328                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
 10329  0012A8  0100               	movlb	0	; () banked
 10330  0012AA  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 10331  0012AC  A4D8               	btfss	status,2,c
 10332  0012AE  D089               	goto	l4203
 10333                           
 10334                           ; BSR set to: 0
 10335  0012B0  0EF7               	movlw	247
 10336  0012B2  0100               	movlb	0	; () banked
 10337  0012B4  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 10338  0012B6  A4D8               	btfss	status,2,c
 10339  0012B8  D084               	goto	l4203
 10340                           
 10341                           ; BSR set to: 0
 10342                           ;inc\CANlib.h: 873: {
 10343                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
 10344  0012BA  010F               	movlb	15	; () banked
 10345  0012BC  8705               	bsf	5,3,b	;volatile
 10346                           
 10347                           ; BSR set to: 15
 10348                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
 10349  0012BE  0100               	movlb	0	; () banked
 10350  0012C0  5177               	movf	CANSetFilter@filter& (0+255),w,b
 10351  0012C2  0100               	movlb	0	; () banked
 10352  0012C4  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10353  0012C6  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10354  0012C8  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10355  0012CA  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10356                           
 10357                           ; BSR set to: 0
 10358                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
 10359  0012CC  C081  FF07         	movff	CANSetFilter@tamp,3847	;volatile
 10360                           
 10361                           ; BSR set to: 0
 10362                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
 10363  0012D0  0E00               	movlw	0
 10364  0012D2  0100               	movlb	0	; () banked
 10365  0012D4  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 10366  0012D6  0100               	movlb	0	; () banked
 10367  0012D8  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10368  0012DA  0EFF               	movlw	255
 10369  0012DC  0100               	movlb	0	; () banked
 10370  0012DE  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 10371  0012E0  0100               	movlb	0	; () banked
 10372  0012E2  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10373  0012E4  0E00               	movlw	0
 10374  0012E6  0100               	movlb	0	; () banked
 10375  0012E8  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 10376  0012EA  0100               	movlb	0	; () banked
 10377  0012EC  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10378  0012EE  0E00               	movlw	0
 10379  0012F0  0100               	movlb	0	; () banked
 10380  0012F2  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 10381  0012F4  0100               	movlb	0	; () banked
 10382  0012F6  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10383                           
 10384                           ; BSR set to: 0
 10385                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
 10386  0012F8  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 10387  0012FC  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10388  001300  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10389  001304  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10390  001308  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 10391  00130C  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 10392  001310  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 10393  001314  0100               	movlb	0	; () banked
 10394  001316  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 10395  001318  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10396  00131C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10397  001320  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10398  001324  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10399                           
 10400                           ; BSR set to: 0
 10401                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
 10402  001328  C081  FF06         	movff	CANSetFilter@tamp,3846	;volatile
 10403                           
 10404                           ; BSR set to: 0
 10405                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
 10406  00132C  0100               	movlb	0	; () banked
 10407  00132E  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 10408  001330  D003               	goto	l468
 10409                           
 10410                           ; BSR set to: 0
 10411                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
 10412  001332  010F               	movlb	15	; () banked
 10413  001334  8105               	bsf	5,0,b	;volatile
 10414  001336  D002               	goto	l469
 10415  001338                     l468:
 10416                           
 10417                           ; BSR set to: 0
 10418                           ;inc\CANlib.h: 885: else
 10419                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
 10420  001338  010F               	movlb	15	; () banked
 10421  00133A  9105               	bcf	5,0,b	;volatile
 10422  00133C                     l469:
 10423                           
 10424                           ; BSR set to: 15
 10425                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
 10426  00133C  0100               	movlb	0	; () banked
 10427  00133E  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 10428  001340  D003               	goto	l470
 10429                           
 10430                           ; BSR set to: 0
 10431                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
 10432  001342  010F               	movlb	15	; () banked
 10433  001344  8305               	bsf	5,1,b	;volatile
 10434  001346  D002               	goto	l471
 10435  001348                     l470:
 10436                           
 10437                           ; BSR set to: 0
 10438                           ;inc\CANlib.h: 890: else
 10439                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
 10440  001348  010F               	movlb	15	; () banked
 10441  00134A  9305               	bcf	5,1,b	;volatile
 10442  00134C                     l471:
 10443                           
 10444                           ; BSR set to: 15
 10445                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
 10446  00134C  0100               	movlb	0	; () banked
 10447  00134E  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 10448  001350  D003               	goto	l472
 10449                           
 10450                           ; BSR set to: 0
 10451                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
 10452  001352  010F               	movlb	15	; () banked
 10453  001354  8B05               	bsf	5,5,b	;volatile
 10454  001356  D002               	goto	l473
 10455  001358                     l472:
 10456                           
 10457                           ; BSR set to: 0
 10458                           ;inc\CANlib.h: 895: else
 10459                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
 10460  001358  010F               	movlb	15	; () banked
 10461  00135A  9B05               	bcf	5,5,b	;volatile
 10462  00135C                     l473:
 10463                           
 10464                           ; BSR set to: 15
 10465                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
 10466  00135C  0100               	movlb	0	; () banked
 10467  00135E  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 10468  001360  D003               	goto	l474
 10469                           
 10470                           ; BSR set to: 0
 10471                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
 10472  001362  010F               	movlb	15	; () banked
 10473  001364  8D05               	bsf	5,6,b	;volatile
 10474  001366  D002               	goto	l475
 10475  001368                     l474:
 10476                           
 10477                           ; BSR set to: 0
 10478                           ;inc\CANlib.h: 900: else
 10479                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
 10480  001368  010F               	movlb	15	; () banked
 10481  00136A  9D05               	bcf	5,6,b	;volatile
 10482  00136C                     l475:
 10483                           
 10484                           ; BSR set to: 15
 10485                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
 10486  00136C  0100               	movlb	0	; () banked
 10487  00136E  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 10488  001370  D003               	goto	l476
 10489                           
 10490                           ; BSR set to: 0
 10491                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
 10492  001372  010F               	movlb	15	; () banked
 10493  001374  8F05               	bsf	5,7,b	;volatile
 10494  001376  D002               	goto	l4197
 10495  001378                     l476:
 10496                           
 10497                           ; BSR set to: 0
 10498                           ;inc\CANlib.h: 905: else
 10499                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
 10500  001378  010F               	movlb	15	; () banked
 10501  00137A  9F05               	bcf	5,7,b	;volatile
 10502  00137C                     l4197:
 10503                           
 10504                           ; BSR set to: 15
 10505                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
 10506  00137C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 10507  001380  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10508  001384  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10509  001388  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10510  00138C  0E16               	movlw	22
 10511  00138E  D006               	goto	u4890
 10512  001390                     u4895:
 10513  001390  0100               	movlb	0	; () banked
 10514  001392  90D8               	bcf	status,0,c
 10515  001394  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10516  001396  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10517  001398  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10518  00139A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 10519  00139C                     u4890:
 10520  00139C  2EE8               	decfsz	wreg,f,c
 10521  00139E  D7F8               	goto	u4895
 10522  0013A0  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10523  0013A4  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10524  0013A8  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10525  0013AC  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10526                           
 10527                           ; BSR set to: 0
 10528                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
 10529  0013B0  0100               	movlb	0	; () banked
 10530  0013B2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 10531  0013B4  0100               	movlb	0	; () banked
 10532  0013B6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10533  0013B8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10534  0013BA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10535  0013BC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10536                           
 10537                           ; BSR set to: 0
 10538                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
 10539  0013BE  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 10540  0013C2                     l4203:
 10541                           
 10542                           ; BSR set to: 0
 10543                           ;inc\CANlib.h: 911: }
 10544                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
 10545  0013C2  0E02               	movlw	2
 10546  0013C4  0100               	movlb	0	; () banked
 10547  0013C6  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 10548  0013C8  A4D8               	btfss	status,2,c
 10549  0013CA  D089               	goto	l4237
 10550                           
 10551                           ; BSR set to: 0
 10552  0013CC  0EF7               	movlw	247
 10553  0013CE  0100               	movlb	0	; () banked
 10554  0013D0  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 10555  0013D2  A4D8               	btfss	status,2,c
 10556  0013D4  D084               	goto	l4237
 10557                           
 10558                           ; BSR set to: 0
 10559                           ;inc\CANlib.h: 915: {
 10560                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
 10561  0013D6  010F               	movlb	15	; () banked
 10562  0013D8  8709               	bsf	9,3,b	;volatile
 10563                           
 10564                           ; BSR set to: 15
 10565                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
 10566  0013DA  0100               	movlb	0	; () banked
 10567  0013DC  5177               	movf	CANSetFilter@filter& (0+255),w,b
 10568  0013DE  0100               	movlb	0	; () banked
 10569  0013E0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10570  0013E2  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10571  0013E4  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10572  0013E6  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10573                           
 10574                           ; BSR set to: 0
 10575                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
 10576  0013E8  C081  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
 10577                           
 10578                           ; BSR set to: 0
 10579                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
 10580  0013EC  0E00               	movlw	0
 10581  0013EE  0100               	movlb	0	; () banked
 10582  0013F0  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 10583  0013F2  0100               	movlb	0	; () banked
 10584  0013F4  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10585  0013F6  0EFF               	movlw	255
 10586  0013F8  0100               	movlb	0	; () banked
 10587  0013FA  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 10588  0013FC  0100               	movlb	0	; () banked
 10589  0013FE  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10590  001400  0E00               	movlw	0
 10591  001402  0100               	movlb	0	; () banked
 10592  001404  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 10593  001406  0100               	movlb	0	; () banked
 10594  001408  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10595  00140A  0E00               	movlw	0
 10596  00140C  0100               	movlb	0	; () banked
 10597  00140E  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 10598  001410  0100               	movlb	0	; () banked
 10599  001412  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10600                           
 10601                           ; BSR set to: 0
 10602                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
 10603  001414  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 10604  001418  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10605  00141C  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10606  001420  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10607  001424  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 10608  001428  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 10609  00142C  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 10610  001430  0100               	movlb	0	; () banked
 10611  001432  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 10612  001434  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10613  001438  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10614  00143C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10615  001440  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10616                           
 10617                           ; BSR set to: 0
 10618                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
 10619  001444  C081  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
 10620                           
 10621                           ; BSR set to: 0
 10622                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
 10623  001448  0100               	movlb	0	; () banked
 10624  00144A  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 10625  00144C  D003               	goto	l479
 10626                           
 10627                           ; BSR set to: 0
 10628                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
 10629  00144E  010F               	movlb	15	; () banked
 10630  001450  8109               	bsf	9,0,b	;volatile
 10631  001452  D002               	goto	l480
 10632  001454                     l479:
 10633                           
 10634                           ; BSR set to: 0
 10635                           ;inc\CANlib.h: 927: else
 10636                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
 10637  001454  010F               	movlb	15	; () banked
 10638  001456  9109               	bcf	9,0,b	;volatile
 10639  001458                     l480:
 10640                           
 10641                           ; BSR set to: 15
 10642                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
 10643  001458  0100               	movlb	0	; () banked
 10644  00145A  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 10645  00145C  D003               	goto	l481
 10646                           
 10647                           ; BSR set to: 0
 10648                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
 10649  00145E  010F               	movlb	15	; () banked
 10650  001460  8309               	bsf	9,1,b	;volatile
 10651  001462  D002               	goto	l482
 10652  001464                     l481:
 10653                           
 10654                           ; BSR set to: 0
 10655                           ;inc\CANlib.h: 932: else
 10656                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
 10657  001464  010F               	movlb	15	; () banked
 10658  001466  9309               	bcf	9,1,b	;volatile
 10659  001468                     l482:
 10660                           
 10661                           ; BSR set to: 15
 10662                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
 10663  001468  0100               	movlb	0	; () banked
 10664  00146A  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 10665  00146C  D003               	goto	l483
 10666                           
 10667                           ; BSR set to: 0
 10668                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
 10669  00146E  010F               	movlb	15	; () banked
 10670  001470  8B09               	bsf	9,5,b	;volatile
 10671  001472  D002               	goto	l484
 10672  001474                     l483:
 10673                           
 10674                           ; BSR set to: 0
 10675                           ;inc\CANlib.h: 937: else
 10676                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
 10677  001474  010F               	movlb	15	; () banked
 10678  001476  9B09               	bcf	9,5,b	;volatile
 10679  001478                     l484:
 10680                           
 10681                           ; BSR set to: 15
 10682                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
 10683  001478  0100               	movlb	0	; () banked
 10684  00147A  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 10685  00147C  D003               	goto	l485
 10686                           
 10687                           ; BSR set to: 0
 10688                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
 10689  00147E  010F               	movlb	15	; () banked
 10690  001480  8D09               	bsf	9,6,b	;volatile
 10691  001482  D002               	goto	l486
 10692  001484                     l485:
 10693                           
 10694                           ; BSR set to: 0
 10695                           ;inc\CANlib.h: 942: else
 10696                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
 10697  001484  010F               	movlb	15	; () banked
 10698  001486  9D09               	bcf	9,6,b	;volatile
 10699  001488                     l486:
 10700                           
 10701                           ; BSR set to: 15
 10702                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
 10703  001488  0100               	movlb	0	; () banked
 10704  00148A  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 10705  00148C  D003               	goto	l487
 10706                           
 10707                           ; BSR set to: 0
 10708                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
 10709  00148E  010F               	movlb	15	; () banked
 10710  001490  8F09               	bsf	9,7,b	;volatile
 10711  001492  D002               	goto	l4231
 10712  001494                     l487:
 10713                           
 10714                           ; BSR set to: 0
 10715                           ;inc\CANlib.h: 947: else
 10716                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
 10717  001494  010F               	movlb	15	; () banked
 10718  001496  9F09               	bcf	9,7,b	;volatile
 10719  001498                     l4231:
 10720                           
 10721                           ; BSR set to: 15
 10722                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
 10723  001498  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 10724  00149C  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10725  0014A0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10726  0014A4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10727  0014A8  0E16               	movlw	22
 10728  0014AA  D006               	goto	u4970
 10729  0014AC                     u4975:
 10730  0014AC  0100               	movlb	0	; () banked
 10731  0014AE  90D8               	bcf	status,0,c
 10732  0014B0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10733  0014B2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10734  0014B4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10735  0014B6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 10736  0014B8                     u4970:
 10737  0014B8  2EE8               	decfsz	wreg,f,c
 10738  0014BA  D7F8               	goto	u4975
 10739  0014BC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10740  0014C0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10741  0014C4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10742  0014C8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10743                           
 10744                           ; BSR set to: 0
 10745                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
 10746  0014CC  0100               	movlb	0	; () banked
 10747  0014CE  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 10748  0014D0  0100               	movlb	0	; () banked
 10749  0014D2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10750  0014D4  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10751  0014D6  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10752  0014D8  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10753                           
 10754                           ; BSR set to: 0
 10755                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
 10756  0014DA  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 10757  0014DE                     l4237:
 10758                           
 10759                           ; BSR set to: 0
 10760                           ;inc\CANlib.h: 953: }
 10761                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
 10762  0014DE  0E03               	movlw	3
 10763  0014E0  0100               	movlb	0	; () banked
 10764  0014E2  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 10765  0014E4  A4D8               	btfss	status,2,c
 10766  0014E6  D089               	goto	l4271
 10767                           
 10768                           ; BSR set to: 0
 10769  0014E8  0EF7               	movlw	247
 10770  0014EA  0100               	movlb	0	; () banked
 10771  0014EC  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 10772  0014EE  A4D8               	btfss	status,2,c
 10773  0014F0  D084               	goto	l4271
 10774                           
 10775                           ; BSR set to: 0
 10776                           ;inc\CANlib.h: 956: {
 10777                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
 10778  0014F2  010F               	movlb	15	; () banked
 10779  0014F4  870D               	bsf	13,3,b	;volatile
 10780                           
 10781                           ; BSR set to: 15
 10782                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
 10783  0014F6  0100               	movlb	0	; () banked
 10784  0014F8  5177               	movf	CANSetFilter@filter& (0+255),w,b
 10785  0014FA  0100               	movlb	0	; () banked
 10786  0014FC  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10787  0014FE  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10788  001500  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10789  001502  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10790                           
 10791                           ; BSR set to: 0
 10792                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
 10793  001504  C081  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
 10794                           
 10795                           ; BSR set to: 0
 10796                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
 10797  001508  0E00               	movlw	0
 10798  00150A  0100               	movlb	0	; () banked
 10799  00150C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 10800  00150E  0100               	movlb	0	; () banked
 10801  001510  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10802  001512  0EFF               	movlw	255
 10803  001514  0100               	movlb	0	; () banked
 10804  001516  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 10805  001518  0100               	movlb	0	; () banked
 10806  00151A  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10807  00151C  0E00               	movlw	0
 10808  00151E  0100               	movlb	0	; () banked
 10809  001520  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 10810  001522  0100               	movlb	0	; () banked
 10811  001524  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10812  001526  0E00               	movlw	0
 10813  001528  0100               	movlb	0	; () banked
 10814  00152A  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 10815  00152C  0100               	movlb	0	; () banked
 10816  00152E  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10817                           
 10818                           ; BSR set to: 0
 10819                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
 10820  001530  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 10821  001534  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10822  001538  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10823  00153C  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10824  001540  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 10825  001544  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 10826  001548  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 10827  00154C  0100               	movlb	0	; () banked
 10828  00154E  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 10829  001550  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10830  001554  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10831  001558  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10832  00155C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10833                           
 10834                           ; BSR set to: 0
 10835                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
 10836  001560  C081  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
 10837                           
 10838                           ; BSR set to: 0
 10839                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
 10840  001564  0100               	movlb	0	; () banked
 10841  001566  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 10842  001568  D003               	goto	l490
 10843                           
 10844                           ; BSR set to: 0
 10845                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
 10846  00156A  010F               	movlb	15	; () banked
 10847  00156C  810D               	bsf	13,0,b	;volatile
 10848  00156E  D002               	goto	l491
 10849  001570                     l490:
 10850                           
 10851                           ; BSR set to: 0
 10852                           ;inc\CANlib.h: 968: else
 10853                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
 10854  001570  010F               	movlb	15	; () banked
 10855  001572  910D               	bcf	13,0,b	;volatile
 10856  001574                     l491:
 10857                           
 10858                           ; BSR set to: 15
 10859                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
 10860  001574  0100               	movlb	0	; () banked
 10861  001576  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 10862  001578  D003               	goto	l492
 10863                           
 10864                           ; BSR set to: 0
 10865                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
 10866  00157A  010F               	movlb	15	; () banked
 10867  00157C  830D               	bsf	13,1,b	;volatile
 10868  00157E  D002               	goto	l493
 10869  001580                     l492:
 10870                           
 10871                           ; BSR set to: 0
 10872                           ;inc\CANlib.h: 973: else
 10873                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
 10874  001580  010F               	movlb	15	; () banked
 10875  001582  930D               	bcf	13,1,b	;volatile
 10876  001584                     l493:
 10877                           
 10878                           ; BSR set to: 15
 10879                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
 10880  001584  0100               	movlb	0	; () banked
 10881  001586  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 10882  001588  D003               	goto	l494
 10883                           
 10884                           ; BSR set to: 0
 10885                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
 10886  00158A  010F               	movlb	15	; () banked
 10887  00158C  8B0D               	bsf	13,5,b	;volatile
 10888  00158E  D002               	goto	l495
 10889  001590                     l494:
 10890                           
 10891                           ; BSR set to: 0
 10892                           ;inc\CANlib.h: 978: else
 10893                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
 10894  001590  010F               	movlb	15	; () banked
 10895  001592  9B0D               	bcf	13,5,b	;volatile
 10896  001594                     l495:
 10897                           
 10898                           ; BSR set to: 15
 10899                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
 10900  001594  0100               	movlb	0	; () banked
 10901  001596  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 10902  001598  D003               	goto	l496
 10903                           
 10904                           ; BSR set to: 0
 10905                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
 10906  00159A  010F               	movlb	15	; () banked
 10907  00159C  8D0D               	bsf	13,6,b	;volatile
 10908  00159E  D002               	goto	l497
 10909  0015A0                     l496:
 10910                           
 10911                           ; BSR set to: 0
 10912                           ;inc\CANlib.h: 983: else
 10913                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
 10914  0015A0  010F               	movlb	15	; () banked
 10915  0015A2  9D0D               	bcf	13,6,b	;volatile
 10916  0015A4                     l497:
 10917                           
 10918                           ; BSR set to: 15
 10919                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
 10920  0015A4  0100               	movlb	0	; () banked
 10921  0015A6  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 10922  0015A8  D003               	goto	l498
 10923                           
 10924                           ; BSR set to: 0
 10925                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
 10926  0015AA  010F               	movlb	15	; () banked
 10927  0015AC  8F0D               	bsf	13,7,b	;volatile
 10928  0015AE  D002               	goto	l4265
 10929  0015B0                     l498:
 10930                           
 10931                           ; BSR set to: 0
 10932                           ;inc\CANlib.h: 988: else
 10933                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
 10934  0015B0  010F               	movlb	15	; () banked
 10935  0015B2  9F0D               	bcf	13,7,b	;volatile
 10936  0015B4                     l4265:
 10937                           
 10938                           ; BSR set to: 15
 10939                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
 10940  0015B4  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 10941  0015B8  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10942  0015BC  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10943  0015C0  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10944  0015C4  0E16               	movlw	22
 10945  0015C6  D006               	goto	u5050
 10946  0015C8                     u5055:
 10947  0015C8  0100               	movlb	0	; () banked
 10948  0015CA  90D8               	bcf	status,0,c
 10949  0015CC  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10950  0015CE  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10951  0015D0  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10952  0015D2  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 10953  0015D4                     u5050:
 10954  0015D4  2EE8               	decfsz	wreg,f,c
 10955  0015D6  D7F8               	goto	u5055
 10956  0015D8  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10957  0015DC  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10958  0015E0  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10959  0015E4  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10960                           
 10961                           ; BSR set to: 0
 10962                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
 10963  0015E8  0100               	movlb	0	; () banked
 10964  0015EA  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 10965  0015EC  0100               	movlb	0	; () banked
 10966  0015EE  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10967  0015F0  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10968  0015F2  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10969  0015F4  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10970                           
 10971                           ; BSR set to: 0
 10972                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
 10973  0015F6  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 10974  0015FA                     l4271:
 10975                           
 10976                           ; BSR set to: 0
 10977                           ;inc\CANlib.h: 994: }
 10978                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
 10979  0015FA  0E04               	movlw	4
 10980  0015FC  0100               	movlb	0	; () banked
 10981  0015FE  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 10982  001600  A4D8               	btfss	status,2,c
 10983  001602  D089               	goto	l4305
 10984                           
 10985                           ; BSR set to: 0
 10986  001604  0EF7               	movlw	247
 10987  001606  0100               	movlb	0	; () banked
 10988  001608  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 10989  00160A  A4D8               	btfss	status,2,c
 10990  00160C  D084               	goto	l4305
 10991                           
 10992                           ; BSR set to: 0
 10993                           ;inc\CANlib.h: 997: {
 10994                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
 10995  00160E  010F               	movlb	15	; () banked
 10996  001610  8711               	bsf	17,3,b	;volatile
 10997                           
 10998                           ; BSR set to: 15
 10999                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
 11000  001612  0100               	movlb	0	; () banked
 11001  001614  5177               	movf	CANSetFilter@filter& (0+255),w,b
 11002  001616  0100               	movlb	0	; () banked
 11003  001618  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11004  00161A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 11005  00161C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 11006  00161E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 11007                           
 11008                           ; BSR set to: 0
 11009                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
 11010  001620  C081  FF13         	movff	CANSetFilter@tamp,3859	;volatile
 11011                           
 11012                           ; BSR set to: 0
 11013                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
 11014  001624  0E00               	movlw	0
 11015  001626  0100               	movlb	0	; () banked
 11016  001628  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 11017  00162A  0100               	movlb	0	; () banked
 11018  00162C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11019  00162E  0EFF               	movlw	255
 11020  001630  0100               	movlb	0	; () banked
 11021  001632  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 11022  001634  0100               	movlb	0	; () banked
 11023  001636  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 11024  001638  0E00               	movlw	0
 11025  00163A  0100               	movlb	0	; () banked
 11026  00163C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 11027  00163E  0100               	movlb	0	; () banked
 11028  001640  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 11029  001642  0E00               	movlw	0
 11030  001644  0100               	movlb	0	; () banked
 11031  001646  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 11032  001648  0100               	movlb	0	; () banked
 11033  00164A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 11034                           
 11035                           ; BSR set to: 0
 11036                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
 11037  00164C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 11038  001650  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 11039  001654  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 11040  001658  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 11041  00165C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 11042  001660  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 11043  001664  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 11044  001668  0100               	movlb	0	; () banked
 11045  00166A  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 11046  00166C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 11047  001670  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 11048  001674  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 11049  001678  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 11050                           
 11051                           ; BSR set to: 0
 11052                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
 11053  00167C  C081  FF12         	movff	CANSetFilter@tamp,3858	;volatile
 11054                           
 11055                           ; BSR set to: 0
 11056                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
 11057  001680  0100               	movlb	0	; () banked
 11058  001682  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 11059  001684  D003               	goto	l501
 11060                           
 11061                           ; BSR set to: 0
 11062                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
 11063  001686  010F               	movlb	15	; () banked
 11064  001688  8111               	bsf	17,0,b	;volatile
 11065  00168A  D002               	goto	l502
 11066  00168C                     l501:
 11067                           
 11068                           ; BSR set to: 0
 11069                           ;inc\CANlib.h: 1009: else
 11070                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
 11071  00168C  010F               	movlb	15	; () banked
 11072  00168E  9111               	bcf	17,0,b	;volatile
 11073  001690                     l502:
 11074                           
 11075                           ; BSR set to: 15
 11076                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
 11077  001690  0100               	movlb	0	; () banked
 11078  001692  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 11079  001694  D003               	goto	l503
 11080                           
 11081                           ; BSR set to: 0
 11082                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
 11083  001696  010F               	movlb	15	; () banked
 11084  001698  8311               	bsf	17,1,b	;volatile
 11085  00169A  D002               	goto	l504
 11086  00169C                     l503:
 11087                           
 11088                           ; BSR set to: 0
 11089                           ;inc\CANlib.h: 1014: else
 11090                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
 11091  00169C  010F               	movlb	15	; () banked
 11092  00169E  9311               	bcf	17,1,b	;volatile
 11093  0016A0                     l504:
 11094                           
 11095                           ; BSR set to: 15
 11096                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
 11097  0016A0  0100               	movlb	0	; () banked
 11098  0016A2  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 11099  0016A4  D003               	goto	l505
 11100                           
 11101                           ; BSR set to: 0
 11102                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
 11103  0016A6  010F               	movlb	15	; () banked
 11104  0016A8  8B11               	bsf	17,5,b	;volatile
 11105  0016AA  D002               	goto	l506
 11106  0016AC                     l505:
 11107                           
 11108                           ; BSR set to: 0
 11109                           ;inc\CANlib.h: 1019: else
 11110                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
 11111  0016AC  010F               	movlb	15	; () banked
 11112  0016AE  9B11               	bcf	17,5,b	;volatile
 11113  0016B0                     l506:
 11114                           
 11115                           ; BSR set to: 15
 11116                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
 11117  0016B0  0100               	movlb	0	; () banked
 11118  0016B2  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 11119  0016B4  D003               	goto	l507
 11120                           
 11121                           ; BSR set to: 0
 11122                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
 11123  0016B6  010F               	movlb	15	; () banked
 11124  0016B8  8D11               	bsf	17,6,b	;volatile
 11125  0016BA  D002               	goto	l508
 11126  0016BC                     l507:
 11127                           
 11128                           ; BSR set to: 0
 11129                           ;inc\CANlib.h: 1024: else
 11130                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
 11131  0016BC  010F               	movlb	15	; () banked
 11132  0016BE  9D11               	bcf	17,6,b	;volatile
 11133  0016C0                     l508:
 11134                           
 11135                           ; BSR set to: 15
 11136                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
 11137  0016C0  0100               	movlb	0	; () banked
 11138  0016C2  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 11139  0016C4  D003               	goto	l509
 11140                           
 11141                           ; BSR set to: 0
 11142                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
 11143  0016C6  010F               	movlb	15	; () banked
 11144  0016C8  8F11               	bsf	17,7,b	;volatile
 11145  0016CA  D002               	goto	l4299
 11146  0016CC                     l509:
 11147                           
 11148                           ; BSR set to: 0
 11149                           ;inc\CANlib.h: 1029: else
 11150                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
 11151  0016CC  010F               	movlb	15	; () banked
 11152  0016CE  9F11               	bcf	17,7,b	;volatile
 11153  0016D0                     l4299:
 11154                           
 11155                           ; BSR set to: 15
 11156                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
 11157  0016D0  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 11158  0016D4  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 11159  0016D8  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 11160  0016DC  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 11161  0016E0  0E16               	movlw	22
 11162  0016E2  D006               	goto	u5130
 11163  0016E4                     u5135:
 11164  0016E4  0100               	movlb	0	; () banked
 11165  0016E6  90D8               	bcf	status,0,c
 11166  0016E8  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 11167  0016EA  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 11168  0016EC  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 11169  0016EE  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 11170  0016F0                     u5130:
 11171  0016F0  2EE8               	decfsz	wreg,f,c
 11172  0016F2  D7F8               	goto	u5135
 11173  0016F4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 11174  0016F8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 11175  0016FC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 11176  001700  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 11177                           
 11178                           ; BSR set to: 0
 11179                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
 11180  001704  0100               	movlb	0	; () banked
 11181  001706  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 11182  001708  0100               	movlb	0	; () banked
 11183  00170A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11184  00170C  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 11185  00170E  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 11186  001710  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 11187                           
 11188                           ; BSR set to: 0
 11189                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
 11190  001712  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 11191  001716                     l4305:
 11192                           
 11193                           ; BSR set to: 0
 11194                           ;inc\CANlib.h: 1035: }
 11195                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
 11196  001716  0E05               	movlw	5
 11197  001718  0100               	movlb	0	; () banked
 11198  00171A  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 11199  00171C  A4D8               	btfss	status,2,c
 11200  00171E  0012               	return	
 11201                           
 11202                           ; BSR set to: 0
 11203  001720  0EF7               	movlw	247
 11204  001722  0100               	movlb	0	; () banked
 11205  001724  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 11206  001726  A4D8               	btfss	status,2,c
 11207  001728  0012               	return	
 11208                           
 11209                           ; BSR set to: 0
 11210                           ;inc\CANlib.h: 1038: {
 11211                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
 11212  00172A  010F               	movlb	15	; () banked
 11213  00172C  8715               	bsf	21,3,b	;volatile
 11214                           
 11215                           ; BSR set to: 15
 11216                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
 11217  00172E  0100               	movlb	0	; () banked
 11218  001730  5177               	movf	CANSetFilter@filter& (0+255),w,b
 11219  001732  0100               	movlb	0	; () banked
 11220  001734  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11221  001736  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 11222  001738  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 11223  00173A  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 11224                           
 11225                           ; BSR set to: 0
 11226                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
 11227  00173C  C081  FF17         	movff	CANSetFilter@tamp,3863	;volatile
 11228                           
 11229                           ; BSR set to: 0
 11230                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
 11231  001740  0E00               	movlw	0
 11232  001742  0100               	movlb	0	; () banked
 11233  001744  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 11234  001746  0100               	movlb	0	; () banked
 11235  001748  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11236  00174A  0EFF               	movlw	255
 11237  00174C  0100               	movlb	0	; () banked
 11238  00174E  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 11239  001750  0100               	movlb	0	; () banked
 11240  001752  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 11241  001754  0E00               	movlw	0
 11242  001756  0100               	movlb	0	; () banked
 11243  001758  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 11244  00175A  0100               	movlb	0	; () banked
 11245  00175C  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 11246  00175E  0E00               	movlw	0
 11247  001760  0100               	movlb	0	; () banked
 11248  001762  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 11249  001764  0100               	movlb	0	; () banked
 11250  001766  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 11251                           
 11252                           ; BSR set to: 0
 11253                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
 11254  001768  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 11255  00176C  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 11256  001770  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 11257  001774  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 11258  001778  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 11259  00177C  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 11260  001780  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 11261  001784  0100               	movlb	0	; () banked
 11262  001786  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 11263  001788  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 11264  00178C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 11265  001790  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 11266  001794  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 11267                           
 11268                           ; BSR set to: 0
 11269                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
 11270  001798  C081  FF16         	movff	CANSetFilter@tamp,3862	;volatile
 11271                           
 11272                           ; BSR set to: 0
 11273                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
 11274  00179C  0100               	movlb	0	; () banked
 11275  00179E  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 11276  0017A0  D003               	goto	l512
 11277                           
 11278                           ; BSR set to: 0
 11279                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
 11280  0017A2  010F               	movlb	15	; () banked
 11281  0017A4  8115               	bsf	21,0,b	;volatile
 11282  0017A6  D002               	goto	l513
 11283  0017A8                     l512:
 11284                           
 11285                           ; BSR set to: 0
 11286                           ;inc\CANlib.h: 1050: else
 11287                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
 11288  0017A8  010F               	movlb	15	; () banked
 11289  0017AA  9115               	bcf	21,0,b	;volatile
 11290  0017AC                     l513:
 11291                           
 11292                           ; BSR set to: 15
 11293                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
 11294  0017AC  0100               	movlb	0	; () banked
 11295  0017AE  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 11296  0017B0  D003               	goto	l514
 11297                           
 11298                           ; BSR set to: 0
 11299                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
 11300  0017B2  010F               	movlb	15	; () banked
 11301  0017B4  8315               	bsf	21,1,b	;volatile
 11302  0017B6  D002               	goto	l515
 11303  0017B8                     l514:
 11304                           
 11305                           ; BSR set to: 0
 11306                           ;inc\CANlib.h: 1055: else
 11307                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
 11308  0017B8  010F               	movlb	15	; () banked
 11309  0017BA  9315               	bcf	21,1,b	;volatile
 11310  0017BC                     l515:
 11311                           
 11312                           ; BSR set to: 15
 11313                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
 11314  0017BC  0100               	movlb	0	; () banked
 11315  0017BE  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 11316  0017C0  D003               	goto	l516
 11317                           
 11318                           ; BSR set to: 0
 11319                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
 11320  0017C2  010F               	movlb	15	; () banked
 11321  0017C4  8B15               	bsf	21,5,b	;volatile
 11322  0017C6  D002               	goto	l517
 11323  0017C8                     l516:
 11324                           
 11325                           ; BSR set to: 0
 11326                           ;inc\CANlib.h: 1060: else
 11327                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
 11328  0017C8  010F               	movlb	15	; () banked
 11329  0017CA  9B15               	bcf	21,5,b	;volatile
 11330  0017CC                     l517:
 11331                           
 11332                           ; BSR set to: 15
 11333                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
 11334  0017CC  0100               	movlb	0	; () banked
 11335  0017CE  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 11336  0017D0  D003               	goto	l518
 11337                           
 11338                           ; BSR set to: 0
 11339                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
 11340  0017D2  010F               	movlb	15	; () banked
 11341  0017D4  8D15               	bsf	21,6,b	;volatile
 11342  0017D6  D002               	goto	l519
 11343  0017D8                     l518:
 11344                           
 11345                           ; BSR set to: 0
 11346                           ;inc\CANlib.h: 1065: else
 11347                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
 11348  0017D8  010F               	movlb	15	; () banked
 11349  0017DA  9D15               	bcf	21,6,b	;volatile
 11350  0017DC                     l519:
 11351                           
 11352                           ; BSR set to: 15
 11353                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
 11354  0017DC  0100               	movlb	0	; () banked
 11355  0017DE  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 11356  0017E0  D003               	goto	l520
 11357                           
 11358                           ; BSR set to: 0
 11359                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
 11360  0017E2  010F               	movlb	15	; () banked
 11361  0017E4  8F15               	bsf	21,7,b	;volatile
 11362  0017E6  D002               	goto	l4333
 11363  0017E8                     l520:
 11364                           
 11365                           ; BSR set to: 0
 11366                           ;inc\CANlib.h: 1070: else
 11367                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
 11368  0017E8  010F               	movlb	15	; () banked
 11369  0017EA  9F15               	bcf	21,7,b	;volatile
 11370  0017EC                     l4333:
 11371                           
 11372                           ; BSR set to: 15
 11373                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
 11374  0017EC  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 11375  0017F0  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 11376  0017F4  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 11377  0017F8  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 11378  0017FC  0E16               	movlw	22
 11379  0017FE  D006               	goto	u5210
 11380  001800                     u5215:
 11381  001800  0100               	movlb	0	; () banked
 11382  001802  90D8               	bcf	status,0,c
 11383  001804  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 11384  001806  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 11385  001808  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 11386  00180A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 11387  00180C                     u5210:
 11388  00180C  2EE8               	decfsz	wreg,f,c
 11389  00180E  D7F8               	goto	u5215
 11390  001810  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 11391  001814  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 11392  001818  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 11393  00181C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 11394                           
 11395                           ; BSR set to: 0
 11396                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
 11397  001820  0100               	movlb	0	; () banked
 11398  001822  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 11399  001824  0100               	movlb	0	; () banked
 11400  001826  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11401  001828  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 11402  00182A  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 11403  00182C  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 11404                           
 11405                           ; BSR set to: 0
 11406                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
 11407  00182E  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 11408  001832  0012               	return	
 11409  001834                     __end_of_CANSetFilter:
 11410                           	opt stack 0
 11411                           tblptru	equ	0xFF8
 11412                           tblptrh	equ	0xFF7
 11413                           tblptrl	equ	0xFF6
 11414                           tablat	equ	0xFF5
 11415                           prodh	equ	0xFF4
 11416                           prodl	equ	0xFF3
 11417                           intcon	equ	0xFF2
 11418                           intcon2	equ	0xFF1
 11419                           postinc0	equ	0xFEE
 11420                           wreg	equ	0xFE8
 11421                           indf2	equ	0xFDF
 11422                           postinc2	equ	0xFDE
 11423                           postdec2	equ	0xFDD
 11424                           fsr2h	equ	0xFDA
 11425                           fsr2l	equ	0xFD9
 11426                           status	equ	0xFD8
 11427                           
 11428 ;; *************** function _CANOperationMode *****************
 11429 ;; Defined at:
 11430 ;;		line 206 in file "../../Scuola/Triennio/sistemi/4^/PIC/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 11431 ;; Parameters:    Size  Location     Type
 11432 ;;  mode            1    wreg     enum E16307
 11433 ;; Auto vars:     Size  Location     Type
 11434 ;;  mode            1   23[BANK0 ] enum E16307
 11435 ;; Return value:  Size  Location     Type
 11436 ;;		None               void
 11437 ;; Registers used:
 11438 ;;		wreg, status,2, status,0
 11439 ;; Tracked objects:
 11440 ;;		On entry : 0/0
 11441 ;;		On exit  : 0/0
 11442 ;;		Unchanged: 0/0
 11443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11445 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11447 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11448 ;;Total ram usage:        1 bytes
 11449 ;; Hardware stack levels used:    1
 11450 ;; Hardware stack levels required when called:    4
 11451 ;; This function calls:
 11452 ;;		Nothing
 11453 ;; This function is called by:
 11454 ;;		_CANInitialize
 11455 ;; This function uses a non-reentrant model
 11456 ;;
 11457                           
 11458                           	psect	text24
 11459  004DDE                     __ptext24:
 11460                           	opt stack 0
 11461  004DDE                     _CANOperationMode:
 11462                           	opt stack 24
 11463                           
 11464                           ; BSR set to: 0
 11465                           ;incstack = 0
 11466                           ;CANOperationMode@mode stored from wreg
 11467  004DDE  0100               	movlb	0	; () banked
 11468  004DE0  6F77               	movwf	CANOperationMode@mode& (0+255),b
 11469                           
 11470                           ;inc\CANlib.h: 208: CANCON = mode;
 11471  004DE2  C077  FF6F         	movff	CANOperationMode@mode,3951	;volatile
 11472  004DE6                     l3929:
 11473  004DE6  506E               	movf	3950,w,c	;volatile
 11474  004DE8  0BE0               	andlw	224
 11475  004DEA  0100               	movlb	0	; () banked
 11476  004DEC  1977               	xorwf	CANOperationMode@mode& (0+255),w,b
 11477  004DEE  B4D8               	btfsc	status,2,c
 11478  004DF0  0012               	return	
 11479  004DF2  D7F9               	goto	l3929
 11480  004DF4                     __end_of_CANOperationMode:
 11481                           	opt stack 0
 11482                           tblptru	equ	0xFF8
 11483                           tblptrh	equ	0xFF7
 11484                           tblptrl	equ	0xFF6
 11485                           tablat	equ	0xFF5
 11486                           prodh	equ	0xFF4
 11487                           prodl	equ	0xFF3
 11488                           intcon	equ	0xFF2
 11489                           intcon2	equ	0xFF1
 11490                           postinc0	equ	0xFEE
 11491                           wreg	equ	0xFE8
 11492                           indf2	equ	0xFDF
 11493                           postinc2	equ	0xFDE
 11494                           postdec2	equ	0xFDD
 11495                           fsr2h	equ	0xFDA
 11496                           fsr2l	equ	0xFD9
 11497                           status	equ	0xFD8
 11498                           
 11499 ;; *************** function _can_interpreter *****************
 11500 ;; Defined at:
 11501 ;;		line 259 in file "parcheggio.c"
 11502 ;; Parameters:    Size  Location     Type
 11503 ;;		None
 11504 ;; Auto vars:     Size  Location     Type
 11505 ;;		None
 11506 ;; Return value:  Size  Location     Type
 11507 ;;		None               void
 11508 ;; Registers used:
 11509 ;;		wreg, status,2, status,0
 11510 ;; Tracked objects:
 11511 ;;		On entry : 0/0
 11512 ;;		On exit  : 0/0
 11513 ;;		Unchanged: 0/0
 11514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11517 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11518 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11519 ;;Total ram usage:        4 bytes
 11520 ;; Hardware stack levels used:    1
 11521 ;; Hardware stack levels required when called:    4
 11522 ;; This function calls:
 11523 ;;		Nothing
 11524 ;; This function is called by:
 11525 ;;		_main
 11526 ;; This function uses a non-reentrant model
 11527 ;;
 11528                           
 11529                           	psect	text25
 11530  004C56                     __ptext25:
 11531                           	opt stack 0
 11532  004C56                     _can_interpreter:
 11533                           	opt stack 26
 11534                           
 11535                           ;parcheggio.c: 260: left_speed = data_speed_rx[1];
 11536                           
 11537                           ; BSR set to: 0
 11538                           ;incstack = 0
 11539  004C56  C109  F03A         	movff	_data_speed_rx+1,_left_speed
 11540  004C5A  6A3B               	clrf	_left_speed+1,c
 11541                           
 11542                           ;parcheggio.c: 261: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 11543  004C5C  503A               	movf	_left_speed,w,c
 11544  004C5E  0100               	movlb	0	; () banked
 11545  004C60  6F77               	movwf	??_can_interpreter& (0+255),b
 11546  004C62  0101               	movlb	1	; () banked
 11547  004C64  5108               	movf	_data_speed_rx& (0+255),w,b
 11548  004C66  6E3A               	movwf	_left_speed,c
 11549  004C68  C077  F03B         	movff	??_can_interpreter,_left_speed+1
 11550                           
 11551                           ; BSR set to: 1
 11552                           ;parcheggio.c: 262: right_speed = data_speed_rx[3];
 11553  004C6C  C10B  F03E         	movff	_data_speed_rx+3,_right_speed
 11554  004C70  6A3F               	clrf	_right_speed+1,c
 11555                           
 11556                           ;parcheggio.c: 263: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 11557  004C72  503E               	movf	_right_speed,w,c
 11558  004C74  0100               	movlb	0	; () banked
 11559  004C76  6F77               	movwf	??_can_interpreter& (0+255),b
 11560  004C78  0101               	movlb	1	; () banked
 11561  004C7A  510A               	movf	(_data_speed_rx+2)& (0+255),w,b
 11562  004C7C  6E3E               	movwf	_right_speed,c
 11563  004C7E  C077  F03F         	movff	??_can_interpreter,_right_speed+1
 11564                           
 11565                           ; BSR set to: 1
 11566                           ;parcheggio.c: 264: actual_speed = (right_speed + left_speed) / 2;
 11567  004C82  503A               	movf	_left_speed,w,c
 11568  004C84  243E               	addwf	_right_speed,w,c
 11569  004C86  0100               	movlb	0	; () banked
 11570  004C88  6F77               	movwf	??_can_interpreter& (0+255),b
 11571  004C8A  503B               	movf	_left_speed+1,w,c
 11572  004C8C  203F               	addwfc	_right_speed+1,w,c
 11573  004C8E  0100               	movlb	0	; () banked
 11574  004C90  6F78               	movwf	(??_can_interpreter+1)& (0+255),b
 11575  004C92  90D8               	bcf	status,0,c
 11576  004C94  0100               	movlb	0	; () banked
 11577  004C96  3178               	rrcf	(??_can_interpreter+1)& (0+255),w,b
 11578  004C98  0100               	movlb	0	; () banked
 11579  004C9A  6F79               	movwf	(??_can_interpreter+2)& (0+255),b
 11580  004C9C  0100               	movlb	0	; () banked
 11581  004C9E  3177               	rrcf	??_can_interpreter& (0+255),w,b
 11582  004CA0  0100               	movlb	0	; () banked
 11583  004CA2  6FDD               	movwf	_actual_speed& (0+255),b
 11584  004CA4  C079  F0DE         	movff	??_can_interpreter+2,_actual_speed+1
 11585                           
 11586                           ; BSR set to: 0
 11587  004CA8  0012               	return		;funcret
 11588  004CAA                     __end_of_can_interpreter:
 11589                           	opt stack 0
 11590                           tblptru	equ	0xFF8
 11591                           tblptrh	equ	0xFF7
 11592                           tblptrl	equ	0xFF6
 11593                           tablat	equ	0xFF5
 11594                           prodh	equ	0xFF4
 11595                           prodl	equ	0xFF3
 11596                           intcon	equ	0xFF2
 11597                           intcon2	equ	0xFF1
 11598                           postinc0	equ	0xFEE
 11599                           wreg	equ	0xFE8
 11600                           indf2	equ	0xFDF
 11601                           postinc2	equ	0xFDE
 11602                           postdec2	equ	0xFDD
 11603                           fsr2h	equ	0xFDA
 11604                           fsr2l	equ	0xFD9
 11605                           status	equ	0xFD8
 11606                           
 11607 ;; *************** function _ISR_Bassa *****************
 11608 ;; Defined at:
 11609 ;;		line 90 in file "parcheggio.c"
 11610 ;; Parameters:    Size  Location     Type
 11611 ;;		None
 11612 ;; Auto vars:     Size  Location     Type
 11613 ;;  i               1   34[COMRAM] unsigned char 
 11614 ;;  gigi            1   33[COMRAM] unsigned char 
 11615 ;; Return value:  Size  Location     Type
 11616 ;;		None               void
 11617 ;; Registers used:
 11618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11619 ;; Tracked objects:
 11620 ;;		On entry : 0/0
 11621 ;;		On exit  : 0/0
 11622 ;;		Unchanged: 0/0
 11623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11625 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11626 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11627 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11628 ;;Total ram usage:       23 bytes
 11629 ;; Hardware stack levels used:    1
 11630 ;; Hardware stack levels required when called:    3
 11631 ;; This function calls:
 11632 ;;		_CANreceiveMessage
 11633 ;; This function is called by:
 11634 ;;		Interrupt level 1
 11635 ;; This function uses a non-reentrant model
 11636 ;;
 11637                           
 11638                           	psect	intcodelo
 11639  000018                     __pintcodelo:
 11640                           	opt stack 0
 11641  000018                     _ISR_Bassa:
 11642                           	opt stack 22
 11643                           
 11644                           ; BSR set to: 0
 11645                           ;incstack = 0
 11646  000018  8047               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 11647  00001A  CFD8 F011          	movff	status,??_ISR_Bassa+4
 11648  00001E  CFE8 F012          	movff	wreg,??_ISR_Bassa+5
 11649  000022  CFE0 F013          	movff	bsr,??_ISR_Bassa+6
 11650  000026  CFFA F014          	movff	pclath,??_ISR_Bassa+7
 11651  00002A  CFFB F015          	movff	pclatu,??_ISR_Bassa+8
 11652  00002E  CFE9 F016          	movff	fsr0l,??_ISR_Bassa+9
 11653  000032  CFEA F017          	movff	fsr0h,??_ISR_Bassa+10
 11654  000036  CFE1 F018          	movff	fsr1l,??_ISR_Bassa+11
 11655  00003A  CFE2 F019          	movff	fsr1h,??_ISR_Bassa+12
 11656  00003E  CFD9 F01A          	movff	fsr2l,??_ISR_Bassa+13
 11657  000042  CFDA F01B          	movff	fsr2h,??_ISR_Bassa+14
 11658  000046  CFF3 F01C          	movff	prodl,??_ISR_Bassa+15
 11659  00004A  CFF4 F01D          	movff	prodh,??_ISR_Bassa+16
 11660  00004E  CFF6 F01E          	movff	tblptrl,??_ISR_Bassa+17
 11661  000052  CFF7 F01F          	movff	tblptrh,??_ISR_Bassa+18
 11662  000056  CFF8 F020          	movff	tblptru,??_ISR_Bassa+19
 11663  00005A  CFF5 F021          	movff	tablat,??_ISR_Bassa+20
 11664                           
 11665                           ;parcheggio.c: 92: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
 11666  00005E  A0A4               	btfss	4004,0,c	;volatile
 11667  000060  B2A4               	btfsc	4004,1,c	;volatile
 11668  000062  D001               	goto	i1l5221
 11669  000064  D090               	goto	i1l653
 11670  000066                     i1l5221:
 11671                           
 11672                           ;parcheggio.c: 93: CANreceiveMessage(&msg);
 11673  000066  0E1A               	movlw	low _msg
 11674  000068  6E01               	movwf	CANreceiveMessage@msg,c
 11675  00006A  0E01               	movlw	high _msg
 11676  00006C  6E02               	movwf	CANreceiveMessage@msg+1,c
 11677  00006E  ECE0  F00F         	call	_CANreceiveMessage	;wreg free
 11678                           
 11679                           ;parcheggio.c: 95: if ((msg.identifier == 0b00000000111) && (msg.RTR != 1)) {
 11680  000072  0E07               	movlw	7
 11681  000074  0101               	movlb	1	; () banked
 11682  000076  191A               	xorwf	_msg& (0+255),w,b
 11683  000078  0101               	movlb	1	; () banked
 11684  00007A  111B               	iorwf	(_msg+1)& (0+255),w,b
 11685  00007C  0101               	movlb	1	; () banked
 11686  00007E  111C               	iorwf	(_msg+2)& (0+255),w,b
 11687  000080  0101               	movlb	1	; () banked
 11688  000082  111D               	iorwf	(_msg+3)& (0+255),w,b
 11689  000084  A4D8               	btfss	status,2,c
 11690  000086  D02C               	goto	i1l5237
 11691                           
 11692                           ; BSR set to: 1
 11693  000088  0101               	movlb	1	; () banked
 11694  00008A  0528               	decf	(_msg+14)& (0+255),w,b
 11695  00008C  B4D8               	btfsc	status,2,c
 11696  00008E  D028               	goto	i1l5237
 11697                           
 11698                           ; BSR set to: 1
 11699                           ;parcheggio.c: 96: distance_average = 0;
 11700  000090  0E00               	movlw	0
 11701  000092  0100               	movlb	0	; () banked
 11702  000094  6FE2               	movwf	(_distance_average+1)& (0+255),b	;volatile
 11703  000096  0E00               	movlw	0
 11704  000098  6FE1               	movwf	_distance_average& (0+255),b	;volatile
 11705                           
 11706                           ; BSR set to: 0
 11707                           ;parcheggio.c: 97: distance_dx = msg.data[1];
 11708  00009A  C11F  F036         	movff	_msg+5,_distance_dx	;volatile
 11709  00009E  6A37               	clrf	_distance_dx+1,c	;volatile
 11710                           
 11711                           ;parcheggio.c: 98: distance_dx = ((distance_dx << 8) | msg.data[0]);
 11712  0000A0  5036               	movf	_distance_dx,w,c	;volatile
 11713  0000A2  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 11714  0000A4  0101               	movlb	1	; () banked
 11715  0000A6  511E               	movf	(_msg+4)& (0+255),w,b
 11716  0000A8  6E36               	movwf	_distance_dx,c	;volatile
 11717  0000AA  C00D  F037         	movff	??_ISR_Bassa,_distance_dx+1	;volatile
 11718                           
 11719                           ; BSR set to: 1
 11720                           ;parcheggio.c: 99: distance_sx = msg.data[3];
 11721  0000AE  C121  F038         	movff	_msg+7,_distance_sx	;volatile
 11722  0000B2  6A39               	clrf	_distance_sx+1,c	;volatile
 11723                           
 11724                           ;parcheggio.c: 100: distance_sx = ((distance_sx << 8) | msg.data[2]);
 11725  0000B4  5038               	movf	_distance_sx,w,c	;volatile
 11726  0000B6  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 11727  0000B8  0101               	movlb	1	; () banked
 11728  0000BA  5120               	movf	(_msg+6)& (0+255),w,b
 11729  0000BC  6E38               	movwf	_distance_sx,c	;volatile
 11730  0000BE  C00D  F039         	movff	??_ISR_Bassa,_distance_sx+1	;volatile
 11731                           
 11732                           ; BSR set to: 1
 11733                           ;parcheggio.c: 101: distance_average = (distance_sx + distance_dx) / 2;
 11734  0000C2  5036               	movf	_distance_dx,w,c	;volatile
 11735  0000C4  2438               	addwf	_distance_sx,w,c	;volatile
 11736  0000C6  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 11737  0000C8  5037               	movf	_distance_dx+1,w,c	;volatile
 11738  0000CA  2039               	addwfc	_distance_sx+1,w,c	;volatile
 11739  0000CC  6E0E               	movwf	(??_ISR_Bassa+1)& (0+255),c
 11740  0000CE  90D8               	bcf	status,0,c
 11741  0000D0  300E               	rrcf	??_ISR_Bassa+1,w,c
 11742  0000D2  6E0F               	movwf	(??_ISR_Bassa+2)& (0+255),c
 11743  0000D4  300D               	rrcf	??_ISR_Bassa,w,c
 11744  0000D6  0100               	movlb	0	; () banked
 11745  0000D8  6FE1               	movwf	_distance_average& (0+255),b	;volatile
 11746  0000DA  C00F  F0E2         	movff	??_ISR_Bassa+2,_distance_average+1	;volatile
 11747                           
 11748                           ; BSR set to: 0
 11749                           ;parcheggio.c: 102: distance_received = 1;
 11750  0000DE  8645               	bsf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
 11751  0000E0                     i1l5237:
 11752                           
 11753                           ;parcheggio.c: 103: }
 11754                           ;parcheggio.c: 104: if (msg.identifier == 0b00000001010) {
 11755  0000E0  0E0A               	movlw	10
 11756  0000E2  0101               	movlb	1	; () banked
 11757  0000E4  191A               	xorwf	_msg& (0+255),w,b
 11758  0000E6  0101               	movlb	1	; () banked
 11759  0000E8  111B               	iorwf	(_msg+1)& (0+255),w,b
 11760  0000EA  0101               	movlb	1	; () banked
 11761  0000EC  111C               	iorwf	(_msg+2)& (0+255),w,b
 11762  0000EE  0101               	movlb	1	; () banked
 11763  0000F0  111D               	iorwf	(_msg+3)& (0+255),w,b
 11764  0000F2  A4D8               	btfss	status,2,c
 11765  0000F4  D00B               	goto	i1l5243
 11766                           
 11767                           ; BSR set to: 1
 11768                           ;parcheggio.c: 105: if (msg.data[0] == 1) {
 11769  0000F6  0101               	movlb	1	; () banked
 11770  0000F8  051E               	decf	(_msg+4)& (0+255),w,b
 11771  0000FA  A4D8               	btfss	status,2,c
 11772  0000FC  D003               	goto	i1l658
 11773                           
 11774                           ; BSR set to: 1
 11775                           ;parcheggio.c: 106: activation = 1;
 11776  0000FE  8045               	bsf	_activation/(0+8),_activation& (0+7),c	;volatile
 11777                           
 11778                           ;parcheggio.c: 107: PORTBbits.RB6 = 1;
 11779  000100  8C81               	bsf	3969,6,c	;volatile
 11780                           
 11781                           ;parcheggio.c: 108: } else {
 11782  000102  D004               	goto	i1l5243
 11783  000104                     i1l658:
 11784                           
 11785                           ; BSR set to: 1
 11786                           ;parcheggio.c: 109: activation = 0;
 11787  000104  9045               	bcf	_activation/(0+8),_activation& (0+7),c	;volatile
 11788                           
 11789                           ;parcheggio.c: 110: PORTBbits.RB4 = 0;
 11790  000106  9881               	bcf	3969,4,c	;volatile
 11791                           
 11792                           ;parcheggio.c: 111: PORTBbits.RB5 = 0;
 11793  000108  9A81               	bcf	3969,5,c	;volatile
 11794                           
 11795                           ;parcheggio.c: 112: PORTBbits.RB6 = 0;
 11796  00010A  9C81               	bcf	3969,6,c	;volatile
 11797  00010C                     i1l5243:
 11798                           
 11799                           ; BSR set to: 1
 11800                           ;parcheggio.c: 113: }
 11801                           ;parcheggio.c: 114: }
 11802                           ;parcheggio.c: 115: if (msg.identifier == 0b00000001100) {
 11803  00010C  0E0C               	movlw	12
 11804  00010E  0101               	movlb	1	; () banked
 11805  000110  191A               	xorwf	_msg& (0+255),w,b
 11806  000112  0101               	movlb	1	; () banked
 11807  000114  111B               	iorwf	(_msg+1)& (0+255),w,b
 11808  000116  0101               	movlb	1	; () banked
 11809  000118  111C               	iorwf	(_msg+2)& (0+255),w,b
 11810  00011A  0101               	movlb	1	; () banked
 11811  00011C  111D               	iorwf	(_msg+3)& (0+255),w,b
 11812  00011E  B4D8               	btfsc	status,2,c
 11813                           
 11814                           ; BSR set to: 1
 11815                           ;parcheggio.c: 116: start_operation = 1;
 11816  000120  8C45               	bsf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 11817                           
 11818                           ; BSR set to: 1
 11819                           ;parcheggio.c: 117: }
 11820                           ;parcheggio.c: 118: if (msg.identifier == 0b00000000110) {
 11821                           
 11822                           ; BSR set to: 1
 11823  000122  0E06               	movlw	6
 11824  000124  0101               	movlb	1	; () banked
 11825  000126  191A               	xorwf	_msg& (0+255),w,b
 11826  000128  0101               	movlb	1	; () banked
 11827  00012A  111B               	iorwf	(_msg+1)& (0+255),w,b
 11828  00012C  0101               	movlb	1	; () banked
 11829  00012E  111C               	iorwf	(_msg+2)& (0+255),w,b
 11830  000130  0101               	movlb	1	; () banked
 11831  000132  111D               	iorwf	(_msg+3)& (0+255),w,b
 11832  000134  A4D8               	btfss	status,2,c
 11833  000136  D025               	goto	i1l661
 11834                           
 11835                           ; BSR set to: 1
 11836                           ;parcheggio.c: 119: for (unsigned char i = 0; i < 8; i++) {
 11837  000138  0E00               	movlw	0
 11838  00013A  6E23               	movwf	ISR_Bassa@i,c
 11839  00013C                     i1l5251:
 11840                           
 11841                           ; BSR set to: 1
 11842  00013C  0E07               	movlw	7
 11843  00013E  6423               	cpfsgt	ISR_Bassa@i,c
 11844  000140  D001               	goto	i1l5255
 11845  000142  D014               	goto	i1l5261
 11846  000144                     i1l5255:
 11847                           
 11848                           ;parcheggio.c: 120: data_speed_rx[i] = msg.data[i];
 11849  000144  5023               	movf	ISR_Bassa@i,w,c
 11850  000146  0D01               	mullw	1
 11851  000148  0E1E               	movlw	low (_msg+4)
 11852  00014A  24F3               	addwf	prodl,w,c
 11853  00014C  6ED9               	movwf	fsr2l,c
 11854  00014E  0E01               	movlw	high (_msg+4)
 11855  000150  20F4               	addwfc	prodh,w,c
 11856  000152  6EDA               	movwf	fsr2h,c
 11857  000154  5023               	movf	ISR_Bassa@i,w,c
 11858  000156  0D01               	mullw	1
 11859  000158  0E08               	movlw	low _data_speed_rx
 11860  00015A  24F3               	addwf	prodl,w,c
 11861  00015C  6EE1               	movwf	fsr1l,c
 11862  00015E  0E01               	movlw	high _data_speed_rx
 11863  000160  20F4               	addwfc	prodh,w,c
 11864  000162  6EE2               	movwf	fsr1h,c
 11865  000164  CFDF FFE7          	movff	indf2,indf1
 11866  000168  2A23               	incf	ISR_Bassa@i,f,c
 11867  00016A  D7E8               	goto	i1l5251
 11868  00016C                     i1l5261:
 11869                           
 11870                           ;parcheggio.c: 121: }
 11871                           ;parcheggio.c: 122: if (msg.identifier == 0b00000001101) {
 11872  00016C  0E0D               	movlw	13
 11873  00016E  0101               	movlb	1	; () banked
 11874  000170  191A               	xorwf	_msg& (0+255),w,b
 11875  000172  0101               	movlb	1	; () banked
 11876  000174  111B               	iorwf	(_msg+1)& (0+255),w,b
 11877  000176  0101               	movlb	1	; () banked
 11878  000178  111C               	iorwf	(_msg+2)& (0+255),w,b
 11879  00017A  0101               	movlb	1	; () banked
 11880  00017C  111D               	iorwf	(_msg+3)& (0+255),w,b
 11881  00017E  B4D8               	btfsc	status,2,c
 11882                           
 11883                           ; BSR set to: 1
 11884                           ;parcheggio.c: 123: distance_wait = 0;
 11885  000180  9845               	bcf	_distance_wait/(0+8),_distance_wait& (0+7),c	;volatile
 11886  000182                     i1l661:
 11887                           
 11888                           ; BSR set to: 1
 11889                           ;parcheggio.c: 124: }
 11890                           ;parcheggio.c: 126: }
 11891                           ;parcheggio.c: 128: PIR3bits.RXB0IF = 0;
 11892  000182  90A4               	bcf	4004,0,c	;volatile
 11893                           
 11894                           ;parcheggio.c: 129: PIR3bits.RXB1IF = 0;
 11895  000184  92A4               	bcf	4004,1,c	;volatile
 11896  000186                     i1l653:
 11897                           
 11898                           ;parcheggio.c: 130: }
 11899                           ;parcheggio.c: 132: if (INTCONbits.TMR0IF == 1) {
 11900  000186  A4F2               	btfss	intcon,2,c	;volatile
 11901  000188  D033               	goto	i1l668
 11902                           
 11903                           ;parcheggio.c: 133: INTCONbits.INT0IE = 0;
 11904  00018A  98F2               	bcf	intcon,4,c	;volatile
 11905                           
 11906                           ;parcheggio.c: 134: TMR0H = 0x34;
 11907  00018C  0E34               	movlw	52
 11908  00018E  6ED7               	movwf	4055,c	;volatile
 11909                           
 11910                           ;parcheggio.c: 135: TMR0L = 0xE0;
 11911  000190  0EE0               	movlw	224
 11912  000192  6ED6               	movwf	4054,c	;volatile
 11913                           
 11914                           ;parcheggio.c: 136: if (distance_error == 1) {
 11915  000194  A445               	btfss	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 11916  000196  D00C               	goto	i1l5273
 11917                           
 11918                           ;parcheggio.c: 137: sensor_distance[MUX_index] = 5000;
 11919  000198  5042               	movf	_MUX_index,w,c	;volatile
 11920  00019A  0D02               	mullw	2
 11921  00019C  0E24               	movlw	low _sensor_distance
 11922  00019E  24F3               	addwf	prodl,w,c
 11923  0001A0  6ED9               	movwf	fsr2l,c
 11924  0001A2  0E00               	movlw	high _sensor_distance
 11925  0001A4  20F4               	addwfc	prodh,w,c
 11926  0001A6  6EDA               	movwf	fsr2h,c
 11927  0001A8  0E88               	movlw	136
 11928  0001AA  6EDE               	movwf	postinc2,c
 11929  0001AC  0E13               	movlw	19
 11930  0001AE  6EDD               	movwf	postdec2,c
 11931  0001B0                     i1l5273:
 11932                           
 11933                           ;parcheggio.c: 138: }
 11934                           ;parcheggio.c: 139: MUX_index++;
 11935  0001B0  2A42               	incf	_MUX_index,f,c	;volatile
 11936                           
 11937                           ;parcheggio.c: 140: if (MUX_index == 8) {
 11938  0001B2  0E08               	movlw	8
 11939  0001B4  1842               	xorwf	_MUX_index,w,c	;volatile
 11940  0001B6  A4D8               	btfss	status,2,c
 11941  0001B8  D002               	goto	i1l667
 11942                           
 11943                           ;parcheggio.c: 141: MUX_index = 0;
 11944  0001BA  0E00               	movlw	0
 11945  0001BC  6E42               	movwf	_MUX_index,c	;volatile
 11946  0001BE                     i1l667:
 11947                           
 11948                           ;parcheggio.c: 142: }
 11949                           ;parcheggio.c: 144: unsigned char gigi = 0;
 11950  0001BE  0E00               	movlw	0
 11951  0001C0  6E22               	movwf	ISR_Bassa@gigi,c
 11952                           
 11953                           ;parcheggio.c: 145: gigi = MUX_select[MUX_index];
 11954  0001C2  5042               	movf	_MUX_index,w,c	;volatile
 11955  0001C4  0D01               	mullw	1
 11956  0001C6  0E00               	movlw	low _MUX_select
 11957  0001C8  24F3               	addwf	prodl,w,c
 11958  0001CA  6ED9               	movwf	fsr2l,c
 11959  0001CC  0E01               	movlw	high _MUX_select
 11960  0001CE  20F4               	addwfc	prodh,w,c
 11961  0001D0  6EDA               	movwf	fsr2h,c
 11962  0001D2  50DF               	movf	indf2,w,c
 11963  0001D4  6E22               	movwf	ISR_Bassa@gigi,c
 11964                           
 11965                           ;parcheggio.c: 146: PORTA = gigi;
 11966  0001D6  C022  FF80         	movff	ISR_Bassa@gigi,3968	;volatile
 11967                           
 11968                           ;parcheggio.c: 147: TRISBbits.RB0 = 0;
 11969  0001DA  9093               	bcf	3987,0,c	;volatile
 11970                           
 11971                           ;parcheggio.c: 148: LATBbits.LATB0 = 1;
 11972  0001DC  808A               	bsf	3978,0,c	;volatile
 11973                           
 11974                           ;parcheggio.c: 149: _delay((unsigned long)((15)*(16000000/4000000.0)));
 11975  0001DE  0E14               	movlw	20
 11976  0001E0                     i1u784_27:
 11977  0001E0  2EE8               	decfsz	wreg,f,c
 11978  0001E2  D7FE               	goto	i1u784_27
 11979                           
 11980                           ;parcheggio.c: 150: distance_error = 1;
 11981  0001E4  8445               	bsf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 11982                           
 11983                           ;parcheggio.c: 151: LATBbits.LATB0 = 0;
 11984  0001E6  908A               	bcf	3978,0,c	;volatile
 11985                           
 11986                           ;parcheggio.c: 152: TRISBbits.RB0 = 1;
 11987  0001E8  8093               	bsf	3987,0,c	;volatile
 11988                           
 11989                           ;parcheggio.c: 153: INTCONbits.INT0IF = 0;
 11990  0001EA  92F2               	bcf	intcon,1,c	;volatile
 11991                           
 11992                           ;parcheggio.c: 154: INTCONbits.INT0IE = 1;
 11993  0001EC  88F2               	bsf	intcon,4,c	;volatile
 11994                           
 11995                           ;parcheggio.c: 155: INTCONbits.TMR0IF = 0;
 11996  0001EE  94F2               	bcf	intcon,2,c	;volatile
 11997  0001F0                     i1l668:
 11998  0001F0  C021  FFF5         	movff	??_ISR_Bassa+20,tablat
 11999  0001F4  C020  FFF8         	movff	??_ISR_Bassa+19,tblptru
 12000  0001F8  C01F  FFF7         	movff	??_ISR_Bassa+18,tblptrh
 12001  0001FC  C01E  FFF6         	movff	??_ISR_Bassa+17,tblptrl
 12002  000200  C01D  FFF4         	movff	??_ISR_Bassa+16,prodh
 12003  000204  C01C  FFF3         	movff	??_ISR_Bassa+15,prodl
 12004  000208  C01B  FFDA         	movff	??_ISR_Bassa+14,fsr2h
 12005  00020C  C01A  FFD9         	movff	??_ISR_Bassa+13,fsr2l
 12006  000210  C019  FFE2         	movff	??_ISR_Bassa+12,fsr1h
 12007  000214  C018  FFE1         	movff	??_ISR_Bassa+11,fsr1l
 12008  000218  C017  FFEA         	movff	??_ISR_Bassa+10,fsr0h
 12009  00021C  C016  FFE9         	movff	??_ISR_Bassa+9,fsr0l
 12010  000220  C015  FFFB         	movff	??_ISR_Bassa+8,pclatu
 12011  000224  C014  FFFA         	movff	??_ISR_Bassa+7,pclath
 12012  000228  C013  FFE0         	movff	??_ISR_Bassa+6,bsr
 12013  00022C  C012  FFE8         	movff	??_ISR_Bassa+5,wreg
 12014  000230  C011  FFD8         	movff	??_ISR_Bassa+4,status
 12015  000234  9047               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 12016  000236  0010               	retfie	
 12017  000238                     __end_of_ISR_Bassa:
 12018                           	opt stack 0
 12019                           pclatu	equ	0xFFB
 12020                           pclath	equ	0xFFA
 12021                           tblptru	equ	0xFF8
 12022                           tblptrh	equ	0xFF7
 12023                           tblptrl	equ	0xFF6
 12024                           tablat	equ	0xFF5
 12025                           prodh	equ	0xFF4
 12026                           prodl	equ	0xFF3
 12027                           intcon	equ	0xFF2
 12028                           intcon2	equ	0xFF1
 12029                           postinc0	equ	0xFEE
 12030                           fsr0h	equ	0xFEA
 12031                           fsr0l	equ	0xFE9
 12032                           wreg	equ	0xFE8
 12033                           indf1	equ	0xFE7
 12034                           fsr1h	equ	0xFE2
 12035                           fsr1l	equ	0xFE1
 12036                           bsr	equ	0xFE0
 12037                           indf2	equ	0xFDF
 12038                           postinc2	equ	0xFDE
 12039                           postdec2	equ	0xFDD
 12040                           fsr2h	equ	0xFDA
 12041                           fsr2l	equ	0xFD9
 12042                           status	equ	0xFD8
 12043                           
 12044 ;; *************** function _CANreceiveMessage *****************
 12045 ;; Defined at:
 12046 ;;		line 528 in file "../../Scuola/Triennio/sistemi/4^/PIC/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 12047 ;; Parameters:    Size  Location     Type
 12048 ;;  msg             2    0[COMRAM] PTR struct .
 12049 ;;		 -> msg(15), 
 12050 ;; Auto vars:     Size  Location     Type
 12051 ;;  tamp            1   11[COMRAM] unsigned char 
 12052 ;;  error           1   10[COMRAM] unsigned char 
 12053 ;; Return value:  Size  Location     Type
 12054 ;;                  1    wreg      unsigned char 
 12055 ;; Registers used:
 12056 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12057 ;; Tracked objects:
 12058 ;;		On entry : 0/0
 12059 ;;		On exit  : 0/0
 12060 ;;		Unchanged: 0/0
 12061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12062 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12063 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12064 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12065 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12066 ;;Total ram usage:       12 bytes
 12067 ;; Hardware stack levels used:    1
 12068 ;; Hardware stack levels required when called:    2
 12069 ;; This function calls:
 12070 ;;		Nothing
 12071 ;; This function is called by:
 12072 ;;		_ISR_Bassa
 12073 ;; This function uses a non-reentrant model
 12074 ;;
 12075                           
 12076                           	psect	text27
 12077  001FC0                     __ptext27:
 12078                           	opt stack 0
 12079  001FC0                     _CANreceiveMessage:
 12080                           	opt stack 22
 12081                           
 12082                           ;inc\CANlib.h: 530: BYTE tamp;
 12083                           ;inc\CANlib.h: 531: BYTE error = 0;
 12084                           
 12085                           ;incstack = 0
 12086  001FC0  0E00               	movlw	0
 12087  001FC2  6E0B               	movwf	CANreceiveMessage@error,c
 12088                           
 12089                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 12090  001FC4  BE74               	btfsc	3956,7,c	;volatile
 12091                           
 12092                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 12093  001FC6  800B               	bsf	CANreceiveMessage@error,0,c
 12094                           
 12095                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 12096  001FC8  BC74               	btfsc	3956,6,c	;volatile
 12097                           
 12098                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 12099  001FCA  820B               	bsf	CANreceiveMessage@error,1,c
 12100                           
 12101                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 12102  001FCC  010F               	movlb	15	; () banked
 12103  001FCE  AF50               	btfss	80,7,b	;volatile
 12104  001FD0  D143               	goto	i1l404
 12105                           
 12106                           ; BSR set to: 15
 12107                           ;inc\CANlib.h: 541: {
 12108                           ;inc\CANlib.h: 542: msg->identifier = 0;
 12109  001FD2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12110  001FD6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12111  001FDA  6ADE               	clrf	postinc2,c
 12112  001FDC  6ADE               	clrf	postinc2,c
 12113  001FDE  6ADE               	clrf	postinc2,c
 12114  001FE0  6ADD               	clrf	postdec2,c
 12115                           
 12116                           ; BSR set to: 15
 12117                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 12118  001FE2  EE20 F004          	lfsr	2,4
 12119  001FE6  5001               	movf	CANreceiveMessage@msg,w,c
 12120  001FE8  26D9               	addwf	fsr2l,f,c
 12121  001FEA  5002               	movf	CANreceiveMessage@msg+1,w,c
 12122  001FEC  22DA               	addwfc	fsr2h,f,c
 12123  001FEE  CF56 FFDF          	movff	3926,indf2	;volatile
 12124                           
 12125                           ; BSR set to: 15
 12126                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 12127  001FF2  EE20 F005          	lfsr	2,5
 12128  001FF6  5001               	movf	CANreceiveMessage@msg,w,c
 12129  001FF8  26D9               	addwf	fsr2l,f,c
 12130  001FFA  5002               	movf	CANreceiveMessage@msg+1,w,c
 12131  001FFC  22DA               	addwfc	fsr2h,f,c
 12132  001FFE  CF57 FFDF          	movff	3927,indf2	;volatile
 12133                           
 12134                           ; BSR set to: 15
 12135                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 12136  002002  EE20 F006          	lfsr	2,6
 12137  002006  5001               	movf	CANreceiveMessage@msg,w,c
 12138  002008  26D9               	addwf	fsr2l,f,c
 12139  00200A  5002               	movf	CANreceiveMessage@msg+1,w,c
 12140  00200C  22DA               	addwfc	fsr2h,f,c
 12141  00200E  CF58 FFDF          	movff	3928,indf2	;volatile
 12142                           
 12143                           ; BSR set to: 15
 12144                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 12145  002012  EE20 F007          	lfsr	2,7
 12146  002016  5001               	movf	CANreceiveMessage@msg,w,c
 12147  002018  26D9               	addwf	fsr2l,f,c
 12148  00201A  5002               	movf	CANreceiveMessage@msg+1,w,c
 12149  00201C  22DA               	addwfc	fsr2h,f,c
 12150  00201E  CF59 FFDF          	movff	3929,indf2	;volatile
 12151                           
 12152                           ; BSR set to: 15
 12153                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 12154  002022  EE20 F008          	lfsr	2,8
 12155  002026  5001               	movf	CANreceiveMessage@msg,w,c
 12156  002028  26D9               	addwf	fsr2l,f,c
 12157  00202A  5002               	movf	CANreceiveMessage@msg+1,w,c
 12158  00202C  22DA               	addwfc	fsr2h,f,c
 12159  00202E  CF5A FFDF          	movff	3930,indf2	;volatile
 12160                           
 12161                           ; BSR set to: 15
 12162                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 12163  002032  EE20 F009          	lfsr	2,9
 12164  002036  5001               	movf	CANreceiveMessage@msg,w,c
 12165  002038  26D9               	addwf	fsr2l,f,c
 12166  00203A  5002               	movf	CANreceiveMessage@msg+1,w,c
 12167  00203C  22DA               	addwfc	fsr2h,f,c
 12168  00203E  CF5B FFDF          	movff	3931,indf2	;volatile
 12169                           
 12170                           ; BSR set to: 15
 12171                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 12172  002042  EE20 F00A          	lfsr	2,10
 12173  002046  5001               	movf	CANreceiveMessage@msg,w,c
 12174  002048  26D9               	addwf	fsr2l,f,c
 12175  00204A  5002               	movf	CANreceiveMessage@msg+1,w,c
 12176  00204C  22DA               	addwfc	fsr2h,f,c
 12177  00204E  CF5C FFDF          	movff	3932,indf2	;volatile
 12178                           
 12179                           ; BSR set to: 15
 12180                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 12181  002052  EE20 F00B          	lfsr	2,11
 12182  002056  5001               	movf	CANreceiveMessage@msg,w,c
 12183  002058  26D9               	addwf	fsr2l,f,c
 12184  00205A  5002               	movf	CANreceiveMessage@msg+1,w,c
 12185  00205C  22DA               	addwfc	fsr2h,f,c
 12186  00205E  CF5D FFDF          	movff	3933,indf2	;volatile
 12187                           
 12188                           ; BSR set to: 15
 12189                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 12190  002062  EE20 F00E          	lfsr	2,14
 12191  002066  5001               	movf	CANreceiveMessage@msg,w,c
 12192  002068  26D9               	addwf	fsr2l,f,c
 12193  00206A  5002               	movf	CANreceiveMessage@msg+1,w,c
 12194  00206C  22DA               	addwfc	fsr2h,f,c
 12195  00206E  010F               	movlb	15	; () banked
 12196  002070  AD55               	btfss	85,6,b	;volatile
 12197  002072  D002               	goto	i1u612_20
 12198  002074  0E01               	movlw	1
 12199  002076  D001               	goto	i1u612_26
 12200  002078                     i1u612_20:
 12201  002078  0E00               	movlw	0
 12202  00207A                     i1u612_26:
 12203  00207A  6EDF               	movwf	indf2,c
 12204                           
 12205                           ; BSR set to: 15
 12206                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 12207  00207C  EE20 F00D          	lfsr	2,13
 12208  002080  5001               	movf	CANreceiveMessage@msg,w,c
 12209  002082  26D9               	addwf	fsr2l,f,c
 12210  002084  5002               	movf	CANreceiveMessage@msg+1,w,c
 12211  002086  22DA               	addwfc	fsr2h,f,c
 12212  002088  010F               	movlb	15	; () banked
 12213  00208A  5155               	movf	85,w,b	;volatile
 12214  00208C  0B0F               	andlw	15
 12215  00208E  6EDF               	movwf	indf2,c
 12216                           
 12217                           ; BSR set to: 15
 12218                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 12219  002090  EE20 F00C          	lfsr	2,12
 12220  002094  5001               	movf	CANreceiveMessage@msg,w,c
 12221  002096  26D9               	addwf	fsr2l,f,c
 12222  002098  5002               	movf	CANreceiveMessage@msg+1,w,c
 12223  00209A  22DA               	addwfc	fsr2h,f,c
 12224  00209C  010F               	movlb	15	; () banked
 12225  00209E  A752               	btfss	82,3,b	;volatile
 12226  0020A0  D002               	goto	i1u613_20
 12227  0020A2  0E01               	movlw	1
 12228  0020A4  D001               	goto	i1u613_26
 12229  0020A6                     i1u613_20:
 12230  0020A6  0E00               	movlw	0
 12231  0020A8                     i1u613_26:
 12232  0020A8  6EDF               	movwf	indf2,c
 12233                           
 12234                           ; BSR set to: 15
 12235                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 12236  0020AA  010F               	movlb	15	; () banked
 12237  0020AC  B752               	btfsc	82,3,b	;volatile
 12238  0020AE  D044               	goto	i1l4953
 12239                           
 12240                           ; BSR set to: 15
 12241                           ;inc\CANlib.h: 559: {
 12242                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 12243  0020B0  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 12244  0020B4  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 12245  0020B6  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 12246  0020B8  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 12247  0020BA  0E03               	movlw	3
 12248  0020BC                     i1u615_25:
 12249  0020BC  90D8               	bcf	status,0,c
 12250  0020BE  3603               	rlcf	??_CANreceiveMessage,f,c
 12251  0020C0  3604               	rlcf	??_CANreceiveMessage+1,f,c
 12252  0020C2  3605               	rlcf	??_CANreceiveMessage+2,f,c
 12253  0020C4  3606               	rlcf	??_CANreceiveMessage+3,f,c
 12254  0020C6  2EE8               	decfsz	wreg,f,c
 12255  0020C8  D7F9               	goto	i1u615_25
 12256  0020CA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12257  0020CE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12258  0020D2  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 12259  0020D6  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 12260  0020DA  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 12261  0020DE  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 12262                           
 12263                           ; BSR set to: 15
 12264                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 12265  0020E2  010F               	movlb	15	; () banked
 12266  0020E4  3952               	swapf	82,w,b	;volatile
 12267  0020E6  42E8               	rrncf	wreg,f,c
 12268  0020E8  0B07               	andlw	7
 12269  0020EA  0B07               	andlw	7
 12270  0020EC  6E0C               	movwf	CANreceiveMessage@tamp,c
 12271                           
 12272                           ; BSR set to: 15
 12273                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 12274  0020EE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12275  0020F2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12276  0020F6  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 12277  0020FA  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 12278  0020FE  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 12279  002102  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 12280  002106  500C               	movf	CANreceiveMessage@tamp,w,c
 12281  002108  2403               	addwf	??_CANreceiveMessage,w,c
 12282  00210A  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 12283  00210C  0E00               	movlw	0
 12284  00210E  2004               	addwfc	??_CANreceiveMessage+1,w,c
 12285  002110  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 12286  002112  0E00               	movlw	0
 12287  002114  2005               	addwfc	??_CANreceiveMessage+2,w,c
 12288  002116  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 12289  002118  0E00               	movlw	0
 12290  00211A  2006               	addwfc	??_CANreceiveMessage+3,w,c
 12291  00211C  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 12292  00211E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12293  002122  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12294  002126  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 12295  00212A  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 12296  00212E  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 12297  002132  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 12298                           
 12299                           ;inc\CANlib.h: 563: }
 12300  002136  D08D               	goto	i1l4979
 12301  002138                     i1l4953:
 12302                           
 12303                           ; BSR set to: 15
 12304                           ;inc\CANlib.h: 564: else
 12305                           ;inc\CANlib.h: 565: {
 12306                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 12307  002138  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
 12308  00213C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 12309  00213E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 12310  002140  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 12311  002142  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12312  002146  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12313  00214A  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 12314  00214E  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 12315  002152  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 12316  002156  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 12317                           
 12318                           ; BSR set to: 15
 12319                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 12320  00215A  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
 12321  00215E  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 12322  002160  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 12323  002162  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 12324  002164  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 12325  002168  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 12326  00216C  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 12327  002170  6A03               	clrf	??_CANreceiveMessage,c
 12328  002172  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12329  002176  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12330  00217A  5003               	movf	??_CANreceiveMessage,w,c
 12331  00217C  26DE               	addwf	postinc2,f,c
 12332  00217E  5004               	movf	??_CANreceiveMessage+1,w,c
 12333  002180  22DE               	addwfc	postinc2,f,c
 12334  002182  5005               	movf	??_CANreceiveMessage+2,w,c
 12335  002184  22DE               	addwfc	postinc2,f,c
 12336  002186  5006               	movf	??_CANreceiveMessage+3,w,c
 12337  002188  22DE               	addwfc	postinc2,f,c
 12338                           
 12339                           ; BSR set to: 15
 12340                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 12341  00218A  010F               	movlb	15	; () banked
 12342  00218C  A152               	btfss	82,0,b	;volatile
 12343  00218E  D00C               	goto	i1l4961
 12344                           
 12345                           ; BSR set to: 15
 12346                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 12347  002190  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12348  002194  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12349  002198  0E00               	movlw	0
 12350  00219A  12DE               	iorwf	postinc2,f,c
 12351  00219C  0E00               	movlw	0
 12352  00219E  12DE               	iorwf	postinc2,f,c
 12353  0021A0  0E01               	movlw	1
 12354  0021A2  12DE               	iorwf	postinc2,f,c
 12355  0021A4  0E00               	movlw	0
 12356  0021A6  12DE               	iorwf	postinc2,f,c
 12357  0021A8                     i1l4961:
 12358                           
 12359                           ; BSR set to: 15
 12360                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 12361  0021A8  010F               	movlb	15	; () banked
 12362  0021AA  A352               	btfss	82,1,b	;volatile
 12363  0021AC  D00C               	goto	i1l4965
 12364                           
 12365                           ; BSR set to: 15
 12366                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 12367  0021AE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12368  0021B2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12369  0021B6  0E00               	movlw	0
 12370  0021B8  12DE               	iorwf	postinc2,f,c
 12371  0021BA  0E00               	movlw	0
 12372  0021BC  12DE               	iorwf	postinc2,f,c
 12373  0021BE  0E02               	movlw	2
 12374  0021C0  12DE               	iorwf	postinc2,f,c
 12375  0021C2  0E00               	movlw	0
 12376  0021C4  12DE               	iorwf	postinc2,f,c
 12377  0021C6                     i1l4965:
 12378                           
 12379                           ; BSR set to: 15
 12380                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 12381  0021C6  010F               	movlb	15	; () banked
 12382  0021C8  AB52               	btfss	82,5,b	;volatile
 12383  0021CA  D00C               	goto	i1l4969
 12384                           
 12385                           ; BSR set to: 15
 12386                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 12387  0021CC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12388  0021D0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12389  0021D4  0E00               	movlw	0
 12390  0021D6  12DE               	iorwf	postinc2,f,c
 12391  0021D8  0E00               	movlw	0
 12392  0021DA  12DE               	iorwf	postinc2,f,c
 12393  0021DC  0E04               	movlw	4
 12394  0021DE  12DE               	iorwf	postinc2,f,c
 12395  0021E0  0E00               	movlw	0
 12396  0021E2  12DE               	iorwf	postinc2,f,c
 12397  0021E4                     i1l4969:
 12398                           
 12399                           ; BSR set to: 15
 12400                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 12401  0021E4  010F               	movlb	15	; () banked
 12402  0021E6  AD52               	btfss	82,6,b	;volatile
 12403  0021E8  D00C               	goto	i1l4973
 12404                           
 12405                           ; BSR set to: 15
 12406                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 12407  0021EA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12408  0021EE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12409  0021F2  0E00               	movlw	0
 12410  0021F4  12DE               	iorwf	postinc2,f,c
 12411  0021F6  0E00               	movlw	0
 12412  0021F8  12DE               	iorwf	postinc2,f,c
 12413  0021FA  0E08               	movlw	8
 12414  0021FC  12DE               	iorwf	postinc2,f,c
 12415  0021FE  0E00               	movlw	0
 12416  002200  12DE               	iorwf	postinc2,f,c
 12417  002202                     i1l4973:
 12418                           
 12419                           ; BSR set to: 15
 12420                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 12421  002202  010F               	movlb	15	; () banked
 12422  002204  AF52               	btfss	82,7,b	;volatile
 12423  002206  D00C               	goto	i1l4977
 12424                           
 12425                           ; BSR set to: 15
 12426                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 12427  002208  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12428  00220C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12429  002210  0E00               	movlw	0
 12430  002212  12DE               	iorwf	postinc2,f,c
 12431  002214  0E00               	movlw	0
 12432  002216  12DE               	iorwf	postinc2,f,c
 12433  002218  0E10               	movlw	16
 12434  00221A  12DE               	iorwf	postinc2,f,c
 12435  00221C  0E00               	movlw	0
 12436  00221E  12DE               	iorwf	postinc2,f,c
 12437  002220                     i1l4977:
 12438                           
 12439                           ; BSR set to: 15
 12440                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 12441  002220  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 12442  002224  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 12443  002226  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 12444  002228  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 12445  00222A  0E15               	movlw	21
 12446  00222C                     i1u621_25:
 12447  00222C  90D8               	bcf	status,0,c
 12448  00222E  3603               	rlcf	??_CANreceiveMessage,f,c
 12449  002230  3604               	rlcf	??_CANreceiveMessage+1,f,c
 12450  002232  3605               	rlcf	??_CANreceiveMessage+2,f,c
 12451  002234  3606               	rlcf	??_CANreceiveMessage+3,f,c
 12452  002236  2EE8               	decfsz	wreg,f,c
 12453  002238  D7F9               	goto	i1u621_25
 12454  00223A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12455  00223E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12456  002242  5003               	movf	??_CANreceiveMessage,w,c
 12457  002244  12DE               	iorwf	postinc2,f,c
 12458  002246  5004               	movf	??_CANreceiveMessage+1,w,c
 12459  002248  12DE               	iorwf	postinc2,f,c
 12460  00224A  5005               	movf	??_CANreceiveMessage+2,w,c
 12461  00224C  12DE               	iorwf	postinc2,f,c
 12462  00224E  5006               	movf	??_CANreceiveMessage+3,w,c
 12463  002250  12DE               	iorwf	postinc2,f,c
 12464  002252                     i1l4979:
 12465                           
 12466                           ; BSR set to: 15
 12467                           ;inc\CANlib.h: 581: }
 12468                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 12469  002252  010F               	movlb	15	; () banked
 12470  002254  9F50               	bcf	80,7,b	;volatile
 12471                           
 12472                           ; BSR set to: 15
 12473                           ;inc\CANlib.h: 584: return (error);
 12474                           ;	Return value of _CANreceiveMessage is never used
 12475  002256  0012               	return	
 12476  002258                     i1l404:
 12477                           
 12478                           ; BSR set to: 15
 12479                           ;inc\CANlib.h: 585: }
 12480                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 12481  002258  AE60               	btfss	3936,7,c	;volatile
 12482  00225A  0012               	return	
 12483                           
 12484                           ; BSR set to: 15
 12485                           ;inc\CANlib.h: 588: {
 12486                           ;inc\CANlib.h: 589: msg->identifier = 0;
 12487  00225C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12488  002260  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12489  002264  6ADE               	clrf	postinc2,c
 12490  002266  6ADE               	clrf	postinc2,c
 12491  002268  6ADE               	clrf	postinc2,c
 12492  00226A  6ADD               	clrf	postdec2,c
 12493                           
 12494                           ; BSR set to: 15
 12495                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 12496  00226C  EE20 F004          	lfsr	2,4
 12497  002270  5001               	movf	CANreceiveMessage@msg,w,c
 12498  002272  26D9               	addwf	fsr2l,f,c
 12499  002274  5002               	movf	CANreceiveMessage@msg+1,w,c
 12500  002276  22DA               	addwfc	fsr2h,f,c
 12501  002278  CF66 FFDF          	movff	3942,indf2	;volatile
 12502                           
 12503                           ; BSR set to: 15
 12504                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 12505  00227C  EE20 F005          	lfsr	2,5
 12506  002280  5001               	movf	CANreceiveMessage@msg,w,c
 12507  002282  26D9               	addwf	fsr2l,f,c
 12508  002284  5002               	movf	CANreceiveMessage@msg+1,w,c
 12509  002286  22DA               	addwfc	fsr2h,f,c
 12510  002288  CF67 FFDF          	movff	3943,indf2	;volatile
 12511                           
 12512                           ; BSR set to: 15
 12513                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 12514  00228C  EE20 F006          	lfsr	2,6
 12515  002290  5001               	movf	CANreceiveMessage@msg,w,c
 12516  002292  26D9               	addwf	fsr2l,f,c
 12517  002294  5002               	movf	CANreceiveMessage@msg+1,w,c
 12518  002296  22DA               	addwfc	fsr2h,f,c
 12519  002298  CF68 FFDF          	movff	3944,indf2	;volatile
 12520                           
 12521                           ; BSR set to: 15
 12522                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 12523  00229C  EE20 F007          	lfsr	2,7
 12524  0022A0  5001               	movf	CANreceiveMessage@msg,w,c
 12525  0022A2  26D9               	addwf	fsr2l,f,c
 12526  0022A4  5002               	movf	CANreceiveMessage@msg+1,w,c
 12527  0022A6  22DA               	addwfc	fsr2h,f,c
 12528  0022A8  CF69 FFDF          	movff	3945,indf2	;volatile
 12529                           
 12530                           ; BSR set to: 15
 12531                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 12532  0022AC  EE20 F008          	lfsr	2,8
 12533  0022B0  5001               	movf	CANreceiveMessage@msg,w,c
 12534  0022B2  26D9               	addwf	fsr2l,f,c
 12535  0022B4  5002               	movf	CANreceiveMessage@msg+1,w,c
 12536  0022B6  22DA               	addwfc	fsr2h,f,c
 12537  0022B8  CF6A FFDF          	movff	3946,indf2	;volatile
 12538                           
 12539                           ; BSR set to: 15
 12540                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 12541  0022BC  EE20 F009          	lfsr	2,9
 12542  0022C0  5001               	movf	CANreceiveMessage@msg,w,c
 12543  0022C2  26D9               	addwf	fsr2l,f,c
 12544  0022C4  5002               	movf	CANreceiveMessage@msg+1,w,c
 12545  0022C6  22DA               	addwfc	fsr2h,f,c
 12546  0022C8  CF6B FFDF          	movff	3947,indf2	;volatile
 12547                           
 12548                           ; BSR set to: 15
 12549                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 12550  0022CC  EE20 F00A          	lfsr	2,10
 12551  0022D0  5001               	movf	CANreceiveMessage@msg,w,c
 12552  0022D2  26D9               	addwf	fsr2l,f,c
 12553  0022D4  5002               	movf	CANreceiveMessage@msg+1,w,c
 12554  0022D6  22DA               	addwfc	fsr2h,f,c
 12555  0022D8  CF6C FFDF          	movff	3948,indf2	;volatile
 12556                           
 12557                           ; BSR set to: 15
 12558                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 12559  0022DC  EE20 F00B          	lfsr	2,11
 12560  0022E0  5001               	movf	CANreceiveMessage@msg,w,c
 12561  0022E2  26D9               	addwf	fsr2l,f,c
 12562  0022E4  5002               	movf	CANreceiveMessage@msg+1,w,c
 12563  0022E6  22DA               	addwfc	fsr2h,f,c
 12564  0022E8  CF6D FFDF          	movff	3949,indf2	;volatile
 12565                           
 12566                           ; BSR set to: 15
 12567                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 12568  0022EC  EE20 F00E          	lfsr	2,14
 12569  0022F0  5001               	movf	CANreceiveMessage@msg,w,c
 12570  0022F2  26D9               	addwf	fsr2l,f,c
 12571  0022F4  5002               	movf	CANreceiveMessage@msg+1,w,c
 12572  0022F6  22DA               	addwfc	fsr2h,f,c
 12573  0022F8  AC65               	btfss	3941,6,c	;volatile
 12574  0022FA  D002               	goto	i1u623_20
 12575  0022FC  0E01               	movlw	1
 12576  0022FE  D001               	goto	i1u623_26
 12577  002300                     i1u623_20:
 12578  002300  0E00               	movlw	0
 12579  002302                     i1u623_26:
 12580  002302  6EDF               	movwf	indf2,c
 12581                           
 12582                           ; BSR set to: 15
 12583                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 12584  002304  EE20 F00D          	lfsr	2,13
 12585  002308  5001               	movf	CANreceiveMessage@msg,w,c
 12586  00230A  26D9               	addwf	fsr2l,f,c
 12587  00230C  5002               	movf	CANreceiveMessage@msg+1,w,c
 12588  00230E  22DA               	addwfc	fsr2h,f,c
 12589  002310  5065               	movf	3941,w,c	;volatile
 12590  002312  0B0F               	andlw	15
 12591  002314  6EDF               	movwf	indf2,c
 12592                           
 12593                           ; BSR set to: 15
 12594                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 12595  002316  EE20 F00C          	lfsr	2,12
 12596  00231A  5001               	movf	CANreceiveMessage@msg,w,c
 12597  00231C  26D9               	addwf	fsr2l,f,c
 12598  00231E  5002               	movf	CANreceiveMessage@msg+1,w,c
 12599  002320  22DA               	addwfc	fsr2h,f,c
 12600  002322  A662               	btfss	3938,3,c	;volatile
 12601  002324  D002               	goto	i1u624_20
 12602  002326  0E01               	movlw	1
 12603  002328  D001               	goto	i1u624_26
 12604  00232A                     i1u624_20:
 12605  00232A  0E00               	movlw	0
 12606  00232C                     i1u624_26:
 12607  00232C  6EDF               	movwf	indf2,c
 12608                           
 12609                           ; BSR set to: 15
 12610                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 12611  00232E  B662               	btfsc	3938,3,c	;volatile
 12612  002330  D043               	goto	i1l5015
 12613                           
 12614                           ; BSR set to: 15
 12615                           ;inc\CANlib.h: 606: {
 12616                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 12617  002332  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 12618  002336  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 12619  002338  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 12620  00233A  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 12621  00233C  0E03               	movlw	3
 12622  00233E                     i1u626_25:
 12623  00233E  90D8               	bcf	status,0,c
 12624  002340  3603               	rlcf	??_CANreceiveMessage,f,c
 12625  002342  3604               	rlcf	??_CANreceiveMessage+1,f,c
 12626  002344  3605               	rlcf	??_CANreceiveMessage+2,f,c
 12627  002346  3606               	rlcf	??_CANreceiveMessage+3,f,c
 12628  002348  2EE8               	decfsz	wreg,f,c
 12629  00234A  D7F9               	goto	i1u626_25
 12630  00234C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12631  002350  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12632  002354  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 12633  002358  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 12634  00235C  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 12635  002360  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 12636                           
 12637                           ; BSR set to: 15
 12638                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 12639  002364  3862               	swapf	3938,w,c	;volatile
 12640  002366  42E8               	rrncf	wreg,f,c
 12641  002368  0B07               	andlw	7
 12642  00236A  0B07               	andlw	7
 12643  00236C  6E0C               	movwf	CANreceiveMessage@tamp,c
 12644                           
 12645                           ; BSR set to: 15
 12646                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 12647  00236E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12648  002372  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12649  002376  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 12650  00237A  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 12651  00237E  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 12652  002382  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 12653  002386  500C               	movf	CANreceiveMessage@tamp,w,c
 12654  002388  2403               	addwf	??_CANreceiveMessage,w,c
 12655  00238A  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 12656  00238C  0E00               	movlw	0
 12657  00238E  2004               	addwfc	??_CANreceiveMessage+1,w,c
 12658  002390  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 12659  002392  0E00               	movlw	0
 12660  002394  2005               	addwfc	??_CANreceiveMessage+2,w,c
 12661  002396  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 12662  002398  0E00               	movlw	0
 12663  00239A  2006               	addwfc	??_CANreceiveMessage+3,w,c
 12664  00239C  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 12665  00239E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12666  0023A2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12667  0023A6  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 12668  0023AA  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 12669  0023AE  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 12670  0023B2  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 12671                           
 12672                           ;inc\CANlib.h: 610: }
 12673  0023B6  D088               	goto	i1l5041
 12674  0023B8                     i1l5015:
 12675                           
 12676                           ; BSR set to: 15
 12677                           ;inc\CANlib.h: 611: else
 12678                           ;inc\CANlib.h: 612: {
 12679                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 12680  0023B8  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
 12681  0023BC  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 12682  0023BE  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 12683  0023C0  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 12684  0023C2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12685  0023C6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12686  0023CA  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 12687  0023CE  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 12688  0023D2  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 12689  0023D6  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 12690                           
 12691                           ; BSR set to: 15
 12692                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 12693  0023DA  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
 12694  0023DE  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 12695  0023E0  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 12696  0023E2  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 12697  0023E4  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 12698  0023E8  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 12699  0023EC  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 12700  0023F0  6A03               	clrf	??_CANreceiveMessage,c
 12701  0023F2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12702  0023F6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12703  0023FA  5003               	movf	??_CANreceiveMessage,w,c
 12704  0023FC  26DE               	addwf	postinc2,f,c
 12705  0023FE  5004               	movf	??_CANreceiveMessage+1,w,c
 12706  002400  22DE               	addwfc	postinc2,f,c
 12707  002402  5005               	movf	??_CANreceiveMessage+2,w,c
 12708  002404  22DE               	addwfc	postinc2,f,c
 12709  002406  5006               	movf	??_CANreceiveMessage+3,w,c
 12710  002408  22DE               	addwfc	postinc2,f,c
 12711                           
 12712                           ; BSR set to: 15
 12713                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 12714  00240A  A062               	btfss	3938,0,c	;volatile
 12715  00240C  D00C               	goto	i1l5023
 12716                           
 12717                           ; BSR set to: 15
 12718                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 12719  00240E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12720  002412  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12721  002416  0E00               	movlw	0
 12722  002418  12DE               	iorwf	postinc2,f,c
 12723  00241A  0E00               	movlw	0
 12724  00241C  12DE               	iorwf	postinc2,f,c
 12725  00241E  0E01               	movlw	1
 12726  002420  12DE               	iorwf	postinc2,f,c
 12727  002422  0E00               	movlw	0
 12728  002424  12DE               	iorwf	postinc2,f,c
 12729  002426                     i1l5023:
 12730                           
 12731                           ; BSR set to: 15
 12732                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 12733  002426  A262               	btfss	3938,1,c	;volatile
 12734  002428  D00C               	goto	i1l5027
 12735                           
 12736                           ; BSR set to: 15
 12737                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 12738  00242A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12739  00242E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12740  002432  0E00               	movlw	0
 12741  002434  12DE               	iorwf	postinc2,f,c
 12742  002436  0E00               	movlw	0
 12743  002438  12DE               	iorwf	postinc2,f,c
 12744  00243A  0E02               	movlw	2
 12745  00243C  12DE               	iorwf	postinc2,f,c
 12746  00243E  0E00               	movlw	0
 12747  002440  12DE               	iorwf	postinc2,f,c
 12748  002442                     i1l5027:
 12749                           
 12750                           ; BSR set to: 15
 12751                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 12752  002442  AA62               	btfss	3938,5,c	;volatile
 12753  002444  D00C               	goto	i1l5031
 12754                           
 12755                           ; BSR set to: 15
 12756                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 12757  002446  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12758  00244A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12759  00244E  0E00               	movlw	0
 12760  002450  12DE               	iorwf	postinc2,f,c
 12761  002452  0E00               	movlw	0
 12762  002454  12DE               	iorwf	postinc2,f,c
 12763  002456  0E04               	movlw	4
 12764  002458  12DE               	iorwf	postinc2,f,c
 12765  00245A  0E00               	movlw	0
 12766  00245C  12DE               	iorwf	postinc2,f,c
 12767  00245E                     i1l5031:
 12768                           
 12769                           ; BSR set to: 15
 12770                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 12771  00245E  AC62               	btfss	3938,6,c	;volatile
 12772  002460  D00C               	goto	i1l5035
 12773                           
 12774                           ; BSR set to: 15
 12775                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 12776  002462  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12777  002466  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12778  00246A  0E00               	movlw	0
 12779  00246C  12DE               	iorwf	postinc2,f,c
 12780  00246E  0E00               	movlw	0
 12781  002470  12DE               	iorwf	postinc2,f,c
 12782  002472  0E08               	movlw	8
 12783  002474  12DE               	iorwf	postinc2,f,c
 12784  002476  0E00               	movlw	0
 12785  002478  12DE               	iorwf	postinc2,f,c
 12786  00247A                     i1l5035:
 12787                           
 12788                           ; BSR set to: 15
 12789                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 12790  00247A  AE62               	btfss	3938,7,c	;volatile
 12791  00247C  D00C               	goto	i1l5039
 12792                           
 12793                           ; BSR set to: 15
 12794                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 12795  00247E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12796  002482  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12797  002486  0E00               	movlw	0
 12798  002488  12DE               	iorwf	postinc2,f,c
 12799  00248A  0E00               	movlw	0
 12800  00248C  12DE               	iorwf	postinc2,f,c
 12801  00248E  0E10               	movlw	16
 12802  002490  12DE               	iorwf	postinc2,f,c
 12803  002492  0E00               	movlw	0
 12804  002494  12DE               	iorwf	postinc2,f,c
 12805  002496                     i1l5039:
 12806                           
 12807                           ; BSR set to: 15
 12808                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 12809  002496  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 12810  00249A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 12811  00249C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 12812  00249E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 12813  0024A0  0E15               	movlw	21
 12814  0024A2                     i1u632_25:
 12815  0024A2  90D8               	bcf	status,0,c
 12816  0024A4  3603               	rlcf	??_CANreceiveMessage,f,c
 12817  0024A6  3604               	rlcf	??_CANreceiveMessage+1,f,c
 12818  0024A8  3605               	rlcf	??_CANreceiveMessage+2,f,c
 12819  0024AA  3606               	rlcf	??_CANreceiveMessage+3,f,c
 12820  0024AC  2EE8               	decfsz	wreg,f,c
 12821  0024AE  D7F9               	goto	i1u632_25
 12822  0024B0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12823  0024B4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12824  0024B8  5003               	movf	??_CANreceiveMessage,w,c
 12825  0024BA  12DE               	iorwf	postinc2,f,c
 12826  0024BC  5004               	movf	??_CANreceiveMessage+1,w,c
 12827  0024BE  12DE               	iorwf	postinc2,f,c
 12828  0024C0  5005               	movf	??_CANreceiveMessage+2,w,c
 12829  0024C2  12DE               	iorwf	postinc2,f,c
 12830  0024C4  5006               	movf	??_CANreceiveMessage+3,w,c
 12831  0024C6  12DE               	iorwf	postinc2,f,c
 12832  0024C8                     i1l5041:
 12833                           
 12834                           ; BSR set to: 15
 12835                           ;inc\CANlib.h: 629: }
 12836                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 12837  0024C8  9E60               	bcf	3936,7,c	;volatile
 12838                           
 12839                           ; BSR set to: 15
 12840                           ;inc\CANlib.h: 632: return (error);
 12841                           ;	Return value of _CANreceiveMessage is never used
 12842  0024CA  0012               	return	
 12843  0024CC                     __end_of_CANreceiveMessage:
 12844                           	opt stack 0
 12845                           pclatu	equ	0xFFB
 12846                           pclath	equ	0xFFA
 12847                           tblptru	equ	0xFF8
 12848                           tblptrh	equ	0xFF7
 12849                           tblptrl	equ	0xFF6
 12850                           tablat	equ	0xFF5
 12851                           prodh	equ	0xFF4
 12852                           prodl	equ	0xFF3
 12853                           intcon	equ	0xFF2
 12854                           intcon2	equ	0xFF1
 12855                           postinc0	equ	0xFEE
 12856                           fsr0h	equ	0xFEA
 12857                           fsr0l	equ	0xFE9
 12858                           wreg	equ	0xFE8
 12859                           indf1	equ	0xFE7
 12860                           fsr1h	equ	0xFE2
 12861                           fsr1l	equ	0xFE1
 12862                           bsr	equ	0xFE0
 12863                           indf2	equ	0xFDF
 12864                           postinc2	equ	0xFDE
 12865                           postdec2	equ	0xFDD
 12866                           fsr2h	equ	0xFDA
 12867                           fsr2l	equ	0xFD9
 12868                           status	equ	0xFD8
 12869                           
 12870 ;; *************** function _ISR_Alta *****************
 12871 ;; Defined at:
 12872 ;;		line 71 in file "parcheggio.c"
 12873 ;; Parameters:    Size  Location     Type
 12874 ;;		None
 12875 ;; Auto vars:     Size  Location     Type
 12876 ;;		None
 12877 ;; Return value:  Size  Location     Type
 12878 ;;		None               void
 12879 ;; Registers used:
 12880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12881 ;; Tracked objects:
 12882 ;;		On entry : 0/0
 12883 ;;		On exit  : 0/0
 12884 ;;		Unchanged: 0/0
 12885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12888 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12889 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12890 ;;Total ram usage:       16 bytes
 12891 ;; Hardware stack levels used:    1
 12892 ;; Hardware stack levels required when called:    1
 12893 ;; This function calls:
 12894 ;;		___lwdiv
 12895 ;; This function is called by:
 12896 ;;		Interrupt level 2
 12897 ;; This function uses a non-reentrant model
 12898 ;;
 12899                           
 12900                           	psect	intcode
 12901  000008                     __pintcode:
 12902                           	opt stack 0
 12903  000008                     _ISR_Alta:
 12904                           	opt stack 22
 12905                           
 12906                           ; BSR set to: 15
 12907                           ;incstack = 0
 12908  000008  8247               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 12909  00000A  CFFA F069          	movff	pclath,??_ISR_Alta+2
 12910  00000E  CFFB F06A          	movff	pclatu,??_ISR_Alta+3
 12911  000012  EFBC  F024         	goto	int_func
 12912                           pclatu	equ	0xFFB
 12913                           pclath	equ	0xFFA
 12914                           tblptru	equ	0xFF8
 12915                           tblptrh	equ	0xFF7
 12916                           tblptrl	equ	0xFF6
 12917                           tablat	equ	0xFF5
 12918                           prodh	equ	0xFF4
 12919                           prodl	equ	0xFF3
 12920                           intcon	equ	0xFF2
 12921                           intcon2	equ	0xFF1
 12922                           postinc0	equ	0xFEE
 12923                           fsr0h	equ	0xFEA
 12924                           fsr0l	equ	0xFE9
 12925                           wreg	equ	0xFE8
 12926                           indf1	equ	0xFE7
 12927                           fsr1h	equ	0xFE2
 12928                           fsr1l	equ	0xFE1
 12929                           bsr	equ	0xFE0
 12930                           indf2	equ	0xFDF
 12931                           postinc2	equ	0xFDE
 12932                           postdec2	equ	0xFDD
 12933                           fsr2h	equ	0xFDA
 12934                           fsr2l	equ	0xFD9
 12935                           status	equ	0xFD8
 12936                           
 12937                           	psect	intcode_body
 12938  004978                     __pintcode_body:
 12939                           	opt stack 22
 12940  004978                     int_func:
 12941                           	opt stack 22
 12942  004978  CFE9 F06B          	movff	fsr0l,??_ISR_Alta+4
 12943  00497C  CFEA F06C          	movff	fsr0h,??_ISR_Alta+5
 12944  004980  CFE1 F06D          	movff	fsr1l,??_ISR_Alta+6
 12945  004984  CFE2 F06E          	movff	fsr1h,??_ISR_Alta+7
 12946  004988  CFD9 F06F          	movff	fsr2l,??_ISR_Alta+8
 12947  00498C  CFDA F070          	movff	fsr2h,??_ISR_Alta+9
 12948  004990  CFF3 F071          	movff	prodl,??_ISR_Alta+10
 12949  004994  CFF4 F072          	movff	prodh,??_ISR_Alta+11
 12950  004998  CFF6 F073          	movff	tblptrl,??_ISR_Alta+12
 12951  00499C  CFF7 F074          	movff	tblptrh,??_ISR_Alta+13
 12952  0049A0  CFF8 F075          	movff	tblptru,??_ISR_Alta+14
 12953  0049A4  CFF5 F076          	movff	tablat,??_ISR_Alta+15
 12954                           
 12955                           ;parcheggio.c: 73: if (INTCON2bits.INTEDG0 == 1) {
 12956  0049A8  ACF1               	btfss	intcon2,6,c	;volatile
 12957  0049AA  D007               	goto	i2l648
 12958                           
 12959                           ;parcheggio.c: 74: INTCON2bits.INTEDG0 = 0;
 12960  0049AC  9CF1               	bcf	intcon2,6,c	;volatile
 12961                           
 12962                           ;parcheggio.c: 75: TMR3H = 0;
 12963  0049AE  0E00               	movlw	0
 12964  0049B0  6EB3               	movwf	4019,c	;volatile
 12965                           
 12966                           ;parcheggio.c: 76: TMR3L = 0;
 12967  0049B2  0E00               	movlw	0
 12968  0049B4  6EB2               	movwf	4018,c	;volatile
 12969                           
 12970                           ;parcheggio.c: 77: distance_error = 0;
 12971  0049B6  9445               	bcf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 12972                           
 12973                           ;parcheggio.c: 78: } else {
 12974  0049B8  D030               	goto	i2l6097
 12975  0049BA                     i2l648:
 12976                           
 12977                           ;parcheggio.c: 79: gianni = TMR3H;
 12978  0049BA  CFB3 F044          	movff	4019,_gianni	;volatile
 12979                           
 12980                           ;parcheggio.c: 80: asus = TMR3L;
 12981  0049BE  CFB2 F043          	movff	4018,_asus	;volatile
 12982                           
 12983                           ;parcheggio.c: 81: timerValue2 = gianni;
 12984  0049C2  C044  F040         	movff	_gianni,_timerValue2	;volatile
 12985  0049C6  6A41               	clrf	_timerValue2+1,c	;volatile
 12986                           
 12987                           ;parcheggio.c: 82: timerValue2 = ((timerValue2 << 8) | (asus));
 12988  0049C8  5040               	movf	_timerValue2,w,c	;volatile
 12989  0049CA  0100               	movlb	0	; () banked
 12990  0049CC  6F67               	movwf	??_ISR_Alta& (0+255),b
 12991  0049CE  5043               	movf	_asus,w,c	;volatile
 12992  0049D0  6E40               	movwf	_timerValue2,c	;volatile
 12993  0049D2  C067  F041         	movff	??_ISR_Alta,_timerValue2+1	;volatile
 12994                           
 12995                           ; BSR set to: 0
 12996                           ;parcheggio.c: 83: pulse_time = timerValue2 / 2;
 12997  0049D6  90D8               	bcf	status,0,c
 12998  0049D8  3041               	rrcf	_timerValue2+1,w,c	;volatile
 12999  0049DA  0100               	movlb	0	; () banked
 13000  0049DC  6F67               	movwf	??_ISR_Alta& (0+255),b
 13001  0049DE  3040               	rrcf	_timerValue2,w,c	;volatile
 13002  0049E0  6E3C               	movwf	_pulse_time,c	;volatile
 13003  0049E2  C067  F03D         	movff	??_ISR_Alta,_pulse_time+1	;volatile
 13004                           
 13005                           ; BSR set to: 0
 13006                           ;parcheggio.c: 84: sensor_distance[MUX_index] = pulse_time / 58;
 13007  0049E6  C03C  F060         	movff	_pulse_time,___lwdiv@dividend	;volatile
 13008  0049EA  C03D  F061         	movff	_pulse_time+1,___lwdiv@dividend+1	;volatile
 13009  0049EE  0E00               	movlw	0
 13010  0049F0  0100               	movlb	0	; () banked
 13011  0049F2  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 13012  0049F4  0E3A               	movlw	58
 13013  0049F6  6F62               	movwf	___lwdiv@divisor& (0+255),b
 13014  0049F8  EC8C  F025         	call	___lwdiv	;wreg free
 13015  0049FC  5042               	movf	_MUX_index,w,c	;volatile
 13016  0049FE  0D02               	mullw	2
 13017  004A00  0E24               	movlw	low _sensor_distance
 13018  004A02  24F3               	addwf	prodl,w,c
 13019  004A04  6ED9               	movwf	fsr2l,c
 13020  004A06  0E00               	movlw	high _sensor_distance
 13021  004A08  20F4               	addwfc	prodh,w,c
 13022  004A0A  6EDA               	movwf	fsr2h,c
 13023  004A0C  0100               	movlb	0	; () banked
 13024  004A0E  C060  FFDE         	movff	?___lwdiv,postinc2
 13025  004A12  0100               	movlb	0	; () banked
 13026  004A14  C061  FFDD         	movff	?___lwdiv+1,postdec2
 13027                           
 13028                           ; BSR set to: 0
 13029                           ;parcheggio.c: 85: INTCON2bits.INTEDG0 = 1;
 13030  004A18  8CF1               	bsf	intcon2,6,c	;volatile
 13031  004A1A                     i2l6097:
 13032                           
 13033                           ;parcheggio.c: 86: }
 13034                           ;parcheggio.c: 87: INTCONbits.INT0IF = 0;
 13035  004A1A  92F2               	bcf	intcon,1,c	;volatile
 13036  004A1C  C076  FFF5         	movff	??_ISR_Alta+15,tablat
 13037  004A20  C075  FFF8         	movff	??_ISR_Alta+14,tblptru
 13038  004A24  C074  FFF7         	movff	??_ISR_Alta+13,tblptrh
 13039  004A28  C073  FFF6         	movff	??_ISR_Alta+12,tblptrl
 13040  004A2C  C072  FFF4         	movff	??_ISR_Alta+11,prodh
 13041  004A30  C071  FFF3         	movff	??_ISR_Alta+10,prodl
 13042  004A34  C070  FFDA         	movff	??_ISR_Alta+9,fsr2h
 13043  004A38  C06F  FFD9         	movff	??_ISR_Alta+8,fsr2l
 13044  004A3C  C06E  FFE2         	movff	??_ISR_Alta+7,fsr1h
 13045  004A40  C06D  FFE1         	movff	??_ISR_Alta+6,fsr1l
 13046  004A44  C06C  FFEA         	movff	??_ISR_Alta+5,fsr0h
 13047  004A48  C06B  FFE9         	movff	??_ISR_Alta+4,fsr0l
 13048  004A4C  C06A  FFFB         	movff	??_ISR_Alta+3,pclatu
 13049  004A50  C069  FFFA         	movff	??_ISR_Alta+2,pclath
 13050  004A54  9247               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13051  004A56  0011               	retfie		f
 13052  004A58                     __end_of_ISR_Alta:
 13053                           	opt stack 0
 13054                           pclatu	equ	0xFFB
 13055                           pclath	equ	0xFFA
 13056                           tblptru	equ	0xFF8
 13057                           tblptrh	equ	0xFF7
 13058                           tblptrl	equ	0xFF6
 13059                           tablat	equ	0xFF5
 13060                           prodh	equ	0xFF4
 13061                           prodl	equ	0xFF3
 13062                           intcon	equ	0xFF2
 13063                           intcon2	equ	0xFF1
 13064                           postinc0	equ	0xFEE
 13065                           fsr0h	equ	0xFEA
 13066                           fsr0l	equ	0xFE9
 13067                           wreg	equ	0xFE8
 13068                           indf1	equ	0xFE7
 13069                           fsr1h	equ	0xFE2
 13070                           fsr1l	equ	0xFE1
 13071                           bsr	equ	0xFE0
 13072                           indf2	equ	0xFDF
 13073                           postinc2	equ	0xFDE
 13074                           postdec2	equ	0xFDD
 13075                           fsr2h	equ	0xFDA
 13076                           fsr2l	equ	0xFD9
 13077                           status	equ	0xFD8
 13078                           
 13079 ;; *************** function ___lwdiv *****************
 13080 ;; Defined at:
 13081 ;;		line 8 in file "P:\Programmi\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 13082 ;; Parameters:    Size  Location     Type
 13083 ;;  dividend        2    0[BANK0 ] unsigned int 
 13084 ;;  divisor         2    2[BANK0 ] unsigned int 
 13085 ;; Auto vars:     Size  Location     Type
 13086 ;;  quotient        2    5[BANK0 ] unsigned int 
 13087 ;;  counter         1    4[BANK0 ] unsigned char 
 13088 ;; Return value:  Size  Location     Type
 13089 ;;                  2    0[BANK0 ] unsigned int 
 13090 ;; Registers used:
 13091 ;;		wreg, status,2, status,0
 13092 ;; Tracked objects:
 13093 ;;		On entry : 0/0
 13094 ;;		On exit  : 0/0
 13095 ;;		Unchanged: 0/0
 13096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13097 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13098 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13100 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13101 ;;Total ram usage:        7 bytes
 13102 ;; Hardware stack levels used:    1
 13103 ;; This function calls:
 13104 ;;		Nothing
 13105 ;; This function is called by:
 13106 ;;		_ISR_Alta
 13107 ;; This function uses a non-reentrant model
 13108 ;;
 13109                           
 13110                           	psect	text29
 13111  004B18                     __ptext29:
 13112                           	opt stack 0
 13113  004B18                     ___lwdiv:
 13114                           	opt stack 22
 13115                           
 13116                           ;incstack = 0
 13117  004B18  0E00               	movlw	0
 13118  004B1A  0100               	movlb	0	; () banked
 13119  004B1C  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 13120  004B1E  0E00               	movlw	0
 13121  004B20  6F65               	movwf	___lwdiv@quotient& (0+255),b
 13122                           
 13123                           ; BSR set to: 0
 13124  004B22  0100               	movlb	0	; () banked
 13125  004B24  5162               	movf	___lwdiv@divisor& (0+255),w,b
 13126  004B26  0100               	movlb	0	; () banked
 13127  004B28  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 13128  004B2A  B4D8               	btfsc	status,2,c
 13129  004B2C  D02C               	goto	i2l1180
 13130                           
 13131                           ; BSR set to: 0
 13132  004B2E  0E01               	movlw	1
 13133  004B30  0100               	movlb	0	; () banked
 13134  004B32  6F64               	movwf	___lwdiv@counter& (0+255),b
 13135  004B34  D006               	goto	i2l6067
 13136  004B36                     i2l6065:
 13137                           
 13138                           ; BSR set to: 0
 13139  004B36  0100               	movlb	0	; () banked
 13140  004B38  90D8               	bcf	status,0,c
 13141  004B3A  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 13142  004B3C  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 13143  004B3E  0100               	movlb	0	; () banked
 13144  004B40  2B64               	incf	___lwdiv@counter& (0+255),f,b
 13145  004B42                     i2l6067:
 13146                           
 13147                           ; BSR set to: 0
 13148  004B42  0100               	movlb	0	; () banked
 13149  004B44  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 13150  004B46  D7F7               	goto	i2l6065
 13151  004B48                     i2l6069:
 13152                           
 13153                           ; BSR set to: 0
 13154  004B48  0100               	movlb	0	; () banked
 13155  004B4A  90D8               	bcf	status,0,c
 13156  004B4C  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 13157  004B4E  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 13158                           
 13159                           ; BSR set to: 0
 13160  004B50  0100               	movlb	0	; () banked
 13161  004B52  5162               	movf	___lwdiv@divisor& (0+255),w,b
 13162  004B54  0100               	movlb	0	; () banked
 13163  004B56  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 13164  004B58  0100               	movlb	0	; () banked
 13165  004B5A  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 13166  004B5C  0100               	movlb	0	; () banked
 13167  004B5E  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 13168  004B60  A0D8               	btfss	status,0,c
 13169  004B62  D00A               	goto	i2l6077
 13170                           
 13171                           ; BSR set to: 0
 13172  004B64  0100               	movlb	0	; () banked
 13173  004B66  5162               	movf	___lwdiv@divisor& (0+255),w,b
 13174  004B68  0100               	movlb	0	; () banked
 13175  004B6A  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 13176  004B6C  0100               	movlb	0	; () banked
 13177  004B6E  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 13178  004B70  0100               	movlb	0	; () banked
 13179  004B72  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 13180                           
 13181                           ; BSR set to: 0
 13182  004B74  0100               	movlb	0	; () banked
 13183  004B76  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 13184  004B78                     i2l6077:
 13185                           
 13186                           ; BSR set to: 0
 13187  004B78  0100               	movlb	0	; () banked
 13188  004B7A  90D8               	bcf	status,0,c
 13189  004B7C  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 13190  004B7E  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 13191                           
 13192                           ; BSR set to: 0
 13193  004B80  0100               	movlb	0	; () banked
 13194  004B82  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 13195  004B84  D7E1               	goto	i2l6069
 13196  004B86                     i2l1180:
 13197                           
 13198                           ; BSR set to: 0
 13199  004B86  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 13200  004B8A  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 13201                           
 13202                           ; BSR set to: 0
 13203  004B8E  0012               	return		;funcret
 13204  004B90                     __end_of___lwdiv:
 13205                           	opt stack 0
 13206                           pclatu	equ	0xFFB
 13207                           pclath	equ	0xFFA
 13208                           tblptru	equ	0xFF8
 13209                           tblptrh	equ	0xFF7
 13210                           tblptrl	equ	0xFF6
 13211                           tablat	equ	0xFF5
 13212                           prodh	equ	0xFF4
 13213                           prodl	equ	0xFF3
 13214                           intcon	equ	0xFF2
 13215                           intcon2	equ	0xFF1
 13216                           postinc0	equ	0xFEE
 13217                           fsr0h	equ	0xFEA
 13218                           fsr0l	equ	0xFE9
 13219                           wreg	equ	0xFE8
 13220                           indf1	equ	0xFE7
 13221                           fsr1h	equ	0xFE2
 13222                           fsr1l	equ	0xFE1
 13223                           bsr	equ	0xFE0
 13224                           indf2	equ	0xFDF
 13225                           postinc2	equ	0xFDE
 13226                           postdec2	equ	0xFDD
 13227                           fsr2h	equ	0xFDA
 13228                           fsr2l	equ	0xFD9
 13229                           status	equ	0xFD8
 13230                           pclatu	equ	0xFFB
 13231                           pclath	equ	0xFFA
 13232                           tblptru	equ	0xFF8
 13233                           tblptrh	equ	0xFF7
 13234                           tblptrl	equ	0xFF6
 13235                           tablat	equ	0xFF5
 13236                           prodh	equ	0xFF4
 13237                           prodl	equ	0xFF3
 13238                           intcon	equ	0xFF2
 13239                           intcon2	equ	0xFF1
 13240                           postinc0	equ	0xFEE
 13241                           fsr0h	equ	0xFEA
 13242                           fsr0l	equ	0xFE9
 13243                           wreg	equ	0xFE8
 13244                           indf1	equ	0xFE7
 13245                           fsr1h	equ	0xFE2
 13246                           fsr1l	equ	0xFE1
 13247                           bsr	equ	0xFE0
 13248                           indf2	equ	0xFDF
 13249                           postinc2	equ	0xFDE
 13250                           postdec2	equ	0xFDD
 13251                           fsr2h	equ	0xFDA
 13252                           fsr2l	equ	0xFD9
 13253                           status	equ	0xFD8
 13254                           
 13255                           	psect	param0
 13256  0000                     pclatu	equ	0xFFB
 13257                           pclath	equ	0xFFA
 13258                           tblptru	equ	0xFF8
 13259                           tblptrh	equ	0xFF7
 13260                           tblptrl	equ	0xFF6
 13261                           tablat	equ	0xFF5
 13262                           prodh	equ	0xFF4
 13263                           prodl	equ	0xFF3
 13264                           intcon	equ	0xFF2
 13265                           intcon2	equ	0xFF1
 13266                           postinc0	equ	0xFEE
 13267                           fsr0h	equ	0xFEA
 13268                           fsr0l	equ	0xFE9
 13269                           wreg	equ	0xFE8
 13270                           indf1	equ	0xFE7
 13271                           fsr1h	equ	0xFE2
 13272                           fsr1l	equ	0xFE1
 13273                           bsr	equ	0xFE0
 13274                           indf2	equ	0xFDF
 13275                           postinc2	equ	0xFDE
 13276                           postdec2	equ	0xFDD
 13277                           fsr2h	equ	0xFDA
 13278                           fsr2l	equ	0xFD9
 13279                           status	equ	0xFD8
 13280                           
 13281                           	psect	temp
 13282  000047                     btemp:
 13283                           	opt stack 0
 13284  000047                     	ds	1
 13285  0000                     int$flags	set	btemp
 13286                           pclatu	equ	0xFFB
 13287                           pclath	equ	0xFFA
 13288                           tblptru	equ	0xFF8
 13289                           tblptrh	equ	0xFF7
 13290                           tblptrl	equ	0xFF6
 13291                           tablat	equ	0xFF5
 13292                           prodh	equ	0xFF4
 13293                           prodl	equ	0xFF3
 13294                           intcon	equ	0xFF2
 13295                           intcon2	equ	0xFF1
 13296                           postinc0	equ	0xFEE
 13297                           fsr0h	equ	0xFEA
 13298                           fsr0l	equ	0xFE9
 13299                           wreg	equ	0xFE8
 13300                           indf1	equ	0xFE7
 13301                           fsr1h	equ	0xFE2
 13302                           fsr1l	equ	0xFE1
 13303                           bsr	equ	0xFE0
 13304                           indf2	equ	0xFDF
 13305                           postinc2	equ	0xFDE
 13306                           postdec2	equ	0xFDD
 13307                           fsr2h	equ	0xFDA
 13308                           fsr2l	equ	0xFD9
 13309                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    44
    Data        3
    BSS         127
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      70
    BANK0           160    113     136
    BANK1           256     47     120
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_speed(BANK1[8]), data_steering(BANK1[8]), data_brake(BANK1[8]), data(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    None.

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _park_search->___xxtofl
    _can_send->_CANsendMessage
    _sqrt->___fladd
    _atan->_eval_poly
    _fabs->___flneg
    ___flneg->___flmul
    _eval_poly->___fladd
    ___flmul->___fldiv
    ___fladd->___flneg
    ___flge->_fabs
    ___xxtofl->_abs
    ___fltol->___fldiv
    _configurazione->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask

Critical Paths under _ISR_Alta in BANK0

    _ISR_Alta->___lwdiv

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_parallelo
    _parallelo->_asin
    _asin->_atan
    _asin->_sqrt

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Alta in BANK3

    None.

Critical Paths under _ISR_Bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Alta in BANK4

    None.

Critical Paths under _ISR_Bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Alta in BANK5

    None.

Critical Paths under _ISR_Bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Alta in BANK6

    None.

Critical Paths under _ISR_Bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Alta in BANK7

    None.

Critical Paths under _ISR_Bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Alta in BANK8

    None.

Critical Paths under _ISR_Bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Alta in BANK9

    None.

Critical Paths under _ISR_Bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Alta in BANK10

    None.

Critical Paths under _ISR_Bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Alta in BANK11

    None.

Critical Paths under _ISR_Bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Alta in BANK12

    None.

Critical Paths under _ISR_Bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   64384
                    _can_interpreter
                     _configurazione
                          _parallelo
                       _park_routine
                        _park_search
 ---------------------------------------------------------------------------------
 (1) _park_search                                          2     2      0    4343
                                             41 BANK0      2     2      0
                       _CANisTxReady
                     _CANsendMessage
                           ___xxtofl
                                _abs
 ---------------------------------------------------------------------------------
 (1) _park_routine                                         0     0      0    3699
                           _can_send
 ---------------------------------------------------------------------------------
 (2) _can_send                                             0     0      0    3699
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    3675
                                             23 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _parallelo                                            2     2      0   50408
                                             45 BANK1      2     2      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _abs
                               _asin
                               _sqrt
 ---------------------------------------------------------------------------------
 (2) _asin                                                36    32      4   36836
                                             21 BANK1     24    20      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                               _atan
                               _fabs
                               _sqrt
 ---------------------------------------------------------------------------------
 (2) _sqrt                                                29    25      4    1467
                                             97 BANK0      8     4      4
                                              0 BANK1     21    21      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (3) _atan                                                21    17      4   21615
                                              0 BANK1     21    17      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                          _eval_poly
                               _fabs
 ---------------------------------------------------------------------------------
 (3) _fabs                                                 4     0      4    1005
                                             77 BANK0      4     0      4
                            ___flneg
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     681
                                             73 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           16     8      8    8041
                                             97 BANK0     16     8      8
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3231
                                             48 BANK0     25    17      8
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             20    12      8    4094
                                             77 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     882
                                             81 BANK0     12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2961
                                             23 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     194
                                             23 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     450
                                             27 BANK0     14    10      4
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     293
                                             48 BANK0     10     6      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _configurazione                                       0     0      0    5934
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             37 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      4     4      0       0
                                             23 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_Bassa                                           23    23      0    1251
                                             12 COMRAM    23    23      0
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (7) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR_Alta                                            16    16      0     395
                                              7 BANK0     16    16      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (9) ___lwdiv                                              7     3      4     395
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _can_interpreter
   _configurazione
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _parallelo
     ___fladd
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
       ___flneg (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
     ___fldiv
     ___flge
       _fabs (ARG)
         ___flneg
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
     ___flmul
       ___fldiv (ARG)
     ___fltol
       ___fldiv (ARG)
     ___xxtofl
       _abs (ARG)
     _abs
     _asin
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___flmul
         ___fldiv (ARG)
       ___flneg
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       _atan
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _eval_poly
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
         _fabs
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _fabs
         ___flneg
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
     _sqrt
       ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
       ___flneg (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
   _park_routine
     _can_send
       _CANisTxReady
       _CANsendMessage
   _park_search
     _CANisTxReady
     _CANsendMessage
     ___xxtofl
       _abs (ARG)
     _abs

 _ISR_Bassa (ROOT)
   _CANreceiveMessage

 _ISR_Alta (ROOT)
   ___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     2F      78       7       46.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     71      88       5       85.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     23      46       1       74.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     146      20        0.0%
DATA                 0      0     146       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Apr 18 18:19:23 2016

                ___fldiv@aexp 008F                  ___fldiv@bexp 008E                             _x 00D5  
                           _z 00D9          __end_of_CANSetFilter 1834                  ___fldiv@sign 0083  
                          bsr 000FE0                   __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                 __CFG_OSC$HS 000000                    _MUX_select 0100                           l501 168C  
                         l502 1690                           l430 37BE                           l503 169C  
                         l431 37C2                           l520 17E8                           l512 17A8  
                         l504 16A0                           l440 38CA                           l432 37CE  
                         l352 4358                           l360 1946                           l513 17AC  
                         l505 16AC                           l441 38D6                           l433 37D2  
                         l353 4362                           l361 18D6                           l514 17B8  
                         l506 16B0                           l442 38DA                           l434 37DE  
                         l426 379E                           l362 18E0                           l515 17BC  
                         l507 16BC                           l443 38E6                           l427 37A2  
                         l363 18EA                           l516 17C8                           l508 16C0  
                         l460 1232                           l444 38EA                           l428 37AE  
                         l372 1D3C                           l364 18F4                           l517 17CC  
                         l509 16CC                           l461 123E                           l445 38F6  
                         l437 38B6                           l429 37B2                           l373 1ACE  
                         l357 1AB8                           l518 17D8                           l470 1348  
                         l462 1242                           l438 38BA                           l550 4DB8  
                         l390 1DDE                           l382 1C88                           l374 1AD2  
                         l358 184A                           l519 17DC                           l471 134C  
                         l463 124E                           l439 38C6                           l391 1DE8  
                         l383 1C8C                           l375 1BCA                           l367 1A04  
                         l359 184E                           l480 1458                           l472 1358  
                         l464 1252                           l720 40CA                           l392 1DF2  
                         l384 1C98                           l376 1B5A                           l368 1A08  
                         l481 1464                           l473 135C                           l465 125E  
                         l457 121E                           l393 1DFC                           l377 1B64  
                         l369 1A14                           l490 1570                           l482 1468  
                         l474 1368                           l458 1222                           l378 1B6E  
                         l491 1574                           l483 1474                           l475 136C  
                         l459 122E                           l387 1D52                           l379 1B78  
                         l492 1580                           l484 1478                           l476 1378  
                         l468 1338                           l396 1F0C                           l388 1D56  
                         l493 1584                           l485 1484                           l469 133C  
                         l397 1F10                           l389 1E4E                           l494 1590  
                         l486 1488                           l398 1F1C                           l495 1594  
                         l487 1494                           l479 1454                           l496 15A0  
                         l497 15A4                           l498 15B0                           l690 4746  
                         l677 474A                           l779 4D90                           l980 45A2  
                         l973 4D24                  __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000  
                         _abs 4D6E                           _dir 0229                           _msg 011A  
                         prod 000FF3                           wreg 000FE8                  ___flmul@aexp 009D  
                ___flmul@bexp 00A2               ?_configurazione 0001                  ___flmul@sign 009C  
                ___flmul@temp 00A7                  ___flmul@prod 00A3                  __CFG_LVP$OFF 000000  
                ___fltol@exp1 0099                  __CFG_WDT$OFF 000000                          ?_abs 0077  
                        l1310 2CC4                          l1303 2A28                          l1320 2DD6  
                        l1312 2D32                          l1217 26AC                          l1234 2820  
                        l1218 26A0                          l1243 28B4                          l1219 266C  
                        l1360 4238                          l1352 41C4                          l1345 4118  
                        l1273 3412                          l1282 344A                          l1284 34B8  
                        l1276 33BA                          l4021 38FA                          l1359 4220  
                        l4203 13C2                          l4117 10D2                          l4045 0DEC  
                        l4231 1498                          l4135 118C                          l4063 0EA4  
                        l5111 46B0                          l4305 1716                          l4081 0F5E  
                        l5121 46F8                          l4163 1262                          l6003 39A0  
                        l4333 17EC                          l4237 14DE                          l5117 46C0  
                        l5109 4654                          l4271 15FA                          l6015 3ACE  
                        l4265 15B4                          l4169 12A8                          l4099 1018  
                        l6027 3BB0                          l4523 1E06                          l4371 18FE  
                        l4197 137C                          l5501 2852                          l5173 4DD4  
                        l5093 45F4                          l6125 4CE6                          l5511 2874  
                        l5407 25B0                          l4543 1F00                          l4447 1B82  
                        l4391 19F8                          l5601 2A50                          l4473 1C9C  
                        l5169 4DC0                          l4299 16D0                          l5507 2868  
                        l5451 2686                          l5371 250E                          l4467 1C7C  
                        l5099 4604                          l5541 291C                          l5517 2888  
                        l5437 25EC                          l5365 24EA                          l4549 1F20  
                        l4397 1A18                          l5711 3226                          l5551 294E  
                        l5527 28AE                          l5519 288E                          l5455 2690  
                        l5383 2544                          l5375 2518                          l3929 4DE6  
                        l4753 436E                          l4905 428A                          l5801 34B2  
                        l5705 3202                          l5545 293E                          l5537 290A  
                        l5473 270E                          l5465 26D0                          l5449 2680  
                        l3963 3712                          l3947 365C                          l4755 43B2  
                        l4747 4350                          l5811 3508                          l5731 3284  
                        l5715 3230                          l5475 2714                          l5483 2730  
                        l5395 257C                          l5643 2CAE                          l4749 4366  
                        l4845 4900                          l4829 4892                          l5725 3260  
                        l5557 2962                          l5549 294A                          l5493 2800  
                        l5389 2558                          l5573 29B6                          l4781 4ADE  
                        l4863 4966                          l4855 4930                          l5815 3536  
                        l5735 328E                          l5479 271E                          l5399 2586  
                        l5591 2A10                          l5575 29BC                          l5567 2992  
                        l4767 4A58                          l4857 4940                          l4849 4914  
                        l4881 4158                          l4873 4128                          l5825 357C  
                        l5817 354A                          l5673 2DA8                          l5649 2CD8  
                        l5593 2A16                          l5585 29EC                          l5577 29CE  
                        l4777 4AA6                          l3995 3828                          l4859 494A  
                        l4891 4202                          l4883 4168                          l5827 3580  
                        l5819 356C                          l5755 3310                          l5747 32E2  
                        l5851 44B0                          l5683 2DF6                          l5675 2DBC  
                        l5659 2D2C                          l5843 47AA                          l5931 3038  
                        l5915 2F28                          l5907 2EF8                          l3989 37E2  
                        l4893 4212                          l4885 41A6                          l5773 33C6  
                        l5765 338E                          l5685 2E00                          l5669 2D82  
                        l5597 2A3C                          l5845 484E                          l5933 3072  
                        l5925 2FAA                          l4879 4150                          l5791 345E  
                        l5855 44FE                          l5695 4D5C                          l5951 318E  
                        l5927 2FB2                          l5785 3434                          l5865 45EE  
                        l5779 340E                          l5859 4550                          l5939 30AE  
                        l5875 2E38                          l5973 3CA0                          l5959 31C4  
                        l5895 2EB6                          l5887 2E84                          l5993 3E80  
                        l5977 3D14                          l5889 2E96                          l5989 3E68  
                        _LATA 000F89                          _LATB 000F8A                          _LATC 000F8B  
                        u4320 368E                          u5210 180C                          u5130 16F0  
                        u5050 15D4                          u4410 3802                          u5300 191E  
                        u4325 3682                          u5310 196A                          u5215 1800  
                        u5135 16E4                          u5055 15C8                          u4415 37F6  
                        u4335 36EE                          u4600 0EDA                          u4520 0D68  
                        u4280 35D8                          u5305 1912                          u5315 195E  
                        u4605 0ECE                          u4525 0D5C                          u4285 35CC  
                        u5325 19CA                          u5430 1BA2                          u4615 0F3A  
                        u4535 0DC8                          u4295 3638                          u4720 1108  
                        u4640 0F94                          u4560 0E20                          u5440 1BEE  
                        u6400 470C                          u4810 1282                          u4490 391A  
                        u6330 4600                          u5435 1B96                          u7220 2D96  
                        u7140 2C50                          u4725 10FC                          u4645 0F88  
                        u4565 0E14                          u5445 1BE2                          u4815 1276  
                        u4735 1168                          u4655 0FF4                          u4575 0E80  
                        u4495 390E                          u5455 1C4E                          u4680 104E  
                        u5560 1E26                          u7145 2C44                          u5570 1E72  
                        u4685 1042                          u5565 1E1A                          u4695 10AE  
                        u5575 1E66                          u5585 1ED2                          u4970 14B8  
                        u4890 139C                          u5930 48B2                          u7460 351C  
                        u4975 14AC                          u4895 1390                          u5935 48A6  
                        u6760 2636                          u6770 264E                          u6780 2650  
                        u7680 3CD0                          u7690 3CD2                          u7771 3F38  
                        u7781 3F44           __size_of_CANSetMask 039E                          abs@a 0077  
                        _fabs 4CF8                          _data 0129                          _atan 3C54  
                        _asin 3942                          _main 4CAA                          _asus 0043  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr0l 000FE9  
                        fsr2h 000FDA                          indf1 000FE7                          fsr1l 000FE1  
                        indf2 000FDF                          fsr2l 000FD9                          btemp 0047  
                        _sqrt 2E1A                          pclat 000FFA                          prodh 000FF4  
                        prodl 000FF3                          start 0238                 __CFG_IESO$OFF 000000  
             ___fldiv@new_exp 0088                 __CFG_MCLRE$ON 000000                  ___param_bank 000000  
            _CANOperationMode 4DDE                         ??_abs 0079    __size_of_CANreceiveMessage 050C  
                       ?_fabs 00AD                 ___fltol@sign1 0098                         ?_atan 0149  
                       ?_asin 015E               __end_of___fladd 2974                         ?_main 0001  
             __end_of___fldiv 35A4               __end_of___flneg 4D6E               __end_of___flmul 2E1A  
             __end_of___fltol 4978                         ?_sqrt 00C1                         _T0CON 000FD5  
                       _T3CON 000FB1            __size_of_ISR_Bassa 0220               __end_of___lwdiv 4B90  
                       i1l404 2258                         i1l661 0182                         i1l653 0186  
                       i1l658 0104                         i1l667 01BE                         i1l668 01F0  
                       i2l648 49BA                         _TMR0H 000FD7                         _TMR0L 000FD6  
                       _TMR3H 000FB3                         _TMR3L 000FB2                         _PORTA 000F80  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISC 000F94  
               __CFG_PWRT$OFF 000000              __end_of_ISR_Alta 4A58                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
          CANInitialize@flags 0089                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000                         fabs@d 00AD                         _errno 0118  
                       atan@f 0149                         atan@x 0151                         atan@y 014D  
                       asin@x 015E                         asin@y 016E                __pbitbssCOMRAM 0228  
                       tablat 000FF5          __end_of_CANisTxReady 4DBE                         sqrt@a 00C1  
                       sqrt@i 014A                         sqrt@p 014F                         status 000FD8  
                ?_park_search 0001               __initialization 4BFC                  __end_of_fabs 4D36  
                __end_of_atan 3EA6                  __end_of_asin 3C54                  __end_of_main 4CF8  
                __end_of_sqrt 31E4                        ??_fabs 00B1                        ??_atan 00D1  
                      ??_asin 00D1                        ??_main 00D1                        ??_sqrt 00C5  
               __activetblptr 000003             _CANisTxReady$2808 0077                        _ADCON1 000FC1  
                      _CANCON 000F6F               __CFG_BBSIZ$1024 000000             _spazio_parcheggio 00E6  
                      i1l5031 245E                        i1l5023 2426                        i1l5015 23B8  
                      i1l5041 24C8                        i1l5035 247A                        i1l5027 2442  
                      i1l5221 0066                        i1l5039 2496                        i1l5251 013C  
                      i1l5243 010C                        i2l1180 4B86                        i1l5261 016C  
                      i1l5237 00E0                        i1l5255 0144                        i1l5273 01B0  
                      i1l4961 21A8                        i1l4953 2138                        i1l4973 2202  
                      i1l4965 21C6                        i1l4977 2220                        i1l4969 21E4  
                      i1l4979 2252                        i2l6065 4B36                        i2l6067 4B42  
                      i2l6077 4B78                        i2l6069 4B48                        i2l6097 4A1A  
                      _RXB0D0 000F66                        _RXB0D1 000F67                        _RXB0D2 000F68  
                      _RXB0D3 000F69                        _RXB0D4 000F6A                        _RXB1D0 000F56  
                      _RXB0D5 000F6B                        _RXB1D1 000F57                        _RXB0D6 000F6C  
                      _RXB1D2 000F58                        _RXB0D7 000F6D                        _RXB1D3 000F59  
                      _RXB1D4 000F5A                        _RXB1D5 000F5B                        _RXB1D6 000F5C  
                      _RXB1D7 000F5D                        _TXB0D0 000F46                        _TXB0D1 000F47  
                      _TXB0D2 000F48                        _TXB0D3 000F49                        _TXB1D0 000F36  
                      _TXB0D4 000F4A                        _TXB1D1 000F37                        _TXB0D5 000F4B  
                      _TXB1D2 000F38                        _TXB0D6 000F4C                        _TXB1D3 000F39  
                      _TXB0D7 000F4D                        _TXB2D0 000F26                        _TXB1D4 000F3A  
                      _TXB2D1 000F27                        _TXB1D5 000F3B                        _TXB2D2 000F28  
                      _TXB1D6 000F3C                        _TXB2D3 000F29                        _TXB1D7 000F3D  
                      _TXB2D4 000F2A                        _TXB2D5 000F2B                        _TXB2D6 000F2C  
                      _TXB2D7 000F2D            CANsendMessage@data 007B              __end_of_can_send 4B18  
          CANsendMessage@tamp 0083              __end_of___xxtofl 429C             __end_of_ISR_Bassa 0238  
       __size_of_CANSetFilter 0B06                __CFG_XINST$OFF 000000                        ___flge 4462  
                   ??___fladd 00B5                     ??___fldiv 007F                     ??___flneg 00AD  
              __CFG_STVREN$ON 000000                     ??___flmul 0098                     ??___fltol 0094  
                   ??___lwdiv 0064                  ??_CANSetMask 007C                        _gianni 0044  
                      clear_0 4C02                        clear_1 4C0E                        clear_2 4C1C  
             __CFG_BOREN$BOHW 000000                  __pdataCOMRAM 0046                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                _CANSetFilter 0D2E                    ___flge@ff1 00B1                    ___flge@ff2 00B5  
                ___xxtofl@arg 0085                  ___xxtofl@exp 0084                  ___xxtofl@val 007B  
                  __accesstop 0060       __end_of__initialization 4C4C            __end_of_CANSetMask 3942  
             __CFG_PBADEN$OFF 000000                    ___flneg@f1 00A9                 ?_park_routine 0001  
                eval_poly@res 00CD                 ___rparam_used 000000                    ___fltol@f1 0090  
              __pcstackCOMRAM 0001                     ?_ISR_Alta 0001                  __pidataBANK0 4DF4  
            ??_configurazione 0091         CANSetFilter@numBuffer 0080                  _actual_speed 00DD  
       __size_of_CANisTxReady 0024      __end_of_CANOperationMode 4DF4                    __pbssBANK0 00D1  
                  __pbssBANK1 0100               _sensor_distance 0024            __size_of_eval_poly 0118  
                  _data_brake 0131                ??_park_routine 0087                 ISR_Bassa@gigi 0022  
     __size_of_CANsendMessage 078C                    _data_speed 0139                    _activation 0228  
    __size_of_can_interpreter 0054            __size_of_parallelo 0228          __size_of_park_search 0162  
                  ??_ISR_Alta 0067                       ?___flge 00B1                       _CANSTAT 000F6E  
                _CANisTxReady 4D9A                       _BRGCON1 000F70                       _BRGCON2 000F71  
                     _BRGCON3 000F72                     ?_can_send 0001                     ?___xxtofl 007B  
      __size_of_CANInitialize 01C6                       _RXB0DLC 000F65                       _RXB1DLC 000F55  
                     _RXB0CON 000F60                       _RXB1CON 000F50                       _TXB0DLC 000F45  
                     _TXB1DLC 000F35                       _TXB2DLC 000F25           CANsendMessage@flags 007E  
                     __Hparam 0000                    _left_speed 003A                       __Lparam 0000  
             __size_of___flge 0190                       ___fladd 24CC                       ___fldiv 31E4  
                     ___flneg 4D36                       ___flmul 2974                       ___fltol 486C  
                     ___lwdiv 4B18                  __psmallconst 0D00          CANInitialize@propSeg 008E  
                     __pcinit 4BFC             __end_of_eval_poly 486C                       __ramtop 0D00  
                     __ptext0 4CAA                       __ptext1 45F2                       __ptext2 4DBE  
                     __ptext3 4A58                       __ptext4 1834                       __ptext5 4D9A  
                     __ptext6 3EA6                       __ptext7 3942                       __ptext8 2E1A  
                     __ptext9 3C54                    ??_can_send 0087                  __size_of_abs 002C  
             atan@val_squared 0156                    ??___xxtofl 007F                       atan@val 015A  
           __end_of_parallelo 40CE                       asin@sgn 0162        CANreceiveMessage@error 000B  
             _start_operation 022E                __pintcode_body 4978          end_of_initialization 4C4C  
                     int_func 4978                 _CANInitialize 429C                     _ISR_Bassa 0018  
                     postdec2 000FDD                       postinc0 000FEE                       postinc2 000FDE  
                     sqrt@grs 0150                       sqrt@exp 0154             ??_can_interpreter 0077  
     _steering_correction_dir 022F                     _PORTBbits 000F81                CANSetMask@mask 0077  
              CANSetMask@tamp 0081                  _distance_set 0110                CANSetMask@type 007B  
        __end_of_park_routine 4DDE                   ___fladd@grs 00C0                 ___xxtofl@sign 0083  
                   _TRISBbits 000F93                   ___fldiv@grs 008A                   ___fldiv@rem 0084  
                   _MUX_index 0042                    _pulse_time 003C       _clock_counter_reference 0034  
                 ___flmul@grs 009E                _CANsendMessage 1834              CANInitialize@BRP 0088  
            CANInitialize@SJW 0087                ?_CANInitialize 0085                    ?_ISR_Bassa 0001  
              __end_of___flge 45F2             __size_of_ISR_Alta 4A50                 __pidataCOMRAM 4DF6  
         start_initialization 4BFC                    eval_poly@d 00C5                    eval_poly@n 00C7  
                  eval_poly@x 00C1                   __end_of_abs 4D9A           CANSetMask@numBuffer 0080  
               _data_speed_rx 0108        __end_of_CANsendMessage 1FC0             ?_CANOperationMode 0001  
               _data_steering 0141            ??_CANOperationMode 0077             _distance_received 022B  
  CANInitialize@FilterConfig1 008F    CANInitialize@FilterConfig2 0090           _steering_correction 00E5  
                    ??___flge 00B9                   __pdataBANK0 00E6              __CFG_LPT1OSC$OFF 000000  
                   ___fladd@a 00B1                     ___fladd@b 00AD        CANInitialize@phaseSeg1 0085  
      CANInitialize@phaseSeg2 0086                     ___fldiv@a 007B                     ___fldiv@b 0077  
                   ___flmul@a 0094                     ___flmul@b 0090                   __pbssCOMRAM 0024  
               __pcstackBANK0 0060                 __pcstackBANK1 0149                   _BRGCON2bits 000F71  
                 _BRGCON3bits 000F72             __size_of_can_send 00C0             __size_of___xxtofl 01CE  
             ?_CANsendMessage 0077               ??_CANInitialize 008A                     _asin$3617 0172  
                   _asin$3618 016A                     _asin$3619 0166                 ??_park_search 0089  
               _alignment_gap 00D1            CANSetFilter@filter 0077              ___lwdiv@dividend 0060  
                  ISR_Bassa@i 0023                   ??_ISR_Bassa 000D                     __pintcode 0008  
                    ?___fladd 00AD                      ?___fldiv 0077                      ?___flneg 00A9  
                    ?___flmul 0090                      ?___fltol 0090         __size_of_park_routine 0020  
                    ?___lwdiv 0060                   __pintcodelo 0018                   __smallconst 0D00  
                 _COMSTATbits 000F74                     _eval_poly 4754              ___lwdiv@quotient 0065  
     __size_of_configurazione 006C                     _parallelo 3EA6         CANreceiveMessage@tamp 000C  
                    _LATBbits 000F8A               _can_interpreter 4C56                     atan@recip 0155  
                _park_routine 4DBE  _delay_quartz_frequency_value 0046                      _IPR3bits 000FA5  
                    _PIE3bits 000FA3                      i1u612_20 2078                      i1u612_26 207A  
                    i1u613_20 20A6                      i1u621_25 222C                      i1u613_26 20A8  
                    i1u623_20 2300                      i1u615_25 20BC                      i1u623_26 2302  
                    i1u624_20 232A                      i1u632_25 24A2                      i1u624_26 232C  
                    i1u626_25 233E                      _PIR3bits 000FA4                      i1u784_27 01E0  
                    _RXB0EIDH 000F63                      _RXB0EIDL 000F64                      _RXB1EIDH 000F53  
                    _RXB1EIDL 000F54                      _ISR_Alta 0008                     _set_speed 00E3  
                    _RCONbits 000FD0              __CFG_WDTPS$32768 000000                      _RXB0SIDH 000F61  
                    _RXB0SIDL 000F62                      _RXF0EIDH 000F02                      _RXB1SIDH 000F51  
                    _RXF0EIDL 000F03                      _RXB1SIDL 000F52                      _RXF1EIDH 000F06  
                    _RXF1EIDL 000F07                      _RXF2EIDH 000F0A                      _RXF2EIDL 000F0B  
                    _RXF3EIDH 000F0E                      _RXF3EIDL 000F0F                      _RXF4EIDH 000F12  
                    _RXF4EIDL 000F13                      _RXF5EIDH 000F16                      _RXF5EIDL 000F17  
                    _RXF0SIDH 000F00                      _RXF0SIDL 000F01           __end_of_park_search 4754  
                    _TXB0EIDH 000F43                      _RXF1SIDH 000F04                      _TXB0EIDL 000F44  
                    _RXF1SIDL 000F05                      _TXB1EIDH 000F33                      _RXF2SIDH 000F08  
                    _TXB1EIDL 000F34                      _RXF2SIDL 000F09                      _TXB2EIDH 000F23  
                    _RXF3SIDH 000F0C                      _TXB2EIDL 000F24                      _RXF3SIDL 000F0D  
                    _RXF4SIDH 000F10                      _RXF4SIDL 000F11                      _RXF5SIDH 000F14  
                    _RXF5SIDL 000F15                      _RXM0EIDH 000F1A                      _RXM0EIDL 000F1B  
                    _TXB0SIDH 000F41                      _RXM1EIDH 000F1E                      _TXB0SIDL 000F42  
                    _RXM1EIDL 000F1F                      _TXB1SIDH 000F31                      _TXB1SIDL 000F32  
                    _TXB2SIDH 000F21                      _TXB2SIDL 000F22                      _RXM0SIDH 000F18  
                    _RXM0SIDL 000F19                      _RXM1SIDH 000F1C                      _RXM1SIDL 000F1D  
                 _distance_dx 0036                   _distance_sx 0038                      _RXERRCNT 000F75  
                    _TXERRCNT 000F76                    ?_eval_poly 00C1           __end_ofatan@coeff_a 0D19  
         __end_ofatan@coeff_b 0D2D                 ?_CANSetFilter 0077                   _INTCON2bits 000FF1  
                  _CANCONbits 000F6F                    ?_parallelo 0001              _distance_average 00E1  
                    __Hparam0 0000                      __Lparam0 0000                  _RXB0SIDLbits 000F62  
                _RXB1SIDLbits 000F52              __size_of___fladd 04A8                    _CANSetMask 35A4  
            __size_of___fldiv 03C0              __size_of___flneg 0038              __size_of___flmul 04A6  
            __size_of___fltol 010C              __size_of___lwdiv 0078                      _can_send 4A58  
                    ___xxtofl 40CE                  _RXF0SIDLbits 000F01               ___lwdiv@divisor 0062  
                _RXF1SIDLbits 000F05               ___lwdiv@counter 0064                ??_CANSetFilter 007C  
                    __ptext10 4CF8                      __ptext11 4D36                      __ptext20 4B90  
                    __ptext12 4754                      __ptext21 429C                      __ptext13 2974  
                    __ptext22 35A4                      __ptext14 24CC                      __ptext23 0D2E  
                    __ptext15 4462                      __ptext24 4DDE                      __ptext16 31E4  
                    __ptext25 4C56                      __ptext17 4D6E                      __ptext18 40CE  
                    __ptext27 1FC0                      __ptext19 486C                      __ptext29 4B18  
                _RXF2SIDLbits 000F09       __end_of_can_interpreter 4CAA                  _RXF3SIDLbits 000F0D  
                    _distance 00DF                  _RXF4SIDLbits 000F11                  _RXF5SIDLbits 000F15  
    CANsendMessage@dataLength 007D                 __size_of_fabs 003E                 __size_of_atan 0252  
               __size_of_asin 0312                 __size_of_main 004E                 __size_of_sqrt 03CA  
                 _park_search 45F2          CANreceiveMessage@msg 0001                  _TXB0SIDLbits 000F42  
                _TXB1SIDLbits 000F32                  _TXB2SIDLbits 000F22                      int$flags 0047  
   __size_of_CANOperationMode 0016                 ?_CANisTxReady 0001                   atan@coeff_a 0D01  
                 atan@coeff_b 0D19                   _RXB0DLCbits 000F65                   _RXB1DLCbits 000F55  
                _RXM0SIDLbits 000F19                   _RXB0CONbits 000F60                   _RXB1CONbits 000F50  
           _CANreceiveMessage 1FC0                  _RXM1SIDLbits 000F1D                    _INTCONbits 000FF2  
                 ??_eval_poly 00C9              ??_CANsendMessage 007F            ?_CANreceiveMessage 0001  
                _request_sent 022D                     sqrt@tfrac 014B                _configurazione 4B90  
    CANsendMessage@identifier 0077                   ??_parallelo 0176                      intlevel1 0000  
                    intlevel2 0000              CANSetFilter@tamp 0081              CANSetFilter@type 007B  
         ??_CANreceiveMessage 0003                   _TXB0DLCbits 000F45                   _right_speed 003E  
                 _TXB1DLCbits 000F35                   _TXB0CONbits 000F40                   _TXB2DLCbits 000F25  
                 _TXB1CONbits 000F30                   _TXB2CONbits 000F20          CANOperationMode@mode 0077  
                 ?_CANSetMask 0077                ??_CANisTxReady 0077                _distance_error 022A  
   __end_of_CANreceiveMessage 24CC                      sqrt@frac 015A                      sqrt@sign 0149  
                    sqrt@root 0156                   _timerValue2 0040        __end_of_configurazione 4BFC  
               ___fladd@signs 00BD                 _distance_wait 022C              ?_can_interpreter 0001  
                ___fladd@aexp 00BE                  ___fladd@bexp 00BF         __end_of_CANInitialize 4462  
