

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sat May 28 19:31:53 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F2685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    63                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    64  0000                     
    65                           	psect	idataCOMRAM
    66  0066AC                     __pidataCOMRAM:
    67                           	opt stack 0
    68                           
    69                           ;initializer for _delay_quartz_frequency_value
    70  0066AC  10                 	db	16
    71                           
    72                           	psect	idataBANK1
    73  0066A2                     __pidataBANK1:
    74                           	opt stack 0
    75                           
    76                           ;initializer for _larghezza
    77  0066A2  0000               	dw	0
    78  0066A4  4200               	dw	16896
    79                           
    80                           ;initializer for _spazio_parcheggio
    81  0066A6  0064               	dw	100
    82                           
    83                           ;initializer for _raggio
    84  0066A8  0000               	dw	0
    85  0066AA  4270               	dw	17008
    86                           
    87                           	psect	smallconst
    88  000D00                     __psmallconst:
    89                           	opt stack 0
    90  000D00  00                 	db	0
    91  000D01                     atan@coeff_a:
    92                           	opt stack 0
    93  000D01  3C06               	dw	15366
    94  000D03  4204               	dw	16900
    95  000D05  9F7D               	dw	40829
    96  000D07  426A               	dw	17002
    97  000D09  905C               	dw	36956
    98  000D0B  4201               	dw	16897
    99  000D0D  4D60               	dw	19808
   100  000D0F  40BB               	dw	16571
   101  000D11  EC51               	dw	60497
   102  000D13  3E47               	dw	15943
   103  000D15  8DDE               	dw	36318
   104  000D17  BB1F               	dw	47903
   105  000D19                     __end_ofatan@coeff_a:
   106                           	opt stack 0
   107  000D19                     atan@coeff_b:
   108                           	opt stack 0
   109  000D19  3C06               	dw	15366
   110  000D1B  4204               	dw	16900
   111  000D1D  59C0               	dw	22976
   112  000D1F  428B               	dw	17035
   113  000D21  0474               	dw	1140
   114  000D23  4244               	dw	16964
   115  000D25  9BF9               	dw	39929
   116  000D27  414F               	dw	16719
   117  000D29  0000               	dw	0
   118  000D2B  3F80               	dw	16256
   119  000D2D                     __end_ofatan@coeff_b:
   120                           	opt stack 0
   121  000D2D                     sin@coeff_a:
   122                           	opt stack 0
   123  000D2D  F3EC               	dw	62444
   124  000D2F  484A               	dw	18506
   125  000D31  9535               	dw	38197
   126  000D33  C795               	dw	51093
   127  000D35  C117               	dw	49431
   128  000D37  45DC               	dw	17884
   129  000D39  DBFD               	dw	56317
   130  000D3B  C36D               	dw	50029
   131  000D3D  B372               	dw	45938
   132  000D3F  4033               	dw	16435
   133  000D41                     __end_ofsin@coeff_a:
   134                           	opt stack 0
   135  000D41                     sin@coeff_b:
   136                           	opt stack 0
   137  000D41  342B               	dw	13355
   138  000D43  4801               	dw	18433
   139  000D45  9D7F               	dw	40319
   140  000D47  45B0               	dw	17840
   141  000D49  FFE7               	dw	65511
   142  000D4B  42D9               	dw	17113
   143  000D4D  0000               	dw	0
   144  000D4F  3F80               	dw	16256
   145  000D51                     __end_ofsin@coeff_b:
   146                           	opt stack 0
   147  0000                     _RXB1CON	set	3920
   148  0000                     _RXB1CONbits	set	3920
   149  0000                     _RXB1D0	set	3926
   150  0000                     _RXB1D1	set	3927
   151  0000                     _RXB1D2	set	3928
   152  0000                     _RXB1D3	set	3929
   153  0000                     _RXB1D4	set	3930
   154  0000                     _RXB1D5	set	3931
   155  0000                     _RXB1D6	set	3932
   156  0000                     _RXB1D7	set	3933
   157  0000                     _RXB1DLC	set	3925
   158  0000                     _RXB1DLCbits	set	3925
   159  0000                     _RXB1EIDH	set	3923
   160  0000                     _RXB1EIDL	set	3924
   161  0000                     _RXB1SIDH	set	3921
   162  0000                     _RXB1SIDL	set	3922
   163  0000                     _RXB1SIDLbits	set	3922
   164  0000                     _RXF0EIDH	set	3842
   165  0000                     _RXF0EIDL	set	3843
   166  0000                     _RXF0SIDH	set	3840
   167  0000                     _RXF0SIDL	set	3841
   168  0000                     _RXF0SIDLbits	set	3841
   169  0000                     _RXF1EIDH	set	3846
   170  0000                     _RXF1EIDL	set	3847
   171  0000                     _RXF1SIDH	set	3844
   172  0000                     _RXF1SIDL	set	3845
   173  0000                     _RXF1SIDLbits	set	3845
   174  0000                     _RXF2EIDH	set	3850
   175  0000                     _RXF2EIDL	set	3851
   176  0000                     _RXF2SIDH	set	3848
   177  0000                     _RXF2SIDL	set	3849
   178  0000                     _RXF2SIDLbits	set	3849
   179  0000                     _RXF3EIDH	set	3854
   180  0000                     _RXF3EIDL	set	3855
   181  0000                     _RXF3SIDH	set	3852
   182  0000                     _RXF3SIDL	set	3853
   183  0000                     _RXF3SIDLbits	set	3853
   184  0000                     _RXF4EIDH	set	3858
   185  0000                     _RXF4EIDL	set	3859
   186  0000                     _RXF4SIDH	set	3856
   187  0000                     _RXF4SIDL	set	3857
   188  0000                     _RXF4SIDLbits	set	3857
   189  0000                     _RXF5EIDH	set	3862
   190  0000                     _RXF5EIDL	set	3863
   191  0000                     _RXF5SIDH	set	3860
   192  0000                     _RXF5SIDL	set	3861
   193  0000                     _RXF5SIDLbits	set	3861
   194  0000                     _RXM0EIDH	set	3866
   195  0000                     _RXM0EIDL	set	3867
   196  0000                     _RXM0SIDH	set	3864
   197  0000                     _RXM0SIDL	set	3865
   198  0000                     _RXM0SIDLbits	set	3865
   199  0000                     _RXM1EIDH	set	3870
   200  0000                     _RXM1EIDL	set	3871
   201  0000                     _RXM1SIDH	set	3868
   202  0000                     _RXM1SIDL	set	3869
   203  0000                     _RXM1SIDLbits	set	3869
   204  0000                     _TXB0CONbits	set	3904
   205  0000                     _TXB0D0	set	3910
   206  0000                     _TXB0D1	set	3911
   207  0000                     _TXB0D2	set	3912
   208  0000                     _TXB0D3	set	3913
   209  0000                     _TXB0D4	set	3914
   210  0000                     _TXB0D5	set	3915
   211  0000                     _TXB0D6	set	3916
   212  0000                     _TXB0D7	set	3917
   213  0000                     _TXB0DLC	set	3909
   214  0000                     _TXB0DLCbits	set	3909
   215  0000                     _TXB0EIDH	set	3907
   216  0000                     _TXB0EIDL	set	3908
   217  0000                     _TXB0SIDH	set	3905
   218  0000                     _TXB0SIDL	set	3906
   219  0000                     _TXB0SIDLbits	set	3906
   220  0000                     _TXB1CONbits	set	3888
   221  0000                     _TXB1D0	set	3894
   222  0000                     _TXB1D1	set	3895
   223  0000                     _TXB1D2	set	3896
   224  0000                     _TXB1D3	set	3897
   225  0000                     _TXB1D4	set	3898
   226  0000                     _TXB1D5	set	3899
   227  0000                     _TXB1D6	set	3900
   228  0000                     _TXB1D7	set	3901
   229  0000                     _TXB1DLC	set	3893
   230  0000                     _TXB1DLCbits	set	3893
   231  0000                     _TXB1EIDH	set	3891
   232  0000                     _TXB1EIDL	set	3892
   233  0000                     _TXB1SIDH	set	3889
   234  0000                     _TXB1SIDL	set	3890
   235  0000                     _TXB1SIDLbits	set	3890
   236  0000                     _TXB2CONbits	set	3872
   237  0000                     _TXB2D0	set	3878
   238  0000                     _TXB2D1	set	3879
   239  0000                     _TXB2D2	set	3880
   240  0000                     _TXB2D3	set	3881
   241  0000                     _TXB2D4	set	3882
   242  0000                     _TXB2D5	set	3883
   243  0000                     _TXB2D6	set	3884
   244  0000                     _TXB2D7	set	3885
   245  0000                     _TXB2DLC	set	3877
   246  0000                     _TXB2DLCbits	set	3877
   247  0000                     _TXB2EIDH	set	3875
   248  0000                     _TXB2EIDL	set	3876
   249  0000                     _TXB2SIDH	set	3873
   250  0000                     _TXB2SIDL	set	3874
   251  0000                     _TXB2SIDLbits	set	3874
   252  0000                     _ADCON1	set	4033
   253  0000                     _BRGCON1	set	3952
   254  0000                     _BRGCON2	set	3953
   255  0000                     _BRGCON2bits	set	3953
   256  0000                     _BRGCON3	set	3954
   257  0000                     _BRGCON3bits	set	3954
   258  0000                     _CANCON	set	3951
   259  0000                     _CANCONbits	set	3951
   260  0000                     _CANSTAT	set	3950
   261  0000                     _COMSTATbits	set	3956
   262  0000                     _INTCON2bits	set	4081
   263  0000                     _INTCONbits	set	4082
   264  0000                     _IPR3bits	set	4005
   265  0000                     _LATA	set	3977
   266  0000                     _LATB	set	3978
   267  0000                     _LATBbits	set	3978
   268  0000                     _LATC	set	3979
   269  0000                     _PIE3bits	set	4003
   270  0000                     _PIR3bits	set	4004
   271  0000                     _PORTA	set	3968
   272  0000                     _PORTBbits	set	3969
   273  0000                     _RCONbits	set	4048
   274  0000                     _RXB0CON	set	3936
   275  0000                     _RXB0CONbits	set	3936
   276  0000                     _RXB0D0	set	3942
   277  0000                     _RXB0D1	set	3943
   278  0000                     _RXB0D2	set	3944
   279  0000                     _RXB0D3	set	3945
   280  0000                     _RXB0D4	set	3946
   281  0000                     _RXB0D5	set	3947
   282  0000                     _RXB0D6	set	3948
   283  0000                     _RXB0D7	set	3949
   284  0000                     _RXB0DLC	set	3941
   285  0000                     _RXB0DLCbits	set	3941
   286  0000                     _RXB0EIDH	set	3939
   287  0000                     _RXB0EIDL	set	3940
   288  0000                     _RXB0SIDH	set	3937
   289  0000                     _RXB0SIDL	set	3938
   290  0000                     _RXB0SIDLbits	set	3938
   291  0000                     _RXERRCNT	set	3957
   292  0000                     _T0CON	set	4053
   293  0000                     _T0CONbits	set	4053
   294  0000                     _T3CON	set	4017
   295  0000                     _TMR0H	set	4055
   296  0000                     _TMR0L	set	4054
   297  0000                     _TMR3H	set	4019
   298  0000                     _TMR3L	set	4018
   299  0000                     _TRISA	set	3986
   300  0000                     _TRISB	set	3987
   301  0000                     _TRISBbits	set	3987
   302  0000                     _TRISC	set	3988
   303  0000                     _TXERRCNT	set	3958
   304                           
   305                           ; #config settings
   306  000D51  00                 	db	0	; dummy byte at the end
   307  0000                     
   308                           	psect	cinit
   309  006416                     __pcinit:
   310                           	opt stack 0
   311  006416                     start_initialization:
   312                           	opt stack 0
   313  006416                     __initialization:
   314                           	opt stack 0
   315                           
   316                           ; Clear objects allocated to BANK1 (163 bytes)
   317  006416  EE01  F000         	lfsr	0,__pbssBANK1
   318  00641A  0EA3               	movlw	163
   319  00641C                     clear_0:
   320  00641C  6AEE               	clrf	postinc0,c
   321  00641E  06E8               	decf	wreg,f,c
   322  006420  E1FD               	bnz	clear_0
   323                           
   324                           ; Clear objects allocated to BANK0 (4 bytes)
   325  006422  0100               	movlb	0
   326  006424  6BE8               	clrf	(__pbssBANK0+3)& (0+255),b
   327  006426  6BE7               	clrf	(__pbssBANK0+2)& (0+255),b
   328  006428  6BE6               	clrf	(__pbssBANK0+1)& (0+255),b
   329  00642A  6BE5               	clrf	__pbssBANK0& (0+255),b
   330                           
   331                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   332  00642C  6A46               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   333  00642E  6A45               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   334                           
   335                           ; Clear objects allocated to COMRAM (29 bytes)
   336  006430  EE00  F028         	lfsr	0,__pbssCOMRAM
   337  006434  0E1D               	movlw	29
   338  006436                     clear_1:
   339  006436  6AEE               	clrf	postinc0,c
   340  006438  06E8               	decf	wreg,f,c
   341  00643A  E1FD               	bnz	clear_1
   342                           
   343                           ; Initialize objects allocated to BANK1 (10 bytes)
   344                           ; load TBLPTR registers with __pidataBANK1
   345  00643C  0EA2               	movlw	low __pidataBANK1
   346  00643E  6EF6               	movwf	tblptrl,c
   347  006440  0E66               	movlw	high __pidataBANK1
   348  006442  6EF7               	movwf	tblptrh,c
   349  006444  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   350  006446  6EF8               	movwf	tblptru,c
   351  006448  EE01  F0F0         	lfsr	0,__pdataBANK1
   352  00644C  EE10 F00A          	lfsr	1,10
   353  006450                     copy_data0:
   354  006450  0009               	tblrd		*+
   355  006452  CFF5 FFEE          	movff	tablat,postinc0
   356  006456  50E5               	movf	postdec1,w,c
   357  006458  50E1               	movf	fsr1l,w,c
   358  00645A  E1FA               	bnz	copy_data0
   359                           
   360                           ; Initialize objects allocated to COMRAM (1 bytes)
   361                           ; load TBLPTR registers with __pidataCOMRAM
   362  00645C  0EAC               	movlw	low __pidataCOMRAM
   363  00645E  6EF6               	movwf	tblptrl,c
   364  006460  0E66               	movlw	high __pidataCOMRAM
   365  006462  6EF7               	movwf	tblptrh,c
   366  006464  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   367  006466  6EF8               	movwf	tblptru,c
   368  006468  0009               	tblrd		*+	;fetch initializer
   369  00646A  CFF5 F047          	movff	tablat,__pdataCOMRAM
   370  00646E                     end_of_initialization:
   371                           	opt stack 0
   372  00646E                     __end_of__initialization:
   373                           	opt stack 0
   374  00646E  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   375  006470  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   376  006472  0100               	movlb	0
   377  006474  EFF4  F030         	goto	_main	;jump to C main() function
   378                           tblptru	equ	0xFF8
   379                           tblptrh	equ	0xFF7
   380                           tblptrl	equ	0xFF6
   381                           tablat	equ	0xFF5
   382                           postinc0	equ	0xFEE
   383                           wreg	equ	0xFE8
   384                           postdec1	equ	0xFE5
   385                           fsr1l	equ	0xFE1
   386                           
   387                           	psect	bitbssCOMRAM
   388  000228                     __pbitbssCOMRAM:
   389                           	opt stack 0
   390  000228                     _activation:
   391                           	opt stack 0
   392  000228                     	ds	1
   393  000229                     _asd:
   394                           	opt stack 0
   395  000229                     	ds	1
   396  00022A                     _avvicinamento:
   397                           	opt stack 0
   398  00022A                     	ds	1
   399  00022B                     _dir:
   400                           	opt stack 0
   401  00022B                     	ds	1
   402  00022C                     _distance_error:
   403                           	opt stack 0
   404  00022C                     	ds	1
   405  00022D                     _distance_received:
   406                           	opt stack 0
   407  00022D                     	ds	1
   408  00022E                     _distance_received1:
   409                           	opt stack 0
   410  00022E                     	ds	1
   411  00022F                     _distance_wait:
   412                           	opt stack 0
   413  00022F                     	ds	1
   414  000230                     _first:
   415                           	opt stack 0
   416  000230                     	ds	1
   417  000231                     _new_distance:
   418                           	opt stack 0
   419  000231                     	ds	1
   420  000232                     _old_dir_correction:
   421                           	opt stack 0
   422  000232                     	ds	1
   423  000233                     _request_sent:
   424                           	opt stack 0
   425  000233                     	ds	1
   426  000234                     _request_sent1:
   427                           	opt stack 0
   428  000234                     	ds	1
   429  000235                     _start_operation:
   430                           	opt stack 0
   431  000235                     	ds	1
   432  000236                     _steering_correction_dir:
   433                           	opt stack 0
   434  000236                     	ds	1
   435                           tblptru	equ	0xFF8
   436                           tblptrh	equ	0xFF7
   437                           tblptrl	equ	0xFF6
   438                           tablat	equ	0xFF5
   439                           postinc0	equ	0xFEE
   440                           wreg	equ	0xFE8
   441                           postdec1	equ	0xFE5
   442                           fsr1l	equ	0xFE1
   443                           
   444                           	psect	bssCOMRAM
   445  000028                     __pbssCOMRAM:
   446                           	opt stack 0
   447  000028                     _sensor_distance:
   448                           	opt stack 0
   449  000028                     	ds	16
   450  000038                     _clock_counter_reference:
   451                           	opt stack 0
   452  000038                     	ds	2
   453  00003A                     _distance_dx:
   454                           	opt stack 0
   455  00003A                     	ds	2
   456  00003C                     _distance_sx:
   457                           	opt stack 0
   458  00003C                     	ds	2
   459  00003E                     _timerValue2:
   460                           	opt stack 0
   461  00003E                     	ds	2
   462  000040                     _MUX_index:
   463                           	opt stack 0
   464  000040                     	ds	1
   465  000041                     _TMR3H_temp:
   466                           	opt stack 0
   467  000041                     	ds	1
   468  000042                     _TMR3L_temp:
   469                           	opt stack 0
   470  000042                     	ds	1
   471  000043                     _counter:
   472                           	opt stack 0
   473  000043                     	ds	1
   474  000044                     _steering_correction:
   475                           	opt stack 0
   476  000044                     	ds	1
   477                           tblptru	equ	0xFF8
   478                           tblptrh	equ	0xFF7
   479                           tblptrl	equ	0xFF6
   480                           tablat	equ	0xFF5
   481                           postinc0	equ	0xFEE
   482                           wreg	equ	0xFE8
   483                           postdec1	equ	0xFE5
   484                           fsr1l	equ	0xFE1
   485                           
   486                           	psect	dataCOMRAM
   487  000047                     __pdataCOMRAM:
   488                           	opt stack 0
   489  000047                     _delay_quartz_frequency_value:
   490                           	opt stack 0
   491  000047                     	ds	1
   492                           tblptru	equ	0xFF8
   493                           tblptrh	equ	0xFF7
   494                           tblptrl	equ	0xFF6
   495                           tablat	equ	0xFF5
   496                           postinc0	equ	0xFEE
   497                           wreg	equ	0xFE8
   498                           postdec1	equ	0xFE5
   499                           fsr1l	equ	0xFE1
   500                           
   501                           	psect	bssBANK0
   502  0000E5                     __pbssBANK0:
   503                           	opt stack 0
   504  0000E5                     _alignment_gap:
   505                           	opt stack 0
   506  0000E5                     	ds	4
   507                           tblptru	equ	0xFF8
   508                           tblptrh	equ	0xFF7
   509                           tblptrl	equ	0xFF6
   510                           tablat	equ	0xFF5
   511                           postinc0	equ	0xFEE
   512                           wreg	equ	0xFE8
   513                           postdec1	equ	0xFE5
   514                           fsr1l	equ	0xFE1
   515                           
   516                           	psect	bssBANK1
   517  000100                     __pbssBANK1:
   518                           	opt stack 0
   519  000100                     _MUX_select:
   520                           	opt stack 0
   521  000100                     	ds	8
   522  000108                     _data_speed_rx:
   523                           	opt stack 0
   524  000108                     	ds	8
   525  000110                     _distance_set:
   526                           	opt stack 0
   527  000110                     	ds	8
   528  000118                     _sensor_distance_old:
   529                           	opt stack 0
   530  000118                     	ds	8
   531  000120                     _J_var:
   532                           	opt stack 0
   533  000120                     	ds	4
   534  000124                     _K_var:
   535                           	opt stack 0
   536  000124                     	ds	4
   537  000128                     _Pmin:
   538                           	opt stack 0
   539  000128                     	ds	4
   540  00012C                     _alfa:
   541                           	opt stack 0
   542  00012C                     	ds	4
   543  000130                     _beta:
   544                           	opt stack 0
   545  000130                     	ds	4
   546  000134                     _bordo:
   547                           	opt stack 0
   548  000134                     	ds	4
   549  000138                     _n:
   550                           	opt stack 0
   551  000138                     	ds	4
   552  00013C                     _old_alignment_gap:
   553                           	opt stack 0
   554  00013C                     	ds	4
   555  000140                     _prima_sterzata:
   556                           	opt stack 0
   557  000140                     	ds	4
   558  000144                     _x:
   559                           	opt stack 0
   560  000144                     	ds	4
   561  000148                     _z:
   562                           	opt stack 0
   563  000148                     	ds	4
   564  00014C                     _actual_speed:
   565                           	opt stack 0
   566  00014C                     	ds	2
   567  00014E                     _distance:
   568                           	opt stack 0
   569  00014E                     	ds	2
   570  000150                     _distance_average:
   571                           	opt stack 0
   572  000150                     	ds	2
   573  000152                     _errno:
   574                           	opt stack 0
   575  000152                     	ds	2
   576  000154                     _left_speed:
   577                           	opt stack 0
   578  000154                     	ds	2
   579  000156                     _pulse_time:
   580                           	opt stack 0
   581  000156                     	ds	2
   582  000158                     _right_speed:
   583                           	opt stack 0
   584  000158                     	ds	2
   585  00015A                     _set_speed:
   586                           	opt stack 0
   587  00015A                     	ds	2
   588  00015C                     _msg:
   589                           	opt stack 0
   590  00015C                     	ds	15
   591  00016B                     _data:
   592                           	opt stack 0
   593  00016B                     	ds	8
   594  000173                     _data_brake:
   595                           	opt stack 0
   596  000173                     	ds	8
   597  00017B                     _data_correction:
   598                           	opt stack 0
   599  00017B                     	ds	8
   600  000183                     _data_speed:
   601                           	opt stack 0
   602  000183                     	ds	8
   603  00018B                     _data_steering:
   604                           	opt stack 0
   605  00018B                     	ds	8
   606  000193                     _data_test:
   607                           	opt stack 0
   608  000193                     	ds	8
   609  00019B                     _sensor_distance_short:
   610                           	opt stack 0
   611  00019B                     	ds	8
   612                           tblptru	equ	0xFF8
   613                           tblptrh	equ	0xFF7
   614                           tblptrl	equ	0xFF6
   615                           tablat	equ	0xFF5
   616                           postinc0	equ	0xFEE
   617                           wreg	equ	0xFE8
   618                           postdec1	equ	0xFE5
   619                           fsr1l	equ	0xFE1
   620                           
   621                           	psect	dataBANK1
   622  0001F0                     __pdataBANK1:
   623                           	opt stack 0
   624  0001F0                     _larghezza:
   625                           	opt stack 0
   626  0001F0                     	ds	4
   627  0001F4                     _spazio_parcheggio:
   628                           	opt stack 0
   629  0001F4                     	ds	2
   630  0001F6                     _raggio:
   631                           	opt stack 0
   632  0001F6                     	ds	4
   633                           tblptru	equ	0xFF8
   634                           tblptrh	equ	0xFF7
   635                           tblptrl	equ	0xFF6
   636                           tablat	equ	0xFF5
   637                           postinc0	equ	0xFEE
   638                           wreg	equ	0xFE8
   639                           postdec1	equ	0xFE5
   640                           fsr1l	equ	0xFE1
   641                           
   642                           	psect	cstackBANK2
   643  000200                     __pcstackBANK2:
   644                           	opt stack 0
   645  000200                     _park_routine$3693:
   646                           	opt stack 0
   647                           
   648                           ; 4 bytes @ 0x0
   649  000200                     	ds	4
   650  000204                     _park_routine$3694:
   651                           	opt stack 0
   652                           
   653                           ; 4 bytes @ 0x4
   654  000204                     	ds	4
   655                           tblptru	equ	0xFF8
   656                           tblptrh	equ	0xFF7
   657                           tblptrl	equ	0xFF6
   658                           tablat	equ	0xFF5
   659                           postinc0	equ	0xFEE
   660                           wreg	equ	0xFE8
   661                           postdec1	equ	0xFE5
   662                           fsr1l	equ	0xFE1
   663                           
   664                           	psect	cstackBANK1
   665  0001A3                     __pcstackBANK1:
   666                           	opt stack 0
   667  0001A3                     ?___flsub:
   668                           	opt stack 0
   669  0001A3                     atan@y:
   670                           	opt stack 0
   671  0001A3                     ___flsub@b:
   672                           	opt stack 0
   673                           
   674                           ; 4 bytes @ 0x0
   675  0001A3                     	ds	4
   676  0001A7                     atan@x:
   677                           	opt stack 0
   678  0001A7                     ___flsub@a:
   679                           	opt stack 0
   680                           
   681                           ; 4 bytes @ 0x4
   682  0001A7                     	ds	4
   683  0001AB                     ?_sin:
   684                           	opt stack 0
   685  0001AB                     atan@recip:
   686                           	opt stack 0
   687  0001AB                     sin@f:
   688                           	opt stack 0
   689                           
   690                           ; 4 bytes @ 0x8
   691  0001AB                     	ds	1
   692  0001AC                     atan@val_squared:
   693                           	opt stack 0
   694                           
   695                           ; 4 bytes @ 0x9
   696  0001AC                     	ds	3
   697  0001AF                     sin@y:
   698                           	opt stack 0
   699                           
   700                           ; 4 bytes @ 0xC
   701  0001AF                     	ds	1
   702  0001B0                     atan@val:
   703                           	opt stack 0
   704                           
   705                           ; 4 bytes @ 0xD
   706  0001B0                     	ds	3
   707  0001B3                     _sin$3706:
   708                           	opt stack 0
   709                           
   710                           ; 4 bytes @ 0x10
   711  0001B3                     	ds	1
   712  0001B4                     asin@sgn:
   713                           	opt stack 0
   714                           
   715                           ; 4 bytes @ 0x11
   716  0001B4                     	ds	3
   717  0001B7                     sin@x2:
   718                           	opt stack 0
   719                           
   720                           ; 4 bytes @ 0x14
   721  0001B7                     	ds	1
   722  0001B8                     _asin$3704:
   723                           	opt stack 0
   724                           
   725                           ; 4 bytes @ 0x15
   726  0001B8                     	ds	3
   727  0001BB                     sin@sgn:
   728                           	opt stack 0
   729                           
   730                           ; 1 bytes @ 0x18
   731  0001BB                     	ds	1
   732  0001BC                     _asin$3703:
   733                           	opt stack 0
   734                           
   735                           ; 4 bytes @ 0x19
   736  0001BC                     	ds	4
   737  0001C0                     asin@y:
   738                           	opt stack 0
   739                           
   740                           ; 4 bytes @ 0x1D
   741  0001C0                     	ds	4
   742  0001C4                     _asin$3702:
   743                           	opt stack 0
   744                           
   745                           ; 4 bytes @ 0x21
   746  0001C4                     	ds	4
   747  0001C8                     ??_park_search:
   748  0001C8                     ?_cos:
   749                           	opt stack 0
   750  0001C8                     cos@f:
   751                           	opt stack 0
   752                           
   753                           ; 4 bytes @ 0x25
   754  0001C8                     	ds	4
   755  0001CC                     _cos$3705:
   756                           	opt stack 0
   757                           
   758                           ; 4 bytes @ 0x29
   759  0001CC                     	ds	4
   760  0001D0                     _matematica$3695:
   761                           	opt stack 0
   762                           
   763                           ; 4 bytes @ 0x2D
   764  0001D0                     	ds	4
   765  0001D4                     _matematica$3696:
   766                           	opt stack 0
   767                           
   768                           ; 4 bytes @ 0x31
   769  0001D4                     	ds	4
   770  0001D8                     _matematica$3697:
   771                           	opt stack 0
   772                           
   773                           ; 4 bytes @ 0x35
   774  0001D8                     	ds	4
   775  0001DC                     _matematica$3698:
   776                           	opt stack 0
   777                           
   778                           ; 4 bytes @ 0x39
   779  0001DC                     	ds	4
   780  0001E0                     _matematica$3700:
   781                           	opt stack 0
   782                           
   783                           ; 4 bytes @ 0x3D
   784  0001E0                     	ds	4
   785  0001E4                     _matematica$3701:
   786                           	opt stack 0
   787                           
   788                           ; 4 bytes @ 0x41
   789  0001E4                     	ds	4
   790  0001E8                     _matematica$3699:
   791                           	opt stack 0
   792                           
   793                           ; 4 bytes @ 0x45
   794  0001E8                     	ds	4
   795  0001EC                     ??_park_routine:
   796                           
   797                           ; 1 bytes @ 0x49
   798  0001EC                     	ds	4
   799                           tblptru	equ	0xFF8
   800                           tblptrh	equ	0xFF7
   801                           tblptrl	equ	0xFF6
   802                           tablat	equ	0xFF5
   803                           postinc0	equ	0xFEE
   804                           wreg	equ	0xFE8
   805                           postdec1	equ	0xFE5
   806                           fsr1l	equ	0xFE1
   807                           
   808                           	psect	cstackBANK0
   809  000060                     __pcstackBANK0:
   810                           	opt stack 0
   811  000060                     ??_ISR_Bassa:
   812                           
   813                           ; 1 bytes @ 0x0
   814  000060                     	ds	21
   815  000075                     ISR_Bassa@PORTA_temp:
   816                           	opt stack 0
   817                           
   818                           ; 1 bytes @ 0x15
   819  000075                     	ds	1
   820  000076                     ISR_Bassa@i:
   821                           	opt stack 0
   822                           
   823                           ; 1 bytes @ 0x16
   824  000076                     	ds	1
   825  000077                     ??_can_interpreter:
   826  000077                     ?_abs:
   827                           	opt stack 0
   828  000077                     ?___wmul:
   829                           	opt stack 0
   830  000077                     ?___fldiv:
   831                           	opt stack 0
   832  000077                     CANOperationMode@mode:
   833                           	opt stack 0
   834  000077                     _CANisTxReady$2800:
   835                           	opt stack 0
   836  000077                     ___wmul@multiplier:
   837                           	opt stack 0
   838  000077                     abs@a:
   839                           	opt stack 0
   840  000077                     CANsendMessage@identifier:
   841                           	opt stack 0
   842  000077                     CANSetMask@mask:
   843                           	opt stack 0
   844  000077                     CANSetFilter@filter:
   845                           	opt stack 0
   846  000077                     ___fldiv@b:
   847                           	opt stack 0
   848  000077                     frexp@value:
   849                           	opt stack 0
   850                           
   851                           ; 4 bytes @ 0x17
   852  000077                     	ds	2
   853  000079                     ??_abs:
   854  000079                     ___wmul@multiplicand:
   855                           	opt stack 0
   856                           
   857                           ; 2 bytes @ 0x19
   858  000079                     	ds	2
   859  00007B                     CANSetMask@type:
   860                           	opt stack 0
   861  00007B                     CANSetFilter@type:
   862                           	opt stack 0
   863  00007B                     CANsendMessage@data:
   864                           	opt stack 0
   865  00007B                     ___wmul@product:
   866                           	opt stack 0
   867  00007B                     frexp@eptr:
   868                           	opt stack 0
   869  00007B                     ___fldiv@a:
   870                           	opt stack 0
   871                           
   872                           ; 4 bytes @ 0x1B
   873  00007B                     	ds	1
   874  00007C                     ??_CANSetMask:
   875  00007C                     ??_CANSetFilter:
   876                           
   877                           ; 1 bytes @ 0x1C
   878  00007C                     	ds	1
   879  00007D                     ??_frexp:
   880  00007D                     CANsendMessage@dataLength:
   881                           	opt stack 0
   882  00007D                     delay_ms@value_ms:
   883                           	opt stack 0
   884                           
   885                           ; 2 bytes @ 0x1D
   886  00007D                     	ds	1
   887  00007E                     CANsendMessage@flags:
   888                           	opt stack 0
   889                           
   890                           ; 1 bytes @ 0x1E
   891  00007E                     	ds	1
   892  00007F                     ??___fldiv:
   893  00007F                     ??_CANsendMessage:
   894  00007F                     delay_s@value_s:
   895                           	opt stack 0
   896                           
   897                           ; 1 bytes @ 0x1F
   898  00007F                     	ds	1
   899  000080                     CANSetMask@numBuffer:
   900                           	opt stack 0
   901  000080                     CANSetFilter@numBuffer:
   902                           	opt stack 0
   903  000080                     delay_s@repeat_loop:
   904                           	opt stack 0
   905                           
   906                           ; 1 bytes @ 0x20
   907  000080                     	ds	1
   908  000081                     CANSetMask@tamp:
   909                           	opt stack 0
   910  000081                     CANSetFilter@tamp:
   911                           	opt stack 0
   912                           
   913                           ; 4 bytes @ 0x21
   914  000081                     	ds	2
   915  000083                     ___fldiv@sign:
   916                           	opt stack 0
   917  000083                     CANsendMessage@tamp:
   918                           	opt stack 0
   919                           
   920                           ; 4 bytes @ 0x23
   921  000083                     	ds	1
   922  000084                     ___fldiv@rem:
   923                           	opt stack 0
   924                           
   925                           ; 4 bytes @ 0x24
   926  000084                     	ds	1
   927  000085                     CANInitialize@phaseSeg1:
   928                           	opt stack 0
   929                           
   930                           ; 1 bytes @ 0x25
   931  000085                     	ds	1
   932  000086                     CANInitialize@phaseSeg2:
   933                           	opt stack 0
   934                           
   935                           ; 1 bytes @ 0x26
   936  000086                     	ds	1
   937  000087                     CANInitialize@SJW:
   938                           	opt stack 0
   939                           
   940                           ; 1 bytes @ 0x27
   941  000087                     	ds	1
   942  000088                     CANInitialize@BRP:
   943                           	opt stack 0
   944  000088                     ___fldiv@new_exp:
   945                           	opt stack 0
   946                           
   947                           ; 2 bytes @ 0x28
   948  000088                     	ds	1
   949  000089                     CANInitialize@flags:
   950                           	opt stack 0
   951                           
   952                           ; 1 bytes @ 0x29
   953  000089                     	ds	1
   954  00008A                     ??_CANInitialize:
   955  00008A                     ___fldiv@grs:
   956                           	opt stack 0
   957                           
   958                           ; 4 bytes @ 0x2A
   959  00008A                     	ds	4
   960  00008E                     CANInitialize@propSeg:
   961                           	opt stack 0
   962  00008E                     ___fldiv@bexp:
   963                           	opt stack 0
   964                           
   965                           ; 1 bytes @ 0x2E
   966  00008E                     	ds	1
   967  00008F                     CANInitialize@FilterConfig1:
   968                           	opt stack 0
   969  00008F                     ___fldiv@aexp:
   970                           	opt stack 0
   971                           
   972                           ; 1 bytes @ 0x2F
   973  00008F                     	ds	1
   974  000090                     ?___flmul:
   975                           	opt stack 0
   976  000090                     CANInitialize@FilterConfig2:
   977                           	opt stack 0
   978  000090                     ___flmul@b:
   979                           	opt stack 0
   980                           
   981                           ; 4 bytes @ 0x30
   982  000090                     	ds	1
   983  000091                     
   984                           ; 1 bytes @ 0x31
   985  000091                     	ds	3
   986  000094                     ___flmul@a:
   987                           	opt stack 0
   988                           
   989                           ; 4 bytes @ 0x34
   990  000094                     	ds	4
   991  000098                     ??___flmul:
   992                           
   993                           ; 1 bytes @ 0x38
   994  000098                     	ds	4
   995  00009C                     ___flmul@sign:
   996                           	opt stack 0
   997                           
   998                           ; 1 bytes @ 0x3C
   999  00009C                     	ds	1
  1000  00009D                     ___flmul@aexp:
  1001                           	opt stack 0
  1002                           
  1003                           ; 1 bytes @ 0x3D
  1004  00009D                     	ds	1
  1005  00009E                     ___flmul@grs:
  1006                           	opt stack 0
  1007                           
  1008                           ; 4 bytes @ 0x3E
  1009  00009E                     	ds	4
  1010  0000A2                     ___flmul@bexp:
  1011                           	opt stack 0
  1012                           
  1013                           ; 1 bytes @ 0x42
  1014  0000A2                     	ds	1
  1015  0000A3                     ___flmul@prod:
  1016                           	opt stack 0
  1017                           
  1018                           ; 4 bytes @ 0x43
  1019  0000A3                     	ds	4
  1020  0000A7                     ___flmul@temp:
  1021                           	opt stack 0
  1022                           
  1023                           ; 2 bytes @ 0x47
  1024  0000A7                     	ds	2
  1025  0000A9                     ?___fladd:
  1026                           	opt stack 0
  1027  0000A9                     ___fladd@b:
  1028                           	opt stack 0
  1029                           
  1030                           ; 4 bytes @ 0x49
  1031  0000A9                     	ds	4
  1032  0000AD                     ___fladd@a:
  1033                           	opt stack 0
  1034                           
  1035                           ; 4 bytes @ 0x4D
  1036  0000AD                     	ds	4
  1037  0000B1                     ??___fladd:
  1038                           
  1039                           ; 1 bytes @ 0x51
  1040  0000B1                     	ds	8
  1041  0000B9                     ___fladd@signs:
  1042                           	opt stack 0
  1043                           
  1044                           ; 1 bytes @ 0x59
  1045  0000B9                     	ds	1
  1046  0000BA                     ___fladd@aexp:
  1047                           	opt stack 0
  1048                           
  1049                           ; 1 bytes @ 0x5A
  1050  0000BA                     	ds	1
  1051  0000BB                     ___fladd@bexp:
  1052                           	opt stack 0
  1053                           
  1054                           ; 1 bytes @ 0x5B
  1055  0000BB                     	ds	1
  1056  0000BC                     ___fladd@grs:
  1057                           	opt stack 0
  1058                           
  1059                           ; 1 bytes @ 0x5C
  1060  0000BC                     	ds	1
  1061  0000BD                     ?_eval_poly:
  1062                           	opt stack 0
  1063  0000BD                     ?___flneg:
  1064                           	opt stack 0
  1065  0000BD                     eval_poly@x:
  1066                           	opt stack 0
  1067  0000BD                     ___flneg@f1:
  1068                           	opt stack 0
  1069                           
  1070                           ; 4 bytes @ 0x5D
  1071  0000BD                     	ds	4
  1072  0000C1                     ?_sqrt:
  1073                           	opt stack 0
  1074  0000C1                     ?_fabs:
  1075                           	opt stack 0
  1076  0000C1                     ?___fltol:
  1077                           	opt stack 0
  1078  0000C1                     eval_poly@d:
  1079                           	opt stack 0
  1080  0000C1                     fabs@d:
  1081                           	opt stack 0
  1082  0000C1                     ___fltol@f1:
  1083                           	opt stack 0
  1084  0000C1                     sqrt@a:
  1085                           	opt stack 0
  1086                           
  1087                           ; 4 bytes @ 0x61
  1088  0000C1                     	ds	2
  1089  0000C3                     eval_poly@n:
  1090                           	opt stack 0
  1091                           
  1092                           ; 2 bytes @ 0x63
  1093  0000C3                     	ds	2
  1094  0000C5                     ??_sqrt:
  1095  0000C5                     ??_eval_poly:
  1096  0000C5                     ??___fltol:
  1097  0000C5                     ___flge@ff1:
  1098                           	opt stack 0
  1099                           
  1100                           ; 4 bytes @ 0x65
  1101  0000C5                     	ds	4
  1102  0000C9                     ___fltol@sign1:
  1103                           	opt stack 0
  1104  0000C9                     sqrt@sign:
  1105                           	opt stack 0
  1106  0000C9                     eval_poly@res:
  1107                           	opt stack 0
  1108  0000C9                     ___flge@ff2:
  1109                           	opt stack 0
  1110                           
  1111                           ; 4 bytes @ 0x69
  1112  0000C9                     	ds	1
  1113  0000CA                     ___fltol@exp1:
  1114                           	opt stack 0
  1115  0000CA                     sqrt@i:
  1116                           	opt stack 0
  1117                           
  1118                           ; 1 bytes @ 0x6A
  1119  0000CA                     	ds	1
  1120  0000CB                     ?___xxtofl:
  1121                           	opt stack 0
  1122  0000CB                     sqrt@tfrac:
  1123                           	opt stack 0
  1124  0000CB                     ___xxtofl@val:
  1125                           	opt stack 0
  1126                           
  1127                           ; 4 bytes @ 0x6B
  1128  0000CB                     	ds	2
  1129  0000CD                     ??___flge:
  1130                           
  1131                           ; 1 bytes @ 0x6D
  1132  0000CD                     	ds	2
  1133  0000CF                     ??___xxtofl:
  1134  0000CF                     sqrt@p:
  1135                           	opt stack 0
  1136                           
  1137                           ; 1 bytes @ 0x6F
  1138  0000CF                     	ds	1
  1139  0000D0                     sqrt@grs:
  1140                           	opt stack 0
  1141                           
  1142                           ; 4 bytes @ 0x70
  1143  0000D0                     	ds	1
  1144  0000D1                     ?_atan:
  1145                           	opt stack 0
  1146  0000D1                     atan@f:
  1147                           	opt stack 0
  1148                           
  1149                           ; 4 bytes @ 0x71
  1150  0000D1                     	ds	2
  1151  0000D3                     ___xxtofl@sign:
  1152                           	opt stack 0
  1153                           
  1154                           ; 1 bytes @ 0x73
  1155  0000D3                     	ds	1
  1156  0000D4                     ___xxtofl@exp:
  1157                           	opt stack 0
  1158  0000D4                     sqrt@exp:
  1159                           	opt stack 0
  1160                           
  1161                           ; 2 bytes @ 0x74
  1162  0000D4                     	ds	1
  1163  0000D5                     ___xxtofl@arg:
  1164                           	opt stack 0
  1165                           
  1166                           ; 4 bytes @ 0x75
  1167  0000D5                     	ds	1
  1168  0000D6                     sqrt@root:
  1169                           	opt stack 0
  1170                           
  1171                           ; 4 bytes @ 0x76
  1172  0000D6                     	ds	3
  1173  0000D9                     ?_floor:
  1174                           	opt stack 0
  1175  0000D9                     floor@x:
  1176                           	opt stack 0
  1177                           
  1178                           ; 4 bytes @ 0x79
  1179  0000D9                     	ds	1
  1180  0000DA                     sqrt@frac:
  1181                           	opt stack 0
  1182                           
  1183                           ; 4 bytes @ 0x7A
  1184  0000DA                     	ds	3
  1185  0000DD                     floor@i:
  1186                           	opt stack 0
  1187                           
  1188                           ; 4 bytes @ 0x7D
  1189  0000DD                     	ds	1
  1190  0000DE                     ?_asin:
  1191                           	opt stack 0
  1192  0000DE                     asin@x:
  1193                           	opt stack 0
  1194                           
  1195                           ; 4 bytes @ 0x7E
  1196  0000DE                     	ds	3
  1197  0000E1                     floor@expon:
  1198                           	opt stack 0
  1199                           
  1200                           ; 2 bytes @ 0x81
  1201  0000E1                     	ds	1
  1202  0000E2                     ??_parallelo:
  1203  0000E2                     
  1204                           ; 1 bytes @ 0x82
  1205  0000E2                     	ds	1
  1206  0000E3                     
  1207                           ; 1 bytes @ 0x83
  1208  0000E3                     	ds	1
  1209  0000E4                     ??_main:
  1210                           
  1211                           ; 1 bytes @ 0x84
  1212  0000E4                     	ds	1
  1213                           tblptru	equ	0xFF8
  1214                           tblptrh	equ	0xFF7
  1215                           tblptrl	equ	0xFF6
  1216                           tablat	equ	0xFF5
  1217                           postinc0	equ	0xFEE
  1218                           wreg	equ	0xFE8
  1219                           postdec1	equ	0xFE5
  1220                           fsr1l	equ	0xFE1
  1221                           
  1222                           	psect	cstackCOMRAM
  1223  000001                     __pcstackCOMRAM:
  1224                           	opt stack 0
  1225  000001                     ?___lwdiv:
  1226                           	opt stack 0
  1227  000001                     ___lwdiv@dividend:
  1228                           	opt stack 0
  1229                           
  1230                           ; 2 bytes @ 0x0
  1231  000001                     	ds	2
  1232  000003                     ___lwdiv@divisor:
  1233                           	opt stack 0
  1234                           
  1235                           ; 2 bytes @ 0x2
  1236  000003                     	ds	2
  1237  000005                     ___lwdiv@quotient:
  1238                           	opt stack 0
  1239                           
  1240                           ; 2 bytes @ 0x4
  1241  000005                     	ds	2
  1242  000007                     ___lwdiv@counter:
  1243                           	opt stack 0
  1244                           
  1245                           ; 1 bytes @ 0x6
  1246  000007                     	ds	1
  1247  000008                     ??_ISR_Alta:
  1248                           
  1249                           ; 1 bytes @ 0x7
  1250  000008                     	ds	16
  1251  000018                     i1_CANisTxReady$2800:
  1252                           	opt stack 0
  1253  000018                     CANreceiveMessage@msg:
  1254                           	opt stack 0
  1255  000018                     i1CANsendMessage@identifier:
  1256                           	opt stack 0
  1257                           
  1258                           ; 4 bytes @ 0x17
  1259  000018                     	ds	2
  1260  00001A                     ??_CANreceiveMessage:
  1261                           
  1262                           ; 1 bytes @ 0x19
  1263  00001A                     	ds	2
  1264  00001C                     i1CANsendMessage@data:
  1265                           	opt stack 0
  1266                           
  1267                           ; 2 bytes @ 0x1B
  1268  00001C                     	ds	2
  1269  00001E                     i1CANsendMessage@dataLength:
  1270                           	opt stack 0
  1271                           
  1272                           ; 1 bytes @ 0x1D
  1273  00001E                     	ds	1
  1274  00001F                     i1CANsendMessage@flags:
  1275                           	opt stack 0
  1276                           
  1277                           ; 1 bytes @ 0x1E
  1278  00001F                     	ds	1
  1279  000020                     ??i1_CANsendMessage:
  1280                           
  1281                           ; 1 bytes @ 0x1F
  1282  000020                     	ds	2
  1283  000022                     CANreceiveMessage@error:
  1284                           	opt stack 0
  1285                           
  1286                           ; 1 bytes @ 0x21
  1287  000022                     	ds	1
  1288  000023                     CANreceiveMessage@tamp:
  1289                           	opt stack 0
  1290                           
  1291                           ; 1 bytes @ 0x22
  1292  000023                     	ds	1
  1293  000024                     i1CANsendMessage@tamp:
  1294                           	opt stack 0
  1295                           
  1296                           ; 4 bytes @ 0x23
  1297  000024                     	ds	4
  1298                           tblptru	equ	0xFF8
  1299                           tblptrh	equ	0xFF7
  1300                           tblptrl	equ	0xFF6
  1301                           tablat	equ	0xFF5
  1302                           postinc0	equ	0xFEE
  1303                           wreg	equ	0xFE8
  1304                           postdec1	equ	0xFE5
  1305                           fsr1l	equ	0xFE1
  1306                           
  1307 ;;
  1308 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1309 ;;
  1310 ;; *************** function _main *****************
  1311 ;; Defined at:
  1312 ;;		line 224 in file "parcheggio.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;		None
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;		None
  1317 ;; Return value:  Size  Location     Type
  1318 ;;                  1    wreg      void 
  1319 ;; Registers used:
  1320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1328 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1329 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1330 ;;Total ram usage:        1 bytes
  1331 ;; Hardware stack levels required when called:   10
  1332 ;; This function calls:
  1333 ;;		_CANisTxReady
  1334 ;;		_CANsendMessage
  1335 ;;		_can_interpreter
  1336 ;;		_configurations
  1337 ;;		_delay_ms
  1338 ;;		_park_routine
  1339 ;;		_park_search
  1340 ;; This function is called by:
  1341 ;;		Startup code after reset
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345                           	psect	text0
  1346  0061E8                     __ptext0:
  1347                           	opt stack 0
  1348  0061E8                     _main:
  1349                           	opt stack 21
  1350                           
  1351                           ;parcheggio.c: 225: MUX_select[0] = 0b00000000;
  1352                           
  1353                           ;incstack = 0
  1354  0061E8  0E00               	movlw	0
  1355  0061EA  0101               	movlb	1	; () banked
  1356  0061EC  6F00               	movwf	_MUX_select& (0+255),b	;volatile
  1357                           
  1358                           ;parcheggio.c: 226: MUX_select[1] = 0b00000001;
  1359  0061EE  0E01               	movlw	1
  1360  0061F0  0101               	movlb	1	; () banked
  1361  0061F2  6F01               	movwf	(_MUX_select+1)& (0+255),b	;volatile
  1362                           
  1363                           ;parcheggio.c: 227: MUX_select[2] = 0b00000010;
  1364  0061F4  0E02               	movlw	2
  1365  0061F6  0101               	movlb	1	; () banked
  1366  0061F8  6F02               	movwf	(_MUX_select+2)& (0+255),b	;volatile
  1367                           
  1368                           ;parcheggio.c: 228: MUX_select[3] = 0b00000011;
  1369  0061FA  0E03               	movlw	3
  1370  0061FC  0101               	movlb	1	; () banked
  1371  0061FE  6F03               	movwf	(_MUX_select+3)& (0+255),b	;volatile
  1372                           
  1373                           ;parcheggio.c: 229: MUX_select[4] = 0b00000100;
  1374  006200  0E04               	movlw	4
  1375  006202  0101               	movlb	1	; () banked
  1376  006204  6F04               	movwf	(_MUX_select+4)& (0+255),b	;volatile
  1377                           
  1378                           ;parcheggio.c: 230: MUX_select[5] = 0b00000101;
  1379  006206  0E05               	movlw	5
  1380  006208  0101               	movlb	1	; () banked
  1381  00620A  6F05               	movwf	(_MUX_select+5)& (0+255),b	;volatile
  1382                           
  1383                           ;parcheggio.c: 231: MUX_select[6] = 0b00000110;
  1384  00620C  0E06               	movlw	6
  1385  00620E  0101               	movlb	1	; () banked
  1386  006210  6F06               	movwf	(_MUX_select+6)& (0+255),b	;volatile
  1387                           
  1388                           ;parcheggio.c: 232: MUX_select[7] = 0b00000111;
  1389  006212  0E07               	movlw	7
  1390  006214  0101               	movlb	1	; () banked
  1391  006216  6F07               	movwf	(_MUX_select+7)& (0+255),b	;volatile
  1392                           
  1393                           ; BSR set to: 1
  1394                           ;parcheggio.c: 234: configurations();
  1395  006218  ECA1  F031         	call	_configurations	;wreg free
  1396                           
  1397                           ;parcheggio.c: 236: PORTBbits.RB4 = 0;
  1398  00621C  9881               	bcf	3969,4,c	;volatile
  1399                           
  1400                           ;parcheggio.c: 237: PORTBbits.RB5 = 0;
  1401  00621E  9A81               	bcf	3969,5,c	;volatile
  1402                           
  1403                           ;parcheggio.c: 238: PORTBbits.RB6 = 0;
  1404  006220  9C81               	bcf	3969,6,c	;volatile
  1405                           
  1406                           ;parcheggio.c: 240: request_sent = 0;
  1407  006222  9646               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1408                           
  1409                           ;parcheggio.c: 241: start_operation = 0;
  1410  006224  9A46               	bcf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  1411                           
  1412                           ;parcheggio.c: 242: delay_ms(500);
  1413  006226  0E01               	movlw	1
  1414  006228  0100               	movlb	0	; () banked
  1415  00622A  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1416  00622C  0EF4               	movlw	244
  1417  00622E  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  1418  006230  ECDF  F032         	call	_delay_ms	;wreg free
  1419                           
  1420                           ;parcheggio.c: 245: while (activation != 1) {
  1421                           
  1422                           ;parcheggio.c: 244: while (1) {
  1423  006234  D033               	goto	l8695
  1424  006236                     l8687:
  1425                           
  1426                           ;parcheggio.c: 246: delay_ms(100);
  1427  006236  0E00               	movlw	0
  1428  006238  0100               	movlb	0	; () banked
  1429  00623A  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1430  00623C  0E64               	movlw	100
  1431  00623E  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  1432  006240  ECDF  F032         	call	_delay_ms	;wreg free
  1433  006244                     l8689:
  1434  006244  EC25  F033         	call	_CANisTxReady	;wreg free
  1435  006248  0900               	iorlw	0
  1436  00624A  B4D8               	btfsc	status,2,c
  1437  00624C  D7FB               	goto	l8689
  1438                           
  1439                           ;parcheggio.c: 248: PORTBbits.RB4 = ~PORTBbits.RB4;
  1440  00624E  A881               	btfss	3969,4,c	;volatile
  1441  006250  D002               	goto	u11890
  1442  006252  0E01               	movlw	1
  1443  006254  D001               	goto	u11896
  1444  006256                     u11890:
  1445  006256  0E00               	movlw	0
  1446  006258                     u11896:
  1447  006258  0AFF               	xorlw	255
  1448  00625A  0100               	movlb	0	; () banked
  1449  00625C  6FE4               	movwf	??_main& (0+255),b
  1450  00625E  0100               	movlb	0	; () banked
  1451  006260  3BE4               	swapf	??_main& (0+255),f,b
  1452  006262  5081               	movf	3969,w,c	;volatile
  1453  006264  0100               	movlb	0	; () banked
  1454  006266  19E4               	xorwf	??_main& (0+255),w,b
  1455  006268  0BEF               	andlw	-17
  1456  00626A  19E4               	xorwf	??_main& (0+255),w,b
  1457  00626C  6E81               	movwf	3969,c	;volatile
  1458                           
  1459                           ; BSR set to: 0
  1460                           ;parcheggio.c: 249: CANsendMessage(0b00000001111, sensor_distance_short, 8, CAN_CONFIG_S
      +                          TD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1461  00626E  0E0F               	movlw	15
  1462  006270  0100               	movlb	0	; () banked
  1463  006272  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1464  006274  0E00               	movlw	0
  1465  006276  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1466  006278  0E00               	movlw	0
  1467  00627A  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1468  00627C  0E00               	movlw	0
  1469  00627E  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1470  006280  0E9B               	movlw	low _sensor_distance_short
  1471  006282  0100               	movlb	0	; () banked
  1472  006284  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1473  006286  0E01               	movlw	high _sensor_distance_short
  1474  006288  0100               	movlb	0	; () banked
  1475  00628A  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1476  00628C  0E08               	movlw	8
  1477  00628E  0100               	movlb	0	; () banked
  1478  006290  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1479  006292  0EFC               	movlw	252
  1480  006294  0100               	movlb	0	; () banked
  1481  006296  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1482  006298  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1483  00629C                     l8695:
  1484  00629C  A045               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1485  00629E  D7CB               	goto	l8687
  1486                           
  1487                           ;parcheggio.c: 250: }
  1488                           ;parcheggio.c: 251: park_search();
  1489  0062A0  EC62  F02B         	call	_park_search	;wreg free
  1490                           
  1491                           ;parcheggio.c: 252: can_interpreter();
  1492  0062A4  ECD7  F031         	call	_can_interpreter	;wreg free
  1493                           
  1494                           ;parcheggio.c: 253: park_routine();
  1495  0062A8  EC2C  F01D         	call	_park_routine	;wreg free
  1496  0062AC  D7F7               	goto	l8695
  1497  0062AE                     __end_of_main:
  1498                           	opt stack 0
  1499                           tblptru	equ	0xFF8
  1500                           tblptrh	equ	0xFF7
  1501                           tblptrl	equ	0xFF6
  1502                           tablat	equ	0xFF5
  1503                           postinc0	equ	0xFEE
  1504                           wreg	equ	0xFE8
  1505                           postdec1	equ	0xFE5
  1506                           fsr1l	equ	0xFE1
  1507                           status	equ	0xFD8
  1508                           
  1509 ;; *************** function _park_search *****************
  1510 ;; Defined at:
  1511 ;;		line 257 in file "parcheggio.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;		None
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;		None
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  1    wreg      void 
  1518 ;; Registers used:
  1519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1527 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1528 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1529 ;;Total ram usage:        2 bytes
  1530 ;; Hardware stack levels used:    1
  1531 ;; Hardware stack levels required when called:    9
  1532 ;; This function calls:
  1533 ;;		_CANisTxReady
  1534 ;;		_CANsendMessage
  1535 ;;		___xxtofl
  1536 ;;		_abs
  1537 ;;		_parallelo
  1538 ;; This function is called by:
  1539 ;;		_main
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           	psect	text1
  1544  0056C4                     __ptext1:
  1545                           	opt stack 0
  1546  0056C4                     _park_search:
  1547                           	opt stack 21
  1548                           
  1549                           ;parcheggio.c: 258: while ((activation == 1) && (PORTBbits.RB5 == 0)) {
  1550                           
  1551                           ;incstack = 0
  1552  0056C4  D0DD               	goto	l746
  1553  0056C6                     l8093:
  1554                           
  1555                           ;parcheggio.c: 259: parallelo();
  1556  0056C6  EC1D  F028         	call	_parallelo	;wreg free
  1557                           
  1558                           ;parcheggio.c: 261: if (sensor_distance[0] > 50) {
  1559  0056CA  5029               	movf	_sensor_distance+1,w,c	;volatile
  1560  0056CC  E104               	bnz	u10860
  1561  0056CE  0E33               	movlw	51
  1562  0056D0  5C28               	subwf	_sensor_distance,w,c	;volatile
  1563  0056D2  A0D8               	btfss	status,0,c
  1564  0056D4  D02A               	goto	l748
  1565  0056D6                     u10860:
  1566                           
  1567                           ;parcheggio.c: 262: if (request_sent == 0) {
  1568  0056D6  B646               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1569  0056D8  D026               	goto	l8109
  1570  0056DA                     l8101:
  1571  0056DA  EC25  F033         	call	_CANisTxReady	;wreg free
  1572  0056DE  0900               	iorlw	0
  1573  0056E0  B4D8               	btfsc	status,2,c
  1574  0056E2  D7FB               	goto	l8101
  1575                           
  1576                           ;parcheggio.c: 264: CANsendMessage(0b00000001000, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1577  0056E4  0E08               	movlw	8
  1578  0056E6  0100               	movlb	0	; () banked
  1579  0056E8  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1580  0056EA  0E00               	movlw	0
  1581  0056EC  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1582  0056EE  0E00               	movlw	0
  1583  0056F0  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1584  0056F2  0E00               	movlw	0
  1585  0056F4  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1586  0056F6  0E6B               	movlw	low _data
  1587  0056F8  0100               	movlb	0	; () banked
  1588  0056FA  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1589  0056FC  0E01               	movlw	high _data
  1590  0056FE  0100               	movlb	0	; () banked
  1591  005700  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1592  005702  0E08               	movlw	8
  1593  005704  0100               	movlb	0	; () banked
  1594  005706  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1595  005708  0EFC               	movlw	252
  1596  00570A  0100               	movlb	0	; () banked
  1597  00570C  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1598  00570E  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1599                           
  1600                           ;parcheggio.c: 265: request_sent = 1;
  1601  005712  8646               	bsf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1602                           
  1603                           ;parcheggio.c: 266: alignment_gap = 0;
  1604  005714  0E00               	movlw	0
  1605  005716  0100               	movlb	0	; () banked
  1606  005718  6FE5               	movwf	_alignment_gap& (0+255),b
  1607  00571A  0E00               	movlw	0
  1608  00571C  6FE6               	movwf	(_alignment_gap+1)& (0+255),b
  1609  00571E  0E00               	movlw	0
  1610  005720  6FE7               	movwf	(_alignment_gap+2)& (0+255),b
  1611  005722  0E00               	movlw	0
  1612  005724  6FE8               	movwf	(_alignment_gap+3)& (0+255),b
  1613  005726                     l8109:
  1614                           
  1615                           ;parcheggio.c: 267: }
  1616                           ;parcheggio.c: 268: LATBbits.LATB4 = 1;
  1617  005726  888A               	bsf	3978,4,c	;volatile
  1618                           
  1619                           ;parcheggio.c: 269: } else {
  1620  005728  D02F               	goto	l8113
  1621  00572A                     l748:
  1622                           
  1623                           ;parcheggio.c: 270: LATBbits.LATB4 = 0;
  1624  00572A  988A               	bcf	3978,4,c	;volatile
  1625                           
  1626                           ;parcheggio.c: 271: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  1627  00572C  EE20  F02A         	lfsr	2,_sensor_distance+2	;volatile
  1628  005730  CFDE F1C8          	movff	postinc2,??_park_search
  1629  005734  CFDD F1C9          	movff	postdec2,??_park_search+1
  1630  005738  0101               	movlb	1	; () banked
  1631  00573A  1FC8               	comf	??_park_search& (0+255),f,b
  1632  00573C  1FC9               	comf	(??_park_search+1)& (0+255),f,b
  1633  00573E  4BC8               	infsnz	??_park_search& (0+255),f,b
  1634  005740  2BC9               	incf	(??_park_search+1)& (0+255),f,b
  1635  005742  5028               	movf	_sensor_distance,w,c	;volatile
  1636  005744  0101               	movlb	1	; () banked
  1637  005746  25C8               	addwf	??_park_search& (0+255),w,b
  1638  005748  0100               	movlb	0	; () banked
  1639  00574A  6F77               	movwf	abs@a& (0+255),b
  1640  00574C  5029               	movf	_sensor_distance+1,w,c	;volatile
  1641  00574E  0101               	movlb	1	; () banked
  1642  005750  21C9               	addwfc	(??_park_search+1)& (0+255),w,b
  1643  005752  0100               	movlb	0	; () banked
  1644  005754  6F78               	movwf	(abs@a+1)& (0+255),b
  1645  005756  ECF9  F032         	call	_abs	;wreg free
  1646  00575A  0100               	movlb	0	; () banked
  1647  00575C  C077  F0CB         	movff	?_abs,___xxtofl@val
  1648  005760  0100               	movlb	0	; () banked
  1649  005762  C078  F0CC         	movff	?_abs+1,___xxtofl@val+1
  1650  005766  0100               	movlb	0	; () banked
  1651  005768  0E00               	movlw	0
  1652  00576A  BFCC               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1653  00576C  0EFF               	movlw	-1
  1654  00576E  6FCD               	movwf	(___xxtofl@val+2)& (0+255),b
  1655  005770  6FCE               	movwf	(___xxtofl@val+3)& (0+255),b
  1656  005772  0E01               	movlw	1
  1657  005774  EC7B  F02A         	call	___xxtofl
  1658  005778  C0CB  F0E5         	movff	?___xxtofl,_alignment_gap
  1659  00577C  C0CC  F0E6         	movff	?___xxtofl+1,_alignment_gap+1
  1660  005780  C0CD  F0E7         	movff	?___xxtofl+2,_alignment_gap+2
  1661  005784  C0CE  F0E8         	movff	?___xxtofl+3,_alignment_gap+3
  1662  005788                     l8113:
  1663                           
  1664                           ;parcheggio.c: 272: }
  1665                           ;parcheggio.c: 274: if ((sensor_distance[0] < 50) && (request_sent == 1)&&(sensor_distan
      +                          ce[1] < 50)) {
  1666  005788  5029               	movf	_sensor_distance+1,w,c	;volatile
  1667  00578A  E128               	bnz	l8125
  1668  00578C  0E32               	movlw	50
  1669  00578E  5C28               	subwf	_sensor_distance,w,c	;volatile
  1670  005790  A0D8               	btfss	status,0,c
  1671  005792  A646               	btfss	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1672  005794  D023               	goto	l8125
  1673  005796  502B               	movf	_sensor_distance+3,w,c	;volatile
  1674  005798  E121               	bnz	l8125
  1675  00579A  0E32               	movlw	50
  1676  00579C  5C2A               	subwf	_sensor_distance+2,w,c	;volatile
  1677  00579E  B0D8               	btfsc	status,0,c
  1678  0057A0  D01D               	goto	l8125
  1679                           
  1680                           ;parcheggio.c: 275: request_sent = 0;
  1681  0057A2  9646               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1682  0057A4                     l8121:
  1683  0057A4  EC25  F033         	call	_CANisTxReady	;wreg free
  1684  0057A8  0900               	iorlw	0
  1685  0057AA  B4D8               	btfsc	status,2,c
  1686  0057AC  D7FB               	goto	l8121
  1687                           
  1688                           ;parcheggio.c: 277: CANsendMessage(0b00000000111, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1689  0057AE  0E07               	movlw	7
  1690  0057B0  0100               	movlb	0	; () banked
  1691  0057B2  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1692  0057B4  0E00               	movlw	0
  1693  0057B6  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1694  0057B8  0E00               	movlw	0
  1695  0057BA  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1696  0057BC  0E00               	movlw	0
  1697  0057BE  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1698  0057C0  0E6B               	movlw	low _data
  1699  0057C2  0100               	movlb	0	; () banked
  1700  0057C4  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1701  0057C6  0E01               	movlw	high _data
  1702  0057C8  0100               	movlb	0	; () banked
  1703  0057CA  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1704  0057CC  0E08               	movlw	8
  1705  0057CE  0100               	movlb	0	; () banked
  1706  0057D0  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1707  0057D2  0EFC               	movlw	252
  1708  0057D4  0100               	movlb	0	; () banked
  1709  0057D6  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1710  0057D8  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1711  0057DC                     l8125:
  1712                           
  1713                           ;parcheggio.c: 278: }
  1714                           ;parcheggio.c: 280: if (distance_received == 1) {
  1715  0057DC  AA45               	btfss	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1716  0057DE  D050               	goto	l746
  1717                           
  1718                           ;parcheggio.c: 281: if (distance_average > 65) {
  1719  0057E0  0101               	movlb	1	; () banked
  1720  0057E2  5151               	movf	(_distance_average+1)& (0+255),w,b	;volatile
  1721  0057E4  E105               	bnz	u10940
  1722  0057E6  0E42               	movlw	66
  1723  0057E8  0101               	movlb	1	; () banked
  1724  0057EA  5D50               	subwf	_distance_average& (0+255),w,b	;volatile
  1725  0057EC  A0D8               	btfss	status,0,c
  1726  0057EE  D046               	goto	l759
  1727  0057F0                     u10940:
  1728                           
  1729                           ; BSR set to: 1
  1730                           ;parcheggio.c: 282: PORTBbits.RB5 = 1;
  1731  0057F0  8A81               	bsf	3969,5,c	;volatile
  1732                           
  1733                           ; BSR set to: 1
  1734                           ;parcheggio.c: 283: data[0] = 1;
  1735  0057F2  0E01               	movlw	1
  1736  0057F4  0101               	movlb	1	; () banked
  1737  0057F6  6F6B               	movwf	_data& (0+255),b
  1738                           
  1739                           ; BSR set to: 1
  1740                           ;parcheggio.c: 284: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  1741  0057F8  0E0B               	movlw	11
  1742  0057FA  0100               	movlb	0	; () banked
  1743  0057FC  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1744  0057FE  0E00               	movlw	0
  1745  005800  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1746  005802  0E00               	movlw	0
  1747  005804  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1748  005806  0E00               	movlw	0
  1749  005808  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1750  00580A  0E6B               	movlw	low _data
  1751  00580C  0100               	movlb	0	; () banked
  1752  00580E  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1753  005810  0E01               	movlw	high _data
  1754  005812  0100               	movlb	0	; () banked
  1755  005814  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1756  005816  0E01               	movlw	1
  1757  005818  0100               	movlb	0	; () banked
  1758  00581A  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1759  00581C  0EBC               	movlw	188
  1760  00581E  0100               	movlb	0	; () banked
  1761  005820  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1762  005822  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1763                           
  1764                           ;parcheggio.c: 285: if ((request_sent1 == 0)&&(sensor_distance[0] < 40)) {
  1765  005826  B846               	btfsc	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1766  005828  D02B               	goto	l746
  1767  00582A  5029               	movf	_sensor_distance+1,w,c	;volatile
  1768  00582C  E129               	bnz	l746
  1769  00582E  0E28               	movlw	40
  1770  005830  5C28               	subwf	_sensor_distance,w,c	;volatile
  1771  005832  B0D8               	btfsc	status,0,c
  1772  005834  D025               	goto	l746
  1773                           
  1774                           ;parcheggio.c: 286: data_test[0] = 50;
  1775  005836  0E32               	movlw	50
  1776  005838  0101               	movlb	1	; () banked
  1777  00583A  6F93               	movwf	_data_test& (0+255),b
  1778                           
  1779                           ; BSR set to: 1
  1780                           ;parcheggio.c: 287: asd = 1;
  1781  00583C  8245               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  1782  00583E                     l8143:
  1783  00583E  EC25  F033         	call	_CANisTxReady	;wreg free
  1784  005842  0900               	iorlw	0
  1785  005844  B4D8               	btfsc	status,2,c
  1786  005846  D7FB               	goto	l8143
  1787                           
  1788                           ;parcheggio.c: 289: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1789  005848  0E0D               	movlw	13
  1790  00584A  0100               	movlb	0	; () banked
  1791  00584C  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1792  00584E  0E00               	movlw	0
  1793  005850  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1794  005852  0E00               	movlw	0
  1795  005854  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1796  005856  0E00               	movlw	0
  1797  005858  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1798  00585A  0E93               	movlw	low _data_test
  1799  00585C  0100               	movlb	0	; () banked
  1800  00585E  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1801  005860  0E01               	movlw	high _data_test
  1802  005862  0100               	movlb	0	; () banked
  1803  005864  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1804  005866  0E08               	movlw	8
  1805  005868  0100               	movlb	0	; () banked
  1806  00586A  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1807  00586C  0EBC               	movlw	188
  1808  00586E  0100               	movlb	0	; () banked
  1809  005870  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1810  005872  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1811                           
  1812                           ;parcheggio.c: 291: distance_received1 = 0;
  1813  005876  9C45               	bcf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
  1814                           
  1815                           ;parcheggio.c: 292: request_sent1 = 1;
  1816  005878  8846               	bsf	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1817                           
  1818                           ;parcheggio.c: 293: }
  1819                           ;parcheggio.c: 294: } else {
  1820  00587A  D002               	goto	l746
  1821  00587C                     l759:
  1822                           
  1823                           ; BSR set to: 1
  1824                           ;parcheggio.c: 295: distance_received = 0;
  1825  00587C  9A45               	bcf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1826                           
  1827                           ;parcheggio.c: 296: PORTBbits.RB5 = 0;
  1828  00587E  9A81               	bcf	3969,5,c	;volatile
  1829  005880                     l746:
  1830  005880  A045               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1831  005882  0012               	return	
  1832  005884  BA81               	btfsc	3969,5,c	;volatile
  1833  005886  0012               	return	
  1834  005888  D71E               	goto	l8093
  1835  00588A                     __end_of_park_search:
  1836                           	opt stack 0
  1837                           tblptru	equ	0xFF8
  1838                           tblptrh	equ	0xFF7
  1839                           tblptrl	equ	0xFF6
  1840                           tablat	equ	0xFF5
  1841                           postinc0	equ	0xFEE
  1842                           wreg	equ	0xFE8
  1843                           postdec1	equ	0xFE5
  1844                           fsr1l	equ	0xFE1
  1845                           postinc2	equ	0xFDE
  1846                           postdec2	equ	0xFDD
  1847                           status	equ	0xFD8
  1848                           
  1849 ;; *************** function _park_routine *****************
  1850 ;; Defined at:
  1851 ;;		line 302 in file "parcheggio.c"
  1852 ;; Parameters:    Size  Location     Type
  1853 ;;		None
  1854 ;; Auto vars:     Size  Location     Type
  1855 ;;		None
  1856 ;; Return value:  Size  Location     Type
  1857 ;;                  1    wreg      void 
  1858 ;; Registers used:
  1859 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1860 ;; Tracked objects:
  1861 ;;		On entry : 0/0
  1862 ;;		On exit  : 0/0
  1863 ;;		Unchanged: 0/0
  1864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1866 ;;      Locals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  1867 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1868 ;;      Totals:         0       0       4       8       0       0       0       0       0       0       0       0       
      +0       0
  1869 ;;Total ram usage:       12 bytes
  1870 ;; Hardware stack levels used:    1
  1871 ;; Hardware stack levels required when called:    9
  1872 ;; This function calls:
  1873 ;;		_CANisTxReady
  1874 ;;		_CANsendMessage
  1875 ;;		___fladd
  1876 ;;		___flneg
  1877 ;;		___fltol
  1878 ;;		___xxtofl
  1879 ;;		_can_send
  1880 ;;		_delay_ms
  1881 ;;		_delay_s
  1882 ;;		_matematica
  1883 ;;		_parallelo
  1884 ;; This function is called by:
  1885 ;;		_main
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889                           	psect	text2
  1890  003A58                     __ptext2:
  1891                           	opt stack 0
  1892  003A58                     _park_routine:
  1893                           	opt stack 21
  1894                           
  1895                           ;parcheggio.c: 303: avvicinamento = 0;
  1896                           
  1897                           ;incstack = 0
  1898  003A58  9445               	bcf	_avvicinamento/(0+8),_avvicinamento& (0+7),c	;volatile
  1899                           
  1900                           ;parcheggio.c: 304: data_correction[0] = 0;
  1901  003A5A  0E00               	movlw	0
  1902  003A5C  0101               	movlb	1	; () banked
  1903  003A5E  6F7B               	movwf	_data_correction& (0+255),b
  1904                           
  1905                           ; BSR set to: 1
  1906                           ;parcheggio.c: 305: parallelo();
  1907  003A60  EC1D  F028         	call	_parallelo	;wreg free
  1908                           
  1909                           ;parcheggio.c: 307: while ((asd == 1)&&(PORTBbits.RB5 == 1) && (activation == 1)) {
  1910  003A64  D03E               	goto	l8173
  1911  003A66                     l8159:
  1912                           
  1913                           ;parcheggio.c: 308: delay_ms(200);
  1914  003A66  0E00               	movlw	0
  1915  003A68  0100               	movlb	0	; () banked
  1916  003A6A  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1917  003A6C  0EC8               	movlw	200
  1918  003A6E  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  1919  003A70  ECDF  F032         	call	_delay_ms	;wreg free
  1920                           
  1921                           ;parcheggio.c: 309: PORTBbits.RB6 = ~PORTBbits.RB6;
  1922  003A74  AC81               	btfss	3969,6,c	;volatile
  1923  003A76  D002               	goto	u11000
  1924  003A78  0E01               	movlw	1
  1925  003A7A  D001               	goto	u11006
  1926  003A7C                     u11000:
  1927  003A7C  0E00               	movlw	0
  1928  003A7E                     u11006:
  1929  003A7E  0AFF               	xorlw	255
  1930  003A80  0101               	movlb	1	; () banked
  1931  003A82  6FEC               	movwf	??_park_routine& (0+255),b
  1932  003A84  0101               	movlb	1	; () banked
  1933  003A86  3BEC               	swapf	??_park_routine& (0+255),f,b
  1934  003A88  47EC               	rlncf	??_park_routine& (0+255),f,b
  1935  003A8A  47EC               	rlncf	??_park_routine& (0+255),f,b
  1936  003A8C  5081               	movf	3969,w,c	;volatile
  1937  003A8E  0101               	movlb	1	; () banked
  1938  003A90  19EC               	xorwf	??_park_routine& (0+255),w,b
  1939  003A92  0BBF               	andlw	-65
  1940  003A94  19EC               	xorwf	??_park_routine& (0+255),w,b
  1941  003A96  6E81               	movwf	3969,c	;volatile
  1942                           
  1943                           ; BSR set to: 1
  1944                           ;parcheggio.c: 310: parallelo();
  1945  003A98  EC1D  F028         	call	_parallelo	;wreg free
  1946                           
  1947                           ;parcheggio.c: 311: if (data_correction[0] > 30) {
  1948  003A9C  0E1E               	movlw	30
  1949  003A9E  0101               	movlb	1	; () banked
  1950  003AA0  657B               	cpfsgt	_data_correction& (0+255),b
  1951  003AA2  D003               	goto	l8169
  1952                           
  1953                           ; BSR set to: 1
  1954                           ;parcheggio.c: 312: data_correction[0] = 0;
  1955  003AA4  0E00               	movlw	0
  1956  003AA6  0101               	movlb	1	; () banked
  1957  003AA8  6F7B               	movwf	_data_correction& (0+255),b
  1958  003AAA                     l8169:
  1959  003AAA  EC25  F033         	call	_CANisTxReady	;wreg free
  1960  003AAE  0900               	iorlw	0
  1961  003AB0  B4D8               	btfsc	status,2,c
  1962  003AB2  D7FB               	goto	l8169
  1963                           
  1964                           ;parcheggio.c: 315: CANsendMessage(0b00000001110, data_correction, 8, CAN_CONFIG_STD_MSG
      +                           & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1965  003AB4  0E0E               	movlw	14
  1966  003AB6  0100               	movlb	0	; () banked
  1967  003AB8  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1968  003ABA  0E00               	movlw	0
  1969  003ABC  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1970  003ABE  0E00               	movlw	0
  1971  003AC0  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1972  003AC2  0E00               	movlw	0
  1973  003AC4  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1974  003AC6  0E7B               	movlw	low _data_correction
  1975  003AC8  0100               	movlb	0	; () banked
  1976  003ACA  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1977  003ACC  0E01               	movlw	high _data_correction
  1978  003ACE  0100               	movlb	0	; () banked
  1979  003AD0  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1980  003AD2  0E08               	movlw	8
  1981  003AD4  0100               	movlb	0	; () banked
  1982  003AD6  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1983  003AD8  0EBC               	movlw	188
  1984  003ADA  0100               	movlb	0	; () banked
  1985  003ADC  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1986  003ADE  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1987  003AE2                     l8173:
  1988  003AE2  B245               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  1989  003AE4  AA81               	btfss	3969,5,c	;volatile
  1990  003AE6  D002               	goto	l779
  1991  003AE8  B045               	btfsc	_activation/(0+8),_activation& (0+7),c	;volatile
  1992  003AEA  D7BD               	goto	l8159
  1993  003AEC                     l779:
  1994                           
  1995                           ;parcheggio.c: 316: }
  1996                           ;parcheggio.c: 318: if ((PORTBbits.RB5 == 1) && (activation == 1)) {
  1997  003AEC  BA81               	btfsc	3969,5,c	;volatile
  1998  003AEE  A045               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1999  003AF0  D02F               	goto	l8193
  2000                           
  2001                           ;parcheggio.c: 319: PORTBbits.RB6 = 0;
  2002  003AF2  9C81               	bcf	3969,6,c	;volatile
  2003                           
  2004                           ;parcheggio.c: 320: data[0] = 2;
  2005  003AF4  0E02               	movlw	2
  2006  003AF6  0101               	movlb	1	; () banked
  2007  003AF8  6F6B               	movwf	_data& (0+255),b
  2008                           
  2009                           ; BSR set to: 1
  2010                           ;parcheggio.c: 321: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  2011  003AFA  0E0B               	movlw	11
  2012  003AFC  0100               	movlb	0	; () banked
  2013  003AFE  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2014  003B00  0E00               	movlw	0
  2015  003B02  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2016  003B04  0E00               	movlw	0
  2017  003B06  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2018  003B08  0E00               	movlw	0
  2019  003B0A  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2020  003B0C  0E6B               	movlw	low _data
  2021  003B0E  0100               	movlb	0	; () banked
  2022  003B10  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2023  003B12  0E01               	movlw	high _data
  2024  003B14  0100               	movlb	0	; () banked
  2025  003B16  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2026  003B18  0E01               	movlw	1
  2027  003B1A  0100               	movlb	0	; () banked
  2028  003B1C  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2029  003B1E  0EBC               	movlw	188
  2030  003B20  0100               	movlb	0	; () banked
  2031  003B22  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2032  003B24  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2033                           
  2034                           ;parcheggio.c: 322: }
  2035                           ;parcheggio.c: 324: while ((start_operation != 1)&&(activation == 1)) {
  2036  003B28  D013               	goto	l8193
  2037  003B2A                     l782:
  2038                           
  2039                           ;parcheggio.c: 325: if (first == 0) {
  2040  003B2A  B046               	btfsc	_first/(0+8),_first& (0+7),c	;volatile
  2041  003B2C  D011               	goto	l8193
  2042                           
  2043                           ;parcheggio.c: 326: set_speed = 0;
  2044  003B2E  0E00               	movlw	0
  2045  003B30  0101               	movlb	1	; () banked
  2046  003B32  6F5B               	movwf	(_set_speed+1)& (0+255),b
  2047  003B34  0E00               	movlw	0
  2048  003B36  6F5A               	movwf	_set_speed& (0+255),b
  2049                           
  2050                           ;parcheggio.c: 327: data_steering[0] = 90;
  2051  003B38  0E5A               	movlw	90
  2052  003B3A  0101               	movlb	1	; () banked
  2053  003B3C  6F8B               	movwf	_data_steering& (0+255),b
  2054                           
  2055                           ;parcheggio.c: 328: data_brake [0] = 0;
  2056  003B3E  0E00               	movlw	0
  2057  003B40  0101               	movlb	1	; () banked
  2058  003B42  6F73               	movwf	_data_brake& (0+255),b
  2059                           
  2060                           ;parcheggio.c: 329: data_brake [1] = 1;
  2061  003B44  0E01               	movlw	1
  2062  003B46  0101               	movlb	1	; () banked
  2063  003B48  6F74               	movwf	(_data_brake+1)& (0+255),b
  2064                           
  2065                           ; BSR set to: 1
  2066                           ;parcheggio.c: 330: can_send();
  2067  003B4A  EC94  F02F         	call	_can_send	;wreg free
  2068                           
  2069                           ;parcheggio.c: 331: first = 1;
  2070  003B4E  8046               	bsf	_first/(0+8),_first& (0+7),c	;volatile
  2071  003B50                     l8193:
  2072  003B50  AA46               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2073  003B52  A045               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  2074  003B54  D1C2               	goto	l8303
  2075  003B56  D7E9               	goto	l782
  2076  003B58                     l788:
  2077                           
  2078                           ;parcheggio.c: 336: LATBbits.LATB4 = 1;
  2079  003B58  888A               	bsf	3978,4,c	;volatile
  2080                           
  2081                           ;parcheggio.c: 338: bordo = (sensor_distance[0] + sensor_distance[1]) / 2;
  2082  003B5A  5028               	movf	_sensor_distance,w,c	;volatile
  2083  003B5C  242A               	addwf	_sensor_distance+2,w,c	;volatile
  2084  003B5E  0101               	movlb	1	; () banked
  2085  003B60  6FEC               	movwf	??_park_routine& (0+255),b
  2086  003B62  5029               	movf	_sensor_distance+1,w,c	;volatile
  2087  003B64  202B               	addwfc	_sensor_distance+3,w,c	;volatile
  2088  003B66  0101               	movlb	1	; () banked
  2089  003B68  6FED               	movwf	(??_park_routine+1)& (0+255),b
  2090  003B6A  90D8               	bcf	status,0,c
  2091  003B6C  0101               	movlb	1	; () banked
  2092  003B6E  31ED               	rrcf	(??_park_routine+1)& (0+255),w,b
  2093  003B70  0101               	movlb	1	; () banked
  2094  003B72  6FEF               	movwf	(??_park_routine+3)& (0+255),b
  2095  003B74  0101               	movlb	1	; () banked
  2096  003B76  31EC               	rrcf	??_park_routine& (0+255),w,b
  2097  003B78  0101               	movlb	1	; () banked
  2098  003B7A  6FEE               	movwf	(??_park_routine+2)& (0+255),b
  2099  003B7C  C1EE  F0CB         	movff	??_park_routine+2,___xxtofl@val
  2100  003B80  C1EF  F0CC         	movff	??_park_routine+3,___xxtofl@val+1
  2101  003B84  0100               	movlb	0	; () banked
  2102  003B86  6BCD               	clrf	(___xxtofl@val+2)& (0+255),b
  2103  003B88  6BCE               	clrf	(___xxtofl@val+3)& (0+255),b
  2104  003B8A  0E00               	movlw	0
  2105  003B8C  EC7B  F02A         	call	___xxtofl
  2106  003B90  C0CB  F134         	movff	?___xxtofl,_bordo	;volatile
  2107  003B94  C0CC  F135         	movff	?___xxtofl+1,_bordo+1	;volatile
  2108  003B98  C0CD  F136         	movff	?___xxtofl+2,_bordo+2	;volatile
  2109  003B9C  C0CE  F137         	movff	?___xxtofl+3,_bordo+3	;volatile
  2110                           
  2111                           ;parcheggio.c: 339: matematica();
  2112  003BA0  EC3A  F013         	call	_matematica	;wreg free
  2113                           
  2114                           ;parcheggio.c: 340: set_speed = 0;
  2115  003BA4  0E00               	movlw	0
  2116  003BA6  0101               	movlb	1	; () banked
  2117  003BA8  6F5B               	movwf	(_set_speed+1)& (0+255),b
  2118  003BAA  0E00               	movlw	0
  2119  003BAC  6F5A               	movwf	_set_speed& (0+255),b
  2120                           
  2121                           ; BSR set to: 1
  2122                           ;parcheggio.c: 341: data_steering[0] = 90;
  2123  003BAE  0E5A               	movlw	90
  2124  003BB0  0101               	movlb	1	; () banked
  2125  003BB2  6F8B               	movwf	_data_steering& (0+255),b
  2126                           
  2127                           ; BSR set to: 1
  2128                           ;parcheggio.c: 342: data_brake [0] = 0;
  2129  003BB4  0E00               	movlw	0
  2130  003BB6  0101               	movlb	1	; () banked
  2131  003BB8  6F73               	movwf	_data_brake& (0+255),b
  2132                           
  2133                           ; BSR set to: 1
  2134                           ;parcheggio.c: 343: data_brake [1] = 1;
  2135  003BBA  0E01               	movlw	1
  2136  003BBC  0101               	movlb	1	; () banked
  2137  003BBE  6F74               	movwf	(_data_brake+1)& (0+255),b
  2138                           
  2139                           ; BSR set to: 1
  2140                           ;parcheggio.c: 344: can_send();
  2141  003BC0  EC94  F02F         	call	_can_send	;wreg free
  2142                           
  2143                           ;parcheggio.c: 345: delay_s(1);
  2144  003BC4  0E01               	movlw	1
  2145  003BC6  EC0F  F033         	call	_delay_s
  2146                           
  2147                           ;parcheggio.c: 347: data_brake [0] = 3;
  2148  003BCA  0E03               	movlw	3
  2149  003BCC  0101               	movlb	1	; () banked
  2150  003BCE  6F73               	movwf	_data_brake& (0+255),b
  2151                           
  2152                           ; BSR set to: 1
  2153                           ;parcheggio.c: 348: data_brake [1] = 1;
  2154  003BD0  0E01               	movlw	1
  2155  003BD2  0101               	movlb	1	; () banked
  2156  003BD4  6F74               	movwf	(_data_brake+1)& (0+255),b
  2157                           
  2158                           ; BSR set to: 1
  2159                           ;parcheggio.c: 350: set_speed = 800;
  2160  003BD6  0E03               	movlw	3
  2161  003BD8  0101               	movlb	1	; () banked
  2162  003BDA  6F5B               	movwf	(_set_speed+1)& (0+255),b
  2163  003BDC  0E20               	movlw	32
  2164  003BDE  6F5A               	movwf	_set_speed& (0+255),b
  2165                           
  2166                           ; BSR set to: 1
  2167                           ;parcheggio.c: 351: dir = 0;
  2168  003BE0  9645               	bcf	_dir/(0+8),_dir& (0+7),c
  2169                           
  2170                           ; BSR set to: 1
  2171                           ;parcheggio.c: 352: data_steering[0] = 90;
  2172  003BE2  0E5A               	movlw	90
  2173  003BE4  0101               	movlb	1	; () banked
  2174  003BE6  6F8B               	movwf	_data_steering& (0+255),b
  2175                           
  2176                           ; BSR set to: 1
  2177                           ;parcheggio.c: 353: data_test[0] = ((60 + Pmin + 5)-(n + 15));
  2178  003BE8  0E00               	movlw	0
  2179  003BEA  0100               	movlb	0	; () banked
  2180  003BEC  6FAD               	movwf	___fladd@a& (0+255),b
  2181  003BEE  0E00               	movlw	0
  2182  003BF0  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2183  003BF2  0E70               	movlw	112
  2184  003BF4  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2185  003BF6  0E41               	movlw	65
  2186  003BF8  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2187  003BFA  C138  F0A9         	movff	_n,___fladd@b
  2188  003BFE  C139  F0AA         	movff	_n+1,___fladd@b+1
  2189  003C02  C13A  F0AB         	movff	_n+2,___fladd@b+2
  2190  003C06  C13B  F0AC         	movff	_n+3,___fladd@b+3
  2191  003C0A  EC85  F018         	call	___fladd	;wreg free
  2192  003C0E  C0A9  F0BD         	movff	?___fladd,___flneg@f1
  2193  003C12  C0AA  F0BE         	movff	?___fladd+1,___flneg@f1+1
  2194  003C16  C0AB  F0BF         	movff	?___fladd+2,___flneg@f1+2
  2195  003C1A  C0AC  F0C0         	movff	?___fladd+3,___flneg@f1+3
  2196  003C1E  ECA8  F032         	call	___flneg	;wreg free
  2197  003C22  C0BD  F200         	movff	?___flneg,_park_routine$3693
  2198  003C26  C0BE  F201         	movff	?___flneg+1,_park_routine$3693+1
  2199  003C2A  C0BF  F202         	movff	?___flneg+2,_park_routine$3693+2
  2200  003C2E  C0C0  F203         	movff	?___flneg+3,_park_routine$3693+3
  2201                           
  2202                           ;parcheggio.c: 353: data_test[0] = ((60 + Pmin + 5)-(n + 15));
  2203  003C32  C128  F0AD         	movff	_Pmin,___fladd@a
  2204  003C36  C129  F0AE         	movff	_Pmin+1,___fladd@a+1
  2205  003C3A  C12A  F0AF         	movff	_Pmin+2,___fladd@a+2
  2206  003C3E  C12B  F0B0         	movff	_Pmin+3,___fladd@a+3
  2207  003C42  C200  F0A9         	movff	_park_routine$3693,___fladd@b
  2208  003C46  C201  F0AA         	movff	_park_routine$3693+1,___fladd@b+1
  2209  003C4A  C202  F0AB         	movff	_park_routine$3693+2,___fladd@b+2
  2210  003C4E  C203  F0AC         	movff	_park_routine$3693+3,___fladd@b+3
  2211  003C52  EC85  F018         	call	___fladd	;wreg free
  2212  003C56  C0A9  F204         	movff	?___fladd,_park_routine$3694
  2213  003C5A  C0AA  F205         	movff	?___fladd+1,_park_routine$3694+1
  2214  003C5E  C0AB  F206         	movff	?___fladd+2,_park_routine$3694+2
  2215  003C62  C0AC  F207         	movff	?___fladd+3,_park_routine$3694+3
  2216                           
  2217                           ;parcheggio.c: 353: data_test[0] = ((60 + Pmin + 5)-(n + 15));
  2218  003C66  0E00               	movlw	0
  2219  003C68  0100               	movlb	0	; () banked
  2220  003C6A  6FAD               	movwf	___fladd@a& (0+255),b
  2221  003C6C  0E00               	movlw	0
  2222  003C6E  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2223  003C70  0E82               	movlw	130
  2224  003C72  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2225  003C74  0E42               	movlw	66
  2226  003C76  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2227  003C78  C204  F0A9         	movff	_park_routine$3694,___fladd@b
  2228  003C7C  C205  F0AA         	movff	_park_routine$3694+1,___fladd@b+1
  2229  003C80  C206  F0AB         	movff	_park_routine$3694+2,___fladd@b+2
  2230  003C84  C207  F0AC         	movff	_park_routine$3694+3,___fladd@b+3
  2231  003C88  EC85  F018         	call	___fladd	;wreg free
  2232  003C8C  C0A9  F0C1         	movff	?___fladd,___fltol@f1
  2233  003C90  C0AA  F0C2         	movff	?___fladd+1,___fltol@f1+1
  2234  003C94  C0AB  F0C3         	movff	?___fladd+2,___fltol@f1+2
  2235  003C98  C0AC  F0C4         	movff	?___fladd+3,___fltol@f1+3
  2236  003C9C  EC0E  F02F         	call	___fltol	;wreg free
  2237  003CA0  0100               	movlb	0	; () banked
  2238  003CA2  51C1               	movf	?___fltol& (0+255),w,b
  2239  003CA4  0101               	movlb	1	; () banked
  2240  003CA6  6F93               	movwf	_data_test& (0+255),b
  2241                           
  2242                           ; BSR set to: 1
  2243                           ;parcheggio.c: 354: asd = 1;
  2244  003CA8  8245               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2245                           
  2246                           ; BSR set to: 1
  2247                           ;parcheggio.c: 355: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2248  003CAA  0E0D               	movlw	13
  2249  003CAC  0100               	movlb	0	; () banked
  2250  003CAE  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2251  003CB0  0E00               	movlw	0
  2252  003CB2  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2253  003CB4  0E00               	movlw	0
  2254  003CB6  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2255  003CB8  0E00               	movlw	0
  2256  003CBA  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2257  003CBC  0E93               	movlw	low _data_test
  2258  003CBE  0100               	movlb	0	; () banked
  2259  003CC0  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2260  003CC2  0E01               	movlw	high _data_test
  2261  003CC4  0100               	movlb	0	; () banked
  2262  003CC6  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2263  003CC8  0E08               	movlw	8
  2264  003CCA  0100               	movlb	0	; () banked
  2265  003CCC  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2266  003CCE  0EBC               	movlw	188
  2267  003CD0  0100               	movlb	0	; () banked
  2268  003CD2  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2269  003CD4  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2270                           
  2271                           ;parcheggio.c: 356: can_send();
  2272  003CD8  EC94  F02F         	call	_can_send	;wreg free
  2273  003CDC                     l789:
  2274  003CDC  B245               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2275  003CDE  D7FE               	goto	l789
  2276                           
  2277                           ;parcheggio.c: 359: set_speed = 0;
  2278  003CE0  0E00               	movlw	0
  2279  003CE2  0101               	movlb	1	; () banked
  2280  003CE4  6F5B               	movwf	(_set_speed+1)& (0+255),b
  2281  003CE6  0E00               	movlw	0
  2282  003CE8  6F5A               	movwf	_set_speed& (0+255),b
  2283                           
  2284                           ;parcheggio.c: 360: data_steering[0] = 90;
  2285  003CEA  0E5A               	movlw	90
  2286  003CEC  0101               	movlb	1	; () banked
  2287  003CEE  6F8B               	movwf	_data_steering& (0+255),b
  2288                           
  2289                           ;parcheggio.c: 361: data_brake [0] = 0;
  2290  003CF0  0E00               	movlw	0
  2291  003CF2  0101               	movlb	1	; () banked
  2292  003CF4  6F73               	movwf	_data_brake& (0+255),b
  2293                           
  2294                           ;parcheggio.c: 362: data_brake [1] = 1;
  2295  003CF6  0E01               	movlw	1
  2296  003CF8  0101               	movlb	1	; () banked
  2297  003CFA  6F74               	movwf	(_data_brake+1)& (0+255),b
  2298                           
  2299                           ; BSR set to: 1
  2300                           ;parcheggio.c: 363: can_send();
  2301  003CFC  EC94  F02F         	call	_can_send	;wreg free
  2302                           
  2303                           ;parcheggio.c: 364: delay_s(1);
  2304  003D00  0E01               	movlw	1
  2305  003D02  EC0F  F033         	call	_delay_s
  2306                           
  2307                           ;parcheggio.c: 366: data_brake [0] = 3;
  2308  003D06  0E03               	movlw	3
  2309  003D08  0101               	movlb	1	; () banked
  2310  003D0A  6F73               	movwf	_data_brake& (0+255),b
  2311                           
  2312                           ; BSR set to: 1
  2313                           ;parcheggio.c: 367: data_brake [1] = 1;
  2314  003D0C  0E01               	movlw	1
  2315  003D0E  0101               	movlb	1	; () banked
  2316  003D10  6F74               	movwf	(_data_brake+1)& (0+255),b
  2317                           
  2318                           ; BSR set to: 1
  2319                           ;parcheggio.c: 368: set_speed = 1000;
  2320  003D12  0E03               	movlw	3
  2321  003D14  0101               	movlb	1	; () banked
  2322  003D16  6F5B               	movwf	(_set_speed+1)& (0+255),b
  2323  003D18  0EE8               	movlw	232
  2324  003D1A  6F5A               	movwf	_set_speed& (0+255),b
  2325                           
  2326                           ; BSR set to: 1
  2327                           ;parcheggio.c: 369: dir = 0;
  2328  003D1C  9645               	bcf	_dir/(0+8),_dir& (0+7),c
  2329                           
  2330                           ; BSR set to: 1
  2331                           ;parcheggio.c: 370: data_steering[0] = 180;
  2332  003D1E  0EB4               	movlw	180
  2333  003D20  0101               	movlb	1	; () banked
  2334  003D22  6F8B               	movwf	_data_steering& (0+255),b
  2335                           
  2336                           ; BSR set to: 1
  2337                           ;parcheggio.c: 371: data_test[0] = prima_sterzata;
  2338  003D24  C140  F0C1         	movff	_prima_sterzata,___fltol@f1
  2339  003D28  C141  F0C2         	movff	_prima_sterzata+1,___fltol@f1+1
  2340  003D2C  C142  F0C3         	movff	_prima_sterzata+2,___fltol@f1+2
  2341  003D30  C143  F0C4         	movff	_prima_sterzata+3,___fltol@f1+3
  2342  003D34  EC0E  F02F         	call	___fltol	;wreg free
  2343  003D38  0100               	movlb	0	; () banked
  2344  003D3A  51C1               	movf	?___fltol& (0+255),w,b
  2345  003D3C  0101               	movlb	1	; () banked
  2346  003D3E  6F93               	movwf	_data_test& (0+255),b
  2347                           
  2348                           ; BSR set to: 1
  2349                           ;parcheggio.c: 372: asd = 1;
  2350  003D40  8245               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2351                           
  2352                           ; BSR set to: 1
  2353                           ;parcheggio.c: 373: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2354  003D42  0E0D               	movlw	13
  2355  003D44  0100               	movlb	0	; () banked
  2356  003D46  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2357  003D48  0E00               	movlw	0
  2358  003D4A  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2359  003D4C  0E00               	movlw	0
  2360  003D4E  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2361  003D50  0E00               	movlw	0
  2362  003D52  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2363  003D54  0E93               	movlw	low _data_test
  2364  003D56  0100               	movlb	0	; () banked
  2365  003D58  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2366  003D5A  0E01               	movlw	high _data_test
  2367  003D5C  0100               	movlb	0	; () banked
  2368  003D5E  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2369  003D60  0E08               	movlw	8
  2370  003D62  0100               	movlb	0	; () banked
  2371  003D64  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2372  003D66  0EBC               	movlw	188
  2373  003D68  0100               	movlb	0	; () banked
  2374  003D6A  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2375  003D6C  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2376                           
  2377                           ;parcheggio.c: 374: can_send();
  2378  003D70  EC94  F02F         	call	_can_send	;wreg free
  2379  003D74                     l792:
  2380  003D74  B245               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2381  003D76  D7FE               	goto	l792
  2382                           
  2383                           ;parcheggio.c: 376: set_speed = 1000;
  2384  003D78  0E03               	movlw	3
  2385  003D7A  0101               	movlb	1	; () banked
  2386  003D7C  6F5B               	movwf	(_set_speed+1)& (0+255),b
  2387  003D7E  0EE8               	movlw	232
  2388  003D80  6F5A               	movwf	_set_speed& (0+255),b
  2389                           
  2390                           ;parcheggio.c: 377: data_steering[0] = 0;
  2391  003D82  0E00               	movlw	0
  2392  003D84  0101               	movlb	1	; () banked
  2393  003D86  6F8B               	movwf	_data_steering& (0+255),b
  2394                           
  2395                           ; BSR set to: 1
  2396                           ;parcheggio.c: 378: asd = 1;
  2397  003D88  8245               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2398                           
  2399                           ; BSR set to: 1
  2400                           ;parcheggio.c: 379: data_test[0] = prima_sterzata + 9;
  2401  003D8A  0E00               	movlw	0
  2402  003D8C  0100               	movlb	0	; () banked
  2403  003D8E  6FAD               	movwf	___fladd@a& (0+255),b
  2404  003D90  0E00               	movlw	0
  2405  003D92  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2406  003D94  0E10               	movlw	16
  2407  003D96  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2408  003D98  0E41               	movlw	65
  2409  003D9A  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2410  003D9C  C140  F0A9         	movff	_prima_sterzata,___fladd@b
  2411  003DA0  C141  F0AA         	movff	_prima_sterzata+1,___fladd@b+1
  2412  003DA4  C142  F0AB         	movff	_prima_sterzata+2,___fladd@b+2
  2413  003DA8  C143  F0AC         	movff	_prima_sterzata+3,___fladd@b+3
  2414  003DAC  EC85  F018         	call	___fladd	;wreg free
  2415  003DB0  C0A9  F0C1         	movff	?___fladd,___fltol@f1
  2416  003DB4  C0AA  F0C2         	movff	?___fladd+1,___fltol@f1+1
  2417  003DB8  C0AB  F0C3         	movff	?___fladd+2,___fltol@f1+2
  2418  003DBC  C0AC  F0C4         	movff	?___fladd+3,___fltol@f1+3
  2419  003DC0  EC0E  F02F         	call	___fltol	;wreg free
  2420  003DC4  0100               	movlb	0	; () banked
  2421  003DC6  51C1               	movf	?___fltol& (0+255),w,b
  2422  003DC8  0101               	movlb	1	; () banked
  2423  003DCA  6F93               	movwf	_data_test& (0+255),b
  2424                           
  2425                           ; BSR set to: 1
  2426                           ;parcheggio.c: 380: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2427  003DCC  0E0D               	movlw	13
  2428  003DCE  0100               	movlb	0	; () banked
  2429  003DD0  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2430  003DD2  0E00               	movlw	0
  2431  003DD4  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2432  003DD6  0E00               	movlw	0
  2433  003DD8  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2434  003DDA  0E00               	movlw	0
  2435  003DDC  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2436  003DDE  0E93               	movlw	low _data_test
  2437  003DE0  0100               	movlb	0	; () banked
  2438  003DE2  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2439  003DE4  0E01               	movlw	high _data_test
  2440  003DE6  0100               	movlb	0	; () banked
  2441  003DE8  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2442  003DEA  0E08               	movlw	8
  2443  003DEC  0100               	movlb	0	; () banked
  2444  003DEE  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2445  003DF0  0EBC               	movlw	188
  2446  003DF2  0100               	movlb	0	; () banked
  2447  003DF4  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2448  003DF6  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2449                           
  2450                           ;parcheggio.c: 381: can_send();
  2451  003DFA  EC94  F02F         	call	_can_send	;wreg free
  2452  003DFE                     l795:
  2453  003DFE  B245               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2454  003E00  D7FE               	goto	l795
  2455                           
  2456                           ;parcheggio.c: 383: data_brake [0] = 0;
  2457  003E02  0E00               	movlw	0
  2458  003E04  0101               	movlb	1	; () banked
  2459  003E06  6F73               	movwf	_data_brake& (0+255),b
  2460                           
  2461                           ;parcheggio.c: 384: data_brake [1] = 1;
  2462  003E08  0E01               	movlw	1
  2463  003E0A  0101               	movlb	1	; () banked
  2464  003E0C  6F74               	movwf	(_data_brake+1)& (0+255),b
  2465                           
  2466                           ;parcheggio.c: 385: set_speed = 0;
  2467  003E0E  0E00               	movlw	0
  2468  003E10  0101               	movlb	1	; () banked
  2469  003E12  6F5B               	movwf	(_set_speed+1)& (0+255),b
  2470  003E14  0E00               	movlw	0
  2471  003E16  6F5A               	movwf	_set_speed& (0+255),b
  2472                           
  2473                           ;parcheggio.c: 386: data_steering[0] = 90;
  2474  003E18  0E5A               	movlw	90
  2475  003E1A  0101               	movlb	1	; () banked
  2476  003E1C  6F8B               	movwf	_data_steering& (0+255),b
  2477                           
  2478                           ; BSR set to: 1
  2479                           ;parcheggio.c: 387: can_send();
  2480  003E1E  EC94  F02F         	call	_can_send	;wreg free
  2481                           
  2482                           ;parcheggio.c: 388: delay_s(1);
  2483  003E22  0E01               	movlw	1
  2484  003E24  EC0F  F033         	call	_delay_s
  2485                           
  2486                           ;parcheggio.c: 389: avvicinamento = 1;
  2487  003E28  8445               	bsf	_avvicinamento/(0+8),_avvicinamento& (0+7),c	;volatile
  2488                           
  2489                           ;parcheggio.c: 390: if (sensor_distance [2] > 20) {
  2490  003E2A  502D               	movf	_sensor_distance+5,w,c	;volatile
  2491  003E2C  E104               	bnz	u11140
  2492  003E2E  0E15               	movlw	21
  2493  003E30  5C2C               	subwf	_sensor_distance+4,w,c	;volatile
  2494  003E32  A0D8               	btfss	status,0,c
  2495  003E34  D017               	goto	l8287
  2496  003E36                     u11140:
  2497                           
  2498                           ;parcheggio.c: 391: data_brake [0] = 3;
  2499  003E36  0E03               	movlw	3
  2500  003E38  0101               	movlb	1	; () banked
  2501  003E3A  6F73               	movwf	_data_brake& (0+255),b
  2502                           
  2503                           ;parcheggio.c: 392: data_brake [1] = 1;
  2504  003E3C  0E01               	movlw	1
  2505  003E3E  0101               	movlb	1	; () banked
  2506  003E40  6F74               	movwf	(_data_brake+1)& (0+255),b
  2507                           
  2508                           ;parcheggio.c: 393: set_speed = 500;
  2509  003E42  0E01               	movlw	1
  2510  003E44  0101               	movlb	1	; () banked
  2511  003E46  6F5B               	movwf	(_set_speed+1)& (0+255),b
  2512  003E48  0EF4               	movlw	244
  2513  003E4A  6F5A               	movwf	_set_speed& (0+255),b
  2514                           
  2515                           ;parcheggio.c: 394: data_steering[0] = 90;
  2516  003E4C  0E5A               	movlw	90
  2517  003E4E  0101               	movlb	1	; () banked
  2518  003E50  6F8B               	movwf	_data_steering& (0+255),b
  2519                           
  2520                           ; BSR set to: 1
  2521                           ;parcheggio.c: 395: dir = 1;
  2522  003E52  8645               	bsf	_dir/(0+8),_dir& (0+7),c
  2523                           
  2524                           ; BSR set to: 1
  2525                           ;parcheggio.c: 396: can_send();
  2526  003E54  EC94  F02F         	call	_can_send	;wreg free
  2527  003E58                     l8285:
  2528  003E58  502D               	movf	_sensor_distance+5,w,c	;volatile
  2529  003E5A  E1FE               	bnz	l8285
  2530  003E5C  0E15               	movlw	21
  2531  003E5E  5C2C               	subwf	_sensor_distance+4,w,c	;volatile
  2532  003E60  B0D8               	btfsc	status,0,c
  2533  003E62  D7FA               	goto	l8285
  2534  003E64                     l8287:
  2535                           
  2536                           ;parcheggio.c: 398: }
  2537                           ;parcheggio.c: 399: data_brake [0] = 0;
  2538  003E64  0E00               	movlw	0
  2539  003E66  0101               	movlb	1	; () banked
  2540  003E68  6F73               	movwf	_data_brake& (0+255),b
  2541                           
  2542                           ;parcheggio.c: 400: data_brake [1] = 1;
  2543  003E6A  0E01               	movlw	1
  2544  003E6C  0101               	movlb	1	; () banked
  2545  003E6E  6F74               	movwf	(_data_brake+1)& (0+255),b
  2546                           
  2547                           ;parcheggio.c: 401: set_speed = 0;
  2548  003E70  0E00               	movlw	0
  2549  003E72  0101               	movlb	1	; () banked
  2550  003E74  6F5B               	movwf	(_set_speed+1)& (0+255),b
  2551  003E76  0E00               	movlw	0
  2552  003E78  6F5A               	movwf	_set_speed& (0+255),b
  2553                           
  2554                           ;parcheggio.c: 402: data_steering[0] = 90;
  2555  003E7A  0E5A               	movlw	90
  2556  003E7C  0101               	movlb	1	; () banked
  2557  003E7E  6F8B               	movwf	_data_steering& (0+255),b
  2558                           
  2559                           ; BSR set to: 1
  2560                           ;parcheggio.c: 403: dir = 0;
  2561  003E80  9645               	bcf	_dir/(0+8),_dir& (0+7),c
  2562                           
  2563                           ; BSR set to: 1
  2564                           ;parcheggio.c: 404: can_send();
  2565  003E82  EC94  F02F         	call	_can_send	;wreg free
  2566                           
  2567                           ;parcheggio.c: 405: delay_s(1);
  2568  003E86  0E01               	movlw	1
  2569  003E88  EC0F  F033         	call	_delay_s
  2570                           
  2571                           ;parcheggio.c: 406: data[0] = 3;
  2572  003E8C  0E03               	movlw	3
  2573  003E8E  0101               	movlb	1	; () banked
  2574  003E90  6F6B               	movwf	_data& (0+255),b
  2575  003E92                     l8297:
  2576  003E92  EC25  F033         	call	_CANisTxReady	;wreg free
  2577  003E96  0900               	iorlw	0
  2578  003E98  B4D8               	btfsc	status,2,c
  2579  003E9A  D7FB               	goto	l8297
  2580                           
  2581                           ;parcheggio.c: 408: CANsendMessage(0b00000001011, data, 8, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  2582  003E9C  0E0B               	movlw	11
  2583  003E9E  0100               	movlb	0	; () banked
  2584  003EA0  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2585  003EA2  0E00               	movlw	0
  2586  003EA4  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2587  003EA6  0E00               	movlw	0
  2588  003EA8  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2589  003EAA  0E00               	movlw	0
  2590  003EAC  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2591  003EAE  0E6B               	movlw	low _data
  2592  003EB0  0100               	movlb	0	; () banked
  2593  003EB2  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2594  003EB4  0E01               	movlw	high _data
  2595  003EB6  0100               	movlb	0	; () banked
  2596  003EB8  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2597  003EBA  0E08               	movlw	8
  2598  003EBC  0100               	movlb	0	; () banked
  2599  003EBE  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2600  003EC0  0EBC               	movlw	188
  2601  003EC2  0100               	movlb	0	; () banked
  2602  003EC4  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2603  003EC6  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2604                           
  2605                           ;parcheggio.c: 409: delay_ms(100);
  2606  003ECA  0E00               	movlw	0
  2607  003ECC  0100               	movlb	0	; () banked
  2608  003ECE  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2609  003ED0  0E64               	movlw	100
  2610  003ED2  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  2611  003ED4  ECDF  F032         	call	_delay_ms	;wreg free
  2612  003ED8  00FF               	reset		;# 
  2613  003EDA                     l8303:
  2614  003EDA  AA81               	btfss	3969,5,c	;volatile
  2615  003EDC  0012               	return	
  2616  003EDE  A045               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  2617  003EE0  0012               	return	
  2618  003EE2  AA46               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2619  003EE4  0012               	return	
  2620  003EE6  D638               	goto	l788
  2621  003EE8                     __end_of_park_routine:
  2622                           	opt stack 0
  2623                           tblptru	equ	0xFF8
  2624                           tblptrh	equ	0xFF7
  2625                           tblptrl	equ	0xFF6
  2626                           tablat	equ	0xFF5
  2627                           postinc0	equ	0xFEE
  2628                           wreg	equ	0xFE8
  2629                           postdec1	equ	0xFE5
  2630                           fsr1l	equ	0xFE1
  2631                           postinc2	equ	0xFDE
  2632                           postdec2	equ	0xFDD
  2633                           status	equ	0xFD8
  2634                           
  2635 ;; *************** function _parallelo *****************
  2636 ;; Defined at:
  2637 ;;		line 437 in file "parcheggio.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;		None
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;		None
  2642 ;; Return value:  Size  Location     Type
  2643 ;;                  1    wreg      void 
  2644 ;; Registers used:
  2645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 0/0
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2653 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2654 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2655 ;;Total ram usage:        2 bytes
  2656 ;; Hardware stack levels used:    1
  2657 ;; Hardware stack levels required when called:    8
  2658 ;; This function calls:
  2659 ;;		___fladd
  2660 ;;		___fldiv
  2661 ;;		___flge
  2662 ;;		___flmul
  2663 ;;		___fltol
  2664 ;;		___xxtofl
  2665 ;;		_abs
  2666 ;;		_asin
  2667 ;;		_can_send
  2668 ;;		_sqrt
  2669 ;; This function is called by:
  2670 ;;		_park_search
  2671 ;;		_park_routine
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675                           	psect	text3
  2676  00503A                     __ptext3:
  2677                           	opt stack 0
  2678  00503A                     _parallelo:
  2679                           	opt stack 21
  2680                           
  2681                           ;parcheggio.c: 438: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  2682                           
  2683                           ;incstack = 0
  2684  00503A  EE20  F02A         	lfsr	2,_sensor_distance+2	;volatile
  2685  00503E  CFDE F0E2          	movff	postinc2,??_parallelo
  2686  005042  CFDD F0E3          	movff	postdec2,??_parallelo+1
  2687  005046  0100               	movlb	0	; () banked
  2688  005048  1FE2               	comf	??_parallelo& (0+255),f,b
  2689  00504A  1FE3               	comf	(??_parallelo+1)& (0+255),f,b
  2690  00504C  4BE2               	infsnz	??_parallelo& (0+255),f,b
  2691  00504E  2BE3               	incf	(??_parallelo+1)& (0+255),f,b
  2692  005050  5028               	movf	_sensor_distance,w,c	;volatile
  2693  005052  0100               	movlb	0	; () banked
  2694  005054  25E2               	addwf	??_parallelo& (0+255),w,b
  2695  005056  0100               	movlb	0	; () banked
  2696  005058  6F77               	movwf	abs@a& (0+255),b
  2697  00505A  5029               	movf	_sensor_distance+1,w,c	;volatile
  2698  00505C  0100               	movlb	0	; () banked
  2699  00505E  21E3               	addwfc	(??_parallelo+1)& (0+255),w,b
  2700  005060  0100               	movlb	0	; () banked
  2701  005062  6F78               	movwf	(abs@a+1)& (0+255),b
  2702  005064  ECF9  F032         	call	_abs	;wreg free
  2703  005068  0100               	movlb	0	; () banked
  2704  00506A  C077  F0CB         	movff	?_abs,___xxtofl@val
  2705  00506E  0100               	movlb	0	; () banked
  2706  005070  C078  F0CC         	movff	?_abs+1,___xxtofl@val+1
  2707  005074  0100               	movlb	0	; () banked
  2708  005076  0E00               	movlw	0
  2709  005078  BFCC               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2710  00507A  0EFF               	movlw	-1
  2711  00507C  6FCD               	movwf	(___xxtofl@val+2)& (0+255),b
  2712  00507E  6FCE               	movwf	(___xxtofl@val+3)& (0+255),b
  2713  005080  0E01               	movlw	1
  2714  005082  EC7B  F02A         	call	___xxtofl
  2715  005086  C0CB  F0E5         	movff	?___xxtofl,_alignment_gap
  2716  00508A  C0CC  F0E6         	movff	?___xxtofl+1,_alignment_gap+1
  2717  00508E  C0CD  F0E7         	movff	?___xxtofl+2,_alignment_gap+2
  2718  005092  C0CE  F0E8         	movff	?___xxtofl+3,_alignment_gap+3
  2719                           
  2720                           ;parcheggio.c: 439: if (alignment_gap < 30) {
  2721  005096  C0E5  F0C5         	movff	_alignment_gap,___flge@ff1
  2722  00509A  C0E6  F0C6         	movff	_alignment_gap+1,___flge@ff1+1
  2723  00509E  C0E7  F0C7         	movff	_alignment_gap+2,___flge@ff1+2
  2724  0050A2  C0E8  F0C8         	movff	_alignment_gap+3,___flge@ff1+3
  2725  0050A6  0E00               	movlw	0
  2726  0050A8  0100               	movlb	0	; () banked
  2727  0050AA  6FC9               	movwf	___flge@ff2& (0+255),b
  2728  0050AC  0E00               	movlw	0
  2729  0050AE  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
  2730  0050B0  0EF0               	movlw	240
  2731  0050B2  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
  2732  0050B4  0E41               	movlw	65
  2733  0050B6  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
  2734  0050B8  EC28  F02D         	call	___flge	;wreg free
  2735  0050BC  0100               	movlb	0	; () banked
  2736  0050BE  B0D8               	btfsc	status,0,c
  2737  0050C0  D0EB               	goto	l7917
  2738                           
  2739                           ; BSR set to: 0
  2740                           ;parcheggio.c: 440: if ((sensor_distance[0] < 30) && (sensor_distance[1] < 30)) {
  2741  0050C2  5029               	movf	_sensor_distance+1,w,c	;volatile
  2742  0050C4  E103               	bnz	u10551
  2743  0050C6  0E1E               	movlw	30
  2744  0050C8  5C28               	subwf	_sensor_distance,w,c	;volatile
  2745  0050CA  B0D8               	btfsc	status,0,c
  2746  0050CC                     u10551:
  2747  0050CC  0012               	return	
  2748                           
  2749                           ; BSR set to: 0
  2750  0050CE  502B               	movf	_sensor_distance+3,w,c	;volatile
  2751  0050D0  E103               	bnz	u10561
  2752  0050D2  0E1E               	movlw	30
  2753  0050D4  5C2A               	subwf	_sensor_distance+2,w,c	;volatile
  2754  0050D6  B0D8               	btfsc	status,0,c
  2755  0050D8                     u10561:
  2756  0050D8  0012               	return	
  2757                           
  2758                           ; BSR set to: 0
  2759                           ;parcheggio.c: 441: x = (((10)*(10)) + ((alignment_gap * alignment_gap)));
  2760  0050DA  C0E5  F094         	movff	_alignment_gap,___flmul@a
  2761  0050DE  C0E6  F095         	movff	_alignment_gap+1,___flmul@a+1
  2762  0050E2  C0E7  F096         	movff	_alignment_gap+2,___flmul@a+2
  2763  0050E6  C0E8  F097         	movff	_alignment_gap+3,___flmul@a+3
  2764  0050EA  C0E5  F090         	movff	_alignment_gap,___flmul@b
  2765  0050EE  C0E6  F091         	movff	_alignment_gap+1,___flmul@b+1
  2766  0050F2  C0E7  F092         	movff	_alignment_gap+2,___flmul@b+2
  2767  0050F6  C0E8  F093         	movff	_alignment_gap+3,___flmul@b+3
  2768  0050FA  ECD9  F01A         	call	___flmul	;wreg free
  2769  0050FE  C090  F0A9         	movff	?___flmul,___fladd@b
  2770  005102  C091  F0AA         	movff	?___flmul+1,___fladd@b+1
  2771  005106  C092  F0AB         	movff	?___flmul+2,___fladd@b+2
  2772  00510A  C093  F0AC         	movff	?___flmul+3,___fladd@b+3
  2773  00510E  0E00               	movlw	0
  2774  005110  0100               	movlb	0	; () banked
  2775  005112  6FAD               	movwf	___fladd@a& (0+255),b
  2776  005114  0E00               	movlw	0
  2777  005116  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2778  005118  0EC8               	movlw	200
  2779  00511A  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2780  00511C  0E42               	movlw	66
  2781  00511E  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2782  005120  EC85  F018         	call	___fladd	;wreg free
  2783  005124  C0A9  F144         	movff	?___fladd,_x
  2784  005128  C0AA  F145         	movff	?___fladd+1,_x+1
  2785  00512C  C0AB  F146         	movff	?___fladd+2,_x+2
  2786  005130  C0AC  F147         	movff	?___fladd+3,_x+3
  2787                           
  2788                           ;parcheggio.c: 442: x = sqrt(x);
  2789  005134  C144  F0C1         	movff	_x,sqrt@a
  2790  005138  C145  F0C2         	movff	_x+1,sqrt@a+1
  2791  00513C  C146  F0C3         	movff	_x+2,sqrt@a+2
  2792  005140  C147  F0C4         	movff	_x+3,sqrt@a+3
  2793  005144  EC74  F01F         	call	_sqrt	;wreg free
  2794  005148  C0C1  F144         	movff	?_sqrt,_x
  2795  00514C  C0C2  F145         	movff	?_sqrt+1,_x+1
  2796  005150  C0C3  F146         	movff	?_sqrt+2,_x+2
  2797  005154  C0C4  F147         	movff	?_sqrt+3,_x+3
  2798                           
  2799                           ;parcheggio.c: 443: z = alignment_gap / x;
  2800  005158  C0E5  F077         	movff	_alignment_gap,___fldiv@b
  2801  00515C  C0E6  F078         	movff	_alignment_gap+1,___fldiv@b+1
  2802  005160  C0E7  F079         	movff	_alignment_gap+2,___fldiv@b+2
  2803  005164  C0E8  F07A         	movff	_alignment_gap+3,___fldiv@b+3
  2804  005168  C144  F07B         	movff	_x,___fldiv@a
  2805  00516C  C145  F07C         	movff	_x+1,___fldiv@a+1
  2806  005170  C146  F07D         	movff	_x+2,___fldiv@a+2
  2807  005174  C147  F07E         	movff	_x+3,___fldiv@a+3
  2808  005178  EC59  F021         	call	___fldiv	;wreg free
  2809  00517C  C077  F148         	movff	?___fldiv,_z
  2810  005180  C078  F149         	movff	?___fldiv+1,_z+1
  2811  005184  C079  F14A         	movff	?___fldiv+2,_z+2
  2812  005188  C07A  F14B         	movff	?___fldiv+3,_z+3
  2813                           
  2814                           ;parcheggio.c: 444: z = asin(z);
  2815  00518C  C148  F0DE         	movff	_z,asin@x
  2816  005190  C149  F0DF         	movff	_z+1,asin@x+1
  2817  005194  C14A  F0E0         	movff	_z+2,asin@x+2
  2818  005198  C14B  F0E1         	movff	_z+3,asin@x+3
  2819  00519C  EC94  F026         	call	_asin	;wreg free
  2820  0051A0  C0DE  F148         	movff	?_asin,_z
  2821  0051A4  C0DF  F149         	movff	?_asin+1,_z+1
  2822  0051A8  C0E0  F14A         	movff	?_asin+2,_z+2
  2823  0051AC  C0E1  F14B         	movff	?_asin+3,_z+3
  2824                           
  2825                           ;parcheggio.c: 445: z = z / 3.14159265358979323846 * 180;
  2826  0051B0  0EDB               	movlw	219
  2827  0051B2  0100               	movlb	0	; () banked
  2828  0051B4  6F7B               	movwf	___fldiv@a& (0+255),b
  2829  0051B6  0E0F               	movlw	15
  2830  0051B8  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  2831  0051BA  0E49               	movlw	73
  2832  0051BC  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  2833  0051BE  0E40               	movlw	64
  2834  0051C0  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  2835  0051C2  C148  F077         	movff	_z,___fldiv@b
  2836  0051C6  C149  F078         	movff	_z+1,___fldiv@b+1
  2837  0051CA  C14A  F079         	movff	_z+2,___fldiv@b+2
  2838  0051CE  C14B  F07A         	movff	_z+3,___fldiv@b+3
  2839  0051D2  EC59  F021         	call	___fldiv	;wreg free
  2840  0051D6  C077  F090         	movff	?___fldiv,___flmul@b
  2841  0051DA  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  2842  0051DE  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  2843  0051E2  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  2844  0051E6  0E00               	movlw	0
  2845  0051E8  0100               	movlb	0	; () banked
  2846  0051EA  6F94               	movwf	___flmul@a& (0+255),b
  2847  0051EC  0E00               	movlw	0
  2848  0051EE  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2849  0051F0  0E34               	movlw	52
  2850  0051F2  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2851  0051F4  0E43               	movlw	67
  2852  0051F6  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2853  0051F8  ECD9  F01A         	call	___flmul	;wreg free
  2854  0051FC  C090  F148         	movff	?___flmul,_z
  2855  005200  C091  F149         	movff	?___flmul+1,_z+1
  2856  005204  C092  F14A         	movff	?___flmul+2,_z+2
  2857  005208  C093  F14B         	movff	?___flmul+3,_z+3
  2858                           
  2859                           ;parcheggio.c: 446: data_correction[0] = z;
  2860  00520C  C148  F0C1         	movff	_z,___fltol@f1
  2861  005210  C149  F0C2         	movff	_z+1,___fltol@f1+1
  2862  005214  C14A  F0C3         	movff	_z+2,___fltol@f1+2
  2863  005218  C14B  F0C4         	movff	_z+3,___fltol@f1+3
  2864  00521C  EC0E  F02F         	call	___fltol	;wreg free
  2865  005220  0100               	movlb	0	; () banked
  2866  005222  51C1               	movf	?___fltol& (0+255),w,b
  2867  005224  0101               	movlb	1	; () banked
  2868  005226  6F7B               	movwf	_data_correction& (0+255),b
  2869                           
  2870                           ; BSR set to: 1
  2871                           ;parcheggio.c: 448: if (sensor_distance[0] < sensor_distance[1]) {
  2872  005228  502A               	movf	_sensor_distance+2,w,c	;volatile
  2873  00522A  5C28               	subwf	_sensor_distance,w,c	;volatile
  2874  00522C  502B               	movf	_sensor_distance+3,w,c	;volatile
  2875  00522E  5829               	subwfb	_sensor_distance+1,w,c	;volatile
  2876  005230  B0D8               	btfsc	status,0,c
  2877  005232  D002               	goto	l7909
  2878                           
  2879                           ; BSR set to: 1
  2880                           ;parcheggio.c: 449: data_correction[1] = 0;
  2881  005234  0E00               	movlw	0
  2882  005236  D001               	goto	L1
  2883  005238                     l7909:
  2884                           
  2885                           ; BSR set to: 1
  2886                           ;parcheggio.c: 451: data_correction[1] = 1;
  2887  005238  0E01               	movlw	1
  2888  00523A                     L1:
  2889  00523A  0101               	movlb	1	; () banked
  2890  00523C  6F7C               	movwf	(_data_correction+1)& (0+255),b
  2891                           
  2892                           ; BSR set to: 1
  2893                           ;parcheggio.c: 452: }
  2894                           ;parcheggio.c: 453: if ((old_alignment_gap != alignment_gap) || (old_dir_correction != d
      +                          ata_correction[1])) {
  2895                           
  2896                           ; BSR set to: 1
  2897  00523E  0100               	movlb	0	; () banked
  2898  005240  51E5               	movf	_alignment_gap& (0+255),w,b
  2899  005242  0101               	movlb	1	; () banked
  2900  005244  193C               	xorwf	_old_alignment_gap& (0+255),w,b
  2901  005246  E117               	bnz	l834
  2902  005248  0100               	movlb	0	; () banked
  2903  00524A  51E6               	movf	(_alignment_gap+1)& (0+255),w,b
  2904  00524C  0101               	movlb	1	; () banked
  2905  00524E  193D               	xorwf	(_old_alignment_gap+1)& (0+255),w,b
  2906  005250  E112               	bnz	l834
  2907  005252  0100               	movlb	0	; () banked
  2908  005254  51E7               	movf	(_alignment_gap+2)& (0+255),w,b
  2909  005256  0101               	movlb	1	; () banked
  2910  005258  193E               	xorwf	(_old_alignment_gap+2)& (0+255),w,b
  2911  00525A  E10D               	bnz	l834
  2912  00525C  0100               	movlb	0	; () banked
  2913  00525E  51E8               	movf	(_alignment_gap+3)& (0+255),w,b
  2914  005260  0101               	movlb	1	; () banked
  2915  005262  193F               	xorwf	(_old_alignment_gap+3)& (0+255),w,b
  2916  005264  A4D8               	btfss	status,2,c
  2917  005266  D007               	goto	l834
  2918                           
  2919                           ; BSR set to: 1
  2920  005268  0E00               	movlw	0
  2921  00526A  B446               	btfsc	_old_dir_correction/(0+8),_old_dir_correction& (0+7),c	;volatile
  2922  00526C  0E01               	movlw	1
  2923  00526E  0101               	movlb	1	; () banked
  2924  005270  197C               	xorwf	(_data_correction+1)& (0+255),w,b
  2925  005272  B4D8               	btfsc	status,2,c
  2926  005274  0012               	return	
  2927  005276                     l834:
  2928                           
  2929                           ; BSR set to: 1
  2930                           ;parcheggio.c: 454: old_alignment_gap = alignment_gap;
  2931  005276  C0E5  F13C         	movff	_alignment_gap,_old_alignment_gap
  2932  00527A  C0E6  F13D         	movff	_alignment_gap+1,_old_alignment_gap+1
  2933  00527E  C0E7  F13E         	movff	_alignment_gap+2,_old_alignment_gap+2
  2934  005282  C0E8  F13F         	movff	_alignment_gap+3,_old_alignment_gap+3
  2935                           
  2936                           ;parcheggio.c: 455: old_dir_correction = data_correction[1];
  2937  005286  0101               	movlb	1	; () banked
  2938  005288  A17C               	btfss	(_data_correction+1)& (0+255),0,b
  2939  00528A  D002               	goto	u10600
  2940  00528C  8446               	bsf	_old_dir_correction/(0+8),_old_dir_correction& (0+7),c	;volatile
  2941  00528E  D001               	goto	l7915
  2942  005290                     u10600:
  2943  005290  9446               	bcf	_old_dir_correction/(0+8),_old_dir_correction& (0+7),c	;volatile
  2944  005292                     l7915:
  2945                           
  2946                           ;parcheggio.c: 456: can_send();
  2947  005292  EC94  F02F         	call	_can_send	;wreg free
  2948                           
  2949                           ;parcheggio.c: 457: }
  2950                           ;parcheggio.c: 458: }
  2951                           ;parcheggio.c: 459: } else {
  2952  005296  0012               	return	
  2953  005298                     l7917:
  2954                           
  2955                           ;parcheggio.c: 460: data_correction[0] = 0;
  2956  005298  0E00               	movlw	0
  2957  00529A  0101               	movlb	1	; () banked
  2958  00529C  6F7B               	movwf	_data_correction& (0+255),b
  2959                           
  2960                           ; BSR set to: 1
  2961                           ;parcheggio.c: 461: can_send();
  2962  00529E  EC94  F02F         	call	_can_send	;wreg free
  2963  0052A2  0012               	return	
  2964  0052A4                     __end_of_parallelo:
  2965                           	opt stack 0
  2966                           tblptru	equ	0xFF8
  2967                           tblptrh	equ	0xFF7
  2968                           tblptrl	equ	0xFF6
  2969                           tablat	equ	0xFF5
  2970                           postinc0	equ	0xFEE
  2971                           wreg	equ	0xFE8
  2972                           postdec1	equ	0xFE5
  2973                           fsr1l	equ	0xFE1
  2974                           postinc2	equ	0xFDE
  2975                           postdec2	equ	0xFDD
  2976                           status	equ	0xFD8
  2977                           
  2978 ;; *************** function _can_send *****************
  2979 ;; Defined at:
  2980 ;;		line 414 in file "parcheggio.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;		None
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;		None
  2985 ;; Return value:  Size  Location     Type
  2986 ;;                  1    wreg      void 
  2987 ;; Registers used:
  2988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2989 ;; Tracked objects:
  2990 ;;		On entry : 0/0
  2991 ;;		On exit  : 0/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2998 ;;Total ram usage:        0 bytes
  2999 ;; Hardware stack levels used:    1
  3000 ;; Hardware stack levels required when called:    5
  3001 ;; This function calls:
  3002 ;;		_CANisTxReady
  3003 ;;		_CANsendMessage
  3004 ;; This function is called by:
  3005 ;;		_park_routine
  3006 ;;		_parallelo
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           	psect	text4
  3011  005F28                     __ptext4:
  3012                           	opt stack 0
  3013  005F28                     _can_send:
  3014                           	opt stack 23
  3015                           
  3016                           ;parcheggio.c: 415: if (start_operation == 1) {
  3017                           
  3018                           ;incstack = 0
  3019  005F28  AA46               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  3020  005F2A  D063               	goto	l7821
  3021  005F2C                     l7801:
  3022  005F2C  EC25  F033         	call	_CANisTxReady	;wreg free
  3023  005F30  06E8               	decf	wreg,f,c
  3024  005F32  A4D8               	btfss	status,2,c
  3025  005F34  D7FB               	goto	l7801
  3026                           
  3027                           ;parcheggio.c: 418: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG &
      +                           CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3028  005F36  0E05               	movlw	5
  3029  005F38  0100               	movlb	0	; () banked
  3030  005F3A  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3031  005F3C  0E00               	movlw	0
  3032  005F3E  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3033  005F40  0E00               	movlw	0
  3034  005F42  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3035  005F44  0E00               	movlw	0
  3036  005F46  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3037  005F48  0E8B               	movlw	low _data_steering
  3038  005F4A  0100               	movlb	0	; () banked
  3039  005F4C  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3040  005F4E  0E01               	movlw	high _data_steering
  3041  005F50  0100               	movlb	0	; () banked
  3042  005F52  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3043  005F54  0E08               	movlw	8
  3044  005F56  0100               	movlb	0	; () banked
  3045  005F58  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3046  005F5A  0EBC               	movlw	188
  3047  005F5C  0100               	movlb	0	; () banked
  3048  005F5E  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3049  005F60  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3050                           
  3051                           ;parcheggio.c: 421: data_speed[0] = set_speed;
  3052  005F64  C15A  F183         	movff	_set_speed,_data_speed
  3053                           
  3054                           ;parcheggio.c: 422: data_speed[1] = (set_speed >> 8);
  3055  005F68  0101               	movlb	1	; () banked
  3056  005F6A  515B               	movf	(_set_speed+1)& (0+255),w,b
  3057  005F6C  0101               	movlb	1	; () banked
  3058  005F6E  6F84               	movwf	(_data_speed+1)& (0+255),b
  3059                           
  3060                           ; BSR set to: 1
  3061                           ;parcheggio.c: 423: data_speed[2] = dir;
  3062  005F70  0E00               	movlw	0
  3063  005F72  B645               	btfsc	_dir/(0+8),_dir& (0+7),c
  3064  005F74  0E01               	movlw	1
  3065  005F76  0101               	movlb	1	; () banked
  3066  005F78  6F85               	movwf	(_data_speed+2)& (0+255),b
  3067  005F7A                     l7811:
  3068  005F7A  EC25  F033         	call	_CANisTxReady	;wreg free
  3069  005F7E  06E8               	decf	wreg,f,c
  3070  005F80  A4D8               	btfss	status,2,c
  3071  005F82  D7FB               	goto	l7811
  3072                           
  3073                           ;parcheggio.c: 425: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3074  005F84  0E03               	movlw	3
  3075  005F86  0100               	movlb	0	; () banked
  3076  005F88  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3077  005F8A  0E00               	movlw	0
  3078  005F8C  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3079  005F8E  0E00               	movlw	0
  3080  005F90  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3081  005F92  0E00               	movlw	0
  3082  005F94  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3083  005F96  0E83               	movlw	low _data_speed
  3084  005F98  0100               	movlb	0	; () banked
  3085  005F9A  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3086  005F9C  0E01               	movlw	high _data_speed
  3087  005F9E  0100               	movlb	0	; () banked
  3088  005FA0  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3089  005FA2  0E08               	movlw	8
  3090  005FA4  0100               	movlb	0	; () banked
  3091  005FA6  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3092  005FA8  0EBC               	movlw	188
  3093  005FAA  0100               	movlb	0	; () banked
  3094  005FAC  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3095  005FAE  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3096                           
  3097                           ;parcheggio.c: 428: data_brake[1] = 0;
  3098  005FB2  0E00               	movlw	0
  3099  005FB4  0101               	movlb	1	; () banked
  3100  005FB6  6F74               	movwf	(_data_brake+1)& (0+255),b
  3101  005FB8                     l7817:
  3102  005FB8  EC25  F033         	call	_CANisTxReady	;wreg free
  3103  005FBC  06E8               	decf	wreg,f,c
  3104  005FBE  A4D8               	btfss	status,2,c
  3105  005FC0  D7FB               	goto	l7817
  3106                           
  3107                           ;parcheggio.c: 430: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3108  005FC2  0E04               	movlw	4
  3109  005FC4  0100               	movlb	0	; () banked
  3110  005FC6  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3111  005FC8  0E00               	movlw	0
  3112  005FCA  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3113  005FCC  0E00               	movlw	0
  3114  005FCE  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3115  005FD0  0E00               	movlw	0
  3116  005FD2  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3117  005FD4  0E73               	movlw	low _data_brake
  3118  005FD6  0100               	movlb	0	; () banked
  3119  005FD8  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3120  005FDA  0E01               	movlw	high _data_brake
  3121  005FDC  0100               	movlb	0	; () banked
  3122  005FDE  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3123  005FE0  0E08               	movlw	8
  3124  005FE2  0100               	movlb	0	; () banked
  3125  005FE4  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3126  005FE6  0EBC               	movlw	188
  3127  005FE8  0100               	movlb	0	; () banked
  3128  005FEA  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3129  005FEC  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3130                           
  3131                           ;parcheggio.c: 431: } else {
  3132  005FF0  0012               	return	
  3133  005FF2                     l7821:
  3134  005FF2  EC25  F033         	call	_CANisTxReady	;wreg free
  3135  005FF6  06E8               	decf	wreg,f,c
  3136  005FF8  A4D8               	btfss	status,2,c
  3137  005FFA  D7FB               	goto	l7821
  3138                           
  3139                           ;parcheggio.c: 433: CANsendMessage(0b00000001110, data_correction, 8, CAN_CONFIG_STD_MSG
      +                           & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3140  005FFC  0E0E               	movlw	14
  3141  005FFE  0100               	movlb	0	; () banked
  3142  006000  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3143  006002  0E00               	movlw	0
  3144  006004  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3145  006006  0E00               	movlw	0
  3146  006008  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3147  00600A  0E00               	movlw	0
  3148  00600C  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3149  00600E  0E7B               	movlw	low _data_correction
  3150  006010  0100               	movlb	0	; () banked
  3151  006012  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3152  006014  0E01               	movlw	high _data_correction
  3153  006016  0100               	movlb	0	; () banked
  3154  006018  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3155  00601A  0E08               	movlw	8
  3156  00601C  0100               	movlb	0	; () banked
  3157  00601E  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3158  006020  0EBC               	movlw	188
  3159  006022  0100               	movlb	0	; () banked
  3160  006024  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3161  006026  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3162  00602A  0012               	return	
  3163  00602C                     __end_of_can_send:
  3164                           	opt stack 0
  3165                           tblptru	equ	0xFF8
  3166                           tblptrh	equ	0xFF7
  3167                           tblptrl	equ	0xFF6
  3168                           tablat	equ	0xFF5
  3169                           postinc0	equ	0xFEE
  3170                           wreg	equ	0xFE8
  3171                           postdec1	equ	0xFE5
  3172                           fsr1l	equ	0xFE1
  3173                           postinc2	equ	0xFDE
  3174                           postdec2	equ	0xFDD
  3175                           status	equ	0xFD8
  3176                           
  3177 ;; *************** function _CANsendMessage *****************
  3178 ;; Defined at:
  3179 ;;		line 294 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;  identifier      4   23[BANK0 ] unsigned long 
  3182 ;;  data            2   27[BANK0 ] PTR unsigned char 
  3183 ;;		 -> data_speed(8), data_brake(8), data_steering(8), data_correction(8), 
  3184 ;;		 -> data_test(8), data(8), sensor_distance_short(8), 
  3185 ;;  dataLength      1   29[BANK0 ] unsigned char 
  3186 ;;  flags           1   30[BANK0 ] enum E16170
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;  tamp            4   35[BANK0 ] unsigned long 
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  1    wreg      void 
  3191 ;; Registers used:
  3192 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3198 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3199 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3200 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3201 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3202 ;;Total ram usage:       16 bytes
  3203 ;; Hardware stack levels used:    1
  3204 ;; Hardware stack levels required when called:    4
  3205 ;; This function calls:
  3206 ;;		Nothing
  3207 ;; This function is called by:
  3208 ;;		_main
  3209 ;;		_park_search
  3210 ;;		_park_routine
  3211 ;;		_can_send
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           
  3215                           	psect	text5
  3216  001858                     __ptext5:
  3217                           	opt stack 0
  3218  001858                     _CANsendMessage:
  3219                           	opt stack 23
  3220                           
  3221                           ;inc\CANlib.h: 296: unsigned long tamp;
  3222                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  3223                           
  3224                           ;incstack = 0
  3225  001858  010F               	movlb	15	; () banked
  3226  00185A  B740               	btfsc	64,3,b	;volatile
  3227  00185C  D13F               	goto	l363
  3228                           
  3229                           ; BSR set to: 15
  3230                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  3231  00185E  C07D  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  3232                           
  3233                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  3234  001862  0100               	movlb	0	; () banked
  3235  001864  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  3236  001866  D003               	goto	l364
  3237                           
  3238                           ; BSR set to: 0
  3239                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  3240  001868  010F               	movlb	15	; () banked
  3241  00186A  8D45               	bsf	69,6,b	;volatile
  3242  00186C  D002               	goto	l365
  3243  00186E                     l364:
  3244                           
  3245                           ; BSR set to: 0
  3246                           ;inc\CANlib.h: 302: else
  3247                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  3248  00186E  010F               	movlb	15	; () banked
  3249  001870  9D45               	bcf	69,6,b	;volatile
  3250  001872                     l365:
  3251                           
  3252                           ; BSR set to: 15
  3253                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  3254  001872  0100               	movlb	0	; () banked
  3255  001874  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  3256  001876  D079               	goto	l366
  3257                           
  3258                           ; BSR set to: 0
  3259                           ;inc\CANlib.h: 306: {
  3260                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  3261  001878  0100               	movlb	0	; () banked
  3262  00187A  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  3263  00187C  0100               	movlb	0	; () banked
  3264  00187E  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3265  001880  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3266  001882  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3267  001884  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3268                           
  3269                           ; BSR set to: 0
  3270                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  3271  001886  C083  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  3272                           
  3273                           ; BSR set to: 0
  3274                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  3275  00188A  0E00               	movlw	0
  3276  00188C  0100               	movlb	0	; () banked
  3277  00188E  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3278  001890  0100               	movlb	0	; () banked
  3279  001892  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3280  001894  0EFF               	movlw	255
  3281  001896  0100               	movlb	0	; () banked
  3282  001898  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3283  00189A  0100               	movlb	0	; () banked
  3284  00189C  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3285  00189E  0E00               	movlw	0
  3286  0018A0  0100               	movlb	0	; () banked
  3287  0018A2  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3288  0018A4  0100               	movlb	0	; () banked
  3289  0018A6  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3290  0018A8  0E00               	movlw	0
  3291  0018AA  0100               	movlb	0	; () banked
  3292  0018AC  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3293  0018AE  0100               	movlb	0	; () banked
  3294  0018B0  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3295                           
  3296                           ; BSR set to: 0
  3297                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  3298  0018B2  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3299  0018B6  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3300  0018BA  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3301  0018BE  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3302  0018C2  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  3303  0018C6  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  3304  0018CA  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  3305  0018CE  0100               	movlb	0	; () banked
  3306  0018D0  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  3307  0018D2  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3308  0018D6  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3309  0018DA  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3310  0018DE  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  3314  0018E2  C083  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  3315                           
  3316                           ; BSR set to: 0
  3317                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  3318  0018E6  0E00               	movlw	0
  3319  0018E8  010F               	movlb	15	; () banked
  3320  0018EA  6F42               	movwf	66,b	;volatile
  3321                           
  3322                           ; BSR set to: 15
  3323                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  3324  0018EC  010F               	movlb	15	; () banked
  3325  0018EE  8742               	bsf	66,3,b	;volatile
  3326                           
  3327                           ; BSR set to: 15
  3328                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  3329  0018F0  0100               	movlb	0	; () banked
  3330  0018F2  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  3331  0018F4  D002               	goto	l367
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  3335  0018F6  010F               	movlb	15	; () banked
  3336  0018F8  8142               	bsf	66,0,b	;volatile
  3337  0018FA                     l367:
  3338                           
  3339                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  3340  0018FA  0100               	movlb	0	; () banked
  3341  0018FC  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  3342  0018FE  D002               	goto	l368
  3343                           
  3344                           ; BSR set to: 0
  3345                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  3346  001900  010F               	movlb	15	; () banked
  3347  001902  8342               	bsf	66,1,b	;volatile
  3348  001904                     l368:
  3349                           
  3350                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  3351  001904  0100               	movlb	0	; () banked
  3352  001906  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  3353  001908  D002               	goto	l369
  3354                           
  3355                           ; BSR set to: 0
  3356                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  3357  00190A  010F               	movlb	15	; () banked
  3358  00190C  8B42               	bsf	66,5,b	;volatile
  3359  00190E                     l369:
  3360                           
  3361                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  3362  00190E  0100               	movlb	0	; () banked
  3363  001910  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  3364  001912  D002               	goto	l370
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  3368  001914  010F               	movlb	15	; () banked
  3369  001916  8D42               	bsf	66,6,b	;volatile
  3370  001918                     l370:
  3371                           
  3372                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  3373  001918  0100               	movlb	0	; () banked
  3374  00191A  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  3375  00191C  D002               	goto	l7405
  3376                           
  3377                           ; BSR set to: 0
  3378                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  3379  00191E  010F               	movlb	15	; () banked
  3380  001920  8F42               	bsf	66,7,b	;volatile
  3381  001922                     l7405:
  3382                           
  3383                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  3384  001922  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3385  001926  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3386  00192A  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3387  00192E  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3388  001932  0E16               	movlw	22
  3389  001934  D006               	goto	u9850
  3390  001936                     u9855:
  3391  001936  0100               	movlb	0	; () banked
  3392  001938  90D8               	bcf	status,0,c
  3393  00193A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3394  00193C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3395  00193E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3396  001940  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3397  001942                     u9850:
  3398  001942  2EE8               	decfsz	wreg,f,c
  3399  001944  D7F8               	goto	u9855
  3400  001946  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3401  00194A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3402  00194E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3403  001952  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3404                           
  3405                           ; BSR set to: 0
  3406                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  3407  001956  0100               	movlb	0	; () banked
  3408  001958  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3409  00195A  0100               	movlb	0	; () banked
  3410  00195C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3411  00195E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3412  001960  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3413  001962  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  3417  001964  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  3418                           
  3419                           ;inc\CANlib.h: 332: }
  3420  001968  D059               	goto	l7425
  3421  00196A                     l366:
  3422                           
  3423                           ; BSR set to: 0
  3424                           ;inc\CANlib.h: 334: else
  3425                           ;inc\CANlib.h: 336: {
  3426                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  3427  00196A  010F               	movlb	15	; () banked
  3428  00196C  9742               	bcf	66,3,b	;volatile
  3429                           
  3430                           ; BSR set to: 15
  3431                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  3432  00196E  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3433  001972  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3434  001976  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3435  00197A  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3436  00197E  0E04               	movlw	4
  3437  001980  D006               	goto	u9860
  3438  001982                     u9865:
  3439  001982  0100               	movlb	0	; () banked
  3440  001984  90D8               	bcf	status,0,c
  3441  001986  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3442  001988  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3443  00198A  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3444  00198C  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3445  00198E                     u9860:
  3446  00198E  2EE8               	decfsz	wreg,f,c
  3447  001990  D7F8               	goto	u9865
  3448  001992  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3449  001996  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3450  00199A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3451  00199E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3452                           
  3453                           ; BSR set to: 0
  3454                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  3455  0019A2  0100               	movlb	0	; () banked
  3456  0019A4  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3457  0019A6  0100               	movlb	0	; () banked
  3458  0019A8  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3459  0019AA  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3460  0019AC  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3461  0019AE  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3462                           
  3463                           ; BSR set to: 0
  3464                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  3465  0019B0  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  3466                           
  3467                           ; BSR set to: 0
  3468                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  3469  0019B4  0E07               	movlw	7
  3470  0019B6  0100               	movlb	0	; () banked
  3471  0019B8  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3472  0019BA  0100               	movlb	0	; () banked
  3473  0019BC  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3474  0019BE  0E00               	movlw	0
  3475  0019C0  0100               	movlb	0	; () banked
  3476  0019C2  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3477  0019C4  0100               	movlb	0	; () banked
  3478  0019C6  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3479  0019C8  0E00               	movlw	0
  3480  0019CA  0100               	movlb	0	; () banked
  3481  0019CC  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3482  0019CE  0100               	movlb	0	; () banked
  3483  0019D0  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3484  0019D2  0E00               	movlw	0
  3485  0019D4  0100               	movlb	0	; () banked
  3486  0019D6  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3487  0019D8  0100               	movlb	0	; () banked
  3488  0019DA  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3489                           
  3490                           ; BSR set to: 0
  3491                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  3492  0019DC  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3493  0019E0  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3494  0019E4  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3495  0019E8  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3496  0019EC  0E05               	movlw	5
  3497  0019EE                     u9875:
  3498  0019EE  90D8               	bcf	status,0,c
  3499  0019F0  0100               	movlb	0	; () banked
  3500  0019F2  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  3501  0019F4  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  3502  0019F6  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  3503  0019F8  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  3504  0019FA  2EE8               	decfsz	wreg,f,c
  3505  0019FC  D7F8               	goto	u9875
  3506  0019FE  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3507  001A02  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3508  001A06  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3509  001A0A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3510                           
  3511                           ; BSR set to: 0
  3512                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  3513  001A0E  010F               	movlb	15	; () banked
  3514  001A10  5142               	movf	66,w,b	;volatile
  3515  001A12  0B1F               	andlw	31
  3516  001A14  010F               	movlb	15	; () banked
  3517  001A16  6F42               	movwf	66,b	;volatile
  3518                           
  3519                           ; BSR set to: 15
  3520                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  3521  001A18  C083  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  3522  001A1C                     l7425:
  3523                           
  3524                           ;inc\CANlib.h: 347: }
  3525                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  3526  001A1C  0100               	movlb	0	; () banked
  3527  001A1E  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  3528  001A20  D003               	goto	l373
  3529                           
  3530                           ; BSR set to: 0
  3531                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  3532  001A22  010F               	movlb	15	; () banked
  3533  001A24  8140               	bsf	64,0,b	;volatile
  3534  001A26  D002               	goto	l374
  3535  001A28                     l373:
  3536                           
  3537                           ; BSR set to: 0
  3538                           ;inc\CANlib.h: 351: else
  3539                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  3540  001A28  010F               	movlb	15	; () banked
  3541  001A2A  9140               	bcf	64,0,b	;volatile
  3542  001A2C                     l374:
  3543                           
  3544                           ; BSR set to: 15
  3545                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  3546  001A2C  0100               	movlb	0	; () banked
  3547  001A2E  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  3548  001A30  D003               	goto	l375
  3549                           
  3550                           ; BSR set to: 0
  3551                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  3552  001A32  010F               	movlb	15	; () banked
  3553  001A34  8340               	bsf	64,1,b	;volatile
  3554  001A36  D002               	goto	l7431
  3555  001A38                     l375:
  3556                           
  3557                           ; BSR set to: 0
  3558                           ;inc\CANlib.h: 355: else
  3559                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  3560  001A38  010F               	movlb	15	; () banked
  3561  001A3A  9340               	bcf	64,1,b	;volatile
  3562  001A3C                     l7431:
  3563                           
  3564                           ; BSR set to: 15
  3565                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  3566  001A3C  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  3567  001A40  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  3568  001A44  50DF               	movf	indf2,w,c
  3569  001A46  010F               	movlb	15	; () banked
  3570  001A48  6F46               	movwf	70,b	;volatile
  3571                           
  3572                           ; BSR set to: 15
  3573                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  3574  001A4A  0100               	movlb	0	; () banked
  3575  001A4C  EE20 F001          	lfsr	2,1
  3576  001A50  517B               	movf	CANsendMessage@data& (0+255),w,b
  3577  001A52  26D9               	addwf	fsr2l,f,c
  3578  001A54  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3579  001A56  22DA               	addwfc	fsr2h,f,c
  3580  001A58  50DF               	movf	indf2,w,c
  3581  001A5A  010F               	movlb	15	; () banked
  3582  001A5C  6F47               	movwf	71,b	;volatile
  3583                           
  3584                           ; BSR set to: 15
  3585                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  3586  001A5E  0100               	movlb	0	; () banked
  3587  001A60  EE20 F002          	lfsr	2,2
  3588  001A64  517B               	movf	CANsendMessage@data& (0+255),w,b
  3589  001A66  26D9               	addwf	fsr2l,f,c
  3590  001A68  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3591  001A6A  22DA               	addwfc	fsr2h,f,c
  3592  001A6C  50DF               	movf	indf2,w,c
  3593  001A6E  010F               	movlb	15	; () banked
  3594  001A70  6F48               	movwf	72,b	;volatile
  3595                           
  3596                           ; BSR set to: 15
  3597                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  3598  001A72  0100               	movlb	0	; () banked
  3599  001A74  EE20 F003          	lfsr	2,3
  3600  001A78  517B               	movf	CANsendMessage@data& (0+255),w,b
  3601  001A7A  26D9               	addwf	fsr2l,f,c
  3602  001A7C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3603  001A7E  22DA               	addwfc	fsr2h,f,c
  3604  001A80  50DF               	movf	indf2,w,c
  3605  001A82  010F               	movlb	15	; () banked
  3606  001A84  6F49               	movwf	73,b	;volatile
  3607                           
  3608                           ; BSR set to: 15
  3609                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  3610  001A86  0100               	movlb	0	; () banked
  3611  001A88  EE20 F004          	lfsr	2,4
  3612  001A8C  517B               	movf	CANsendMessage@data& (0+255),w,b
  3613  001A8E  26D9               	addwf	fsr2l,f,c
  3614  001A90  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3615  001A92  22DA               	addwfc	fsr2h,f,c
  3616  001A94  50DF               	movf	indf2,w,c
  3617  001A96  010F               	movlb	15	; () banked
  3618  001A98  6F4A               	movwf	74,b	;volatile
  3619                           
  3620                           ; BSR set to: 15
  3621                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  3622  001A9A  0100               	movlb	0	; () banked
  3623  001A9C  EE20 F005          	lfsr	2,5
  3624  001AA0  517B               	movf	CANsendMessage@data& (0+255),w,b
  3625  001AA2  26D9               	addwf	fsr2l,f,c
  3626  001AA4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3627  001AA6  22DA               	addwfc	fsr2h,f,c
  3628  001AA8  50DF               	movf	indf2,w,c
  3629  001AAA  010F               	movlb	15	; () banked
  3630  001AAC  6F4B               	movwf	75,b	;volatile
  3631                           
  3632                           ; BSR set to: 15
  3633                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  3634  001AAE  0100               	movlb	0	; () banked
  3635  001AB0  EE20 F006          	lfsr	2,6
  3636  001AB4  517B               	movf	CANsendMessage@data& (0+255),w,b
  3637  001AB6  26D9               	addwf	fsr2l,f,c
  3638  001AB8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3639  001ABA  22DA               	addwfc	fsr2h,f,c
  3640  001ABC  50DF               	movf	indf2,w,c
  3641  001ABE  010F               	movlb	15	; () banked
  3642  001AC0  6F4C               	movwf	76,b	;volatile
  3643                           
  3644                           ; BSR set to: 15
  3645                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  3646  001AC2  0100               	movlb	0	; () banked
  3647  001AC4  EE20 F007          	lfsr	2,7
  3648  001AC8  517B               	movf	CANsendMessage@data& (0+255),w,b
  3649  001ACA  26D9               	addwf	fsr2l,f,c
  3650  001ACC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3651  001ACE  22DA               	addwfc	fsr2h,f,c
  3652  001AD0  50DF               	movf	indf2,w,c
  3653  001AD2  010F               	movlb	15	; () banked
  3654  001AD4  6F4D               	movwf	77,b	;volatile
  3655                           
  3656                           ; BSR set to: 15
  3657                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  3658  001AD6  010F               	movlb	15	; () banked
  3659  001AD8  8740               	bsf	64,3,b	;volatile
  3660                           
  3661                           ; BSR set to: 15
  3662                           ;inc\CANlib.h: 368: return;
  3663  001ADA  0012               	return	
  3664  001ADC                     l363:
  3665                           
  3666                           ; BSR set to: 15
  3667                           ;inc\CANlib.h: 369: }
  3668                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  3669  001ADC  010F               	movlb	15	; () banked
  3670  001ADE  B730               	btfsc	48,3,b	;volatile
  3671  001AE0  D13F               	goto	l378
  3672                           
  3673                           ; BSR set to: 15
  3674                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  3675  001AE2  C07D  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  3676                           
  3677                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  3678  001AE6  0100               	movlb	0	; () banked
  3679  001AE8  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  3680  001AEA  D003               	goto	l379
  3681                           
  3682                           ; BSR set to: 0
  3683                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  3684  001AEC  010F               	movlb	15	; () banked
  3685  001AEE  8D35               	bsf	53,6,b	;volatile
  3686  001AF0  D002               	goto	l380
  3687  001AF2                     l379:
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;inc\CANlib.h: 378: else
  3691                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  3692  001AF2  010F               	movlb	15	; () banked
  3693  001AF4  9D35               	bcf	53,6,b	;volatile
  3694  001AF6                     l380:
  3695                           
  3696                           ; BSR set to: 15
  3697                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  3698  001AF6  0100               	movlb	0	; () banked
  3699  001AF8  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  3700  001AFA  D079               	goto	l381
  3701                           
  3702                           ; BSR set to: 0
  3703                           ;inc\CANlib.h: 382: {
  3704                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  3705  001AFC  0100               	movlb	0	; () banked
  3706  001AFE  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  3707  001B00  0100               	movlb	0	; () banked
  3708  001B02  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3709  001B04  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3710  001B06  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3711  001B08  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  3715  001B0A  C083  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  3716                           
  3717                           ; BSR set to: 0
  3718                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  3719  001B0E  0E00               	movlw	0
  3720  001B10  0100               	movlb	0	; () banked
  3721  001B12  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3722  001B14  0100               	movlb	0	; () banked
  3723  001B16  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3724  001B18  0EFF               	movlw	255
  3725  001B1A  0100               	movlb	0	; () banked
  3726  001B1C  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3727  001B1E  0100               	movlb	0	; () banked
  3728  001B20  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3729  001B22  0E00               	movlw	0
  3730  001B24  0100               	movlb	0	; () banked
  3731  001B26  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3732  001B28  0100               	movlb	0	; () banked
  3733  001B2A  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3734  001B2C  0E00               	movlw	0
  3735  001B2E  0100               	movlb	0	; () banked
  3736  001B30  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3737  001B32  0100               	movlb	0	; () banked
  3738  001B34  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3739                           
  3740                           ; BSR set to: 0
  3741                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  3742  001B36  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3743  001B3A  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3744  001B3E  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3745  001B42  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3746  001B46  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  3747  001B4A  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  3748  001B4E  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  3749  001B52  0100               	movlb	0	; () banked
  3750  001B54  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  3751  001B56  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3752  001B5A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3753  001B5E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3754  001B62  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3755                           
  3756                           ; BSR set to: 0
  3757                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  3758  001B66  C083  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  3759                           
  3760                           ; BSR set to: 0
  3761                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  3762  001B6A  0E00               	movlw	0
  3763  001B6C  010F               	movlb	15	; () banked
  3764  001B6E  6F32               	movwf	50,b	;volatile
  3765                           
  3766                           ; BSR set to: 15
  3767                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  3768  001B70  010F               	movlb	15	; () banked
  3769  001B72  8732               	bsf	50,3,b	;volatile
  3770                           
  3771                           ; BSR set to: 15
  3772                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  3773  001B74  0100               	movlb	0	; () banked
  3774  001B76  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  3775  001B78  D002               	goto	l382
  3776                           
  3777                           ; BSR set to: 0
  3778                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  3779  001B7A  010F               	movlb	15	; () banked
  3780  001B7C  8132               	bsf	50,0,b	;volatile
  3781  001B7E                     l382:
  3782                           
  3783                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  3784  001B7E  0100               	movlb	0	; () banked
  3785  001B80  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  3786  001B82  D002               	goto	l383
  3787                           
  3788                           ; BSR set to: 0
  3789                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  3790  001B84  010F               	movlb	15	; () banked
  3791  001B86  8332               	bsf	50,1,b	;volatile
  3792  001B88                     l383:
  3793                           
  3794                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  3795  001B88  0100               	movlb	0	; () banked
  3796  001B8A  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  3797  001B8C  D002               	goto	l384
  3798                           
  3799                           ; BSR set to: 0
  3800                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  3801  001B8E  010F               	movlb	15	; () banked
  3802  001B90  8B32               	bsf	50,5,b	;volatile
  3803  001B92                     l384:
  3804                           
  3805                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  3806  001B92  0100               	movlb	0	; () banked
  3807  001B94  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  3808  001B96  D002               	goto	l385
  3809                           
  3810                           ; BSR set to: 0
  3811                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  3812  001B98  010F               	movlb	15	; () banked
  3813  001B9A  8D32               	bsf	50,6,b	;volatile
  3814  001B9C                     l385:
  3815                           
  3816                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  3817  001B9C  0100               	movlb	0	; () banked
  3818  001B9E  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  3819  001BA0  D002               	goto	l7481
  3820                           
  3821                           ; BSR set to: 0
  3822                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  3823  001BA2  010F               	movlb	15	; () banked
  3824  001BA4  8F32               	bsf	50,7,b	;volatile
  3825  001BA6                     l7481:
  3826                           
  3827                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  3828  001BA6  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3829  001BAA  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3830  001BAE  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3831  001BB2  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3832  001BB6  0E16               	movlw	22
  3833  001BB8  D006               	goto	u9980
  3834  001BBA                     u9985:
  3835  001BBA  0100               	movlb	0	; () banked
  3836  001BBC  90D8               	bcf	status,0,c
  3837  001BBE  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3838  001BC0  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3839  001BC2  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3840  001BC4  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3841  001BC6                     u9980:
  3842  001BC6  2EE8               	decfsz	wreg,f,c
  3843  001BC8  D7F8               	goto	u9985
  3844  001BCA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3845  001BCE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3846  001BD2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3847  001BD6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  3851  001BDA  0100               	movlb	0	; () banked
  3852  001BDC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3853  001BDE  0100               	movlb	0	; () banked
  3854  001BE0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3855  001BE2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3856  001BE4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3857  001BE6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3858                           
  3859                           ; BSR set to: 0
  3860                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  3861  001BE8  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  3862                           
  3863                           ;inc\CANlib.h: 407: }
  3864  001BEC  D059               	goto	l7501
  3865  001BEE                     l381:
  3866                           
  3867                           ; BSR set to: 0
  3868                           ;inc\CANlib.h: 409: else
  3869                           ;inc\CANlib.h: 411: {
  3870                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  3871  001BEE  010F               	movlb	15	; () banked
  3872  001BF0  9732               	bcf	50,3,b	;volatile
  3873                           
  3874                           ; BSR set to: 15
  3875                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  3876  001BF2  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3877  001BF6  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3878  001BFA  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3879  001BFE  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3880  001C02  0E04               	movlw	4
  3881  001C04  D006               	goto	u9990
  3882  001C06                     u9995:
  3883  001C06  0100               	movlb	0	; () banked
  3884  001C08  90D8               	bcf	status,0,c
  3885  001C0A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3886  001C0C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3887  001C0E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3888  001C10  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3889  001C12                     u9990:
  3890  001C12  2EE8               	decfsz	wreg,f,c
  3891  001C14  D7F8               	goto	u9995
  3892  001C16  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3893  001C1A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3894  001C1E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3895  001C22  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3896                           
  3897                           ; BSR set to: 0
  3898                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  3899  001C26  0100               	movlb	0	; () banked
  3900  001C28  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3901  001C2A  0100               	movlb	0	; () banked
  3902  001C2C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3903  001C2E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3904  001C30  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3905  001C32  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3906                           
  3907                           ; BSR set to: 0
  3908                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  3909  001C34  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  3910                           
  3911                           ; BSR set to: 0
  3912                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  3913  001C38  0E07               	movlw	7
  3914  001C3A  0100               	movlb	0	; () banked
  3915  001C3C  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3916  001C3E  0100               	movlb	0	; () banked
  3917  001C40  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3918  001C42  0E00               	movlw	0
  3919  001C44  0100               	movlb	0	; () banked
  3920  001C46  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3921  001C48  0100               	movlb	0	; () banked
  3922  001C4A  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3923  001C4C  0E00               	movlw	0
  3924  001C4E  0100               	movlb	0	; () banked
  3925  001C50  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3926  001C52  0100               	movlb	0	; () banked
  3927  001C54  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3928  001C56  0E00               	movlw	0
  3929  001C58  0100               	movlb	0	; () banked
  3930  001C5A  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3931  001C5C  0100               	movlb	0	; () banked
  3932  001C5E  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3933                           
  3934                           ; BSR set to: 0
  3935                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  3936  001C60  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3937  001C64  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3938  001C68  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3939  001C6C  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3940  001C70  0E05               	movlw	5
  3941  001C72                     u10005:
  3942  001C72  90D8               	bcf	status,0,c
  3943  001C74  0100               	movlb	0	; () banked
  3944  001C76  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  3945  001C78  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  3946  001C7A  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  3947  001C7C  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  3948  001C7E  2EE8               	decfsz	wreg,f,c
  3949  001C80  D7F8               	goto	u10005
  3950  001C82  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3951  001C86  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3952  001C8A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3953  001C8E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3954                           
  3955                           ; BSR set to: 0
  3956                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  3957  001C92  010F               	movlb	15	; () banked
  3958  001C94  5132               	movf	50,w,b	;volatile
  3959  001C96  0B1F               	andlw	31
  3960  001C98  010F               	movlb	15	; () banked
  3961  001C9A  6F32               	movwf	50,b	;volatile
  3962                           
  3963                           ; BSR set to: 15
  3964                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  3965  001C9C  C083  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  3966  001CA0                     l7501:
  3967                           
  3968                           ;inc\CANlib.h: 422: }
  3969                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  3970  001CA0  0100               	movlb	0	; () banked
  3971  001CA2  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  3972  001CA4  D003               	goto	l388
  3973                           
  3974                           ; BSR set to: 0
  3975                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  3976  001CA6  010F               	movlb	15	; () banked
  3977  001CA8  8130               	bsf	48,0,b	;volatile
  3978  001CAA  D002               	goto	l389
  3979  001CAC                     l388:
  3980                           
  3981                           ; BSR set to: 0
  3982                           ;inc\CANlib.h: 426: else
  3983                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  3984  001CAC  010F               	movlb	15	; () banked
  3985  001CAE  9130               	bcf	48,0,b	;volatile
  3986  001CB0                     l389:
  3987                           
  3988                           ; BSR set to: 15
  3989                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  3990  001CB0  0100               	movlb	0	; () banked
  3991  001CB2  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  3992  001CB4  D003               	goto	l390
  3993                           
  3994                           ; BSR set to: 0
  3995                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  3996  001CB6  010F               	movlb	15	; () banked
  3997  001CB8  8330               	bsf	48,1,b	;volatile
  3998  001CBA  D002               	goto	l7507
  3999  001CBC                     l390:
  4000                           
  4001                           ; BSR set to: 0
  4002                           ;inc\CANlib.h: 430: else
  4003                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  4004  001CBC  010F               	movlb	15	; () banked
  4005  001CBE  9330               	bcf	48,1,b	;volatile
  4006  001CC0                     l7507:
  4007                           
  4008                           ; BSR set to: 15
  4009                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  4010  001CC0  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  4011  001CC4  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  4012  001CC8  50DF               	movf	indf2,w,c
  4013  001CCA  010F               	movlb	15	; () banked
  4014  001CCC  6F36               	movwf	54,b	;volatile
  4015                           
  4016                           ; BSR set to: 15
  4017                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  4018  001CCE  0100               	movlb	0	; () banked
  4019  001CD0  EE20 F001          	lfsr	2,1
  4020  001CD4  517B               	movf	CANsendMessage@data& (0+255),w,b
  4021  001CD6  26D9               	addwf	fsr2l,f,c
  4022  001CD8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4023  001CDA  22DA               	addwfc	fsr2h,f,c
  4024  001CDC  50DF               	movf	indf2,w,c
  4025  001CDE  010F               	movlb	15	; () banked
  4026  001CE0  6F37               	movwf	55,b	;volatile
  4027                           
  4028                           ; BSR set to: 15
  4029                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  4030  001CE2  0100               	movlb	0	; () banked
  4031  001CE4  EE20 F002          	lfsr	2,2
  4032  001CE8  517B               	movf	CANsendMessage@data& (0+255),w,b
  4033  001CEA  26D9               	addwf	fsr2l,f,c
  4034  001CEC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4035  001CEE  22DA               	addwfc	fsr2h,f,c
  4036  001CF0  50DF               	movf	indf2,w,c
  4037  001CF2  010F               	movlb	15	; () banked
  4038  001CF4  6F38               	movwf	56,b	;volatile
  4039                           
  4040                           ; BSR set to: 15
  4041                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  4042  001CF6  0100               	movlb	0	; () banked
  4043  001CF8  EE20 F003          	lfsr	2,3
  4044  001CFC  517B               	movf	CANsendMessage@data& (0+255),w,b
  4045  001CFE  26D9               	addwf	fsr2l,f,c
  4046  001D00  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4047  001D02  22DA               	addwfc	fsr2h,f,c
  4048  001D04  50DF               	movf	indf2,w,c
  4049  001D06  010F               	movlb	15	; () banked
  4050  001D08  6F39               	movwf	57,b	;volatile
  4051                           
  4052                           ; BSR set to: 15
  4053                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  4054  001D0A  0100               	movlb	0	; () banked
  4055  001D0C  EE20 F004          	lfsr	2,4
  4056  001D10  517B               	movf	CANsendMessage@data& (0+255),w,b
  4057  001D12  26D9               	addwf	fsr2l,f,c
  4058  001D14  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4059  001D16  22DA               	addwfc	fsr2h,f,c
  4060  001D18  50DF               	movf	indf2,w,c
  4061  001D1A  010F               	movlb	15	; () banked
  4062  001D1C  6F3A               	movwf	58,b	;volatile
  4063                           
  4064                           ; BSR set to: 15
  4065                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  4066  001D1E  0100               	movlb	0	; () banked
  4067  001D20  EE20 F005          	lfsr	2,5
  4068  001D24  517B               	movf	CANsendMessage@data& (0+255),w,b
  4069  001D26  26D9               	addwf	fsr2l,f,c
  4070  001D28  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4071  001D2A  22DA               	addwfc	fsr2h,f,c
  4072  001D2C  50DF               	movf	indf2,w,c
  4073  001D2E  010F               	movlb	15	; () banked
  4074  001D30  6F3B               	movwf	59,b	;volatile
  4075                           
  4076                           ; BSR set to: 15
  4077                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  4078  001D32  0100               	movlb	0	; () banked
  4079  001D34  EE20 F006          	lfsr	2,6
  4080  001D38  517B               	movf	CANsendMessage@data& (0+255),w,b
  4081  001D3A  26D9               	addwf	fsr2l,f,c
  4082  001D3C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4083  001D3E  22DA               	addwfc	fsr2h,f,c
  4084  001D40  50DF               	movf	indf2,w,c
  4085  001D42  010F               	movlb	15	; () banked
  4086  001D44  6F3C               	movwf	60,b	;volatile
  4087                           
  4088                           ; BSR set to: 15
  4089                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  4090  001D46  0100               	movlb	0	; () banked
  4091  001D48  EE20 F007          	lfsr	2,7
  4092  001D4C  517B               	movf	CANsendMessage@data& (0+255),w,b
  4093  001D4E  26D9               	addwf	fsr2l,f,c
  4094  001D50  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4095  001D52  22DA               	addwfc	fsr2h,f,c
  4096  001D54  50DF               	movf	indf2,w,c
  4097  001D56  010F               	movlb	15	; () banked
  4098  001D58  6F3D               	movwf	61,b	;volatile
  4099                           
  4100                           ; BSR set to: 15
  4101                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  4102  001D5A  010F               	movlb	15	; () banked
  4103  001D5C  8730               	bsf	48,3,b	;volatile
  4104                           
  4105                           ; BSR set to: 15
  4106                           ;inc\CANlib.h: 444: return;
  4107  001D5E  0012               	return	
  4108  001D60                     l378:
  4109                           
  4110                           ; BSR set to: 15
  4111                           ;inc\CANlib.h: 445: }
  4112                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  4113  001D60  010F               	movlb	15	; () banked
  4114  001D62  B720               	btfsc	32,3,b	;volatile
  4115  001D64  0012               	return	
  4116                           
  4117                           ; BSR set to: 15
  4118                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  4119  001D66  C07D  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  4120                           
  4121                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  4122  001D6A  0100               	movlb	0	; () banked
  4123  001D6C  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  4124  001D6E  D003               	goto	l393
  4125                           
  4126                           ; BSR set to: 0
  4127                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  4128  001D70  010F               	movlb	15	; () banked
  4129  001D72  8D25               	bsf	37,6,b	;volatile
  4130  001D74  D002               	goto	l394
  4131  001D76                     l393:
  4132                           
  4133                           ; BSR set to: 0
  4134                           ;inc\CANlib.h: 454: else
  4135                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  4136  001D76  010F               	movlb	15	; () banked
  4137  001D78  9D25               	bcf	37,6,b	;volatile
  4138  001D7A                     l394:
  4139                           
  4140                           ; BSR set to: 15
  4141                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  4142  001D7A  0100               	movlb	0	; () banked
  4143  001D7C  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  4144  001D7E  D079               	goto	l395
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;inc\CANlib.h: 458: {
  4148                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  4149  001D80  0100               	movlb	0	; () banked
  4150  001D82  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  4151  001D84  0100               	movlb	0	; () banked
  4152  001D86  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4153  001D88  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4154  001D8A  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4155  001D8C  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4156                           
  4157                           ; BSR set to: 0
  4158                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  4159  001D8E  C083  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  4160                           
  4161                           ; BSR set to: 0
  4162                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  4163  001D92  0E00               	movlw	0
  4164  001D94  0100               	movlb	0	; () banked
  4165  001D96  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  4166  001D98  0100               	movlb	0	; () banked
  4167  001D9A  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4168  001D9C  0EFF               	movlw	255
  4169  001D9E  0100               	movlb	0	; () banked
  4170  001DA0  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  4171  001DA2  0100               	movlb	0	; () banked
  4172  001DA4  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  4173  001DA6  0E00               	movlw	0
  4174  001DA8  0100               	movlb	0	; () banked
  4175  001DAA  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  4176  001DAC  0100               	movlb	0	; () banked
  4177  001DAE  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  4178  001DB0  0E00               	movlw	0
  4179  001DB2  0100               	movlb	0	; () banked
  4180  001DB4  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  4181  001DB6  0100               	movlb	0	; () banked
  4182  001DB8  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  4183                           
  4184                           ; BSR set to: 0
  4185                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  4186  001DBA  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  4187  001DBE  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  4188  001DC2  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  4189  001DC6  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  4190  001DCA  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  4191  001DCE  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  4192  001DD2  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  4193  001DD6  0100               	movlb	0	; () banked
  4194  001DD8  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  4195  001DDA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4196  001DDE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4197  001DE2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4198  001DE6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4199                           
  4200                           ; BSR set to: 0
  4201                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  4202  001DEA  C083  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  4203                           
  4204                           ; BSR set to: 0
  4205                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  4206  001DEE  0E00               	movlw	0
  4207  001DF0  010F               	movlb	15	; () banked
  4208  001DF2  6F22               	movwf	34,b	;volatile
  4209                           
  4210                           ; BSR set to: 15
  4211                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  4212  001DF4  010F               	movlb	15	; () banked
  4213  001DF6  8722               	bsf	34,3,b	;volatile
  4214                           
  4215                           ; BSR set to: 15
  4216                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  4217  001DF8  0100               	movlb	0	; () banked
  4218  001DFA  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  4219  001DFC  D002               	goto	l396
  4220                           
  4221                           ; BSR set to: 0
  4222                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  4223  001DFE  010F               	movlb	15	; () banked
  4224  001E00  8122               	bsf	34,0,b	;volatile
  4225  001E02                     l396:
  4226                           
  4227                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  4228  001E02  0100               	movlb	0	; () banked
  4229  001E04  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  4230  001E06  D002               	goto	l397
  4231                           
  4232                           ; BSR set to: 0
  4233                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  4234  001E08  010F               	movlb	15	; () banked
  4235  001E0A  8322               	bsf	34,1,b	;volatile
  4236  001E0C                     l397:
  4237                           
  4238                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  4239  001E0C  0100               	movlb	0	; () banked
  4240  001E0E  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  4241  001E10  D002               	goto	l398
  4242                           
  4243                           ; BSR set to: 0
  4244                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  4245  001E12  010F               	movlb	15	; () banked
  4246  001E14  8B22               	bsf	34,5,b	;volatile
  4247  001E16                     l398:
  4248                           
  4249                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  4250  001E16  0100               	movlb	0	; () banked
  4251  001E18  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  4252  001E1A  D002               	goto	l399
  4253                           
  4254                           ; BSR set to: 0
  4255                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  4256  001E1C  010F               	movlb	15	; () banked
  4257  001E1E  8D22               	bsf	34,6,b	;volatile
  4258  001E20                     l399:
  4259                           
  4260                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  4261  001E20  0100               	movlb	0	; () banked
  4262  001E22  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  4263  001E24  D002               	goto	l7557
  4264                           
  4265                           ; BSR set to: 0
  4266                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  4267  001E26  010F               	movlb	15	; () banked
  4268  001E28  8F22               	bsf	34,7,b	;volatile
  4269  001E2A                     l7557:
  4270                           
  4271                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  4272  001E2A  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  4273  001E2E  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  4274  001E32  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  4275  001E36  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  4276  001E3A  0E16               	movlw	22
  4277  001E3C  D006               	goto	u10110
  4278  001E3E                     u10115:
  4279  001E3E  0100               	movlb	0	; () banked
  4280  001E40  90D8               	bcf	status,0,c
  4281  001E42  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  4282  001E44  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  4283  001E46  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  4284  001E48  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  4285  001E4A                     u10110:
  4286  001E4A  2EE8               	decfsz	wreg,f,c
  4287  001E4C  D7F8               	goto	u10115
  4288  001E4E  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4289  001E52  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4290  001E56  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4291  001E5A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4292                           
  4293                           ; BSR set to: 0
  4294                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  4295  001E5E  0100               	movlb	0	; () banked
  4296  001E60  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  4297  001E62  0100               	movlb	0	; () banked
  4298  001E64  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4299  001E66  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4300  001E68  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4301  001E6A  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4302                           
  4303                           ; BSR set to: 0
  4304                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  4305  001E6C  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  4306                           
  4307                           ;inc\CANlib.h: 483: }
  4308  001E70  D059               	goto	l7577
  4309  001E72                     l395:
  4310                           
  4311                           ; BSR set to: 0
  4312                           ;inc\CANlib.h: 485: else
  4313                           ;inc\CANlib.h: 487: {
  4314                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  4315  001E72  010F               	movlb	15	; () banked
  4316  001E74  9722               	bcf	34,3,b	;volatile
  4317                           
  4318                           ; BSR set to: 15
  4319                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  4320  001E76  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  4321  001E7A  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  4322  001E7E  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  4323  001E82  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  4324  001E86  0E04               	movlw	4
  4325  001E88  D006               	goto	u10120
  4326  001E8A                     u10125:
  4327  001E8A  0100               	movlb	0	; () banked
  4328  001E8C  90D8               	bcf	status,0,c
  4329  001E8E  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  4330  001E90  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  4331  001E92  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  4332  001E94  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  4333  001E96                     u10120:
  4334  001E96  2EE8               	decfsz	wreg,f,c
  4335  001E98  D7F8               	goto	u10125
  4336  001E9A  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4337  001E9E  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4338  001EA2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4339  001EA6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4340                           
  4341                           ; BSR set to: 0
  4342                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  4343  001EAA  0100               	movlb	0	; () banked
  4344  001EAC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  4345  001EAE  0100               	movlb	0	; () banked
  4346  001EB0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4347  001EB2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4348  001EB4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4349  001EB6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4350                           
  4351                           ; BSR set to: 0
  4352                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  4353  001EB8  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  4354                           
  4355                           ; BSR set to: 0
  4356                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  4357  001EBC  0E07               	movlw	7
  4358  001EBE  0100               	movlb	0	; () banked
  4359  001EC0  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  4360  001EC2  0100               	movlb	0	; () banked
  4361  001EC4  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4362  001EC6  0E00               	movlw	0
  4363  001EC8  0100               	movlb	0	; () banked
  4364  001ECA  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  4365  001ECC  0100               	movlb	0	; () banked
  4366  001ECE  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  4367  001ED0  0E00               	movlw	0
  4368  001ED2  0100               	movlb	0	; () banked
  4369  001ED4  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  4370  001ED6  0100               	movlb	0	; () banked
  4371  001ED8  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  4372  001EDA  0E00               	movlw	0
  4373  001EDC  0100               	movlb	0	; () banked
  4374  001EDE  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  4375  001EE0  0100               	movlb	0	; () banked
  4376  001EE2  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  4380  001EE4  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  4381  001EE8  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  4382  001EEC  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  4383  001EF0  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  4384  001EF4  0E05               	movlw	5
  4385  001EF6                     u10135:
  4386  001EF6  90D8               	bcf	status,0,c
  4387  001EF8  0100               	movlb	0	; () banked
  4388  001EFA  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  4389  001EFC  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  4390  001EFE  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  4391  001F00  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  4392  001F02  2EE8               	decfsz	wreg,f,c
  4393  001F04  D7F8               	goto	u10135
  4394  001F06  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4395  001F0A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4396  001F0E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4397  001F12  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4398                           
  4399                           ; BSR set to: 0
  4400                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  4401  001F16  010F               	movlb	15	; () banked
  4402  001F18  5122               	movf	34,w,b	;volatile
  4403  001F1A  0B1F               	andlw	31
  4404  001F1C  010F               	movlb	15	; () banked
  4405  001F1E  6F22               	movwf	34,b	;volatile
  4406                           
  4407                           ; BSR set to: 15
  4408                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  4409  001F20  C083  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  4410  001F24                     l7577:
  4411                           
  4412                           ;inc\CANlib.h: 498: }
  4413                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  4414  001F24  0100               	movlb	0	; () banked
  4415  001F26  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  4416  001F28  D003               	goto	l402
  4417                           
  4418                           ; BSR set to: 0
  4419                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  4420  001F2A  010F               	movlb	15	; () banked
  4421  001F2C  8120               	bsf	32,0,b	;volatile
  4422  001F2E  D002               	goto	l403
  4423  001F30                     l402:
  4424                           
  4425                           ; BSR set to: 0
  4426                           ;inc\CANlib.h: 502: else
  4427                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  4428  001F30  010F               	movlb	15	; () banked
  4429  001F32  9120               	bcf	32,0,b	;volatile
  4430  001F34                     l403:
  4431                           
  4432                           ; BSR set to: 15
  4433                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  4434  001F34  0100               	movlb	0	; () banked
  4435  001F36  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  4436  001F38  D003               	goto	l404
  4437                           
  4438                           ; BSR set to: 0
  4439                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  4440  001F3A  010F               	movlb	15	; () banked
  4441  001F3C  8320               	bsf	32,1,b	;volatile
  4442  001F3E  D002               	goto	l7583
  4443  001F40                     l404:
  4444                           
  4445                           ; BSR set to: 0
  4446                           ;inc\CANlib.h: 506: else
  4447                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  4448  001F40  010F               	movlb	15	; () banked
  4449  001F42  9320               	bcf	32,1,b	;volatile
  4450  001F44                     l7583:
  4451                           
  4452                           ; BSR set to: 15
  4453                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  4454  001F44  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  4455  001F48  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  4456  001F4C  50DF               	movf	indf2,w,c
  4457  001F4E  010F               	movlb	15	; () banked
  4458  001F50  6F26               	movwf	38,b	;volatile
  4459                           
  4460                           ; BSR set to: 15
  4461                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  4462  001F52  0100               	movlb	0	; () banked
  4463  001F54  EE20 F001          	lfsr	2,1
  4464  001F58  517B               	movf	CANsendMessage@data& (0+255),w,b
  4465  001F5A  26D9               	addwf	fsr2l,f,c
  4466  001F5C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4467  001F5E  22DA               	addwfc	fsr2h,f,c
  4468  001F60  50DF               	movf	indf2,w,c
  4469  001F62  010F               	movlb	15	; () banked
  4470  001F64  6F27               	movwf	39,b	;volatile
  4471                           
  4472                           ; BSR set to: 15
  4473                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  4474  001F66  0100               	movlb	0	; () banked
  4475  001F68  EE20 F002          	lfsr	2,2
  4476  001F6C  517B               	movf	CANsendMessage@data& (0+255),w,b
  4477  001F6E  26D9               	addwf	fsr2l,f,c
  4478  001F70  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4479  001F72  22DA               	addwfc	fsr2h,f,c
  4480  001F74  50DF               	movf	indf2,w,c
  4481  001F76  010F               	movlb	15	; () banked
  4482  001F78  6F28               	movwf	40,b	;volatile
  4483                           
  4484                           ; BSR set to: 15
  4485                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  4486  001F7A  0100               	movlb	0	; () banked
  4487  001F7C  EE20 F003          	lfsr	2,3
  4488  001F80  517B               	movf	CANsendMessage@data& (0+255),w,b
  4489  001F82  26D9               	addwf	fsr2l,f,c
  4490  001F84  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4491  001F86  22DA               	addwfc	fsr2h,f,c
  4492  001F88  50DF               	movf	indf2,w,c
  4493  001F8A  010F               	movlb	15	; () banked
  4494  001F8C  6F29               	movwf	41,b	;volatile
  4495                           
  4496                           ; BSR set to: 15
  4497                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  4498  001F8E  0100               	movlb	0	; () banked
  4499  001F90  EE20 F004          	lfsr	2,4
  4500  001F94  517B               	movf	CANsendMessage@data& (0+255),w,b
  4501  001F96  26D9               	addwf	fsr2l,f,c
  4502  001F98  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4503  001F9A  22DA               	addwfc	fsr2h,f,c
  4504  001F9C  50DF               	movf	indf2,w,c
  4505  001F9E  010F               	movlb	15	; () banked
  4506  001FA0  6F2A               	movwf	42,b	;volatile
  4507                           
  4508                           ; BSR set to: 15
  4509                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  4510  001FA2  0100               	movlb	0	; () banked
  4511  001FA4  EE20 F005          	lfsr	2,5
  4512  001FA8  517B               	movf	CANsendMessage@data& (0+255),w,b
  4513  001FAA  26D9               	addwf	fsr2l,f,c
  4514  001FAC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4515  001FAE  22DA               	addwfc	fsr2h,f,c
  4516  001FB0  50DF               	movf	indf2,w,c
  4517  001FB2  010F               	movlb	15	; () banked
  4518  001FB4  6F2B               	movwf	43,b	;volatile
  4519                           
  4520                           ; BSR set to: 15
  4521                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  4522  001FB6  0100               	movlb	0	; () banked
  4523  001FB8  EE20 F006          	lfsr	2,6
  4524  001FBC  517B               	movf	CANsendMessage@data& (0+255),w,b
  4525  001FBE  26D9               	addwf	fsr2l,f,c
  4526  001FC0  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4527  001FC2  22DA               	addwfc	fsr2h,f,c
  4528  001FC4  50DF               	movf	indf2,w,c
  4529  001FC6  010F               	movlb	15	; () banked
  4530  001FC8  6F2C               	movwf	44,b	;volatile
  4531                           
  4532                           ; BSR set to: 15
  4533                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  4534  001FCA  0100               	movlb	0	; () banked
  4535  001FCC  EE20 F007          	lfsr	2,7
  4536  001FD0  517B               	movf	CANsendMessage@data& (0+255),w,b
  4537  001FD2  26D9               	addwf	fsr2l,f,c
  4538  001FD4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4539  001FD6  22DA               	addwfc	fsr2h,f,c
  4540  001FD8  50DF               	movf	indf2,w,c
  4541  001FDA  010F               	movlb	15	; () banked
  4542  001FDC  6F2D               	movwf	45,b	;volatile
  4543                           
  4544                           ; BSR set to: 15
  4545                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  4546  001FDE  010F               	movlb	15	; () banked
  4547  001FE0  8720               	bsf	32,3,b	;volatile
  4548                           
  4549                           ; BSR set to: 15
  4550                           ;inc\CANlib.h: 520: return;
  4551  001FE2  0012               	return	
  4552  001FE4                     __end_of_CANsendMessage:
  4553                           	opt stack 0
  4554                           tblptru	equ	0xFF8
  4555                           tblptrh	equ	0xFF7
  4556                           tblptrl	equ	0xFF6
  4557                           tablat	equ	0xFF5
  4558                           postinc0	equ	0xFEE
  4559                           wreg	equ	0xFE8
  4560                           postdec1	equ	0xFE5
  4561                           fsr1l	equ	0xFE1
  4562                           indf2	equ	0xFDF
  4563                           postinc2	equ	0xFDE
  4564                           postdec2	equ	0xFDD
  4565                           fsr2h	equ	0xFDA
  4566                           fsr2l	equ	0xFD9
  4567                           status	equ	0xFD8
  4568                           
  4569 ;; *************** function _CANisTxReady *****************
  4570 ;; Defined at:
  4571 ;;		line 1154 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  4572 ;; Parameters:    Size  Location     Type
  4573 ;;		None
  4574 ;; Auto vars:     Size  Location     Type
  4575 ;;		None
  4576 ;; Return value:  Size  Location     Type
  4577 ;;                  1    wreg      unsigned char 
  4578 ;; Registers used:
  4579 ;;		wreg, status,2
  4580 ;; Tracked objects:
  4581 ;;		On entry : 0/0
  4582 ;;		On exit  : 0/0
  4583 ;;		Unchanged: 0/0
  4584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4586 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4588 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4589 ;;Total ram usage:        1 bytes
  4590 ;; Hardware stack levels used:    1
  4591 ;; Hardware stack levels required when called:    4
  4592 ;; This function calls:
  4593 ;;		Nothing
  4594 ;; This function is called by:
  4595 ;;		_main
  4596 ;;		_park_search
  4597 ;;		_park_routine
  4598 ;;		_can_send
  4599 ;; This function uses a non-reentrant model
  4600 ;;
  4601                           
  4602                           	psect	text6
  4603  00664A                     __ptext6:
  4604                           	opt stack 0
  4605  00664A                     _CANisTxReady:
  4606                           	opt stack 23
  4607                           
  4608                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  4609                           
  4610                           ; BSR set to: 15
  4611                           ;incstack = 0
  4612  00664A  0E01               	movlw	1
  4613  00664C  0100               	movlb	0	; () banked
  4614  00664E  6F77               	movwf	_CANisTxReady$2800& (0+255),b
  4615                           
  4616                           ; BSR set to: 0
  4617  006650  010F               	movlb	15	; () banked
  4618  006652  A740               	btfss	64,3,b	;volatile
  4619  006654  D009               	goto	l556
  4620                           
  4621                           ; BSR set to: 15
  4622  006656  010F               	movlb	15	; () banked
  4623  006658  A730               	btfss	48,3,b	;volatile
  4624  00665A  D006               	goto	l556
  4625                           
  4626                           ; BSR set to: 15
  4627  00665C  010F               	movlb	15	; () banked
  4628  00665E  A720               	btfss	32,3,b	;volatile
  4629  006660  D003               	goto	l556
  4630                           
  4631                           ; BSR set to: 15
  4632  006662  0E00               	movlw	0
  4633  006664  0100               	movlb	0	; () banked
  4634  006666  6F77               	movwf	_CANisTxReady$2800& (0+255),b
  4635  006668                     l556:
  4636  006668  0100               	movlb	0	; () banked
  4637  00666A  5177               	movf	_CANisTxReady$2800& (0+255),w,b
  4638  00666C  0012               	return	
  4639  00666E                     __end_of_CANisTxReady:
  4640                           	opt stack 0
  4641                           tblptru	equ	0xFF8
  4642                           tblptrh	equ	0xFF7
  4643                           tblptrl	equ	0xFF6
  4644                           tablat	equ	0xFF5
  4645                           postinc0	equ	0xFEE
  4646                           wreg	equ	0xFE8
  4647                           postdec1	equ	0xFE5
  4648                           fsr1l	equ	0xFE1
  4649                           indf2	equ	0xFDF
  4650                           postinc2	equ	0xFDE
  4651                           postdec2	equ	0xFDD
  4652                           fsr2h	equ	0xFDA
  4653                           fsr2l	equ	0xFD9
  4654                           status	equ	0xFD8
  4655                           
  4656 ;; *************** function _abs *****************
  4657 ;; Defined at:
  4658 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\abs.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;  a               2   23[BANK0 ] int 
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;		None
  4663 ;; Return value:  Size  Location     Type
  4664 ;;                  2   23[BANK0 ] int 
  4665 ;; Registers used:
  4666 ;;		wreg, status,2, status,0
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4672 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4674 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4675 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4676 ;;Total ram usage:        4 bytes
  4677 ;; Hardware stack levels used:    1
  4678 ;; Hardware stack levels required when called:    4
  4679 ;; This function calls:
  4680 ;;		Nothing
  4681 ;; This function is called by:
  4682 ;;		_park_search
  4683 ;;		_parallelo
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687                           	psect	text7
  4688  0065F2                     __ptext7:
  4689                           	opt stack 0
  4690  0065F2                     _abs:
  4691                           	opt stack 24
  4692                           
  4693                           ; BSR set to: 0
  4694                           ;incstack = 0
  4695  0065F2  0100               	movlb	0	; () banked
  4696  0065F4  AF78               	btfss	(abs@a+1)& (0+255),7,b
  4697  0065F6  D00E               	goto	l895
  4698                           
  4699                           ; BSR set to: 0
  4700  0065F8  C077  F079         	movff	abs@a,??_abs
  4701  0065FC  C078  F07A         	movff	abs@a+1,??_abs+1
  4702  006600  0100               	movlb	0	; () banked
  4703  006602  1F79               	comf	??_abs& (0+255),f,b
  4704  006604  1F7A               	comf	(??_abs+1)& (0+255),f,b
  4705  006606  4B79               	infsnz	??_abs& (0+255),f,b
  4706  006608  2B7A               	incf	(??_abs+1)& (0+255),f,b
  4707  00660A  C079  F077         	movff	??_abs,?_abs
  4708  00660E  C07A  F078         	movff	??_abs+1,?_abs+1
  4709  006612  0012               	return	
  4710  006614                     l895:
  4711                           
  4712                           ; BSR set to: 0
  4713  006614  C077  F077         	movff	abs@a,?_abs
  4714  006618  C078  F078         	movff	abs@a+1,?_abs+1
  4715                           
  4716                           ; BSR set to: 0
  4717  00661C  0012               	return		;funcret
  4718  00661E                     __end_of_abs:
  4719                           	opt stack 0
  4720                           tblptru	equ	0xFF8
  4721                           tblptrh	equ	0xFF7
  4722                           tblptrl	equ	0xFF6
  4723                           tablat	equ	0xFF5
  4724                           postinc0	equ	0xFEE
  4725                           wreg	equ	0xFE8
  4726                           postdec1	equ	0xFE5
  4727                           fsr1l	equ	0xFE1
  4728                           indf2	equ	0xFDF
  4729                           postinc2	equ	0xFDE
  4730                           postdec2	equ	0xFDD
  4731                           fsr2h	equ	0xFDA
  4732                           fsr2l	equ	0xFD9
  4733                           status	equ	0xFD8
  4734                           
  4735 ;; *************** function _matematica *****************
  4736 ;; Defined at:
  4737 ;;		line 465 in file "parcheggio.c"
  4738 ;; Parameters:    Size  Location     Type
  4739 ;;		None
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;		None
  4742 ;; Return value:  Size  Location     Type
  4743 ;;                  1    wreg      void 
  4744 ;; Registers used:
  4745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4746 ;; Tracked objects:
  4747 ;;		On entry : 0/0
  4748 ;;		On exit  : 0/0
  4749 ;;		Unchanged: 0/0
  4750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4752 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0
  4753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4754 ;;      Totals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0
  4755 ;;Total ram usage:       28 bytes
  4756 ;; Hardware stack levels used:    1
  4757 ;; Hardware stack levels required when called:    8
  4758 ;; This function calls:
  4759 ;;		___fladd
  4760 ;;		___fldiv
  4761 ;;		___flmul
  4762 ;;		___flneg
  4763 ;;		_asin
  4764 ;;		_cos
  4765 ;; This function is called by:
  4766 ;;		_park_routine
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770                           	psect	text8
  4771  002674                     __ptext8:
  4772                           	opt stack 0
  4773  002674                     _matematica:
  4774                           	opt stack 21
  4775                           
  4776                           ;parcheggio.c: 466: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4777                           
  4778                           ; BSR set to: 0
  4779                           ;incstack = 0
  4780  002674  C134  F0AD         	movff	_bordo,___fladd@a	;volatile
  4781  002678  C135  F0AE         	movff	_bordo+1,___fladd@a+1	;volatile
  4782  00267C  C136  F0AF         	movff	_bordo+2,___fladd@a+2	;volatile
  4783  002680  C137  F0B0         	movff	_bordo+3,___fladd@a+3	;volatile
  4784  002684  0E00               	movlw	0
  4785  002686  0100               	movlb	0	; () banked
  4786  002688  6F7B               	movwf	___fldiv@a& (0+255),b
  4787  00268A  0E00               	movlw	0
  4788  00268C  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4789  00268E  0E00               	movlw	0
  4790  002690  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4791  002692  0E40               	movlw	64
  4792  002694  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4793  002696  C1F0  F077         	movff	_larghezza,___fldiv@b
  4794  00269A  C1F1  F078         	movff	_larghezza+1,___fldiv@b+1
  4795  00269E  C1F2  F079         	movff	_larghezza+2,___fldiv@b+2
  4796  0026A2  C1F3  F07A         	movff	_larghezza+3,___fldiv@b+3
  4797  0026A6  EC59  F021         	call	___fldiv	;wreg free
  4798  0026AA  C077  F0A9         	movff	?___fldiv,___fladd@b
  4799  0026AE  C078  F0AA         	movff	?___fldiv+1,___fladd@b+1
  4800  0026B2  C079  F0AB         	movff	?___fldiv+2,___fladd@b+2
  4801  0026B6  C07A  F0AC         	movff	?___fldiv+3,___fladd@b+3
  4802  0026BA  EC85  F018         	call	___fladd	;wreg free
  4803  0026BE  C0A9  F0BD         	movff	?___fladd,___flneg@f1
  4804  0026C2  C0AA  F0BE         	movff	?___fladd+1,___flneg@f1+1
  4805  0026C6  C0AB  F0BF         	movff	?___fladd+2,___flneg@f1+2
  4806  0026CA  C0AC  F0C0         	movff	?___fladd+3,___flneg@f1+3
  4807  0026CE  ECA8  F032         	call	___flneg	;wreg free
  4808  0026D2  C0BD  F1D0         	movff	?___flneg,_matematica$3695
  4809  0026D6  C0BE  F1D1         	movff	?___flneg+1,_matematica$3695+1
  4810  0026DA  C0BF  F1D2         	movff	?___flneg+2,_matematica$3695+2
  4811  0026DE  C0C0  F1D3         	movff	?___flneg+3,_matematica$3695+3
  4812                           
  4813                           ;parcheggio.c: 466: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4814  0026E2  C1D0  F0AD         	movff	_matematica$3695,___fladd@a
  4815  0026E6  C1D1  F0AE         	movff	_matematica$3695+1,___fladd@a+1
  4816  0026EA  C1D2  F0AF         	movff	_matematica$3695+2,___fladd@a+2
  4817  0026EE  C1D3  F0B0         	movff	_matematica$3695+3,___fladd@a+3
  4818  0026F2  0E00               	movlw	0
  4819  0026F4  0100               	movlb	0	; () banked
  4820  0026F6  6F94               	movwf	___flmul@a& (0+255),b
  4821  0026F8  0E00               	movlw	0
  4822  0026FA  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4823  0026FC  0E00               	movlw	0
  4824  0026FE  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4825  002700  0E40               	movlw	64
  4826  002702  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4827  002704  C1F6  F090         	movff	_raggio,___flmul@b
  4828  002708  C1F7  F091         	movff	_raggio+1,___flmul@b+1
  4829  00270C  C1F8  F092         	movff	_raggio+2,___flmul@b+2
  4830  002710  C1F9  F093         	movff	_raggio+3,___flmul@b+3
  4831  002714  ECD9  F01A         	call	___flmul	;wreg free
  4832  002718  C090  F0A9         	movff	?___flmul,___fladd@b
  4833  00271C  C091  F0AA         	movff	?___flmul+1,___fladd@b+1
  4834  002720  C092  F0AB         	movff	?___flmul+2,___fladd@b+2
  4835  002724  C093  F0AC         	movff	?___flmul+3,___fladd@b+3
  4836  002728  EC85  F018         	call	___fladd	;wreg free
  4837  00272C  C0A9  F1D4         	movff	?___fladd,_matematica$3696
  4838  002730  C0AA  F1D5         	movff	?___fladd+1,_matematica$3696+1
  4839  002734  C0AB  F1D6         	movff	?___fladd+2,_matematica$3696+2
  4840  002738  C0AC  F1D7         	movff	?___fladd+3,_matematica$3696+3
  4841                           
  4842                           ;parcheggio.c: 466: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4843  00273C  0E00               	movlw	0
  4844  00273E  0100               	movlb	0	; () banked
  4845  002740  6F7B               	movwf	___fldiv@a& (0+255),b
  4846  002742  0E00               	movlw	0
  4847  002744  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4848  002746  0E00               	movlw	0
  4849  002748  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4850  00274A  0E40               	movlw	64
  4851  00274C  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4852  00274E  C1F0  F077         	movff	_larghezza,___fldiv@b
  4853  002752  C1F1  F078         	movff	_larghezza+1,___fldiv@b+1
  4854  002756  C1F2  F079         	movff	_larghezza+2,___fldiv@b+2
  4855  00275A  C1F3  F07A         	movff	_larghezza+3,___fldiv@b+3
  4856  00275E  EC59  F021         	call	___fldiv	;wreg free
  4857  002762  C077  F0BD         	movff	?___fldiv,___flneg@f1
  4858  002766  C078  F0BE         	movff	?___fldiv+1,___flneg@f1+1
  4859  00276A  C079  F0BF         	movff	?___fldiv+2,___flneg@f1+2
  4860  00276E  C07A  F0C0         	movff	?___fldiv+3,___flneg@f1+3
  4861  002772  ECA8  F032         	call	___flneg	;wreg free
  4862  002776  C0BD  F0AD         	movff	?___flneg,___fladd@a
  4863  00277A  C0BE  F0AE         	movff	?___flneg+1,___fladd@a+1
  4864  00277E  C0BF  F0AF         	movff	?___flneg+2,___fladd@a+2
  4865  002782  C0C0  F0B0         	movff	?___flneg+3,___fladd@a+3
  4866  002786  C1D4  F0A9         	movff	_matematica$3696,___fladd@b
  4867  00278A  C1D5  F0AA         	movff	_matematica$3696+1,___fladd@b+1
  4868  00278E  C1D6  F0AB         	movff	_matematica$3696+2,___fladd@b+2
  4869  002792  C1D7  F0AC         	movff	_matematica$3696+3,___fladd@b+3
  4870  002796  EC85  F018         	call	___fladd	;wreg free
  4871  00279A  C0A9  F1D8         	movff	?___fladd,_matematica$3697
  4872  00279E  C0AA  F1D9         	movff	?___fladd+1,_matematica$3697+1
  4873  0027A2  C0AB  F1DA         	movff	?___fladd+2,_matematica$3697+2
  4874  0027A6  C0AC  F1DB         	movff	?___fladd+3,_matematica$3697+3
  4875                           
  4876                           ;parcheggio.c: 466: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4877  0027AA  C1D8  F077         	movff	_matematica$3697,___fldiv@b
  4878  0027AE  C1D9  F078         	movff	_matematica$3697+1,___fldiv@b+1
  4879  0027B2  C1DA  F079         	movff	_matematica$3697+2,___fldiv@b+2
  4880  0027B6  C1DB  F07A         	movff	_matematica$3697+3,___fldiv@b+3
  4881  0027BA  0E00               	movlw	0
  4882  0027BC  0100               	movlb	0	; () banked
  4883  0027BE  6F94               	movwf	___flmul@a& (0+255),b
  4884  0027C0  0E00               	movlw	0
  4885  0027C2  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4886  0027C4  0E00               	movlw	0
  4887  0027C6  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4888  0027C8  0E40               	movlw	64
  4889  0027CA  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4890  0027CC  C1F6  F090         	movff	_raggio,___flmul@b
  4891  0027D0  C1F7  F091         	movff	_raggio+1,___flmul@b+1
  4892  0027D4  C1F8  F092         	movff	_raggio+2,___flmul@b+2
  4893  0027D8  C1F9  F093         	movff	_raggio+3,___flmul@b+3
  4894  0027DC  ECD9  F01A         	call	___flmul	;wreg free
  4895  0027E0  C090  F07B         	movff	?___flmul,___fldiv@a
  4896  0027E4  C091  F07C         	movff	?___flmul+1,___fldiv@a+1
  4897  0027E8  C092  F07D         	movff	?___flmul+2,___fldiv@a+2
  4898  0027EC  C093  F07E         	movff	?___flmul+3,___fldiv@a+3
  4899  0027F0  EC59  F021         	call	___fldiv	;wreg free
  4900  0027F4  C077  F1DC         	movff	?___fldiv,_matematica$3698
  4901  0027F8  C078  F1DD         	movff	?___fldiv+1,_matematica$3698+1
  4902  0027FC  C079  F1DE         	movff	?___fldiv+2,_matematica$3698+2
  4903  002800  C07A  F1DF         	movff	?___fldiv+3,_matematica$3698+3
  4904                           
  4905                           ;parcheggio.c: 466: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4906  002804  C1DC  F0DE         	movff	_matematica$3698,asin@x
  4907  002808  C1DD  F0DF         	movff	_matematica$3698+1,asin@x+1
  4908  00280C  C1DE  F0E0         	movff	_matematica$3698+2,asin@x+2
  4909  002810  C1DF  F0E1         	movff	_matematica$3698+3,asin@x+3
  4910  002814  EC94  F026         	call	_asin	;wreg free
  4911  002818  C0DE  F12C         	movff	?_asin,_alfa
  4912  00281C  C0DF  F12D         	movff	?_asin+1,_alfa+1
  4913  002820  C0E0  F12E         	movff	?_asin+2,_alfa+2
  4914  002824  C0E1  F12F         	movff	?_asin+3,_alfa+3
  4915                           
  4916                           ;parcheggio.c: 467: alfa = alfa / 3.14159265358979323846 * 180;
  4917  002828  0EDB               	movlw	219
  4918  00282A  0100               	movlb	0	; () banked
  4919  00282C  6F7B               	movwf	___fldiv@a& (0+255),b
  4920  00282E  0E0F               	movlw	15
  4921  002830  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4922  002832  0E49               	movlw	73
  4923  002834  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4924  002836  0E40               	movlw	64
  4925  002838  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4926  00283A  C12C  F077         	movff	_alfa,___fldiv@b
  4927  00283E  C12D  F078         	movff	_alfa+1,___fldiv@b+1
  4928  002842  C12E  F079         	movff	_alfa+2,___fldiv@b+2
  4929  002846  C12F  F07A         	movff	_alfa+3,___fldiv@b+3
  4930  00284A  EC59  F021         	call	___fldiv	;wreg free
  4931  00284E  C077  F090         	movff	?___fldiv,___flmul@b
  4932  002852  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  4933  002856  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  4934  00285A  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  4935  00285E  0E00               	movlw	0
  4936  002860  0100               	movlb	0	; () banked
  4937  002862  6F94               	movwf	___flmul@a& (0+255),b
  4938  002864  0E00               	movlw	0
  4939  002866  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4940  002868  0E34               	movlw	52
  4941  00286A  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4942  00286C  0E43               	movlw	67
  4943  00286E  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4944  002870  ECD9  F01A         	call	___flmul	;wreg free
  4945  002874  C090  F12C         	movff	?___flmul,_alfa
  4946  002878  C091  F12D         	movff	?___flmul+1,_alfa+1
  4947  00287C  C092  F12E         	movff	?___flmul+2,_alfa+2
  4948  002880  C093  F12F         	movff	?___flmul+3,_alfa+3
  4949                           
  4950                           ;parcheggio.c: 468: beta = 90 - alfa;
  4951  002884  C12C  F0BD         	movff	_alfa,___flneg@f1
  4952  002888  C12D  F0BE         	movff	_alfa+1,___flneg@f1+1
  4953  00288C  C12E  F0BF         	movff	_alfa+2,___flneg@f1+2
  4954  002890  C12F  F0C0         	movff	_alfa+3,___flneg@f1+3
  4955  002894  ECA8  F032         	call	___flneg	;wreg free
  4956  002898  C0BD  F0A9         	movff	?___flneg,___fladd@b
  4957  00289C  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  4958  0028A0  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  4959  0028A4  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  4960  0028A8  0E00               	movlw	0
  4961  0028AA  0100               	movlb	0	; () banked
  4962  0028AC  6FAD               	movwf	___fladd@a& (0+255),b
  4963  0028AE  0E00               	movlw	0
  4964  0028B0  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  4965  0028B2  0EB4               	movlw	180
  4966  0028B4  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  4967  0028B6  0E42               	movlw	66
  4968  0028B8  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  4969  0028BA  EC85  F018         	call	___fladd	;wreg free
  4970  0028BE  C0A9  F130         	movff	?___fladd,_beta
  4971  0028C2  C0AA  F131         	movff	?___fladd+1,_beta+1
  4972  0028C6  C0AB  F132         	movff	?___fladd+2,_beta+2
  4973  0028CA  C0AC  F133         	movff	?___fladd+3,_beta+3
  4974                           
  4975                           ;parcheggio.c: 469: alfa = (alfa * 3.14159265358979323846) / 180;
  4976  0028CE  0EDB               	movlw	219
  4977  0028D0  0100               	movlb	0	; () banked
  4978  0028D2  6F94               	movwf	___flmul@a& (0+255),b
  4979  0028D4  0E0F               	movlw	15
  4980  0028D6  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4981  0028D8  0E49               	movlw	73
  4982  0028DA  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4983  0028DC  0E40               	movlw	64
  4984  0028DE  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4985  0028E0  C12C  F090         	movff	_alfa,___flmul@b
  4986  0028E4  C12D  F091         	movff	_alfa+1,___flmul@b+1
  4987  0028E8  C12E  F092         	movff	_alfa+2,___flmul@b+2
  4988  0028EC  C12F  F093         	movff	_alfa+3,___flmul@b+3
  4989  0028F0  ECD9  F01A         	call	___flmul	;wreg free
  4990  0028F4  C090  F077         	movff	?___flmul,___fldiv@b
  4991  0028F8  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  4992  0028FC  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  4993  002900  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  4994  002904  0E00               	movlw	0
  4995  002906  0100               	movlb	0	; () banked
  4996  002908  6F7B               	movwf	___fldiv@a& (0+255),b
  4997  00290A  0E00               	movlw	0
  4998  00290C  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4999  00290E  0E34               	movlw	52
  5000  002910  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5001  002912  0E43               	movlw	67
  5002  002914  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5003  002916  EC59  F021         	call	___fldiv	;wreg free
  5004  00291A  C077  F12C         	movff	?___fldiv,_alfa
  5005  00291E  C078  F12D         	movff	?___fldiv+1,_alfa+1
  5006  002922  C079  F12E         	movff	?___fldiv+2,_alfa+2
  5007  002926  C07A  F12F         	movff	?___fldiv+3,_alfa+3
  5008                           
  5009                           ;parcheggio.c: 470: n = cos(alfa);
  5010  00292A  C12C  F1C8         	movff	_alfa,cos@f
  5011  00292E  C12D  F1C9         	movff	_alfa+1,cos@f+1
  5012  002932  C12E  F1CA         	movff	_alfa+2,cos@f+2
  5013  002936  C12F  F1CB         	movff	_alfa+3,cos@f+3
  5014  00293A  EC16  F030         	call	_cos	;wreg free
  5015  00293E  C1C8  F138         	movff	?_cos,_n
  5016  002942  C1C9  F139         	movff	?_cos+1,_n+1
  5017  002946  C1CA  F13A         	movff	?_cos+2,_n+2
  5018  00294A  C1CB  F13B         	movff	?_cos+3,_n+3
  5019                           
  5020                           ;parcheggio.c: 471: n = 2 * raggio *n;
  5021  00294E  C138  F094         	movff	_n,___flmul@a
  5022  002952  C139  F095         	movff	_n+1,___flmul@a+1
  5023  002956  C13A  F096         	movff	_n+2,___flmul@a+2
  5024  00295A  C13B  F097         	movff	_n+3,___flmul@a+3
  5025  00295E  C1F6  F090         	movff	_raggio,___flmul@b
  5026  002962  C1F7  F091         	movff	_raggio+1,___flmul@b+1
  5027  002966  C1F8  F092         	movff	_raggio+2,___flmul@b+2
  5028  00296A  C1F9  F093         	movff	_raggio+3,___flmul@b+3
  5029  00296E  ECD9  F01A         	call	___flmul	;wreg free
  5030  002972  C090  F1E8         	movff	?___flmul,_matematica$3699
  5031  002976  C091  F1E9         	movff	?___flmul+1,_matematica$3699+1
  5032  00297A  C092  F1EA         	movff	?___flmul+2,_matematica$3699+2
  5033  00297E  C093  F1EB         	movff	?___flmul+3,_matematica$3699+3
  5034                           
  5035                           ;parcheggio.c: 471: n = 2 * raggio *n;
  5036  002982  C1E8  F090         	movff	_matematica$3699,___flmul@b
  5037  002986  C1E9  F091         	movff	_matematica$3699+1,___flmul@b+1
  5038  00298A  C1EA  F092         	movff	_matematica$3699+2,___flmul@b+2
  5039  00298E  C1EB  F093         	movff	_matematica$3699+3,___flmul@b+3
  5040  002992  0E00               	movlw	0
  5041  002994  0100               	movlb	0	; () banked
  5042  002996  6F94               	movwf	___flmul@a& (0+255),b
  5043  002998  0E00               	movlw	0
  5044  00299A  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5045  00299C  0E00               	movlw	0
  5046  00299E  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5047  0029A0  0E40               	movlw	64
  5048  0029A2  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5049  0029A4  ECD9  F01A         	call	___flmul	;wreg free
  5050  0029A8  C090  F138         	movff	?___flmul,_n
  5051  0029AC  C091  F139         	movff	?___flmul+1,_n+1
  5052  0029B0  C092  F13A         	movff	?___flmul+2,_n+2
  5053  0029B4  C093  F13B         	movff	?___flmul+3,_n+3
  5054                           
  5055                           ;parcheggio.c: 472: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  5056  0029B8  C130  F094         	movff	_beta,___flmul@a
  5057  0029BC  C131  F095         	movff	_beta+1,___flmul@a+1
  5058  0029C0  C132  F096         	movff	_beta+2,___flmul@a+2
  5059  0029C4  C133  F097         	movff	_beta+3,___flmul@a+3
  5060  0029C8  C1F6  F090         	movff	_raggio,___flmul@b
  5061  0029CC  C1F7  F091         	movff	_raggio+1,___flmul@b+1
  5062  0029D0  C1F8  F092         	movff	_raggio+2,___flmul@b+2
  5063  0029D4  C1F9  F093         	movff	_raggio+3,___flmul@b+3
  5064  0029D8  ECD9  F01A         	call	___flmul	;wreg free
  5065  0029DC  C090  F1E8         	movff	?___flmul,_matematica$3699
  5066  0029E0  C091  F1E9         	movff	?___flmul+1,_matematica$3699+1
  5067  0029E4  C092  F1EA         	movff	?___flmul+2,_matematica$3699+2
  5068  0029E8  C093  F1EB         	movff	?___flmul+3,_matematica$3699+3
  5069                           
  5070                           ;parcheggio.c: 472: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  5071  0029EC  0EDB               	movlw	219
  5072  0029EE  0100               	movlb	0	; () banked
  5073  0029F0  6F94               	movwf	___flmul@a& (0+255),b
  5074  0029F2  0E0F               	movlw	15
  5075  0029F4  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5076  0029F6  0EC9               	movlw	201
  5077  0029F8  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5078  0029FA  0E40               	movlw	64
  5079  0029FC  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5080  0029FE  C1E8  F090         	movff	_matematica$3699,___flmul@b
  5081  002A02  C1E9  F091         	movff	_matematica$3699+1,___flmul@b+1
  5082  002A06  C1EA  F092         	movff	_matematica$3699+2,___flmul@b+2
  5083  002A0A  C1EB  F093         	movff	_matematica$3699+3,___flmul@b+3
  5084  002A0E  ECD9  F01A         	call	___flmul	;wreg free
  5085  002A12  C090  F077         	movff	?___flmul,___fldiv@b
  5086  002A16  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  5087  002A1A  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  5088  002A1E  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  5089  002A22  0E00               	movlw	0
  5090  002A24  0100               	movlb	0	; () banked
  5091  002A26  6F7B               	movwf	___fldiv@a& (0+255),b
  5092  002A28  0E00               	movlw	0
  5093  002A2A  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5094  002A2C  0EB4               	movlw	180
  5095  002A2E  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5096  002A30  0E43               	movlw	67
  5097  002A32  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5098  002A34  EC59  F021         	call	___fldiv	;wreg free
  5099  002A38  C077  F140         	movff	?___fldiv,_prima_sterzata
  5100  002A3C  C078  F141         	movff	?___fldiv+1,_prima_sterzata+1
  5101  002A40  C079  F142         	movff	?___fldiv+2,_prima_sterzata+2
  5102  002A44  C07A  F143         	movff	?___fldiv+3,_prima_sterzata+3
  5103                           
  5104                           ;parcheggio.c: 473: K_var = raggio + (2 * larghezza / 3);
  5105  002A48  0E00               	movlw	0
  5106  002A4A  0100               	movlb	0	; () banked
  5107  002A4C  6F7B               	movwf	___fldiv@a& (0+255),b
  5108  002A4E  0E00               	movlw	0
  5109  002A50  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5110  002A52  0E40               	movlw	64
  5111  002A54  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5112  002A56  0E40               	movlw	64
  5113  002A58  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5114  002A5A  0E00               	movlw	0
  5115  002A5C  0100               	movlb	0	; () banked
  5116  002A5E  6F94               	movwf	___flmul@a& (0+255),b
  5117  002A60  0E00               	movlw	0
  5118  002A62  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5119  002A64  0E00               	movlw	0
  5120  002A66  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5121  002A68  0E40               	movlw	64
  5122  002A6A  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5123  002A6C  C1F0  F090         	movff	_larghezza,___flmul@b
  5124  002A70  C1F1  F091         	movff	_larghezza+1,___flmul@b+1
  5125  002A74  C1F2  F092         	movff	_larghezza+2,___flmul@b+2
  5126  002A78  C1F3  F093         	movff	_larghezza+3,___flmul@b+3
  5127  002A7C  ECD9  F01A         	call	___flmul	;wreg free
  5128  002A80  C090  F077         	movff	?___flmul,___fldiv@b
  5129  002A84  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  5130  002A88  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  5131  002A8C  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  5132  002A90  EC59  F021         	call	___fldiv	;wreg free
  5133  002A94  C077  F0A9         	movff	?___fldiv,___fladd@b
  5134  002A98  C078  F0AA         	movff	?___fldiv+1,___fladd@b+1
  5135  002A9C  C079  F0AB         	movff	?___fldiv+2,___fladd@b+2
  5136  002AA0  C07A  F0AC         	movff	?___fldiv+3,___fladd@b+3
  5137  002AA4  C1F6  F0AD         	movff	_raggio,___fladd@a
  5138  002AA8  C1F7  F0AE         	movff	_raggio+1,___fladd@a+1
  5139  002AAC  C1F8  F0AF         	movff	_raggio+2,___fladd@a+2
  5140  002AB0  C1F9  F0B0         	movff	_raggio+3,___fladd@a+3
  5141  002AB4  EC85  F018         	call	___fladd	;wreg free
  5142  002AB8  C0A9  F124         	movff	?___fladd,_K_var
  5143  002ABC  C0AA  F125         	movff	?___fladd+1,_K_var+1
  5144  002AC0  C0AB  F126         	movff	?___fladd+2,_K_var+2
  5145  002AC4  C0AC  F127         	movff	?___fladd+3,_K_var+3
  5146                           
  5147                           ;parcheggio.c: 474: J_var = raggio - (2 * larghezza / 3);
  5148  002AC8  0E00               	movlw	0
  5149  002ACA  0100               	movlb	0	; () banked
  5150  002ACC  6F7B               	movwf	___fldiv@a& (0+255),b
  5151  002ACE  0E00               	movlw	0
  5152  002AD0  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5153  002AD2  0E40               	movlw	64
  5154  002AD4  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5155  002AD6  0E40               	movlw	64
  5156  002AD8  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5157  002ADA  0E00               	movlw	0
  5158  002ADC  0100               	movlb	0	; () banked
  5159  002ADE  6F94               	movwf	___flmul@a& (0+255),b
  5160  002AE0  0E00               	movlw	0
  5161  002AE2  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5162  002AE4  0E00               	movlw	0
  5163  002AE6  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5164  002AE8  0E40               	movlw	64
  5165  002AEA  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5166  002AEC  C1F0  F090         	movff	_larghezza,___flmul@b
  5167  002AF0  C1F1  F091         	movff	_larghezza+1,___flmul@b+1
  5168  002AF4  C1F2  F092         	movff	_larghezza+2,___flmul@b+2
  5169  002AF8  C1F3  F093         	movff	_larghezza+3,___flmul@b+3
  5170  002AFC  ECD9  F01A         	call	___flmul	;wreg free
  5171  002B00  C090  F077         	movff	?___flmul,___fldiv@b
  5172  002B04  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  5173  002B08  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  5174  002B0C  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  5175  002B10  EC59  F021         	call	___fldiv	;wreg free
  5176  002B14  C077  F0BD         	movff	?___fldiv,___flneg@f1
  5177  002B18  C078  F0BE         	movff	?___fldiv+1,___flneg@f1+1
  5178  002B1C  C079  F0BF         	movff	?___fldiv+2,___flneg@f1+2
  5179  002B20  C07A  F0C0         	movff	?___fldiv+3,___flneg@f1+3
  5180  002B24  ECA8  F032         	call	___flneg	;wreg free
  5181  002B28  C0BD  F0A9         	movff	?___flneg,___fladd@b
  5182  002B2C  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  5183  002B30  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  5184  002B34  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  5185  002B38  C1F6  F0AD         	movff	_raggio,___fladd@a
  5186  002B3C  C1F7  F0AE         	movff	_raggio+1,___fladd@a+1
  5187  002B40  C1F8  F0AF         	movff	_raggio+2,___fladd@a+2
  5188  002B44  C1F9  F0B0         	movff	_raggio+3,___fladd@a+3
  5189  002B48  EC85  F018         	call	___fladd	;wreg free
  5190  002B4C  C0A9  F120         	movff	?___fladd,_J_var
  5191  002B50  C0AA  F121         	movff	?___fladd+1,_J_var+1
  5192  002B54  C0AB  F122         	movff	?___fladd+2,_J_var+2
  5193  002B58  C0AC  F123         	movff	?___fladd+3,_J_var+3
  5194                           
  5195                           ;parcheggio.c: 475: Pmin = K_var * cos(asin((J_var / K_var)));
  5196  002B5C  C124  F07B         	movff	_K_var,___fldiv@a
  5197  002B60  C125  F07C         	movff	_K_var+1,___fldiv@a+1
  5198  002B64  C126  F07D         	movff	_K_var+2,___fldiv@a+2
  5199  002B68  C127  F07E         	movff	_K_var+3,___fldiv@a+3
  5200  002B6C  C120  F077         	movff	_J_var,___fldiv@b
  5201  002B70  C121  F078         	movff	_J_var+1,___fldiv@b+1
  5202  002B74  C122  F079         	movff	_J_var+2,___fldiv@b+2
  5203  002B78  C123  F07A         	movff	_J_var+3,___fldiv@b+3
  5204  002B7C  EC59  F021         	call	___fldiv	;wreg free
  5205  002B80  C077  F1E0         	movff	?___fldiv,_matematica$3700
  5206  002B84  C078  F1E1         	movff	?___fldiv+1,_matematica$3700+1
  5207  002B88  C079  F1E2         	movff	?___fldiv+2,_matematica$3700+2
  5208  002B8C  C07A  F1E3         	movff	?___fldiv+3,_matematica$3700+3
  5209                           
  5210                           ;parcheggio.c: 475: Pmin = K_var * cos(asin((J_var / K_var)));
  5211  002B90  C1E0  F0DE         	movff	_matematica$3700,asin@x
  5212  002B94  C1E1  F0DF         	movff	_matematica$3700+1,asin@x+1
  5213  002B98  C1E2  F0E0         	movff	_matematica$3700+2,asin@x+2
  5214  002B9C  C1E3  F0E1         	movff	_matematica$3700+3,asin@x+3
  5215  002BA0  EC94  F026         	call	_asin	;wreg free
  5216  002BA4  C0DE  F1C8         	movff	?_asin,cos@f
  5217  002BA8  C0DF  F1C9         	movff	?_asin+1,cos@f+1
  5218  002BAC  C0E0  F1CA         	movff	?_asin+2,cos@f+2
  5219  002BB0  C0E1  F1CB         	movff	?_asin+3,cos@f+3
  5220  002BB4  EC16  F030         	call	_cos	;wreg free
  5221  002BB8  C1C8  F1E4         	movff	?_cos,_matematica$3701
  5222  002BBC  C1C9  F1E5         	movff	?_cos+1,_matematica$3701+1
  5223  002BC0  C1CA  F1E6         	movff	?_cos+2,_matematica$3701+2
  5224  002BC4  C1CB  F1E7         	movff	?_cos+3,_matematica$3701+3
  5225                           
  5226                           ;parcheggio.c: 475: Pmin = K_var * cos(asin((J_var / K_var)));
  5227  002BC8  C1E4  F090         	movff	_matematica$3701,___flmul@b
  5228  002BCC  C1E5  F091         	movff	_matematica$3701+1,___flmul@b+1
  5229  002BD0  C1E6  F092         	movff	_matematica$3701+2,___flmul@b+2
  5230  002BD4  C1E7  F093         	movff	_matematica$3701+3,___flmul@b+3
  5231  002BD8  C124  F094         	movff	_K_var,___flmul@a
  5232  002BDC  C125  F095         	movff	_K_var+1,___flmul@a+1
  5233  002BE0  C126  F096         	movff	_K_var+2,___flmul@a+2
  5234  002BE4  C127  F097         	movff	_K_var+3,___flmul@a+3
  5235  002BE8  ECD9  F01A         	call	___flmul	;wreg free
  5236  002BEC  C090  F128         	movff	?___flmul,_Pmin
  5237  002BF0  C091  F129         	movff	?___flmul+1,_Pmin+1
  5238  002BF4  C092  F12A         	movff	?___flmul+2,_Pmin+2
  5239  002BF8  C093  F12B         	movff	?___flmul+3,_Pmin+3
  5240  002BFC  0012               	return		;funcret
  5241  002BFE                     __end_of_matematica:
  5242                           	opt stack 0
  5243                           tblptru	equ	0xFF8
  5244                           tblptrh	equ	0xFF7
  5245                           tblptrl	equ	0xFF6
  5246                           tablat	equ	0xFF5
  5247                           postinc0	equ	0xFEE
  5248                           wreg	equ	0xFE8
  5249                           postdec1	equ	0xFE5
  5250                           fsr1l	equ	0xFE1
  5251                           indf2	equ	0xFDF
  5252                           postinc2	equ	0xFDE
  5253                           postdec2	equ	0xFDD
  5254                           fsr2h	equ	0xFDA
  5255                           fsr2l	equ	0xFD9
  5256                           status	equ	0xFD8
  5257                           
  5258 ;; *************** function _cos *****************
  5259 ;; Defined at:
  5260 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\cos.c"
  5261 ;; Parameters:    Size  Location     Type
  5262 ;;  f               4   37[BANK1 ] void 
  5263 ;; Auto vars:     Size  Location     Type
  5264 ;;		None
  5265 ;; Return value:  Size  Location     Type
  5266 ;;                  4   37[BANK1 ] void 
  5267 ;; Registers used:
  5268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5269 ;; Tracked objects:
  5270 ;;		On entry : 0/0
  5271 ;;		On exit  : 0/0
  5272 ;;		Unchanged: 0/0
  5273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5274 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5275 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5277 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5278 ;;Total ram usage:        8 bytes
  5279 ;; Hardware stack levels used:    1
  5280 ;; Hardware stack levels required when called:    7
  5281 ;; This function calls:
  5282 ;;		___fladd
  5283 ;;		___flge
  5284 ;;		_sin
  5285 ;; This function is called by:
  5286 ;;		_matematica
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           	psect	text9
  5291  00602C                     __ptext9:
  5292                           	opt stack 0
  5293  00602C                     _cos:
  5294                           	opt stack 21
  5295                           
  5296                           ;incstack = 0
  5297  00602C  0EDB               	movlw	219
  5298  00602E  0100               	movlb	0	; () banked
  5299  006030  6FC5               	movwf	___flge@ff1& (0+255),b
  5300  006032  0E0F               	movlw	15
  5301  006034  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  5302  006036  0E49               	movlw	73
  5303  006038  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  5304  00603A  0E40               	movlw	64
  5305  00603C  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  5306  00603E  C1C8  F0C9         	movff	cos@f,___flge@ff2
  5307  006042  C1C9  F0CA         	movff	cos@f+1,___flge@ff2+1
  5308  006046  C1CA  F0CB         	movff	cos@f+2,___flge@ff2+2
  5309  00604A  C1CB  F0CC         	movff	cos@f+3,___flge@ff2+3
  5310  00604E  EC28  F02D         	call	___flge	;wreg free
  5311  006052  0100               	movlb	0	; () banked
  5312  006054  B0D8               	btfsc	status,0,c
  5313  006056  D02E               	goto	l7871
  5314                           
  5315                           ; BSR set to: 0
  5316  006058  C1C8  F0A9         	movff	cos@f,___fladd@b
  5317  00605C  C1C9  F0AA         	movff	cos@f+1,___fladd@b+1
  5318  006060  C1CA  F0AB         	movff	cos@f+2,___fladd@b+2
  5319  006064  C1CB  F0AC         	movff	cos@f+3,___fladd@b+3
  5320  006068  0EE4               	movlw	228
  5321  00606A  0100               	movlb	0	; () banked
  5322  00606C  6FAD               	movwf	___fladd@a& (0+255),b
  5323  00606E  0ECB               	movlw	203
  5324  006070  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5325  006072  0E96               	movlw	150
  5326  006074  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5327  006076  0EC0               	movlw	192
  5328  006078  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5329  00607A  EC85  F018         	call	___fladd	;wreg free
  5330  00607E  C0A9  F1CC         	movff	?___fladd,_cos$3705
  5331  006082  C0AA  F1CD         	movff	?___fladd+1,_cos$3705+1
  5332  006086  C0AB  F1CE         	movff	?___fladd+2,_cos$3705+2
  5333  00608A  C0AC  F1CF         	movff	?___fladd+3,_cos$3705+3
  5334  00608E  C1CC  F1AB         	movff	_cos$3705,sin@f
  5335  006092  C1CD  F1AC         	movff	_cos$3705+1,sin@f+1
  5336  006096  C1CE  F1AD         	movff	_cos$3705+2,sin@f+2
  5337  00609A  C1CF  F1AE         	movff	_cos$3705+3,sin@f+3
  5338  00609E  EC08  F025         	call	_sin	;wreg free
  5339  0060A2  C1AB  F1C8         	movff	?_sin,?_cos
  5340  0060A6  C1AC  F1C9         	movff	?_sin+1,?_cos+1
  5341  0060AA  C1AD  F1CA         	movff	?_sin+2,?_cos+2
  5342  0060AE  C1AE  F1CB         	movff	?_sin+3,?_cos+3
  5343  0060B2  0012               	return	
  5344  0060B4                     l7871:
  5345  0060B4  C1C8  F0A9         	movff	cos@f,___fladd@b
  5346  0060B8  C1C9  F0AA         	movff	cos@f+1,___fladd@b+1
  5347  0060BC  C1CA  F0AB         	movff	cos@f+2,___fladd@b+2
  5348  0060C0  C1CB  F0AC         	movff	cos@f+3,___fladd@b+3
  5349  0060C4  0EDB               	movlw	219
  5350  0060C6  0100               	movlb	0	; () banked
  5351  0060C8  6FAD               	movwf	___fladd@a& (0+255),b
  5352  0060CA  0E0F               	movlw	15
  5353  0060CC  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5354  0060CE  0EC9               	movlw	201
  5355  0060D0  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5356  0060D2  0E3F               	movlw	63
  5357  0060D4  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5358  0060D6  EC85  F018         	call	___fladd	;wreg free
  5359  0060DA  C0A9  F1CC         	movff	?___fladd,_cos$3705
  5360  0060DE  C0AA  F1CD         	movff	?___fladd+1,_cos$3705+1
  5361  0060E2  C0AB  F1CE         	movff	?___fladd+2,_cos$3705+2
  5362  0060E6  C0AC  F1CF         	movff	?___fladd+3,_cos$3705+3
  5363  0060EA  C1CC  F1AB         	movff	_cos$3705,sin@f
  5364  0060EE  C1CD  F1AC         	movff	_cos$3705+1,sin@f+1
  5365  0060F2  C1CE  F1AD         	movff	_cos$3705+2,sin@f+2
  5366  0060F6  C1CF  F1AE         	movff	_cos$3705+3,sin@f+3
  5367  0060FA  EC08  F025         	call	_sin	;wreg free
  5368  0060FE  C1AB  F1C8         	movff	?_sin,?_cos
  5369  006102  C1AC  F1C9         	movff	?_sin+1,?_cos+1
  5370  006106  C1AD  F1CA         	movff	?_sin+2,?_cos+2
  5371  00610A  C1AE  F1CB         	movff	?_sin+3,?_cos+3
  5372  00610E  0012               	return	
  5373  006110                     __end_of_cos:
  5374                           	opt stack 0
  5375                           tblptru	equ	0xFF8
  5376                           tblptrh	equ	0xFF7
  5377                           tblptrl	equ	0xFF6
  5378                           tablat	equ	0xFF5
  5379                           postinc0	equ	0xFEE
  5380                           wreg	equ	0xFE8
  5381                           postdec1	equ	0xFE5
  5382                           fsr1l	equ	0xFE1
  5383                           indf2	equ	0xFDF
  5384                           postinc2	equ	0xFDE
  5385                           postdec2	equ	0xFDD
  5386                           fsr2h	equ	0xFDA
  5387                           fsr2l	equ	0xFD9
  5388                           status	equ	0xFD8
  5389                           
  5390 ;; *************** function _sin *****************
  5391 ;; Defined at:
  5392 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sin.c"
  5393 ;; Parameters:    Size  Location     Type
  5394 ;;  f               4    8[BANK1 ] void 
  5395 ;; Auto vars:     Size  Location     Type
  5396 ;;  x2              4   20[BANK1 ] void 
  5397 ;;  y               4   12[BANK1 ] void 
  5398 ;;  sgn             1   24[BANK1 ] unsigned char 
  5399 ;; Return value:  Size  Location     Type
  5400 ;;                  4    8[BANK1 ] unsigned char 
  5401 ;; Registers used:
  5402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5403 ;; Tracked objects:
  5404 ;;		On entry : 0/0
  5405 ;;		On exit  : 0/0
  5406 ;;		Unchanged: 0/0
  5407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5408 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5409 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  5410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5411 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  5412 ;;Total ram usage:       17 bytes
  5413 ;; Hardware stack levels used:    1
  5414 ;; Hardware stack levels required when called:    6
  5415 ;; This function calls:
  5416 ;;		___fladd
  5417 ;;		___fldiv
  5418 ;;		___flge
  5419 ;;		___flmul
  5420 ;;		___flneg
  5421 ;;		___flsub
  5422 ;;		_eval_poly
  5423 ;;		_floor
  5424 ;; This function is called by:
  5425 ;;		_cos
  5426 ;; This function uses a non-reentrant model
  5427 ;;
  5428                           
  5429                           	psect	text10
  5430  004A10                     __ptext10:
  5431                           	opt stack 0
  5432  004A10                     _sin:
  5433                           	opt stack 21
  5434                           
  5435                           ;incstack = 0
  5436  004A10  0E00               	movlw	0
  5437  004A12  0101               	movlb	1	; () banked
  5438  004A14  6FBB               	movwf	sin@sgn& (0+255),b
  5439                           
  5440                           ; BSR set to: 1
  5441  004A16  0101               	movlb	1	; () banked
  5442  004A18  AFAE               	btfss	(sin@f+3)& (0+255),7,b
  5443  004A1A  D015               	goto	l7757
  5444                           
  5445                           ; BSR set to: 1
  5446  004A1C  C1AB  F0BD         	movff	sin@f,___flneg@f1
  5447  004A20  C1AC  F0BE         	movff	sin@f+1,___flneg@f1+1
  5448  004A24  C1AD  F0BF         	movff	sin@f+2,___flneg@f1+2
  5449  004A28  C1AE  F0C0         	movff	sin@f+3,___flneg@f1+3
  5450  004A2C  ECA8  F032         	call	___flneg	;wreg free
  5451  004A30  C0BD  F1AB         	movff	?___flneg,sin@f
  5452  004A34  C0BE  F1AC         	movff	?___flneg+1,sin@f+1
  5453  004A38  C0BF  F1AD         	movff	?___flneg+2,sin@f+2
  5454  004A3C  C0C0  F1AE         	movff	?___flneg+3,sin@f+3
  5455  004A40  0E01               	movlw	1
  5456  004A42  0101               	movlb	1	; () banked
  5457  004A44  6FBB               	movwf	sin@sgn& (0+255),b
  5458  004A46                     l7757:
  5459                           
  5460                           ; BSR set to: 1
  5461  004A46  C1AB  F090         	movff	sin@f,___flmul@b
  5462  004A4A  C1AC  F091         	movff	sin@f+1,___flmul@b+1
  5463  004A4E  C1AD  F092         	movff	sin@f+2,___flmul@b+2
  5464  004A52  C1AE  F093         	movff	sin@f+3,___flmul@b+3
  5465  004A56  0E83               	movlw	131
  5466  004A58  0100               	movlb	0	; () banked
  5467  004A5A  6F94               	movwf	___flmul@a& (0+255),b
  5468  004A5C  0EF9               	movlw	249
  5469  004A5E  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5470  004A60  0E22               	movlw	34
  5471  004A62  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5472  004A64  0E3E               	movlw	62
  5473  004A66  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5474  004A68  ECD9  F01A         	call	___flmul	;wreg free
  5475  004A6C  C090  F1AB         	movff	?___flmul,sin@f
  5476  004A70  C091  F1AC         	movff	?___flmul+1,sin@f+1
  5477  004A74  C092  F1AD         	movff	?___flmul+2,sin@f+2
  5478  004A78  C093  F1AE         	movff	?___flmul+3,sin@f+3
  5479  004A7C  C1AB  F1A3         	movff	sin@f,___flsub@b
  5480  004A80  C1AC  F1A4         	movff	sin@f+1,___flsub@b+1
  5481  004A84  C1AD  F1A5         	movff	sin@f+2,___flsub@b+2
  5482  004A88  C1AE  F1A6         	movff	sin@f+3,___flsub@b+3
  5483  004A8C  C1AB  F0D9         	movff	sin@f,floor@x
  5484  004A90  C1AC  F0DA         	movff	sin@f+1,floor@x+1
  5485  004A94  C1AD  F0DB         	movff	sin@f+2,floor@x+2
  5486  004A98  C1AE  F0DC         	movff	sin@f+3,floor@x+3
  5487  004A9C  ECF0  F02D         	call	_floor	;wreg free
  5488  004AA0  C0D9  F1A7         	movff	?_floor,___flsub@a
  5489  004AA4  C0DA  F1A8         	movff	?_floor+1,___flsub@a+1
  5490  004AA8  C0DB  F1A9         	movff	?_floor+2,___flsub@a+2
  5491  004AAC  C0DC  F1AA         	movff	?_floor+3,___flsub@a+3
  5492  004AB0  EC65  F032         	call	___flsub	;wreg free
  5493  004AB4  C1A3  F1AB         	movff	?___flsub,sin@f
  5494  004AB8  C1A4  F1AC         	movff	?___flsub+1,sin@f+1
  5495  004ABC  C1A5  F1AD         	movff	?___flsub+2,sin@f+2
  5496  004AC0  C1A6  F1AE         	movff	?___flsub+3,sin@f+3
  5497  004AC4  C1AB  F090         	movff	sin@f,___flmul@b
  5498  004AC8  C1AC  F091         	movff	sin@f+1,___flmul@b+1
  5499  004ACC  C1AD  F092         	movff	sin@f+2,___flmul@b+2
  5500  004AD0  C1AE  F093         	movff	sin@f+3,___flmul@b+3
  5501  004AD4  0E00               	movlw	0
  5502  004AD6  0100               	movlb	0	; () banked
  5503  004AD8  6F94               	movwf	___flmul@a& (0+255),b
  5504  004ADA  0E00               	movlw	0
  5505  004ADC  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5506  004ADE  0E80               	movlw	128
  5507  004AE0  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5508  004AE2  0E40               	movlw	64
  5509  004AE4  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5510  004AE6  ECD9  F01A         	call	___flmul	;wreg free
  5511  004AEA  C090  F1AB         	movff	?___flmul,sin@f
  5512  004AEE  C091  F1AC         	movff	?___flmul+1,sin@f+1
  5513  004AF2  C092  F1AD         	movff	?___flmul+2,sin@f+2
  5514  004AF6  C093  F1AE         	movff	?___flmul+3,sin@f+3
  5515  004AFA  0E00               	movlw	0
  5516  004AFC  0100               	movlb	0	; () banked
  5517  004AFE  6FC5               	movwf	___flge@ff1& (0+255),b
  5518  004B00  0E00               	movlw	0
  5519  004B02  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  5520  004B04  0E00               	movlw	0
  5521  004B06  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  5522  004B08  0E40               	movlw	64
  5523  004B0A  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  5524  004B0C  C1AB  F0C9         	movff	sin@f,___flge@ff2
  5525  004B10  C1AC  F0CA         	movff	sin@f+1,___flge@ff2+1
  5526  004B14  C1AD  F0CB         	movff	sin@f+2,___flge@ff2+2
  5527  004B18  C1AE  F0CC         	movff	sin@f+3,___flge@ff2+3
  5528  004B1C  EC28  F02D         	call	___flge	;wreg free
  5529  004B20  0100               	movlb	0	; () banked
  5530  004B22  B0D8               	btfsc	status,0,c
  5531  004B24  D025               	goto	l7769
  5532                           
  5533                           ; BSR set to: 0
  5534  004B26  C1AB  F1A3         	movff	sin@f,___flsub@b
  5535  004B2A  C1AC  F1A4         	movff	sin@f+1,___flsub@b+1
  5536  004B2E  C1AD  F1A5         	movff	sin@f+2,___flsub@b+2
  5537  004B32  C1AE  F1A6         	movff	sin@f+3,___flsub@b+3
  5538  004B36  0E00               	movlw	0
  5539  004B38  0101               	movlb	1	; () banked
  5540  004B3A  6FA7               	movwf	___flsub@a& (0+255),b
  5541  004B3C  0E00               	movlw	0
  5542  004B3E  6FA8               	movwf	(___flsub@a+1)& (0+255),b
  5543  004B40  0E00               	movlw	0
  5544  004B42  6FA9               	movwf	(___flsub@a+2)& (0+255),b
  5545  004B44  0E40               	movlw	64
  5546  004B46  6FAA               	movwf	(___flsub@a+3)& (0+255),b
  5547  004B48  EC65  F032         	call	___flsub	;wreg free
  5548  004B4C  C1A3  F1AB         	movff	?___flsub,sin@f
  5549  004B50  C1A4  F1AC         	movff	?___flsub+1,sin@f+1
  5550  004B54  C1A5  F1AD         	movff	?___flsub+2,sin@f+2
  5551  004B58  C1A6  F1AE         	movff	?___flsub+3,sin@f+3
  5552  004B5C  0101               	movlb	1	; () banked
  5553  004B5E  51BB               	movf	sin@sgn& (0+255),w,b
  5554  004B60  0101               	movlb	1	; () banked
  5555  004B62  A4D8               	btfss	status,2,c
  5556  004B64  D002               	goto	u10380
  5557  004B66  0E01               	movlw	1
  5558  004B68  D001               	goto	u10390
  5559  004B6A                     u10380:
  5560  004B6A  0E00               	movlw	0
  5561  004B6C                     u10390:
  5562  004B6C  0101               	movlb	1	; () banked
  5563  004B6E  6FBB               	movwf	sin@sgn& (0+255),b
  5564  004B70                     l7769:
  5565  004B70  0E00               	movlw	0
  5566  004B72  0100               	movlb	0	; () banked
  5567  004B74  6FC5               	movwf	___flge@ff1& (0+255),b
  5568  004B76  0E00               	movlw	0
  5569  004B78  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  5570  004B7A  0E80               	movlw	128
  5571  004B7C  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  5572  004B7E  0E3F               	movlw	63
  5573  004B80  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  5574  004B82  C1AB  F0C9         	movff	sin@f,___flge@ff2
  5575  004B86  C1AC  F0CA         	movff	sin@f+1,___flge@ff2+1
  5576  004B8A  C1AD  F0CB         	movff	sin@f+2,___flge@ff2+2
  5577  004B8E  C1AE  F0CC         	movff	sin@f+3,___flge@ff2+3
  5578  004B92  EC28  F02D         	call	___flge	;wreg free
  5579  004B96  0100               	movlb	0	; () banked
  5580  004B98  B0D8               	btfsc	status,0,c
  5581  004B9A  D025               	goto	l7773
  5582                           
  5583                           ; BSR set to: 0
  5584  004B9C  C1AB  F0BD         	movff	sin@f,___flneg@f1
  5585  004BA0  C1AC  F0BE         	movff	sin@f+1,___flneg@f1+1
  5586  004BA4  C1AD  F0BF         	movff	sin@f+2,___flneg@f1+2
  5587  004BA8  C1AE  F0C0         	movff	sin@f+3,___flneg@f1+3
  5588  004BAC  ECA8  F032         	call	___flneg	;wreg free
  5589  004BB0  C0BD  F0A9         	movff	?___flneg,___fladd@b
  5590  004BB4  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  5591  004BB8  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  5592  004BBC  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  5593  004BC0  0E00               	movlw	0
  5594  004BC2  0100               	movlb	0	; () banked
  5595  004BC4  6FAD               	movwf	___fladd@a& (0+255),b
  5596  004BC6  0E00               	movlw	0
  5597  004BC8  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5598  004BCA  0E00               	movlw	0
  5599  004BCC  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5600  004BCE  0E40               	movlw	64
  5601  004BD0  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5602  004BD2  EC85  F018         	call	___fladd	;wreg free
  5603  004BD6  C0A9  F1AB         	movff	?___fladd,sin@f
  5604  004BDA  C0AA  F1AC         	movff	?___fladd+1,sin@f+1
  5605  004BDE  C0AB  F1AD         	movff	?___fladd+2,sin@f+2
  5606  004BE2  C0AC  F1AE         	movff	?___fladd+3,sin@f+3
  5607  004BE6                     l7773:
  5608  004BE6  C1AB  F090         	movff	sin@f,___flmul@b
  5609  004BEA  C1AC  F091         	movff	sin@f+1,___flmul@b+1
  5610  004BEE  C1AD  F092         	movff	sin@f+2,___flmul@b+2
  5611  004BF2  C1AE  F093         	movff	sin@f+3,___flmul@b+3
  5612  004BF6  C1AB  F094         	movff	sin@f,___flmul@a
  5613  004BFA  C1AC  F095         	movff	sin@f+1,___flmul@a+1
  5614  004BFE  C1AD  F096         	movff	sin@f+2,___flmul@a+2
  5615  004C02  C1AE  F097         	movff	sin@f+3,___flmul@a+3
  5616  004C06  ECD9  F01A         	call	___flmul	;wreg free
  5617  004C0A  C090  F1B7         	movff	?___flmul,sin@x2
  5618  004C0E  C091  F1B8         	movff	?___flmul+1,sin@x2+1
  5619  004C12  C092  F1B9         	movff	?___flmul+2,sin@x2+2
  5620  004C16  C093  F1BA         	movff	?___flmul+3,sin@x2+3
  5621  004C1A  C1B7  F0BD         	movff	sin@x2,eval_poly@x
  5622  004C1E  C1B8  F0BE         	movff	sin@x2+1,eval_poly@x+1
  5623  004C22  C1B9  F0BF         	movff	sin@x2+2,eval_poly@x+2
  5624  004C26  C1BA  F0C0         	movff	sin@x2+3,eval_poly@x+3
  5625  004C2A  0E41               	movlw	low sin@coeff_b
  5626  004C2C  0100               	movlb	0	; () banked
  5627  004C2E  6FC1               	movwf	eval_poly@d& (0+255),b
  5628  004C30  0E0D               	movlw	high sin@coeff_b
  5629  004C32  0100               	movlb	0	; () banked
  5630  004C34  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  5631  004C36  0E00               	movlw	0
  5632  004C38  0100               	movlb	0	; () banked
  5633  004C3A  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  5634  004C3C  0E03               	movlw	3
  5635  004C3E  6FC3               	movwf	eval_poly@n& (0+255),b
  5636  004C40  EC82  F02E         	call	_eval_poly	;wreg free
  5637  004C44  C0BD  F1AF         	movff	?_eval_poly,sin@y
  5638  004C48  C0BE  F1B0         	movff	?_eval_poly+1,sin@y+1
  5639  004C4C  C0BF  F1B1         	movff	?_eval_poly+2,sin@y+2
  5640  004C50  C0C0  F1B2         	movff	?_eval_poly+3,sin@y+3
  5641  004C54  C1AF  F07B         	movff	sin@y,___fldiv@a
  5642  004C58  C1B0  F07C         	movff	sin@y+1,___fldiv@a+1
  5643  004C5C  C1B1  F07D         	movff	sin@y+2,___fldiv@a+2
  5644  004C60  C1B2  F07E         	movff	sin@y+3,___fldiv@a+3
  5645  004C64  0E00               	movlw	0
  5646  004C66  0100               	movlb	0	; () banked
  5647  004C68  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  5648  004C6A  0E04               	movlw	4
  5649  004C6C  6FC3               	movwf	eval_poly@n& (0+255),b
  5650  004C6E  0E2D               	movlw	low sin@coeff_a
  5651  004C70  0100               	movlb	0	; () banked
  5652  004C72  6FC1               	movwf	eval_poly@d& (0+255),b
  5653  004C74  0E0D               	movlw	high sin@coeff_a
  5654  004C76  0100               	movlb	0	; () banked
  5655  004C78  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  5656  004C7A  C1B7  F0BD         	movff	sin@x2,eval_poly@x
  5657  004C7E  C1B8  F0BE         	movff	sin@x2+1,eval_poly@x+1
  5658  004C82  C1B9  F0BF         	movff	sin@x2+2,eval_poly@x+2
  5659  004C86  C1BA  F0C0         	movff	sin@x2+3,eval_poly@x+3
  5660  004C8A  EC82  F02E         	call	_eval_poly	;wreg free
  5661  004C8E  C0BD  F077         	movff	?_eval_poly,___fldiv@b
  5662  004C92  C0BE  F078         	movff	?_eval_poly+1,___fldiv@b+1
  5663  004C96  C0BF  F079         	movff	?_eval_poly+2,___fldiv@b+2
  5664  004C9A  C0C0  F07A         	movff	?_eval_poly+3,___fldiv@b+3
  5665  004C9E  EC59  F021         	call	___fldiv	;wreg free
  5666  004CA2  C077  F1B3         	movff	?___fldiv,_sin$3706
  5667  004CA6  C078  F1B4         	movff	?___fldiv+1,_sin$3706+1
  5668  004CAA  C079  F1B5         	movff	?___fldiv+2,_sin$3706+2
  5669  004CAE  C07A  F1B6         	movff	?___fldiv+3,_sin$3706+3
  5670  004CB2  C1AB  F090         	movff	sin@f,___flmul@b
  5671  004CB6  C1AC  F091         	movff	sin@f+1,___flmul@b+1
  5672  004CBA  C1AD  F092         	movff	sin@f+2,___flmul@b+2
  5673  004CBE  C1AE  F093         	movff	sin@f+3,___flmul@b+3
  5674  004CC2  C1B3  F094         	movff	_sin$3706,___flmul@a
  5675  004CC6  C1B4  F095         	movff	_sin$3706+1,___flmul@a+1
  5676  004CCA  C1B5  F096         	movff	_sin$3706+2,___flmul@a+2
  5677  004CCE  C1B6  F097         	movff	_sin$3706+3,___flmul@a+3
  5678  004CD2  ECD9  F01A         	call	___flmul	;wreg free
  5679  004CD6  C090  F1AB         	movff	?___flmul,sin@f
  5680  004CDA  C091  F1AC         	movff	?___flmul+1,sin@f+1
  5681  004CDE  C092  F1AD         	movff	?___flmul+2,sin@f+2
  5682  004CE2  C093  F1AE         	movff	?___flmul+3,sin@f+3
  5683  004CE6  0101               	movlb	1	; () banked
  5684  004CE8  51BB               	movf	sin@sgn& (0+255),w,b
  5685  004CEA  0101               	movlb	1	; () banked
  5686  004CEC  B4D8               	btfsc	status,2,c
  5687  004CEE  D013               	goto	l1338
  5688                           
  5689                           ; BSR set to: 1
  5690  004CF0  C1AB  F0BD         	movff	sin@f,___flneg@f1
  5691  004CF4  C1AC  F0BE         	movff	sin@f+1,___flneg@f1+1
  5692  004CF8  C1AD  F0BF         	movff	sin@f+2,___flneg@f1+2
  5693  004CFC  C1AE  F0C0         	movff	sin@f+3,___flneg@f1+3
  5694  004D00  ECA8  F032         	call	___flneg	;wreg free
  5695  004D04  C0BD  F1AB         	movff	?___flneg,?_sin
  5696  004D08  C0BE  F1AC         	movff	?___flneg+1,?_sin+1
  5697  004D0C  C0BF  F1AD         	movff	?___flneg+2,?_sin+2
  5698  004D10  C0C0  F1AE         	movff	?___flneg+3,?_sin+3
  5699  004D14  0012               	return	
  5700  004D16                     l1338:
  5701                           
  5702                           ; BSR set to: 1
  5703  004D16  C1AB  F1AB         	movff	sin@f,?_sin
  5704  004D1A  C1AC  F1AC         	movff	sin@f+1,?_sin+1
  5705  004D1E  C1AD  F1AD         	movff	sin@f+2,?_sin+2
  5706  004D22  C1AE  F1AE         	movff	sin@f+3,?_sin+3
  5707  004D26  0012               	return		;funcret
  5708  004D28                     __end_of_sin:
  5709                           	opt stack 0
  5710                           tblptru	equ	0xFF8
  5711                           tblptrh	equ	0xFF7
  5712                           tblptrl	equ	0xFF6
  5713                           tablat	equ	0xFF5
  5714                           postinc0	equ	0xFEE
  5715                           wreg	equ	0xFE8
  5716                           postdec1	equ	0xFE5
  5717                           fsr1l	equ	0xFE1
  5718                           indf2	equ	0xFDF
  5719                           postinc2	equ	0xFDE
  5720                           postdec2	equ	0xFDD
  5721                           fsr2h	equ	0xFDA
  5722                           fsr2l	equ	0xFD9
  5723                           status	equ	0xFD8
  5724                           
  5725 ;; *************** function _floor *****************
  5726 ;; Defined at:
  5727 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\floor.c"
  5728 ;; Parameters:    Size  Location     Type
  5729 ;;  x               4  121[BANK0 ] unsigned char 
  5730 ;; Auto vars:     Size  Location     Type
  5731 ;;  i               4  125[BANK0 ] unsigned char 
  5732 ;;  expon           2  129[BANK0 ] int 
  5733 ;; Return value:  Size  Location     Type
  5734 ;;                  4  121[BANK0 ] int 
  5735 ;; Registers used:
  5736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5737 ;; Tracked objects:
  5738 ;;		On entry : 0/0
  5739 ;;		On exit  : 0/0
  5740 ;;		Unchanged: 0/0
  5741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5742 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5743 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5745 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5746 ;;Total ram usage:       10 bytes
  5747 ;; Hardware stack levels used:    1
  5748 ;; Hardware stack levels required when called:    5
  5749 ;; This function calls:
  5750 ;;		___fladd
  5751 ;;		___flge
  5752 ;;		___fltol
  5753 ;;		___xxtofl
  5754 ;;		_frexp
  5755 ;; This function is called by:
  5756 ;;		_sin
  5757 ;; This function uses a non-reentrant model
  5758 ;;
  5759                           
  5760                           	psect	text11
  5761  005BE0                     __ptext11:
  5762                           	opt stack 0
  5763  005BE0                     _floor:
  5764                           	opt stack 21
  5765                           
  5766                           ;incstack = 0
  5767  005BE0  C0D9  F077         	movff	floor@x,frexp@value
  5768  005BE4  C0DA  F078         	movff	floor@x+1,frexp@value+1
  5769  005BE8  C0DB  F079         	movff	floor@x+2,frexp@value+2
  5770  005BEC  C0DC  F07A         	movff	floor@x+3,frexp@value+3
  5771  005BF0  0EE1               	movlw	low floor@expon
  5772  005BF2  0100               	movlb	0	; () banked
  5773  005BF4  6F7B               	movwf	frexp@eptr& (0+255),b
  5774  005BF6  0E00               	movlw	high floor@expon
  5775  005BF8  0100               	movlb	0	; () banked
  5776  005BFA  6F7C               	movwf	(frexp@eptr+1)& (0+255),b
  5777  005BFC  EC57  F031         	call	_frexp	;wreg free
  5778  005C00  0100               	movlb	0	; () banked
  5779  005C02  AFE2               	btfss	(floor@expon+1)& (0+255),7,b
  5780  005C04  D017               	goto	l7363
  5781                           
  5782                           ; BSR set to: 0
  5783  005C06  0100               	movlb	0	; () banked
  5784  005C08  AFDC               	btfss	(floor@x+3)& (0+255),7,b
  5785  005C0A  D00A               	goto	l7359
  5786                           
  5787                           ; BSR set to: 0
  5788  005C0C  0E00               	movlw	0
  5789  005C0E  0100               	movlb	0	; () banked
  5790  005C10  6FD9               	movwf	?_floor& (0+255),b
  5791  005C12  0E00               	movlw	0
  5792  005C14  6FDA               	movwf	(?_floor+1)& (0+255),b
  5793  005C16  0E80               	movlw	128
  5794  005C18  6FDB               	movwf	(?_floor+2)& (0+255),b
  5795  005C1A  0EBF               	movlw	191
  5796  005C1C  6FDC               	movwf	(?_floor+3)& (0+255),b
  5797                           
  5798                           ; BSR set to: 0
  5799  005C1E  0012               	return	
  5800  005C20                     l7359:
  5801                           
  5802                           ; BSR set to: 0
  5803  005C20  0E00               	movlw	0
  5804  005C22  0100               	movlb	0	; () banked
  5805  005C24  6FD9               	movwf	?_floor& (0+255),b
  5806  005C26  0E00               	movlw	0
  5807  005C28  6FDA               	movwf	(?_floor+1)& (0+255),b
  5808  005C2A  0E00               	movlw	0
  5809  005C2C  6FDB               	movwf	(?_floor+2)& (0+255),b
  5810  005C2E  0E00               	movlw	0
  5811  005C30  6FDC               	movwf	(?_floor+3)& (0+255),b
  5812                           
  5813                           ; BSR set to: 0
  5814  005C32  0012               	return	
  5815  005C34                     l7363:
  5816                           
  5817                           ; BSR set to: 0
  5818  005C34  0100               	movlb	0	; () banked
  5819  005C36  51E2               	movf	(floor@expon+1)& (0+255),w,b
  5820  005C38  E105               	bnz	u9750
  5821  005C3A  0E1D               	movlw	29
  5822  005C3C  0100               	movlb	0	; () banked
  5823  005C3E  5DE1               	subwf	floor@expon& (0+255),w,b
  5824  005C40  A0D8               	btfss	status,0,c
  5825  005C42  D009               	goto	l7367
  5826  005C44                     u9750:
  5827                           
  5828                           ; BSR set to: 0
  5829  005C44  C0D9  F0D9         	movff	floor@x,?_floor
  5830  005C48  C0DA  F0DA         	movff	floor@x+1,?_floor+1
  5831  005C4C  C0DB  F0DB         	movff	floor@x+2,?_floor+2
  5832  005C50  C0DC  F0DC         	movff	floor@x+3,?_floor+3
  5833  005C54  0012               	return	
  5834  005C56                     l7367:
  5835                           
  5836                           ; BSR set to: 0
  5837  005C56  C0D9  F0C1         	movff	floor@x,___fltol@f1
  5838  005C5A  C0DA  F0C2         	movff	floor@x+1,___fltol@f1+1
  5839  005C5E  C0DB  F0C3         	movff	floor@x+2,___fltol@f1+2
  5840  005C62  C0DC  F0C4         	movff	floor@x+3,___fltol@f1+3
  5841  005C66  EC0E  F02F         	call	___fltol	;wreg free
  5842  005C6A  C0C1  F0CB         	movff	?___fltol,___xxtofl@val
  5843  005C6E  C0C2  F0CC         	movff	?___fltol+1,___xxtofl@val+1
  5844  005C72  C0C3  F0CD         	movff	?___fltol+2,___xxtofl@val+2
  5845  005C76  C0C4  F0CE         	movff	?___fltol+3,___xxtofl@val+3
  5846  005C7A  0E01               	movlw	1
  5847  005C7C  EC7B  F02A         	call	___xxtofl
  5848  005C80  C0CB  F0DD         	movff	?___xxtofl,floor@i
  5849  005C84  C0CC  F0DE         	movff	?___xxtofl+1,floor@i+1
  5850  005C88  C0CD  F0DF         	movff	?___xxtofl+2,floor@i+2
  5851  005C8C  C0CE  F0E0         	movff	?___xxtofl+3,floor@i+3
  5852  005C90  C0D9  F0C5         	movff	floor@x,___flge@ff1
  5853  005C94  C0DA  F0C6         	movff	floor@x+1,___flge@ff1+1
  5854  005C98  C0DB  F0C7         	movff	floor@x+2,___flge@ff1+2
  5855  005C9C  C0DC  F0C8         	movff	floor@x+3,___flge@ff1+3
  5856  005CA0  C0DD  F0C9         	movff	floor@i,___flge@ff2
  5857  005CA4  C0DE  F0CA         	movff	floor@i+1,___flge@ff2+1
  5858  005CA8  C0DF  F0CB         	movff	floor@i+2,___flge@ff2+2
  5859  005CAC  C0E0  F0CC         	movff	floor@i+3,___flge@ff2+3
  5860  005CB0  EC28  F02D         	call	___flge	;wreg free
  5861  005CB4  0100               	movlb	0	; () banked
  5862  005CB6  B0D8               	btfsc	status,0,c
  5863  005CB8  D01C               	goto	l1507
  5864                           
  5865                           ; BSR set to: 0
  5866  005CBA  C0DD  F0A9         	movff	floor@i,___fladd@b
  5867  005CBE  C0DE  F0AA         	movff	floor@i+1,___fladd@b+1
  5868  005CC2  C0DF  F0AB         	movff	floor@i+2,___fladd@b+2
  5869  005CC6  C0E0  F0AC         	movff	floor@i+3,___fladd@b+3
  5870  005CCA  0E00               	movlw	0
  5871  005CCC  0100               	movlb	0	; () banked
  5872  005CCE  6FAD               	movwf	___fladd@a& (0+255),b
  5873  005CD0  0E00               	movlw	0
  5874  005CD2  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5875  005CD4  0E80               	movlw	128
  5876  005CD6  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5877  005CD8  0EBF               	movlw	191
  5878  005CDA  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5879  005CDC  EC85  F018         	call	___fladd	;wreg free
  5880  005CE0  C0A9  F0D9         	movff	?___fladd,?_floor
  5881  005CE4  C0AA  F0DA         	movff	?___fladd+1,?_floor+1
  5882  005CE8  C0AB  F0DB         	movff	?___fladd+2,?_floor+2
  5883  005CEC  C0AC  F0DC         	movff	?___fladd+3,?_floor+3
  5884  005CF0  0012               	return	
  5885  005CF2                     l1507:
  5886                           
  5887                           ; BSR set to: 0
  5888  005CF2  C0DD  F0D9         	movff	floor@i,?_floor
  5889  005CF6  C0DE  F0DA         	movff	floor@i+1,?_floor+1
  5890  005CFA  C0DF  F0DB         	movff	floor@i+2,?_floor+2
  5891  005CFE  C0E0  F0DC         	movff	floor@i+3,?_floor+3
  5892  005D02  0012               	return		;funcret
  5893  005D04                     __end_of_floor:
  5894                           	opt stack 0
  5895                           tblptru	equ	0xFF8
  5896                           tblptrh	equ	0xFF7
  5897                           tblptrl	equ	0xFF6
  5898                           tablat	equ	0xFF5
  5899                           postinc0	equ	0xFEE
  5900                           wreg	equ	0xFE8
  5901                           postdec1	equ	0xFE5
  5902                           fsr1l	equ	0xFE1
  5903                           indf2	equ	0xFDF
  5904                           postinc2	equ	0xFDE
  5905                           postdec2	equ	0xFDD
  5906                           fsr2h	equ	0xFDA
  5907                           fsr2l	equ	0xFD9
  5908                           status	equ	0xFD8
  5909                           
  5910 ;; *************** function _frexp *****************
  5911 ;; Defined at:
  5912 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\frexp.c"
  5913 ;; Parameters:    Size  Location     Type
  5914 ;;  value           4   23[BANK0 ] int 
  5915 ;;  eptr            2   27[BANK0 ] PTR int 
  5916 ;;		 -> floor@expon(2), 
  5917 ;; Auto vars:     Size  Location     Type
  5918 ;;		None
  5919 ;; Return value:  Size  Location     Type
  5920 ;;                  4   23[BANK0 ] PTR int 
  5921 ;; Registers used:
  5922 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5923 ;; Tracked objects:
  5924 ;;		On entry : 0/0
  5925 ;;		On exit  : 0/0
  5926 ;;		Unchanged: 0/0
  5927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5928 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5930 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5931 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5932 ;;Total ram usage:        8 bytes
  5933 ;; Hardware stack levels used:    1
  5934 ;; Hardware stack levels required when called:    4
  5935 ;; This function calls:
  5936 ;;		Nothing
  5937 ;; This function is called by:
  5938 ;;		_floor
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941                           
  5942                           	psect	text12
  5943  0062AE                     __ptext12:
  5944                           	opt stack 0
  5945  0062AE                     _frexp:
  5946                           	opt stack 21
  5947                           
  5948                           ;incstack = 0
  5949  0062AE  0100               	movlb	0	; () banked
  5950  0062B0  5177               	movf	frexp@value& (0+255),w,b
  5951  0062B2  0100               	movlb	0	; () banked
  5952  0062B4  1178               	iorwf	(frexp@value+1)& (0+255),w,b
  5953  0062B6  0100               	movlb	0	; () banked
  5954  0062B8  1179               	iorwf	(frexp@value+2)& (0+255),w,b
  5955  0062BA  0100               	movlb	0	; () banked
  5956  0062BC  117A               	iorwf	(frexp@value+3)& (0+255),w,b
  5957  0062BE  A4D8               	btfss	status,2,c
  5958  0062C0  D009               	goto	l7185
  5959                           
  5960                           ; BSR set to: 0
  5961  0062C2  C07B  FFD9         	movff	frexp@eptr,fsr2l
  5962  0062C6  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  5963  0062CA  0E00               	movlw	0
  5964  0062CC  6EDE               	movwf	postinc2,c
  5965  0062CE  0E00               	movlw	0
  5966  0062D0  6EDD               	movwf	postdec2,c
  5967                           
  5968                           ; BSR set to: 0
  5969                           ;	Return value of _frexp is never used
  5970  0062D2  0012               	return	
  5971  0062D4                     l7185:
  5972                           
  5973                           ; BSR set to: 0
  5974  0062D4  0100               	movlb	0	; () banked
  5975  0062D6  517A               	movf	(frexp@value+3)& (0+255),w,b
  5976  0062D8  0B7F               	andlw	127
  5977  0062DA  0100               	movlb	0	; () banked
  5978  0062DC  6F7D               	movwf	??_frexp& (0+255),b
  5979  0062DE  6B7E               	clrf	(??_frexp+1)& (0+255),b
  5980  0062E0  90D8               	bcf	status,0,c
  5981  0062E2  0100               	movlb	0	; () banked
  5982  0062E4  377D               	rlcf	??_frexp& (0+255),f,b
  5983  0062E6  377E               	rlcf	(??_frexp+1)& (0+255),f,b
  5984  0062E8  C07B  FFD9         	movff	frexp@eptr,fsr2l
  5985  0062EC  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  5986  0062F0  C07D  FFDE         	movff	??_frexp,postinc2
  5987  0062F4  C07E  FFDD         	movff	??_frexp+1,postdec2
  5988  0062F8  0100               	movlb	0	; () banked
  5989  0062FA  AF79               	btfss	(frexp@value+2)& (0+255),7,b
  5990  0062FC  D004               	goto	u9470
  5991  0062FE  0100               	movlb	0	; () banked
  5992  006300  6B7D               	clrf	??_frexp& (0+255),b
  5993  006302  2B7D               	incf	??_frexp& (0+255),f,b
  5994  006304  D002               	goto	u9478
  5995  006306                     u9470:
  5996  006306  0100               	movlb	0	; () banked
  5997  006308  6B7D               	clrf	??_frexp& (0+255),b
  5998  00630A                     u9478:
  5999  00630A  0100               	movlb	0	; () banked
  6000  00630C  517D               	movf	??_frexp& (0+255),w,b
  6001  00630E  C07B  FFD9         	movff	frexp@eptr,fsr2l
  6002  006312  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  6003  006316  12DE               	iorwf	postinc2,f,c
  6004  006318  0E00               	movlw	0
  6005  00631A  12DD               	iorwf	postdec2,f,c
  6006                           
  6007                           ; BSR set to: 0
  6008  00631C  C07B  FFD9         	movff	frexp@eptr,fsr2l
  6009  006320  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  6010  006324  0E82               	movlw	130
  6011  006326  26DE               	addwf	postinc2,f,c
  6012  006328  0EFF               	movlw	255
  6013  00632A  22DD               	addwfc	postdec2,f,c
  6014                           
  6015                           ; BSR set to: 0
  6016  00632C  0100               	movlb	0	; () banked
  6017  00632E  817A               	bsf	(frexp@value+3)& (0+255),0,b
  6018  006330  837A               	bsf	(frexp@value+3)& (0+255),1,b
  6019  006332  857A               	bsf	(frexp@value+3)& (0+255),2,b
  6020  006334  877A               	bsf	(frexp@value+3)& (0+255),3,b
  6021  006336  897A               	bsf	(frexp@value+3)& (0+255),4,b
  6022  006338  8B7A               	bsf	(frexp@value+3)& (0+255),5,b
  6023  00633A  9D7A               	bcf	(frexp@value+3)& (0+255),6,b
  6024                           
  6025                           ; BSR set to: 0
  6026  00633C  0100               	movlb	0	; () banked
  6027  00633E  9F79               	bcf	(frexp@value+2)& (0+255),7,b
  6028  006340  0012               	return	
  6029  006342                     __end_of_frexp:
  6030                           	opt stack 0
  6031                           tblptru	equ	0xFF8
  6032                           tblptrh	equ	0xFF7
  6033                           tblptrl	equ	0xFF6
  6034                           tablat	equ	0xFF5
  6035                           postinc0	equ	0xFEE
  6036                           wreg	equ	0xFE8
  6037                           postdec1	equ	0xFE5
  6038                           fsr1l	equ	0xFE1
  6039                           indf2	equ	0xFDF
  6040                           postinc2	equ	0xFDE
  6041                           postdec2	equ	0xFDD
  6042                           fsr2h	equ	0xFDA
  6043                           fsr2l	equ	0xFD9
  6044                           status	equ	0xFD8
  6045                           
  6046 ;; *************** function ___xxtofl *****************
  6047 ;; Defined at:
  6048 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\xxtofl.c"
  6049 ;; Parameters:    Size  Location     Type
  6050 ;;  sign            1    wreg     unsigned char 
  6051 ;;  val             4  107[BANK0 ] long 
  6052 ;; Auto vars:     Size  Location     Type
  6053 ;;  sign            1  115[BANK0 ] unsigned char 
  6054 ;;  arg             4  117[BANK0 ] unsigned long 
  6055 ;;  exp             1  116[BANK0 ] unsigned char 
  6056 ;; Return value:  Size  Location     Type
  6057 ;;                  4  107[BANK0 ] unsigned char 
  6058 ;; Registers used:
  6059 ;;		wreg, status,2, status,0
  6060 ;; Tracked objects:
  6061 ;;		On entry : 0/0
  6062 ;;		On exit  : 0/0
  6063 ;;		Unchanged: 0/0
  6064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6065 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6066 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6067 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6068 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6069 ;;Total ram usage:       14 bytes
  6070 ;; Hardware stack levels used:    1
  6071 ;; Hardware stack levels required when called:    4
  6072 ;; This function calls:
  6073 ;;		Nothing
  6074 ;; This function is called by:
  6075 ;;		_park_search
  6076 ;;		_park_routine
  6077 ;;		_parallelo
  6078 ;;		_floor
  6079 ;; This function uses a non-reentrant model
  6080 ;;
  6081                           
  6082                           	psect	text13
  6083  0054F6                     __ptext13:
  6084                           	opt stack 0
  6085  0054F6                     ___xxtofl:
  6086                           	opt stack 24
  6087                           
  6088                           ; BSR set to: 0
  6089                           ;incstack = 0
  6090                           ;___xxtofl@sign stored from wreg
  6091  0054F6  0100               	movlb	0	; () banked
  6092  0054F8  6FD3               	movwf	___xxtofl@sign& (0+255),b
  6093  0054FA  0100               	movlb	0	; () banked
  6094  0054FC  51D3               	movf	___xxtofl@sign& (0+255),w,b
  6095  0054FE  0100               	movlb	0	; () banked
  6096  005500  B4D8               	btfsc	status,2,c
  6097  005502  D01E               	goto	l1482
  6098                           
  6099                           ; BSR set to: 0
  6100  005504  0100               	movlb	0	; () banked
  6101  005506  AFCE               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6102  005508  D01B               	goto	l1482
  6103                           
  6104                           ; BSR set to: 0
  6105  00550A  C0CB  F0CF         	movff	___xxtofl@val,??___xxtofl
  6106  00550E  C0CC  F0D0         	movff	___xxtofl@val+1,??___xxtofl+1
  6107  005512  C0CD  F0D1         	movff	___xxtofl@val+2,??___xxtofl+2
  6108  005516  C0CE  F0D2         	movff	___xxtofl@val+3,??___xxtofl+3
  6109  00551A  0100               	movlb	0	; () banked
  6110  00551C  1FCF               	comf	??___xxtofl& (0+255),f,b
  6111  00551E  1FD0               	comf	(??___xxtofl+1)& (0+255),f,b
  6112  005520  1FD1               	comf	(??___xxtofl+2)& (0+255),f,b
  6113  005522  1FD2               	comf	(??___xxtofl+3)& (0+255),f,b
  6114  005524  2BCF               	incf	??___xxtofl& (0+255),f,b
  6115  005526  0E00               	movlw	0
  6116  005528  23D0               	addwfc	(??___xxtofl+1)& (0+255),f,b
  6117  00552A  23D1               	addwfc	(??___xxtofl+2)& (0+255),f,b
  6118  00552C  23D2               	addwfc	(??___xxtofl+3)& (0+255),f,b
  6119  00552E  C0CF  F0D5         	movff	??___xxtofl,___xxtofl@arg
  6120  005532  C0D0  F0D6         	movff	??___xxtofl+1,___xxtofl@arg+1
  6121  005536  C0D1  F0D7         	movff	??___xxtofl+2,___xxtofl@arg+2
  6122  00553A  C0D2  F0D8         	movff	??___xxtofl+3,___xxtofl@arg+3
  6123  00553E  D008               	goto	l7143
  6124  005540                     l1482:
  6125                           
  6126                           ; BSR set to: 0
  6127  005540  C0CB  F0D5         	movff	___xxtofl@val,___xxtofl@arg
  6128  005544  C0CC  F0D6         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6129  005548  C0CD  F0D7         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6130  00554C  C0CE  F0D8         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6131  005550                     l7143:
  6132                           
  6133                           ; BSR set to: 0
  6134  005550  0100               	movlb	0	; () banked
  6135  005552  51CB               	movf	___xxtofl@val& (0+255),w,b
  6136  005554  0100               	movlb	0	; () banked
  6137  005556  11CC               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  6138  005558  0100               	movlb	0	; () banked
  6139  00555A  11CD               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  6140  00555C  0100               	movlb	0	; () banked
  6141  00555E  11CE               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  6142  005560  A4D8               	btfss	status,2,c
  6143  005562  D00A               	goto	l7149
  6144                           
  6145                           ; BSR set to: 0
  6146  005564  0E00               	movlw	0
  6147  005566  0100               	movlb	0	; () banked
  6148  005568  6FCB               	movwf	?___xxtofl& (0+255),b
  6149  00556A  0E00               	movlw	0
  6150  00556C  6FCC               	movwf	(?___xxtofl+1)& (0+255),b
  6151  00556E  0E00               	movlw	0
  6152  005570  6FCD               	movwf	(?___xxtofl+2)& (0+255),b
  6153  005572  0E00               	movlw	0
  6154  005574  6FCE               	movwf	(?___xxtofl+3)& (0+255),b
  6155                           
  6156                           ; BSR set to: 0
  6157  005576  0012               	return	
  6158  005578                     l7149:
  6159                           
  6160                           ; BSR set to: 0
  6161  005578  0E96               	movlw	150
  6162  00557A  0100               	movlb	0	; () banked
  6163  00557C  6FD4               	movwf	___xxtofl@exp& (0+255),b
  6164  00557E  D008               	goto	l7153
  6165  005580                     l7151:
  6166                           
  6167                           ; BSR set to: 0
  6168  005580  0100               	movlb	0	; () banked
  6169  005582  2BD4               	incf	___xxtofl@exp& (0+255),f,b
  6170  005584  0100               	movlb	0	; () banked
  6171  005586  90D8               	bcf	status,0,c
  6172  005588  33D8               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6173  00558A  33D7               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6174  00558C  33D6               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6175  00558E  33D5               	rrcf	___xxtofl@arg& (0+255),f,b
  6176  005590                     l7153:
  6177                           
  6178                           ; BSR set to: 0
  6179  005590  0E00               	movlw	0
  6180  005592  0100               	movlb	0	; () banked
  6181  005594  15D5               	andwf	___xxtofl@arg& (0+255),w,b
  6182  005596  0100               	movlb	0	; () banked
  6183  005598  6FCF               	movwf	??___xxtofl& (0+255),b
  6184  00559A  0E00               	movlw	0
  6185  00559C  0100               	movlb	0	; () banked
  6186  00559E  15D6               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6187  0055A0  0100               	movlb	0	; () banked
  6188  0055A2  6FD0               	movwf	(??___xxtofl+1)& (0+255),b
  6189  0055A4  0E00               	movlw	0
  6190  0055A6  0100               	movlb	0	; () banked
  6191  0055A8  15D7               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6192  0055AA  0100               	movlb	0	; () banked
  6193  0055AC  6FD1               	movwf	(??___xxtofl+2)& (0+255),b
  6194  0055AE  0EFE               	movlw	254
  6195  0055B0  0100               	movlb	0	; () banked
  6196  0055B2  15D8               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6197  0055B4  0100               	movlb	0	; () banked
  6198  0055B6  6FD2               	movwf	(??___xxtofl+3)& (0+255),b
  6199  0055B8  0100               	movlb	0	; () banked
  6200  0055BA  51CF               	movf	??___xxtofl& (0+255),w,b
  6201  0055BC  0100               	movlb	0	; () banked
  6202  0055BE  11D0               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6203  0055C0  0100               	movlb	0	; () banked
  6204  0055C2  11D1               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6205  0055C4  0100               	movlb	0	; () banked
  6206  0055C6  11D2               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6207  0055C8  B4D8               	btfsc	status,2,c
  6208  0055CA  D010               	goto	l1489
  6209  0055CC  D7D9               	goto	l7151
  6210  0055CE                     l7155:
  6211                           
  6212                           ; BSR set to: 0
  6213  0055CE  0100               	movlb	0	; () banked
  6214  0055D0  2BD4               	incf	___xxtofl@exp& (0+255),f,b
  6215                           
  6216                           ; BSR set to: 0
  6217  0055D2  0E01               	movlw	1
  6218  0055D4  0100               	movlb	0	; () banked
  6219  0055D6  27D5               	addwf	___xxtofl@arg& (0+255),f,b
  6220  0055D8  0E00               	movlw	0
  6221  0055DA  23D6               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  6222  0055DC  23D7               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  6223  0055DE  23D8               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  6224                           
  6225                           ; BSR set to: 0
  6226  0055E0  0100               	movlb	0	; () banked
  6227  0055E2  90D8               	bcf	status,0,c
  6228  0055E4  33D8               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6229  0055E6  33D7               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6230  0055E8  33D6               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6231  0055EA  33D5               	rrcf	___xxtofl@arg& (0+255),f,b
  6232  0055EC                     l1489:
  6233                           
  6234                           ; BSR set to: 0
  6235  0055EC  0E00               	movlw	0
  6236  0055EE  0100               	movlb	0	; () banked
  6237  0055F0  15D5               	andwf	___xxtofl@arg& (0+255),w,b
  6238  0055F2  0100               	movlb	0	; () banked
  6239  0055F4  6FCF               	movwf	??___xxtofl& (0+255),b
  6240  0055F6  0E00               	movlw	0
  6241  0055F8  0100               	movlb	0	; () banked
  6242  0055FA  15D6               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6243  0055FC  0100               	movlb	0	; () banked
  6244  0055FE  6FD0               	movwf	(??___xxtofl+1)& (0+255),b
  6245  005600  0E00               	movlw	0
  6246  005602  0100               	movlb	0	; () banked
  6247  005604  15D7               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6248  005606  0100               	movlb	0	; () banked
  6249  005608  6FD1               	movwf	(??___xxtofl+2)& (0+255),b
  6250  00560A  0EFF               	movlw	255
  6251  00560C  0100               	movlb	0	; () banked
  6252  00560E  15D8               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6253  005610  0100               	movlb	0	; () banked
  6254  005612  6FD2               	movwf	(??___xxtofl+3)& (0+255),b
  6255  005614  0100               	movlb	0	; () banked
  6256  005616  51CF               	movf	??___xxtofl& (0+255),w,b
  6257  005618  0100               	movlb	0	; () banked
  6258  00561A  11D0               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6259  00561C  0100               	movlb	0	; () banked
  6260  00561E  11D1               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6261  005620  0100               	movlb	0	; () banked
  6262  005622  11D2               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6263  005624  B4D8               	btfsc	status,2,c
  6264  005626  D009               	goto	l7163
  6265  005628  D7D2               	goto	l7155
  6266  00562A                     l7161:
  6267                           
  6268                           ; BSR set to: 0
  6269  00562A  0100               	movlb	0	; () banked
  6270  00562C  07D4               	decf	___xxtofl@exp& (0+255),f,b
  6271  00562E  0100               	movlb	0	; () banked
  6272  005630  90D8               	bcf	status,0,c
  6273  005632  37D5               	rlcf	___xxtofl@arg& (0+255),f,b
  6274  005634  37D6               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  6275  005636  37D7               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  6276  005638  37D8               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  6277  00563A                     l7163:
  6278                           
  6279                           ; BSR set to: 0
  6280  00563A  0100               	movlb	0	; () banked
  6281  00563C  BFD7               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  6282  00563E  D004               	goto	l1496
  6283                           
  6284                           ; BSR set to: 0
  6285  005640  0E02               	movlw	2
  6286  005642  0100               	movlb	0	; () banked
  6287  005644  61D4               	cpfslt	___xxtofl@exp& (0+255),b
  6288  005646  D7F1               	goto	l7161
  6289  005648                     l1496:
  6290                           
  6291                           ; BSR set to: 0
  6292  005648  0100               	movlb	0	; () banked
  6293  00564A  B1D4               	btfsc	___xxtofl@exp& (0+255),0,b
  6294  00564C  D009               	goto	l1497
  6295                           
  6296                           ; BSR set to: 0
  6297  00564E  0EFF               	movlw	255
  6298  005650  0100               	movlb	0	; () banked
  6299  005652  17D5               	andwf	___xxtofl@arg& (0+255),f,b
  6300  005654  0EFF               	movlw	255
  6301  005656  17D6               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  6302  005658  0E7F               	movlw	127
  6303  00565A  17D7               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  6304  00565C  0EFF               	movlw	255
  6305  00565E  17D8               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  6306  005660                     l1497:
  6307                           
  6308                           ; BSR set to: 0
  6309  005660  0100               	movlb	0	; () banked
  6310  005662  90D8               	bcf	status,0,c
  6311  005664  33D4               	rrcf	___xxtofl@exp& (0+255),f,b
  6312  005666  C0D4  F0CF         	movff	___xxtofl@exp,??___xxtofl
  6313  00566A  0100               	movlb	0	; () banked
  6314  00566C  6BD0               	clrf	(??___xxtofl+1)& (0+255),b
  6315  00566E  6BD1               	clrf	(??___xxtofl+2)& (0+255),b
  6316  005670  6BD2               	clrf	(??___xxtofl+3)& (0+255),b
  6317  005672  C0CF  F0D2         	movff	??___xxtofl,??___xxtofl+3
  6318  005676  0100               	movlb	0	; () banked
  6319  005678  6BD1               	clrf	(??___xxtofl+2)& (0+255),b
  6320  00567A  6BD0               	clrf	(??___xxtofl+1)& (0+255),b
  6321  00567C  6BCF               	clrf	??___xxtofl& (0+255),b
  6322  00567E  0100               	movlb	0	; () banked
  6323  005680  51CF               	movf	??___xxtofl& (0+255),w,b
  6324  005682  0100               	movlb	0	; () banked
  6325  005684  13D5               	iorwf	___xxtofl@arg& (0+255),f,b
  6326  005686  0100               	movlb	0	; () banked
  6327  005688  51D0               	movf	(??___xxtofl+1)& (0+255),w,b
  6328  00568A  0100               	movlb	0	; () banked
  6329  00568C  13D6               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  6330  00568E  0100               	movlb	0	; () banked
  6331  005690  51D1               	movf	(??___xxtofl+2)& (0+255),w,b
  6332  005692  0100               	movlb	0	; () banked
  6333  005694  13D7               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  6334  005696  0100               	movlb	0	; () banked
  6335  005698  51D2               	movf	(??___xxtofl+3)& (0+255),w,b
  6336  00569A  0100               	movlb	0	; () banked
  6337  00569C  13D8               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  6338                           
  6339                           ; BSR set to: 0
  6340  00569E  0100               	movlb	0	; () banked
  6341  0056A0  51D3               	movf	___xxtofl@sign& (0+255),w,b
  6342  0056A2  0100               	movlb	0	; () banked
  6343  0056A4  B4D8               	btfsc	status,2,c
  6344  0056A6  D005               	goto	l7175
  6345                           
  6346                           ; BSR set to: 0
  6347  0056A8  0100               	movlb	0	; () banked
  6348  0056AA  AFCE               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6349  0056AC  D002               	goto	l7175
  6350                           
  6351                           ; BSR set to: 0
  6352  0056AE  0100               	movlb	0	; () banked
  6353  0056B0  8FD8               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  6354  0056B2                     l7175:
  6355                           
  6356                           ; BSR set to: 0
  6357  0056B2  C0D5  F0CB         	movff	___xxtofl@arg,?___xxtofl
  6358  0056B6  C0D6  F0CC         	movff	___xxtofl@arg+1,?___xxtofl+1
  6359  0056BA  C0D7  F0CD         	movff	___xxtofl@arg+2,?___xxtofl+2
  6360  0056BE  C0D8  F0CE         	movff	___xxtofl@arg+3,?___xxtofl+3
  6361  0056C2  0012               	return	
  6362  0056C4                     __end_of___xxtofl:
  6363                           	opt stack 0
  6364                           tblptru	equ	0xFF8
  6365                           tblptrh	equ	0xFF7
  6366                           tblptrl	equ	0xFF6
  6367                           tablat	equ	0xFF5
  6368                           postinc0	equ	0xFEE
  6369                           wreg	equ	0xFE8
  6370                           postdec1	equ	0xFE5
  6371                           fsr1l	equ	0xFE1
  6372                           indf2	equ	0xFDF
  6373                           postinc2	equ	0xFDE
  6374                           postdec2	equ	0xFDD
  6375                           fsr2h	equ	0xFDA
  6376                           fsr2l	equ	0xFD9
  6377                           status	equ	0xFD8
  6378                           
  6379 ;; *************** function ___fltol *****************
  6380 ;; Defined at:
  6381 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fltol.c"
  6382 ;; Parameters:    Size  Location     Type
  6383 ;;  f1              4   97[BANK0 ] unsigned char 
  6384 ;; Auto vars:     Size  Location     Type
  6385 ;;  exp1            1  106[BANK0 ] unsigned char 
  6386 ;;  sign1           1  105[BANK0 ] unsigned char 
  6387 ;; Return value:  Size  Location     Type
  6388 ;;                  4   97[BANK0 ] long 
  6389 ;; Registers used:
  6390 ;;		wreg, status,2, status,0
  6391 ;; Tracked objects:
  6392 ;;		On entry : 0/0
  6393 ;;		On exit  : 0/0
  6394 ;;		Unchanged: 0/0
  6395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6396 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6397 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6398 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6399 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6400 ;;Total ram usage:       10 bytes
  6401 ;; Hardware stack levels used:    1
  6402 ;; Hardware stack levels required when called:    4
  6403 ;; This function calls:
  6404 ;;		Nothing
  6405 ;; This function is called by:
  6406 ;;		_park_routine
  6407 ;;		_parallelo
  6408 ;;		_floor
  6409 ;; This function uses a non-reentrant model
  6410 ;;
  6411                           
  6412                           	psect	text14
  6413  005E1C                     __ptext14:
  6414                           	opt stack 0
  6415  005E1C                     ___fltol:
  6416                           	opt stack 24
  6417                           
  6418                           ; BSR set to: 0
  6419                           ;incstack = 0
  6420  005E1C  0100               	movlb	0	; () banked
  6421  005E1E  35C3               	rlcf	(___fltol@f1+2)& (0+255),w,b
  6422  005E20  35C4               	rlcf	(___fltol@f1+3)& (0+255),w,b
  6423  005E22  0100               	movlb	0	; () banked
  6424  005E24  6FCA               	movwf	___fltol@exp1& (0+255),b
  6425  005E26  0100               	movlb	0	; () banked
  6426  005E28  51CA               	movf	___fltol@exp1& (0+255),w,b
  6427  005E2A  A4D8               	btfss	status,2,c
  6428  005E2C  D00A               	goto	l7099
  6429                           
  6430                           ; BSR set to: 0
  6431  005E2E  0E00               	movlw	0
  6432  005E30  0100               	movlb	0	; () banked
  6433  005E32  6FC1               	movwf	?___fltol& (0+255),b
  6434  005E34  0E00               	movlw	0
  6435  005E36  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6436  005E38  0E00               	movlw	0
  6437  005E3A  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6438  005E3C  0E00               	movlw	0
  6439  005E3E  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6440                           
  6441                           ; BSR set to: 0
  6442  005E40  0012               	return	
  6443  005E42                     l7099:
  6444                           
  6445                           ; BSR set to: 0
  6446  005E42  C0C1  F0C5         	movff	___fltol@f1,??___fltol
  6447  005E46  C0C2  F0C6         	movff	___fltol@f1+1,??___fltol+1
  6448  005E4A  C0C3  F0C7         	movff	___fltol@f1+2,??___fltol+2
  6449  005E4E  C0C4  F0C8         	movff	___fltol@f1+3,??___fltol+3
  6450  005E52  0E20               	movlw	32
  6451  005E54  D006               	goto	u9300
  6452  005E56                     u9305:
  6453  005E56  0100               	movlb	0	; () banked
  6454  005E58  90D8               	bcf	status,0,c
  6455  005E5A  33C8               	rrcf	(??___fltol+3)& (0+255),f,b
  6456  005E5C  33C7               	rrcf	(??___fltol+2)& (0+255),f,b
  6457  005E5E  33C6               	rrcf	(??___fltol+1)& (0+255),f,b
  6458  005E60  33C5               	rrcf	??___fltol& (0+255),f,b
  6459  005E62                     u9300:
  6460  005E62  2EE8               	decfsz	wreg,f,c
  6461  005E64  D7F8               	goto	u9305
  6462  005E66  0100               	movlb	0	; () banked
  6463  005E68  51C5               	movf	??___fltol& (0+255),w,b
  6464  005E6A  0100               	movlb	0	; () banked
  6465  005E6C  6FC9               	movwf	___fltol@sign1& (0+255),b
  6466                           
  6467                           ; BSR set to: 0
  6468  005E6E  0100               	movlb	0	; () banked
  6469  005E70  8FC3               	bsf	(___fltol@f1+2)& (0+255),7,b
  6470                           
  6471                           ; BSR set to: 0
  6472  005E72  0EFF               	movlw	255
  6473  005E74  0100               	movlb	0	; () banked
  6474  005E76  17C1               	andwf	___fltol@f1& (0+255),f,b
  6475  005E78  0EFF               	movlw	255
  6476  005E7A  17C2               	andwf	(___fltol@f1+1)& (0+255),f,b
  6477  005E7C  0EFF               	movlw	255
  6478  005E7E  17C3               	andwf	(___fltol@f1+2)& (0+255),f,b
  6479  005E80  0E00               	movlw	0
  6480  005E82  17C4               	andwf	(___fltol@f1+3)& (0+255),f,b
  6481                           
  6482                           ; BSR set to: 0
  6483  005E84  0E96               	movlw	150
  6484  005E86  0100               	movlb	0	; () banked
  6485  005E88  5FCA               	subwf	___fltol@exp1& (0+255),f,b
  6486                           
  6487                           ; BSR set to: 0
  6488  005E8A  0100               	movlb	0	; () banked
  6489  005E8C  AFCA               	btfss	___fltol@exp1& (0+255),7,b
  6490  005E8E  D01A               	goto	l7119
  6491                           
  6492                           ; BSR set to: 0
  6493  005E90  0100               	movlb	0	; () banked
  6494  005E92  51CA               	movf	___fltol@exp1& (0+255),w,b
  6495  005E94  0A80               	xorlw	128
  6496  005E96  0F97               	addlw	151
  6497  005E98  B0D8               	btfsc	status,0,c
  6498  005E9A  D00A               	goto	l7115
  6499                           
  6500                           ; BSR set to: 0
  6501  005E9C  0E00               	movlw	0
  6502  005E9E  0100               	movlb	0	; () banked
  6503  005EA0  6FC1               	movwf	?___fltol& (0+255),b
  6504  005EA2  0E00               	movlw	0
  6505  005EA4  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6506  005EA6  0E00               	movlw	0
  6507  005EA8  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6508  005EAA  0E00               	movlw	0
  6509  005EAC  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6510                           
  6511                           ; BSR set to: 0
  6512  005EAE  0012               	return	
  6513  005EB0                     l7115:
  6514                           
  6515                           ; BSR set to: 0
  6516  005EB0  0100               	movlb	0	; () banked
  6517  005EB2  90D8               	bcf	status,0,c
  6518  005EB4  33C4               	rrcf	(___fltol@f1+3)& (0+255),f,b
  6519  005EB6  33C3               	rrcf	(___fltol@f1+2)& (0+255),f,b
  6520  005EB8  33C2               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6521  005EBA  33C1               	rrcf	___fltol@f1& (0+255),f,b
  6522                           
  6523                           ; BSR set to: 0
  6524  005EBC  0100               	movlb	0	; () banked
  6525  005EBE  3FCA               	incfsz	___fltol@exp1& (0+255),f,b
  6526  005EC0  D7F7               	goto	l7115
  6527                           
  6528                           ; BSR set to: 0
  6529  005EC2  D01B               	goto	l7129
  6530  005EC4                     l7119:
  6531                           
  6532                           ; BSR set to: 0
  6533  005EC4  0E1F               	movlw	31
  6534  005EC6  0100               	movlb	0	; () banked
  6535  005EC8  65CA               	cpfsgt	___fltol@exp1& (0+255),b
  6536  005ECA  D012               	goto	l7127
  6537                           
  6538                           ; BSR set to: 0
  6539  005ECC  0E00               	movlw	0
  6540  005ECE  0100               	movlb	0	; () banked
  6541  005ED0  6FC1               	movwf	?___fltol& (0+255),b
  6542  005ED2  0E00               	movlw	0
  6543  005ED4  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6544  005ED6  0E00               	movlw	0
  6545  005ED8  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6546  005EDA  0E00               	movlw	0
  6547  005EDC  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6548                           
  6549                           ; BSR set to: 0
  6550  005EDE  0012               	return	
  6551  005EE0                     l7125:
  6552                           
  6553                           ; BSR set to: 0
  6554  005EE0  0100               	movlb	0	; () banked
  6555  005EE2  90D8               	bcf	status,0,c
  6556  005EE4  37C1               	rlcf	___fltol@f1& (0+255),f,b
  6557  005EE6  37C2               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6558  005EE8  37C3               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6559  005EEA  37C4               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6560  005EEC  0100               	movlb	0	; () banked
  6561  005EEE  07CA               	decf	___fltol@exp1& (0+255),f,b
  6562  005EF0                     l7127:
  6563                           
  6564                           ; BSR set to: 0
  6565  005EF0  0100               	movlb	0	; () banked
  6566  005EF2  51CA               	movf	___fltol@exp1& (0+255),w,b
  6567  005EF4  0100               	movlb	0	; () banked
  6568  005EF6  A4D8               	btfss	status,2,c
  6569  005EF8  D7F3               	goto	l7125
  6570  005EFA                     l7129:
  6571                           
  6572                           ; BSR set to: 0
  6573  005EFA  0100               	movlb	0	; () banked
  6574  005EFC  51C9               	movf	___fltol@sign1& (0+255),w,b
  6575  005EFE  0100               	movlb	0	; () banked
  6576  005F00  B4D8               	btfsc	status,2,c
  6577  005F02  D009               	goto	l7133
  6578                           
  6579                           ; BSR set to: 0
  6580  005F04  0100               	movlb	0	; () banked
  6581  005F06  1FC4               	comf	(___fltol@f1+3)& (0+255),f,b
  6582  005F08  1FC3               	comf	(___fltol@f1+2)& (0+255),f,b
  6583  005F0A  1FC2               	comf	(___fltol@f1+1)& (0+255),f,b
  6584  005F0C  6DC1               	negf	___fltol@f1& (0+255),b
  6585  005F0E  0E00               	movlw	0
  6586  005F10  23C2               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6587  005F12  23C3               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6588  005F14  23C4               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6589  005F16                     l7133:
  6590                           
  6591                           ; BSR set to: 0
  6592  005F16  C0C1  F0C1         	movff	___fltol@f1,?___fltol
  6593  005F1A  C0C2  F0C2         	movff	___fltol@f1+1,?___fltol+1
  6594  005F1E  C0C3  F0C3         	movff	___fltol@f1+2,?___fltol+2
  6595  005F22  C0C4  F0C4         	movff	___fltol@f1+3,?___fltol+3
  6596  005F26  0012               	return	
  6597  005F28                     __end_of___fltol:
  6598                           	opt stack 0
  6599                           tblptru	equ	0xFF8
  6600                           tblptrh	equ	0xFF7
  6601                           tblptrl	equ	0xFF6
  6602                           tablat	equ	0xFF5
  6603                           postinc0	equ	0xFEE
  6604                           wreg	equ	0xFE8
  6605                           postdec1	equ	0xFE5
  6606                           fsr1l	equ	0xFE1
  6607                           indf2	equ	0xFDF
  6608                           postinc2	equ	0xFDE
  6609                           postdec2	equ	0xFDD
  6610                           fsr2h	equ	0xFDA
  6611                           fsr2l	equ	0xFD9
  6612                           status	equ	0xFD8
  6613                           
  6614 ;; *************** function ___flsub *****************
  6615 ;; Defined at:
  6616 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcadd.c"
  6617 ;; Parameters:    Size  Location     Type
  6618 ;;  b               4    0[BANK1 ] long 
  6619 ;;  a               4    4[BANK1 ] long 
  6620 ;; Auto vars:     Size  Location     Type
  6621 ;;		None
  6622 ;; Return value:  Size  Location     Type
  6623 ;;                  4    0[BANK1 ] long 
  6624 ;; Registers used:
  6625 ;;		wreg, status,2, status,0, cstack
  6626 ;; Tracked objects:
  6627 ;;		On entry : 0/0
  6628 ;;		On exit  : 0/0
  6629 ;;		Unchanged: 0/0
  6630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6631 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6634 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6635 ;;Total ram usage:        8 bytes
  6636 ;; Hardware stack levels used:    1
  6637 ;; Hardware stack levels required when called:    5
  6638 ;; This function calls:
  6639 ;;		___fladd
  6640 ;; This function is called by:
  6641 ;;		_sin
  6642 ;; This function uses a non-reentrant model
  6643 ;;
  6644                           
  6645                           	psect	text15
  6646  0064CA                     __ptext15:
  6647                           	opt stack 0
  6648  0064CA                     ___flsub:
  6649                           	opt stack 21
  6650                           
  6651                           ; BSR set to: 0
  6652                           ;incstack = 0
  6653  0064CA  0E00               	movlw	0
  6654  0064CC  0101               	movlb	1	; () banked
  6655  0064CE  1BA7               	xorwf	___flsub@a& (0+255),f,b
  6656  0064D0  0E00               	movlw	0
  6657  0064D2  1BA8               	xorwf	(___flsub@a+1)& (0+255),f,b
  6658  0064D4  0E00               	movlw	0
  6659  0064D6  1BA9               	xorwf	(___flsub@a+2)& (0+255),f,b
  6660  0064D8  0E80               	movlw	128
  6661  0064DA  1BAA               	xorwf	(___flsub@a+3)& (0+255),f,b
  6662                           
  6663                           ; BSR set to: 1
  6664  0064DC  C1A3  F0A9         	movff	___flsub@b,___fladd@b
  6665  0064E0  C1A4  F0AA         	movff	___flsub@b+1,___fladd@b+1
  6666  0064E4  C1A5  F0AB         	movff	___flsub@b+2,___fladd@b+2
  6667  0064E8  C1A6  F0AC         	movff	___flsub@b+3,___fladd@b+3
  6668  0064EC  C1A7  F0AD         	movff	___flsub@a,___fladd@a
  6669  0064F0  C1A8  F0AE         	movff	___flsub@a+1,___fladd@a+1
  6670  0064F4  C1A9  F0AF         	movff	___flsub@a+2,___fladd@a+2
  6671  0064F8  C1AA  F0B0         	movff	___flsub@a+3,___fladd@a+3
  6672  0064FC  EC85  F018         	call	___fladd	;wreg free
  6673  006500  C0A9  F1A3         	movff	?___fladd,?___flsub
  6674  006504  C0AA  F1A4         	movff	?___fladd+1,?___flsub+1
  6675  006508  C0AB  F1A5         	movff	?___fladd+2,?___flsub+2
  6676  00650C  C0AC  F1A6         	movff	?___fladd+3,?___flsub+3
  6677  006510  0012               	return	
  6678  006512                     __end_of___flsub:
  6679                           	opt stack 0
  6680                           tblptru	equ	0xFF8
  6681                           tblptrh	equ	0xFF7
  6682                           tblptrl	equ	0xFF6
  6683                           tablat	equ	0xFF5
  6684                           postinc0	equ	0xFEE
  6685                           wreg	equ	0xFE8
  6686                           postdec1	equ	0xFE5
  6687                           fsr1l	equ	0xFE1
  6688                           indf2	equ	0xFDF
  6689                           postinc2	equ	0xFDE
  6690                           postdec2	equ	0xFDD
  6691                           fsr2h	equ	0xFDA
  6692                           fsr2l	equ	0xFD9
  6693                           status	equ	0xFD8
  6694                           
  6695 ;; *************** function _asin *****************
  6696 ;; Defined at:
  6697 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\asin.c"
  6698 ;; Parameters:    Size  Location     Type
  6699 ;;  x               4  126[BANK0 ] long 
  6700 ;; Auto vars:     Size  Location     Type
  6701 ;;  y               4   29[BANK1 ] long 
  6702 ;;  sgn             4   17[BANK1 ] long 
  6703 ;; Return value:  Size  Location     Type
  6704 ;;                  4  126[BANK0 ] long 
  6705 ;; Registers used:
  6706 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6707 ;; Tracked objects:
  6708 ;;		On entry : 0/0
  6709 ;;		On exit  : 0/0
  6710 ;;		Unchanged: 0/0
  6711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6712 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6713 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  6714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6715 ;;      Totals:         0       4      20       0       0       0       0       0       0       0       0       0       
      +0       0
  6716 ;;Total ram usage:       24 bytes
  6717 ;; Hardware stack levels used:    1
  6718 ;; Hardware stack levels required when called:    7
  6719 ;; This function calls:
  6720 ;;		___fladd
  6721 ;;		___fldiv
  6722 ;;		___flge
  6723 ;;		___flmul
  6724 ;;		___flneg
  6725 ;;		_atan
  6726 ;;		_fabs
  6727 ;;		_sqrt
  6728 ;; This function is called by:
  6729 ;;		_parallelo
  6730 ;;		_matematica
  6731 ;; This function uses a non-reentrant model
  6732 ;;
  6733                           
  6734                           	psect	text16
  6735  004D28                     __ptext16:
  6736                           	opt stack 0
  6737  004D28                     _asin:
  6738                           	opt stack 21
  6739                           
  6740                           ;incstack = 0
  6741  004D28  0E00               	movlw	0
  6742  004D2A  0100               	movlb	0	; () banked
  6743  004D2C  6FC5               	movwf	___flge@ff1& (0+255),b
  6744  004D2E  0E00               	movlw	0
  6745  004D30  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  6746  004D32  0E80               	movlw	128
  6747  004D34  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  6748  004D36  0E3F               	movlw	63
  6749  004D38  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  6750  004D3A  C0DE  F0C1         	movff	asin@x,fabs@d
  6751  004D3E  C0DF  F0C2         	movff	asin@x+1,fabs@d+1
  6752  004D42  C0E0  F0C3         	movff	asin@x+2,fabs@d+2
  6753  004D46  C0E1  F0C4         	movff	asin@x+3,fabs@d+3
  6754  004D4A  EC89  F032         	call	_fabs	;wreg free
  6755  004D4E  C0C1  F0C9         	movff	?_fabs,___flge@ff2
  6756  004D52  C0C2  F0CA         	movff	?_fabs+1,___flge@ff2+1
  6757  004D56  C0C3  F0CB         	movff	?_fabs+2,___flge@ff2+2
  6758  004D5A  C0C4  F0CC         	movff	?_fabs+3,___flge@ff2+3
  6759  004D5E  EC28  F02D         	call	___flge	;wreg free
  6760  004D62  0100               	movlb	0	; () banked
  6761  004D64  B0D8               	btfsc	status,0,c
  6762  004D66  D00F               	goto	l7831
  6763                           
  6764                           ; BSR set to: 0
  6765  004D68  0E00               	movlw	0
  6766  004D6A  0101               	movlb	1	; () banked
  6767  004D6C  6F53               	movwf	(_errno+1)& (0+255),b
  6768  004D6E  0E21               	movlw	33
  6769  004D70  6F52               	movwf	_errno& (0+255),b
  6770  004D72  0E00               	movlw	0
  6771  004D74  0100               	movlb	0	; () banked
  6772  004D76  6FDE               	movwf	?_asin& (0+255),b
  6773  004D78  0E00               	movlw	0
  6774  004D7A  6FDF               	movwf	(?_asin+1)& (0+255),b
  6775  004D7C  0E00               	movlw	0
  6776  004D7E  6FE0               	movwf	(?_asin+2)& (0+255),b
  6777  004D80  0E00               	movlw	0
  6778  004D82  6FE1               	movwf	(?_asin+3)& (0+255),b
  6779                           
  6780                           ; BSR set to: 0
  6781  004D84  0012               	return	
  6782  004D86                     l7831:
  6783                           
  6784                           ; BSR set to: 0
  6785  004D86  0E00               	movlw	0
  6786  004D88  0101               	movlb	1	; () banked
  6787  004D8A  6FB4               	movwf	asin@sgn& (0+255),b
  6788  004D8C  0E00               	movlw	0
  6789  004D8E  6FB5               	movwf	(asin@sgn+1)& (0+255),b
  6790  004D90  0E80               	movlw	128
  6791  004D92  6FB6               	movwf	(asin@sgn+2)& (0+255),b
  6792  004D94  0E3F               	movlw	63
  6793  004D96  6FB7               	movwf	(asin@sgn+3)& (0+255),b
  6794                           
  6795                           ; BSR set to: 1
  6796  004D98  C0DE  F094         	movff	asin@x,___flmul@a
  6797  004D9C  C0DF  F095         	movff	asin@x+1,___flmul@a+1
  6798  004DA0  C0E0  F096         	movff	asin@x+2,___flmul@a+2
  6799  004DA4  C0E1  F097         	movff	asin@x+3,___flmul@a+3
  6800  004DA8  C0DE  F090         	movff	asin@x,___flmul@b
  6801  004DAC  C0DF  F091         	movff	asin@x+1,___flmul@b+1
  6802  004DB0  C0E0  F092         	movff	asin@x+2,___flmul@b+2
  6803  004DB4  C0E1  F093         	movff	asin@x+3,___flmul@b+3
  6804  004DB8  ECD9  F01A         	call	___flmul	;wreg free
  6805  004DBC  C090  F0BD         	movff	?___flmul,___flneg@f1
  6806  004DC0  C091  F0BE         	movff	?___flmul+1,___flneg@f1+1
  6807  004DC4  C092  F0BF         	movff	?___flmul+2,___flneg@f1+2
  6808  004DC8  C093  F0C0         	movff	?___flmul+3,___flneg@f1+3
  6809  004DCC  ECA8  F032         	call	___flneg	;wreg free
  6810  004DD0  C0BD  F0A9         	movff	?___flneg,___fladd@b
  6811  004DD4  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  6812  004DD8  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  6813  004DDC  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  6814  004DE0  0E00               	movlw	0
  6815  004DE2  0100               	movlb	0	; () banked
  6816  004DE4  6FAD               	movwf	___fladd@a& (0+255),b
  6817  004DE6  0E00               	movlw	0
  6818  004DE8  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  6819  004DEA  0E80               	movlw	128
  6820  004DEC  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  6821  004DEE  0E3F               	movlw	63
  6822  004DF0  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  6823  004DF2  EC85  F018         	call	___fladd	;wreg free
  6824  004DF6  C0A9  F0C1         	movff	?___fladd,sqrt@a
  6825  004DFA  C0AA  F0C2         	movff	?___fladd+1,sqrt@a+1
  6826  004DFE  C0AB  F0C3         	movff	?___fladd+2,sqrt@a+2
  6827  004E02  C0AC  F0C4         	movff	?___fladd+3,sqrt@a+3
  6828  004E06  EC74  F01F         	call	_sqrt	;wreg free
  6829  004E0A  C0C1  F1C0         	movff	?_sqrt,asin@y
  6830  004E0E  C0C2  F1C1         	movff	?_sqrt+1,asin@y+1
  6831  004E12  C0C3  F1C2         	movff	?_sqrt+2,asin@y+2
  6832  004E16  C0C4  F1C3         	movff	?_sqrt+3,asin@y+3
  6833  004E1A  C0DE  F0C1         	movff	asin@x,fabs@d
  6834  004E1E  C0DF  F0C2         	movff	asin@x+1,fabs@d+1
  6835  004E22  C0E0  F0C3         	movff	asin@x+2,fabs@d+2
  6836  004E26  C0E1  F0C4         	movff	asin@x+3,fabs@d+3
  6837  004E2A  EC89  F032         	call	_fabs	;wreg free
  6838  004E2E  C0C1  F0C5         	movff	?_fabs,___flge@ff1
  6839  004E32  C0C2  F0C6         	movff	?_fabs+1,___flge@ff1+1
  6840  004E36  C0C3  F0C7         	movff	?_fabs+2,___flge@ff1+2
  6841  004E3A  C0C4  F0C8         	movff	?_fabs+3,___flge@ff1+3
  6842  004E3E  0E8F               	movlw	143
  6843  004E40  0100               	movlb	0	; () banked
  6844  004E42  6FC9               	movwf	___flge@ff2& (0+255),b
  6845  004E44  0EC2               	movlw	194
  6846  004E46  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
  6847  004E48  0E35               	movlw	53
  6848  004E4A  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
  6849  004E4C  0E3F               	movlw	63
  6850  004E4E  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
  6851  004E50  EC28  F02D         	call	___flge	;wreg free
  6852  004E54  0100               	movlb	0	; () banked
  6853  004E56  B0D8               	btfsc	status,0,c
  6854  004E58  D02D               	goto	l7843
  6855                           
  6856                           ; BSR set to: 0
  6857  004E5A  C0DE  F077         	movff	asin@x,___fldiv@b
  6858  004E5E  C0DF  F078         	movff	asin@x+1,___fldiv@b+1
  6859  004E62  C0E0  F079         	movff	asin@x+2,___fldiv@b+2
  6860  004E66  C0E1  F07A         	movff	asin@x+3,___fldiv@b+3
  6861  004E6A  C1C0  F07B         	movff	asin@y,___fldiv@a
  6862  004E6E  C1C1  F07C         	movff	asin@y+1,___fldiv@a+1
  6863  004E72  C1C2  F07D         	movff	asin@y+2,___fldiv@a+2
  6864  004E76  C1C3  F07E         	movff	asin@y+3,___fldiv@a+3
  6865  004E7A  EC59  F021         	call	___fldiv	;wreg free
  6866  004E7E  C077  F1C4         	movff	?___fldiv,_asin$3702
  6867  004E82  C078  F1C5         	movff	?___fldiv+1,_asin$3702+1
  6868  004E86  C079  F1C6         	movff	?___fldiv+2,_asin$3702+2
  6869  004E8A  C07A  F1C7         	movff	?___fldiv+3,_asin$3702+3
  6870  004E8E  C1C4  F0D1         	movff	_asin$3702,atan@f
  6871  004E92  C1C5  F0D2         	movff	_asin$3702+1,atan@f+1
  6872  004E96  C1C6  F0D3         	movff	_asin$3702+2,atan@f+2
  6873  004E9A  C1C7  F0D4         	movff	_asin$3702+3,atan@f+3
  6874  004E9E  EC52  F029         	call	_atan	;wreg free
  6875  004EA2  C0D1  F0DE         	movff	?_atan,?_asin
  6876  004EA6  C0D2  F0DF         	movff	?_atan+1,?_asin+1
  6877  004EAA  C0D3  F0E0         	movff	?_atan+2,?_asin+2
  6878  004EAE  C0D4  F0E1         	movff	?_atan+3,?_asin+3
  6879  004EB2  0012               	return	
  6880  004EB4                     l7843:
  6881  004EB4  0100               	movlb	0	; () banked
  6882  004EB6  AFE1               	btfss	(asin@x+3)& (0+255),7,b
  6883  004EB8  D06E               	goto	l7855
  6884                           
  6885                           ; BSR set to: 0
  6886  004EBA  C0DE  F07B         	movff	asin@x,___fldiv@a
  6887  004EBE  C0DF  F07C         	movff	asin@x+1,___fldiv@a+1
  6888  004EC2  C0E0  F07D         	movff	asin@x+2,___fldiv@a+2
  6889  004EC6  C0E1  F07E         	movff	asin@x+3,___fldiv@a+3
  6890  004ECA  C1C0  F0BD         	movff	asin@y,___flneg@f1
  6891  004ECE  C1C1  F0BE         	movff	asin@y+1,___flneg@f1+1
  6892  004ED2  C1C2  F0BF         	movff	asin@y+2,___flneg@f1+2
  6893  004ED6  C1C3  F0C0         	movff	asin@y+3,___flneg@f1+3
  6894  004EDA  ECA8  F032         	call	___flneg	;wreg free
  6895  004EDE  C0BD  F077         	movff	?___flneg,___fldiv@b
  6896  004EE2  C0BE  F078         	movff	?___flneg+1,___fldiv@b+1
  6897  004EE6  C0BF  F079         	movff	?___flneg+2,___fldiv@b+2
  6898  004EEA  C0C0  F07A         	movff	?___flneg+3,___fldiv@b+3
  6899  004EEE  EC59  F021         	call	___fldiv	;wreg free
  6900  004EF2  C077  F1C4         	movff	?___fldiv,_asin$3702
  6901  004EF6  C078  F1C5         	movff	?___fldiv+1,_asin$3702+1
  6902  004EFA  C079  F1C6         	movff	?___fldiv+2,_asin$3702+2
  6903  004EFE  C07A  F1C7         	movff	?___fldiv+3,_asin$3702+3
  6904  004F02  C1C4  F0D1         	movff	_asin$3702,atan@f
  6905  004F06  C1C5  F0D2         	movff	_asin$3702+1,atan@f+1
  6906  004F0A  C1C6  F0D3         	movff	_asin$3702+2,atan@f+2
  6907  004F0E  C1C7  F0D4         	movff	_asin$3702+3,atan@f+3
  6908  004F12  EC52  F029         	call	_atan	;wreg free
  6909  004F16  C0D1  F1BC         	movff	?_atan,_asin$3703
  6910  004F1A  C0D2  F1BD         	movff	?_atan+1,_asin$3703+1
  6911  004F1E  C0D3  F1BE         	movff	?_atan+2,_asin$3703+2
  6912  004F22  C0D4  F1BF         	movff	?_atan+3,_asin$3703+3
  6913  004F26  0EDB               	movlw	219
  6914  004F28  0100               	movlb	0	; () banked
  6915  004F2A  6FAD               	movwf	___fladd@a& (0+255),b
  6916  004F2C  0E0F               	movlw	15
  6917  004F2E  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  6918  004F30  0EC9               	movlw	201
  6919  004F32  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  6920  004F34  0E3F               	movlw	63
  6921  004F36  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  6922  004F38  C1BC  F0BD         	movff	_asin$3703,___flneg@f1
  6923  004F3C  C1BD  F0BE         	movff	_asin$3703+1,___flneg@f1+1
  6924  004F40  C1BE  F0BF         	movff	_asin$3703+2,___flneg@f1+2
  6925  004F44  C1BF  F0C0         	movff	_asin$3703+3,___flneg@f1+3
  6926  004F48  ECA8  F032         	call	___flneg	;wreg free
  6927  004F4C  C0BD  F0A9         	movff	?___flneg,___fladd@b
  6928  004F50  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  6929  004F54  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  6930  004F58  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  6931  004F5C  EC85  F018         	call	___fladd	;wreg free
  6932  004F60  C0A9  F1B8         	movff	?___fladd,_asin$3704
  6933  004F64  C0AA  F1B9         	movff	?___fladd+1,_asin$3704+1
  6934  004F68  C0AB  F1BA         	movff	?___fladd+2,_asin$3704+2
  6935  004F6C  C0AC  F1BB         	movff	?___fladd+3,_asin$3704+3
  6936  004F70  C1B8  F0BD         	movff	_asin$3704,___flneg@f1
  6937  004F74  C1B9  F0BE         	movff	_asin$3704+1,___flneg@f1+1
  6938  004F78  C1BA  F0BF         	movff	_asin$3704+2,___flneg@f1+2
  6939  004F7C  C1BB  F0C0         	movff	_asin$3704+3,___flneg@f1+3
  6940  004F80  ECA8  F032         	call	___flneg	;wreg free
  6941  004F84  C0BD  F0DE         	movff	?___flneg,?_asin
  6942  004F88  C0BE  F0DF         	movff	?___flneg+1,?_asin+1
  6943  004F8C  C0BF  F0E0         	movff	?___flneg+2,?_asin+2
  6944  004F90  C0C0  F0E1         	movff	?___flneg+3,?_asin+3
  6945  004F94  0012               	return	
  6946  004F96                     l7855:
  6947  004F96  C0DE  F07B         	movff	asin@x,___fldiv@a
  6948  004F9A  C0DF  F07C         	movff	asin@x+1,___fldiv@a+1
  6949  004F9E  C0E0  F07D         	movff	asin@x+2,___fldiv@a+2
  6950  004FA2  C0E1  F07E         	movff	asin@x+3,___fldiv@a+3
  6951  004FA6  C1C0  F077         	movff	asin@y,___fldiv@b
  6952  004FAA  C1C1  F078         	movff	asin@y+1,___fldiv@b+1
  6953  004FAE  C1C2  F079         	movff	asin@y+2,___fldiv@b+2
  6954  004FB2  C1C3  F07A         	movff	asin@y+3,___fldiv@b+3
  6955  004FB6  EC59  F021         	call	___fldiv	;wreg free
  6956  004FBA  C077  F1C4         	movff	?___fldiv,_asin$3702
  6957  004FBE  C078  F1C5         	movff	?___fldiv+1,_asin$3702+1
  6958  004FC2  C079  F1C6         	movff	?___fldiv+2,_asin$3702+2
  6959  004FC6  C07A  F1C7         	movff	?___fldiv+3,_asin$3702+3
  6960  004FCA  C1C4  F0D1         	movff	_asin$3702,atan@f
  6961  004FCE  C1C5  F0D2         	movff	_asin$3702+1,atan@f+1
  6962  004FD2  C1C6  F0D3         	movff	_asin$3702+2,atan@f+2
  6963  004FD6  C1C7  F0D4         	movff	_asin$3702+3,atan@f+3
  6964  004FDA  EC52  F029         	call	_atan	;wreg free
  6965  004FDE  C0D1  F1BC         	movff	?_atan,_asin$3703
  6966  004FE2  C0D2  F1BD         	movff	?_atan+1,_asin$3703+1
  6967  004FE6  C0D3  F1BE         	movff	?_atan+2,_asin$3703+2
  6968  004FEA  C0D4  F1BF         	movff	?_atan+3,_asin$3703+3
  6969  004FEE  C1BC  F0BD         	movff	_asin$3703,___flneg@f1
  6970  004FF2  C1BD  F0BE         	movff	_asin$3703+1,___flneg@f1+1
  6971  004FF6  C1BE  F0BF         	movff	_asin$3703+2,___flneg@f1+2
  6972  004FFA  C1BF  F0C0         	movff	_asin$3703+3,___flneg@f1+3
  6973  004FFE  ECA8  F032         	call	___flneg	;wreg free
  6974  005002  C0BD  F0A9         	movff	?___flneg,___fladd@b
  6975  005006  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  6976  00500A  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  6977  00500E  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  6978  005012  0EDB               	movlw	219
  6979  005014  0100               	movlb	0	; () banked
  6980  005016  6FAD               	movwf	___fladd@a& (0+255),b
  6981  005018  0E0F               	movlw	15
  6982  00501A  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  6983  00501C  0EC9               	movlw	201
  6984  00501E  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  6985  005020  0E3F               	movlw	63
  6986  005022  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  6987  005024  EC85  F018         	call	___fladd	;wreg free
  6988  005028  C0A9  F0DE         	movff	?___fladd,?_asin
  6989  00502C  C0AA  F0DF         	movff	?___fladd+1,?_asin+1
  6990  005030  C0AB  F0E0         	movff	?___fladd+2,?_asin+2
  6991  005034  C0AC  F0E1         	movff	?___fladd+3,?_asin+3
  6992  005038  0012               	return	
  6993  00503A                     __end_of_asin:
  6994                           	opt stack 0
  6995                           tblptru	equ	0xFF8
  6996                           tblptrh	equ	0xFF7
  6997                           tblptrl	equ	0xFF6
  6998                           tablat	equ	0xFF5
  6999                           postinc0	equ	0xFEE
  7000                           wreg	equ	0xFE8
  7001                           postdec1	equ	0xFE5
  7002                           fsr1l	equ	0xFE1
  7003                           indf2	equ	0xFDF
  7004                           postinc2	equ	0xFDE
  7005                           postdec2	equ	0xFDD
  7006                           fsr2h	equ	0xFDA
  7007                           fsr2l	equ	0xFD9
  7008                           status	equ	0xFD8
  7009                           
  7010 ;; *************** function _sqrt *****************
  7011 ;; Defined at:
  7012 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcsqrt.c"
  7013 ;; Parameters:    Size  Location     Type
  7014 ;;  a               4   97[BANK0 ] long 
  7015 ;; Auto vars:     Size  Location     Type
  7016 ;;  frac            4  122[BANK0 ] unsigned long 
  7017 ;;  root            4  118[BANK0 ] struct .
  7018 ;;  grs             4  112[BANK0 ] unsigned long 
  7019 ;;  tfrac           4  107[BANK0 ] unsigned long 
  7020 ;;  exp             2  116[BANK0 ] int 
  7021 ;;  p               1  111[BANK0 ] unsigned char 
  7022 ;;  i               1  106[BANK0 ] unsigned char 
  7023 ;;  sign            1  105[BANK0 ] unsigned char 
  7024 ;; Return value:  Size  Location     Type
  7025 ;;                  4   97[BANK0 ] unsigned char 
  7026 ;; Registers used:
  7027 ;;		wreg, status,2, status,0
  7028 ;; Tracked objects:
  7029 ;;		On entry : 0/0
  7030 ;;		On exit  : 0/0
  7031 ;;		Unchanged: 0/0
  7032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7033 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7034 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7035 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7036 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7037 ;;Total ram usage:       29 bytes
  7038 ;; Hardware stack levels used:    1
  7039 ;; Hardware stack levels required when called:    4
  7040 ;; This function calls:
  7041 ;;		Nothing
  7042 ;; This function is called by:
  7043 ;;		_parallelo
  7044 ;;		_asin
  7045 ;; This function uses a non-reentrant model
  7046 ;;
  7047                           
  7048                           	psect	text17
  7049  003EE8                     __ptext17:
  7050                           	opt stack 0
  7051  003EE8                     _sqrt:
  7052                           	opt stack 24
  7053                           
  7054                           ;incstack = 0
  7055  003EE8  0100               	movlb	0	; () banked
  7056  003EEA  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  7057  003EEC  0B80               	andlw	128
  7058  003EEE  0100               	movlb	0	; () banked
  7059  003EF0  6FC9               	movwf	sqrt@sign& (0+255),b
  7060  003EF2  0100               	movlb	0	; () banked
  7061  003EF4  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  7062  003EF6  25C4               	addwf	(sqrt@a+3)& (0+255),w,b
  7063  003EF8  0100               	movlb	0	; () banked
  7064  003EFA  6FCF               	movwf	sqrt@p& (0+255),b
  7065                           
  7066                           ; BSR set to: 0
  7067  003EFC  0100               	movlb	0	; () banked
  7068  003EFE  AFC3               	btfss	(sqrt@a+2)& (0+255),7,b
  7069  003F00  D002               	goto	l7621
  7070                           
  7071                           ; BSR set to: 0
  7072  003F02  0100               	movlb	0	; () banked
  7073  003F04  81CF               	bsf	sqrt@p& (0+255),0,b
  7074  003F06                     l7621:
  7075                           
  7076                           ; BSR set to: 0
  7077  003F06  C0CF  F0D4         	movff	sqrt@p,sqrt@exp
  7078  003F0A  0100               	movlb	0	; () banked
  7079  003F0C  6BD5               	clrf	(sqrt@exp+1)& (0+255),b
  7080                           
  7081                           ; BSR set to: 0
  7082  003F0E  0EFF               	movlw	255
  7083  003F10  0100               	movlb	0	; () banked
  7084  003F12  15C1               	andwf	sqrt@a& (0+255),w,b
  7085  003F14  0100               	movlb	0	; () banked
  7086  003F16  6FDA               	movwf	sqrt@frac& (0+255),b
  7087  003F18  0EFF               	movlw	255
  7088  003F1A  0100               	movlb	0	; () banked
  7089  003F1C  15C2               	andwf	(sqrt@a+1)& (0+255),w,b
  7090  003F1E  0100               	movlb	0	; () banked
  7091  003F20  6FDB               	movwf	(sqrt@frac+1)& (0+255),b
  7092  003F22  0E7F               	movlw	127
  7093  003F24  0100               	movlb	0	; () banked
  7094  003F26  15C3               	andwf	(sqrt@a+2)& (0+255),w,b
  7095  003F28  0100               	movlb	0	; () banked
  7096  003F2A  6FDC               	movwf	(sqrt@frac+2)& (0+255),b
  7097  003F2C  0E00               	movlw	0
  7098  003F2E  0100               	movlb	0	; () banked
  7099  003F30  15C4               	andwf	(sqrt@a+3)& (0+255),w,b
  7100  003F32  0100               	movlb	0	; () banked
  7101  003F34  6FDD               	movwf	(sqrt@frac+3)& (0+255),b
  7102                           
  7103                           ; BSR set to: 0
  7104  003F36  0100               	movlb	0	; () banked
  7105  003F38  51D4               	movf	sqrt@exp& (0+255),w,b
  7106  003F3A  0100               	movlb	0	; () banked
  7107  003F3C  11D5               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7108  003F3E  B4D8               	btfsc	status,2,c
  7109  003F40  D008               	goto	l7633
  7110                           
  7111                           ; BSR set to: 0
  7112  003F42  0100               	movlb	0	; () banked
  7113  003F44  8FDC               	bsf	(sqrt@frac+2)& (0+255),7,b
  7114                           
  7115                           ; BSR set to: 0
  7116  003F46  0100               	movlb	0	; () banked
  7117  003F48  29D4               	incf	sqrt@exp& (0+255),w,b
  7118  003F4A  0100               	movlb	0	; () banked
  7119  003F4C  11D5               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7120  003F4E  A4D8               	btfss	status,2,c
  7121  003F50  D009               	goto	l7635
  7122  003F52                     l7633:
  7123                           
  7124                           ; BSR set to: 0
  7125  003F52  0E00               	movlw	0
  7126  003F54  0100               	movlb	0	; () banked
  7127  003F56  6FDA               	movwf	sqrt@frac& (0+255),b
  7128  003F58  0E00               	movlw	0
  7129  003F5A  6FDB               	movwf	(sqrt@frac+1)& (0+255),b
  7130  003F5C  0E00               	movlw	0
  7131  003F5E  6FDC               	movwf	(sqrt@frac+2)& (0+255),b
  7132  003F60  0E00               	movlw	0
  7133  003F62  6FDD               	movwf	(sqrt@frac+3)& (0+255),b
  7134  003F64                     l7635:
  7135                           
  7136                           ; BSR set to: 0
  7137  003F64  0100               	movlb	0	; () banked
  7138  003F66  51D4               	movf	sqrt@exp& (0+255),w,b
  7139  003F68  0100               	movlb	0	; () banked
  7140  003F6A  11D5               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7141  003F6C  A4D8               	btfss	status,2,c
  7142  003F6E  D00A               	goto	l7641
  7143                           
  7144                           ; BSR set to: 0
  7145  003F70  0E00               	movlw	0
  7146  003F72  0100               	movlb	0	; () banked
  7147  003F74  6FC1               	movwf	?_sqrt& (0+255),b
  7148  003F76  0E00               	movlw	0
  7149  003F78  6FC2               	movwf	(?_sqrt+1)& (0+255),b
  7150  003F7A  0E00               	movlw	0
  7151  003F7C  6FC3               	movwf	(?_sqrt+2)& (0+255),b
  7152  003F7E  0E00               	movlw	0
  7153  003F80  6FC4               	movwf	(?_sqrt+3)& (0+255),b
  7154                           
  7155                           ; BSR set to: 0
  7156  003F82  0012               	return	
  7157  003F84                     l7641:
  7158                           
  7159                           ; BSR set to: 0
  7160  003F84  0100               	movlb	0	; () banked
  7161  003F86  51C9               	movf	sqrt@sign& (0+255),w,b
  7162  003F88  0100               	movlb	0	; () banked
  7163  003F8A  B4D8               	btfsc	status,2,c
  7164  003F8C  D01C               	goto	l7653
  7165                           
  7166                           ; BSR set to: 0
  7167  003F8E  0E00               	movlw	0
  7168  003F90  0100               	movlb	0	; () banked
  7169  003F92  6FD6               	movwf	sqrt@root& (0+255),b
  7170  003F94  0E00               	movlw	0
  7171  003F96  6FD7               	movwf	(sqrt@root+1)& (0+255),b
  7172  003F98  0E40               	movlw	64
  7173  003F9A  6FD8               	movwf	(sqrt@root+2)& (0+255),b
  7174  003F9C  0E00               	movlw	0
  7175  003F9E  6FD9               	movwf	(sqrt@root+3)& (0+255),b
  7176                           
  7177                           ; BSR set to: 0
  7178  003FA0  0100               	movlb	0	; () banked
  7179  003FA2  0E80               	movlw	128
  7180  003FA4  13D8               	iorwf	(sqrt@root+2)& (0+255),f,b
  7181  003FA6  0EFF               	movlw	255
  7182  003FA8  13D9               	iorwf	(sqrt@root+3)& (0+255),f,b
  7183                           
  7184                           ; BSR set to: 0
  7185  003FAA  0E00               	movlw	0
  7186  003FAC  0101               	movlb	1	; () banked
  7187  003FAE  6F53               	movwf	(_errno+1)& (0+255),b
  7188  003FB0  0E21               	movlw	33
  7189  003FB2  6F52               	movwf	_errno& (0+255),b
  7190                           
  7191                           ; BSR set to: 1
  7192  003FB4  C0D6  F0C1         	movff	sqrt@root,?_sqrt
  7193  003FB8  C0D7  F0C2         	movff	sqrt@root+1,?_sqrt+1
  7194  003FBC  C0D8  F0C3         	movff	sqrt@root+2,?_sqrt+2
  7195  003FC0  C0D9  F0C4         	movff	sqrt@root+3,?_sqrt+3
  7196                           
  7197                           ; BSR set to: 1
  7198  003FC4  0012               	return	
  7199  003FC6                     l7653:
  7200  003FC6  0100               	movlb	0	; () banked
  7201  003FC8  29D4               	incf	sqrt@exp& (0+255),w,b
  7202  003FCA  0100               	movlb	0	; () banked
  7203  003FCC  11D5               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7204  003FCE  A4D8               	btfss	status,2,c
  7205  003FD0  D012               	goto	l7661
  7206                           
  7207                           ; BSR set to: 0
  7208  003FD2  0E00               	movlw	0
  7209  003FD4  0100               	movlb	0	; () banked
  7210  003FD6  6FD6               	movwf	sqrt@root& (0+255),b
  7211  003FD8  0E00               	movlw	0
  7212  003FDA  6FD7               	movwf	(sqrt@root+1)& (0+255),b
  7213  003FDC  0E80               	movlw	128
  7214  003FDE  6FD8               	movwf	(sqrt@root+2)& (0+255),b
  7215  003FE0  0E7F               	movlw	127
  7216  003FE2  6FD9               	movwf	(sqrt@root+3)& (0+255),b
  7217                           
  7218                           ; BSR set to: 0
  7219  003FE4  C0D6  F0C1         	movff	sqrt@root,?_sqrt
  7220  003FE8  C0D7  F0C2         	movff	sqrt@root+1,?_sqrt+1
  7221  003FEC  C0D8  F0C3         	movff	sqrt@root+2,?_sqrt+2
  7222  003FF0  C0D9  F0C4         	movff	sqrt@root+3,?_sqrt+3
  7223                           
  7224                           ; BSR set to: 0
  7225  003FF4  0012               	return	
  7226  003FF6                     l7661:
  7227                           
  7228                           ; BSR set to: 0
  7229  003FF6  0100               	movlb	0	; () banked
  7230  003FF8  0E81               	movlw	129
  7231  003FFA  27D4               	addwf	sqrt@exp& (0+255),f,b
  7232  003FFC  0EFF               	movlw	255
  7233  003FFE  23D5               	addwfc	(sqrt@exp+1)& (0+255),f,b
  7234  004000  0100               	movlb	0	; () banked
  7235  004002  51D4               	movf	sqrt@exp& (0+255),w,b
  7236  004004  0B01               	andlw	1
  7237  004006  0100               	movlb	0	; () banked
  7238  004008  6FCF               	movwf	sqrt@p& (0+255),b
  7239  00400A  0100               	movlb	0	; () banked
  7240  00400C  35D5               	rlcf	(sqrt@exp+1)& (0+255),w,b
  7241  00400E  33D5               	rrcf	(sqrt@exp+1)& (0+255),f,b
  7242  004010  33D4               	rrcf	sqrt@exp& (0+255),f,b
  7243  004012  0E7F               	movlw	127
  7244  004014  0100               	movlb	0	; () banked
  7245  004016  27D4               	addwf	sqrt@exp& (0+255),f,b
  7246  004018  0E00               	movlw	0
  7247  00401A  23D5               	addwfc	(sqrt@exp+1)& (0+255),f,b
  7248  00401C  90D8               	bcf	status,0,c
  7249  00401E  0100               	movlb	0	; () banked
  7250  004020  35DA               	rlcf	sqrt@frac& (0+255),w,b
  7251  004022  0100               	movlb	0	; () banked
  7252  004024  6FCB               	movwf	sqrt@tfrac& (0+255),b
  7253  004026  0100               	movlb	0	; () banked
  7254  004028  35DB               	rlcf	(sqrt@frac+1)& (0+255),w,b
  7255  00402A  0100               	movlb	0	; () banked
  7256  00402C  6FCC               	movwf	(sqrt@tfrac+1)& (0+255),b
  7257  00402E  0100               	movlb	0	; () banked
  7258  004030  35DC               	rlcf	(sqrt@frac+2)& (0+255),w,b
  7259  004032  0100               	movlb	0	; () banked
  7260  004034  6FCD               	movwf	(sqrt@tfrac+2)& (0+255),b
  7261  004036  0100               	movlb	0	; () banked
  7262  004038  35DD               	rlcf	(sqrt@frac+3)& (0+255),w,b
  7263  00403A  0100               	movlb	0	; () banked
  7264  00403C  6FCE               	movwf	(sqrt@tfrac+3)& (0+255),b
  7265                           
  7266                           ; BSR set to: 0
  7267  00403E  0E00               	movlw	0
  7268  004040  0100               	movlb	0	; () banked
  7269  004042  6FDA               	movwf	sqrt@frac& (0+255),b
  7270  004044  0E00               	movlw	0
  7271  004046  6FDB               	movwf	(sqrt@frac+1)& (0+255),b
  7272  004048  0E00               	movlw	0
  7273  00404A  6FDC               	movwf	(sqrt@frac+2)& (0+255),b
  7274  00404C  0E00               	movlw	0
  7275  00404E  6FDD               	movwf	(sqrt@frac+3)& (0+255),b
  7276                           
  7277                           ; BSR set to: 0
  7278  004050  0E00               	movlw	0
  7279  004052  0100               	movlb	0	; () banked
  7280  004054  6FD0               	movwf	sqrt@grs& (0+255),b
  7281  004056  0E00               	movlw	0
  7282  004058  6FD1               	movwf	(sqrt@grs+1)& (0+255),b
  7283  00405A  0E00               	movlw	0
  7284  00405C  6FD2               	movwf	(sqrt@grs+2)& (0+255),b
  7285  00405E  0E01               	movlw	1
  7286  004060  6FD3               	movwf	(sqrt@grs+3)& (0+255),b
  7287                           
  7288                           ; BSR set to: 0
  7289  004062  0100               	movlb	0	; () banked
  7290  004064  51CF               	movf	sqrt@p& (0+255),w,b
  7291  004066  0100               	movlb	0	; () banked
  7292  004068  B4D8               	btfsc	status,2,c
  7293  00406A  D006               	goto	l7671
  7294                           
  7295                           ; BSR set to: 0
  7296  00406C  0100               	movlb	0	; () banked
  7297  00406E  90D8               	bcf	status,0,c
  7298  004070  37CB               	rlcf	sqrt@tfrac& (0+255),f,b
  7299  004072  37CC               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  7300  004074  37CD               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  7301  004076  37CE               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  7302  004078                     l7671:
  7303                           
  7304                           ; BSR set to: 0
  7305  004078  0E00               	movlw	0
  7306  00407A  0100               	movlb	0	; () banked
  7307  00407C  6FCA               	movwf	sqrt@i& (0+255),b
  7308  00407E  D07E               	goto	l7685
  7309  004080                     l7673:
  7310                           
  7311                           ; BSR set to: 0
  7312  004080  0100               	movlb	0	; () banked
  7313  004082  51D0               	movf	sqrt@grs& (0+255),w,b
  7314  004084  0100               	movlb	0	; () banked
  7315  004086  13DA               	iorwf	sqrt@frac& (0+255),f,b
  7316  004088  0100               	movlb	0	; () banked
  7317  00408A  51D1               	movf	(sqrt@grs+1)& (0+255),w,b
  7318  00408C  0100               	movlb	0	; () banked
  7319  00408E  13DB               	iorwf	(sqrt@frac+1)& (0+255),f,b
  7320  004090  0100               	movlb	0	; () banked
  7321  004092  51D2               	movf	(sqrt@grs+2)& (0+255),w,b
  7322  004094  0100               	movlb	0	; () banked
  7323  004096  13DC               	iorwf	(sqrt@frac+2)& (0+255),f,b
  7324  004098  0100               	movlb	0	; () banked
  7325  00409A  51D3               	movf	(sqrt@grs+3)& (0+255),w,b
  7326  00409C  0100               	movlb	0	; () banked
  7327  00409E  13DD               	iorwf	(sqrt@frac+3)& (0+255),f,b
  7328  0040A0  0100               	movlb	0	; () banked
  7329  0040A2  51DA               	movf	sqrt@frac& (0+255),w,b
  7330  0040A4  0100               	movlb	0	; () banked
  7331  0040A6  5DCB               	subwf	sqrt@tfrac& (0+255),w,b
  7332  0040A8  0100               	movlb	0	; () banked
  7333  0040AA  51DB               	movf	(sqrt@frac+1)& (0+255),w,b
  7334  0040AC  0100               	movlb	0	; () banked
  7335  0040AE  59CC               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
  7336  0040B0  0100               	movlb	0	; () banked
  7337  0040B2  51DC               	movf	(sqrt@frac+2)& (0+255),w,b
  7338  0040B4  0100               	movlb	0	; () banked
  7339  0040B6  59CD               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
  7340  0040B8  0100               	movlb	0	; () banked
  7341  0040BA  51DD               	movf	(sqrt@frac+3)& (0+255),w,b
  7342  0040BC  0100               	movlb	0	; () banked
  7343  0040BE  59CE               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
  7344  0040C0  A0D8               	btfss	status,0,c
  7345  0040C2  D021               	goto	l7677
  7346                           
  7347                           ; BSR set to: 0
  7348  0040C4  0100               	movlb	0	; () banked
  7349  0040C6  51DA               	movf	sqrt@frac& (0+255),w,b
  7350  0040C8  0100               	movlb	0	; () banked
  7351  0040CA  5FCB               	subwf	sqrt@tfrac& (0+255),f,b
  7352  0040CC  0100               	movlb	0	; () banked
  7353  0040CE  51DB               	movf	(sqrt@frac+1)& (0+255),w,b
  7354  0040D0  0100               	movlb	0	; () banked
  7355  0040D2  5BCC               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
  7356  0040D4  0100               	movlb	0	; () banked
  7357  0040D6  51DC               	movf	(sqrt@frac+2)& (0+255),w,b
  7358  0040D8  0100               	movlb	0	; () banked
  7359  0040DA  5BCD               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
  7360  0040DC  0100               	movlb	0	; () banked
  7361  0040DE  51DD               	movf	(sqrt@frac+3)& (0+255),w,b
  7362  0040E0  0100               	movlb	0	; () banked
  7363  0040E2  5BCE               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
  7364  0040E4  0100               	movlb	0	; () banked
  7365  0040E6  51D0               	movf	sqrt@grs& (0+255),w,b
  7366  0040E8  0100               	movlb	0	; () banked
  7367  0040EA  27DA               	addwf	sqrt@frac& (0+255),f,b
  7368  0040EC  0100               	movlb	0	; () banked
  7369  0040EE  51D1               	movf	(sqrt@grs+1)& (0+255),w,b
  7370  0040F0  0100               	movlb	0	; () banked
  7371  0040F2  23DB               	addwfc	(sqrt@frac+1)& (0+255),f,b
  7372  0040F4  0100               	movlb	0	; () banked
  7373  0040F6  51D2               	movf	(sqrt@grs+2)& (0+255),w,b
  7374  0040F8  0100               	movlb	0	; () banked
  7375  0040FA  23DC               	addwfc	(sqrt@frac+2)& (0+255),f,b
  7376  0040FC  0100               	movlb	0	; () banked
  7377  0040FE  51D3               	movf	(sqrt@grs+3)& (0+255),w,b
  7378  004100  0100               	movlb	0	; () banked
  7379  004102  23DD               	addwfc	(sqrt@frac+3)& (0+255),f,b
  7380  004104  D01D               	goto	l7679
  7381  004106                     l7677:
  7382                           
  7383                           ; BSR set to: 0
  7384  004106  C0D0  F0C5         	movff	sqrt@grs,??_sqrt
  7385  00410A  C0D1  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  7386  00410E  C0D2  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  7387  004112  C0D3  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  7388  004116  0100               	movlb	0	; () banked
  7389  004118  1FC5               	comf	??_sqrt& (0+255),f,b
  7390  00411A  1FC6               	comf	(??_sqrt+1)& (0+255),f,b
  7391  00411C  1FC7               	comf	(??_sqrt+2)& (0+255),f,b
  7392  00411E  1FC8               	comf	(??_sqrt+3)& (0+255),f,b
  7393  004120  0100               	movlb	0	; () banked
  7394  004122  51C5               	movf	??_sqrt& (0+255),w,b
  7395  004124  0100               	movlb	0	; () banked
  7396  004126  17DA               	andwf	sqrt@frac& (0+255),f,b
  7397  004128  0100               	movlb	0	; () banked
  7398  00412A  51C6               	movf	(??_sqrt+1)& (0+255),w,b
  7399  00412C  0100               	movlb	0	; () banked
  7400  00412E  17DB               	andwf	(sqrt@frac+1)& (0+255),f,b
  7401  004130  0100               	movlb	0	; () banked
  7402  004132  51C7               	movf	(??_sqrt+2)& (0+255),w,b
  7403  004134  0100               	movlb	0	; () banked
  7404  004136  17DC               	andwf	(sqrt@frac+2)& (0+255),f,b
  7405  004138  0100               	movlb	0	; () banked
  7406  00413A  51C8               	movf	(??_sqrt+3)& (0+255),w,b
  7407  00413C  0100               	movlb	0	; () banked
  7408  00413E  17DD               	andwf	(sqrt@frac+3)& (0+255),f,b
  7409  004140                     l7679:
  7410                           
  7411                           ; BSR set to: 0
  7412  004140  C0D0  F0C5         	movff	sqrt@grs,??_sqrt
  7413  004144  C0D1  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  7414  004148  C0D2  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  7415  00414C  C0D3  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  7416  004150  0100               	movlb	0	; () banked
  7417  004152  90D8               	bcf	status,0,c
  7418  004154  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7419  004156  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7420  004158  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7421  00415A  33C5               	rrcf	??_sqrt& (0+255),f,b
  7422  00415C  C0C5  F0D0         	movff	??_sqrt,sqrt@grs
  7423  004160  C0C6  F0D1         	movff	??_sqrt+1,sqrt@grs+1
  7424  004164  C0C7  F0D2         	movff	??_sqrt+2,sqrt@grs+2
  7425  004168  C0C8  F0D3         	movff	??_sqrt+3,sqrt@grs+3
  7426                           
  7427                           ; BSR set to: 0
  7428  00416C  0100               	movlb	0	; () banked
  7429  00416E  90D8               	bcf	status,0,c
  7430  004170  37CB               	rlcf	sqrt@tfrac& (0+255),f,b
  7431  004172  37CC               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  7432  004174  37CD               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  7433  004176  37CE               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  7434                           
  7435                           ; BSR set to: 0
  7436  004178  0100               	movlb	0	; () banked
  7437  00417A  2BCA               	incf	sqrt@i& (0+255),f,b
  7438  00417C                     l7685:
  7439                           
  7440                           ; BSR set to: 0
  7441  00417C  0E18               	movlw	24
  7442  00417E  0100               	movlb	0	; () banked
  7443  004180  65CA               	cpfsgt	sqrt@i& (0+255),b
  7444  004182  D77E               	goto	l7673
  7445                           
  7446                           ; BSR set to: 0
  7447                           
  7448                           ; BSR set to: 0
  7449  004184  C0DA  F0C5         	movff	sqrt@frac,??_sqrt
  7450  004188  C0DB  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7451  00418C  C0DC  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7452  004190  C0DD  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7453  004194  0100               	movlb	0	; () banked
  7454  004196  90D8               	bcf	status,0,c
  7455  004198  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7456  00419A  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7457  00419C  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7458  00419E  33C5               	rrcf	??_sqrt& (0+255),f,b
  7459  0041A0  C0C5  F0DA         	movff	??_sqrt,sqrt@frac
  7460  0041A4  C0C6  F0DB         	movff	??_sqrt+1,sqrt@frac+1
  7461  0041A8  C0C7  F0DC         	movff	??_sqrt+2,sqrt@frac+2
  7462  0041AC  C0C8  F0DD         	movff	??_sqrt+3,sqrt@frac+3
  7463                           
  7464                           ; BSR set to: 0
  7465  0041B0  0E01               	movlw	1
  7466  0041B2  0100               	movlb	0	; () banked
  7467  0041B4  15DA               	andwf	sqrt@frac& (0+255),w,b
  7468  0041B6  0100               	movlb	0	; () banked
  7469  0041B8  6FD0               	movwf	sqrt@grs& (0+255),b
  7470  0041BA  0E00               	movlw	0
  7471  0041BC  0100               	movlb	0	; () banked
  7472  0041BE  15DB               	andwf	(sqrt@frac+1)& (0+255),w,b
  7473  0041C0  0100               	movlb	0	; () banked
  7474  0041C2  6FD1               	movwf	(sqrt@grs+1)& (0+255),b
  7475  0041C4  0E00               	movlw	0
  7476  0041C6  0100               	movlb	0	; () banked
  7477  0041C8  15DC               	andwf	(sqrt@frac+2)& (0+255),w,b
  7478  0041CA  0100               	movlb	0	; () banked
  7479  0041CC  6FD2               	movwf	(sqrt@grs+2)& (0+255),b
  7480  0041CE  0E00               	movlw	0
  7481  0041D0  0100               	movlb	0	; () banked
  7482  0041D2  15DD               	andwf	(sqrt@frac+3)& (0+255),w,b
  7483  0041D4  0100               	movlb	0	; () banked
  7484  0041D6  6FD3               	movwf	(sqrt@grs+3)& (0+255),b
  7485                           
  7486                           ; BSR set to: 0
  7487  0041D8  C0DA  F0C5         	movff	sqrt@frac,??_sqrt
  7488  0041DC  C0DB  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7489  0041E0  C0DC  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7490  0041E4  C0DD  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7491  0041E8  0100               	movlb	0	; () banked
  7492  0041EA  90D8               	bcf	status,0,c
  7493  0041EC  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7494  0041EE  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7495  0041F0  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7496  0041F2  33C5               	rrcf	??_sqrt& (0+255),f,b
  7497  0041F4  C0C5  F0DA         	movff	??_sqrt,sqrt@frac
  7498  0041F8  C0C6  F0DB         	movff	??_sqrt+1,sqrt@frac+1
  7499  0041FC  C0C7  F0DC         	movff	??_sqrt+2,sqrt@frac+2
  7500  004200  C0C8  F0DD         	movff	??_sqrt+3,sqrt@frac+3
  7501  004204  0100               	movlb	0	; () banked
  7502  004206  51D0               	movf	sqrt@grs& (0+255),w,b
  7503  004208  0100               	movlb	0	; () banked
  7504  00420A  27DA               	addwf	sqrt@frac& (0+255),f,b
  7505  00420C  0100               	movlb	0	; () banked
  7506  00420E  51D1               	movf	(sqrt@grs+1)& (0+255),w,b
  7507  004210  0100               	movlb	0	; () banked
  7508  004212  23DB               	addwfc	(sqrt@frac+1)& (0+255),f,b
  7509  004214  0100               	movlb	0	; () banked
  7510  004216  51D2               	movf	(sqrt@grs+2)& (0+255),w,b
  7511  004218  0100               	movlb	0	; () banked
  7512  00421A  23DC               	addwfc	(sqrt@frac+2)& (0+255),f,b
  7513  00421C  0100               	movlb	0	; () banked
  7514  00421E  51D3               	movf	(sqrt@grs+3)& (0+255),w,b
  7515  004220  0100               	movlb	0	; () banked
  7516  004222  23DD               	addwfc	(sqrt@frac+3)& (0+255),f,b
  7517                           
  7518                           ; BSR set to: 0
  7519  004224  0100               	movlb	0	; () banked
  7520  004226  A1DD               	btfss	(sqrt@frac+3)& (0+255),0,b
  7521  004228  D019               	goto	l7697
  7522                           
  7523                           ; BSR set to: 0
  7524  00422A  C0DA  F0C5         	movff	sqrt@frac,??_sqrt
  7525  00422E  C0DB  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7526  004232  C0DC  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7527  004236  C0DD  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7528  00423A  0100               	movlb	0	; () banked
  7529  00423C  90D8               	bcf	status,0,c
  7530  00423E  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7531  004240  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7532  004242  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7533  004244  33C5               	rrcf	??_sqrt& (0+255),f,b
  7534  004246  C0C5  F0DA         	movff	??_sqrt,sqrt@frac
  7535  00424A  C0C6  F0DB         	movff	??_sqrt+1,sqrt@frac+1
  7536  00424E  C0C7  F0DC         	movff	??_sqrt+2,sqrt@frac+2
  7537  004252  C0C8  F0DD         	movff	??_sqrt+3,sqrt@frac+3
  7538  004256  0100               	movlb	0	; () banked
  7539  004258  4BD4               	infsnz	sqrt@exp& (0+255),f,b
  7540  00425A  2BD5               	incf	(sqrt@exp+1)& (0+255),f,b
  7541  00425C                     l7697:
  7542                           
  7543                           ; BSR set to: 0
  7544  00425C  0EFF               	movlw	255
  7545  00425E  0100               	movlb	0	; () banked
  7546  004260  15DA               	andwf	sqrt@frac& (0+255),w,b
  7547  004262  0100               	movlb	0	; () banked
  7548  004264  6FD6               	movwf	sqrt@root& (0+255),b
  7549  004266  0EFF               	movlw	255
  7550  004268  0100               	movlb	0	; () banked
  7551  00426A  15DB               	andwf	(sqrt@frac+1)& (0+255),w,b
  7552  00426C  0100               	movlb	0	; () banked
  7553  00426E  6FD7               	movwf	(sqrt@root+1)& (0+255),b
  7554  004270  0E7F               	movlw	127
  7555  004272  0100               	movlb	0	; () banked
  7556  004274  15DC               	andwf	(sqrt@frac+2)& (0+255),w,b
  7557  004276  0100               	movlb	0	; () banked
  7558  004278  6FD8               	movwf	(sqrt@root+2)& (0+255),b
  7559  00427A  0E00               	movlw	0
  7560  00427C  0100               	movlb	0	; () banked
  7561  00427E  15DD               	andwf	(sqrt@frac+3)& (0+255),w,b
  7562  004280  0100               	movlb	0	; () banked
  7563  004282  6FD9               	movwf	(sqrt@root+3)& (0+255),b
  7564                           
  7565                           ; BSR set to: 0
  7566  004284  C0D4  F0CF         	movff	sqrt@exp,sqrt@p
  7567                           
  7568                           ; BSR set to: 0
  7569  004288  0100               	movlb	0	; () banked
  7570  00428A  A1CF               	btfss	sqrt@p& (0+255),0,b
  7571  00428C  D002               	goto	l7705
  7572                           
  7573                           ; BSR set to: 0
  7574  00428E  0100               	movlb	0	; () banked
  7575  004290  8FD8               	bsf	(sqrt@root+2)& (0+255),7,b
  7576  004292                     l7705:
  7577                           
  7578                           ; BSR set to: 0
  7579  004292  0100               	movlb	0	; () banked
  7580  004294  90D8               	bcf	status,0,c
  7581  004296  31CF               	rrcf	sqrt@p& (0+255),w,b
  7582  004298  0100               	movlb	0	; () banked
  7583  00429A  6FD9               	movwf	(sqrt@root+3)& (0+255),b
  7584                           
  7585                           ; BSR set to: 0
  7586  00429C  0100               	movlb	0	; () banked
  7587  00429E  9FD9               	bcf	(sqrt@root+3)& (0+255),7,b
  7588                           
  7589                           ; BSR set to: 0
  7590  0042A0  C0D6  F0C1         	movff	sqrt@root,?_sqrt
  7591  0042A4  C0D7  F0C2         	movff	sqrt@root+1,?_sqrt+1
  7592  0042A8  C0D8  F0C3         	movff	sqrt@root+2,?_sqrt+2
  7593  0042AC  C0D9  F0C4         	movff	sqrt@root+3,?_sqrt+3
  7594  0042B0  0012               	return	
  7595  0042B2                     __end_of_sqrt:
  7596                           	opt stack 0
  7597                           tblptru	equ	0xFF8
  7598                           tblptrh	equ	0xFF7
  7599                           tblptrl	equ	0xFF6
  7600                           tablat	equ	0xFF5
  7601                           postinc0	equ	0xFEE
  7602                           wreg	equ	0xFE8
  7603                           postdec1	equ	0xFE5
  7604                           fsr1l	equ	0xFE1
  7605                           indf2	equ	0xFDF
  7606                           postinc2	equ	0xFDE
  7607                           postdec2	equ	0xFDD
  7608                           fsr2h	equ	0xFDA
  7609                           fsr2l	equ	0xFD9
  7610                           status	equ	0xFD8
  7611                           
  7612 ;; *************** function _atan *****************
  7613 ;; Defined at:
  7614 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\atan.c"
  7615 ;; Parameters:    Size  Location     Type
  7616 ;;  f               4  113[BANK0 ] unsigned char 
  7617 ;; Auto vars:     Size  Location     Type
  7618 ;;  val             4   13[BANK1 ] unsigned char 
  7619 ;;  val_squared     4    9[BANK1 ] unsigned char 
  7620 ;;  x               4    4[BANK1 ] unsigned char 
  7621 ;;  y               4    0[BANK1 ] unsigned char 
  7622 ;;  recip           1    8[BANK1 ] unsigned char 
  7623 ;; Return value:  Size  Location     Type
  7624 ;;                  4  113[BANK0 ] unsigned char 
  7625 ;; Registers used:
  7626 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7627 ;; Tracked objects:
  7628 ;;		On entry : 0/0
  7629 ;;		On exit  : 0/0
  7630 ;;		Unchanged: 0/0
  7631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7632 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7633 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  7634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7635 ;;      Totals:         0       4      17       0       0       0       0       0       0       0       0       0       
      +0       0
  7636 ;;Total ram usage:       21 bytes
  7637 ;; Hardware stack levels used:    1
  7638 ;; Hardware stack levels required when called:    6
  7639 ;; This function calls:
  7640 ;;		___fladd
  7641 ;;		___fldiv
  7642 ;;		___flge
  7643 ;;		___flmul
  7644 ;;		___flneg
  7645 ;;		_eval_poly
  7646 ;;		_fabs
  7647 ;; This function is called by:
  7648 ;;		_asin
  7649 ;; This function uses a non-reentrant model
  7650 ;;
  7651                           
  7652                           	psect	text18
  7653  0052A4                     __ptext18:
  7654                           	opt stack 0
  7655  0052A4                     _atan:
  7656                           	opt stack 21
  7657                           
  7658                           ;incstack = 0
  7659  0052A4  C0D1  F0C1         	movff	atan@f,fabs@d
  7660  0052A8  C0D2  F0C2         	movff	atan@f+1,fabs@d+1
  7661  0052AC  C0D3  F0C3         	movff	atan@f+2,fabs@d+2
  7662  0052B0  C0D4  F0C4         	movff	atan@f+3,fabs@d+3
  7663  0052B4  EC89  F032         	call	_fabs	;wreg free
  7664  0052B8  C0C1  F1B0         	movff	?_fabs,atan@val
  7665  0052BC  C0C2  F1B1         	movff	?_fabs+1,atan@val+1
  7666  0052C0  C0C3  F1B2         	movff	?_fabs+2,atan@val+2
  7667  0052C4  C0C4  F1B3         	movff	?_fabs+3,atan@val+3
  7668  0052C8  0101               	movlb	1	; () banked
  7669  0052CA  51B0               	movf	atan@val& (0+255),w,b
  7670  0052CC  0101               	movlb	1	; () banked
  7671  0052CE  11B1               	iorwf	(atan@val+1)& (0+255),w,b
  7672  0052D0  0101               	movlb	1	; () banked
  7673  0052D2  11B2               	iorwf	(atan@val+2)& (0+255),w,b
  7674  0052D4  0101               	movlb	1	; () banked
  7675  0052D6  11B3               	iorwf	(atan@val+3)& (0+255),w,b
  7676  0052D8  A4D8               	btfss	status,2,c
  7677  0052DA  D00A               	goto	l7725
  7678                           
  7679                           ; BSR set to: 1
  7680  0052DC  0E00               	movlw	0
  7681  0052DE  0100               	movlb	0	; () banked
  7682  0052E0  6FD1               	movwf	?_atan& (0+255),b
  7683  0052E2  0E00               	movlw	0
  7684  0052E4  6FD2               	movwf	(?_atan+1)& (0+255),b
  7685  0052E6  0E00               	movlw	0
  7686  0052E8  6FD3               	movwf	(?_atan+2)& (0+255),b
  7687  0052EA  0E00               	movlw	0
  7688  0052EC  6FD4               	movwf	(?_atan+3)& (0+255),b
  7689                           
  7690                           ; BSR set to: 0
  7691  0052EE  0012               	return	
  7692  0052F0                     l7725:
  7693  0052F0  0E00               	movlw	0
  7694  0052F2  0100               	movlb	0	; () banked
  7695  0052F4  6FC5               	movwf	___flge@ff1& (0+255),b
  7696  0052F6  0E00               	movlw	0
  7697  0052F8  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  7698  0052FA  0E80               	movlw	128
  7699  0052FC  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  7700  0052FE  0E3F               	movlw	63
  7701  005300  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  7702  005302  C1B0  F0C9         	movff	atan@val,___flge@ff2
  7703  005306  C1B1  F0CA         	movff	atan@val+1,___flge@ff2+1
  7704  00530A  C1B2  F0CB         	movff	atan@val+2,___flge@ff2+2
  7705  00530E  C1B3  F0CC         	movff	atan@val+3,___flge@ff2+3
  7706  005312  EC28  F02D         	call	___flge	;wreg free
  7707  005316  0100               	movlb	0	; () banked
  7708  005318  B0D8               	btfsc	status,0,c
  7709  00531A  D002               	goto	u10310
  7710  00531C  0E01               	movlw	1
  7711  00531E  D001               	goto	u10320
  7712  005320                     u10310:
  7713  005320  0E00               	movlw	0
  7714  005322                     u10320:
  7715  005322  0101               	movlb	1	; () banked
  7716  005324  6FAB               	movwf	atan@recip& (0+255),b
  7717  005326  0101               	movlb	1	; () banked
  7718  005328  51AB               	movf	atan@recip& (0+255),w,b
  7719  00532A  B4D8               	btfsc	status,2,c
  7720  00532C  D01B               	goto	l7729
  7721                           
  7722                           ; BSR set to: 1
  7723  00532E  0E00               	movlw	0
  7724  005330  0100               	movlb	0	; () banked
  7725  005332  6F77               	movwf	___fldiv@b& (0+255),b
  7726  005334  0E00               	movlw	0
  7727  005336  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  7728  005338  0E80               	movlw	128
  7729  00533A  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  7730  00533C  0E3F               	movlw	63
  7731  00533E  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  7732  005340  C1B0  F07B         	movff	atan@val,___fldiv@a
  7733  005344  C1B1  F07C         	movff	atan@val+1,___fldiv@a+1
  7734  005348  C1B2  F07D         	movff	atan@val+2,___fldiv@a+2
  7735  00534C  C1B3  F07E         	movff	atan@val+3,___fldiv@a+3
  7736  005350  EC59  F021         	call	___fldiv	;wreg free
  7737  005354  C077  F1B0         	movff	?___fldiv,atan@val
  7738  005358  C078  F1B1         	movff	?___fldiv+1,atan@val+1
  7739  00535C  C079  F1B2         	movff	?___fldiv+2,atan@val+2
  7740  005360  C07A  F1B3         	movff	?___fldiv+3,atan@val+3
  7741  005364                     l7729:
  7742  005364  C1B0  F090         	movff	atan@val,___flmul@b
  7743  005368  C1B1  F091         	movff	atan@val+1,___flmul@b+1
  7744  00536C  C1B2  F092         	movff	atan@val+2,___flmul@b+2
  7745  005370  C1B3  F093         	movff	atan@val+3,___flmul@b+3
  7746  005374  C1B0  F094         	movff	atan@val,___flmul@a
  7747  005378  C1B1  F095         	movff	atan@val+1,___flmul@a+1
  7748  00537C  C1B2  F096         	movff	atan@val+2,___flmul@a+2
  7749  005380  C1B3  F097         	movff	atan@val+3,___flmul@a+3
  7750  005384  ECD9  F01A         	call	___flmul	;wreg free
  7751  005388  C090  F1AC         	movff	?___flmul,atan@val_squared
  7752  00538C  C091  F1AD         	movff	?___flmul+1,atan@val_squared+1
  7753  005390  C092  F1AE         	movff	?___flmul+2,atan@val_squared+2
  7754  005394  C093  F1AF         	movff	?___flmul+3,atan@val_squared+3
  7755  005398  C1AC  F0BD         	movff	atan@val_squared,eval_poly@x
  7756  00539C  C1AD  F0BE         	movff	atan@val_squared+1,eval_poly@x+1
  7757  0053A0  C1AE  F0BF         	movff	atan@val_squared+2,eval_poly@x+2
  7758  0053A4  C1AF  F0C0         	movff	atan@val_squared+3,eval_poly@x+3
  7759  0053A8  0E19               	movlw	low atan@coeff_b
  7760  0053AA  0100               	movlb	0	; () banked
  7761  0053AC  6FC1               	movwf	eval_poly@d& (0+255),b
  7762  0053AE  0E0D               	movlw	high atan@coeff_b
  7763  0053B0  0100               	movlb	0	; () banked
  7764  0053B2  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  7765  0053B4  0E00               	movlw	0
  7766  0053B6  0100               	movlb	0	; () banked
  7767  0053B8  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  7768  0053BA  0E04               	movlw	4
  7769  0053BC  6FC3               	movwf	eval_poly@n& (0+255),b
  7770  0053BE  EC82  F02E         	call	_eval_poly	;wreg free
  7771  0053C2  C0BD  F1A3         	movff	?_eval_poly,atan@y
  7772  0053C6  C0BE  F1A4         	movff	?_eval_poly+1,atan@y+1
  7773  0053CA  C0BF  F1A5         	movff	?_eval_poly+2,atan@y+2
  7774  0053CE  C0C0  F1A6         	movff	?_eval_poly+3,atan@y+3
  7775  0053D2  C1AC  F0BD         	movff	atan@val_squared,eval_poly@x
  7776  0053D6  C1AD  F0BE         	movff	atan@val_squared+1,eval_poly@x+1
  7777  0053DA  C1AE  F0BF         	movff	atan@val_squared+2,eval_poly@x+2
  7778  0053DE  C1AF  F0C0         	movff	atan@val_squared+3,eval_poly@x+3
  7779  0053E2  0E01               	movlw	low atan@coeff_a
  7780  0053E4  0100               	movlb	0	; () banked
  7781  0053E6  6FC1               	movwf	eval_poly@d& (0+255),b
  7782  0053E8  0E0D               	movlw	high atan@coeff_a
  7783  0053EA  0100               	movlb	0	; () banked
  7784  0053EC  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  7785  0053EE  0E00               	movlw	0
  7786  0053F0  0100               	movlb	0	; () banked
  7787  0053F2  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  7788  0053F4  0E05               	movlw	5
  7789  0053F6  6FC3               	movwf	eval_poly@n& (0+255),b
  7790  0053F8  EC82  F02E         	call	_eval_poly	;wreg free
  7791  0053FC  C0BD  F1A7         	movff	?_eval_poly,atan@x
  7792  005400  C0BE  F1A8         	movff	?_eval_poly+1,atan@x+1
  7793  005404  C0BF  F1A9         	movff	?_eval_poly+2,atan@x+2
  7794  005408  C0C0  F1AA         	movff	?_eval_poly+3,atan@x+3
  7795  00540C  C1B0  F090         	movff	atan@val,___flmul@b
  7796  005410  C1B1  F091         	movff	atan@val+1,___flmul@b+1
  7797  005414  C1B2  F092         	movff	atan@val+2,___flmul@b+2
  7798  005418  C1B3  F093         	movff	atan@val+3,___flmul@b+3
  7799  00541C  C1A3  F07B         	movff	atan@y,___fldiv@a
  7800  005420  C1A4  F07C         	movff	atan@y+1,___fldiv@a+1
  7801  005424  C1A5  F07D         	movff	atan@y+2,___fldiv@a+2
  7802  005428  C1A6  F07E         	movff	atan@y+3,___fldiv@a+3
  7803  00542C  C1A7  F077         	movff	atan@x,___fldiv@b
  7804  005430  C1A8  F078         	movff	atan@x+1,___fldiv@b+1
  7805  005434  C1A9  F079         	movff	atan@x+2,___fldiv@b+2
  7806  005438  C1AA  F07A         	movff	atan@x+3,___fldiv@b+3
  7807  00543C  EC59  F021         	call	___fldiv	;wreg free
  7808  005440  C077  F094         	movff	?___fldiv,___flmul@a
  7809  005444  C078  F095         	movff	?___fldiv+1,___flmul@a+1
  7810  005448  C079  F096         	movff	?___fldiv+2,___flmul@a+2
  7811  00544C  C07A  F097         	movff	?___fldiv+3,___flmul@a+3
  7812  005450  ECD9  F01A         	call	___flmul	;wreg free
  7813  005454  C090  F1B0         	movff	?___flmul,atan@val
  7814  005458  C091  F1B1         	movff	?___flmul+1,atan@val+1
  7815  00545C  C092  F1B2         	movff	?___flmul+2,atan@val+2
  7816  005460  C093  F1B3         	movff	?___flmul+3,atan@val+3
  7817  005464  0101               	movlb	1	; () banked
  7818  005466  51AB               	movf	atan@recip& (0+255),w,b
  7819  005468  0101               	movlb	1	; () banked
  7820  00546A  B4D8               	btfsc	status,2,c
  7821  00546C  D025               	goto	l7741
  7822                           
  7823                           ; BSR set to: 1
  7824  00546E  C1B0  F0BD         	movff	atan@val,___flneg@f1
  7825  005472  C1B1  F0BE         	movff	atan@val+1,___flneg@f1+1
  7826  005476  C1B2  F0BF         	movff	atan@val+2,___flneg@f1+2
  7827  00547A  C1B3  F0C0         	movff	atan@val+3,___flneg@f1+3
  7828  00547E  ECA8  F032         	call	___flneg	;wreg free
  7829  005482  C0BD  F0A9         	movff	?___flneg,___fladd@b
  7830  005486  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  7831  00548A  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  7832  00548E  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  7833  005492  0EDB               	movlw	219
  7834  005494  0100               	movlb	0	; () banked
  7835  005496  6FAD               	movwf	___fladd@a& (0+255),b
  7836  005498  0E0F               	movlw	15
  7837  00549A  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  7838  00549C  0EC9               	movlw	201
  7839  00549E  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  7840  0054A0  0E3F               	movlw	63
  7841  0054A2  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  7842  0054A4  EC85  F018         	call	___fladd	;wreg free
  7843  0054A8  C0A9  F1B0         	movff	?___fladd,atan@val
  7844  0054AC  C0AA  F1B1         	movff	?___fladd+1,atan@val+1
  7845  0054B0  C0AB  F1B2         	movff	?___fladd+2,atan@val+2
  7846  0054B4  C0AC  F1B3         	movff	?___fladd+3,atan@val+3
  7847  0054B8                     l7741:
  7848  0054B8  0100               	movlb	0	; () banked
  7849  0054BA  BFD4               	btfsc	(atan@f+3)& (0+255),7,b
  7850  0054BC  D009               	goto	l7745
  7851                           
  7852                           ; BSR set to: 0
  7853  0054BE  C1B0  F0D1         	movff	atan@val,?_atan
  7854  0054C2  C1B1  F0D2         	movff	atan@val+1,?_atan+1
  7855  0054C6  C1B2  F0D3         	movff	atan@val+2,?_atan+2
  7856  0054CA  C1B3  F0D4         	movff	atan@val+3,?_atan+3
  7857  0054CE  0012               	return	
  7858  0054D0                     l7745:
  7859                           
  7860                           ; BSR set to: 0
  7861  0054D0  C1B0  F0BD         	movff	atan@val,___flneg@f1
  7862  0054D4  C1B1  F0BE         	movff	atan@val+1,___flneg@f1+1
  7863  0054D8  C1B2  F0BF         	movff	atan@val+2,___flneg@f1+2
  7864  0054DC  C1B3  F0C0         	movff	atan@val+3,___flneg@f1+3
  7865  0054E0  ECA8  F032         	call	___flneg	;wreg free
  7866  0054E4  C0BD  F0D1         	movff	?___flneg,?_atan
  7867  0054E8  C0BE  F0D2         	movff	?___flneg+1,?_atan+1
  7868  0054EC  C0BF  F0D3         	movff	?___flneg+2,?_atan+2
  7869  0054F0  C0C0  F0D4         	movff	?___flneg+3,?_atan+3
  7870  0054F4  0012               	return	
  7871  0054F6                     __end_of_atan:
  7872                           	opt stack 0
  7873                           tblptru	equ	0xFF8
  7874                           tblptrh	equ	0xFF7
  7875                           tblptrl	equ	0xFF6
  7876                           tablat	equ	0xFF5
  7877                           postinc0	equ	0xFEE
  7878                           wreg	equ	0xFE8
  7879                           postdec1	equ	0xFE5
  7880                           fsr1l	equ	0xFE1
  7881                           indf2	equ	0xFDF
  7882                           postinc2	equ	0xFDE
  7883                           postdec2	equ	0xFDD
  7884                           fsr2h	equ	0xFDA
  7885                           fsr2l	equ	0xFD9
  7886                           status	equ	0xFD8
  7887                           
  7888 ;; *************** function _fabs *****************
  7889 ;; Defined at:
  7890 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fabs.c"
  7891 ;; Parameters:    Size  Location     Type
  7892 ;;  d               4   97[BANK0 ] unsigned char 
  7893 ;; Auto vars:     Size  Location     Type
  7894 ;;		None
  7895 ;; Return value:  Size  Location     Type
  7896 ;;                  4   97[BANK0 ] unsigned char 
  7897 ;; Registers used:
  7898 ;;		wreg, status,2, status,0, cstack
  7899 ;; Tracked objects:
  7900 ;;		On entry : 0/0
  7901 ;;		On exit  : 0/0
  7902 ;;		Unchanged: 0/0
  7903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7904 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7907 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7908 ;;Total ram usage:        4 bytes
  7909 ;; Hardware stack levels used:    1
  7910 ;; Hardware stack levels required when called:    5
  7911 ;; This function calls:
  7912 ;;		___flneg
  7913 ;; This function is called by:
  7914 ;;		_asin
  7915 ;;		_atan
  7916 ;; This function uses a non-reentrant model
  7917 ;;
  7918                           
  7919                           	psect	text19
  7920  006512                     __ptext19:
  7921                           	opt stack 0
  7922  006512                     _fabs:
  7923                           	opt stack 22
  7924                           
  7925                           ;incstack = 0
  7926  006512  0100               	movlb	0	; () banked
  7927  006514  AFC4               	btfss	(fabs@d+3)& (0+255),7,b
  7928  006516  D013               	goto	l1095
  7929                           
  7930                           ; BSR set to: 0
  7931  006518  C0C1  F0BD         	movff	fabs@d,___flneg@f1
  7932  00651C  C0C2  F0BE         	movff	fabs@d+1,___flneg@f1+1
  7933  006520  C0C3  F0BF         	movff	fabs@d+2,___flneg@f1+2
  7934  006524  C0C4  F0C0         	movff	fabs@d+3,___flneg@f1+3
  7935  006528  ECA8  F032         	call	___flneg	;wreg free
  7936  00652C  C0BD  F0C1         	movff	?___flneg,?_fabs
  7937  006530  C0BE  F0C2         	movff	?___flneg+1,?_fabs+1
  7938  006534  C0BF  F0C3         	movff	?___flneg+2,?_fabs+2
  7939  006538  C0C0  F0C4         	movff	?___flneg+3,?_fabs+3
  7940  00653C  0012               	return	
  7941  00653E                     l1095:
  7942                           
  7943                           ; BSR set to: 0
  7944  00653E  C0C1  F0C1         	movff	fabs@d,?_fabs
  7945  006542  C0C2  F0C2         	movff	fabs@d+1,?_fabs+1
  7946  006546  C0C3  F0C3         	movff	fabs@d+2,?_fabs+2
  7947  00654A  C0C4  F0C4         	movff	fabs@d+3,?_fabs+3
  7948  00654E  0012               	return		;funcret
  7949  006550                     __end_of_fabs:
  7950                           	opt stack 0
  7951                           tblptru	equ	0xFF8
  7952                           tblptrh	equ	0xFF7
  7953                           tblptrl	equ	0xFF6
  7954                           tablat	equ	0xFF5
  7955                           postinc0	equ	0xFEE
  7956                           wreg	equ	0xFE8
  7957                           postdec1	equ	0xFE5
  7958                           fsr1l	equ	0xFE1
  7959                           indf2	equ	0xFDF
  7960                           postinc2	equ	0xFDE
  7961                           postdec2	equ	0xFDD
  7962                           fsr2h	equ	0xFDA
  7963                           fsr2l	equ	0xFD9
  7964                           status	equ	0xFD8
  7965                           
  7966 ;; *************** function ___flneg *****************
  7967 ;; Defined at:
  7968 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\flneg.c"
  7969 ;; Parameters:    Size  Location     Type
  7970 ;;  f1              4   93[BANK0 ] unsigned char 
  7971 ;; Auto vars:     Size  Location     Type
  7972 ;;		None
  7973 ;; Return value:  Size  Location     Type
  7974 ;;                  4   93[BANK0 ] unsigned char 
  7975 ;; Registers used:
  7976 ;;		wreg, status,2, status,0
  7977 ;; Tracked objects:
  7978 ;;		On entry : 0/0
  7979 ;;		On exit  : 0/0
  7980 ;;		Unchanged: 0/0
  7981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7982 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7985 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7986 ;;Total ram usage:        4 bytes
  7987 ;; Hardware stack levels used:    1
  7988 ;; Hardware stack levels required when called:    4
  7989 ;; This function calls:
  7990 ;;		Nothing
  7991 ;; This function is called by:
  7992 ;;		_park_routine
  7993 ;;		_matematica
  7994 ;;		_asin
  7995 ;;		_atan
  7996 ;;		_fabs
  7997 ;;		_sin
  7998 ;; This function uses a non-reentrant model
  7999 ;;
  8000                           
  8001                           	psect	text20
  8002  006550                     __ptext20:
  8003                           	opt stack 0
  8004  006550                     ___flneg:
  8005                           	opt stack 22
  8006                           
  8007                           ;incstack = 0
  8008  006550  0100               	movlb	0	; () banked
  8009  006552  51BD               	movf	___flneg@f1& (0+255),w,b
  8010  006554  0100               	movlb	0	; () banked
  8011  006556  11BE               	iorwf	(___flneg@f1+1)& (0+255),w,b
  8012  006558  0100               	movlb	0	; () banked
  8013  00655A  11BF               	iorwf	(___flneg@f1+2)& (0+255),w,b
  8014  00655C  0100               	movlb	0	; () banked
  8015  00655E  11C0               	iorwf	(___flneg@f1+3)& (0+255),w,b
  8016  006560  B4D8               	btfsc	status,2,c
  8017  006562  D009               	goto	l7089
  8018                           
  8019                           ; BSR set to: 0
  8020  006564  0E00               	movlw	0
  8021  006566  0100               	movlb	0	; () banked
  8022  006568  1BBD               	xorwf	___flneg@f1& (0+255),f,b
  8023  00656A  0E00               	movlw	0
  8024  00656C  1BBE               	xorwf	(___flneg@f1+1)& (0+255),f,b
  8025  00656E  0E00               	movlw	0
  8026  006570  1BBF               	xorwf	(___flneg@f1+2)& (0+255),f,b
  8027  006572  0E80               	movlw	128
  8028  006574  1BC0               	xorwf	(___flneg@f1+3)& (0+255),f,b
  8029  006576                     l7089:
  8030                           
  8031                           ; BSR set to: 0
  8032  006576  C0BD  F0BD         	movff	___flneg@f1,?___flneg
  8033  00657A  C0BE  F0BE         	movff	___flneg@f1+1,?___flneg+1
  8034  00657E  C0BF  F0BF         	movff	___flneg@f1+2,?___flneg+2
  8035  006582  C0C0  F0C0         	movff	___flneg@f1+3,?___flneg+3
  8036  006586  0012               	return	
  8037  006588                     __end_of___flneg:
  8038                           	opt stack 0
  8039                           tblptru	equ	0xFF8
  8040                           tblptrh	equ	0xFF7
  8041                           tblptrl	equ	0xFF6
  8042                           tablat	equ	0xFF5
  8043                           postinc0	equ	0xFEE
  8044                           wreg	equ	0xFE8
  8045                           postdec1	equ	0xFE5
  8046                           fsr1l	equ	0xFE1
  8047                           indf2	equ	0xFDF
  8048                           postinc2	equ	0xFDE
  8049                           postdec2	equ	0xFDD
  8050                           fsr2h	equ	0xFDA
  8051                           fsr2l	equ	0xFD9
  8052                           status	equ	0xFD8
  8053                           
  8054 ;; *************** function _eval_poly *****************
  8055 ;; Defined at:
  8056 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\evalpoly.c"
  8057 ;; Parameters:    Size  Location     Type
  8058 ;;  x               4   93[BANK0 ] unsigned char 
  8059 ;;  d               2   97[BANK0 ] PTR const 
  8060 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), atan@coeff_a(24), atan@coeff_b(20), 
  8061 ;;  n               2   99[BANK0 ] int 
  8062 ;; Auto vars:     Size  Location     Type
  8063 ;;  res             4  105[BANK0 ] int 
  8064 ;; Return value:  Size  Location     Type
  8065 ;;                  4   93[BANK0 ] int 
  8066 ;; Registers used:
  8067 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8068 ;; Tracked objects:
  8069 ;;		On entry : 0/0
  8070 ;;		On exit  : 0/0
  8071 ;;		Unchanged: 0/0
  8072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8073 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8074 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8075 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8076 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8077 ;;Total ram usage:       16 bytes
  8078 ;; Hardware stack levels used:    1
  8079 ;; Hardware stack levels required when called:    5
  8080 ;; This function calls:
  8081 ;;		___fladd
  8082 ;;		___flmul
  8083 ;; This function is called by:
  8084 ;;		_atan
  8085 ;;		_sin
  8086 ;; This function uses a non-reentrant model
  8087 ;;
  8088                           
  8089                           	psect	text21
  8090  005D04                     __ptext21:
  8091                           	opt stack 0
  8092  005D04                     _eval_poly:
  8093                           	opt stack 21
  8094                           
  8095                           ; BSR set to: 0
  8096                           ;incstack = 0
  8097  005D04  C0C3  F0C5         	movff	eval_poly@n,??_eval_poly
  8098  005D08  C0C4  F0C6         	movff	eval_poly@n+1,??_eval_poly+1
  8099  005D0C  0100               	movlb	0	; () banked
  8100  005D0E  90D8               	bcf	status,0,c
  8101  005D10  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8102  005D12  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8103  005D14  0100               	movlb	0	; () banked
  8104  005D16  90D8               	bcf	status,0,c
  8105  005D18  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8106  005D1A  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8107  005D1C  C0C1  F0C7         	movff	eval_poly@d,??_eval_poly+2
  8108  005D20  C0C2  F0C8         	movff	eval_poly@d+1,??_eval_poly+3
  8109  005D24  0100               	movlb	0	; () banked
  8110  005D26  51C5               	movf	??_eval_poly& (0+255),w,b
  8111  005D28  0100               	movlb	0	; () banked
  8112  005D2A  27C7               	addwf	(??_eval_poly+2)& (0+255),f,b
  8113  005D2C  0100               	movlb	0	; () banked
  8114  005D2E  51C6               	movf	(??_eval_poly+1)& (0+255),w,b
  8115  005D30  0100               	movlb	0	; () banked
  8116  005D32  23C8               	addwfc	(??_eval_poly+3)& (0+255),f,b
  8117  005D34  C0C7  FFF6         	movff	??_eval_poly+2,tblptrl
  8118  005D38  C0C8  FFF7         	movff	??_eval_poly+3,tblptrh
  8119  005D3C                     	if	0	;tblptru may be non-zero
  8120  005D3C                     	endif
  8121  005D3C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8122  005D3C  0E00               	movlw	low (__mediumconst shr (0+16))
  8123  005D3E  6EF8               	movwf	tblptru,c
  8124  005D40                     	endif
  8125  005D40  0009               	tblrd		*+
  8126  005D42  CFF5 F0C9          	movff	tablat,eval_poly@res
  8127  005D46  0009               	tblrd		*+
  8128  005D48  CFF5 F0CA          	movff	tablat,eval_poly@res+1
  8129  005D4C  0009               	tblrd		*+
  8130  005D4E  CFF5 F0CB          	movff	tablat,eval_poly@res+2
  8131  005D52  000A               	tblrd		*-
  8132  005D54  CFF5 F0CC          	movff	tablat,eval_poly@res+3
  8133  005D58  D052               	goto	l7347
  8134  005D5A                     l7345:
  8135                           
  8136                           ; BSR set to: 0
  8137  005D5A  C0C9  F094         	movff	eval_poly@res,___flmul@a
  8138  005D5E  C0CA  F095         	movff	eval_poly@res+1,___flmul@a+1
  8139  005D62  C0CB  F096         	movff	eval_poly@res+2,___flmul@a+2
  8140  005D66  C0CC  F097         	movff	eval_poly@res+3,___flmul@a+3
  8141  005D6A  C0BD  F090         	movff	eval_poly@x,___flmul@b
  8142  005D6E  C0BE  F091         	movff	eval_poly@x+1,___flmul@b+1
  8143  005D72  C0BF  F092         	movff	eval_poly@x+2,___flmul@b+2
  8144  005D76  C0C0  F093         	movff	eval_poly@x+3,___flmul@b+3
  8145  005D7A  ECD9  F01A         	call	___flmul	;wreg free
  8146  005D7E  C090  F0A9         	movff	?___flmul,___fladd@b
  8147  005D82  C091  F0AA         	movff	?___flmul+1,___fladd@b+1
  8148  005D86  C092  F0AB         	movff	?___flmul+2,___fladd@b+2
  8149  005D8A  C093  F0AC         	movff	?___flmul+3,___fladd@b+3
  8150  005D8E  0100               	movlb	0	; () banked
  8151  005D90  07C3               	decf	eval_poly@n& (0+255),f,b
  8152  005D92  A0D8               	btfss	status,0,c
  8153  005D94  07C4               	decf	(eval_poly@n+1)& (0+255),f,b
  8154  005D96  C0C3  F0C5         	movff	eval_poly@n,??_eval_poly
  8155  005D9A  C0C4  F0C6         	movff	eval_poly@n+1,??_eval_poly+1
  8156  005D9E  0100               	movlb	0	; () banked
  8157  005DA0  90D8               	bcf	status,0,c
  8158  005DA2  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8159  005DA4  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8160  005DA6  0100               	movlb	0	; () banked
  8161  005DA8  90D8               	bcf	status,0,c
  8162  005DAA  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8163  005DAC  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8164  005DAE  C0C1  F0C7         	movff	eval_poly@d,??_eval_poly+2
  8165  005DB2  C0C2  F0C8         	movff	eval_poly@d+1,??_eval_poly+3
  8166  005DB6  0100               	movlb	0	; () banked
  8167  005DB8  51C5               	movf	??_eval_poly& (0+255),w,b
  8168  005DBA  0100               	movlb	0	; () banked
  8169  005DBC  27C7               	addwf	(??_eval_poly+2)& (0+255),f,b
  8170  005DBE  0100               	movlb	0	; () banked
  8171  005DC0  51C6               	movf	(??_eval_poly+1)& (0+255),w,b
  8172  005DC2  0100               	movlb	0	; () banked
  8173  005DC4  23C8               	addwfc	(??_eval_poly+3)& (0+255),f,b
  8174  005DC6  C0C7  FFF6         	movff	??_eval_poly+2,tblptrl
  8175  005DCA  C0C8  FFF7         	movff	??_eval_poly+3,tblptrh
  8176  005DCE                     	if	0	;tblptru may be non-zero
  8177  005DCE                     	endif
  8178  005DCE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8179  005DCE  0E00               	movlw	low (__mediumconst shr (0+16))
  8180  005DD0  6EF8               	movwf	tblptru,c
  8181  005DD2                     	endif
  8182  005DD2  0009               	tblrd		*+
  8183  005DD4  CFF5 F0AD          	movff	tablat,___fladd@a
  8184  005DD8  0009               	tblrd		*+
  8185  005DDA  CFF5 F0AE          	movff	tablat,___fladd@a+1
  8186  005DDE  0009               	tblrd		*+
  8187  005DE0  CFF5 F0AF          	movff	tablat,___fladd@a+2
  8188  005DE4  000A               	tblrd		*-
  8189  005DE6  CFF5 F0B0          	movff	tablat,___fladd@a+3
  8190  005DEA  EC85  F018         	call	___fladd	;wreg free
  8191  005DEE  C0A9  F0C9         	movff	?___fladd,eval_poly@res
  8192  005DF2  C0AA  F0CA         	movff	?___fladd+1,eval_poly@res+1
  8193  005DF6  C0AB  F0CB         	movff	?___fladd+2,eval_poly@res+2
  8194  005DFA  C0AC  F0CC         	movff	?___fladd+3,eval_poly@res+3
  8195  005DFE                     l7347:
  8196  005DFE  0100               	movlb	0	; () banked
  8197  005E00  51C3               	movf	eval_poly@n& (0+255),w,b
  8198  005E02  0100               	movlb	0	; () banked
  8199  005E04  11C4               	iorwf	(eval_poly@n+1)& (0+255),w,b
  8200  005E06  A4D8               	btfss	status,2,c
  8201  005E08  D7A8               	goto	l7345
  8202                           
  8203                           ; BSR set to: 0
  8204  005E0A  C0C9  F0BD         	movff	eval_poly@res,?_eval_poly
  8205  005E0E  C0CA  F0BE         	movff	eval_poly@res+1,?_eval_poly+1
  8206  005E12  C0CB  F0BF         	movff	eval_poly@res+2,?_eval_poly+2
  8207  005E16  C0CC  F0C0         	movff	eval_poly@res+3,?_eval_poly+3
  8208                           
  8209                           ; BSR set to: 0
  8210  005E1A  0012               	return		;funcret
  8211  005E1C                     __end_of_eval_poly:
  8212                           	opt stack 0
  8213                           tblptru	equ	0xFF8
  8214                           tblptrh	equ	0xFF7
  8215                           tblptrl	equ	0xFF6
  8216                           tablat	equ	0xFF5
  8217                           postinc0	equ	0xFEE
  8218                           wreg	equ	0xFE8
  8219                           postdec1	equ	0xFE5
  8220                           fsr1l	equ	0xFE1
  8221                           indf2	equ	0xFDF
  8222                           postinc2	equ	0xFDE
  8223                           postdec2	equ	0xFDD
  8224                           fsr2h	equ	0xFDA
  8225                           fsr2l	equ	0xFD9
  8226                           status	equ	0xFD8
  8227                           
  8228 ;; *************** function ___flmul *****************
  8229 ;; Defined at:
  8230 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcmul.c"
  8231 ;; Parameters:    Size  Location     Type
  8232 ;;  b               4   48[BANK0 ] int 
  8233 ;;  a               4   52[BANK0 ] int 
  8234 ;; Auto vars:     Size  Location     Type
  8235 ;;  prod            4   67[BANK0 ] struct .
  8236 ;;  grs             4   62[BANK0 ] unsigned long 
  8237 ;;  temp            2   71[BANK0 ] struct .
  8238 ;;  bexp            1   66[BANK0 ] unsigned char 
  8239 ;;  aexp            1   61[BANK0 ] unsigned char 
  8240 ;;  sign            1   60[BANK0 ] unsigned char 
  8241 ;; Return value:  Size  Location     Type
  8242 ;;                  4   48[BANK0 ] unsigned char 
  8243 ;; Registers used:
  8244 ;;		wreg, status,2, status,0, prodl, prodh
  8245 ;; Tracked objects:
  8246 ;;		On entry : 0/0
  8247 ;;		On exit  : 0/0
  8248 ;;		Unchanged: 0/0
  8249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8250 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8251 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8252 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8253 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8254 ;;Total ram usage:       25 bytes
  8255 ;; Hardware stack levels used:    1
  8256 ;; Hardware stack levels required when called:    4
  8257 ;; This function calls:
  8258 ;;		Nothing
  8259 ;; This function is called by:
  8260 ;;		_parallelo
  8261 ;;		_matematica
  8262 ;;		_asin
  8263 ;;		_atan
  8264 ;;		_eval_poly
  8265 ;;		_sin
  8266 ;; This function uses a non-reentrant model
  8267 ;;
  8268                           
  8269                           	psect	text22
  8270  0035B2                     __ptext22:
  8271                           	opt stack 0
  8272  0035B2                     ___flmul:
  8273                           	opt stack 21
  8274                           
  8275                           ; BSR set to: 0
  8276                           ;incstack = 0
  8277  0035B2  0100               	movlb	0	; () banked
  8278  0035B4  5193               	movf	(___flmul@b+3)& (0+255),w,b
  8279  0035B6  0B80               	andlw	128
  8280  0035B8  0100               	movlb	0	; () banked
  8281  0035BA  6F9C               	movwf	___flmul@sign& (0+255),b
  8282  0035BC  0100               	movlb	0	; () banked
  8283  0035BE  5193               	movf	(___flmul@b+3)& (0+255),w,b
  8284  0035C0  2593               	addwf	(___flmul@b+3)& (0+255),w,b
  8285  0035C2  0100               	movlb	0	; () banked
  8286  0035C4  6FA2               	movwf	___flmul@bexp& (0+255),b
  8287                           
  8288                           ; BSR set to: 0
  8289  0035C6  0100               	movlb	0	; () banked
  8290  0035C8  AF92               	btfss	(___flmul@b+2)& (0+255),7,b
  8291  0035CA  D002               	goto	l6939
  8292                           
  8293                           ; BSR set to: 0
  8294  0035CC  0100               	movlb	0	; () banked
  8295  0035CE  81A2               	bsf	___flmul@bexp& (0+255),0,b
  8296  0035D0                     l6939:
  8297                           
  8298                           ; BSR set to: 0
  8299  0035D0  0100               	movlb	0	; () banked
  8300  0035D2  51A2               	movf	___flmul@bexp& (0+255),w,b
  8301  0035D4  0100               	movlb	0	; () banked
  8302  0035D6  B4D8               	btfsc	status,2,c
  8303  0035D8  D010               	goto	l6947
  8304                           
  8305                           ; BSR set to: 0
  8306  0035DA  0100               	movlb	0	; () banked
  8307  0035DC  29A2               	incf	___flmul@bexp& (0+255),w,b
  8308  0035DE  A4D8               	btfss	status,2,c
  8309  0035E0  D009               	goto	l6945
  8310                           
  8311                           ; BSR set to: 0
  8312  0035E2  0E00               	movlw	0
  8313  0035E4  0100               	movlb	0	; () banked
  8314  0035E6  6F90               	movwf	___flmul@b& (0+255),b
  8315  0035E8  0E00               	movlw	0
  8316  0035EA  6F91               	movwf	(___flmul@b+1)& (0+255),b
  8317  0035EC  0E00               	movlw	0
  8318  0035EE  6F92               	movwf	(___flmul@b+2)& (0+255),b
  8319  0035F0  0E00               	movlw	0
  8320  0035F2  6F93               	movwf	(___flmul@b+3)& (0+255),b
  8321  0035F4                     l6945:
  8322                           
  8323                           ; BSR set to: 0
  8324  0035F4  0100               	movlb	0	; () banked
  8325  0035F6  8F92               	bsf	(___flmul@b+2)& (0+255),7,b
  8326  0035F8  D009               	goto	l6949
  8327  0035FA                     l6947:
  8328                           
  8329                           ; BSR set to: 0
  8330  0035FA  0E00               	movlw	0
  8331  0035FC  0100               	movlb	0	; () banked
  8332  0035FE  6F90               	movwf	___flmul@b& (0+255),b
  8333  003600  0E00               	movlw	0
  8334  003602  6F91               	movwf	(___flmul@b+1)& (0+255),b
  8335  003604  0E00               	movlw	0
  8336  003606  6F92               	movwf	(___flmul@b+2)& (0+255),b
  8337  003608  0E00               	movlw	0
  8338  00360A  6F93               	movwf	(___flmul@b+3)& (0+255),b
  8339  00360C                     l6949:
  8340                           
  8341                           ; BSR set to: 0
  8342  00360C  0100               	movlb	0	; () banked
  8343  00360E  5197               	movf	(___flmul@a+3)& (0+255),w,b
  8344  003610  0B80               	andlw	128
  8345  003612  0100               	movlb	0	; () banked
  8346  003614  1B9C               	xorwf	___flmul@sign& (0+255),f,b
  8347                           
  8348                           ; BSR set to: 0
  8349  003616  0100               	movlb	0	; () banked
  8350  003618  5197               	movf	(___flmul@a+3)& (0+255),w,b
  8351  00361A  2597               	addwf	(___flmul@a+3)& (0+255),w,b
  8352  00361C  0100               	movlb	0	; () banked
  8353  00361E  6F9D               	movwf	___flmul@aexp& (0+255),b
  8354                           
  8355                           ; BSR set to: 0
  8356  003620  0100               	movlb	0	; () banked
  8357  003622  AF96               	btfss	(___flmul@a+2)& (0+255),7,b
  8358  003624  D002               	goto	l6957
  8359                           
  8360                           ; BSR set to: 0
  8361  003626  0100               	movlb	0	; () banked
  8362  003628  819D               	bsf	___flmul@aexp& (0+255),0,b
  8363  00362A                     l6957:
  8364                           
  8365                           ; BSR set to: 0
  8366  00362A  0100               	movlb	0	; () banked
  8367  00362C  519D               	movf	___flmul@aexp& (0+255),w,b
  8368  00362E  0100               	movlb	0	; () banked
  8369  003630  B4D8               	btfsc	status,2,c
  8370  003632  D010               	goto	l6965
  8371                           
  8372                           ; BSR set to: 0
  8373  003634  0100               	movlb	0	; () banked
  8374  003636  299D               	incf	___flmul@aexp& (0+255),w,b
  8375  003638  A4D8               	btfss	status,2,c
  8376  00363A  D009               	goto	l6963
  8377                           
  8378                           ; BSR set to: 0
  8379  00363C  0E00               	movlw	0
  8380  00363E  0100               	movlb	0	; () banked
  8381  003640  6F94               	movwf	___flmul@a& (0+255),b
  8382  003642  0E00               	movlw	0
  8383  003644  6F95               	movwf	(___flmul@a+1)& (0+255),b
  8384  003646  0E00               	movlw	0
  8385  003648  6F96               	movwf	(___flmul@a+2)& (0+255),b
  8386  00364A  0E00               	movlw	0
  8387  00364C  6F97               	movwf	(___flmul@a+3)& (0+255),b
  8388  00364E                     l6963:
  8389                           
  8390                           ; BSR set to: 0
  8391  00364E  0100               	movlb	0	; () banked
  8392  003650  8F96               	bsf	(___flmul@a+2)& (0+255),7,b
  8393  003652  D009               	goto	l1440
  8394  003654                     l6965:
  8395                           
  8396                           ; BSR set to: 0
  8397  003654  0E00               	movlw	0
  8398  003656  0100               	movlb	0	; () banked
  8399  003658  6F94               	movwf	___flmul@a& (0+255),b
  8400  00365A  0E00               	movlw	0
  8401  00365C  6F95               	movwf	(___flmul@a+1)& (0+255),b
  8402  00365E  0E00               	movlw	0
  8403  003660  6F96               	movwf	(___flmul@a+2)& (0+255),b
  8404  003662  0E00               	movlw	0
  8405  003664  6F97               	movwf	(___flmul@a+3)& (0+255),b
  8406  003666                     l1440:
  8407                           
  8408                           ; BSR set to: 0
  8409  003666  0100               	movlb	0	; () banked
  8410  003668  519D               	movf	___flmul@aexp& (0+255),w,b
  8411  00366A  0100               	movlb	0	; () banked
  8412  00366C  B4D8               	btfsc	status,2,c
  8413  00366E  D005               	goto	l6969
  8414                           
  8415                           ; BSR set to: 0
  8416  003670  0100               	movlb	0	; () banked
  8417  003672  51A2               	movf	___flmul@bexp& (0+255),w,b
  8418  003674  0100               	movlb	0	; () banked
  8419  003676  A4D8               	btfss	status,2,c
  8420  003678  D00A               	goto	l6973
  8421  00367A                     l6969:
  8422                           
  8423                           ; BSR set to: 0
  8424  00367A  0E00               	movlw	0
  8425  00367C  0100               	movlb	0	; () banked
  8426  00367E  6F90               	movwf	?___flmul& (0+255),b
  8427  003680  0E00               	movlw	0
  8428  003682  6F91               	movwf	(?___flmul+1)& (0+255),b
  8429  003684  0E00               	movlw	0
  8430  003686  6F92               	movwf	(?___flmul+2)& (0+255),b
  8431  003688  0E00               	movlw	0
  8432  00368A  6F93               	movwf	(?___flmul+3)& (0+255),b
  8433                           
  8434                           ; BSR set to: 0
  8435  00368C  0012               	return	
  8436  00368E                     l6973:
  8437                           
  8438                           ; BSR set to: 0
  8439  00368E  0100               	movlb	0	; () banked
  8440  003690  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8441  003692  0100               	movlb	0	; () banked
  8442  003694  0390               	mulwf	___flmul@b& (0+255),b
  8443  003696  CFF3 F0A7          	movff	prodl,___flmul@temp
  8444  00369A  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8445                           
  8446                           ; BSR set to: 0
  8447  00369E  0100               	movlb	0	; () banked
  8448  0036A0  51A7               	movf	___flmul@temp& (0+255),w,b
  8449  0036A2  0100               	movlb	0	; () banked
  8450  0036A4  6F9E               	movwf	___flmul@grs& (0+255),b
  8451  0036A6  6B9F               	clrf	(___flmul@grs+1)& (0+255),b
  8452  0036A8  6BA0               	clrf	(___flmul@grs+2)& (0+255),b
  8453  0036AA  6BA1               	clrf	(___flmul@grs+3)& (0+255),b
  8454                           
  8455                           ; BSR set to: 0
  8456  0036AC  0100               	movlb	0	; () banked
  8457  0036AE  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8458  0036B0  0100               	movlb	0	; () banked
  8459  0036B2  6FA3               	movwf	___flmul@prod& (0+255),b
  8460  0036B4  6BA4               	clrf	(___flmul@prod+1)& (0+255),b
  8461  0036B6  6BA5               	clrf	(___flmul@prod+2)& (0+255),b
  8462  0036B8  6BA6               	clrf	(___flmul@prod+3)& (0+255),b
  8463  0036BA  0100               	movlb	0	; () banked
  8464  0036BC  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8465  0036BE  0100               	movlb	0	; () banked
  8466  0036C0  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8467  0036C2  CFF3 F0A7          	movff	prodl,___flmul@temp
  8468  0036C6  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8469                           
  8470                           ; BSR set to: 0
  8471  0036CA  0100               	movlb	0	; () banked
  8472  0036CC  51A7               	movf	___flmul@temp& (0+255),w,b
  8473  0036CE  0100               	movlb	0	; () banked
  8474  0036D0  279E               	addwf	___flmul@grs& (0+255),f,b
  8475  0036D2  0E00               	movlw	0
  8476  0036D4  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8477  0036D6  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8478  0036D8  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8479                           
  8480                           ; BSR set to: 0
  8481  0036DA  0100               	movlb	0	; () banked
  8482  0036DC  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8483  0036DE  0100               	movlb	0	; () banked
  8484  0036E0  27A3               	addwf	___flmul@prod& (0+255),f,b
  8485  0036E2  0E00               	movlw	0
  8486  0036E4  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8487  0036E6  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8488  0036E8  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8489  0036EA  0100               	movlb	0	; () banked
  8490  0036EC  5194               	movf	___flmul@a& (0+255),w,b
  8491  0036EE  0100               	movlb	0	; () banked
  8492  0036F0  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8493  0036F2  CFF3 F0A7          	movff	prodl,___flmul@temp
  8494  0036F6  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8495                           
  8496                           ; BSR set to: 0
  8497  0036FA  0100               	movlb	0	; () banked
  8498  0036FC  51A7               	movf	___flmul@temp& (0+255),w,b
  8499  0036FE  0100               	movlb	0	; () banked
  8500  003700  279E               	addwf	___flmul@grs& (0+255),f,b
  8501  003702  0E00               	movlw	0
  8502  003704  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8503  003706  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8504  003708  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8505                           
  8506                           ; BSR set to: 0
  8507  00370A  0100               	movlb	0	; () banked
  8508  00370C  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8509  00370E  0100               	movlb	0	; () banked
  8510  003710  27A3               	addwf	___flmul@prod& (0+255),f,b
  8511  003712  0E00               	movlw	0
  8512  003714  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8513  003716  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8514  003718  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8515                           
  8516                           ; BSR set to: 0
  8517  00371A  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8518  00371E  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8519  003722  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8520  003726  0100               	movlb	0	; () banked
  8521  003728  6B9E               	clrf	___flmul@grs& (0+255),b
  8522                           
  8523                           ; BSR set to: 0
  8524  00372A  0100               	movlb	0	; () banked
  8525  00372C  5194               	movf	___flmul@a& (0+255),w,b
  8526  00372E  0100               	movlb	0	; () banked
  8527  003730  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8528  003732  CFF3 F0A7          	movff	prodl,___flmul@temp
  8529  003736  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8530                           
  8531                           ; BSR set to: 0
  8532  00373A  0100               	movlb	0	; () banked
  8533  00373C  51A7               	movf	___flmul@temp& (0+255),w,b
  8534  00373E  0100               	movlb	0	; () banked
  8535  003740  279E               	addwf	___flmul@grs& (0+255),f,b
  8536  003742  0100               	movlb	0	; () banked
  8537  003744  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8538  003746  0100               	movlb	0	; () banked
  8539  003748  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8540  00374A  0E00               	movlw	0
  8541  00374C  0100               	movlb	0	; () banked
  8542  00374E  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8543  003750  0E00               	movlw	0
  8544  003752  0100               	movlb	0	; () banked
  8545  003754  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8546                           
  8547                           ; BSR set to: 0
  8548  003756  0100               	movlb	0	; () banked
  8549  003758  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8550  00375A  0100               	movlb	0	; () banked
  8551  00375C  0390               	mulwf	___flmul@b& (0+255),b
  8552  00375E  CFF3 F0A7          	movff	prodl,___flmul@temp
  8553  003762  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8554                           
  8555                           ; BSR set to: 0
  8556  003766  0100               	movlb	0	; () banked
  8557  003768  51A7               	movf	___flmul@temp& (0+255),w,b
  8558  00376A  0100               	movlb	0	; () banked
  8559  00376C  279E               	addwf	___flmul@grs& (0+255),f,b
  8560  00376E  0100               	movlb	0	; () banked
  8561  003770  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8562  003772  0100               	movlb	0	; () banked
  8563  003774  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8564  003776  0E00               	movlw	0
  8565  003778  0100               	movlb	0	; () banked
  8566  00377A  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8567  00377C  0E00               	movlw	0
  8568  00377E  0100               	movlb	0	; () banked
  8569  003780  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8570                           
  8571                           ; BSR set to: 0
  8572  003782  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8573  003786  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8574  00378A  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8575  00378E  0100               	movlb	0	; () banked
  8576  003790  6B9E               	clrf	___flmul@grs& (0+255),b
  8577  003792  0100               	movlb	0	; () banked
  8578  003794  5194               	movf	___flmul@a& (0+255),w,b
  8579  003796  0100               	movlb	0	; () banked
  8580  003798  0390               	mulwf	___flmul@b& (0+255),b
  8581  00379A  CFF3 F0A7          	movff	prodl,___flmul@temp
  8582  00379E  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8583                           
  8584                           ; BSR set to: 0
  8585  0037A2  0100               	movlb	0	; () banked
  8586  0037A4  51A7               	movf	___flmul@temp& (0+255),w,b
  8587  0037A6  0100               	movlb	0	; () banked
  8588  0037A8  279E               	addwf	___flmul@grs& (0+255),f,b
  8589  0037AA  0100               	movlb	0	; () banked
  8590  0037AC  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8591  0037AE  0100               	movlb	0	; () banked
  8592  0037B0  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8593  0037B2  0E00               	movlw	0
  8594  0037B4  0100               	movlb	0	; () banked
  8595  0037B6  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8596  0037B8  0E00               	movlw	0
  8597  0037BA  0100               	movlb	0	; () banked
  8598  0037BC  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8599                           
  8600                           ; BSR set to: 0
  8601  0037BE  0100               	movlb	0	; () banked
  8602  0037C0  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8603  0037C2  0100               	movlb	0	; () banked
  8604  0037C4  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8605  0037C6  CFF3 F0A7          	movff	prodl,___flmul@temp
  8606  0037CA  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8607  0037CE  0100               	movlb	0	; () banked
  8608  0037D0  51A7               	movf	___flmul@temp& (0+255),w,b
  8609  0037D2  0100               	movlb	0	; () banked
  8610  0037D4  27A3               	addwf	___flmul@prod& (0+255),f,b
  8611  0037D6  0100               	movlb	0	; () banked
  8612  0037D8  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8613  0037DA  0100               	movlb	0	; () banked
  8614  0037DC  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8615  0037DE  0E00               	movlw	0
  8616  0037E0  0100               	movlb	0	; () banked
  8617  0037E2  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8618  0037E4  0E00               	movlw	0
  8619  0037E6  0100               	movlb	0	; () banked
  8620  0037E8  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8621                           
  8622                           ; BSR set to: 0
  8623  0037EA  0100               	movlb	0	; () banked
  8624  0037EC  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8625  0037EE  0100               	movlb	0	; () banked
  8626  0037F0  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8627  0037F2  CFF3 F0A7          	movff	prodl,___flmul@temp
  8628  0037F6  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8629                           
  8630                           ; BSR set to: 0
  8631  0037FA  0100               	movlb	0	; () banked
  8632  0037FC  51A7               	movf	___flmul@temp& (0+255),w,b
  8633  0037FE  0100               	movlb	0	; () banked
  8634  003800  27A3               	addwf	___flmul@prod& (0+255),f,b
  8635  003802  0100               	movlb	0	; () banked
  8636  003804  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8637  003806  0100               	movlb	0	; () banked
  8638  003808  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8639  00380A  0E00               	movlw	0
  8640  00380C  0100               	movlb	0	; () banked
  8641  00380E  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8642  003810  0E00               	movlw	0
  8643  003812  0100               	movlb	0	; () banked
  8644  003814  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8645  003816  0100               	movlb	0	; () banked
  8646  003818  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8647  00381A  0100               	movlb	0	; () banked
  8648  00381C  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8649  00381E  CFF3 F0A7          	movff	prodl,___flmul@temp
  8650  003822  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8651                           
  8652                           ; BSR set to: 0
  8653  003826  0100               	movlb	0	; () banked
  8654  003828  51A7               	movf	___flmul@temp& (0+255),w,b
  8655  00382A  0100               	movlb	0	; () banked
  8656  00382C  6F98               	movwf	??___flmul& (0+255),b
  8657  00382E  0100               	movlb	0	; () banked
  8658  003830  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8659  003832  0100               	movlb	0	; () banked
  8660  003834  6F99               	movwf	(??___flmul+1)& (0+255),b
  8661  003836  0100               	movlb	0	; () banked
  8662  003838  6B9A               	clrf	(??___flmul+2)& (0+255),b
  8663  00383A  0100               	movlb	0	; () banked
  8664  00383C  6B9B               	clrf	(??___flmul+3)& (0+255),b
  8665  00383E  C09A  F09B         	movff	??___flmul+2,??___flmul+3
  8666  003842  C099  F09A         	movff	??___flmul+1,??___flmul+2
  8667  003846  C098  F099         	movff	??___flmul,??___flmul+1
  8668  00384A  0100               	movlb	0	; () banked
  8669  00384C  6B98               	clrf	??___flmul& (0+255),b
  8670  00384E  0100               	movlb	0	; () banked
  8671  003850  5198               	movf	??___flmul& (0+255),w,b
  8672  003852  0100               	movlb	0	; () banked
  8673  003854  27A3               	addwf	___flmul@prod& (0+255),f,b
  8674  003856  0100               	movlb	0	; () banked
  8675  003858  5199               	movf	(??___flmul+1)& (0+255),w,b
  8676  00385A  0100               	movlb	0	; () banked
  8677  00385C  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8678  00385E  0100               	movlb	0	; () banked
  8679  003860  519A               	movf	(??___flmul+2)& (0+255),w,b
  8680  003862  0100               	movlb	0	; () banked
  8681  003864  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8682  003866  0100               	movlb	0	; () banked
  8683  003868  519B               	movf	(??___flmul+3)& (0+255),w,b
  8684  00386A  0100               	movlb	0	; () banked
  8685  00386C  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8686                           
  8687                           ; BSR set to: 0
  8688  00386E  C09E  F098         	movff	___flmul@grs,??___flmul
  8689  003872  C09F  F099         	movff	___flmul@grs+1,??___flmul+1
  8690  003876  C0A0  F09A         	movff	___flmul@grs+2,??___flmul+2
  8691  00387A  C0A1  F09B         	movff	___flmul@grs+3,??___flmul+3
  8692  00387E  0E19               	movlw	25
  8693  003880  D006               	goto	u9120
  8694  003882                     u9125:
  8695  003882  0100               	movlb	0	; () banked
  8696  003884  90D8               	bcf	status,0,c
  8697  003886  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  8698  003888  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  8699  00388A  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  8700  00388C  3398               	rrcf	??___flmul& (0+255),f,b
  8701  00388E                     u9120:
  8702  00388E  2EE8               	decfsz	wreg,f,c
  8703  003890  D7F8               	goto	u9125
  8704  003892  0100               	movlb	0	; () banked
  8705  003894  5198               	movf	??___flmul& (0+255),w,b
  8706  003896  0100               	movlb	0	; () banked
  8707  003898  27A3               	addwf	___flmul@prod& (0+255),f,b
  8708  00389A  0100               	movlb	0	; () banked
  8709  00389C  5199               	movf	(??___flmul+1)& (0+255),w,b
  8710  00389E  0100               	movlb	0	; () banked
  8711  0038A0  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8712  0038A2  0100               	movlb	0	; () banked
  8713  0038A4  519A               	movf	(??___flmul+2)& (0+255),w,b
  8714  0038A6  0100               	movlb	0	; () banked
  8715  0038A8  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8716  0038AA  0100               	movlb	0	; () banked
  8717  0038AC  519B               	movf	(??___flmul+3)& (0+255),w,b
  8718  0038AE  0100               	movlb	0	; () banked
  8719  0038B0  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8720                           
  8721                           ; BSR set to: 0
  8722  0038B2  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8723  0038B6  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8724  0038BA  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8725  0038BE  0100               	movlb	0	; () banked
  8726  0038C0  6B9E               	clrf	___flmul@grs& (0+255),b
  8727                           
  8728                           ; BSR set to: 0
  8729  0038C2  0100               	movlb	0	; () banked
  8730  0038C4  519D               	movf	___flmul@aexp& (0+255),w,b
  8731  0038C6  C0A2  F098         	movff	___flmul@bexp,??___flmul
  8732  0038CA  0100               	movlb	0	; () banked
  8733  0038CC  6B99               	clrf	(??___flmul+1)& (0+255),b
  8734  0038CE  0100               	movlb	0	; () banked
  8735  0038D0  2798               	addwf	??___flmul& (0+255),f,b
  8736  0038D2  0E00               	movlw	0
  8737  0038D4  2399               	addwfc	(??___flmul+1)& (0+255),f,b
  8738  0038D6  0E82               	movlw	130
  8739  0038D8  0100               	movlb	0	; () banked
  8740  0038DA  2598               	addwf	??___flmul& (0+255),w,b
  8741  0038DC  0100               	movlb	0	; () banked
  8742  0038DE  6FA7               	movwf	___flmul@temp& (0+255),b
  8743  0038E0  0EFF               	movlw	255
  8744  0038E2  0100               	movlb	0	; () banked
  8745  0038E4  2199               	addwfc	(??___flmul+1)& (0+255),w,b
  8746  0038E6  0100               	movlb	0	; () banked
  8747  0038E8  6FA8               	movwf	(___flmul@temp+1)& (0+255),b
  8748  0038EA  D015               	goto	l7021
  8749  0038EC                     l7015:
  8750                           
  8751                           ; BSR set to: 0
  8752  0038EC  0100               	movlb	0	; () banked
  8753  0038EE  90D8               	bcf	status,0,c
  8754  0038F0  37A3               	rlcf	___flmul@prod& (0+255),f,b
  8755  0038F2  37A4               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8756  0038F4  37A5               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8757  0038F6  37A6               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8758                           
  8759                           ; BSR set to: 0
  8760  0038F8  0100               	movlb	0	; () banked
  8761  0038FA  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  8762  0038FC  D002               	goto	l1447
  8763                           
  8764                           ; BSR set to: 0
  8765  0038FE  0100               	movlb	0	; () banked
  8766  003900  81A3               	bsf	___flmul@prod& (0+255),0,b
  8767  003902                     l1447:
  8768                           
  8769                           ; BSR set to: 0
  8770  003902  0100               	movlb	0	; () banked
  8771  003904  90D8               	bcf	status,0,c
  8772  003906  379E               	rlcf	___flmul@grs& (0+255),f,b
  8773  003908  379F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8774  00390A  37A0               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8775  00390C  37A1               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8776  00390E  0100               	movlb	0	; () banked
  8777  003910  07A7               	decf	___flmul@temp& (0+255),f,b
  8778  003912  A0D8               	btfss	status,0,c
  8779  003914  07A8               	decf	(___flmul@temp+1)& (0+255),f,b
  8780  003916                     l7021:
  8781                           
  8782                           ; BSR set to: 0
  8783  003916  0100               	movlb	0	; () banked
  8784  003918  AFA5               	btfss	(___flmul@prod+2)& (0+255),7,b
  8785  00391A  D7E8               	goto	l7015
  8786                           
  8787                           ; BSR set to: 0
  8788                           
  8789                           ; BSR set to: 0
  8790  00391C  0E00               	movlw	0
  8791  00391E  0100               	movlb	0	; () banked
  8792  003920  6F9D               	movwf	___flmul@aexp& (0+255),b
  8793                           
  8794                           ; BSR set to: 0
  8795  003922  0100               	movlb	0	; () banked
  8796  003924  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  8797  003926  D024               	goto	l1449
  8798                           
  8799                           ; BSR set to: 0
  8800  003928  0EFF               	movlw	255
  8801  00392A  0100               	movlb	0	; () banked
  8802  00392C  159E               	andwf	___flmul@grs& (0+255),w,b
  8803  00392E  0100               	movlb	0	; () banked
  8804  003930  6F98               	movwf	??___flmul& (0+255),b
  8805  003932  0EFF               	movlw	255
  8806  003934  0100               	movlb	0	; () banked
  8807  003936  159F               	andwf	(___flmul@grs+1)& (0+255),w,b
  8808  003938  0100               	movlb	0	; () banked
  8809  00393A  6F99               	movwf	(??___flmul+1)& (0+255),b
  8810  00393C  0EFF               	movlw	255
  8811  00393E  0100               	movlb	0	; () banked
  8812  003940  15A0               	andwf	(___flmul@grs+2)& (0+255),w,b
  8813  003942  0100               	movlb	0	; () banked
  8814  003944  6F9A               	movwf	(??___flmul+2)& (0+255),b
  8815  003946  0E7F               	movlw	127
  8816  003948  0100               	movlb	0	; () banked
  8817  00394A  15A1               	andwf	(___flmul@grs+3)& (0+255),w,b
  8818  00394C  0100               	movlb	0	; () banked
  8819  00394E  6F9B               	movwf	(??___flmul+3)& (0+255),b
  8820  003950  0100               	movlb	0	; () banked
  8821  003952  5198               	movf	??___flmul& (0+255),w,b
  8822  003954  0100               	movlb	0	; () banked
  8823  003956  1199               	iorwf	(??___flmul+1)& (0+255),w,b
  8824  003958  0100               	movlb	0	; () banked
  8825  00395A  119A               	iorwf	(??___flmul+2)& (0+255),w,b
  8826  00395C  0100               	movlb	0	; () banked
  8827  00395E  119B               	iorwf	(??___flmul+3)& (0+255),w,b
  8828  003960  A4D8               	btfss	status,2,c
  8829  003962  D003               	goto	l7031
  8830                           
  8831                           ; BSR set to: 0
  8832                           
  8833                           ; BSR set to: 0
  8834  003964  0100               	movlb	0	; () banked
  8835  003966  A1A3               	btfss	___flmul@prod& (0+255),0,b
  8836  003968  D003               	goto	l1449
  8837  00396A                     l7031:
  8838                           
  8839                           ; BSR set to: 0
  8840  00396A  0E01               	movlw	1
  8841  00396C  0100               	movlb	0	; () banked
  8842  00396E  6F9D               	movwf	___flmul@aexp& (0+255),b
  8843  003970                     l1449:
  8844                           
  8845                           ; BSR set to: 0
  8846  003970  0100               	movlb	0	; () banked
  8847  003972  519D               	movf	___flmul@aexp& (0+255),w,b
  8848  003974  0100               	movlb	0	; () banked
  8849  003976  B4D8               	btfsc	status,2,c
  8850  003978  D023               	goto	l7041
  8851                           
  8852                           ; BSR set to: 0
  8853  00397A  0E01               	movlw	1
  8854  00397C  0100               	movlb	0	; () banked
  8855  00397E  27A3               	addwf	___flmul@prod& (0+255),f,b
  8856  003980  0E00               	movlw	0
  8857  003982  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8858  003984  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8859  003986  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8860                           
  8861                           ; BSR set to: 0
  8862  003988  0100               	movlb	0	; () banked
  8863  00398A  A1A6               	btfss	(___flmul@prod+3)& (0+255),0,b
  8864  00398C  D019               	goto	l7041
  8865                           
  8866                           ; BSR set to: 0
  8867  00398E  C0A3  F098         	movff	___flmul@prod,??___flmul
  8868  003992  C0A4  F099         	movff	___flmul@prod+1,??___flmul+1
  8869  003996  C0A5  F09A         	movff	___flmul@prod+2,??___flmul+2
  8870  00399A  C0A6  F09B         	movff	___flmul@prod+3,??___flmul+3
  8871  00399E  0100               	movlb	0	; () banked
  8872  0039A0  359B               	rlcf	(??___flmul+3)& (0+255),w,b
  8873  0039A2  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  8874  0039A4  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  8875  0039A6  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  8876  0039A8  3398               	rrcf	??___flmul& (0+255),f,b
  8877  0039AA  C098  F0A3         	movff	??___flmul,___flmul@prod
  8878  0039AE  C099  F0A4         	movff	??___flmul+1,___flmul@prod+1
  8879  0039B2  C09A  F0A5         	movff	??___flmul+2,___flmul@prod+2
  8880  0039B6  C09B  F0A6         	movff	??___flmul+3,___flmul@prod+3
  8881                           
  8882                           ; BSR set to: 0
  8883  0039BA  0100               	movlb	0	; () banked
  8884  0039BC  4BA7               	infsnz	___flmul@temp& (0+255),f,b
  8885  0039BE  2BA8               	incf	(___flmul@temp+1)& (0+255),f,b
  8886  0039C0                     l7041:
  8887                           
  8888                           ; BSR set to: 0
  8889  0039C0  0100               	movlb	0	; () banked
  8890  0039C2  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8891  0039C4  D010               	goto	l7045
  8892  0039C6  0100               	movlb	0	; () banked
  8893  0039C8  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8894  0039CA  E104               	bnz	u9200
  8895  0039CC  0100               	movlb	0	; () banked
  8896  0039CE  29A7               	incf	___flmul@temp& (0+255),w,b
  8897  0039D0  A0D8               	btfss	status,0,c
  8898  0039D2  D009               	goto	l7045
  8899  0039D4                     u9200:
  8900                           
  8901                           ; BSR set to: 0
  8902  0039D4  0E00               	movlw	0
  8903  0039D6  0100               	movlb	0	; () banked
  8904  0039D8  6FA3               	movwf	___flmul@prod& (0+255),b
  8905  0039DA  0E00               	movlw	0
  8906  0039DC  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  8907  0039DE  0E80               	movlw	128
  8908  0039E0  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  8909  0039E2  0E7F               	movlw	127
  8910  0039E4  D02B               	goto	L2
  8911  0039E6                     l7045:
  8912                           
  8913                           ; BSR set to: 0
  8914  0039E6  0100               	movlb	0	; () banked
  8915  0039E8  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8916  0039EA  D007               	goto	l7047
  8917  0039EC  0100               	movlb	0	; () banked
  8918  0039EE  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8919  0039F0  E111               	bnz	l1457
  8920  0039F2  0100               	movlb	0	; () banked
  8921  0039F4  05A7               	decf	___flmul@temp& (0+255),w,b
  8922  0039F6  B0D8               	btfsc	status,0,c
  8923  0039F8  D00D               	goto	l1457
  8924  0039FA                     l7047:
  8925                           
  8926                           ; BSR set to: 0
  8927  0039FA  0E00               	movlw	0
  8928  0039FC  0100               	movlb	0	; () banked
  8929  0039FE  6FA3               	movwf	___flmul@prod& (0+255),b
  8930  003A00  0E00               	movlw	0
  8931  003A02  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  8932  003A04  0E00               	movlw	0
  8933  003A06  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  8934  003A08  0E00               	movlw	0
  8935  003A0A  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  8936  003A0C  0E00               	movlw	0
  8937  003A0E  0100               	movlb	0	; () banked
  8938  003A10  6F9C               	movwf	___flmul@sign& (0+255),b
  8939  003A12  D015               	goto	l7057
  8940  003A14                     l1457:
  8941                           
  8942                           ; BSR set to: 0
  8943  003A14  C0A7  F0A2         	movff	___flmul@temp,___flmul@bexp
  8944                           
  8945                           ; BSR set to: 0
  8946  003A18  0EFF               	movlw	255
  8947  003A1A  0100               	movlb	0	; () banked
  8948  003A1C  17A3               	andwf	___flmul@prod& (0+255),f,b
  8949  003A1E  0EFF               	movlw	255
  8950  003A20  17A4               	andwf	(___flmul@prod+1)& (0+255),f,b
  8951  003A22  0E7F               	movlw	127
  8952  003A24  17A5               	andwf	(___flmul@prod+2)& (0+255),f,b
  8953  003A26  0E00               	movlw	0
  8954  003A28  17A6               	andwf	(___flmul@prod+3)& (0+255),f,b
  8955                           
  8956                           ; BSR set to: 0
  8957  003A2A  0100               	movlb	0	; () banked
  8958  003A2C  A1A2               	btfss	___flmul@bexp& (0+255),0,b
  8959  003A2E  D002               	goto	l7055
  8960                           
  8961                           ; BSR set to: 0
  8962  003A30  0100               	movlb	0	; () banked
  8963  003A32  8FA5               	bsf	(___flmul@prod+2)& (0+255),7,b
  8964  003A34                     l7055:
  8965                           
  8966                           ; BSR set to: 0
  8967  003A34  0100               	movlb	0	; () banked
  8968  003A36  90D8               	bcf	status,0,c
  8969  003A38  31A2               	rrcf	___flmul@bexp& (0+255),w,b
  8970  003A3A  0100               	movlb	0	; () banked
  8971  003A3C                     L2:
  8972  003A3C  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  8973  003A3E                     l7057:
  8974                           
  8975                           ; BSR set to: 0
  8976  003A3E  0100               	movlb	0	; () banked
  8977  003A40  519C               	movf	___flmul@sign& (0+255),w,b
  8978  003A42  0100               	movlb	0	; () banked
  8979  003A44  13A6               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8980                           
  8981                           ; BSR set to: 0
  8982  003A46  C0A3  F090         	movff	___flmul@prod,?___flmul
  8983  003A4A  C0A4  F091         	movff	___flmul@prod+1,?___flmul+1
  8984  003A4E  C0A5  F092         	movff	___flmul@prod+2,?___flmul+2
  8985  003A52  C0A6  F093         	movff	___flmul@prod+3,?___flmul+3
  8986  003A56  0012               	return	
  8987  003A58                     __end_of___flmul:
  8988                           	opt stack 0
  8989                           tblptru	equ	0xFF8
  8990                           tblptrh	equ	0xFF7
  8991                           tblptrl	equ	0xFF6
  8992                           tablat	equ	0xFF5
  8993                           prodh	equ	0xFF4
  8994                           prodl	equ	0xFF3
  8995                           postinc0	equ	0xFEE
  8996                           wreg	equ	0xFE8
  8997                           postdec1	equ	0xFE5
  8998                           fsr1l	equ	0xFE1
  8999                           indf2	equ	0xFDF
  9000                           postinc2	equ	0xFDE
  9001                           postdec2	equ	0xFDD
  9002                           fsr2h	equ	0xFDA
  9003                           fsr2l	equ	0xFD9
  9004                           status	equ	0xFD8
  9005                           
  9006 ;; *************** function ___fladd *****************
  9007 ;; Defined at:
  9008 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcadd.c"
  9009 ;; Parameters:    Size  Location     Type
  9010 ;;  b               4   73[BANK0 ] unsigned char 
  9011 ;;  a               4   77[BANK0 ] unsigned char 
  9012 ;; Auto vars:     Size  Location     Type
  9013 ;;  grs             1   92[BANK0 ] unsigned char 
  9014 ;;  bexp            1   91[BANK0 ] unsigned char 
  9015 ;;  aexp            1   90[BANK0 ] unsigned char 
  9016 ;;  signs           1   89[BANK0 ] unsigned char 
  9017 ;; Return value:  Size  Location     Type
  9018 ;;                  4   73[BANK0 ] unsigned char 
  9019 ;; Registers used:
  9020 ;;		wreg, status,2, status,0
  9021 ;; Tracked objects:
  9022 ;;		On entry : 0/0
  9023 ;;		On exit  : 0/0
  9024 ;;		Unchanged: 0/0
  9025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9026 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9027 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9028 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9029 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9030 ;;Total ram usage:       20 bytes
  9031 ;; Hardware stack levels used:    1
  9032 ;; Hardware stack levels required when called:    4
  9033 ;; This function calls:
  9034 ;;		Nothing
  9035 ;; This function is called by:
  9036 ;;		_park_routine
  9037 ;;		_parallelo
  9038 ;;		_matematica
  9039 ;;		_asin
  9040 ;;		_atan
  9041 ;;		_cos
  9042 ;;		_eval_poly
  9043 ;;		_sin
  9044 ;;		___flsub
  9045 ;;		_floor
  9046 ;; This function uses a non-reentrant model
  9047 ;;
  9048                           
  9049                           	psect	text23
  9050  00310A                     __ptext23:
  9051                           	opt stack 0
  9052  00310A                     ___fladd:
  9053                           	opt stack 21
  9054                           
  9055                           ; BSR set to: 0
  9056                           ;incstack = 0
  9057  00310A  0100               	movlb	0	; () banked
  9058  00310C  51AC               	movf	(___fladd@b+3)& (0+255),w,b
  9059  00310E  0B80               	andlw	128
  9060  003110  0100               	movlb	0	; () banked
  9061  003112  6FB9               	movwf	___fladd@signs& (0+255),b
  9062  003114  0100               	movlb	0	; () banked
  9063  003116  51AC               	movf	(___fladd@b+3)& (0+255),w,b
  9064  003118  25AC               	addwf	(___fladd@b+3)& (0+255),w,b
  9065  00311A  0100               	movlb	0	; () banked
  9066  00311C  6FBB               	movwf	___fladd@bexp& (0+255),b
  9067                           
  9068                           ; BSR set to: 0
  9069  00311E  0100               	movlb	0	; () banked
  9070  003120  AFAB               	btfss	(___fladd@b+2)& (0+255),7,b
  9071  003122  D002               	goto	l6737
  9072                           
  9073                           ; BSR set to: 0
  9074  003124  0100               	movlb	0	; () banked
  9075  003126  81BB               	bsf	___fladd@bexp& (0+255),0,b
  9076  003128                     l6737:
  9077                           
  9078                           ; BSR set to: 0
  9079  003128  0100               	movlb	0	; () banked
  9080  00312A  51BB               	movf	___fladd@bexp& (0+255),w,b
  9081  00312C  0100               	movlb	0	; () banked
  9082  00312E  B4D8               	btfsc	status,2,c
  9083  003130  D012               	goto	l6747
  9084                           
  9085                           ; BSR set to: 0
  9086  003132  0100               	movlb	0	; () banked
  9087  003134  29BB               	incf	___fladd@bexp& (0+255),w,b
  9088  003136  A4D8               	btfss	status,2,c
  9089  003138  D009               	goto	l6743
  9090                           
  9091                           ; BSR set to: 0
  9092  00313A  0E00               	movlw	0
  9093  00313C  0100               	movlb	0	; () banked
  9094  00313E  6FA9               	movwf	___fladd@b& (0+255),b
  9095  003140  0E00               	movlw	0
  9096  003142  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9097  003144  0E00               	movlw	0
  9098  003146  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9099  003148  0E00               	movlw	0
  9100  00314A  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9101  00314C                     l6743:
  9102                           
  9103                           ; BSR set to: 0
  9104  00314C  0100               	movlb	0	; () banked
  9105  00314E  8FAB               	bsf	(___fladd@b+2)& (0+255),7,b
  9106                           
  9107                           ; BSR set to: 0
  9108  003150  0E00               	movlw	0
  9109  003152  0100               	movlb	0	; () banked
  9110  003154  D008               	goto	L3
  9111  003156                     l6747:
  9112                           
  9113                           ; BSR set to: 0
  9114  003156  0E00               	movlw	0
  9115  003158  0100               	movlb	0	; () banked
  9116  00315A  6FA9               	movwf	___fladd@b& (0+255),b
  9117  00315C  0E00               	movlw	0
  9118  00315E  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9119  003160  0E00               	movlw	0
  9120  003162  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9121  003164  0E00               	movlw	0
  9122  003166                     L3:
  9123  003166  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9124                           
  9125                           ; BSR set to: 0
  9126                           
  9127                           ; BSR set to: 0
  9128  003168  0100               	movlb	0	; () banked
  9129  00316A  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9130  00316C  0B80               	andlw	128
  9131  00316E  0100               	movlb	0	; () banked
  9132  003170  6FBA               	movwf	___fladd@aexp& (0+255),b
  9133                           
  9134                           ; BSR set to: 0
  9135  003172  0100               	movlb	0	; () banked
  9136  003174  51B9               	movf	___fladd@signs& (0+255),w,b
  9137  003176  0100               	movlb	0	; () banked
  9138  003178  19BA               	xorwf	___fladd@aexp& (0+255),w,b
  9139  00317A  B4D8               	btfsc	status,2,c
  9140  00317C  D002               	goto	l6755
  9141                           
  9142                           ; BSR set to: 0
  9143  00317E  0100               	movlb	0	; () banked
  9144  003180  8DB9               	bsf	___fladd@signs& (0+255),6,b
  9145  003182                     l6755:
  9146                           
  9147                           ; BSR set to: 0
  9148  003182  0100               	movlb	0	; () banked
  9149  003184  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9150  003186  25B0               	addwf	(___fladd@a+3)& (0+255),w,b
  9151  003188  0100               	movlb	0	; () banked
  9152  00318A  6FBA               	movwf	___fladd@aexp& (0+255),b
  9153                           
  9154                           ; BSR set to: 0
  9155  00318C  0100               	movlb	0	; () banked
  9156  00318E  AFAF               	btfss	(___fladd@a+2)& (0+255),7,b
  9157  003190  D002               	goto	l6761
  9158                           
  9159                           ; BSR set to: 0
  9160  003192  0100               	movlb	0	; () banked
  9161  003194  81BA               	bsf	___fladd@aexp& (0+255),0,b
  9162  003196                     l6761:
  9163                           
  9164                           ; BSR set to: 0
  9165  003196  0100               	movlb	0	; () banked
  9166  003198  51BA               	movf	___fladd@aexp& (0+255),w,b
  9167  00319A  0100               	movlb	0	; () banked
  9168  00319C  B4D8               	btfsc	status,2,c
  9169  00319E  D012               	goto	l6771
  9170                           
  9171                           ; BSR set to: 0
  9172  0031A0  0100               	movlb	0	; () banked
  9173  0031A2  29BA               	incf	___fladd@aexp& (0+255),w,b
  9174  0031A4  A4D8               	btfss	status,2,c
  9175  0031A6  D009               	goto	l6767
  9176                           
  9177                           ; BSR set to: 0
  9178  0031A8  0E00               	movlw	0
  9179  0031AA  0100               	movlb	0	; () banked
  9180  0031AC  6FAD               	movwf	___fladd@a& (0+255),b
  9181  0031AE  0E00               	movlw	0
  9182  0031B0  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  9183  0031B2  0E00               	movlw	0
  9184  0031B4  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  9185  0031B6  0E00               	movlw	0
  9186  0031B8  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  9187  0031BA                     l6767:
  9188                           
  9189                           ; BSR set to: 0
  9190  0031BA  0100               	movlb	0	; () banked
  9191  0031BC  8FAF               	bsf	(___fladd@a+2)& (0+255),7,b
  9192                           
  9193                           ; BSR set to: 0
  9194  0031BE  0E00               	movlw	0
  9195  0031C0  0100               	movlb	0	; () banked
  9196  0031C2  D008               	goto	L4
  9197  0031C4                     l6771:
  9198                           
  9199                           ; BSR set to: 0
  9200  0031C4  0E00               	movlw	0
  9201  0031C6  0100               	movlb	0	; () banked
  9202  0031C8  6FAD               	movwf	___fladd@a& (0+255),b
  9203  0031CA  0E00               	movlw	0
  9204  0031CC  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  9205  0031CE  0E00               	movlw	0
  9206  0031D0  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  9207  0031D2  0E00               	movlw	0
  9208  0031D4                     L4:
  9209  0031D4  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  9210                           
  9211                           ; BSR set to: 0
  9212                           
  9213                           ; BSR set to: 0
  9214  0031D6  0100               	movlb	0	; () banked
  9215  0031D8  51BB               	movf	___fladd@bexp& (0+255),w,b
  9216  0031DA  0100               	movlb	0	; () banked
  9217  0031DC  5DBA               	subwf	___fladd@aexp& (0+255),w,b
  9218  0031DE  B0D8               	btfsc	status,0,c
  9219  0031E0  D024               	goto	l6809
  9220                           
  9221                           ; BSR set to: 0
  9222  0031E2  0100               	movlb	0	; () banked
  9223  0031E4  ADB9               	btfss	___fladd@signs& (0+255),6,b
  9224  0031E6  D003               	goto	l6779
  9225                           
  9226                           ; BSR set to: 0
  9227  0031E8  0E80               	movlw	128
  9228  0031EA  0100               	movlb	0	; () banked
  9229  0031EC  1BB9               	xorwf	___fladd@signs& (0+255),f,b
  9230  0031EE                     l6779:
  9231                           
  9232                           ; BSR set to: 0
  9233  0031EE  C0BB  F0BC         	movff	___fladd@bexp,___fladd@grs
  9234                           
  9235                           ; BSR set to: 0
  9236  0031F2  C0BA  F0BB         	movff	___fladd@aexp,___fladd@bexp
  9237                           
  9238                           ; BSR set to: 0
  9239  0031F6  C0BC  F0BA         	movff	___fladd@grs,___fladd@aexp
  9240                           
  9241                           ; BSR set to: 0
  9242  0031FA  C0A9  F0BC         	movff	___fladd@b,___fladd@grs
  9243                           
  9244                           ; BSR set to: 0
  9245  0031FE  C0AD  F0A9         	movff	___fladd@a,___fladd@b
  9246                           
  9247                           ; BSR set to: 0
  9248  003202  C0BC  F0AD         	movff	___fladd@grs,___fladd@a
  9249                           
  9250                           ; BSR set to: 0
  9251  003206  C0AA  F0BC         	movff	___fladd@b+1,___fladd@grs
  9252                           
  9253                           ; BSR set to: 0
  9254  00320A  C0AE  F0AA         	movff	___fladd@a+1,___fladd@b+1
  9255                           
  9256                           ; BSR set to: 0
  9257  00320E  C0BC  F0AE         	movff	___fladd@grs,___fladd@a+1
  9258                           
  9259                           ; BSR set to: 0
  9260  003212  C0AB  F0BC         	movff	___fladd@b+2,___fladd@grs
  9261                           
  9262                           ; BSR set to: 0
  9263  003216  C0AF  F0AB         	movff	___fladd@a+2,___fladd@b+2
  9264                           
  9265                           ; BSR set to: 0
  9266  00321A  C0BC  F0AF         	movff	___fladd@grs,___fladd@a+2
  9267                           
  9268                           ; BSR set to: 0
  9269  00321E  C0AC  F0BC         	movff	___fladd@b+3,___fladd@grs
  9270                           
  9271                           ; BSR set to: 0
  9272  003222  C0B0  F0AC         	movff	___fladd@a+3,___fladd@b+3
  9273                           
  9274                           ; BSR set to: 0
  9275  003226  C0BC  F0B0         	movff	___fladd@grs,___fladd@a+3
  9276  00322A                     l6809:
  9277                           
  9278                           ; BSR set to: 0
  9279  00322A  0E00               	movlw	0
  9280  00322C  0100               	movlb	0	; () banked
  9281  00322E  6FBC               	movwf	___fladd@grs& (0+255),b
  9282                           
  9283                           ; BSR set to: 0
  9284  003230  0100               	movlb	0	; () banked
  9285  003232  51BB               	movf	___fladd@bexp& (0+255),w,b
  9286  003234  0100               	movlb	0	; () banked
  9287  003236  6FB1               	movwf	??___fladd& (0+255),b
  9288  003238  6BB2               	clrf	(??___fladd+1)& (0+255),b
  9289  00323A  0100               	movlb	0	; () banked
  9290  00323C  1FB1               	comf	??___fladd& (0+255),f,b
  9291  00323E  1FB2               	comf	(??___fladd+1)& (0+255),f,b
  9292  003240  4BB1               	infsnz	??___fladd& (0+255),f,b
  9293  003242  2BB2               	incf	(??___fladd+1)& (0+255),f,b
  9294  003244  0100               	movlb	0	; () banked
  9295  003246  51BA               	movf	___fladd@aexp& (0+255),w,b
  9296  003248  0100               	movlb	0	; () banked
  9297  00324A  6FB3               	movwf	(??___fladd+2)& (0+255),b
  9298  00324C  6BB4               	clrf	(??___fladd+3)& (0+255),b
  9299  00324E  0100               	movlb	0	; () banked
  9300  003250  51B1               	movf	??___fladd& (0+255),w,b
  9301  003252  0100               	movlb	0	; () banked
  9302  003254  27B3               	addwf	(??___fladd+2)& (0+255),f,b
  9303  003256  0100               	movlb	0	; () banked
  9304  003258  51B2               	movf	(??___fladd+1)& (0+255),w,b
  9305  00325A  0100               	movlb	0	; () banked
  9306  00325C  23B4               	addwfc	(??___fladd+3)& (0+255),f,b
  9307  00325E  0100               	movlb	0	; () banked
  9308  003260  BFB4               	btfsc	(??___fladd+3)& (0+255),7,b
  9309  003262  D03D               	goto	l1355
  9310  003264  0100               	movlb	0	; () banked
  9311  003266  51B4               	movf	(??___fladd+3)& (0+255),w,b
  9312  003268  E105               	bnz	u8740
  9313  00326A  0E1A               	movlw	26
  9314  00326C  0100               	movlb	0	; () banked
  9315  00326E  5DB3               	subwf	(??___fladd+2)& (0+255),w,b
  9316  003270  A0D8               	btfss	status,0,c
  9317  003272  D035               	goto	l1355
  9318  003274                     u8740:
  9319                           
  9320                           ; BSR set to: 0
  9321  003274  0100               	movlb	0	; () banked
  9322  003276  51A9               	movf	___fladd@b& (0+255),w,b
  9323  003278  0100               	movlb	0	; () banked
  9324  00327A  11AA               	iorwf	(___fladd@b+1)& (0+255),w,b
  9325  00327C  0100               	movlb	0	; () banked
  9326  00327E  11AB               	iorwf	(___fladd@b+2)& (0+255),w,b
  9327  003280  0100               	movlb	0	; () banked
  9328  003282  11AC               	iorwf	(___fladd@b+3)& (0+255),w,b
  9329  003284  B4D8               	btfsc	status,2,c
  9330  003286  D002               	goto	u8750
  9331  003288  0E01               	movlw	1
  9332  00328A  D001               	goto	u8760
  9333  00328C                     u8750:
  9334  00328C  0E00               	movlw	0
  9335  00328E                     u8760:
  9336  00328E  0100               	movlb	0	; () banked
  9337  003290  6FBC               	movwf	___fladd@grs& (0+255),b
  9338                           
  9339                           ; BSR set to: 0
  9340  003292  0E00               	movlw	0
  9341  003294  0100               	movlb	0	; () banked
  9342  003296  6FA9               	movwf	___fladd@b& (0+255),b
  9343  003298  0E00               	movlw	0
  9344  00329A  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9345  00329C  0E00               	movlw	0
  9346  00329E  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9347  0032A0  0E00               	movlw	0
  9348  0032A2  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9349                           
  9350                           ; BSR set to: 0
  9351  0032A4  C0BA  F0BB         	movff	___fladd@aexp,___fladd@bexp
  9352  0032A8  D020               	goto	l1354
  9353  0032AA                     l1356:
  9354                           
  9355                           ; BSR set to: 0
  9356  0032AA  0100               	movlb	0	; () banked
  9357  0032AC  A1BC               	btfss	___fladd@grs& (0+255),0,b
  9358  0032AE  D007               	goto	l6821
  9359                           
  9360                           ; BSR set to: 0
  9361  0032B0  0100               	movlb	0	; () banked
  9362  0032B2  90D8               	bcf	status,0,c
  9363  0032B4  31BC               	rrcf	___fladd@grs& (0+255),w,b
  9364  0032B6  0901               	iorlw	1
  9365  0032B8  0100               	movlb	0	; () banked
  9366  0032BA  6FBC               	movwf	___fladd@grs& (0+255),b
  9367  0032BC  D003               	goto	l6823
  9368  0032BE                     l6821:
  9369                           
  9370                           ; BSR set to: 0
  9371  0032BE  0100               	movlb	0	; () banked
  9372  0032C0  90D8               	bcf	status,0,c
  9373  0032C2  33BC               	rrcf	___fladd@grs& (0+255),f,b
  9374  0032C4                     l6823:
  9375                           
  9376                           ; BSR set to: 0
  9377  0032C4  0100               	movlb	0	; () banked
  9378  0032C6  A1A9               	btfss	___fladd@b& (0+255),0,b
  9379  0032C8  D002               	goto	l6827
  9380                           
  9381                           ; BSR set to: 0
  9382  0032CA  0100               	movlb	0	; () banked
  9383  0032CC  8FBC               	bsf	___fladd@grs& (0+255),7,b
  9384  0032CE                     l6827:
  9385                           
  9386                           ; BSR set to: 0
  9387  0032CE  0100               	movlb	0	; () banked
  9388  0032D0  35AC               	rlcf	(___fladd@b+3)& (0+255),w,b
  9389  0032D2  33AC               	rrcf	(___fladd@b+3)& (0+255),f,b
  9390  0032D4  33AB               	rrcf	(___fladd@b+2)& (0+255),f,b
  9391  0032D6  33AA               	rrcf	(___fladd@b+1)& (0+255),f,b
  9392  0032D8  33A9               	rrcf	___fladd@b& (0+255),f,b
  9393                           
  9394                           ; BSR set to: 0
  9395  0032DA  0100               	movlb	0	; () banked
  9396  0032DC  2BBB               	incf	___fladd@bexp& (0+255),f,b
  9397  0032DE                     l1355:
  9398                           
  9399                           ; BSR set to: 0
  9400  0032DE  0100               	movlb	0	; () banked
  9401  0032E0  51BA               	movf	___fladd@aexp& (0+255),w,b
  9402  0032E2  0100               	movlb	0	; () banked
  9403  0032E4  5DBB               	subwf	___fladd@bexp& (0+255),w,b
  9404  0032E6  A0D8               	btfss	status,0,c
  9405  0032E8  D7E0               	goto	l1356
  9406  0032EA                     l1354:
  9407                           
  9408                           ; BSR set to: 0
  9409  0032EA  0100               	movlb	0	; () banked
  9410  0032EC  BDB9               	btfsc	___fladd@signs& (0+255),6,b
  9411  0032EE  D03F               	goto	l6855
  9412                           
  9413                           ; BSR set to: 0
  9414  0032F0  0100               	movlb	0	; () banked
  9415  0032F2  51BB               	movf	___fladd@bexp& (0+255),w,b
  9416  0032F4  0100               	movlb	0	; () banked
  9417  0032F6  A4D8               	btfss	status,2,c
  9418  0032F8  D00A               	goto	l6837
  9419                           
  9420                           ; BSR set to: 0
  9421  0032FA  0E00               	movlw	0
  9422  0032FC  0100               	movlb	0	; () banked
  9423  0032FE  6FA9               	movwf	?___fladd& (0+255),b
  9424  003300  0E00               	movlw	0
  9425  003302  6FAA               	movwf	(?___fladd+1)& (0+255),b
  9426  003304  0E00               	movlw	0
  9427  003306  6FAB               	movwf	(?___fladd+2)& (0+255),b
  9428  003308  0E00               	movlw	0
  9429  00330A  6FAC               	movwf	(?___fladd+3)& (0+255),b
  9430                           
  9431                           ; BSR set to: 0
  9432  00330C  0012               	return	
  9433  00330E                     l6837:
  9434                           
  9435                           ; BSR set to: 0
  9436  00330E  0100               	movlb	0	; () banked
  9437  003310  51AD               	movf	___fladd@a& (0+255),w,b
  9438  003312  0100               	movlb	0	; () banked
  9439  003314  27A9               	addwf	___fladd@b& (0+255),f,b
  9440  003316  0100               	movlb	0	; () banked
  9441  003318  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9442  00331A  0100               	movlb	0	; () banked
  9443  00331C  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
  9444  00331E  0100               	movlb	0	; () banked
  9445  003320  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9446  003322  0100               	movlb	0	; () banked
  9447  003324  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
  9448  003326  0100               	movlb	0	; () banked
  9449  003328  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9450  00332A  0100               	movlb	0	; () banked
  9451  00332C  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
  9452                           
  9453                           ; BSR set to: 0
  9454  00332E  0100               	movlb	0	; () banked
  9455  003330  A1AC               	btfss	(___fladd@b+3)& (0+255),0,b
  9456  003332  D0CC               	goto	l6891
  9457                           
  9458                           ; BSR set to: 0
  9459  003334  0100               	movlb	0	; () banked
  9460  003336  A1BC               	btfss	___fladd@grs& (0+255),0,b
  9461  003338  D009               	goto	l6845
  9462                           
  9463                           ; BSR set to: 0
  9464  00333A  0100               	movlb	0	; () banked
  9465  00333C  90D8               	bcf	status,0,c
  9466  00333E  33BC               	rrcf	___fladd@grs& (0+255),f,b
  9467  003340  0100               	movlb	0	; () banked
  9468  003342  51BC               	movf	___fladd@grs& (0+255),w,b
  9469  003344  0901               	iorlw	1
  9470  003346  0100               	movlb	0	; () banked
  9471  003348  6FBC               	movwf	___fladd@grs& (0+255),b
  9472  00334A  D003               	goto	l6847
  9473  00334C                     l6845:
  9474                           
  9475                           ; BSR set to: 0
  9476  00334C  0100               	movlb	0	; () banked
  9477  00334E  90D8               	bcf	status,0,c
  9478  003350  33BC               	rrcf	___fladd@grs& (0+255),f,b
  9479  003352                     l6847:
  9480                           
  9481                           ; BSR set to: 0
  9482  003352  0100               	movlb	0	; () banked
  9483  003354  A1A9               	btfss	___fladd@b& (0+255),0,b
  9484  003356  D002               	goto	l6851
  9485                           
  9486                           ; BSR set to: 0
  9487  003358  0100               	movlb	0	; () banked
  9488  00335A  8FBC               	bsf	___fladd@grs& (0+255),7,b
  9489  00335C                     l6851:
  9490                           
  9491                           ; BSR set to: 0
  9492  00335C  0100               	movlb	0	; () banked
  9493  00335E  35AC               	rlcf	(___fladd@b+3)& (0+255),w,b
  9494  003360  33AC               	rrcf	(___fladd@b+3)& (0+255),f,b
  9495  003362  33AB               	rrcf	(___fladd@b+2)& (0+255),f,b
  9496  003364  33AA               	rrcf	(___fladd@b+1)& (0+255),f,b
  9497  003366  33A9               	rrcf	___fladd@b& (0+255),f,b
  9498                           
  9499                           ; BSR set to: 0
  9500  003368  0100               	movlb	0	; () banked
  9501  00336A  2BBB               	incf	___fladd@bexp& (0+255),f,b
  9502                           
  9503                           ; BSR set to: 0
  9504  00336C  D0AF               	goto	l6891
  9505  00336E                     l6855:
  9506                           
  9507                           ; BSR set to: 0
  9508  00336E  0100               	movlb	0	; () banked
  9509  003370  51AD               	movf	___fladd@a& (0+255),w,b
  9510  003372  0100               	movlb	0	; () banked
  9511  003374  5DA9               	subwf	___fladd@b& (0+255),w,b
  9512  003376  0100               	movlb	0	; () banked
  9513  003378  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9514  00337A  0100               	movlb	0	; () banked
  9515  00337C  59AA               	subwfb	(___fladd@b+1)& (0+255),w,b
  9516  00337E  0100               	movlb	0	; () banked
  9517  003380  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9518  003382  0100               	movlb	0	; () banked
  9519  003384  59AB               	subwfb	(___fladd@b+2)& (0+255),w,b
  9520  003386  0100               	movlb	0	; () banked
  9521  003388  51AC               	movf	(___fladd@b+3)& (0+255),w,b
  9522  00338A  0A80               	xorlw	128
  9523  00338C  0100               	movlb	0	; () banked
  9524  00338E  6FB1               	movwf	??___fladd& (0+255),b
  9525  003390  0100               	movlb	0	; () banked
  9526  003392  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9527  003394  0A80               	xorlw	128
  9528  003396  0100               	movlb	0	; () banked
  9529  003398  59B1               	subwfb	??___fladd& (0+255),w,b
  9530  00339A  B0D8               	btfsc	status,0,c
  9531  00339C  D050               	goto	l6865
  9532                           
  9533                           ; BSR set to: 0
  9534  00339E  C0A9  F0B1         	movff	___fladd@b,??___fladd
  9535  0033A2  C0AA  F0B2         	movff	___fladd@b+1,??___fladd+1
  9536  0033A6  C0AB  F0B3         	movff	___fladd@b+2,??___fladd+2
  9537  0033AA  C0AC  F0B4         	movff	___fladd@b+3,??___fladd+3
  9538  0033AE  0100               	movlb	0	; () banked
  9539  0033B0  1FB1               	comf	??___fladd& (0+255),f,b
  9540  0033B2  1FB2               	comf	(??___fladd+1)& (0+255),f,b
  9541  0033B4  1FB3               	comf	(??___fladd+2)& (0+255),f,b
  9542  0033B6  1FB4               	comf	(??___fladd+3)& (0+255),f,b
  9543  0033B8  2BB1               	incf	??___fladd& (0+255),f,b
  9544  0033BA  0E00               	movlw	0
  9545  0033BC  23B2               	addwfc	(??___fladd+1)& (0+255),f,b
  9546  0033BE  23B3               	addwfc	(??___fladd+2)& (0+255),f,b
  9547  0033C0  23B4               	addwfc	(??___fladd+3)& (0+255),f,b
  9548  0033C2  0100               	movlb	0	; () banked
  9549  0033C4  51AD               	movf	___fladd@a& (0+255),w,b
  9550  0033C6  0100               	movlb	0	; () banked
  9551  0033C8  25B1               	addwf	??___fladd& (0+255),w,b
  9552  0033CA  0100               	movlb	0	; () banked
  9553  0033CC  6FB5               	movwf	(??___fladd+4)& (0+255),b
  9554  0033CE  0100               	movlb	0	; () banked
  9555  0033D0  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9556  0033D2  0100               	movlb	0	; () banked
  9557  0033D4  21B2               	addwfc	(??___fladd+1)& (0+255),w,b
  9558  0033D6  0100               	movlb	0	; () banked
  9559  0033D8  6FB6               	movwf	(??___fladd+5)& (0+255),b
  9560  0033DA  0100               	movlb	0	; () banked
  9561  0033DC  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9562  0033DE  0100               	movlb	0	; () banked
  9563  0033E0  21B3               	addwfc	(??___fladd+2)& (0+255),w,b
  9564  0033E2  0100               	movlb	0	; () banked
  9565  0033E4  6FB7               	movwf	(??___fladd+6)& (0+255),b
  9566  0033E6  0100               	movlb	0	; () banked
  9567  0033E8  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9568  0033EA  0100               	movlb	0	; () banked
  9569  0033EC  21B4               	addwfc	(??___fladd+3)& (0+255),w,b
  9570  0033EE  0100               	movlb	0	; () banked
  9571  0033F0  6FB8               	movwf	(??___fladd+7)& (0+255),b
  9572  0033F2  0EFF               	movlw	255
  9573  0033F4  0100               	movlb	0	; () banked
  9574  0033F6  25B5               	addwf	(??___fladd+4)& (0+255),w,b
  9575  0033F8  0100               	movlb	0	; () banked
  9576  0033FA  6FA9               	movwf	___fladd@b& (0+255),b
  9577  0033FC  0EFF               	movlw	255
  9578  0033FE  0100               	movlb	0	; () banked
  9579  003400  21B6               	addwfc	(??___fladd+5)& (0+255),w,b
  9580  003402  0100               	movlb	0	; () banked
  9581  003404  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9582  003406  0EFF               	movlw	255
  9583  003408  0100               	movlb	0	; () banked
  9584  00340A  21B7               	addwfc	(??___fladd+6)& (0+255),w,b
  9585  00340C  0100               	movlb	0	; () banked
  9586  00340E  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9587  003410  0EFF               	movlw	255
  9588  003412  0100               	movlb	0	; () banked
  9589  003414  21B8               	addwfc	(??___fladd+7)& (0+255),w,b
  9590  003416  0100               	movlb	0	; () banked
  9591  003418  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9592  00341A  0E80               	movlw	128
  9593  00341C  0100               	movlb	0	; () banked
  9594  00341E  1BB9               	xorwf	___fladd@signs& (0+255),f,b
  9595                           
  9596                           ; BSR set to: 0
  9597  003420  0100               	movlb	0	; () banked
  9598  003422  6DBC               	negf	___fladd@grs& (0+255),b
  9599                           
  9600                           ; BSR set to: 0
  9601  003424  0100               	movlb	0	; () banked
  9602  003426  51BC               	movf	___fladd@grs& (0+255),w,b
  9603  003428  0100               	movlb	0	; () banked
  9604  00342A  A4D8               	btfss	status,2,c
  9605  00342C  D018               	goto	l1371
  9606                           
  9607                           ; BSR set to: 0
  9608  00342E  0E01               	movlw	1
  9609  003430  0100               	movlb	0	; () banked
  9610  003432  27A9               	addwf	___fladd@b& (0+255),f,b
  9611  003434  0E00               	movlw	0
  9612  003436  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
  9613  003438  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
  9614  00343A  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
  9615                           
  9616                           ; BSR set to: 0
  9617  00343C  D010               	goto	l1371
  9618  00343E                     l6865:
  9619                           
  9620                           ; BSR set to: 0
  9621  00343E  0100               	movlb	0	; () banked
  9622  003440  51AD               	movf	___fladd@a& (0+255),w,b
  9623  003442  0100               	movlb	0	; () banked
  9624  003444  5FA9               	subwf	___fladd@b& (0+255),f,b
  9625  003446  0100               	movlb	0	; () banked
  9626  003448  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9627  00344A  0100               	movlb	0	; () banked
  9628  00344C  5BAA               	subwfb	(___fladd@b+1)& (0+255),f,b
  9629  00344E  0100               	movlb	0	; () banked
  9630  003450  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9631  003452  0100               	movlb	0	; () banked
  9632  003454  5BAB               	subwfb	(___fladd@b+2)& (0+255),f,b
  9633  003456  0100               	movlb	0	; () banked
  9634  003458  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9635  00345A  0100               	movlb	0	; () banked
  9636  00345C  5BAC               	subwfb	(___fladd@b+3)& (0+255),f,b
  9637  00345E                     l1371:
  9638                           
  9639                           ; BSR set to: 0
  9640  00345E  0100               	movlb	0	; () banked
  9641  003460  51A9               	movf	___fladd@b& (0+255),w,b
  9642  003462  0100               	movlb	0	; () banked
  9643  003464  11AA               	iorwf	(___fladd@b+1)& (0+255),w,b
  9644  003466  0100               	movlb	0	; () banked
  9645  003468  11AB               	iorwf	(___fladd@b+2)& (0+255),w,b
  9646  00346A  0100               	movlb	0	; () banked
  9647  00346C  11AC               	iorwf	(___fladd@b+3)& (0+255),w,b
  9648  00346E  A4D8               	btfss	status,2,c
  9649  003470  D02A               	goto	l6889
  9650                           
  9651                           ; BSR set to: 0
  9652  003472  0100               	movlb	0	; () banked
  9653  003474  51BC               	movf	___fladd@grs& (0+255),w,b
  9654  003476  0100               	movlb	0	; () banked
  9655  003478  A4D8               	btfss	status,2,c
  9656  00347A  D025               	goto	l6889
  9657                           
  9658                           ; BSR set to: 0
  9659  00347C  0E00               	movlw	0
  9660  00347E  0100               	movlb	0	; () banked
  9661  003480  6FA9               	movwf	?___fladd& (0+255),b
  9662  003482  0E00               	movlw	0
  9663  003484  6FAA               	movwf	(?___fladd+1)& (0+255),b
  9664  003486  0E00               	movlw	0
  9665  003488  6FAB               	movwf	(?___fladd+2)& (0+255),b
  9666  00348A  0E00               	movlw	0
  9667  00348C  6FAC               	movwf	(?___fladd+3)& (0+255),b
  9668                           
  9669                           ; BSR set to: 0
  9670  00348E  0012               	return	
  9671  003490                     l6873:
  9672                           
  9673                           ; BSR set to: 0
  9674  003490  0100               	movlb	0	; () banked
  9675  003492  90D8               	bcf	status,0,c
  9676  003494  37A9               	rlcf	___fladd@b& (0+255),f,b
  9677  003496  37AA               	rlcf	(___fladd@b+1)& (0+255),f,b
  9678  003498  37AB               	rlcf	(___fladd@b+2)& (0+255),f,b
  9679  00349A  37AC               	rlcf	(___fladd@b+3)& (0+255),f,b
  9680                           
  9681                           ; BSR set to: 0
  9682  00349C  0100               	movlb	0	; () banked
  9683  00349E  AFBC               	btfss	___fladd@grs& (0+255),7,b
  9684  0034A0  D002               	goto	l6879
  9685                           
  9686                           ; BSR set to: 0
  9687  0034A2  0100               	movlb	0	; () banked
  9688  0034A4  81A9               	bsf	___fladd@b& (0+255),0,b
  9689  0034A6                     l6879:
  9690                           
  9691                           ; BSR set to: 0
  9692  0034A6  0100               	movlb	0	; () banked
  9693  0034A8  A1BC               	btfss	___fladd@grs& (0+255),0,b
  9694  0034AA  D003               	goto	l6883
  9695                           
  9696                           ; BSR set to: 0
  9697  0034AC  80D8               	bsf	status,0,c
  9698  0034AE  0100               	movlb	0	; () banked
  9699  0034B0  D002               	goto	L5
  9700  0034B2                     l6883:
  9701                           
  9702                           ; BSR set to: 0
  9703  0034B2  0100               	movlb	0	; () banked
  9704  0034B4  90D8               	bcf	status,0,c
  9705  0034B6                     L5:
  9706  0034B6  37BC               	rlcf	___fladd@grs& (0+255),f,b
  9707                           
  9708                           ; BSR set to: 0
  9709                           
  9710                           ; BSR set to: 0
  9711  0034B8  0100               	movlb	0	; () banked
  9712  0034BA  51BB               	movf	___fladd@bexp& (0+255),w,b
  9713  0034BC  0100               	movlb	0	; () banked
  9714  0034BE  B4D8               	btfsc	status,2,c
  9715  0034C0  D002               	goto	l6889
  9716                           
  9717                           ; BSR set to: 0
  9718  0034C2  0100               	movlb	0	; () banked
  9719  0034C4  07BB               	decf	___fladd@bexp& (0+255),f,b
  9720  0034C6                     l6889:
  9721                           
  9722                           ; BSR set to: 0
  9723  0034C6  0100               	movlb	0	; () banked
  9724  0034C8  AFAB               	btfss	(___fladd@b+2)& (0+255),7,b
  9725  0034CA  D7E2               	goto	l6873
  9726  0034CC                     l6891:
  9727                           
  9728                           ; BSR set to: 0
  9729  0034CC  0E00               	movlw	0
  9730  0034CE  0100               	movlb	0	; () banked
  9731  0034D0  6FBA               	movwf	___fladd@aexp& (0+255),b
  9732                           
  9733                           ; BSR set to: 0
  9734  0034D2  0100               	movlb	0	; () banked
  9735  0034D4  AFBC               	btfss	___fladd@grs& (0+255),7,b
  9736  0034D6  D00D               	goto	l1380
  9737                           
  9738                           ; BSR set to: 0
  9739  0034D8  C0BC  F0B1         	movff	___fladd@grs,??___fladd
  9740  0034DC  0E7F               	movlw	127
  9741  0034DE  0100               	movlb	0	; () banked
  9742  0034E0  17B1               	andwf	??___fladd& (0+255),f,b
  9743  0034E2  A4D8               	btfss	status,2,c
  9744  0034E4  D003               	goto	l6899
  9745                           
  9746                           ; BSR set to: 0
  9747                           
  9748                           ; BSR set to: 0
  9749  0034E6  0100               	movlb	0	; () banked
  9750  0034E8  A1A9               	btfss	___fladd@b& (0+255),0,b
  9751  0034EA  D003               	goto	l1380
  9752  0034EC                     l6899:
  9753                           
  9754                           ; BSR set to: 0
  9755  0034EC  0E01               	movlw	1
  9756  0034EE  0100               	movlb	0	; () banked
  9757  0034F0  6FBA               	movwf	___fladd@aexp& (0+255),b
  9758  0034F2                     l1380:
  9759                           
  9760                           ; BSR set to: 0
  9761  0034F2  0100               	movlb	0	; () banked
  9762  0034F4  51BA               	movf	___fladd@aexp& (0+255),w,b
  9763  0034F6  0100               	movlb	0	; () banked
  9764  0034F8  B4D8               	btfsc	status,2,c
  9765  0034FA  D026               	goto	l6909
  9766                           
  9767                           ; BSR set to: 0
  9768  0034FC  0E01               	movlw	1
  9769  0034FE  0100               	movlb	0	; () banked
  9770  003500  27A9               	addwf	___fladd@b& (0+255),f,b
  9771  003502  0E00               	movlw	0
  9772  003504  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
  9773  003506  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
  9774  003508  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
  9775                           
  9776                           ; BSR set to: 0
  9777  00350A  0100               	movlb	0	; () banked
  9778  00350C  A1AC               	btfss	(___fladd@b+3)& (0+255),0,b
  9779  00350E  D01C               	goto	l6909
  9780                           
  9781                           ; BSR set to: 0
  9782  003510  C0A9  F0B1         	movff	___fladd@b,??___fladd
  9783  003514  C0AA  F0B2         	movff	___fladd@b+1,??___fladd+1
  9784  003518  C0AB  F0B3         	movff	___fladd@b+2,??___fladd+2
  9785  00351C  C0AC  F0B4         	movff	___fladd@b+3,??___fladd+3
  9786  003520  0100               	movlb	0	; () banked
  9787  003522  35B4               	rlcf	(??___fladd+3)& (0+255),w,b
  9788  003524  33B4               	rrcf	(??___fladd+3)& (0+255),f,b
  9789  003526  33B3               	rrcf	(??___fladd+2)& (0+255),f,b
  9790  003528  33B2               	rrcf	(??___fladd+1)& (0+255),f,b
  9791  00352A  33B1               	rrcf	??___fladd& (0+255),f,b
  9792  00352C  C0B1  F0A9         	movff	??___fladd,___fladd@b
  9793  003530  C0B2  F0AA         	movff	??___fladd+1,___fladd@b+1
  9794  003534  C0B3  F0AB         	movff	??___fladd+2,___fladd@b+2
  9795  003538  C0B4  F0AC         	movff	??___fladd+3,___fladd@b+3
  9796  00353C  0100               	movlb	0	; () banked
  9797  00353E  29BB               	incf	___fladd@bexp& (0+255),w,b
  9798  003540  B4D8               	btfsc	status,2,c
  9799  003542  D002               	goto	l6909
  9800                           
  9801                           ; BSR set to: 0
  9802  003544  0100               	movlb	0	; () banked
  9803  003546  2BBB               	incf	___fladd@bexp& (0+255),f,b
  9804  003548                     l6909:
  9805                           
  9806                           ; BSR set to: 0
  9807  003548  0100               	movlb	0	; () banked
  9808  00354A  29BB               	incf	___fladd@bexp& (0+255),w,b
  9809  00354C  B4D8               	btfsc	status,2,c
  9810  00354E  D005               	goto	l6913
  9811                           
  9812                           ; BSR set to: 0
  9813  003550  0100               	movlb	0	; () banked
  9814  003552  51BB               	movf	___fladd@bexp& (0+255),w,b
  9815  003554  0100               	movlb	0	; () banked
  9816  003556  A4D8               	btfss	status,2,c
  9817  003558  D011               	goto	l6917
  9818  00355A                     l6913:
  9819                           
  9820                           ; BSR set to: 0
  9821  00355A  0E00               	movlw	0
  9822  00355C  0100               	movlb	0	; () banked
  9823  00355E  6FA9               	movwf	___fladd@b& (0+255),b
  9824  003560  0E00               	movlw	0
  9825  003562  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9826  003564  0E00               	movlw	0
  9827  003566  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9828  003568  0E00               	movlw	0
  9829  00356A  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9830  00356C  0100               	movlb	0	; () banked
  9831  00356E  51BB               	movf	___fladd@bexp& (0+255),w,b
  9832  003570  0100               	movlb	0	; () banked
  9833  003572  A4D8               	btfss	status,2,c
  9834  003574  D003               	goto	l6917
  9835                           
  9836                           ; BSR set to: 0
  9837  003576  0E00               	movlw	0
  9838  003578  0100               	movlb	0	; () banked
  9839  00357A  6FB9               	movwf	___fladd@signs& (0+255),b
  9840  00357C                     l6917:
  9841                           
  9842                           ; BSR set to: 0
  9843  00357C  0100               	movlb	0	; () banked
  9844  00357E  A1BB               	btfss	___fladd@bexp& (0+255),0,b
  9845  003580  D003               	goto	l6921
  9846                           
  9847                           ; BSR set to: 0
  9848  003582  0100               	movlb	0	; () banked
  9849  003584  8FAB               	bsf	(___fladd@b+2)& (0+255),7,b
  9850  003586  D002               	goto	l6923
  9851  003588                     l6921:
  9852                           
  9853                           ; BSR set to: 0
  9854  003588  0100               	movlb	0	; () banked
  9855  00358A  9FAB               	bcf	(___fladd@b+2)& (0+255),7,b
  9856  00358C                     l6923:
  9857                           
  9858                           ; BSR set to: 0
  9859  00358C  0100               	movlb	0	; () banked
  9860  00358E  90D8               	bcf	status,0,c
  9861  003590  31BB               	rrcf	___fladd@bexp& (0+255),w,b
  9862  003592  0100               	movlb	0	; () banked
  9863  003594  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9864                           
  9865                           ; BSR set to: 0
  9866  003596  0100               	movlb	0	; () banked
  9867  003598  AFB9               	btfss	___fladd@signs& (0+255),7,b
  9868  00359A  D002               	goto	l6929
  9869                           
  9870                           ; BSR set to: 0
  9871  00359C  0100               	movlb	0	; () banked
  9872  00359E  8FAC               	bsf	(___fladd@b+3)& (0+255),7,b
  9873  0035A0                     l6929:
  9874                           
  9875                           ; BSR set to: 0
  9876  0035A0  C0A9  F0A9         	movff	___fladd@b,?___fladd
  9877  0035A4  C0AA  F0AA         	movff	___fladd@b+1,?___fladd+1
  9878  0035A8  C0AB  F0AB         	movff	___fladd@b+2,?___fladd+2
  9879  0035AC  C0AC  F0AC         	movff	___fladd@b+3,?___fladd+3
  9880  0035B0  0012               	return	
  9881  0035B2                     __end_of___fladd:
  9882                           	opt stack 0
  9883                           tblptru	equ	0xFF8
  9884                           tblptrh	equ	0xFF7
  9885                           tblptrl	equ	0xFF6
  9886                           tablat	equ	0xFF5
  9887                           prodh	equ	0xFF4
  9888                           prodl	equ	0xFF3
  9889                           postinc0	equ	0xFEE
  9890                           wreg	equ	0xFE8
  9891                           postdec1	equ	0xFE5
  9892                           fsr1l	equ	0xFE1
  9893                           indf2	equ	0xFDF
  9894                           postinc2	equ	0xFDE
  9895                           postdec2	equ	0xFDD
  9896                           fsr2h	equ	0xFDA
  9897                           fsr2l	equ	0xFD9
  9898                           status	equ	0xFD8
  9899                           
  9900 ;; *************** function ___flge *****************
  9901 ;; Defined at:
  9902 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\flge.c"
  9903 ;; Parameters:    Size  Location     Type
  9904 ;;  ff1             4  101[BANK0 ] unsigned char 
  9905 ;;  ff2             4  105[BANK0 ] unsigned char 
  9906 ;; Auto vars:     Size  Location     Type
  9907 ;;		None
  9908 ;; Return value:  Size  Location     Type
  9909 ;;		None               void
  9910 ;; Registers used:
  9911 ;;		wreg, status,2, status,0
  9912 ;; Tracked objects:
  9913 ;;		On entry : 0/0
  9914 ;;		On exit  : 0/0
  9915 ;;		Unchanged: 0/0
  9916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9917 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9919 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9920 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9921 ;;Total ram usage:       12 bytes
  9922 ;; Hardware stack levels used:    1
  9923 ;; Hardware stack levels required when called:    4
  9924 ;; This function calls:
  9925 ;;		Nothing
  9926 ;; This function is called by:
  9927 ;;		_parallelo
  9928 ;;		_asin
  9929 ;;		_atan
  9930 ;;		_cos
  9931 ;;		_sin
  9932 ;;		_floor
  9933 ;; This function uses a non-reentrant model
  9934 ;;
  9935                           
  9936                           	psect	text24
  9937  005A50                     __ptext24:
  9938                           	opt stack 0
  9939  005A50                     ___flge:
  9940                           	opt stack 22
  9941                           
  9942                           ; BSR set to: 0
  9943                           ;incstack = 0
  9944  005A50  0E00               	movlw	0
  9945  005A52  0100               	movlb	0	; () banked
  9946  005A54  15C5               	andwf	___flge@ff1& (0+255),w,b
  9947  005A56  0100               	movlb	0	; () banked
  9948  005A58  6FCD               	movwf	??___flge& (0+255),b
  9949  005A5A  0E00               	movlw	0
  9950  005A5C  0100               	movlb	0	; () banked
  9951  005A5E  15C6               	andwf	(___flge@ff1+1)& (0+255),w,b
  9952  005A60  0100               	movlb	0	; () banked
  9953  005A62  6FCE               	movwf	(??___flge+1)& (0+255),b
  9954  005A64  0E80               	movlw	128
  9955  005A66  0100               	movlb	0	; () banked
  9956  005A68  15C7               	andwf	(___flge@ff1+2)& (0+255),w,b
  9957  005A6A  0100               	movlb	0	; () banked
  9958  005A6C  6FCF               	movwf	(??___flge+2)& (0+255),b
  9959  005A6E  0E7F               	movlw	127
  9960  005A70  0100               	movlb	0	; () banked
  9961  005A72  15C8               	andwf	(___flge@ff1+3)& (0+255),w,b
  9962  005A74  0100               	movlb	0	; () banked
  9963  005A76  6FD0               	movwf	(??___flge+3)& (0+255),b
  9964  005A78  0100               	movlb	0	; () banked
  9965  005A7A  51CD               	movf	??___flge& (0+255),w,b
  9966  005A7C  0100               	movlb	0	; () banked
  9967  005A7E  11CE               	iorwf	(??___flge+1)& (0+255),w,b
  9968  005A80  0100               	movlb	0	; () banked
  9969  005A82  11CF               	iorwf	(??___flge+2)& (0+255),w,b
  9970  005A84  0100               	movlb	0	; () banked
  9971  005A86  11D0               	iorwf	(??___flge+3)& (0+255),w,b
  9972  005A88  A4D8               	btfss	status,2,c
  9973  005A8A  D009               	goto	l7067
  9974                           
  9975                           ; BSR set to: 0
  9976  005A8C  0E00               	movlw	0
  9977  005A8E  0100               	movlb	0	; () banked
  9978  005A90  6FC5               	movwf	___flge@ff1& (0+255),b
  9979  005A92  0E00               	movlw	0
  9980  005A94  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  9981  005A96  0E00               	movlw	0
  9982  005A98  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  9983  005A9A  0E00               	movlw	0
  9984  005A9C  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  9985  005A9E                     l7067:
  9986                           
  9987                           ; BSR set to: 0
  9988  005A9E  0E00               	movlw	0
  9989  005AA0  0100               	movlb	0	; () banked
  9990  005AA2  15C9               	andwf	___flge@ff2& (0+255),w,b
  9991  005AA4  0100               	movlb	0	; () banked
  9992  005AA6  6FCD               	movwf	??___flge& (0+255),b
  9993  005AA8  0E00               	movlw	0
  9994  005AAA  0100               	movlb	0	; () banked
  9995  005AAC  15CA               	andwf	(___flge@ff2+1)& (0+255),w,b
  9996  005AAE  0100               	movlb	0	; () banked
  9997  005AB0  6FCE               	movwf	(??___flge+1)& (0+255),b
  9998  005AB2  0E80               	movlw	128
  9999  005AB4  0100               	movlb	0	; () banked
 10000  005AB6  15CB               	andwf	(___flge@ff2+2)& (0+255),w,b
 10001  005AB8  0100               	movlb	0	; () banked
 10002  005ABA  6FCF               	movwf	(??___flge+2)& (0+255),b
 10003  005ABC  0E7F               	movlw	127
 10004  005ABE  0100               	movlb	0	; () banked
 10005  005AC0  15CC               	andwf	(___flge@ff2+3)& (0+255),w,b
 10006  005AC2  0100               	movlb	0	; () banked
 10007  005AC4  6FD0               	movwf	(??___flge+3)& (0+255),b
 10008  005AC6  0100               	movlb	0	; () banked
 10009  005AC8  51CD               	movf	??___flge& (0+255),w,b
 10010  005ACA  0100               	movlb	0	; () banked
 10011  005ACC  11CE               	iorwf	(??___flge+1)& (0+255),w,b
 10012  005ACE  0100               	movlb	0	; () banked
 10013  005AD0  11CF               	iorwf	(??___flge+2)& (0+255),w,b
 10014  005AD2  0100               	movlb	0	; () banked
 10015  005AD4  11D0               	iorwf	(??___flge+3)& (0+255),w,b
 10016  005AD6  A4D8               	btfss	status,2,c
 10017  005AD8  D009               	goto	l7071
 10018                           
 10019                           ; BSR set to: 0
 10020  005ADA  0E00               	movlw	0
 10021  005ADC  0100               	movlb	0	; () banked
 10022  005ADE  6FC9               	movwf	___flge@ff2& (0+255),b
 10023  005AE0  0E00               	movlw	0
 10024  005AE2  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
 10025  005AE4  0E00               	movlw	0
 10026  005AE6  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
 10027  005AE8  0E00               	movlw	0
 10028  005AEA  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
 10029  005AEC                     l7071:
 10030                           
 10031                           ; BSR set to: 0
 10032  005AEC  0100               	movlb	0	; () banked
 10033  005AEE  AFC8               	btfss	(___flge@ff1+3)& (0+255),7,b
 10034  005AF0  D026               	goto	l7075
 10035                           
 10036                           ; BSR set to: 0
 10037  005AF2  C0C5  F0CD         	movff	___flge@ff1,??___flge
 10038  005AF6  C0C6  F0CE         	movff	___flge@ff1+1,??___flge+1
 10039  005AFA  C0C7  F0CF         	movff	___flge@ff1+2,??___flge+2
 10040  005AFE  C0C8  F0D0         	movff	___flge@ff1+3,??___flge+3
 10041  005B02  0100               	movlb	0	; () banked
 10042  005B04  1FCD               	comf	??___flge& (0+255),f,b
 10043  005B06  1FCE               	comf	(??___flge+1)& (0+255),f,b
 10044  005B08  1FCF               	comf	(??___flge+2)& (0+255),f,b
 10045  005B0A  1FD0               	comf	(??___flge+3)& (0+255),f,b
 10046  005B0C  2BCD               	incf	??___flge& (0+255),f,b
 10047  005B0E  0E00               	movlw	0
 10048  005B10  23CE               	addwfc	(??___flge+1)& (0+255),f,b
 10049  005B12  23CF               	addwfc	(??___flge+2)& (0+255),f,b
 10050  005B14  23D0               	addwfc	(??___flge+3)& (0+255),f,b
 10051  005B16  0E00               	movlw	0
 10052  005B18  0100               	movlb	0	; () banked
 10053  005B1A  25CD               	addwf	??___flge& (0+255),w,b
 10054  005B1C  0100               	movlb	0	; () banked
 10055  005B1E  6FC5               	movwf	___flge@ff1& (0+255),b
 10056  005B20  0E00               	movlw	0
 10057  005B22  0100               	movlb	0	; () banked
 10058  005B24  21CE               	addwfc	(??___flge+1)& (0+255),w,b
 10059  005B26  0100               	movlb	0	; () banked
 10060  005B28  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
 10061  005B2A  0E00               	movlw	0
 10062  005B2C  0100               	movlb	0	; () banked
 10063  005B2E  21CF               	addwfc	(??___flge+2)& (0+255),w,b
 10064  005B30  0100               	movlb	0	; () banked
 10065  005B32  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
 10066  005B34  0E80               	movlw	128
 10067  005B36  0100               	movlb	0	; () banked
 10068  005B38  21D0               	addwfc	(??___flge+3)& (0+255),w,b
 10069  005B3A  0100               	movlb	0	; () banked
 10070  005B3C  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
 10071  005B3E                     l7075:
 10072                           
 10073                           ; BSR set to: 0
 10074  005B3E  0100               	movlb	0	; () banked
 10075  005B40  AFCC               	btfss	(___flge@ff2+3)& (0+255),7,b
 10076  005B42  D026               	goto	l1102
 10077                           
 10078                           ; BSR set to: 0
 10079  005B44  C0C9  F0CD         	movff	___flge@ff2,??___flge
 10080  005B48  C0CA  F0CE         	movff	___flge@ff2+1,??___flge+1
 10081  005B4C  C0CB  F0CF         	movff	___flge@ff2+2,??___flge+2
 10082  005B50  C0CC  F0D0         	movff	___flge@ff2+3,??___flge+3
 10083  005B54  0100               	movlb	0	; () banked
 10084  005B56  1FCD               	comf	??___flge& (0+255),f,b
 10085  005B58  1FCE               	comf	(??___flge+1)& (0+255),f,b
 10086  005B5A  1FCF               	comf	(??___flge+2)& (0+255),f,b
 10087  005B5C  1FD0               	comf	(??___flge+3)& (0+255),f,b
 10088  005B5E  2BCD               	incf	??___flge& (0+255),f,b
 10089  005B60  0E00               	movlw	0
 10090  005B62  23CE               	addwfc	(??___flge+1)& (0+255),f,b
 10091  005B64  23CF               	addwfc	(??___flge+2)& (0+255),f,b
 10092  005B66  23D0               	addwfc	(??___flge+3)& (0+255),f,b
 10093  005B68  0E00               	movlw	0
 10094  005B6A  0100               	movlb	0	; () banked
 10095  005B6C  25CD               	addwf	??___flge& (0+255),w,b
 10096  005B6E  0100               	movlb	0	; () banked
 10097  005B70  6FC9               	movwf	___flge@ff2& (0+255),b
 10098  005B72  0E00               	movlw	0
 10099  005B74  0100               	movlb	0	; () banked
 10100  005B76  21CE               	addwfc	(??___flge+1)& (0+255),w,b
 10101  005B78  0100               	movlb	0	; () banked
 10102  005B7A  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
 10103  005B7C  0E00               	movlw	0
 10104  005B7E  0100               	movlb	0	; () banked
 10105  005B80  21CF               	addwfc	(??___flge+2)& (0+255),w,b
 10106  005B82  0100               	movlb	0	; () banked
 10107  005B84  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
 10108  005B86  0E80               	movlw	128
 10109  005B88  0100               	movlb	0	; () banked
 10110  005B8A  21D0               	addwfc	(??___flge+3)& (0+255),w,b
 10111  005B8C  0100               	movlb	0	; () banked
 10112  005B8E  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
 10113  005B90                     l1102:
 10114                           
 10115                           ; BSR set to: 0
 10116  005B90  0E00               	movlw	0
 10117  005B92  0100               	movlb	0	; () banked
 10118  005B94  1BC5               	xorwf	___flge@ff1& (0+255),f,b
 10119  005B96  0E00               	movlw	0
 10120  005B98  1BC6               	xorwf	(___flge@ff1+1)& (0+255),f,b
 10121  005B9A  0E00               	movlw	0
 10122  005B9C  1BC7               	xorwf	(___flge@ff1+2)& (0+255),f,b
 10123  005B9E  0E80               	movlw	128
 10124  005BA0  1BC8               	xorwf	(___flge@ff1+3)& (0+255),f,b
 10125  005BA2  0E00               	movlw	0
 10126  005BA4  0100               	movlb	0	; () banked
 10127  005BA6  1BC9               	xorwf	___flge@ff2& (0+255),f,b
 10128  005BA8  0E00               	movlw	0
 10129  005BAA  1BCA               	xorwf	(___flge@ff2+1)& (0+255),f,b
 10130  005BAC  0E00               	movlw	0
 10131  005BAE  1BCB               	xorwf	(___flge@ff2+2)& (0+255),f,b
 10132  005BB0  0E80               	movlw	128
 10133  005BB2  1BCC               	xorwf	(___flge@ff2+3)& (0+255),f,b
 10134  005BB4  0100               	movlb	0	; () banked
 10135  005BB6  51C9               	movf	___flge@ff2& (0+255),w,b
 10136  005BB8  0100               	movlb	0	; () banked
 10137  005BBA  5DC5               	subwf	___flge@ff1& (0+255),w,b
 10138  005BBC  0100               	movlb	0	; () banked
 10139  005BBE  51CA               	movf	(___flge@ff2+1)& (0+255),w,b
 10140  005BC0  0100               	movlb	0	; () banked
 10141  005BC2  59C6               	subwfb	(___flge@ff1+1)& (0+255),w,b
 10142  005BC4  0100               	movlb	0	; () banked
 10143  005BC6  51CB               	movf	(___flge@ff2+2)& (0+255),w,b
 10144  005BC8  0100               	movlb	0	; () banked
 10145  005BCA  59C7               	subwfb	(___flge@ff1+2)& (0+255),w,b
 10146  005BCC  0100               	movlb	0	; () banked
 10147  005BCE  51CC               	movf	(___flge@ff2+3)& (0+255),w,b
 10148  005BD0  0100               	movlb	0	; () banked
 10149  005BD2  59C8               	subwfb	(___flge@ff1+3)& (0+255),w,b
 10150  005BD4  B0D8               	btfsc	status,0,c
 10151  005BD6  D002               	goto	l7081
 10152                           
 10153                           ; BSR set to: 0
 10154  005BD8  90D8               	bcf	status,0,c
 10155  005BDA  0012               	return	
 10156  005BDC                     l7081:
 10157                           
 10158                           ; BSR set to: 0
 10159  005BDC  80D8               	bsf	status,0,c
 10160                           
 10161                           ; BSR set to: 0
 10162  005BDE  0012               	return	
 10163  005BE0                     __end_of___flge:
 10164                           	opt stack 0
 10165                           tblptru	equ	0xFF8
 10166                           tblptrh	equ	0xFF7
 10167                           tblptrl	equ	0xFF6
 10168                           tablat	equ	0xFF5
 10169                           prodh	equ	0xFF4
 10170                           prodl	equ	0xFF3
 10171                           postinc0	equ	0xFEE
 10172                           wreg	equ	0xFE8
 10173                           postdec1	equ	0xFE5
 10174                           fsr1l	equ	0xFE1
 10175                           indf2	equ	0xFDF
 10176                           postinc2	equ	0xFDE
 10177                           postdec2	equ	0xFDD
 10178                           fsr2h	equ	0xFDA
 10179                           fsr2l	equ	0xFD9
 10180                           status	equ	0xFD8
 10181                           
 10182 ;; *************** function ___fldiv *****************
 10183 ;; Defined at:
 10184 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcdiv.c"
 10185 ;; Parameters:    Size  Location     Type
 10186 ;;  b               4   23[BANK0 ] unsigned char 
 10187 ;;  a               4   27[BANK0 ] unsigned char 
 10188 ;; Auto vars:     Size  Location     Type
 10189 ;;  grs             4   42[BANK0 ] unsigned long 
 10190 ;;  rem             4   36[BANK0 ] unsigned long 
 10191 ;;  new_exp         2   40[BANK0 ] int 
 10192 ;;  aexp            1   47[BANK0 ] unsigned char 
 10193 ;;  bexp            1   46[BANK0 ] unsigned char 
 10194 ;;  sign            1   35[BANK0 ] unsigned char 
 10195 ;; Return value:  Size  Location     Type
 10196 ;;                  4   23[BANK0 ] unsigned char 
 10197 ;; Registers used:
 10198 ;;		wreg, status,2, status,0
 10199 ;; Tracked objects:
 10200 ;;		On entry : 0/0
 10201 ;;		On exit  : 0/0
 10202 ;;		Unchanged: 0/0
 10203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10204 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10205 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10206 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10207 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10208 ;;Total ram usage:       25 bytes
 10209 ;; Hardware stack levels used:    1
 10210 ;; Hardware stack levels required when called:    4
 10211 ;; This function calls:
 10212 ;;		Nothing
 10213 ;; This function is called by:
 10214 ;;		_parallelo
 10215 ;;		_matematica
 10216 ;;		_asin
 10217 ;;		_atan
 10218 ;;		_sin
 10219 ;; This function uses a non-reentrant model
 10220 ;;
 10221                           
 10222                           	psect	text25
 10223  0042B2                     __ptext25:
 10224                           	opt stack 0
 10225  0042B2                     ___fldiv:
 10226                           	opt stack 22
 10227                           
 10228                           ; BSR set to: 0
 10229                           ;incstack = 0
 10230  0042B2  0100               	movlb	0	; () banked
 10231  0042B4  517A               	movf	(___fldiv@b+3)& (0+255),w,b
 10232  0042B6  0B80               	andlw	128
 10233  0042B8  0100               	movlb	0	; () banked
 10234  0042BA  6F83               	movwf	___fldiv@sign& (0+255),b
 10235  0042BC  0100               	movlb	0	; () banked
 10236  0042BE  517A               	movf	(___fldiv@b+3)& (0+255),w,b
 10237  0042C0  257A               	addwf	(___fldiv@b+3)& (0+255),w,b
 10238  0042C2  0100               	movlb	0	; () banked
 10239  0042C4  6F8E               	movwf	___fldiv@bexp& (0+255),b
 10240                           
 10241                           ; BSR set to: 0
 10242  0042C6  0100               	movlb	0	; () banked
 10243  0042C8  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
 10244  0042CA  D002               	goto	l7201
 10245                           
 10246                           ; BSR set to: 0
 10247  0042CC  0100               	movlb	0	; () banked
 10248  0042CE  818E               	bsf	___fldiv@bexp& (0+255),0,b
 10249  0042D0                     l7201:
 10250                           
 10251                           ; BSR set to: 0
 10252  0042D0  0100               	movlb	0	; () banked
 10253  0042D2  518E               	movf	___fldiv@bexp& (0+255),w,b
 10254  0042D4  0100               	movlb	0	; () banked
 10255  0042D6  B4D8               	btfsc	status,2,c
 10256  0042D8  D012               	goto	l7211
 10257                           
 10258                           ; BSR set to: 0
 10259  0042DA  0100               	movlb	0	; () banked
 10260  0042DC  298E               	incf	___fldiv@bexp& (0+255),w,b
 10261  0042DE  A4D8               	btfss	status,2,c
 10262  0042E0  D009               	goto	l7207
 10263                           
 10264                           ; BSR set to: 0
 10265  0042E2  0E00               	movlw	0
 10266  0042E4  0100               	movlb	0	; () banked
 10267  0042E6  6F77               	movwf	___fldiv@b& (0+255),b
 10268  0042E8  0E00               	movlw	0
 10269  0042EA  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10270  0042EC  0E00               	movlw	0
 10271  0042EE  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10272  0042F0  0E00               	movlw	0
 10273  0042F2  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10274  0042F4                     l7207:
 10275                           
 10276                           ; BSR set to: 0
 10277  0042F4  0100               	movlb	0	; () banked
 10278  0042F6  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
 10279                           
 10280                           ; BSR set to: 0
 10281  0042F8  0E00               	movlw	0
 10282  0042FA  0100               	movlb	0	; () banked
 10283  0042FC  D008               	goto	L6
 10284  0042FE                     l7211:
 10285                           
 10286                           ; BSR set to: 0
 10287  0042FE  0E00               	movlw	0
 10288  004300  0100               	movlb	0	; () banked
 10289  004302  6F77               	movwf	___fldiv@b& (0+255),b
 10290  004304  0E00               	movlw	0
 10291  004306  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10292  004308  0E00               	movlw	0
 10293  00430A  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10294  00430C  0E00               	movlw	0
 10295  00430E                     L6:
 10296  00430E  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10297                           
 10298                           ; BSR set to: 0
 10299                           
 10300                           ; BSR set to: 0
 10301  004310  0100               	movlb	0	; () banked
 10302  004312  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10303  004314  0B80               	andlw	128
 10304  004316  0100               	movlb	0	; () banked
 10305  004318  1B83               	xorwf	___fldiv@sign& (0+255),f,b
 10306                           
 10307                           ; BSR set to: 0
 10308  00431A  0100               	movlb	0	; () banked
 10309  00431C  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10310  00431E  257E               	addwf	(___fldiv@a+3)& (0+255),w,b
 10311  004320  0100               	movlb	0	; () banked
 10312  004322  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10313                           
 10314                           ; BSR set to: 0
 10315  004324  0100               	movlb	0	; () banked
 10316  004326  AF7D               	btfss	(___fldiv@a+2)& (0+255),7,b
 10317  004328  D002               	goto	l7221
 10318                           
 10319                           ; BSR set to: 0
 10320  00432A  0100               	movlb	0	; () banked
 10321  00432C  818F               	bsf	___fldiv@aexp& (0+255),0,b
 10322  00432E                     l7221:
 10323                           
 10324                           ; BSR set to: 0
 10325  00432E  0100               	movlb	0	; () banked
 10326  004330  518F               	movf	___fldiv@aexp& (0+255),w,b
 10327  004332  0100               	movlb	0	; () banked
 10328  004334  B4D8               	btfsc	status,2,c
 10329  004336  D012               	goto	l7231
 10330                           
 10331                           ; BSR set to: 0
 10332  004338  0100               	movlb	0	; () banked
 10333  00433A  298F               	incf	___fldiv@aexp& (0+255),w,b
 10334  00433C  A4D8               	btfss	status,2,c
 10335  00433E  D009               	goto	l7227
 10336                           
 10337                           ; BSR set to: 0
 10338  004340  0E00               	movlw	0
 10339  004342  0100               	movlb	0	; () banked
 10340  004344  6F7B               	movwf	___fldiv@a& (0+255),b
 10341  004346  0E00               	movlw	0
 10342  004348  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
 10343  00434A  0E00               	movlw	0
 10344  00434C  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
 10345  00434E  0E00               	movlw	0
 10346  004350  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
 10347  004352                     l7227:
 10348                           
 10349                           ; BSR set to: 0
 10350  004352  0100               	movlb	0	; () banked
 10351  004354  8F7D               	bsf	(___fldiv@a+2)& (0+255),7,b
 10352                           
 10353                           ; BSR set to: 0
 10354  004356  0E00               	movlw	0
 10355  004358  0100               	movlb	0	; () banked
 10356  00435A  D008               	goto	L7
 10357  00435C                     l7231:
 10358                           
 10359                           ; BSR set to: 0
 10360  00435C  0E00               	movlw	0
 10361  00435E  0100               	movlb	0	; () banked
 10362  004360  6F7B               	movwf	___fldiv@a& (0+255),b
 10363  004362  0E00               	movlw	0
 10364  004364  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
 10365  004366  0E00               	movlw	0
 10366  004368  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
 10367  00436A  0E00               	movlw	0
 10368  00436C                     L7:
 10369  00436C  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
 10370                           
 10371                           ; BSR set to: 0
 10372                           
 10373                           ; BSR set to: 0
 10374  00436E  0100               	movlb	0	; () banked
 10375  004370  517B               	movf	___fldiv@a& (0+255),w,b
 10376  004372  0100               	movlb	0	; () banked
 10377  004374  117C               	iorwf	(___fldiv@a+1)& (0+255),w,b
 10378  004376  0100               	movlb	0	; () banked
 10379  004378  117D               	iorwf	(___fldiv@a+2)& (0+255),w,b
 10380  00437A  0100               	movlb	0	; () banked
 10381  00437C  117E               	iorwf	(___fldiv@a+3)& (0+255),w,b
 10382  00437E  A4D8               	btfss	status,2,c
 10383  004380  D017               	goto	l7243
 10384                           
 10385                           ; BSR set to: 0
 10386  004382  0E00               	movlw	0
 10387  004384  0100               	movlb	0	; () banked
 10388  004386  6F77               	movwf	___fldiv@b& (0+255),b
 10389  004388  0E00               	movlw	0
 10390  00438A  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10391  00438C  0E00               	movlw	0
 10392  00438E  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10393  004390  0E00               	movlw	0
 10394  004392  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10395                           
 10396                           ; BSR set to: 0
 10397  004394  0100               	movlb	0	; () banked
 10398  004396  0E80               	movlw	128
 10399  004398  1379               	iorwf	(___fldiv@b+2)& (0+255),f,b
 10400  00439A  0E7F               	movlw	127
 10401  00439C  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10402                           
 10403                           ; BSR set to: 0
 10404  00439E  C077  F077         	movff	___fldiv@b,?___fldiv
 10405  0043A2  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10406  0043A6  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10407  0043AA  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10408                           
 10409                           ; BSR set to: 0
 10410  0043AE  0012               	return	
 10411  0043B0                     l7243:
 10412                           
 10413                           ; BSR set to: 0
 10414  0043B0  0100               	movlb	0	; () banked
 10415  0043B2  518E               	movf	___fldiv@bexp& (0+255),w,b
 10416  0043B4  0100               	movlb	0	; () banked
 10417  0043B6  A4D8               	btfss	status,2,c
 10418  0043B8  D012               	goto	l7251
 10419                           
 10420                           ; BSR set to: 0
 10421  0043BA  0E00               	movlw	0
 10422  0043BC  0100               	movlb	0	; () banked
 10423  0043BE  6F77               	movwf	___fldiv@b& (0+255),b
 10424  0043C0  0E00               	movlw	0
 10425  0043C2  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10426  0043C4  0E00               	movlw	0
 10427  0043C6  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10428  0043C8  0E00               	movlw	0
 10429  0043CA  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10430                           
 10431                           ; BSR set to: 0
 10432  0043CC  C077  F077         	movff	___fldiv@b,?___fldiv
 10433  0043D0  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10434  0043D4  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10435  0043D8  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10436                           
 10437                           ; BSR set to: 0
 10438  0043DC  0012               	return	
 10439  0043DE                     l7251:
 10440                           
 10441                           ; BSR set to: 0
 10442  0043DE  0100               	movlb	0	; () banked
 10443  0043E0  518F               	movf	___fldiv@aexp& (0+255),w,b
 10444  0043E2  0100               	movlb	0	; () banked
 10445  0043E4  6F7F               	movwf	??___fldiv& (0+255),b
 10446  0043E6  6B80               	clrf	(??___fldiv+1)& (0+255),b
 10447  0043E8  0100               	movlb	0	; () banked
 10448  0043EA  1F7F               	comf	??___fldiv& (0+255),f,b
 10449  0043EC  1F80               	comf	(??___fldiv+1)& (0+255),f,b
 10450  0043EE  4B7F               	infsnz	??___fldiv& (0+255),f,b
 10451  0043F0  2B80               	incf	(??___fldiv+1)& (0+255),f,b
 10452  0043F2  0100               	movlb	0	; () banked
 10453  0043F4  518E               	movf	___fldiv@bexp& (0+255),w,b
 10454  0043F6  0100               	movlb	0	; () banked
 10455  0043F8  6F81               	movwf	(??___fldiv+2)& (0+255),b
 10456  0043FA  6B82               	clrf	(??___fldiv+3)& (0+255),b
 10457  0043FC  0100               	movlb	0	; () banked
 10458  0043FE  517F               	movf	??___fldiv& (0+255),w,b
 10459  004400  0100               	movlb	0	; () banked
 10460  004402  2781               	addwf	(??___fldiv+2)& (0+255),f,b
 10461  004404  0100               	movlb	0	; () banked
 10462  004406  5180               	movf	(??___fldiv+1)& (0+255),w,b
 10463  004408  0100               	movlb	0	; () banked
 10464  00440A  2382               	addwfc	(??___fldiv+3)& (0+255),f,b
 10465  00440C  0E7F               	movlw	127
 10466  00440E  0100               	movlb	0	; () banked
 10467  004410  2581               	addwf	(??___fldiv+2)& (0+255),w,b
 10468  004412  0100               	movlb	0	; () banked
 10469  004414  6F88               	movwf	___fldiv@new_exp& (0+255),b
 10470  004416  0E00               	movlw	0
 10471  004418  0100               	movlb	0	; () banked
 10472  00441A  2182               	addwfc	(??___fldiv+3)& (0+255),w,b
 10473  00441C  0100               	movlb	0	; () banked
 10474  00441E  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10475                           
 10476                           ; BSR set to: 0
 10477  004420  C077  F084         	movff	___fldiv@b,___fldiv@rem
 10478  004424  C078  F085         	movff	___fldiv@b+1,___fldiv@rem+1
 10479  004428  C079  F086         	movff	___fldiv@b+2,___fldiv@rem+2
 10480  00442C  C07A  F087         	movff	___fldiv@b+3,___fldiv@rem+3
 10481                           
 10482                           ; BSR set to: 0
 10483  004430  0E00               	movlw	0
 10484  004432  0100               	movlb	0	; () banked
 10485  004434  6F77               	movwf	___fldiv@b& (0+255),b
 10486  004436  0E00               	movlw	0
 10487  004438  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10488  00443A  0E00               	movlw	0
 10489  00443C  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10490  00443E  0E00               	movlw	0
 10491  004440  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10492                           
 10493                           ; BSR set to: 0
 10494  004442  0E00               	movlw	0
 10495  004444  0100               	movlb	0	; () banked
 10496  004446  6F8A               	movwf	___fldiv@grs& (0+255),b
 10497  004448  0E00               	movlw	0
 10498  00444A  6F8B               	movwf	(___fldiv@grs+1)& (0+255),b
 10499  00444C  0E00               	movlw	0
 10500  00444E  6F8C               	movwf	(___fldiv@grs+2)& (0+255),b
 10501  004450  0E00               	movlw	0
 10502  004452  6F8D               	movwf	(___fldiv@grs+3)& (0+255),b
 10503                           
 10504                           ; BSR set to: 0
 10505  004454  0E00               	movlw	0
 10506  004456  0100               	movlb	0	; () banked
 10507  004458  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10508  00445A  D042               	goto	l1410
 10509  00445C                     l7261:
 10510                           
 10511                           ; BSR set to: 0
 10512  00445C  0100               	movlb	0	; () banked
 10513  00445E  518F               	movf	___fldiv@aexp& (0+255),w,b
 10514  004460  0100               	movlb	0	; () banked
 10515  004462  B4D8               	btfsc	status,2,c
 10516  004464  D017               	goto	l7269
 10517                           
 10518                           ; BSR set to: 0
 10519  004466  0100               	movlb	0	; () banked
 10520  004468  90D8               	bcf	status,0,c
 10521  00446A  3784               	rlcf	___fldiv@rem& (0+255),f,b
 10522  00446C  3785               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 10523  00446E  3786               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 10524  004470  3787               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 10525  004472  0100               	movlb	0	; () banked
 10526  004474  90D8               	bcf	status,0,c
 10527  004476  3777               	rlcf	___fldiv@b& (0+255),f,b
 10528  004478  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10529  00447A  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10530  00447C  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10531                           
 10532                           ; BSR set to: 0
 10533  00447E  0100               	movlb	0	; () banked
 10534  004480  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10535  004482  D002               	goto	l1413
 10536                           
 10537                           ; BSR set to: 0
 10538  004484  0100               	movlb	0	; () banked
 10539  004486  8177               	bsf	___fldiv@b& (0+255),0,b
 10540  004488                     l1413:
 10541                           
 10542                           ; BSR set to: 0
 10543  004488  0100               	movlb	0	; () banked
 10544  00448A  90D8               	bcf	status,0,c
 10545  00448C  378A               	rlcf	___fldiv@grs& (0+255),f,b
 10546  00448E  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10547  004490  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10548  004492  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10549  004494                     l7269:
 10550                           
 10551                           ; BSR set to: 0
 10552  004494  0100               	movlb	0	; () banked
 10553  004496  517B               	movf	___fldiv@a& (0+255),w,b
 10554  004498  0100               	movlb	0	; () banked
 10555  00449A  5D84               	subwf	___fldiv@rem& (0+255),w,b
 10556  00449C  0100               	movlb	0	; () banked
 10557  00449E  517C               	movf	(___fldiv@a+1)& (0+255),w,b
 10558  0044A0  0100               	movlb	0	; () banked
 10559  0044A2  5985               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 10560  0044A4  0100               	movlb	0	; () banked
 10561  0044A6  517D               	movf	(___fldiv@a+2)& (0+255),w,b
 10562  0044A8  0100               	movlb	0	; () banked
 10563  0044AA  5986               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 10564  0044AC  0100               	movlb	0	; () banked
 10565  0044AE  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10566  0044B0  0100               	movlb	0	; () banked
 10567  0044B2  5987               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 10568  0044B4  A0D8               	btfss	status,0,c
 10569  0044B6  D012               	goto	l7275
 10570                           
 10571                           ; BSR set to: 0
 10572  0044B8  0100               	movlb	0	; () banked
 10573  0044BA  8D8D               	bsf	(___fldiv@grs+3)& (0+255),6,b
 10574                           
 10575                           ; BSR set to: 0
 10576  0044BC  0100               	movlb	0	; () banked
 10577  0044BE  517B               	movf	___fldiv@a& (0+255),w,b
 10578  0044C0  0100               	movlb	0	; () banked
 10579  0044C2  5F84               	subwf	___fldiv@rem& (0+255),f,b
 10580  0044C4  0100               	movlb	0	; () banked
 10581  0044C6  517C               	movf	(___fldiv@a+1)& (0+255),w,b
 10582  0044C8  0100               	movlb	0	; () banked
 10583  0044CA  5B85               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 10584  0044CC  0100               	movlb	0	; () banked
 10585  0044CE  517D               	movf	(___fldiv@a+2)& (0+255),w,b
 10586  0044D0  0100               	movlb	0	; () banked
 10587  0044D2  5B86               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 10588  0044D4  0100               	movlb	0	; () banked
 10589  0044D6  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10590  0044D8  0100               	movlb	0	; () banked
 10591  0044DA  5B87               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 10592  0044DC                     l7275:
 10593                           
 10594                           ; BSR set to: 0
 10595  0044DC  0100               	movlb	0	; () banked
 10596  0044DE  2B8F               	incf	___fldiv@aexp& (0+255),f,b
 10597  0044E0                     l1410:
 10598                           
 10599                           ; BSR set to: 0
 10600  0044E0  0E19               	movlw	25
 10601  0044E2  0100               	movlb	0	; () banked
 10602  0044E4  658F               	cpfsgt	___fldiv@aexp& (0+255),b
 10603  0044E6  D7BA               	goto	l7261
 10604                           
 10605                           ; BSR set to: 0
 10606                           
 10607                           ; BSR set to: 0
 10608  0044E8  0100               	movlb	0	; () banked
 10609  0044EA  5184               	movf	___fldiv@rem& (0+255),w,b
 10610  0044EC  0100               	movlb	0	; () banked
 10611  0044EE  1185               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 10612  0044F0  0100               	movlb	0	; () banked
 10613  0044F2  1186               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 10614  0044F4  0100               	movlb	0	; () banked
 10615  0044F6  1187               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 10616  0044F8  B4D8               	btfsc	status,2,c
 10617  0044FA  D018               	goto	l7287
 10618                           
 10619                           ; BSR set to: 0
 10620  0044FC  0100               	movlb	0	; () banked
 10621  0044FE  818A               	bsf	___fldiv@grs& (0+255),0,b
 10622                           
 10623                           ; BSR set to: 0
 10624  004500  D015               	goto	l7287
 10625  004502                     l7281:
 10626                           
 10627                           ; BSR set to: 0
 10628  004502  0100               	movlb	0	; () banked
 10629  004504  90D8               	bcf	status,0,c
 10630  004506  3777               	rlcf	___fldiv@b& (0+255),f,b
 10631  004508  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10632  00450A  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10633  00450C  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10634                           
 10635                           ; BSR set to: 0
 10636  00450E  0100               	movlb	0	; () banked
 10637  004510  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10638  004512  D002               	goto	l1419
 10639                           
 10640                           ; BSR set to: 0
 10641  004514  0100               	movlb	0	; () banked
 10642  004516  8177               	bsf	___fldiv@b& (0+255),0,b
 10643  004518                     l1419:
 10644                           
 10645                           ; BSR set to: 0
 10646  004518  0100               	movlb	0	; () banked
 10647  00451A  90D8               	bcf	status,0,c
 10648  00451C  378A               	rlcf	___fldiv@grs& (0+255),f,b
 10649  00451E  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10650  004520  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10651  004522  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10652  004524  0100               	movlb	0	; () banked
 10653  004526  0788               	decf	___fldiv@new_exp& (0+255),f,b
 10654  004528  A0D8               	btfss	status,0,c
 10655  00452A  0789               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 10656  00452C                     l7287:
 10657                           
 10658                           ; BSR set to: 0
 10659  00452C  0100               	movlb	0	; () banked
 10660  00452E  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
 10661  004530  D7E8               	goto	l7281
 10662                           
 10663                           ; BSR set to: 0
 10664                           
 10665                           ; BSR set to: 0
 10666  004532  0E00               	movlw	0
 10667  004534  0100               	movlb	0	; () banked
 10668  004536  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10669                           
 10670                           ; BSR set to: 0
 10671  004538  0100               	movlb	0	; () banked
 10672  00453A  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10673  00453C  D024               	goto	l1421
 10674                           
 10675                           ; BSR set to: 0
 10676  00453E  0EFF               	movlw	255
 10677  004540  0100               	movlb	0	; () banked
 10678  004542  158A               	andwf	___fldiv@grs& (0+255),w,b
 10679  004544  0100               	movlb	0	; () banked
 10680  004546  6F7F               	movwf	??___fldiv& (0+255),b
 10681  004548  0EFF               	movlw	255
 10682  00454A  0100               	movlb	0	; () banked
 10683  00454C  158B               	andwf	(___fldiv@grs+1)& (0+255),w,b
 10684  00454E  0100               	movlb	0	; () banked
 10685  004550  6F80               	movwf	(??___fldiv+1)& (0+255),b
 10686  004552  0EFF               	movlw	255
 10687  004554  0100               	movlb	0	; () banked
 10688  004556  158C               	andwf	(___fldiv@grs+2)& (0+255),w,b
 10689  004558  0100               	movlb	0	; () banked
 10690  00455A  6F81               	movwf	(??___fldiv+2)& (0+255),b
 10691  00455C  0E7F               	movlw	127
 10692  00455E  0100               	movlb	0	; () banked
 10693  004560  158D               	andwf	(___fldiv@grs+3)& (0+255),w,b
 10694  004562  0100               	movlb	0	; () banked
 10695  004564  6F82               	movwf	(??___fldiv+3)& (0+255),b
 10696  004566  0100               	movlb	0	; () banked
 10697  004568  517F               	movf	??___fldiv& (0+255),w,b
 10698  00456A  0100               	movlb	0	; () banked
 10699  00456C  1180               	iorwf	(??___fldiv+1)& (0+255),w,b
 10700  00456E  0100               	movlb	0	; () banked
 10701  004570  1181               	iorwf	(??___fldiv+2)& (0+255),w,b
 10702  004572  0100               	movlb	0	; () banked
 10703  004574  1182               	iorwf	(??___fldiv+3)& (0+255),w,b
 10704  004576  A4D8               	btfss	status,2,c
 10705  004578  D003               	goto	l7297
 10706                           
 10707                           ; BSR set to: 0
 10708                           
 10709                           ; BSR set to: 0
 10710  00457A  0100               	movlb	0	; () banked
 10711  00457C  A177               	btfss	___fldiv@b& (0+255),0,b
 10712  00457E  D003               	goto	l1421
 10713  004580                     l7297:
 10714                           
 10715                           ; BSR set to: 0
 10716  004580  0E01               	movlw	1
 10717  004582  0100               	movlb	0	; () banked
 10718  004584  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10719  004586                     l1421:
 10720                           
 10721                           ; BSR set to: 0
 10722  004586  0100               	movlb	0	; () banked
 10723  004588  518F               	movf	___fldiv@aexp& (0+255),w,b
 10724  00458A  0100               	movlb	0	; () banked
 10725  00458C  B4D8               	btfsc	status,2,c
 10726  00458E  D023               	goto	l7307
 10727                           
 10728                           ; BSR set to: 0
 10729  004590  0E01               	movlw	1
 10730  004592  0100               	movlb	0	; () banked
 10731  004594  2777               	addwf	___fldiv@b& (0+255),f,b
 10732  004596  0E00               	movlw	0
 10733  004598  2378               	addwfc	(___fldiv@b+1)& (0+255),f,b
 10734  00459A  2379               	addwfc	(___fldiv@b+2)& (0+255),f,b
 10735  00459C  237A               	addwfc	(___fldiv@b+3)& (0+255),f,b
 10736                           
 10737                           ; BSR set to: 0
 10738  00459E  0100               	movlb	0	; () banked
 10739  0045A0  A17A               	btfss	(___fldiv@b+3)& (0+255),0,b
 10740  0045A2  D019               	goto	l7307
 10741                           
 10742                           ; BSR set to: 0
 10743  0045A4  C077  F07F         	movff	___fldiv@b,??___fldiv
 10744  0045A8  C078  F080         	movff	___fldiv@b+1,??___fldiv+1
 10745  0045AC  C079  F081         	movff	___fldiv@b+2,??___fldiv+2
 10746  0045B0  C07A  F082         	movff	___fldiv@b+3,??___fldiv+3
 10747  0045B4  0100               	movlb	0	; () banked
 10748  0045B6  3582               	rlcf	(??___fldiv+3)& (0+255),w,b
 10749  0045B8  3382               	rrcf	(??___fldiv+3)& (0+255),f,b
 10750  0045BA  3381               	rrcf	(??___fldiv+2)& (0+255),f,b
 10751  0045BC  3380               	rrcf	(??___fldiv+1)& (0+255),f,b
 10752  0045BE  337F               	rrcf	??___fldiv& (0+255),f,b
 10753  0045C0  C07F  F077         	movff	??___fldiv,___fldiv@b
 10754  0045C4  C080  F078         	movff	??___fldiv+1,___fldiv@b+1
 10755  0045C8  C081  F079         	movff	??___fldiv+2,___fldiv@b+2
 10756  0045CC  C082  F07A         	movff	??___fldiv+3,___fldiv@b+3
 10757                           
 10758                           ; BSR set to: 0
 10759  0045D0  0100               	movlb	0	; () banked
 10760  0045D2  4B88               	infsnz	___fldiv@new_exp& (0+255),f,b
 10761  0045D4  2B89               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 10762  0045D6                     l7307:
 10763                           
 10764                           ; BSR set to: 0
 10765  0045D6  0100               	movlb	0	; () banked
 10766  0045D8  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10767  0045DA  D014               	goto	l7311
 10768  0045DC  0100               	movlb	0	; () banked
 10769  0045DE  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10770  0045E0  E104               	bnz	u9680
 10771  0045E2  0100               	movlb	0	; () banked
 10772  0045E4  2988               	incf	___fldiv@new_exp& (0+255),w,b
 10773  0045E6  A0D8               	btfss	status,0,c
 10774  0045E8  D00D               	goto	l7311
 10775  0045EA                     u9680:
 10776                           
 10777                           ; BSR set to: 0
 10778  0045EA  0E00               	movlw	0
 10779  0045EC  0100               	movlb	0	; () banked
 10780  0045EE  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10781  0045F0  6988               	setf	___fldiv@new_exp& (0+255),b
 10782  0045F2  0E00               	movlw	0
 10783  0045F4  0100               	movlb	0	; () banked
 10784  0045F6  6F77               	movwf	___fldiv@b& (0+255),b
 10785  0045F8  0E00               	movlw	0
 10786  0045FA  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10787  0045FC  0E00               	movlw	0
 10788  0045FE  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10789  004600  0E00               	movlw	0
 10790  004602  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10791  004604                     l7311:
 10792                           
 10793                           ; BSR set to: 0
 10794  004604  0100               	movlb	0	; () banked
 10795  004606  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10796  004608  D007               	goto	l7313
 10797  00460A  0100               	movlb	0	; () banked
 10798  00460C  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10799  00460E  E115               	bnz	l7315
 10800  004610  0100               	movlb	0	; () banked
 10801  004612  0588               	decf	___fldiv@new_exp& (0+255),w,b
 10802  004614  B0D8               	btfsc	status,0,c
 10803  004616  D011               	goto	l7315
 10804  004618                     l7313:
 10805                           
 10806                           ; BSR set to: 0
 10807  004618  0E00               	movlw	0
 10808  00461A  0100               	movlb	0	; () banked
 10809  00461C  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10810  00461E  0E00               	movlw	0
 10811  004620  6F88               	movwf	___fldiv@new_exp& (0+255),b
 10812  004622  0E00               	movlw	0
 10813  004624  0100               	movlb	0	; () banked
 10814  004626  6F77               	movwf	___fldiv@b& (0+255),b
 10815  004628  0E00               	movlw	0
 10816  00462A  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10817  00462C  0E00               	movlw	0
 10818  00462E  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10819  004630  0E00               	movlw	0
 10820  004632  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10821  004634  0E00               	movlw	0
 10822  004636  0100               	movlb	0	; () banked
 10823  004638  6F83               	movwf	___fldiv@sign& (0+255),b
 10824  00463A                     l7315:
 10825                           
 10826                           ; BSR set to: 0
 10827  00463A  C088  F08E         	movff	___fldiv@new_exp,___fldiv@bexp
 10828                           
 10829                           ; BSR set to: 0
 10830  00463E  0100               	movlb	0	; () banked
 10831  004640  A18E               	btfss	___fldiv@bexp& (0+255),0,b
 10832  004642  D003               	goto	l7321
 10833                           
 10834                           ; BSR set to: 0
 10835  004644  0100               	movlb	0	; () banked
 10836  004646  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
 10837  004648  D002               	goto	l7323
 10838  00464A                     l7321:
 10839                           
 10840                           ; BSR set to: 0
 10841  00464A  0100               	movlb	0	; () banked
 10842  00464C  9F79               	bcf	(___fldiv@b+2)& (0+255),7,b
 10843  00464E                     l7323:
 10844                           
 10845                           ; BSR set to: 0
 10846  00464E  0100               	movlb	0	; () banked
 10847  004650  90D8               	bcf	status,0,c
 10848  004652  318E               	rrcf	___fldiv@bexp& (0+255),w,b
 10849  004654  0100               	movlb	0	; () banked
 10850  004656  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10851                           
 10852                           ; BSR set to: 0
 10853  004658  0100               	movlb	0	; () banked
 10854  00465A  5183               	movf	___fldiv@sign& (0+255),w,b
 10855  00465C  0100               	movlb	0	; () banked
 10856  00465E  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10857                           
 10858                           ; BSR set to: 0
 10859  004660  C077  F077         	movff	___fldiv@b,?___fldiv
 10860  004664  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10861  004668  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10862  00466C  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10863  004670  0012               	return	
 10864  004672                     __end_of___fldiv:
 10865                           	opt stack 0
 10866                           tblptru	equ	0xFF8
 10867                           tblptrh	equ	0xFF7
 10868                           tblptrl	equ	0xFF6
 10869                           tablat	equ	0xFF5
 10870                           prodh	equ	0xFF4
 10871                           prodl	equ	0xFF3
 10872                           postinc0	equ	0xFEE
 10873                           wreg	equ	0xFE8
 10874                           postdec1	equ	0xFE5
 10875                           fsr1l	equ	0xFE1
 10876                           indf2	equ	0xFDF
 10877                           postinc2	equ	0xFDE
 10878                           postdec2	equ	0xFDD
 10879                           fsr2h	equ	0xFDA
 10880                           fsr2l	equ	0xFD9
 10881                           status	equ	0xFD8
 10882                           
 10883 ;; *************** function _delay_s *****************
 10884 ;; Defined at:
 10885 ;;		line 102 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 10886 ;; Parameters:    Size  Location     Type
 10887 ;;  value_s         1    wreg     unsigned char 
 10888 ;; Auto vars:     Size  Location     Type
 10889 ;;  value_s         1   31[BANK0 ] unsigned char 
 10890 ;;  repeat_loop     1   32[BANK0 ] unsigned char 
 10891 ;; Return value:  Size  Location     Type
 10892 ;;                  1    wreg      void 
 10893 ;; Registers used:
 10894 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10895 ;; Tracked objects:
 10896 ;;		On entry : 0/0
 10897 ;;		On exit  : 0/0
 10898 ;;		Unchanged: 0/0
 10899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10901 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10903 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10904 ;;Total ram usage:        2 bytes
 10905 ;; Hardware stack levels used:    1
 10906 ;; Hardware stack levels required when called:    6
 10907 ;; This function calls:
 10908 ;;		_delay_ms
 10909 ;; This function is called by:
 10910 ;;		_park_routine
 10911 ;; This function uses a non-reentrant model
 10912 ;;
 10913                           
 10914                           	psect	text26
 10915  00661E                     __ptext26:
 10916                           	opt stack 0
 10917  00661E                     _delay_s:
 10918                           	opt stack 23
 10919                           
 10920                           ; BSR set to: 0
 10921                           ;incstack = 0
 10922                           ;delay_s@value_s stored from wreg
 10923  00661E  0100               	movlb	0	; () banked
 10924  006620  6F7F               	movwf	delay_s@value_s& (0+255),b
 10925                           
 10926                           ;src\delay.c: 104: unsigned char repeat_loop;
 10927                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
 10928  006622  0E00               	movlw	0
 10929  006624  0100               	movlb	0	; () banked
 10930  006626  6F80               	movwf	delay_s@repeat_loop& (0+255),b
 10931  006628  D009               	goto	l7883
 10932  00662A                     l7879:
 10933                           
 10934                           ; BSR set to: 0
 10935                           ;src\delay.c: 107: delay_ms (1000);
 10936  00662A  0E03               	movlw	3
 10937  00662C  0100               	movlb	0	; () banked
 10938  00662E  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
 10939  006630  0EE8               	movlw	232
 10940  006632  6F7D               	movwf	delay_ms@value_ms& (0+255),b
 10941  006634  ECDF  F032         	call	_delay_ms	;wreg free
 10942  006638  0100               	movlb	0	; () banked
 10943  00663A  2B80               	incf	delay_s@repeat_loop& (0+255),f,b
 10944  00663C                     l7883:
 10945                           
 10946                           ; BSR set to: 0
 10947  00663C  0100               	movlb	0	; () banked
 10948  00663E  517F               	movf	delay_s@value_s& (0+255),w,b
 10949  006640  0100               	movlb	0	; () banked
 10950  006642  5D80               	subwf	delay_s@repeat_loop& (0+255),w,b
 10951  006644  B0D8               	btfsc	status,0,c
 10952  006646  0012               	return	
 10953  006648  D7F0               	goto	l7879
 10954  00664A                     __end_of_delay_s:
 10955                           	opt stack 0
 10956                           tblptru	equ	0xFF8
 10957                           tblptrh	equ	0xFF7
 10958                           tblptrl	equ	0xFF6
 10959                           tablat	equ	0xFF5
 10960                           prodh	equ	0xFF4
 10961                           prodl	equ	0xFF3
 10962                           postinc0	equ	0xFEE
 10963                           wreg	equ	0xFE8
 10964                           postdec1	equ	0xFE5
 10965                           fsr1l	equ	0xFE1
 10966                           indf2	equ	0xFDF
 10967                           postinc2	equ	0xFDE
 10968                           postdec2	equ	0xFDD
 10969                           fsr2h	equ	0xFDA
 10970                           fsr2l	equ	0xFD9
 10971                           status	equ	0xFD8
 10972                           
 10973 ;; *************** function _delay_ms *****************
 10974 ;; Defined at:
 10975 ;;		line 61 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 10976 ;; Parameters:    Size  Location     Type
 10977 ;;  value_ms        2   29[BANK0 ] unsigned int 
 10978 ;; Auto vars:     Size  Location     Type
 10979 ;;		None
 10980 ;; Return value:  Size  Location     Type
 10981 ;;                  1    wreg      void 
 10982 ;; Registers used:
 10983 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10984 ;; Tracked objects:
 10985 ;;		On entry : 0/0
 10986 ;;		On exit  : 0/0
 10987 ;;		Unchanged: 0/0
 10988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10989 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10992 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10993 ;;Total ram usage:        2 bytes
 10994 ;; Hardware stack levels used:    1
 10995 ;; Hardware stack levels required when called:    5
 10996 ;; This function calls:
 10997 ;;		___wmul
 10998 ;; This function is called by:
 10999 ;;		_delay_s
 11000 ;;		_main
 11001 ;;		_park_routine
 11002 ;; This function uses a non-reentrant model
 11003 ;;
 11004                           
 11005                           	psect	text27
 11006  0065BE                     __ptext27:
 11007                           	opt stack 0
 11008  0065BE                     _delay_ms:
 11009                           	opt stack 23
 11010                           
 11011                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 11012                           
 11013                           ; BSR set to: 0
 11014                           ;incstack = 0
 11015  0065BE  C047  F077         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 11016  0065C2  0100               	movlb	0	; () banked
 11017  0065C4  6B78               	clrf	(___wmul@multiplier+1)& (0+255),b
 11018  0065C6  C07D  F079         	movff	delay_ms@value_ms,___wmul@multiplicand
 11019  0065CA  C07E  F07A         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 11020  0065CE  ECC4  F032         	call	___wmul	;wreg free
 11021  0065D2  C077  F038         	movff	?___wmul,_clock_counter_reference	;volatile
 11022  0065D6  C078  F039         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 11023                           
 11024                           ;src\delay.c: 75: while (clock_counter_reference) {
 11025  0065DA  D006               	goto	l569
 11026  0065DC                     l7789:
 11027                           
 11028                           ;src\delay.c: 85: _delay(240);
 11029  0065DC  0E50               	movlw	80
 11030  0065DE                     u11917:
 11031  0065DE  2EE8               	decfsz	wreg,f,c
 11032  0065E0  D7FE               	goto	u11917
 11033                           
 11034                           ;src\delay.c: 88: clock_counter_reference--;
 11035  0065E2  0638               	decf	_clock_counter_reference,f,c	;volatile
 11036  0065E4  A0D8               	btfss	status,0,c
 11037  0065E6  0639               	decf	_clock_counter_reference+1,f,c	;volatile
 11038  0065E8                     l569:
 11039  0065E8  5038               	movf	_clock_counter_reference,w,c	;volatile
 11040  0065EA  1039               	iorwf	_clock_counter_reference+1,w,c	;volatile
 11041  0065EC  B4D8               	btfsc	status,2,c
 11042  0065EE  0012               	return	
 11043  0065F0  D7F5               	goto	l7789
 11044  0065F2                     __end_of_delay_ms:
 11045                           	opt stack 0
 11046                           tblptru	equ	0xFF8
 11047                           tblptrh	equ	0xFF7
 11048                           tblptrl	equ	0xFF6
 11049                           tablat	equ	0xFF5
 11050                           prodh	equ	0xFF4
 11051                           prodl	equ	0xFF3
 11052                           postinc0	equ	0xFEE
 11053                           wreg	equ	0xFE8
 11054                           postdec1	equ	0xFE5
 11055                           fsr1l	equ	0xFE1
 11056                           indf2	equ	0xFDF
 11057                           postinc2	equ	0xFDE
 11058                           postdec2	equ	0xFDD
 11059                           fsr2h	equ	0xFDA
 11060                           fsr2l	equ	0xFD9
 11061                           status	equ	0xFD8
 11062                           
 11063 ;; *************** function ___wmul *****************
 11064 ;; Defined at:
 11065 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
 11066 ;; Parameters:    Size  Location     Type
 11067 ;;  multiplier      2   23[BANK0 ] unsigned int 
 11068 ;;  multiplicand    2   25[BANK0 ] unsigned int 
 11069 ;; Auto vars:     Size  Location     Type
 11070 ;;  product         2   27[BANK0 ] unsigned int 
 11071 ;; Return value:  Size  Location     Type
 11072 ;;                  2   23[BANK0 ] unsigned int 
 11073 ;; Registers used:
 11074 ;;		wreg, status,2, status,0, prodl, prodh
 11075 ;; Tracked objects:
 11076 ;;		On entry : 0/0
 11077 ;;		On exit  : 0/0
 11078 ;;		Unchanged: 0/0
 11079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11080 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11081 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11083 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11084 ;;Total ram usage:        6 bytes
 11085 ;; Hardware stack levels used:    1
 11086 ;; Hardware stack levels required when called:    4
 11087 ;; This function calls:
 11088 ;;		Nothing
 11089 ;; This function is called by:
 11090 ;;		_delay_ms
 11091 ;; This function uses a non-reentrant model
 11092 ;;
 11093                           
 11094                           	psect	text28
 11095  006588                     __ptext28:
 11096                           	opt stack 0
 11097  006588                     ___wmul:
 11098                           	opt stack 23
 11099                           
 11100                           ;incstack = 0
 11101  006588  0100               	movlb	0	; () banked
 11102  00658A  5177               	movf	___wmul@multiplier& (0+255),w,b
 11103  00658C  0100               	movlb	0	; () banked
 11104  00658E  0379               	mulwf	___wmul@multiplicand& (0+255),b
 11105  006590  CFF3 F07B          	movff	prodl,___wmul@product
 11106  006594  CFF4 F07C          	movff	prodh,___wmul@product+1
 11107  006598  0100               	movlb	0	; () banked
 11108  00659A  5177               	movf	___wmul@multiplier& (0+255),w,b
 11109  00659C  0100               	movlb	0	; () banked
 11110  00659E  037A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11111  0065A0  50F3               	movf	prodl,w,c
 11112  0065A2  0100               	movlb	0	; () banked
 11113  0065A4  277C               	addwf	(___wmul@product+1)& (0+255),f,b
 11114  0065A6  0100               	movlb	0	; () banked
 11115  0065A8  5178               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11116  0065AA  0100               	movlb	0	; () banked
 11117  0065AC  0379               	mulwf	___wmul@multiplicand& (0+255),b
 11118  0065AE  50F3               	movf	prodl,w,c
 11119  0065B0  0100               	movlb	0	; () banked
 11120  0065B2  277C               	addwf	(___wmul@product+1)& (0+255),f,b
 11121                           
 11122                           ; BSR set to: 0
 11123  0065B4  C07B  F077         	movff	___wmul@product,?___wmul
 11124  0065B8  C07C  F078         	movff	___wmul@product+1,?___wmul+1
 11125  0065BC  0012               	return	
 11126  0065BE                     __end_of___wmul:
 11127                           	opt stack 0
 11128                           tblptru	equ	0xFF8
 11129                           tblptrh	equ	0xFF7
 11130                           tblptrl	equ	0xFF6
 11131                           tablat	equ	0xFF5
 11132                           prodh	equ	0xFF4
 11133                           prodl	equ	0xFF3
 11134                           postinc0	equ	0xFEE
 11135                           wreg	equ	0xFE8
 11136                           postdec1	equ	0xFE5
 11137                           fsr1l	equ	0xFE1
 11138                           indf2	equ	0xFDF
 11139                           postinc2	equ	0xFDE
 11140                           postdec2	equ	0xFDD
 11141                           fsr2h	equ	0xFDA
 11142                           fsr2l	equ	0xFD9
 11143                           status	equ	0xFD8
 11144                           
 11145 ;; *************** function _configurations *****************
 11146 ;; Defined at:
 11147 ;;		line 486 in file "parcheggio.c"
 11148 ;; Parameters:    Size  Location     Type
 11149 ;;		None
 11150 ;; Auto vars:     Size  Location     Type
 11151 ;;		None
 11152 ;; Return value:  Size  Location     Type
 11153 ;;                  1    wreg      void 
 11154 ;; Registers used:
 11155 ;;		wreg, status,2, status,0, cstack
 11156 ;; Tracked objects:
 11157 ;;		On entry : 0/0
 11158 ;;		On exit  : 0/0
 11159 ;;		Unchanged: 0/0
 11160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11165 ;;Total ram usage:        0 bytes
 11166 ;; Hardware stack levels used:    1
 11167 ;; Hardware stack levels required when called:    6
 11168 ;; This function calls:
 11169 ;;		_CANInitialize
 11170 ;; This function is called by:
 11171 ;;		_main
 11172 ;; This function uses a non-reentrant model
 11173 ;;
 11174                           
 11175                           	psect	text29
 11176  006342                     __ptext29:
 11177                           	opt stack 0
 11178  006342                     _configurations:
 11179                           	opt stack 24
 11180                           
 11181                           ;parcheggio.c: 487: LATA = 0x00;
 11182                           
 11183                           ; BSR set to: 0
 11184                           ;incstack = 0
 11185  006342  0E00               	movlw	0
 11186  006344  6E89               	movwf	3977,c	;volatile
 11187                           
 11188                           ;parcheggio.c: 488: TRISA = 0b11110000;
 11189  006346  0EF0               	movlw	240
 11190  006348  6E92               	movwf	3986,c	;volatile
 11191                           
 11192                           ;parcheggio.c: 489: LATB = 0x00;
 11193  00634A  0E00               	movlw	0
 11194  00634C  6E8A               	movwf	3978,c	;volatile
 11195                           
 11196                           ;parcheggio.c: 490: TRISB = 0b10001010;
 11197  00634E  0E8A               	movlw	138
 11198  006350  6E93               	movwf	3987,c	;volatile
 11199                           
 11200                           ;parcheggio.c: 491: LATC = 0x00;
 11201  006352  0E00               	movlw	0
 11202  006354  6E8B               	movwf	3979,c	;volatile
 11203                           
 11204                           ;parcheggio.c: 492: TRISC = 0b11111111;
 11205  006356  6894               	setf	3988,c	;volatile
 11206                           
 11207                           ;parcheggio.c: 494: ADCON1 = 0xFF;
 11208  006358  68C1               	setf	4033,c	;volatile
 11209                           
 11210                           ;parcheggio.c: 495: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG
      +                          _SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
 11211  00635A  0E06               	movlw	6
 11212  00635C  0100               	movlb	0	; () banked
 11213  00635E  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 11214  006360  0E05               	movlw	5
 11215  006362  0100               	movlb	0	; () banked
 11216  006364  6F86               	movwf	CANInitialize@phaseSeg2& (0+255),b
 11217  006366  0E01               	movlw	1
 11218  006368  0100               	movlb	0	; () banked
 11219  00636A  6F87               	movwf	CANInitialize@SJW& (0+255),b
 11220  00636C  0E03               	movlw	3
 11221  00636E  0100               	movlb	0	; () banked
 11222  006370  6F88               	movwf	CANInitialize@BRP& (0+255),b
 11223  006372  0E9D               	movlw	157
 11224  006374  0100               	movlb	0	; () banked
 11225  006376  6F89               	movwf	CANInitialize@flags& (0+255),b
 11226  006378  0E04               	movlw	4
 11227  00637A  EC45  F02C         	call	_CANInitialize
 11228                           
 11229                           ;parcheggio.c: 498: RCONbits.IPEN = 1;
 11230  00637E  8ED0               	bsf	4048,7,c	;volatile
 11231                           
 11232                           ;parcheggio.c: 499: IPR3bits.RXB1IP = 0;
 11233  006380  92A5               	bcf	4005,1,c	;volatile
 11234                           
 11235                           ;parcheggio.c: 500: IPR3bits.RXB0IP = 0;
 11236  006382  90A5               	bcf	4005,0,c	;volatile
 11237                           
 11238                           ;parcheggio.c: 501: INTCON2bits.TMR0IP = 0;
 11239  006384  94F1               	bcf	intcon2,2,c	;volatile
 11240                           
 11241                           ;parcheggio.c: 504: PIR3bits.RXB1IF = 0;
 11242  006386  92A4               	bcf	4004,1,c	;volatile
 11243                           
 11244                           ;parcheggio.c: 505: PIR3bits.RXB0IF = 0;
 11245  006388  90A4               	bcf	4004,0,c	;volatile
 11246                           
 11247                           ;parcheggio.c: 506: INTCONbits.INT0IF = 0;
 11248  00638A  92F2               	bcf	intcon,1,c	;volatile
 11249                           
 11250                           ;parcheggio.c: 507: INTCONbits.TMR0IF = 0;
 11251  00638C  94F2               	bcf	intcon,2,c	;volatile
 11252                           
 11253                           ;parcheggio.c: 511: PIE3bits.RXB1IE = 1;
 11254  00638E  82A3               	bsf	4003,1,c	;volatile
 11255                           
 11256                           ;parcheggio.c: 512: PIE3bits.RXB0IE = 1;
 11257  006390  80A3               	bsf	4003,0,c	;volatile
 11258                           
 11259                           ;parcheggio.c: 513: INTCONbits.TMR0IE = 1;
 11260  006392  8AF2               	bsf	intcon,5,c	;volatile
 11261                           
 11262                           ;parcheggio.c: 514: INTCONbits.INT0IE = 0;
 11263  006394  98F2               	bcf	intcon,4,c	;volatile
 11264                           
 11265                           ;parcheggio.c: 517: T0CON = 0x80;
 11266  006396  0E80               	movlw	128
 11267  006398  6ED5               	movwf	4053,c	;volatile
 11268                           
 11269                           ;parcheggio.c: 518: TMR0H = 0x34;
 11270  00639A  0E34               	movlw	52
 11271  00639C  6ED7               	movwf	4055,c	;volatile
 11272                           
 11273                           ;parcheggio.c: 519: TMR0L = 0xE0;
 11274  00639E  0EE0               	movlw	224
 11275  0063A0  6ED6               	movwf	4054,c	;volatile
 11276                           
 11277                           ;parcheggio.c: 520: T3CON = 0x11;
 11278  0063A2  0E11               	movlw	17
 11279  0063A4  6EB1               	movwf	4017,c	;volatile
 11280                           
 11281                           ;parcheggio.c: 522: INTCON2bits.INTEDG0 = 1;
 11282  0063A6  8CF1               	bsf	intcon2,6,c	;volatile
 11283                           
 11284                           ;parcheggio.c: 523: INTCONbits.GIEL = 1;
 11285  0063A8  8CF2               	bsf	intcon,6,c	;volatile
 11286                           
 11287                           ;parcheggio.c: 524: INTCONbits.GIEH = 1;
 11288  0063AA  8EF2               	bsf	intcon,7,c	;volatile
 11289  0063AC  0012               	return		;funcret
 11290  0063AE                     __end_of_configurations:
 11291                           	opt stack 0
 11292                           tblptru	equ	0xFF8
 11293                           tblptrh	equ	0xFF7
 11294                           tblptrl	equ	0xFF6
 11295                           tablat	equ	0xFF5
 11296                           prodh	equ	0xFF4
 11297                           prodl	equ	0xFF3
 11298                           intcon	equ	0xFF2
 11299                           intcon2	equ	0xFF1
 11300                           postinc0	equ	0xFEE
 11301                           wreg	equ	0xFE8
 11302                           postdec1	equ	0xFE5
 11303                           fsr1l	equ	0xFE1
 11304                           indf2	equ	0xFDF
 11305                           postinc2	equ	0xFDE
 11306                           postdec2	equ	0xFDD
 11307                           fsr2h	equ	0xFDA
 11308                           fsr2l	equ	0xFD9
 11309                           status	equ	0xFD8
 11310                           
 11311 ;; *************** function _CANInitialize *****************
 11312 ;; Defined at:
 11313 ;;		line 218 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 11314 ;; Parameters:    Size  Location     Type
 11315 ;;  propSeg         1    wreg     unsigned char 
 11316 ;;  phaseSeg1       1   37[BANK0 ] unsigned char 
 11317 ;;  phaseSeg2       1   38[BANK0 ] unsigned char 
 11318 ;;  SJW             1   39[BANK0 ] unsigned char 
 11319 ;;  BRP             1   40[BANK0 ] unsigned char 
 11320 ;;  flags           1   41[BANK0 ] enum E16148
 11321 ;; Auto vars:     Size  Location     Type
 11322 ;;  propSeg         1   46[BANK0 ] unsigned char 
 11323 ;;  FilterConfig    1   48[BANK0 ] unsigned char 
 11324 ;;  FilterConfig    1   47[BANK0 ] unsigned char 
 11325 ;; Return value:  Size  Location     Type
 11326 ;;                  1    wreg      void 
 11327 ;; Registers used:
 11328 ;;		wreg, status,2, status,0, cstack
 11329 ;; Tracked objects:
 11330 ;;		On entry : 0/0
 11331 ;;		On exit  : 0/0
 11332 ;;		Unchanged: 0/0
 11333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11334 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11335 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11336 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11337 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11338 ;;Total ram usage:       12 bytes
 11339 ;; Hardware stack levels used:    1
 11340 ;; Hardware stack levels required when called:    5
 11341 ;; This function calls:
 11342 ;;		_CANOperationMode
 11343 ;;		_CANSetFilter
 11344 ;;		_CANSetMask
 11345 ;; This function is called by:
 11346 ;;		_configurations
 11347 ;; This function uses a non-reentrant model
 11348 ;;
 11349                           
 11350                           	psect	text30
 11351  00588A                     __ptext30:
 11352                           	opt stack 0
 11353  00588A                     _CANInitialize:
 11354                           	opt stack 24
 11355                           
 11356                           ;incstack = 0
 11357                           ;CANInitialize@propSeg stored from wreg
 11358  00588A  0100               	movlb	0	; () banked
 11359  00588C  6F8E               	movwf	CANInitialize@propSeg& (0+255),b
 11360                           
 11361                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
 11362                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
 11363                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
 11364  00588E  0E80               	movlw	128
 11365  005890  EC46  F033         	call	_CANOperationMode
 11366                           
 11367                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
 11368  005894  0E00               	movlw	0
 11369  005896  6E70               	movwf	3952,c	;volatile
 11370                           
 11371                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
 11372  005898  0E00               	movlw	0
 11373  00589A  6E71               	movwf	3953,c	;volatile
 11374                           
 11375                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
 11376  00589C  0E00               	movlw	0
 11377  00589E  6E72               	movwf	3954,c	;volatile
 11378                           
 11379                           ;inc\CANlib.h: 229: SJW= SJW << 6;
 11380  0058A0  0100               	movlb	0	; () banked
 11381  0058A2  4187               	rrncf	CANInitialize@SJW& (0+255),w,b
 11382  0058A4  42E8               	rrncf	wreg,f,c
 11383  0058A6  0BC0               	andlw	192
 11384  0058A8  0100               	movlb	0	; () banked
 11385  0058AA  6F87               	movwf	CANInitialize@SJW& (0+255),b
 11386                           
 11387                           ; BSR set to: 0
 11388                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
 11389  0058AC  0100               	movlb	0	; () banked
 11390  0058AE  5187               	movf	CANInitialize@SJW& (0+255),w,b
 11391  0058B0  1270               	iorwf	3952,f,c	;volatile
 11392                           
 11393                           ; BSR set to: 0
 11394                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
 11395  0058B2  0100               	movlb	0	; () banked
 11396  0058B4  5188               	movf	CANInitialize@BRP& (0+255),w,b
 11397  0058B6  1270               	iorwf	3952,f,c	;volatile
 11398                           
 11399                           ; BSR set to: 0
 11400                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
 11401  0058B8  0100               	movlb	0	; () banked
 11402  0058BA  518E               	movf	CANInitialize@propSeg& (0+255),w,b
 11403  0058BC  1271               	iorwf	3953,f,c	;volatile
 11404                           
 11405                           ; BSR set to: 0
 11406                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
 11407  0058BE  0100               	movlb	0	; () banked
 11408  0058C0  3985               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
 11409  0058C2  42E8               	rrncf	wreg,f,c
 11410  0058C4  0BF8               	andlw	248
 11411  0058C6  0100               	movlb	0	; () banked
 11412  0058C8  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 11413                           
 11414                           ; BSR set to: 0
 11415                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
 11416  0058CA  0100               	movlb	0	; () banked
 11417  0058CC  5185               	movf	CANInitialize@phaseSeg1& (0+255),w,b
 11418  0058CE  1271               	iorwf	3953,f,c	;volatile
 11419                           
 11420                           ; BSR set to: 0
 11421                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
 11422  0058D0  0100               	movlb	0	; () banked
 11423  0058D2  A589               	btfss	CANInitialize@flags& (0+255),2,b
 11424                           
 11425                           ; BSR set to: 0
 11426                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
 11427  0058D4  8C71               	bsf	3953,6,c	;volatile
 11428                           
 11429                           ; BSR set to: 0
 11430                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
 11431  0058D6  0100               	movlb	0	; () banked
 11432  0058D8  B189               	btfsc	CANInitialize@flags& (0+255),0,b
 11433                           
 11434                           ; BSR set to: 0
 11435                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
 11436  0058DA  8E71               	bsf	3953,7,c	;volatile
 11437                           
 11438                           ; BSR set to: 0
 11439                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
 11440                           
 11441                           ; BSR set to: 0
 11442  0058DC  0100               	movlb	0	; () banked
 11443  0058DE  5186               	movf	CANInitialize@phaseSeg2& (0+255),w,b
 11444  0058E0  1272               	iorwf	3954,f,c	;volatile
 11445                           
 11446                           ; BSR set to: 0
 11447                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
 11448  0058E2  0100               	movlb	0	; () banked
 11449  0058E4  B389               	btfsc	CANInitialize@flags& (0+255),1,b
 11450                           
 11451                           ; BSR set to: 0
 11452                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
 11453  0058E6  8C72               	bsf	3954,6,c	;volatile
 11454                           
 11455                           ; BSR set to: 0
 11456                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
 11457                           
 11458                           ; BSR set to: 0
 11459  0058E8  0100               	movlb	0	; () banked
 11460  0058EA  5189               	movf	CANInitialize@flags& (0+255),w,b
 11461  0058EC  0B60               	andlw	96
 11462  0058EE  6E60               	movwf	3936,c	;volatile
 11463                           
 11464                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
 11465  0058F0  0100               	movlb	0	; () banked
 11466  0058F2  5189               	movf	CANInitialize@flags& (0+255),w,b
 11467  0058F4  0B10               	andlw	16
 11468  0058F6  0AFF               	xorlw	255
 11469  0058F8  B4D8               	btfsc	status,2,c
 11470                           
 11471                           ; BSR set to: 0
 11472                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
 11473  0058FA  8460               	bsf	3936,2,c	;volatile
 11474                           
 11475                           ; BSR set to: 0
 11476                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
 11477  0058FC  CF60 FF50          	movff	3936,3920	;volatile
 11478                           
 11479                           ; BSR set to: 0
 11480                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
 11481  005900  0E00               	movlw	0
 11482  005902  0100               	movlb	0	; () banked
 11483  005904  6F77               	movwf	CANSetMask@mask& (0+255),b
 11484  005906  0E00               	movlw	0
 11485  005908  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 11486  00590A  0E00               	movlw	0
 11487  00590C  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 11488  00590E  0E00               	movlw	0
 11489  005910  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 11490  005912  0EF7               	movlw	247
 11491  005914  0100               	movlb	0	; () banked
 11492  005916  6F7B               	movwf	CANSetMask@type& (0+255),b
 11493  005918  0E01               	movlw	1
 11494  00591A  EC39  F023         	call	_CANSetMask
 11495                           
 11496                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
 11497  00591E  0E00               	movlw	0
 11498  005920  0100               	movlb	0	; () banked
 11499  005922  6F77               	movwf	CANSetMask@mask& (0+255),b
 11500  005924  0E00               	movlw	0
 11501  005926  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 11502  005928  0E00               	movlw	0
 11503  00592A  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 11504  00592C  0E00               	movlw	0
 11505  00592E  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 11506  005930  0EF7               	movlw	247
 11507  005932  0100               	movlb	0	; () banked
 11508  005934  6F7B               	movwf	CANSetMask@type& (0+255),b
 11509  005936  0E02               	movlw	2
 11510  005938  EC39  F023         	call	_CANSetMask
 11511                           
 11512                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
 11513  00593C  D00F               	goto	l5779
 11514  00593E                     l5773:
 11515                           
 11516                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
 11517  00593E  0EF7               	movlw	247
 11518  005940  0100               	movlb	0	; () banked
 11519  005942  6F8F               	movwf	CANInitialize@FilterConfig1& (0+255),b
 11520  005944  D007               	goto	l5775
 11521  005946                     l358:
 11522                           
 11523                           ; BSR set to: 0
 11524                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
 11525  005946  0100               	movlb	0	; () banked
 11526  005948  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 11527                           
 11528                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
 11529  00594A  0100               	movlb	0	; () banked
 11530  00594C  6990               	setf	CANInitialize@FilterConfig2& (0+255),b
 11531                           
 11532                           ;inc\CANlib.h: 273: break;
 11533  00594E  D028               	goto	l5781
 11534  005950                     l359:
 11535                           
 11536                           ; BSR set to: 0
 11537                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
 11538  005950  0100               	movlb	0	; () banked
 11539  005952  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 11540  005954                     l5775:
 11541                           
 11542                           ; BSR set to: 0
 11543                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
 11544  005954  0EF7               	movlw	247
 11545  005956  0100               	movlb	0	; () banked
 11546  005958  6F90               	movwf	CANInitialize@FilterConfig2& (0+255),b
 11547                           
 11548                           ; BSR set to: 0
 11549                           ;inc\CANlib.h: 278: }
 11550                           
 11551                           ;inc\CANlib.h: 277: break;
 11552  00595A  D022               	goto	l5781
 11553  00595C                     l5779:
 11554  00595C  0E9F               	movlw	159
 11555  00595E  0100               	movlb	0	; () banked
 11556  005960  6F8A               	movwf	??_CANInitialize& (0+255),b
 11557  005962  0EFF               	movlw	255
 11558  005964  0100               	movlb	0	; () banked
 11559  005966  6F8B               	movwf	(??_CANInitialize+1)& (0+255),b
 11560  005968  0100               	movlb	0	; () banked
 11561  00596A  5189               	movf	CANInitialize@flags& (0+255),w,b
 11562  00596C  0B60               	andlw	96
 11563  00596E  0100               	movlb	0	; () banked
 11564  005970  6F8C               	movwf	(??_CANInitialize+2)& (0+255),b
 11565  005972  6B8D               	clrf	(??_CANInitialize+3)& (0+255),b
 11566  005974  0100               	movlb	0	; () banked
 11567  005976  518A               	movf	??_CANInitialize& (0+255),w,b
 11568  005978  0100               	movlb	0	; () banked
 11569  00597A  138C               	iorwf	(??_CANInitialize+2)& (0+255),f,b
 11570  00597C  0100               	movlb	0	; () banked
 11571  00597E  518B               	movf	(??_CANInitialize+1)& (0+255),w,b
 11572  005980  0100               	movlb	0	; () banked
 11573  005982  138D               	iorwf	(??_CANInitialize+3)& (0+255),f,b
 11574                           
 11575                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11576                           ; Switch size 1, requested type "space"
 11577                           ; Number of cases is 1, Range of values is 0 to 0
 11578                           ; switch strategies available:
 11579                           ; Name         Instructions Cycles
 11580                           ; simple_byte            4     3 (average)
 11581                           ;	Chosen strategy is simple_byte
 11582  005984  0100               	movlb	0	; () banked
 11583  005986  518D               	movf	(??_CANInitialize+3)& (0+255),w,b
 11584  005988  0A00               	xorlw	0	; case 0
 11585  00598A  A4D8               	btfss	status,2,c
 11586  00598C  D7E1               	goto	l359
 11587                           
 11588                           ; BSR set to: 0
 11589                           ; Switch size 1, requested type "space"
 11590                           ; Number of cases is 2, Range of values is 191 to 223
 11591                           ; switch strategies available:
 11592                           ; Name         Instructions Cycles
 11593                           ; simple_byte            7     4 (average)
 11594                           ;	Chosen strategy is simple_byte
 11595  00598E  0100               	movlb	0	; () banked
 11596  005990  518C               	movf	(??_CANInitialize+2)& (0+255),w,b
 11597  005992  0ABF               	xorlw	191	; case 191
 11598  005994  B4D8               	btfsc	status,2,c
 11599  005996  D7D7               	goto	l358
 11600  005998  0A60               	xorlw	96	; case 223
 11601  00599A  B4D8               	btfsc	status,2,c
 11602  00599C  D7D0               	goto	l5773
 11603  00599E  D7D8               	goto	l359
 11604  0059A0                     l5781:
 11605                           
 11606                           ; BSR set to: 0
 11607                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
 11608  0059A0  0E00               	movlw	0
 11609  0059A2  0100               	movlb	0	; () banked
 11610  0059A4  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11611  0059A6  0E00               	movlw	0
 11612  0059A8  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11613  0059AA  0E00               	movlw	0
 11614  0059AC  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11615  0059AE  0E00               	movlw	0
 11616  0059B0  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11617  0059B2  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11618  0059B6  0E00               	movlw	0
 11619  0059B8  ECA9  F006         	call	_CANSetFilter
 11620                           
 11621                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
 11622  0059BC  0E00               	movlw	0
 11623  0059BE  0100               	movlb	0	; () banked
 11624  0059C0  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11625  0059C2  0E00               	movlw	0
 11626  0059C4  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11627  0059C6  0E00               	movlw	0
 11628  0059C8  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11629  0059CA  0E00               	movlw	0
 11630  0059CC  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11631  0059CE  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11632  0059D2  0E01               	movlw	1
 11633  0059D4  ECA9  F006         	call	_CANSetFilter
 11634                           
 11635                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
 11636  0059D8  0E00               	movlw	0
 11637  0059DA  0100               	movlb	0	; () banked
 11638  0059DC  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11639  0059DE  0E00               	movlw	0
 11640  0059E0  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11641  0059E2  0E00               	movlw	0
 11642  0059E4  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11643  0059E6  0E00               	movlw	0
 11644  0059E8  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11645  0059EA  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11646  0059EE  0E02               	movlw	2
 11647  0059F0  ECA9  F006         	call	_CANSetFilter
 11648                           
 11649                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
 11650  0059F4  0E00               	movlw	0
 11651  0059F6  0100               	movlb	0	; () banked
 11652  0059F8  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11653  0059FA  0E00               	movlw	0
 11654  0059FC  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11655  0059FE  0E00               	movlw	0
 11656  005A00  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11657  005A02  0E00               	movlw	0
 11658  005A04  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11659  005A06  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11660  005A0A  0E03               	movlw	3
 11661  005A0C  ECA9  F006         	call	_CANSetFilter
 11662                           
 11663                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
 11664  005A10  0E00               	movlw	0
 11665  005A12  0100               	movlb	0	; () banked
 11666  005A14  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11667  005A16  0E00               	movlw	0
 11668  005A18  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11669  005A1A  0E00               	movlw	0
 11670  005A1C  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11671  005A1E  0E00               	movlw	0
 11672  005A20  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11673  005A22  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11674  005A26  0E04               	movlw	4
 11675  005A28  ECA9  F006         	call	_CANSetFilter
 11676                           
 11677                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
 11678  005A2C  0E00               	movlw	0
 11679  005A2E  0100               	movlb	0	; () banked
 11680  005A30  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11681  005A32  0E00               	movlw	0
 11682  005A34  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11683  005A36  0E00               	movlw	0
 11684  005A38  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11685  005A3A  0E00               	movlw	0
 11686  005A3C  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11687  005A3E  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11688  005A42  0E05               	movlw	5
 11689  005A44  ECA9  F006         	call	_CANSetFilter
 11690                           
 11691                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
 11692  005A48  0E00               	movlw	0
 11693  005A4A  EC46  F033         	call	_CANOperationMode
 11694  005A4E  0012               	return		;funcret
 11695  005A50                     __end_of_CANInitialize:
 11696                           	opt stack 0
 11697                           tblptru	equ	0xFF8
 11698                           tblptrh	equ	0xFF7
 11699                           tblptrl	equ	0xFF6
 11700                           tablat	equ	0xFF5
 11701                           prodh	equ	0xFF4
 11702                           prodl	equ	0xFF3
 11703                           intcon	equ	0xFF2
 11704                           intcon2	equ	0xFF1
 11705                           postinc0	equ	0xFEE
 11706                           wreg	equ	0xFE8
 11707                           postdec1	equ	0xFE5
 11708                           fsr1l	equ	0xFE1
 11709                           indf2	equ	0xFDF
 11710                           postinc2	equ	0xFDE
 11711                           postdec2	equ	0xFDD
 11712                           fsr2h	equ	0xFDA
 11713                           fsr2l	equ	0xFD9
 11714                           status	equ	0xFD8
 11715                           
 11716 ;; *************** function _CANSetMask *****************
 11717 ;; Defined at:
 11718 ;;		line 640 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 11719 ;; Parameters:    Size  Location     Type
 11720 ;;  numBuffer       1    wreg     enum E16182
 11721 ;;  mask            4   23[BANK0 ] unsigned long 
 11722 ;;  type            1   27[BANK0 ] enum E16148
 11723 ;; Auto vars:     Size  Location     Type
 11724 ;;  numBuffer       1   32[BANK0 ] enum E16182
 11725 ;;  tamp            4   33[BANK0 ] unsigned long 
 11726 ;; Return value:  Size  Location     Type
 11727 ;;                  1    wreg      void 
 11728 ;; Registers used:
 11729 ;;		wreg, status,2, status,0
 11730 ;; Tracked objects:
 11731 ;;		On entry : 0/0
 11732 ;;		On exit  : 0/0
 11733 ;;		Unchanged: 0/0
 11734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11735 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11736 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11737 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11738 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11739 ;;Total ram usage:       14 bytes
 11740 ;; Hardware stack levels used:    1
 11741 ;; Hardware stack levels required when called:    4
 11742 ;; This function calls:
 11743 ;;		Nothing
 11744 ;; This function is called by:
 11745 ;;		_CANInitialize
 11746 ;; This function uses a non-reentrant model
 11747 ;;
 11748                           
 11749                           	psect	text31
 11750  004672                     __ptext31:
 11751                           	opt stack 0
 11752  004672                     _CANSetMask:
 11753                           	opt stack 24
 11754                           
 11755                           ;incstack = 0
 11756                           ;CANSetMask@numBuffer stored from wreg
 11757  004672  0100               	movlb	0	; () banked
 11758  004674  6F80               	movwf	CANSetMask@numBuffer& (0+255),b
 11759                           
 11760                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
 11761  004676  0100               	movlb	0	; () banked
 11762  004678  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 11763  00467A  A4D8               	btfss	status,2,c
 11764  00467C  D056               	goto	l5253
 11765                           
 11766                           ; BSR set to: 0
 11767  00467E  0100               	movlb	0	; () banked
 11768  004680  297B               	incf	CANSetMask@type& (0+255),w,b
 11769  004682  A4D8               	btfss	status,2,c
 11770  004684  D052               	goto	l5253
 11771                           
 11772                           ; BSR set to: 0
 11773                           ;inc\CANlib.h: 644: {
 11774                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
 11775  004686  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11776  00468A  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11777  00468E  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11778  004692  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11779  004696  0E04               	movlw	4
 11780  004698  D006               	goto	u6140
 11781  00469A                     u6145:
 11782  00469A  0100               	movlb	0	; () banked
 11783  00469C  90D8               	bcf	status,0,c
 11784  00469E  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11785  0046A0  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11786  0046A2  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11787  0046A4  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11788  0046A6                     u6140:
 11789  0046A6  2EE8               	decfsz	wreg,f,c
 11790  0046A8  D7F8               	goto	u6145
 11791  0046AA  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11792  0046AE  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11793  0046B2  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11794  0046B6  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11795                           
 11796                           ; BSR set to: 0
 11797                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
 11798  0046BA  0100               	movlb	0	; () banked
 11799  0046BC  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11800  0046BE  0100               	movlb	0	; () banked
 11801  0046C0  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11802  0046C2  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11803  0046C4  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11804  0046C6  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11805                           
 11806                           ; BSR set to: 0
 11807                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
 11808  0046C8  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 11809                           
 11810                           ; BSR set to: 0
 11811                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
 11812  0046CC  0E07               	movlw	7
 11813  0046CE  0100               	movlb	0	; () banked
 11814  0046D0  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11815  0046D2  0100               	movlb	0	; () banked
 11816  0046D4  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11817  0046D6  0E00               	movlw	0
 11818  0046D8  0100               	movlb	0	; () banked
 11819  0046DA  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11820  0046DC  0100               	movlb	0	; () banked
 11821  0046DE  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11822  0046E0  0E00               	movlw	0
 11823  0046E2  0100               	movlb	0	; () banked
 11824  0046E4  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11825  0046E6  0100               	movlb	0	; () banked
 11826  0046E8  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11827  0046EA  0E00               	movlw	0
 11828  0046EC  0100               	movlb	0	; () banked
 11829  0046EE  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11830  0046F0  0100               	movlb	0	; () banked
 11831  0046F2  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11832                           
 11833                           ; BSR set to: 0
 11834                           ;inc\CANlib.h: 650: tamp = tamp << 5;
 11835  0046F4  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11836  0046F8  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11837  0046FC  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11838  004700  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11839  004704  0E05               	movlw	5
 11840  004706                     u6155:
 11841  004706  90D8               	bcf	status,0,c
 11842  004708  0100               	movlb	0	; () banked
 11843  00470A  377C               	rlcf	??_CANSetMask& (0+255),f,b
 11844  00470C  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 11845  00470E  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 11846  004710  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 11847  004712  2EE8               	decfsz	wreg,f,c
 11848  004714  D7F8               	goto	u6155
 11849  004716  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11850  00471A  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11851  00471E  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11852  004722  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11853                           
 11854                           ; BSR set to: 0
 11855                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
 11856  004726  C081  FF19         	movff	CANSetMask@tamp,3865	;volatile
 11857  00472A                     l5253:
 11858                           
 11859                           ; BSR set to: 0
 11860                           ;inc\CANlib.h: 652: }
 11861                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
 11862  00472A  0E02               	movlw	2
 11863  00472C  0100               	movlb	0	; () banked
 11864  00472E  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 11865  004730  A4D8               	btfss	status,2,c
 11866  004732  D056               	goto	l5269
 11867                           
 11868                           ; BSR set to: 0
 11869  004734  0100               	movlb	0	; () banked
 11870  004736  297B               	incf	CANSetMask@type& (0+255),w,b
 11871  004738  A4D8               	btfss	status,2,c
 11872  00473A  D052               	goto	l5269
 11873                           
 11874                           ; BSR set to: 0
 11875                           ;inc\CANlib.h: 655: {
 11876                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
 11877  00473C  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11878  004740  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11879  004744  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11880  004748  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11881  00474C  0E04               	movlw	4
 11882  00474E  D006               	goto	u6180
 11883  004750                     u6185:
 11884  004750  0100               	movlb	0	; () banked
 11885  004752  90D8               	bcf	status,0,c
 11886  004754  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11887  004756  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11888  004758  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11889  00475A  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11890  00475C                     u6180:
 11891  00475C  2EE8               	decfsz	wreg,f,c
 11892  00475E  D7F8               	goto	u6185
 11893  004760  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11894  004764  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11895  004768  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11896  00476C  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11897                           
 11898                           ; BSR set to: 0
 11899                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
 11900  004770  0100               	movlb	0	; () banked
 11901  004772  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11902  004774  0100               	movlb	0	; () banked
 11903  004776  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11904  004778  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11905  00477A  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11906  00477C  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11907                           
 11908                           ; BSR set to: 0
 11909                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
 11910  00477E  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 11911                           
 11912                           ; BSR set to: 0
 11913                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
 11914  004782  0E07               	movlw	7
 11915  004784  0100               	movlb	0	; () banked
 11916  004786  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11917  004788  0100               	movlb	0	; () banked
 11918  00478A  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11919  00478C  0E00               	movlw	0
 11920  00478E  0100               	movlb	0	; () banked
 11921  004790  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11922  004792  0100               	movlb	0	; () banked
 11923  004794  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11924  004796  0E00               	movlw	0
 11925  004798  0100               	movlb	0	; () banked
 11926  00479A  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11927  00479C  0100               	movlb	0	; () banked
 11928  00479E  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11929  0047A0  0E00               	movlw	0
 11930  0047A2  0100               	movlb	0	; () banked
 11931  0047A4  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11932  0047A6  0100               	movlb	0	; () banked
 11933  0047A8  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11934                           
 11935                           ; BSR set to: 0
 11936                           ;inc\CANlib.h: 661: tamp = tamp << 5;
 11937  0047AA  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11938  0047AE  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11939  0047B2  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11940  0047B6  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11941  0047BA  0E05               	movlw	5
 11942  0047BC                     u6195:
 11943  0047BC  90D8               	bcf	status,0,c
 11944  0047BE  0100               	movlb	0	; () banked
 11945  0047C0  377C               	rlcf	??_CANSetMask& (0+255),f,b
 11946  0047C2  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 11947  0047C4  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 11948  0047C6  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 11949  0047C8  2EE8               	decfsz	wreg,f,c
 11950  0047CA  D7F8               	goto	u6195
 11951  0047CC  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11952  0047D0  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11953  0047D4  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11954  0047D8  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11955                           
 11956                           ; BSR set to: 0
 11957                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
 11958  0047DC  C081  FF1D         	movff	CANSetMask@tamp,3869	;volatile
 11959  0047E0                     l5269:
 11960                           
 11961                           ; BSR set to: 0
 11962                           ;inc\CANlib.h: 663: }
 11963                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
 11964  0047E0  0100               	movlb	0	; () banked
 11965  0047E2  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 11966  0047E4  A4D8               	btfss	status,2,c
 11967  0047E6  D087               	goto	l5301
 11968                           
 11969                           ; BSR set to: 0
 11970  0047E8  0EF7               	movlw	247
 11971  0047EA  0100               	movlb	0	; () banked
 11972  0047EC  197B               	xorwf	CANSetMask@type& (0+255),w,b
 11973  0047EE  A4D8               	btfss	status,2,c
 11974  0047F0  D082               	goto	l5301
 11975                           
 11976                           ; BSR set to: 0
 11977                           ;inc\CANlib.h: 666: {
 11978                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
 11979  0047F2  0100               	movlb	0	; () banked
 11980  0047F4  5177               	movf	CANSetMask@mask& (0+255),w,b
 11981  0047F6  0100               	movlb	0	; () banked
 11982  0047F8  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11983  0047FA  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11984  0047FC  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11985  0047FE  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11986                           
 11987                           ; BSR set to: 0
 11988                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
 11989  004800  C081  FF1B         	movff	CANSetMask@tamp,3867	;volatile
 11990                           
 11991                           ; BSR set to: 0
 11992                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
 11993  004804  0E00               	movlw	0
 11994  004806  0100               	movlb	0	; () banked
 11995  004808  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11996  00480A  0100               	movlb	0	; () banked
 11997  00480C  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11998  00480E  0EFF               	movlw	255
 11999  004810  0100               	movlb	0	; () banked
 12000  004812  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 12001  004814  0100               	movlb	0	; () banked
 12002  004816  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 12003  004818  0E00               	movlw	0
 12004  00481A  0100               	movlb	0	; () banked
 12005  00481C  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 12006  00481E  0100               	movlb	0	; () banked
 12007  004820  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 12008  004822  0E00               	movlw	0
 12009  004824  0100               	movlb	0	; () banked
 12010  004826  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 12011  004828  0100               	movlb	0	; () banked
 12012  00482A  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 12013                           
 12014                           ; BSR set to: 0
 12015                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
 12016  00482C  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 12017  004830  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 12018  004834  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 12019  004838  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 12020  00483C  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 12021  004840  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 12022  004844  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 12023  004848  0100               	movlb	0	; () banked
 12024  00484A  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 12025  00484C  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12026  004850  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12027  004854  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12028  004858  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12029                           
 12030                           ; BSR set to: 0
 12031                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
 12032  00485C  C081  FF1A         	movff	CANSetMask@tamp,3866	;volatile
 12033                           
 12034                           ; BSR set to: 0
 12035                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
 12036  004860  0100               	movlb	0	; () banked
 12037  004862  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 12038  004864  D003               	goto	l432
 12039                           
 12040                           ; BSR set to: 0
 12041                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
 12042  004866  010F               	movlb	15	; () banked
 12043  004868  8119               	bsf	25,0,b	;volatile
 12044  00486A  D002               	goto	l433
 12045  00486C                     l432:
 12046                           
 12047                           ; BSR set to: 0
 12048                           ;inc\CANlib.h: 676: else
 12049                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
 12050  00486C  010F               	movlb	15	; () banked
 12051  00486E  9119               	bcf	25,0,b	;volatile
 12052  004870                     l433:
 12053                           
 12054                           ; BSR set to: 15
 12055                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
 12056  004870  0100               	movlb	0	; () banked
 12057  004872  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 12058  004874  D003               	goto	l434
 12059                           
 12060                           ; BSR set to: 0
 12061                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
 12062  004876  010F               	movlb	15	; () banked
 12063  004878  8319               	bsf	25,1,b	;volatile
 12064  00487A  D002               	goto	l435
 12065  00487C                     l434:
 12066                           
 12067                           ; BSR set to: 0
 12068                           ;inc\CANlib.h: 681: else
 12069                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
 12070  00487C  010F               	movlb	15	; () banked
 12071  00487E  9319               	bcf	25,1,b	;volatile
 12072  004880                     l435:
 12073                           
 12074                           ; BSR set to: 15
 12075                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
 12076  004880  0100               	movlb	0	; () banked
 12077  004882  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 12078  004884  D003               	goto	l436
 12079                           
 12080                           ; BSR set to: 0
 12081                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
 12082  004886  010F               	movlb	15	; () banked
 12083  004888  8B19               	bsf	25,5,b	;volatile
 12084  00488A  D002               	goto	l437
 12085  00488C                     l436:
 12086                           
 12087                           ; BSR set to: 0
 12088                           ;inc\CANlib.h: 686: else
 12089                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
 12090  00488C  010F               	movlb	15	; () banked
 12091  00488E  9B19               	bcf	25,5,b	;volatile
 12092  004890                     l437:
 12093                           
 12094                           ; BSR set to: 15
 12095                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
 12096  004890  0100               	movlb	0	; () banked
 12097  004892  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 12098  004894  D003               	goto	l438
 12099                           
 12100                           ; BSR set to: 0
 12101                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
 12102  004896  010F               	movlb	15	; () banked
 12103  004898  8D19               	bsf	25,6,b	;volatile
 12104  00489A  D002               	goto	l439
 12105  00489C                     l438:
 12106                           
 12107                           ; BSR set to: 0
 12108                           ;inc\CANlib.h: 691: else
 12109                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
 12110  00489C  010F               	movlb	15	; () banked
 12111  00489E  9D19               	bcf	25,6,b	;volatile
 12112  0048A0                     l439:
 12113                           
 12114                           ; BSR set to: 15
 12115                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
 12116  0048A0  0100               	movlb	0	; () banked
 12117  0048A2  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 12118  0048A4  D003               	goto	l440
 12119                           
 12120                           ; BSR set to: 0
 12121                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
 12122  0048A6  010F               	movlb	15	; () banked
 12123  0048A8  8F19               	bsf	25,7,b	;volatile
 12124  0048AA  D002               	goto	l5295
 12125  0048AC                     l440:
 12126                           
 12127                           ; BSR set to: 0
 12128                           ;inc\CANlib.h: 696: else
 12129                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
 12130  0048AC  010F               	movlb	15	; () banked
 12131  0048AE  9F19               	bcf	25,7,b	;volatile
 12132  0048B0                     l5295:
 12133                           
 12134                           ; BSR set to: 15
 12135                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
 12136  0048B0  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 12137  0048B4  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 12138  0048B8  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 12139  0048BC  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 12140  0048C0  0E16               	movlw	22
 12141  0048C2  D006               	goto	u6270
 12142  0048C4                     u6275:
 12143  0048C4  0100               	movlb	0	; () banked
 12144  0048C6  90D8               	bcf	status,0,c
 12145  0048C8  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 12146  0048CA  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 12147  0048CC  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 12148  0048CE  337C               	rrcf	??_CANSetMask& (0+255),f,b
 12149  0048D0                     u6270:
 12150  0048D0  2EE8               	decfsz	wreg,f,c
 12151  0048D2  D7F8               	goto	u6275
 12152  0048D4  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12153  0048D8  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12154  0048DC  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12155  0048E0  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12156                           
 12157                           ; BSR set to: 0
 12158                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
 12159  0048E4  0100               	movlb	0	; () banked
 12160  0048E6  5181               	movf	CANSetMask@tamp& (0+255),w,b
 12161  0048E8  0100               	movlb	0	; () banked
 12162  0048EA  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12163  0048EC  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12164  0048EE  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12165  0048F0  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12166                           
 12167                           ; BSR set to: 0
 12168                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
 12169  0048F2  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 12170  0048F6                     l5301:
 12171                           
 12172                           ; BSR set to: 0
 12173                           ;inc\CANlib.h: 702: }
 12174                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
 12175  0048F6  0E02               	movlw	2
 12176  0048F8  0100               	movlb	0	; () banked
 12177  0048FA  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 12178  0048FC  A4D8               	btfss	status,2,c
 12179  0048FE  0012               	return	
 12180                           
 12181                           ; BSR set to: 0
 12182  004900  0EF7               	movlw	247
 12183  004902  0100               	movlb	0	; () banked
 12184  004904  197B               	xorwf	CANSetMask@type& (0+255),w,b
 12185  004906  A4D8               	btfss	status,2,c
 12186  004908  0012               	return	
 12187                           
 12188                           ; BSR set to: 0
 12189                           ;inc\CANlib.h: 705: {
 12190                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
 12191  00490A  0100               	movlb	0	; () banked
 12192  00490C  5177               	movf	CANSetMask@mask& (0+255),w,b
 12193  00490E  0100               	movlb	0	; () banked
 12194  004910  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12195  004912  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12196  004914  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12197  004916  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12198                           
 12199                           ; BSR set to: 0
 12200                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
 12201  004918  C081  FF1F         	movff	CANSetMask@tamp,3871	;volatile
 12202                           
 12203                           ; BSR set to: 0
 12204                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
 12205  00491C  0E00               	movlw	0
 12206  00491E  0100               	movlb	0	; () banked
 12207  004920  1577               	andwf	CANSetMask@mask& (0+255),w,b
 12208  004922  0100               	movlb	0	; () banked
 12209  004924  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12210  004926  0EFF               	movlw	255
 12211  004928  0100               	movlb	0	; () banked
 12212  00492A  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 12213  00492C  0100               	movlb	0	; () banked
 12214  00492E  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 12215  004930  0E00               	movlw	0
 12216  004932  0100               	movlb	0	; () banked
 12217  004934  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 12218  004936  0100               	movlb	0	; () banked
 12219  004938  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 12220  00493A  0E00               	movlw	0
 12221  00493C  0100               	movlb	0	; () banked
 12222  00493E  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 12223  004940  0100               	movlb	0	; () banked
 12224  004942  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 12225                           
 12226                           ; BSR set to: 0
 12227                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
 12228  004944  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 12229  004948  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 12230  00494C  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 12231  004950  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 12232  004954  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 12233  004958  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 12234  00495C  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 12235  004960  0100               	movlb	0	; () banked
 12236  004962  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 12237  004964  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12238  004968  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12239  00496C  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12240  004970  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12241                           
 12242                           ; BSR set to: 0
 12243                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
 12244  004974  C081  FF1E         	movff	CANSetMask@tamp,3870	;volatile
 12245                           
 12246                           ; BSR set to: 0
 12247                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
 12248  004978  0100               	movlb	0	; () banked
 12249  00497A  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 12250  00497C  D003               	goto	l443
 12251                           
 12252                           ; BSR set to: 0
 12253                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
 12254  00497E  010F               	movlb	15	; () banked
 12255  004980  811D               	bsf	29,0,b	;volatile
 12256  004982  D002               	goto	l444
 12257  004984                     l443:
 12258                           
 12259                           ; BSR set to: 0
 12260                           ;inc\CANlib.h: 715: else
 12261                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
 12262  004984  010F               	movlb	15	; () banked
 12263  004986  911D               	bcf	29,0,b	;volatile
 12264  004988                     l444:
 12265                           
 12266                           ; BSR set to: 15
 12267                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
 12268  004988  0100               	movlb	0	; () banked
 12269  00498A  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 12270  00498C  D003               	goto	l445
 12271                           
 12272                           ; BSR set to: 0
 12273                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
 12274  00498E  010F               	movlb	15	; () banked
 12275  004990  831D               	bsf	29,1,b	;volatile
 12276  004992  D002               	goto	l446
 12277  004994                     l445:
 12278                           
 12279                           ; BSR set to: 0
 12280                           ;inc\CANlib.h: 720: else
 12281                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
 12282  004994  010F               	movlb	15	; () banked
 12283  004996  931D               	bcf	29,1,b	;volatile
 12284  004998                     l446:
 12285                           
 12286                           ; BSR set to: 15
 12287                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
 12288  004998  0100               	movlb	0	; () banked
 12289  00499A  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 12290  00499C  D003               	goto	l447
 12291                           
 12292                           ; BSR set to: 0
 12293                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
 12294  00499E  010F               	movlb	15	; () banked
 12295  0049A0  8B1D               	bsf	29,5,b	;volatile
 12296  0049A2  D002               	goto	l448
 12297  0049A4                     l447:
 12298                           
 12299                           ; BSR set to: 0
 12300                           ;inc\CANlib.h: 725: else
 12301                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
 12302  0049A4  010F               	movlb	15	; () banked
 12303  0049A6  9B1D               	bcf	29,5,b	;volatile
 12304  0049A8                     l448:
 12305                           
 12306                           ; BSR set to: 15
 12307                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
 12308  0049A8  0100               	movlb	0	; () banked
 12309  0049AA  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 12310  0049AC  D003               	goto	l449
 12311                           
 12312                           ; BSR set to: 0
 12313                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
 12314  0049AE  010F               	movlb	15	; () banked
 12315  0049B0  8D1D               	bsf	29,6,b	;volatile
 12316  0049B2  D002               	goto	l450
 12317  0049B4                     l449:
 12318                           
 12319                           ; BSR set to: 0
 12320                           ;inc\CANlib.h: 730: else
 12321                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
 12322  0049B4  010F               	movlb	15	; () banked
 12323  0049B6  9D1D               	bcf	29,6,b	;volatile
 12324  0049B8                     l450:
 12325                           
 12326                           ; BSR set to: 15
 12327                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
 12328  0049B8  0100               	movlb	0	; () banked
 12329  0049BA  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 12330  0049BC  D003               	goto	l451
 12331                           
 12332                           ; BSR set to: 0
 12333                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
 12334  0049BE  010F               	movlb	15	; () banked
 12335  0049C0  8F1D               	bsf	29,7,b	;volatile
 12336  0049C2  D002               	goto	l5327
 12337  0049C4                     l451:
 12338                           
 12339                           ; BSR set to: 0
 12340                           ;inc\CANlib.h: 735: else
 12341                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
 12342  0049C4  010F               	movlb	15	; () banked
 12343  0049C6  9F1D               	bcf	29,7,b	;volatile
 12344  0049C8                     l5327:
 12345                           
 12346                           ; BSR set to: 15
 12347                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
 12348  0049C8  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 12349  0049CC  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 12350  0049D0  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 12351  0049D4  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 12352  0049D8  0E16               	movlw	22
 12353  0049DA  D006               	goto	u6350
 12354  0049DC                     u6355:
 12355  0049DC  0100               	movlb	0	; () banked
 12356  0049DE  90D8               	bcf	status,0,c
 12357  0049E0  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 12358  0049E2  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 12359  0049E4  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 12360  0049E6  337C               	rrcf	??_CANSetMask& (0+255),f,b
 12361  0049E8                     u6350:
 12362  0049E8  2EE8               	decfsz	wreg,f,c
 12363  0049EA  D7F8               	goto	u6355
 12364  0049EC  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12365  0049F0  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12366  0049F4  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12367  0049F8  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12368                           
 12369                           ; BSR set to: 0
 12370                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
 12371  0049FC  0100               	movlb	0	; () banked
 12372  0049FE  5181               	movf	CANSetMask@tamp& (0+255),w,b
 12373  004A00  0100               	movlb	0	; () banked
 12374  004A02  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12375  004A04  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12376  004A06  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12377  004A08  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12378                           
 12379                           ; BSR set to: 0
 12380                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
 12381  004A0A  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 12382  004A0E  0012               	return	
 12383  004A10                     __end_of_CANSetMask:
 12384                           	opt stack 0
 12385                           tblptru	equ	0xFF8
 12386                           tblptrh	equ	0xFF7
 12387                           tblptrl	equ	0xFF6
 12388                           tablat	equ	0xFF5
 12389                           prodh	equ	0xFF4
 12390                           prodl	equ	0xFF3
 12391                           intcon	equ	0xFF2
 12392                           intcon2	equ	0xFF1
 12393                           postinc0	equ	0xFEE
 12394                           wreg	equ	0xFE8
 12395                           postdec1	equ	0xFE5
 12396                           fsr1l	equ	0xFE1
 12397                           indf2	equ	0xFDF
 12398                           postinc2	equ	0xFDE
 12399                           postdec2	equ	0xFDD
 12400                           fsr2h	equ	0xFDA
 12401                           fsr2l	equ	0xFD9
 12402                           status	equ	0xFD8
 12403                           
 12404 ;; *************** function _CANSetFilter *****************
 12405 ;; Defined at:
 12406 ;;		line 748 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 12407 ;; Parameters:    Size  Location     Type
 12408 ;;  numBuffer       1    wreg     enum E16185
 12409 ;;  filter          4   23[BANK0 ] unsigned long 
 12410 ;;  type            1   27[BANK0 ] enum E16148
 12411 ;; Auto vars:     Size  Location     Type
 12412 ;;  numBuffer       1   32[BANK0 ] enum E16185
 12413 ;;  tamp            4   33[BANK0 ] unsigned long 
 12414 ;; Return value:  Size  Location     Type
 12415 ;;                  1    wreg      void 
 12416 ;; Registers used:
 12417 ;;		wreg, status,2, status,0
 12418 ;; Tracked objects:
 12419 ;;		On entry : 0/0
 12420 ;;		On exit  : 0/0
 12421 ;;		Unchanged: 0/0
 12422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12423 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12424 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12425 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12426 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12427 ;;Total ram usage:       14 bytes
 12428 ;; Hardware stack levels used:    1
 12429 ;; Hardware stack levels required when called:    4
 12430 ;; This function calls:
 12431 ;;		Nothing
 12432 ;; This function is called by:
 12433 ;;		_CANInitialize
 12434 ;; This function uses a non-reentrant model
 12435 ;;
 12436                           
 12437                           	psect	text32
 12438  000D52                     __ptext32:
 12439                           	opt stack 0
 12440  000D52                     _CANSetFilter:
 12441                           	opt stack 24
 12442                           
 12443                           ; BSR set to: 0
 12444                           ;incstack = 0
 12445                           ;CANSetFilter@numBuffer stored from wreg
 12446  000D52  0100               	movlb	0	; () banked
 12447  000D54  6F80               	movwf	CANSetFilter@numBuffer& (0+255),b
 12448                           
 12449                           ;inc\CANlib.h: 750: unsigned long tamp;
 12450                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
 12451  000D56  0100               	movlb	0	; () banked
 12452  000D58  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 12453  000D5A  0100               	movlb	0	; () banked
 12454  000D5C  A4D8               	btfss	status,2,c
 12455  000D5E  D058               	goto	l5351
 12456                           
 12457                           ; BSR set to: 0
 12458  000D60  0100               	movlb	0	; () banked
 12459  000D62  297B               	incf	CANSetFilter@type& (0+255),w,b
 12460  000D64  A4D8               	btfss	status,2,c
 12461  000D66  D054               	goto	l5351
 12462                           
 12463                           ; BSR set to: 0
 12464                           ;inc\CANlib.h: 753: {
 12465                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
 12466  000D68  010F               	movlb	15	; () banked
 12467  000D6A  9701               	bcf	1,3,b	;volatile
 12468                           
 12469                           ; BSR set to: 15
 12470                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
 12471  000D6C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12472  000D70  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12473  000D74  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12474  000D78  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12475  000D7C  0E04               	movlw	4
 12476  000D7E  D006               	goto	u6380
 12477  000D80                     u6385:
 12478  000D80  0100               	movlb	0	; () banked
 12479  000D82  90D8               	bcf	status,0,c
 12480  000D84  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12481  000D86  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12482  000D88  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12483  000D8A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12484  000D8C                     u6380:
 12485  000D8C  2EE8               	decfsz	wreg,f,c
 12486  000D8E  D7F8               	goto	u6385
 12487  000D90  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12488  000D94  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12489  000D98  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12490  000D9C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12491                           
 12492                           ; BSR set to: 0
 12493                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
 12494  000DA0  0100               	movlb	0	; () banked
 12495  000DA2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12496  000DA4  0100               	movlb	0	; () banked
 12497  000DA6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12498  000DA8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12499  000DAA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12500  000DAC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12501                           
 12502                           ; BSR set to: 0
 12503                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
 12504  000DAE  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 12505                           
 12506                           ; BSR set to: 0
 12507                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
 12508  000DB2  0E07               	movlw	7
 12509  000DB4  0100               	movlb	0	; () banked
 12510  000DB6  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12511  000DB8  0100               	movlb	0	; () banked
 12512  000DBA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12513  000DBC  0E00               	movlw	0
 12514  000DBE  0100               	movlb	0	; () banked
 12515  000DC0  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12516  000DC2  0100               	movlb	0	; () banked
 12517  000DC4  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12518  000DC6  0E00               	movlw	0
 12519  000DC8  0100               	movlb	0	; () banked
 12520  000DCA  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12521  000DCC  0100               	movlb	0	; () banked
 12522  000DCE  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12523  000DD0  0E00               	movlw	0
 12524  000DD2  0100               	movlb	0	; () banked
 12525  000DD4  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12526  000DD6  0100               	movlb	0	; () banked
 12527  000DD8  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12528                           
 12529                           ; BSR set to: 0
 12530                           ;inc\CANlib.h: 761: tamp = tamp << 5;
 12531  000DDA  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12532  000DDE  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12533  000DE2  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12534  000DE6  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12535  000DEA  0E05               	movlw	5
 12536  000DEC                     u6395:
 12537  000DEC  90D8               	bcf	status,0,c
 12538  000DEE  0100               	movlb	0	; () banked
 12539  000DF0  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12540  000DF2  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12541  000DF4  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12542  000DF6  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12543  000DF8  2EE8               	decfsz	wreg,f,c
 12544  000DFA  D7F8               	goto	u6395
 12545  000DFC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12546  000E00  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12547  000E04  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12548  000E08  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12549                           
 12550                           ; BSR set to: 0
 12551                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
 12552  000E0C  C081  FF01         	movff	CANSetFilter@tamp,3841	;volatile
 12553  000E10                     l5351:
 12554                           
 12555                           ; BSR set to: 0
 12556                           ;inc\CANlib.h: 763: }
 12557                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
 12558  000E10  0100               	movlb	0	; () banked
 12559  000E12  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 12560  000E14  A4D8               	btfss	status,2,c
 12561  000E16  D058               	goto	l5369
 12562                           
 12563                           ; BSR set to: 0
 12564  000E18  0100               	movlb	0	; () banked
 12565  000E1A  297B               	incf	CANSetFilter@type& (0+255),w,b
 12566  000E1C  A4D8               	btfss	status,2,c
 12567  000E1E  D054               	goto	l5369
 12568                           
 12569                           ; BSR set to: 0
 12570                           ;inc\CANlib.h: 766: {
 12571                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
 12572  000E20  010F               	movlb	15	; () banked
 12573  000E22  9705               	bcf	5,3,b	;volatile
 12574                           
 12575                           ; BSR set to: 15
 12576                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
 12577  000E24  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12578  000E28  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12579  000E2C  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12580  000E30  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12581  000E34  0E04               	movlw	4
 12582  000E36  D006               	goto	u6420
 12583  000E38                     u6425:
 12584  000E38  0100               	movlb	0	; () banked
 12585  000E3A  90D8               	bcf	status,0,c
 12586  000E3C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12587  000E3E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12588  000E40  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12589  000E42  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12590  000E44                     u6420:
 12591  000E44  2EE8               	decfsz	wreg,f,c
 12592  000E46  D7F8               	goto	u6425
 12593  000E48  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12594  000E4C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12595  000E50  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12596  000E54  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12597                           
 12598                           ; BSR set to: 0
 12599                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
 12600  000E58  0100               	movlb	0	; () banked
 12601  000E5A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12602  000E5C  0100               	movlb	0	; () banked
 12603  000E5E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12604  000E60  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12605  000E62  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12606  000E64  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12607                           
 12608                           ; BSR set to: 0
 12609                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
 12610  000E66  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 12611                           
 12612                           ; BSR set to: 0
 12613                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
 12614  000E6A  0E07               	movlw	7
 12615  000E6C  0100               	movlb	0	; () banked
 12616  000E6E  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12617  000E70  0100               	movlb	0	; () banked
 12618  000E72  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12619  000E74  0E00               	movlw	0
 12620  000E76  0100               	movlb	0	; () banked
 12621  000E78  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12622  000E7A  0100               	movlb	0	; () banked
 12623  000E7C  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12624  000E7E  0E00               	movlw	0
 12625  000E80  0100               	movlb	0	; () banked
 12626  000E82  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12627  000E84  0100               	movlb	0	; () banked
 12628  000E86  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12629  000E88  0E00               	movlw	0
 12630  000E8A  0100               	movlb	0	; () banked
 12631  000E8C  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12632  000E8E  0100               	movlb	0	; () banked
 12633  000E90  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12634                           
 12635                           ; BSR set to: 0
 12636                           ;inc\CANlib.h: 774: tamp = tamp << 5;
 12637  000E92  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12638  000E96  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12639  000E9A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12640  000E9E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12641  000EA2  0E05               	movlw	5
 12642  000EA4                     u6435:
 12643  000EA4  90D8               	bcf	status,0,c
 12644  000EA6  0100               	movlb	0	; () banked
 12645  000EA8  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12646  000EAA  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12647  000EAC  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12648  000EAE  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12649  000EB0  2EE8               	decfsz	wreg,f,c
 12650  000EB2  D7F8               	goto	u6435
 12651  000EB4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12652  000EB8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12653  000EBC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12654  000EC0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12655                           
 12656                           ; BSR set to: 0
 12657                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
 12658  000EC4  C081  FF05         	movff	CANSetFilter@tamp,3845	;volatile
 12659  000EC8                     l5369:
 12660                           
 12661                           ; BSR set to: 0
 12662                           ;inc\CANlib.h: 776: }
 12663                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
 12664  000EC8  0E02               	movlw	2
 12665  000ECA  0100               	movlb	0	; () banked
 12666  000ECC  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12667  000ECE  A4D8               	btfss	status,2,c
 12668  000ED0  D058               	goto	l5387
 12669                           
 12670                           ; BSR set to: 0
 12671  000ED2  0100               	movlb	0	; () banked
 12672  000ED4  297B               	incf	CANSetFilter@type& (0+255),w,b
 12673  000ED6  A4D8               	btfss	status,2,c
 12674  000ED8  D054               	goto	l5387
 12675                           
 12676                           ; BSR set to: 0
 12677                           ;inc\CANlib.h: 779: {
 12678                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
 12679  000EDA  010F               	movlb	15	; () banked
 12680  000EDC  9709               	bcf	9,3,b	;volatile
 12681                           
 12682                           ; BSR set to: 15
 12683                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
 12684  000EDE  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12685  000EE2  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12686  000EE6  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12687  000EEA  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12688  000EEE  0E04               	movlw	4
 12689  000EF0  D006               	goto	u6460
 12690  000EF2                     u6465:
 12691  000EF2  0100               	movlb	0	; () banked
 12692  000EF4  90D8               	bcf	status,0,c
 12693  000EF6  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12694  000EF8  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12695  000EFA  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12696  000EFC  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12697  000EFE                     u6460:
 12698  000EFE  2EE8               	decfsz	wreg,f,c
 12699  000F00  D7F8               	goto	u6465
 12700  000F02  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12701  000F06  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12702  000F0A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12703  000F0E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12704                           
 12705                           ; BSR set to: 0
 12706                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
 12707  000F12  0100               	movlb	0	; () banked
 12708  000F14  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12709  000F16  0100               	movlb	0	; () banked
 12710  000F18  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12711  000F1A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12712  000F1C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12713  000F1E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12714                           
 12715                           ; BSR set to: 0
 12716                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
 12717  000F20  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 12718                           
 12719                           ; BSR set to: 0
 12720                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
 12721  000F24  0E07               	movlw	7
 12722  000F26  0100               	movlb	0	; () banked
 12723  000F28  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12724  000F2A  0100               	movlb	0	; () banked
 12725  000F2C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12726  000F2E  0E00               	movlw	0
 12727  000F30  0100               	movlb	0	; () banked
 12728  000F32  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12729  000F34  0100               	movlb	0	; () banked
 12730  000F36  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12731  000F38  0E00               	movlw	0
 12732  000F3A  0100               	movlb	0	; () banked
 12733  000F3C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12734  000F3E  0100               	movlb	0	; () banked
 12735  000F40  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12736  000F42  0E00               	movlw	0
 12737  000F44  0100               	movlb	0	; () banked
 12738  000F46  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12739  000F48  0100               	movlb	0	; () banked
 12740  000F4A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12741                           
 12742                           ; BSR set to: 0
 12743                           ;inc\CANlib.h: 787: tamp = tamp << 5;
 12744  000F4C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12745  000F50  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12746  000F54  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12747  000F58  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12748  000F5C  0E05               	movlw	5
 12749  000F5E                     u6475:
 12750  000F5E  90D8               	bcf	status,0,c
 12751  000F60  0100               	movlb	0	; () banked
 12752  000F62  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12753  000F64  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12754  000F66  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12755  000F68  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12756  000F6A  2EE8               	decfsz	wreg,f,c
 12757  000F6C  D7F8               	goto	u6475
 12758  000F6E  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12759  000F72  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12760  000F76  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12761  000F7A  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12762                           
 12763                           ; BSR set to: 0
 12764                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
 12765  000F7E  C081  FF09         	movff	CANSetFilter@tamp,3849	;volatile
 12766  000F82                     l5387:
 12767                           
 12768                           ; BSR set to: 0
 12769                           ;inc\CANlib.h: 789: }
 12770                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
 12771  000F82  0E03               	movlw	3
 12772  000F84  0100               	movlb	0	; () banked
 12773  000F86  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12774  000F88  A4D8               	btfss	status,2,c
 12775  000F8A  D058               	goto	l5405
 12776                           
 12777                           ; BSR set to: 0
 12778  000F8C  0100               	movlb	0	; () banked
 12779  000F8E  297B               	incf	CANSetFilter@type& (0+255),w,b
 12780  000F90  A4D8               	btfss	status,2,c
 12781  000F92  D054               	goto	l5405
 12782                           
 12783                           ; BSR set to: 0
 12784                           ;inc\CANlib.h: 792: {
 12785                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
 12786  000F94  010F               	movlb	15	; () banked
 12787  000F96  970D               	bcf	13,3,b	;volatile
 12788                           
 12789                           ; BSR set to: 15
 12790                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
 12791  000F98  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12792  000F9C  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12793  000FA0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12794  000FA4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12795  000FA8  0E04               	movlw	4
 12796  000FAA  D006               	goto	u6500
 12797  000FAC                     u6505:
 12798  000FAC  0100               	movlb	0	; () banked
 12799  000FAE  90D8               	bcf	status,0,c
 12800  000FB0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12801  000FB2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12802  000FB4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12803  000FB6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12804  000FB8                     u6500:
 12805  000FB8  2EE8               	decfsz	wreg,f,c
 12806  000FBA  D7F8               	goto	u6505
 12807  000FBC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12808  000FC0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12809  000FC4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12810  000FC8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12811                           
 12812                           ; BSR set to: 0
 12813                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
 12814  000FCC  0100               	movlb	0	; () banked
 12815  000FCE  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12816  000FD0  0100               	movlb	0	; () banked
 12817  000FD2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12818  000FD4  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12819  000FD6  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12820  000FD8  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12821                           
 12822                           ; BSR set to: 0
 12823                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
 12824  000FDA  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 12825                           
 12826                           ; BSR set to: 0
 12827                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
 12828  000FDE  0E07               	movlw	7
 12829  000FE0  0100               	movlb	0	; () banked
 12830  000FE2  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12831  000FE4  0100               	movlb	0	; () banked
 12832  000FE6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12833  000FE8  0E00               	movlw	0
 12834  000FEA  0100               	movlb	0	; () banked
 12835  000FEC  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12836  000FEE  0100               	movlb	0	; () banked
 12837  000FF0  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12838  000FF2  0E00               	movlw	0
 12839  000FF4  0100               	movlb	0	; () banked
 12840  000FF6  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12841  000FF8  0100               	movlb	0	; () banked
 12842  000FFA  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12843  000FFC  0E00               	movlw	0
 12844  000FFE  0100               	movlb	0	; () banked
 12845  001000  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12846  001002  0100               	movlb	0	; () banked
 12847  001004  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12848                           
 12849                           ; BSR set to: 0
 12850                           ;inc\CANlib.h: 800: tamp = tamp << 5;
 12851  001006  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12852  00100A  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12853  00100E  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12854  001012  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12855  001016  0E05               	movlw	5
 12856  001018                     u6515:
 12857  001018  90D8               	bcf	status,0,c
 12858  00101A  0100               	movlb	0	; () banked
 12859  00101C  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12860  00101E  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12861  001020  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12862  001022  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12863  001024  2EE8               	decfsz	wreg,f,c
 12864  001026  D7F8               	goto	u6515
 12865  001028  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12866  00102C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12867  001030  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12868  001034  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12869                           
 12870                           ; BSR set to: 0
 12871                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
 12872  001038  C081  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
 12873  00103C                     l5405:
 12874                           
 12875                           ; BSR set to: 0
 12876                           ;inc\CANlib.h: 802: }
 12877                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
 12878  00103C  0E04               	movlw	4
 12879  00103E  0100               	movlb	0	; () banked
 12880  001040  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12881  001042  A4D8               	btfss	status,2,c
 12882  001044  D058               	goto	l5423
 12883                           
 12884                           ; BSR set to: 0
 12885  001046  0100               	movlb	0	; () banked
 12886  001048  297B               	incf	CANSetFilter@type& (0+255),w,b
 12887  00104A  A4D8               	btfss	status,2,c
 12888  00104C  D054               	goto	l5423
 12889                           
 12890                           ; BSR set to: 0
 12891                           ;inc\CANlib.h: 805: {
 12892                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
 12893  00104E  010F               	movlb	15	; () banked
 12894  001050  9711               	bcf	17,3,b	;volatile
 12895                           
 12896                           ; BSR set to: 15
 12897                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
 12898  001052  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12899  001056  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12900  00105A  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12901  00105E  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12902  001062  0E04               	movlw	4
 12903  001064  D006               	goto	u6540
 12904  001066                     u6545:
 12905  001066  0100               	movlb	0	; () banked
 12906  001068  90D8               	bcf	status,0,c
 12907  00106A  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12908  00106C  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12909  00106E  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12910  001070  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12911  001072                     u6540:
 12912  001072  2EE8               	decfsz	wreg,f,c
 12913  001074  D7F8               	goto	u6545
 12914  001076  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12915  00107A  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12916  00107E  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12917  001082  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12918                           
 12919                           ; BSR set to: 0
 12920                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
 12921  001086  0100               	movlb	0	; () banked
 12922  001088  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12923  00108A  0100               	movlb	0	; () banked
 12924  00108C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12925  00108E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12926  001090  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12927  001092  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12928                           
 12929                           ; BSR set to: 0
 12930                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
 12931  001094  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 12932                           
 12933                           ; BSR set to: 0
 12934                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
 12935  001098  0E07               	movlw	7
 12936  00109A  0100               	movlb	0	; () banked
 12937  00109C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12938  00109E  0100               	movlb	0	; () banked
 12939  0010A0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12940  0010A2  0E00               	movlw	0
 12941  0010A4  0100               	movlb	0	; () banked
 12942  0010A6  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12943  0010A8  0100               	movlb	0	; () banked
 12944  0010AA  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12945  0010AC  0E00               	movlw	0
 12946  0010AE  0100               	movlb	0	; () banked
 12947  0010B0  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12948  0010B2  0100               	movlb	0	; () banked
 12949  0010B4  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12950  0010B6  0E00               	movlw	0
 12951  0010B8  0100               	movlb	0	; () banked
 12952  0010BA  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12953  0010BC  0100               	movlb	0	; () banked
 12954  0010BE  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12955                           
 12956                           ; BSR set to: 0
 12957                           ;inc\CANlib.h: 813: tamp = tamp << 5;
 12958  0010C0  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12959  0010C4  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12960  0010C8  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12961  0010CC  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12962  0010D0  0E05               	movlw	5
 12963  0010D2                     u6555:
 12964  0010D2  90D8               	bcf	status,0,c
 12965  0010D4  0100               	movlb	0	; () banked
 12966  0010D6  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12967  0010D8  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12968  0010DA  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12969  0010DC  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12970  0010DE  2EE8               	decfsz	wreg,f,c
 12971  0010E0  D7F8               	goto	u6555
 12972  0010E2  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12973  0010E6  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12974  0010EA  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12975  0010EE  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12976                           
 12977                           ; BSR set to: 0
 12978                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
 12979  0010F2  C081  FF11         	movff	CANSetFilter@tamp,3857	;volatile
 12980  0010F6                     l5423:
 12981                           
 12982                           ; BSR set to: 0
 12983                           ;inc\CANlib.h: 815: }
 12984                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
 12985  0010F6  0E05               	movlw	5
 12986  0010F8  0100               	movlb	0	; () banked
 12987  0010FA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12988  0010FC  A4D8               	btfss	status,2,c
 12989  0010FE  D058               	goto	l5441
 12990                           
 12991                           ; BSR set to: 0
 12992  001100  0100               	movlb	0	; () banked
 12993  001102  297B               	incf	CANSetFilter@type& (0+255),w,b
 12994  001104  A4D8               	btfss	status,2,c
 12995  001106  D054               	goto	l5441
 12996                           
 12997                           ; BSR set to: 0
 12998                           ;inc\CANlib.h: 818: {
 12999                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
 13000  001108  010F               	movlb	15	; () banked
 13001  00110A  9715               	bcf	21,3,b	;volatile
 13002                           
 13003                           ; BSR set to: 15
 13004                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
 13005  00110C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13006  001110  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13007  001114  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13008  001118  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13009  00111C  0E04               	movlw	4
 13010  00111E  D006               	goto	u6580
 13011  001120                     u6585:
 13012  001120  0100               	movlb	0	; () banked
 13013  001122  90D8               	bcf	status,0,c
 13014  001124  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13015  001126  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13016  001128  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13017  00112A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13018  00112C                     u6580:
 13019  00112C  2EE8               	decfsz	wreg,f,c
 13020  00112E  D7F8               	goto	u6585
 13021  001130  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13022  001134  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13023  001138  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13024  00113C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13025                           
 13026                           ; BSR set to: 0
 13027                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
 13028  001140  0100               	movlb	0	; () banked
 13029  001142  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13030  001144  0100               	movlb	0	; () banked
 13031  001146  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13032  001148  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13033  00114A  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13034  00114C  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13035                           
 13036                           ; BSR set to: 0
 13037                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
 13038  00114E  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 13039                           
 13040                           ; BSR set to: 0
 13041                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
 13042  001152  0E07               	movlw	7
 13043  001154  0100               	movlb	0	; () banked
 13044  001156  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13045  001158  0100               	movlb	0	; () banked
 13046  00115A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13047  00115C  0E00               	movlw	0
 13048  00115E  0100               	movlb	0	; () banked
 13049  001160  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13050  001162  0100               	movlb	0	; () banked
 13051  001164  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13052  001166  0E00               	movlw	0
 13053  001168  0100               	movlb	0	; () banked
 13054  00116A  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13055  00116C  0100               	movlb	0	; () banked
 13056  00116E  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13057  001170  0E00               	movlw	0
 13058  001172  0100               	movlb	0	; () banked
 13059  001174  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13060  001176  0100               	movlb	0	; () banked
 13061  001178  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13062                           
 13063                           ; BSR set to: 0
 13064                           ;inc\CANlib.h: 826: tamp = tamp << 5;
 13065  00117A  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13066  00117E  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13067  001182  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13068  001186  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13069  00118A  0E05               	movlw	5
 13070  00118C                     u6595:
 13071  00118C  90D8               	bcf	status,0,c
 13072  00118E  0100               	movlb	0	; () banked
 13073  001190  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 13074  001192  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 13075  001194  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 13076  001196  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 13077  001198  2EE8               	decfsz	wreg,f,c
 13078  00119A  D7F8               	goto	u6595
 13079  00119C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13080  0011A0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13081  0011A4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13082  0011A8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13083                           
 13084                           ; BSR set to: 0
 13085                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
 13086  0011AC  C081  FF15         	movff	CANSetFilter@tamp,3861	;volatile
 13087  0011B0                     l5441:
 13088                           
 13089                           ; BSR set to: 0
 13090                           ;inc\CANlib.h: 828: }
 13091                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
 13092  0011B0  0100               	movlb	0	; () banked
 13093  0011B2  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 13094  0011B4  0100               	movlb	0	; () banked
 13095  0011B6  A4D8               	btfss	status,2,c
 13096  0011B8  D089               	goto	l5475
 13097                           
 13098                           ; BSR set to: 0
 13099  0011BA  0EF7               	movlw	247
 13100  0011BC  0100               	movlb	0	; () banked
 13101  0011BE  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13102  0011C0  A4D8               	btfss	status,2,c
 13103  0011C2  D084               	goto	l5475
 13104                           
 13105                           ; BSR set to: 0
 13106                           ;inc\CANlib.h: 832: {
 13107                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
 13108  0011C4  010F               	movlb	15	; () banked
 13109  0011C6  8701               	bsf	1,3,b	;volatile
 13110                           
 13111                           ; BSR set to: 15
 13112                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
 13113  0011C8  0100               	movlb	0	; () banked
 13114  0011CA  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13115  0011CC  0100               	movlb	0	; () banked
 13116  0011CE  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13117  0011D0  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13118  0011D2  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13119  0011D4  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13120                           
 13121                           ; BSR set to: 0
 13122                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
 13123  0011D6  C081  FF03         	movff	CANSetFilter@tamp,3843	;volatile
 13124                           
 13125                           ; BSR set to: 0
 13126                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
 13127  0011DA  0E00               	movlw	0
 13128  0011DC  0100               	movlb	0	; () banked
 13129  0011DE  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13130  0011E0  0100               	movlb	0	; () banked
 13131  0011E2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13132  0011E4  0EFF               	movlw	255
 13133  0011E6  0100               	movlb	0	; () banked
 13134  0011E8  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13135  0011EA  0100               	movlb	0	; () banked
 13136  0011EC  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13137  0011EE  0E00               	movlw	0
 13138  0011F0  0100               	movlb	0	; () banked
 13139  0011F2  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13140  0011F4  0100               	movlb	0	; () banked
 13141  0011F6  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13142  0011F8  0E00               	movlw	0
 13143  0011FA  0100               	movlb	0	; () banked
 13144  0011FC  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13145  0011FE  0100               	movlb	0	; () banked
 13146  001200  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13147                           
 13148                           ; BSR set to: 0
 13149                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
 13150  001202  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13151  001206  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13152  00120A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13153  00120E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13154  001212  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13155  001216  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13156  00121A  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13157  00121E  0100               	movlb	0	; () banked
 13158  001220  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13159  001222  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13160  001226  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13161  00122A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13162  00122E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13163                           
 13164                           ; BSR set to: 0
 13165                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
 13166  001232  C081  FF02         	movff	CANSetFilter@tamp,3842	;volatile
 13167                           
 13168                           ; BSR set to: 0
 13169                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
 13170  001236  0100               	movlb	0	; () banked
 13171  001238  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13172  00123A  D003               	goto	l463
 13173                           
 13174                           ; BSR set to: 0
 13175                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
 13176  00123C  010F               	movlb	15	; () banked
 13177  00123E  8101               	bsf	1,0,b	;volatile
 13178  001240  D002               	goto	l464
 13179  001242                     l463:
 13180                           
 13181                           ; BSR set to: 0
 13182                           ;inc\CANlib.h: 844: else
 13183                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
 13184  001242  010F               	movlb	15	; () banked
 13185  001244  9101               	bcf	1,0,b	;volatile
 13186  001246                     l464:
 13187                           
 13188                           ; BSR set to: 15
 13189                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
 13190  001246  0100               	movlb	0	; () banked
 13191  001248  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13192  00124A  D003               	goto	l465
 13193                           
 13194                           ; BSR set to: 0
 13195                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
 13196  00124C  010F               	movlb	15	; () banked
 13197  00124E  8301               	bsf	1,1,b	;volatile
 13198  001250  D002               	goto	l466
 13199  001252                     l465:
 13200                           
 13201                           ; BSR set to: 0
 13202                           ;inc\CANlib.h: 849: else
 13203                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
 13204  001252  010F               	movlb	15	; () banked
 13205  001254  9301               	bcf	1,1,b	;volatile
 13206  001256                     l466:
 13207                           
 13208                           ; BSR set to: 15
 13209                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
 13210  001256  0100               	movlb	0	; () banked
 13211  001258  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13212  00125A  D003               	goto	l467
 13213                           
 13214                           ; BSR set to: 0
 13215                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
 13216  00125C  010F               	movlb	15	; () banked
 13217  00125E  8B01               	bsf	1,5,b	;volatile
 13218  001260  D002               	goto	l468
 13219  001262                     l467:
 13220                           
 13221                           ; BSR set to: 0
 13222                           ;inc\CANlib.h: 854: else
 13223                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
 13224  001262  010F               	movlb	15	; () banked
 13225  001264  9B01               	bcf	1,5,b	;volatile
 13226  001266                     l468:
 13227                           
 13228                           ; BSR set to: 15
 13229                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
 13230  001266  0100               	movlb	0	; () banked
 13231  001268  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13232  00126A  D003               	goto	l469
 13233                           
 13234                           ; BSR set to: 0
 13235                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
 13236  00126C  010F               	movlb	15	; () banked
 13237  00126E  8D01               	bsf	1,6,b	;volatile
 13238  001270  D002               	goto	l470
 13239  001272                     l469:
 13240                           
 13241                           ; BSR set to: 0
 13242                           ;inc\CANlib.h: 859: else
 13243                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
 13244  001272  010F               	movlb	15	; () banked
 13245  001274  9D01               	bcf	1,6,b	;volatile
 13246  001276                     l470:
 13247                           
 13248                           ; BSR set to: 15
 13249                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
 13250  001276  0100               	movlb	0	; () banked
 13251  001278  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13252  00127A  D003               	goto	l471
 13253                           
 13254                           ; BSR set to: 0
 13255                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
 13256  00127C  010F               	movlb	15	; () banked
 13257  00127E  8F01               	bsf	1,7,b	;volatile
 13258  001280  D002               	goto	l5469
 13259  001282                     l471:
 13260                           
 13261                           ; BSR set to: 0
 13262                           ;inc\CANlib.h: 864: else
 13263                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
 13264  001282  010F               	movlb	15	; () banked
 13265  001284  9F01               	bcf	1,7,b	;volatile
 13266  001286                     l5469:
 13267                           
 13268                           ; BSR set to: 15
 13269                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
 13270  001286  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13271  00128A  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13272  00128E  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13273  001292  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13274  001296  0E16               	movlw	22
 13275  001298  D006               	goto	u6670
 13276  00129A                     u6675:
 13277  00129A  0100               	movlb	0	; () banked
 13278  00129C  90D8               	bcf	status,0,c
 13279  00129E  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13280  0012A0  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13281  0012A2  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13282  0012A4  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13283  0012A6                     u6670:
 13284  0012A6  2EE8               	decfsz	wreg,f,c
 13285  0012A8  D7F8               	goto	u6675
 13286  0012AA  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13287  0012AE  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13288  0012B2  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13289  0012B6  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13290                           
 13291                           ; BSR set to: 0
 13292                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
 13293  0012BA  0100               	movlb	0	; () banked
 13294  0012BC  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13295  0012BE  0100               	movlb	0	; () banked
 13296  0012C0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13297  0012C2  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13298  0012C4  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13299  0012C6  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13300                           
 13301                           ; BSR set to: 0
 13302                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
 13303  0012C8  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 13304  0012CC                     l5475:
 13305                           
 13306                           ; BSR set to: 0
 13307                           ;inc\CANlib.h: 870: }
 13308                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
 13309  0012CC  0100               	movlb	0	; () banked
 13310  0012CE  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 13311  0012D0  A4D8               	btfss	status,2,c
 13312  0012D2  D089               	goto	l5509
 13313                           
 13314                           ; BSR set to: 0
 13315  0012D4  0EF7               	movlw	247
 13316  0012D6  0100               	movlb	0	; () banked
 13317  0012D8  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13318  0012DA  A4D8               	btfss	status,2,c
 13319  0012DC  D084               	goto	l5509
 13320                           
 13321                           ; BSR set to: 0
 13322                           ;inc\CANlib.h: 873: {
 13323                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
 13324  0012DE  010F               	movlb	15	; () banked
 13325  0012E0  8705               	bsf	5,3,b	;volatile
 13326                           
 13327                           ; BSR set to: 15
 13328                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
 13329  0012E2  0100               	movlb	0	; () banked
 13330  0012E4  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13331  0012E6  0100               	movlb	0	; () banked
 13332  0012E8  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13333  0012EA  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13334  0012EC  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13335  0012EE  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13336                           
 13337                           ; BSR set to: 0
 13338                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
 13339  0012F0  C081  FF07         	movff	CANSetFilter@tamp,3847	;volatile
 13340                           
 13341                           ; BSR set to: 0
 13342                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
 13343  0012F4  0E00               	movlw	0
 13344  0012F6  0100               	movlb	0	; () banked
 13345  0012F8  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13346  0012FA  0100               	movlb	0	; () banked
 13347  0012FC  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13348  0012FE  0EFF               	movlw	255
 13349  001300  0100               	movlb	0	; () banked
 13350  001302  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13351  001304  0100               	movlb	0	; () banked
 13352  001306  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13353  001308  0E00               	movlw	0
 13354  00130A  0100               	movlb	0	; () banked
 13355  00130C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13356  00130E  0100               	movlb	0	; () banked
 13357  001310  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13358  001312  0E00               	movlw	0
 13359  001314  0100               	movlb	0	; () banked
 13360  001316  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13361  001318  0100               	movlb	0	; () banked
 13362  00131A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13363                           
 13364                           ; BSR set to: 0
 13365                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
 13366  00131C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13367  001320  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13368  001324  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13369  001328  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13370  00132C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13371  001330  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13372  001334  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13373  001338  0100               	movlb	0	; () banked
 13374  00133A  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13375  00133C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13376  001340  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13377  001344  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13378  001348  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13379                           
 13380                           ; BSR set to: 0
 13381                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
 13382  00134C  C081  FF06         	movff	CANSetFilter@tamp,3846	;volatile
 13383                           
 13384                           ; BSR set to: 0
 13385                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
 13386  001350  0100               	movlb	0	; () banked
 13387  001352  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13388  001354  D003               	goto	l474
 13389                           
 13390                           ; BSR set to: 0
 13391                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
 13392  001356  010F               	movlb	15	; () banked
 13393  001358  8105               	bsf	5,0,b	;volatile
 13394  00135A  D002               	goto	l475
 13395  00135C                     l474:
 13396                           
 13397                           ; BSR set to: 0
 13398                           ;inc\CANlib.h: 885: else
 13399                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
 13400  00135C  010F               	movlb	15	; () banked
 13401  00135E  9105               	bcf	5,0,b	;volatile
 13402  001360                     l475:
 13403                           
 13404                           ; BSR set to: 15
 13405                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
 13406  001360  0100               	movlb	0	; () banked
 13407  001362  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13408  001364  D003               	goto	l476
 13409                           
 13410                           ; BSR set to: 0
 13411                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
 13412  001366  010F               	movlb	15	; () banked
 13413  001368  8305               	bsf	5,1,b	;volatile
 13414  00136A  D002               	goto	l477
 13415  00136C                     l476:
 13416                           
 13417                           ; BSR set to: 0
 13418                           ;inc\CANlib.h: 890: else
 13419                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
 13420  00136C  010F               	movlb	15	; () banked
 13421  00136E  9305               	bcf	5,1,b	;volatile
 13422  001370                     l477:
 13423                           
 13424                           ; BSR set to: 15
 13425                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
 13426  001370  0100               	movlb	0	; () banked
 13427  001372  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13428  001374  D003               	goto	l478
 13429                           
 13430                           ; BSR set to: 0
 13431                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
 13432  001376  010F               	movlb	15	; () banked
 13433  001378  8B05               	bsf	5,5,b	;volatile
 13434  00137A  D002               	goto	l479
 13435  00137C                     l478:
 13436                           
 13437                           ; BSR set to: 0
 13438                           ;inc\CANlib.h: 895: else
 13439                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
 13440  00137C  010F               	movlb	15	; () banked
 13441  00137E  9B05               	bcf	5,5,b	;volatile
 13442  001380                     l479:
 13443                           
 13444                           ; BSR set to: 15
 13445                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
 13446  001380  0100               	movlb	0	; () banked
 13447  001382  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13448  001384  D003               	goto	l480
 13449                           
 13450                           ; BSR set to: 0
 13451                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
 13452  001386  010F               	movlb	15	; () banked
 13453  001388  8D05               	bsf	5,6,b	;volatile
 13454  00138A  D002               	goto	l481
 13455  00138C                     l480:
 13456                           
 13457                           ; BSR set to: 0
 13458                           ;inc\CANlib.h: 900: else
 13459                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
 13460  00138C  010F               	movlb	15	; () banked
 13461  00138E  9D05               	bcf	5,6,b	;volatile
 13462  001390                     l481:
 13463                           
 13464                           ; BSR set to: 15
 13465                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
 13466  001390  0100               	movlb	0	; () banked
 13467  001392  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13468  001394  D003               	goto	l482
 13469                           
 13470                           ; BSR set to: 0
 13471                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
 13472  001396  010F               	movlb	15	; () banked
 13473  001398  8F05               	bsf	5,7,b	;volatile
 13474  00139A  D002               	goto	l5503
 13475  00139C                     l482:
 13476                           
 13477                           ; BSR set to: 0
 13478                           ;inc\CANlib.h: 905: else
 13479                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
 13480  00139C  010F               	movlb	15	; () banked
 13481  00139E  9F05               	bcf	5,7,b	;volatile
 13482  0013A0                     l5503:
 13483                           
 13484                           ; BSR set to: 15
 13485                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
 13486  0013A0  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13487  0013A4  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13488  0013A8  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13489  0013AC  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13490  0013B0  0E16               	movlw	22
 13491  0013B2  D006               	goto	u6750
 13492  0013B4                     u6755:
 13493  0013B4  0100               	movlb	0	; () banked
 13494  0013B6  90D8               	bcf	status,0,c
 13495  0013B8  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13496  0013BA  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13497  0013BC  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13498  0013BE  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13499  0013C0                     u6750:
 13500  0013C0  2EE8               	decfsz	wreg,f,c
 13501  0013C2  D7F8               	goto	u6755
 13502  0013C4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13503  0013C8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13504  0013CC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13505  0013D0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13506                           
 13507                           ; BSR set to: 0
 13508                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
 13509  0013D4  0100               	movlb	0	; () banked
 13510  0013D6  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13511  0013D8  0100               	movlb	0	; () banked
 13512  0013DA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13513  0013DC  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13514  0013DE  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13515  0013E0  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13516                           
 13517                           ; BSR set to: 0
 13518                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
 13519  0013E2  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 13520  0013E6                     l5509:
 13521                           
 13522                           ; BSR set to: 0
 13523                           ;inc\CANlib.h: 911: }
 13524                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
 13525  0013E6  0E02               	movlw	2
 13526  0013E8  0100               	movlb	0	; () banked
 13527  0013EA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13528  0013EC  A4D8               	btfss	status,2,c
 13529  0013EE  D089               	goto	l5543
 13530                           
 13531                           ; BSR set to: 0
 13532  0013F0  0EF7               	movlw	247
 13533  0013F2  0100               	movlb	0	; () banked
 13534  0013F4  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13535  0013F6  A4D8               	btfss	status,2,c
 13536  0013F8  D084               	goto	l5543
 13537                           
 13538                           ; BSR set to: 0
 13539                           ;inc\CANlib.h: 915: {
 13540                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
 13541  0013FA  010F               	movlb	15	; () banked
 13542  0013FC  8709               	bsf	9,3,b	;volatile
 13543                           
 13544                           ; BSR set to: 15
 13545                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
 13546  0013FE  0100               	movlb	0	; () banked
 13547  001400  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13548  001402  0100               	movlb	0	; () banked
 13549  001404  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13550  001406  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13551  001408  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13552  00140A  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13553                           
 13554                           ; BSR set to: 0
 13555                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
 13556  00140C  C081  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
 13557                           
 13558                           ; BSR set to: 0
 13559                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
 13560  001410  0E00               	movlw	0
 13561  001412  0100               	movlb	0	; () banked
 13562  001414  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13563  001416  0100               	movlb	0	; () banked
 13564  001418  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13565  00141A  0EFF               	movlw	255
 13566  00141C  0100               	movlb	0	; () banked
 13567  00141E  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13568  001420  0100               	movlb	0	; () banked
 13569  001422  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13570  001424  0E00               	movlw	0
 13571  001426  0100               	movlb	0	; () banked
 13572  001428  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13573  00142A  0100               	movlb	0	; () banked
 13574  00142C  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13575  00142E  0E00               	movlw	0
 13576  001430  0100               	movlb	0	; () banked
 13577  001432  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13578  001434  0100               	movlb	0	; () banked
 13579  001436  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13580                           
 13581                           ; BSR set to: 0
 13582                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
 13583  001438  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13584  00143C  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13585  001440  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13586  001444  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13587  001448  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13588  00144C  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13589  001450  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13590  001454  0100               	movlb	0	; () banked
 13591  001456  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13592  001458  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13593  00145C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13594  001460  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13595  001464  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13596                           
 13597                           ; BSR set to: 0
 13598                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
 13599  001468  C081  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
 13600                           
 13601                           ; BSR set to: 0
 13602                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
 13603  00146C  0100               	movlb	0	; () banked
 13604  00146E  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13605  001470  D003               	goto	l485
 13606                           
 13607                           ; BSR set to: 0
 13608                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
 13609  001472  010F               	movlb	15	; () banked
 13610  001474  8109               	bsf	9,0,b	;volatile
 13611  001476  D002               	goto	l486
 13612  001478                     l485:
 13613                           
 13614                           ; BSR set to: 0
 13615                           ;inc\CANlib.h: 927: else
 13616                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
 13617  001478  010F               	movlb	15	; () banked
 13618  00147A  9109               	bcf	9,0,b	;volatile
 13619  00147C                     l486:
 13620                           
 13621                           ; BSR set to: 15
 13622                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
 13623  00147C  0100               	movlb	0	; () banked
 13624  00147E  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13625  001480  D003               	goto	l487
 13626                           
 13627                           ; BSR set to: 0
 13628                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
 13629  001482  010F               	movlb	15	; () banked
 13630  001484  8309               	bsf	9,1,b	;volatile
 13631  001486  D002               	goto	l488
 13632  001488                     l487:
 13633                           
 13634                           ; BSR set to: 0
 13635                           ;inc\CANlib.h: 932: else
 13636                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
 13637  001488  010F               	movlb	15	; () banked
 13638  00148A  9309               	bcf	9,1,b	;volatile
 13639  00148C                     l488:
 13640                           
 13641                           ; BSR set to: 15
 13642                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
 13643  00148C  0100               	movlb	0	; () banked
 13644  00148E  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13645  001490  D003               	goto	l489
 13646                           
 13647                           ; BSR set to: 0
 13648                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
 13649  001492  010F               	movlb	15	; () banked
 13650  001494  8B09               	bsf	9,5,b	;volatile
 13651  001496  D002               	goto	l490
 13652  001498                     l489:
 13653                           
 13654                           ; BSR set to: 0
 13655                           ;inc\CANlib.h: 937: else
 13656                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
 13657  001498  010F               	movlb	15	; () banked
 13658  00149A  9B09               	bcf	9,5,b	;volatile
 13659  00149C                     l490:
 13660                           
 13661                           ; BSR set to: 15
 13662                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
 13663  00149C  0100               	movlb	0	; () banked
 13664  00149E  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13665  0014A0  D003               	goto	l491
 13666                           
 13667                           ; BSR set to: 0
 13668                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
 13669  0014A2  010F               	movlb	15	; () banked
 13670  0014A4  8D09               	bsf	9,6,b	;volatile
 13671  0014A6  D002               	goto	l492
 13672  0014A8                     l491:
 13673                           
 13674                           ; BSR set to: 0
 13675                           ;inc\CANlib.h: 942: else
 13676                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
 13677  0014A8  010F               	movlb	15	; () banked
 13678  0014AA  9D09               	bcf	9,6,b	;volatile
 13679  0014AC                     l492:
 13680                           
 13681                           ; BSR set to: 15
 13682                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
 13683  0014AC  0100               	movlb	0	; () banked
 13684  0014AE  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13685  0014B0  D003               	goto	l493
 13686                           
 13687                           ; BSR set to: 0
 13688                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
 13689  0014B2  010F               	movlb	15	; () banked
 13690  0014B4  8F09               	bsf	9,7,b	;volatile
 13691  0014B6  D002               	goto	l5537
 13692  0014B8                     l493:
 13693                           
 13694                           ; BSR set to: 0
 13695                           ;inc\CANlib.h: 947: else
 13696                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
 13697  0014B8  010F               	movlb	15	; () banked
 13698  0014BA  9F09               	bcf	9,7,b	;volatile
 13699  0014BC                     l5537:
 13700                           
 13701                           ; BSR set to: 15
 13702                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
 13703  0014BC  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13704  0014C0  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13705  0014C4  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13706  0014C8  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13707  0014CC  0E16               	movlw	22
 13708  0014CE  D006               	goto	u6830
 13709  0014D0                     u6835:
 13710  0014D0  0100               	movlb	0	; () banked
 13711  0014D2  90D8               	bcf	status,0,c
 13712  0014D4  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13713  0014D6  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13714  0014D8  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13715  0014DA  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13716  0014DC                     u6830:
 13717  0014DC  2EE8               	decfsz	wreg,f,c
 13718  0014DE  D7F8               	goto	u6835
 13719  0014E0  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13720  0014E4  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13721  0014E8  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13722  0014EC  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13723                           
 13724                           ; BSR set to: 0
 13725                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
 13726  0014F0  0100               	movlb	0	; () banked
 13727  0014F2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13728  0014F4  0100               	movlb	0	; () banked
 13729  0014F6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13730  0014F8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13731  0014FA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13732  0014FC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13733                           
 13734                           ; BSR set to: 0
 13735                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
 13736  0014FE  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 13737  001502                     l5543:
 13738                           
 13739                           ; BSR set to: 0
 13740                           ;inc\CANlib.h: 953: }
 13741                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
 13742  001502  0E03               	movlw	3
 13743  001504  0100               	movlb	0	; () banked
 13744  001506  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13745  001508  A4D8               	btfss	status,2,c
 13746  00150A  D089               	goto	l5577
 13747                           
 13748                           ; BSR set to: 0
 13749  00150C  0EF7               	movlw	247
 13750  00150E  0100               	movlb	0	; () banked
 13751  001510  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13752  001512  A4D8               	btfss	status,2,c
 13753  001514  D084               	goto	l5577
 13754                           
 13755                           ; BSR set to: 0
 13756                           ;inc\CANlib.h: 956: {
 13757                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
 13758  001516  010F               	movlb	15	; () banked
 13759  001518  870D               	bsf	13,3,b	;volatile
 13760                           
 13761                           ; BSR set to: 15
 13762                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
 13763  00151A  0100               	movlb	0	; () banked
 13764  00151C  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13765  00151E  0100               	movlb	0	; () banked
 13766  001520  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13767  001522  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13768  001524  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13769  001526  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13770                           
 13771                           ; BSR set to: 0
 13772                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
 13773  001528  C081  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
 13774                           
 13775                           ; BSR set to: 0
 13776                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
 13777  00152C  0E00               	movlw	0
 13778  00152E  0100               	movlb	0	; () banked
 13779  001530  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13780  001532  0100               	movlb	0	; () banked
 13781  001534  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13782  001536  0EFF               	movlw	255
 13783  001538  0100               	movlb	0	; () banked
 13784  00153A  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13785  00153C  0100               	movlb	0	; () banked
 13786  00153E  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13787  001540  0E00               	movlw	0
 13788  001542  0100               	movlb	0	; () banked
 13789  001544  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13790  001546  0100               	movlb	0	; () banked
 13791  001548  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13792  00154A  0E00               	movlw	0
 13793  00154C  0100               	movlb	0	; () banked
 13794  00154E  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13795  001550  0100               	movlb	0	; () banked
 13796  001552  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13797                           
 13798                           ; BSR set to: 0
 13799                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
 13800  001554  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13801  001558  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13802  00155C  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13803  001560  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13804  001564  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13805  001568  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13806  00156C  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13807  001570  0100               	movlb	0	; () banked
 13808  001572  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13809  001574  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13810  001578  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13811  00157C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13812  001580  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13813                           
 13814                           ; BSR set to: 0
 13815                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
 13816  001584  C081  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
 13817                           
 13818                           ; BSR set to: 0
 13819                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
 13820  001588  0100               	movlb	0	; () banked
 13821  00158A  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13822  00158C  D003               	goto	l496
 13823                           
 13824                           ; BSR set to: 0
 13825                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
 13826  00158E  010F               	movlb	15	; () banked
 13827  001590  810D               	bsf	13,0,b	;volatile
 13828  001592  D002               	goto	l497
 13829  001594                     l496:
 13830                           
 13831                           ; BSR set to: 0
 13832                           ;inc\CANlib.h: 968: else
 13833                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
 13834  001594  010F               	movlb	15	; () banked
 13835  001596  910D               	bcf	13,0,b	;volatile
 13836  001598                     l497:
 13837                           
 13838                           ; BSR set to: 15
 13839                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
 13840  001598  0100               	movlb	0	; () banked
 13841  00159A  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13842  00159C  D003               	goto	l498
 13843                           
 13844                           ; BSR set to: 0
 13845                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
 13846  00159E  010F               	movlb	15	; () banked
 13847  0015A0  830D               	bsf	13,1,b	;volatile
 13848  0015A2  D002               	goto	l499
 13849  0015A4                     l498:
 13850                           
 13851                           ; BSR set to: 0
 13852                           ;inc\CANlib.h: 973: else
 13853                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
 13854  0015A4  010F               	movlb	15	; () banked
 13855  0015A6  930D               	bcf	13,1,b	;volatile
 13856  0015A8                     l499:
 13857                           
 13858                           ; BSR set to: 15
 13859                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
 13860  0015A8  0100               	movlb	0	; () banked
 13861  0015AA  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13862  0015AC  D003               	goto	l500
 13863                           
 13864                           ; BSR set to: 0
 13865                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
 13866  0015AE  010F               	movlb	15	; () banked
 13867  0015B0  8B0D               	bsf	13,5,b	;volatile
 13868  0015B2  D002               	goto	l501
 13869  0015B4                     l500:
 13870                           
 13871                           ; BSR set to: 0
 13872                           ;inc\CANlib.h: 978: else
 13873                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
 13874  0015B4  010F               	movlb	15	; () banked
 13875  0015B6  9B0D               	bcf	13,5,b	;volatile
 13876  0015B8                     l501:
 13877                           
 13878                           ; BSR set to: 15
 13879                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
 13880  0015B8  0100               	movlb	0	; () banked
 13881  0015BA  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13882  0015BC  D003               	goto	l502
 13883                           
 13884                           ; BSR set to: 0
 13885                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
 13886  0015BE  010F               	movlb	15	; () banked
 13887  0015C0  8D0D               	bsf	13,6,b	;volatile
 13888  0015C2  D002               	goto	l503
 13889  0015C4                     l502:
 13890                           
 13891                           ; BSR set to: 0
 13892                           ;inc\CANlib.h: 983: else
 13893                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
 13894  0015C4  010F               	movlb	15	; () banked
 13895  0015C6  9D0D               	bcf	13,6,b	;volatile
 13896  0015C8                     l503:
 13897                           
 13898                           ; BSR set to: 15
 13899                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
 13900  0015C8  0100               	movlb	0	; () banked
 13901  0015CA  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13902  0015CC  D003               	goto	l504
 13903                           
 13904                           ; BSR set to: 0
 13905                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
 13906  0015CE  010F               	movlb	15	; () banked
 13907  0015D0  8F0D               	bsf	13,7,b	;volatile
 13908  0015D2  D002               	goto	l5571
 13909  0015D4                     l504:
 13910                           
 13911                           ; BSR set to: 0
 13912                           ;inc\CANlib.h: 988: else
 13913                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
 13914  0015D4  010F               	movlb	15	; () banked
 13915  0015D6  9F0D               	bcf	13,7,b	;volatile
 13916  0015D8                     l5571:
 13917                           
 13918                           ; BSR set to: 15
 13919                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
 13920  0015D8  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13921  0015DC  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13922  0015E0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13923  0015E4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13924  0015E8  0E16               	movlw	22
 13925  0015EA  D006               	goto	u6910
 13926  0015EC                     u6915:
 13927  0015EC  0100               	movlb	0	; () banked
 13928  0015EE  90D8               	bcf	status,0,c
 13929  0015F0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13930  0015F2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13931  0015F4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13932  0015F6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13933  0015F8                     u6910:
 13934  0015F8  2EE8               	decfsz	wreg,f,c
 13935  0015FA  D7F8               	goto	u6915
 13936  0015FC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13937  001600  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13938  001604  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13939  001608  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13940                           
 13941                           ; BSR set to: 0
 13942                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
 13943  00160C  0100               	movlb	0	; () banked
 13944  00160E  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13945  001610  0100               	movlb	0	; () banked
 13946  001612  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13947  001614  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13948  001616  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13949  001618  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13950                           
 13951                           ; BSR set to: 0
 13952                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
 13953  00161A  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 13954  00161E                     l5577:
 13955                           
 13956                           ; BSR set to: 0
 13957                           ;inc\CANlib.h: 994: }
 13958                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
 13959  00161E  0E04               	movlw	4
 13960  001620  0100               	movlb	0	; () banked
 13961  001622  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13962  001624  A4D8               	btfss	status,2,c
 13963  001626  D089               	goto	l5611
 13964                           
 13965                           ; BSR set to: 0
 13966  001628  0EF7               	movlw	247
 13967  00162A  0100               	movlb	0	; () banked
 13968  00162C  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13969  00162E  A4D8               	btfss	status,2,c
 13970  001630  D084               	goto	l5611
 13971                           
 13972                           ; BSR set to: 0
 13973                           ;inc\CANlib.h: 997: {
 13974                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
 13975  001632  010F               	movlb	15	; () banked
 13976  001634  8711               	bsf	17,3,b	;volatile
 13977                           
 13978                           ; BSR set to: 15
 13979                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
 13980  001636  0100               	movlb	0	; () banked
 13981  001638  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13982  00163A  0100               	movlb	0	; () banked
 13983  00163C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13984  00163E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13985  001640  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13986  001642  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13987                           
 13988                           ; BSR set to: 0
 13989                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
 13990  001644  C081  FF13         	movff	CANSetFilter@tamp,3859	;volatile
 13991                           
 13992                           ; BSR set to: 0
 13993                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
 13994  001648  0E00               	movlw	0
 13995  00164A  0100               	movlb	0	; () banked
 13996  00164C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13997  00164E  0100               	movlb	0	; () banked
 13998  001650  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13999  001652  0EFF               	movlw	255
 14000  001654  0100               	movlb	0	; () banked
 14001  001656  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 14002  001658  0100               	movlb	0	; () banked
 14003  00165A  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 14004  00165C  0E00               	movlw	0
 14005  00165E  0100               	movlb	0	; () banked
 14006  001660  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 14007  001662  0100               	movlb	0	; () banked
 14008  001664  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 14009  001666  0E00               	movlw	0
 14010  001668  0100               	movlb	0	; () banked
 14011  00166A  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 14012  00166C  0100               	movlb	0	; () banked
 14013  00166E  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 14014                           
 14015                           ; BSR set to: 0
 14016                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
 14017  001670  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 14018  001674  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 14019  001678  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 14020  00167C  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 14021  001680  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 14022  001684  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 14023  001688  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 14024  00168C  0100               	movlb	0	; () banked
 14025  00168E  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 14026  001690  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14027  001694  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14028  001698  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14029  00169C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14030                           
 14031                           ; BSR set to: 0
 14032                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
 14033  0016A0  C081  FF12         	movff	CANSetFilter@tamp,3858	;volatile
 14034                           
 14035                           ; BSR set to: 0
 14036                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
 14037  0016A4  0100               	movlb	0	; () banked
 14038  0016A6  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 14039  0016A8  D003               	goto	l507
 14040                           
 14041                           ; BSR set to: 0
 14042                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
 14043  0016AA  010F               	movlb	15	; () banked
 14044  0016AC  8111               	bsf	17,0,b	;volatile
 14045  0016AE  D002               	goto	l508
 14046  0016B0                     l507:
 14047                           
 14048                           ; BSR set to: 0
 14049                           ;inc\CANlib.h: 1009: else
 14050                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
 14051  0016B0  010F               	movlb	15	; () banked
 14052  0016B2  9111               	bcf	17,0,b	;volatile
 14053  0016B4                     l508:
 14054                           
 14055                           ; BSR set to: 15
 14056                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
 14057  0016B4  0100               	movlb	0	; () banked
 14058  0016B6  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 14059  0016B8  D003               	goto	l509
 14060                           
 14061                           ; BSR set to: 0
 14062                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
 14063  0016BA  010F               	movlb	15	; () banked
 14064  0016BC  8311               	bsf	17,1,b	;volatile
 14065  0016BE  D002               	goto	l510
 14066  0016C0                     l509:
 14067                           
 14068                           ; BSR set to: 0
 14069                           ;inc\CANlib.h: 1014: else
 14070                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
 14071  0016C0  010F               	movlb	15	; () banked
 14072  0016C2  9311               	bcf	17,1,b	;volatile
 14073  0016C4                     l510:
 14074                           
 14075                           ; BSR set to: 15
 14076                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
 14077  0016C4  0100               	movlb	0	; () banked
 14078  0016C6  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 14079  0016C8  D003               	goto	l511
 14080                           
 14081                           ; BSR set to: 0
 14082                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
 14083  0016CA  010F               	movlb	15	; () banked
 14084  0016CC  8B11               	bsf	17,5,b	;volatile
 14085  0016CE  D002               	goto	l512
 14086  0016D0                     l511:
 14087                           
 14088                           ; BSR set to: 0
 14089                           ;inc\CANlib.h: 1019: else
 14090                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
 14091  0016D0  010F               	movlb	15	; () banked
 14092  0016D2  9B11               	bcf	17,5,b	;volatile
 14093  0016D4                     l512:
 14094                           
 14095                           ; BSR set to: 15
 14096                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
 14097  0016D4  0100               	movlb	0	; () banked
 14098  0016D6  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 14099  0016D8  D003               	goto	l513
 14100                           
 14101                           ; BSR set to: 0
 14102                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
 14103  0016DA  010F               	movlb	15	; () banked
 14104  0016DC  8D11               	bsf	17,6,b	;volatile
 14105  0016DE  D002               	goto	l514
 14106  0016E0                     l513:
 14107                           
 14108                           ; BSR set to: 0
 14109                           ;inc\CANlib.h: 1024: else
 14110                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
 14111  0016E0  010F               	movlb	15	; () banked
 14112  0016E2  9D11               	bcf	17,6,b	;volatile
 14113  0016E4                     l514:
 14114                           
 14115                           ; BSR set to: 15
 14116                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
 14117  0016E4  0100               	movlb	0	; () banked
 14118  0016E6  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 14119  0016E8  D003               	goto	l515
 14120                           
 14121                           ; BSR set to: 0
 14122                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
 14123  0016EA  010F               	movlb	15	; () banked
 14124  0016EC  8F11               	bsf	17,7,b	;volatile
 14125  0016EE  D002               	goto	l5605
 14126  0016F0                     l515:
 14127                           
 14128                           ; BSR set to: 0
 14129                           ;inc\CANlib.h: 1029: else
 14130                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
 14131  0016F0  010F               	movlb	15	; () banked
 14132  0016F2  9F11               	bcf	17,7,b	;volatile
 14133  0016F4                     l5605:
 14134                           
 14135                           ; BSR set to: 15
 14136                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
 14137  0016F4  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 14138  0016F8  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 14139  0016FC  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 14140  001700  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 14141  001704  0E16               	movlw	22
 14142  001706  D006               	goto	u6990
 14143  001708                     u6995:
 14144  001708  0100               	movlb	0	; () banked
 14145  00170A  90D8               	bcf	status,0,c
 14146  00170C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 14147  00170E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 14148  001710  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 14149  001712  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 14150  001714                     u6990:
 14151  001714  2EE8               	decfsz	wreg,f,c
 14152  001716  D7F8               	goto	u6995
 14153  001718  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14154  00171C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14155  001720  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14156  001724  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14157                           
 14158                           ; BSR set to: 0
 14159                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
 14160  001728  0100               	movlb	0	; () banked
 14161  00172A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 14162  00172C  0100               	movlb	0	; () banked
 14163  00172E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14164  001730  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14165  001732  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14166  001734  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14167                           
 14168                           ; BSR set to: 0
 14169                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
 14170  001736  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 14171  00173A                     l5611:
 14172                           
 14173                           ; BSR set to: 0
 14174                           ;inc\CANlib.h: 1035: }
 14175                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
 14176  00173A  0E05               	movlw	5
 14177  00173C  0100               	movlb	0	; () banked
 14178  00173E  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 14179  001740  A4D8               	btfss	status,2,c
 14180  001742  0012               	return	
 14181                           
 14182                           ; BSR set to: 0
 14183  001744  0EF7               	movlw	247
 14184  001746  0100               	movlb	0	; () banked
 14185  001748  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 14186  00174A  A4D8               	btfss	status,2,c
 14187  00174C  0012               	return	
 14188                           
 14189                           ; BSR set to: 0
 14190                           ;inc\CANlib.h: 1038: {
 14191                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
 14192  00174E  010F               	movlb	15	; () banked
 14193  001750  8715               	bsf	21,3,b	;volatile
 14194                           
 14195                           ; BSR set to: 15
 14196                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
 14197  001752  0100               	movlb	0	; () banked
 14198  001754  5177               	movf	CANSetFilter@filter& (0+255),w,b
 14199  001756  0100               	movlb	0	; () banked
 14200  001758  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14201  00175A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14202  00175C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14203  00175E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14204                           
 14205                           ; BSR set to: 0
 14206                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
 14207  001760  C081  FF17         	movff	CANSetFilter@tamp,3863	;volatile
 14208                           
 14209                           ; BSR set to: 0
 14210                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
 14211  001764  0E00               	movlw	0
 14212  001766  0100               	movlb	0	; () banked
 14213  001768  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 14214  00176A  0100               	movlb	0	; () banked
 14215  00176C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14216  00176E  0EFF               	movlw	255
 14217  001770  0100               	movlb	0	; () banked
 14218  001772  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 14219  001774  0100               	movlb	0	; () banked
 14220  001776  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 14221  001778  0E00               	movlw	0
 14222  00177A  0100               	movlb	0	; () banked
 14223  00177C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 14224  00177E  0100               	movlb	0	; () banked
 14225  001780  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 14226  001782  0E00               	movlw	0
 14227  001784  0100               	movlb	0	; () banked
 14228  001786  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 14229  001788  0100               	movlb	0	; () banked
 14230  00178A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 14231                           
 14232                           ; BSR set to: 0
 14233                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
 14234  00178C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 14235  001790  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 14236  001794  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 14237  001798  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 14238  00179C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 14239  0017A0  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 14240  0017A4  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 14241  0017A8  0100               	movlb	0	; () banked
 14242  0017AA  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 14243  0017AC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14244  0017B0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14245  0017B4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14246  0017B8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14247                           
 14248                           ; BSR set to: 0
 14249                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
 14250  0017BC  C081  FF16         	movff	CANSetFilter@tamp,3862	;volatile
 14251                           
 14252                           ; BSR set to: 0
 14253                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
 14254  0017C0  0100               	movlb	0	; () banked
 14255  0017C2  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 14256  0017C4  D003               	goto	l518
 14257                           
 14258                           ; BSR set to: 0
 14259                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
 14260  0017C6  010F               	movlb	15	; () banked
 14261  0017C8  8115               	bsf	21,0,b	;volatile
 14262  0017CA  D002               	goto	l519
 14263  0017CC                     l518:
 14264                           
 14265                           ; BSR set to: 0
 14266                           ;inc\CANlib.h: 1050: else
 14267                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
 14268  0017CC  010F               	movlb	15	; () banked
 14269  0017CE  9115               	bcf	21,0,b	;volatile
 14270  0017D0                     l519:
 14271                           
 14272                           ; BSR set to: 15
 14273                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
 14274  0017D0  0100               	movlb	0	; () banked
 14275  0017D2  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 14276  0017D4  D003               	goto	l520
 14277                           
 14278                           ; BSR set to: 0
 14279                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
 14280  0017D6  010F               	movlb	15	; () banked
 14281  0017D8  8315               	bsf	21,1,b	;volatile
 14282  0017DA  D002               	goto	l521
 14283  0017DC                     l520:
 14284                           
 14285                           ; BSR set to: 0
 14286                           ;inc\CANlib.h: 1055: else
 14287                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
 14288  0017DC  010F               	movlb	15	; () banked
 14289  0017DE  9315               	bcf	21,1,b	;volatile
 14290  0017E0                     l521:
 14291                           
 14292                           ; BSR set to: 15
 14293                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
 14294  0017E0  0100               	movlb	0	; () banked
 14295  0017E2  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 14296  0017E4  D003               	goto	l522
 14297                           
 14298                           ; BSR set to: 0
 14299                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
 14300  0017E6  010F               	movlb	15	; () banked
 14301  0017E8  8B15               	bsf	21,5,b	;volatile
 14302  0017EA  D002               	goto	l523
 14303  0017EC                     l522:
 14304                           
 14305                           ; BSR set to: 0
 14306                           ;inc\CANlib.h: 1060: else
 14307                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
 14308  0017EC  010F               	movlb	15	; () banked
 14309  0017EE  9B15               	bcf	21,5,b	;volatile
 14310  0017F0                     l523:
 14311                           
 14312                           ; BSR set to: 15
 14313                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
 14314  0017F0  0100               	movlb	0	; () banked
 14315  0017F2  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 14316  0017F4  D003               	goto	l524
 14317                           
 14318                           ; BSR set to: 0
 14319                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
 14320  0017F6  010F               	movlb	15	; () banked
 14321  0017F8  8D15               	bsf	21,6,b	;volatile
 14322  0017FA  D002               	goto	l525
 14323  0017FC                     l524:
 14324                           
 14325                           ; BSR set to: 0
 14326                           ;inc\CANlib.h: 1065: else
 14327                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
 14328  0017FC  010F               	movlb	15	; () banked
 14329  0017FE  9D15               	bcf	21,6,b	;volatile
 14330  001800                     l525:
 14331                           
 14332                           ; BSR set to: 15
 14333                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
 14334  001800  0100               	movlb	0	; () banked
 14335  001802  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 14336  001804  D003               	goto	l526
 14337                           
 14338                           ; BSR set to: 0
 14339                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
 14340  001806  010F               	movlb	15	; () banked
 14341  001808  8F15               	bsf	21,7,b	;volatile
 14342  00180A  D002               	goto	l5639
 14343  00180C                     l526:
 14344                           
 14345                           ; BSR set to: 0
 14346                           ;inc\CANlib.h: 1070: else
 14347                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
 14348  00180C  010F               	movlb	15	; () banked
 14349  00180E  9F15               	bcf	21,7,b	;volatile
 14350  001810                     l5639:
 14351                           
 14352                           ; BSR set to: 15
 14353                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
 14354  001810  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 14355  001814  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 14356  001818  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 14357  00181C  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 14358  001820  0E16               	movlw	22
 14359  001822  D006               	goto	u7070
 14360  001824                     u7075:
 14361  001824  0100               	movlb	0	; () banked
 14362  001826  90D8               	bcf	status,0,c
 14363  001828  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 14364  00182A  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 14365  00182C  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 14366  00182E  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 14367  001830                     u7070:
 14368  001830  2EE8               	decfsz	wreg,f,c
 14369  001832  D7F8               	goto	u7075
 14370  001834  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14371  001838  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14372  00183C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14373  001840  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14374                           
 14375                           ; BSR set to: 0
 14376                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
 14377  001844  0100               	movlb	0	; () banked
 14378  001846  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 14379  001848  0100               	movlb	0	; () banked
 14380  00184A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14381  00184C  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14382  00184E  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14383  001850  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14384                           
 14385                           ; BSR set to: 0
 14386                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
 14387  001852  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 14388  001856  0012               	return	
 14389  001858                     __end_of_CANSetFilter:
 14390                           	opt stack 0
 14391                           tblptru	equ	0xFF8
 14392                           tblptrh	equ	0xFF7
 14393                           tblptrl	equ	0xFF6
 14394                           tablat	equ	0xFF5
 14395                           prodh	equ	0xFF4
 14396                           prodl	equ	0xFF3
 14397                           intcon	equ	0xFF2
 14398                           intcon2	equ	0xFF1
 14399                           postinc0	equ	0xFEE
 14400                           wreg	equ	0xFE8
 14401                           postdec1	equ	0xFE5
 14402                           fsr1l	equ	0xFE1
 14403                           indf2	equ	0xFDF
 14404                           postinc2	equ	0xFDE
 14405                           postdec2	equ	0xFDD
 14406                           fsr2h	equ	0xFDA
 14407                           fsr2l	equ	0xFD9
 14408                           status	equ	0xFD8
 14409                           
 14410 ;; *************** function _CANOperationMode *****************
 14411 ;; Defined at:
 14412 ;;		line 206 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 14413 ;; Parameters:    Size  Location     Type
 14414 ;;  mode            1    wreg     enum E16142
 14415 ;; Auto vars:     Size  Location     Type
 14416 ;;  mode            1   23[BANK0 ] enum E16142
 14417 ;; Return value:  Size  Location     Type
 14418 ;;                  1    wreg      void 
 14419 ;; Registers used:
 14420 ;;		wreg, status,2, status,0
 14421 ;; Tracked objects:
 14422 ;;		On entry : 0/0
 14423 ;;		On exit  : 0/0
 14424 ;;		Unchanged: 0/0
 14425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14427 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14429 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14430 ;;Total ram usage:        1 bytes
 14431 ;; Hardware stack levels used:    1
 14432 ;; Hardware stack levels required when called:    4
 14433 ;; This function calls:
 14434 ;;		Nothing
 14435 ;; This function is called by:
 14436 ;;		_CANInitialize
 14437 ;; This function uses a non-reentrant model
 14438 ;;
 14439                           
 14440                           	psect	text33
 14441  00668C                     __ptext33:
 14442                           	opt stack 0
 14443  00668C                     _CANOperationMode:
 14444                           	opt stack 24
 14445                           
 14446                           ; BSR set to: 0
 14447                           ;incstack = 0
 14448                           ;CANOperationMode@mode stored from wreg
 14449  00668C  0100               	movlb	0	; () banked
 14450  00668E  6F77               	movwf	CANOperationMode@mode& (0+255),b
 14451                           
 14452                           ;inc\CANlib.h: 208: CANCON = mode;
 14453  006690  C077  FF6F         	movff	CANOperationMode@mode,3951	;volatile
 14454  006694                     l5235:
 14455  006694  506E               	movf	3950,w,c	;volatile
 14456  006696  0BE0               	andlw	224
 14457  006698  0100               	movlb	0	; () banked
 14458  00669A  1977               	xorwf	CANOperationMode@mode& (0+255),w,b
 14459  00669C  B4D8               	btfsc	status,2,c
 14460  00669E  0012               	return	
 14461  0066A0  D7F9               	goto	l5235
 14462  0066A2                     __end_of_CANOperationMode:
 14463                           	opt stack 0
 14464                           tblptru	equ	0xFF8
 14465                           tblptrh	equ	0xFF7
 14466                           tblptrl	equ	0xFF6
 14467                           tablat	equ	0xFF5
 14468                           prodh	equ	0xFF4
 14469                           prodl	equ	0xFF3
 14470                           intcon	equ	0xFF2
 14471                           intcon2	equ	0xFF1
 14472                           postinc0	equ	0xFEE
 14473                           wreg	equ	0xFE8
 14474                           postdec1	equ	0xFE5
 14475                           fsr1l	equ	0xFE1
 14476                           indf2	equ	0xFDF
 14477                           postinc2	equ	0xFDE
 14478                           postdec2	equ	0xFDD
 14479                           fsr2h	equ	0xFDA
 14480                           fsr2l	equ	0xFD9
 14481                           status	equ	0xFD8
 14482                           
 14483 ;; *************** function _can_interpreter *****************
 14484 ;; Defined at:
 14485 ;;		line 478 in file "parcheggio.c"
 14486 ;; Parameters:    Size  Location     Type
 14487 ;;		None
 14488 ;; Auto vars:     Size  Location     Type
 14489 ;;		None
 14490 ;; Return value:  Size  Location     Type
 14491 ;;                  1    wreg      void 
 14492 ;; Registers used:
 14493 ;;		wreg, status,2, status,0
 14494 ;; Tracked objects:
 14495 ;;		On entry : 0/0
 14496 ;;		On exit  : 0/0
 14497 ;;		Unchanged: 0/0
 14498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14501 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14502 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14503 ;;Total ram usage:        4 bytes
 14504 ;; Hardware stack levels used:    1
 14505 ;; Hardware stack levels required when called:    4
 14506 ;; This function calls:
 14507 ;;		Nothing
 14508 ;; This function is called by:
 14509 ;;		_main
 14510 ;; This function uses a non-reentrant model
 14511 ;;
 14512                           
 14513                           	psect	text34
 14514  0063AE                     __ptext34:
 14515                           	opt stack 0
 14516  0063AE                     _can_interpreter:
 14517                           	opt stack 26
 14518                           
 14519                           ;parcheggio.c: 479: left_speed = data_speed_rx[1];
 14520                           
 14521                           ; BSR set to: 0
 14522                           ;incstack = 0
 14523  0063AE  C109  F154         	movff	_data_speed_rx+1,_left_speed
 14524  0063B2  0101               	movlb	1	; () banked
 14525  0063B4  6B55               	clrf	(_left_speed+1)& (0+255),b
 14526                           
 14527                           ; BSR set to: 1
 14528                           ;parcheggio.c: 480: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 14529  0063B6  0101               	movlb	1	; () banked
 14530  0063B8  5154               	movf	_left_speed& (0+255),w,b
 14531  0063BA  0100               	movlb	0	; () banked
 14532  0063BC  6F77               	movwf	??_can_interpreter& (0+255),b
 14533  0063BE  0101               	movlb	1	; () banked
 14534  0063C0  5108               	movf	_data_speed_rx& (0+255),w,b
 14535  0063C2  0101               	movlb	1	; () banked
 14536  0063C4  6F54               	movwf	_left_speed& (0+255),b
 14537  0063C6  C077  F155         	movff	??_can_interpreter,_left_speed+1
 14538                           
 14539                           ; BSR set to: 1
 14540                           ;parcheggio.c: 481: right_speed = data_speed_rx[3];
 14541  0063CA  C10B  F158         	movff	_data_speed_rx+3,_right_speed
 14542  0063CE  0101               	movlb	1	; () banked
 14543  0063D0  6B59               	clrf	(_right_speed+1)& (0+255),b
 14544                           
 14545                           ;parcheggio.c: 482: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 14546  0063D2  0101               	movlb	1	; () banked
 14547  0063D4  5158               	movf	_right_speed& (0+255),w,b
 14548  0063D6  0100               	movlb	0	; () banked
 14549  0063D8  6F77               	movwf	??_can_interpreter& (0+255),b
 14550  0063DA  0101               	movlb	1	; () banked
 14551  0063DC  510A               	movf	(_data_speed_rx+2)& (0+255),w,b
 14552  0063DE  0101               	movlb	1	; () banked
 14553  0063E0  6F58               	movwf	_right_speed& (0+255),b
 14554  0063E2  C077  F159         	movff	??_can_interpreter,_right_speed+1
 14555                           
 14556                           ; BSR set to: 1
 14557                           ;parcheggio.c: 483: actual_speed = (right_speed + left_speed) / 2;
 14558  0063E6  0101               	movlb	1	; () banked
 14559  0063E8  5154               	movf	_left_speed& (0+255),w,b
 14560  0063EA  0101               	movlb	1	; () banked
 14561  0063EC  2558               	addwf	_right_speed& (0+255),w,b
 14562  0063EE  0100               	movlb	0	; () banked
 14563  0063F0  6F77               	movwf	??_can_interpreter& (0+255),b
 14564  0063F2  0101               	movlb	1	; () banked
 14565  0063F4  5155               	movf	(_left_speed+1)& (0+255),w,b
 14566  0063F6  0101               	movlb	1	; () banked
 14567  0063F8  2159               	addwfc	(_right_speed+1)& (0+255),w,b
 14568  0063FA  0100               	movlb	0	; () banked
 14569  0063FC  6F78               	movwf	(??_can_interpreter+1)& (0+255),b
 14570  0063FE  90D8               	bcf	status,0,c
 14571  006400  0100               	movlb	0	; () banked
 14572  006402  3178               	rrcf	(??_can_interpreter+1)& (0+255),w,b
 14573  006404  0100               	movlb	0	; () banked
 14574  006406  6F79               	movwf	(??_can_interpreter+2)& (0+255),b
 14575  006408  0100               	movlb	0	; () banked
 14576  00640A  3177               	rrcf	??_can_interpreter& (0+255),w,b
 14577  00640C  0101               	movlb	1	; () banked
 14578  00640E  6F4C               	movwf	_actual_speed& (0+255),b
 14579  006410  C079  F14D         	movff	??_can_interpreter+2,_actual_speed+1
 14580                           
 14581                           ; BSR set to: 1
 14582  006414  0012               	return		;funcret
 14583  006416                     __end_of_can_interpreter:
 14584                           	opt stack 0
 14585                           tblptru	equ	0xFF8
 14586                           tblptrh	equ	0xFF7
 14587                           tblptrl	equ	0xFF6
 14588                           tablat	equ	0xFF5
 14589                           prodh	equ	0xFF4
 14590                           prodl	equ	0xFF3
 14591                           intcon	equ	0xFF2
 14592                           intcon2	equ	0xFF1
 14593                           postinc0	equ	0xFEE
 14594                           wreg	equ	0xFE8
 14595                           postdec1	equ	0xFE5
 14596                           fsr1l	equ	0xFE1
 14597                           indf2	equ	0xFDF
 14598                           postinc2	equ	0xFDE
 14599                           postdec2	equ	0xFDD
 14600                           fsr2h	equ	0xFDA
 14601                           fsr2l	equ	0xFD9
 14602                           status	equ	0xFD8
 14603                           
 14604 ;; *************** function _ISR_Bassa *****************
 14605 ;; Defined at:
 14606 ;;		line 123 in file "parcheggio.c"
 14607 ;; Parameters:    Size  Location     Type
 14608 ;;		None
 14609 ;; Auto vars:     Size  Location     Type
 14610 ;;  i               1   22[BANK0 ] unsigned char 
 14611 ;;  PORTA_temp      1   21[BANK0 ] unsigned char 
 14612 ;; Return value:  Size  Location     Type
 14613 ;;                  1    wreg      void 
 14614 ;; Registers used:
 14615 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14616 ;; Tracked objects:
 14617 ;;		On entry : 0/0
 14618 ;;		On exit  : 0/0
 14619 ;;		Unchanged: 0/0
 14620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14622 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14623 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14624 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14625 ;;Total ram usage:       23 bytes
 14626 ;; Hardware stack levels used:    1
 14627 ;; Hardware stack levels required when called:    3
 14628 ;; This function calls:
 14629 ;;		_CANreceiveMessage
 14630 ;;		i1_CANisTxReady
 14631 ;;		i1_CANsendMessage
 14632 ;; This function is called by:
 14633 ;;		Interrupt level 1
 14634 ;; This function uses a non-reentrant model
 14635 ;;
 14636                           
 14637                           	psect	intcodelo
 14638  000018                     __pintcodelo:
 14639                           	opt stack 0
 14640  000018                     _ISR_Bassa:
 14641                           	opt stack 21
 14642                           
 14643                           ; BSR set to: 1
 14644                           ;incstack = 0
 14645  000018  8048               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 14646  00001A  CFD8 F064          	movff	status,??_ISR_Bassa+4
 14647  00001E  CFE8 F065          	movff	wreg,??_ISR_Bassa+5
 14648  000022  CFE0 F066          	movff	bsr,??_ISR_Bassa+6
 14649  000026  CFFA F067          	movff	pclath,??_ISR_Bassa+7
 14650  00002A  CFFB F068          	movff	pclatu,??_ISR_Bassa+8
 14651  00002E  CFE9 F069          	movff	fsr0l,??_ISR_Bassa+9
 14652  000032  CFEA F06A          	movff	fsr0h,??_ISR_Bassa+10
 14653  000036  CFE1 F06B          	movff	fsr1l,??_ISR_Bassa+11
 14654  00003A  CFE2 F06C          	movff	fsr1h,??_ISR_Bassa+12
 14655  00003E  CFD9 F06D          	movff	fsr2l,??_ISR_Bassa+13
 14656  000042  CFDA F06E          	movff	fsr2h,??_ISR_Bassa+14
 14657  000046  CFF3 F06F          	movff	prodl,??_ISR_Bassa+15
 14658  00004A  CFF4 F070          	movff	prodh,??_ISR_Bassa+16
 14659  00004E  CFF6 F071          	movff	tblptrl,??_ISR_Bassa+17
 14660  000052  CFF7 F072          	movff	tblptrh,??_ISR_Bassa+18
 14661  000056  CFF8 F073          	movff	tblptru,??_ISR_Bassa+19
 14662  00005A  CFF5 F074          	movff	tablat,??_ISR_Bassa+20
 14663                           
 14664                           ;parcheggio.c: 126: if (INTCONbits.TMR0IF == 1) {
 14665  00005E  A4F2               	btfss	intcon,2,c	;volatile
 14666  000060  D0AF               	goto	i1l8621
 14667                           
 14668                           ;parcheggio.c: 127: INTCONbits.INT0IE = 0;
 14669  000062  98F2               	bcf	intcon,4,c	;volatile
 14670                           
 14671                           ;parcheggio.c: 128: T0CONbits.TMR0ON = 0;
 14672  000064  9ED5               	bcf	4053,7,c	;volatile
 14673                           
 14674                           ;parcheggio.c: 129: TMR0H = 0x34;
 14675  000066  0E34               	movlw	52
 14676  000068  6ED7               	movwf	4055,c	;volatile
 14677                           
 14678                           ;parcheggio.c: 130: TMR0L = 0xE0;
 14679  00006A  0EE0               	movlw	224
 14680  00006C  6ED6               	movwf	4054,c	;volatile
 14681                           
 14682                           ;parcheggio.c: 131: T0CONbits.TMR0ON = 1;
 14683  00006E  8ED5               	bsf	4053,7,c	;volatile
 14684                           
 14685                           ;parcheggio.c: 133: if (distance_error == 1) {
 14686  000070  A845               	btfss	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14687  000072  D00C               	goto	i1l706
 14688                           
 14689                           ;parcheggio.c: 134: sensor_distance[MUX_index] = 5000;
 14690  000074  5040               	movf	_MUX_index,w,c	;volatile
 14691  000076  0D02               	mullw	2
 14692  000078  0E28               	movlw	low _sensor_distance
 14693  00007A  24F3               	addwf	prodl,w,c
 14694  00007C  6ED9               	movwf	fsr2l,c
 14695  00007E  0E00               	movlw	high _sensor_distance
 14696  000080  20F4               	addwfc	prodh,w,c
 14697  000082  6EDA               	movwf	fsr2h,c
 14698  000084  0E88               	movlw	136
 14699  000086  6EDE               	movwf	postinc2,c
 14700  000088  0E13               	movlw	19
 14701  00008A  6EDD               	movwf	postdec2,c
 14702  00008C                     i1l706:
 14703                           
 14704                           ;parcheggio.c: 135: }
 14705                           ;parcheggio.c: 137: if ((sensor_distance[MUX_index] < 10)&&(start_operation == 0)) {
 14706  00008C  5040               	movf	_MUX_index,w,c	;volatile
 14707  00008E  0D02               	mullw	2
 14708  000090  0E28               	movlw	low _sensor_distance
 14709  000092  24F3               	addwf	prodl,w,c
 14710  000094  6ED9               	movwf	fsr2l,c
 14711  000096  0E00               	movlw	high _sensor_distance
 14712  000098  20F4               	addwfc	prodh,w,c
 14713  00009A  6EDA               	movwf	fsr2h,c
 14714  00009C  0E01               	movlw	1
 14715  00009E  50DB               	movf	plusw2,w,c
 14716  0000A0  E118               	bnz	i1l8567
 14717  0000A2  0E0A               	movlw	10
 14718  0000A4  5CDE               	subwf	postinc2,w,c
 14719  0000A6  A0D8               	btfss	status,0,c
 14720  0000A8  BA46               	btfsc	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 14721  0000AA  D013               	goto	i1l8567
 14722                           
 14723                           ;parcheggio.c: 138: sensor_distance_short[0] = sensor_distance_short[0] | (0b00000001 <<
      +                           MUX_index);
 14724  0000AC  C040  F060         	movff	_MUX_index,??_ISR_Bassa	;volatile
 14725  0000B0  0E01               	movlw	1
 14726  0000B2  0100               	movlb	0	; () banked
 14727  0000B4  6F61               	movwf	(??_ISR_Bassa+1)& (0+255),b
 14728  0000B6  0100               	movlb	0	; () banked
 14729  0000B8  2B60               	incf	??_ISR_Bassa& (0+255),f,b
 14730  0000BA  D003               	goto	i1u1166_24
 14731  0000BC                     i1u1166_25:
 14732  0000BC  0100               	movlb	0	; () banked
 14733  0000BE  90D8               	bcf	status,0,c
 14734  0000C0  3761               	rlcf	(??_ISR_Bassa+1)& (0+255),f,b
 14735  0000C2                     i1u1166_24:
 14736  0000C2  0100               	movlb	0	; () banked
 14737  0000C4  2F60               	decfsz	??_ISR_Bassa& (0+255),f,b
 14738  0000C6  D7FA               	goto	i1u1166_25
 14739  0000C8  0100               	movlb	0	; () banked
 14740  0000CA  5161               	movf	(??_ISR_Bassa+1)& (0+255),w,b
 14741  0000CC  0101               	movlb	1	; () banked
 14742  0000CE  119B               	iorwf	_sensor_distance_short& (0+255),w,b	;volatile
 14743  0000D0  D052               	goto	L8
 14744  0000D2                     i1l8567:
 14745  0000D2  5040               	movf	_MUX_index,w,c	;volatile
 14746  0000D4  0D02               	mullw	2
 14747  0000D6  0E28               	movlw	low _sensor_distance
 14748  0000D8  24F3               	addwf	prodl,w,c
 14749  0000DA  6ED9               	movwf	fsr2l,c
 14750  0000DC  0E00               	movlw	high _sensor_distance
 14751  0000DE  20F4               	addwfc	prodh,w,c
 14752  0000E0  6EDA               	movwf	fsr2h,c
 14753  0000E2  0E01               	movlw	1
 14754  0000E4  50DB               	movf	plusw2,w,c
 14755  0000E6  E134               	bnz	i1l8589
 14756  0000E8  0E04               	movlw	4
 14757  0000EA  5CDE               	subwf	postinc2,w,c
 14758  0000EC  A0D8               	btfss	status,0,c
 14759  0000EE  AA46               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 14760  0000F0  D02F               	goto	i1l8589
 14761  0000F2  B445               	btfsc	_avvicinamento/(0+8),_avvicinamento& (0+7),c	;volatile
 14762  0000F4  D02D               	goto	i1l8589
 14763                           
 14764                           ;parcheggio.c: 140: counter++;
 14765  0000F6  2A43               	incf	_counter,f,c	;volatile
 14766                           
 14767                           ;parcheggio.c: 141: if (counter > 3) {
 14768  0000F8  0E03               	movlw	3
 14769  0000FA  6443               	cpfsgt	_counter,c	;volatile
 14770  0000FC  D03E               	goto	i1l8591
 14771                           
 14772                           ;parcheggio.c: 142: if ((MUX_index == 0) || (MUX_index == 1) || (MUX_index == 2)) {
 14773  0000FE  5040               	movf	_MUX_index,w,c	;volatile
 14774  000100  B4D8               	btfsc	status,2,c
 14775  000102  D007               	goto	i1l8583
 14776  000104  0440               	decf	_MUX_index,w,c	;volatile
 14777  000106  B4D8               	btfsc	status,2,c
 14778  000108  D004               	goto	i1l8583
 14779  00010A  0E02               	movlw	2
 14780  00010C  1840               	xorwf	_MUX_index,w,c	;volatile
 14781  00010E  A4D8               	btfss	status,2,c
 14782  000110  D034               	goto	i1l8591
 14783  000112                     i1l8583:
 14784                           
 14785                           ;parcheggio.c: 143: data[1] = 0;
 14786  000112  0E00               	movlw	0
 14787  000114  0101               	movlb	1	; () banked
 14788  000116  6F6C               	movwf	(_data+1)& (0+255),b
 14789                           
 14790                           ;parcheggio.c: 144: data[0] = 4;
 14791  000118  0E04               	movlw	4
 14792  00011A  0101               	movlb	1	; () banked
 14793  00011C  6F6B               	movwf	_data& (0+255),b
 14794  00011E                     i1l8585:
 14795  00011E  EC37  F033         	call	i1_CANisTxReady	;wreg free
 14796  000122  0900               	iorlw	0
 14797  000124  B4D8               	btfsc	status,2,c
 14798  000126  D7FB               	goto	i1l8585
 14799                           
 14800                           ;parcheggio.c: 146: CANsendMessage(0b00000001011, data, 8, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
 14801  000128  0E0B               	movlw	11
 14802  00012A  6E18               	movwf	i1CANsendMessage@identifier,c
 14803  00012C  0E00               	movlw	0
 14804  00012E  6E19               	movwf	i1CANsendMessage@identifier+1,c
 14805  000130  0E00               	movlw	0
 14806  000132  6E1A               	movwf	i1CANsendMessage@identifier+2,c
 14807  000134  0E00               	movlw	0
 14808  000136  6E1B               	movwf	i1CANsendMessage@identifier+3,c
 14809  000138  0E6B               	movlw	low _data
 14810  00013A  6E1C               	movwf	i1CANsendMessage@data,c
 14811  00013C  0E01               	movlw	high _data
 14812  00013E  6E1D               	movwf	i1CANsendMessage@data+1,c
 14813  000140  0E08               	movlw	8
 14814  000142  6E1E               	movwf	i1CANsendMessage@dataLength,c
 14815  000144  0EBC               	movlw	188
 14816  000146  6E1F               	movwf	i1CANsendMessage@flags,c
 14817  000148  ECF2  F00F         	call	i1_CANsendMessage	;wreg free
 14818  00014C  00FF               	reset		;# 
 14819                           
 14820                           ;parcheggio.c: 148: }
 14821                           ;parcheggio.c: 149: }
 14822                           ;parcheggio.c: 150: } else {
 14823  00014E  D015               	goto	i1l8591
 14824  000150                     i1l8589:
 14825                           
 14826                           ;parcheggio.c: 151: sensor_distance_short[0] = sensor_distance_short[0] & (~(0b00000001 
      +                          << MUX_index));
 14827  000150  C040  F060         	movff	_MUX_index,??_ISR_Bassa	;volatile
 14828  000154  0E01               	movlw	1
 14829  000156  0100               	movlb	0	; () banked
 14830  000158  6F61               	movwf	(??_ISR_Bassa+1)& (0+255),b
 14831  00015A  0100               	movlb	0	; () banked
 14832  00015C  2B60               	incf	??_ISR_Bassa& (0+255),f,b
 14833  00015E  D003               	goto	i1u1175_24
 14834  000160                     i1u1175_25:
 14835  000160  0100               	movlb	0	; () banked
 14836  000162  90D8               	bcf	status,0,c
 14837  000164  3761               	rlcf	(??_ISR_Bassa+1)& (0+255),f,b
 14838  000166                     i1u1175_24:
 14839  000166  0100               	movlb	0	; () banked
 14840  000168  2F60               	decfsz	??_ISR_Bassa& (0+255),f,b
 14841  00016A  D7FA               	goto	i1u1175_25
 14842  00016C  0100               	movlb	0	; () banked
 14843  00016E  5161               	movf	(??_ISR_Bassa+1)& (0+255),w,b
 14844  000170  0AFF               	xorlw	255
 14845  000172  0101               	movlb	1	; () banked
 14846  000174  159B               	andwf	_sensor_distance_short& (0+255),w,b	;volatile
 14847  000176                     L8:
 14848  000176  0101               	movlb	1	; () banked
 14849  000178  6F9B               	movwf	_sensor_distance_short& (0+255),b	;volatile
 14850  00017A                     i1l8591:
 14851                           
 14852                           ;parcheggio.c: 152: }
 14853                           ;parcheggio.c: 154: MUX_index++;
 14854  00017A  2A40               	incf	_MUX_index,f,c	;volatile
 14855                           
 14856                           ;parcheggio.c: 155: if (MUX_index == 8) {
 14857  00017C  0E08               	movlw	8
 14858  00017E  1840               	xorwf	_MUX_index,w,c	;volatile
 14859  000180  A4D8               	btfss	status,2,c
 14860  000182  D002               	goto	i1l718
 14861                           
 14862                           ;parcheggio.c: 156: MUX_index = 0;
 14863  000184  0E00               	movlw	0
 14864  000186  6E40               	movwf	_MUX_index,c	;volatile
 14865  000188                     i1l718:
 14866                           
 14867                           ;parcheggio.c: 157: }
 14868                           ;parcheggio.c: 159: unsigned char PORTA_temp = 0;
 14869  000188  0E00               	movlw	0
 14870  00018A  0100               	movlb	0	; () banked
 14871  00018C  6F75               	movwf	ISR_Bassa@PORTA_temp& (0+255),b
 14872                           
 14873                           ; BSR set to: 0
 14874                           ;parcheggio.c: 160: PORTA_temp = MUX_select[MUX_index];
 14875  00018E  5040               	movf	_MUX_index,w,c	;volatile
 14876  000190  0D01               	mullw	1
 14877  000192  0E00               	movlw	low _MUX_select
 14878  000194  24F3               	addwf	prodl,w,c
 14879  000196  6ED9               	movwf	fsr2l,c
 14880  000198  0E01               	movlw	high _MUX_select
 14881  00019A  20F4               	addwfc	prodh,w,c
 14882  00019C  6EDA               	movwf	fsr2h,c
 14883  00019E  50DF               	movf	indf2,w,c
 14884  0001A0  0100               	movlb	0	; () banked
 14885  0001A2  6F75               	movwf	ISR_Bassa@PORTA_temp& (0+255),b
 14886                           
 14887                           ; BSR set to: 0
 14888                           ;parcheggio.c: 161: PORTA = PORTA_temp;
 14889  0001A4  C075  FF80         	movff	ISR_Bassa@PORTA_temp,3968	;volatile
 14890                           
 14891                           ; BSR set to: 0
 14892                           ;parcheggio.c: 163: TRISBbits.RB0 = 0;
 14893  0001A8  9093               	bcf	3987,0,c	;volatile
 14894                           
 14895                           ; BSR set to: 0
 14896                           ;parcheggio.c: 164: LATBbits.LATB0 = 1;
 14897  0001AA  808A               	bsf	3978,0,c	;volatile
 14898                           
 14899                           ; BSR set to: 0
 14900                           ;parcheggio.c: 165: _delay((unsigned long)((15)*(16000000/4000000.0)));
 14901  0001AC  0E14               	movlw	20
 14902  0001AE                     i1u1192_27:
 14903  0001AE  2EE8               	decfsz	wreg,f,c
 14904  0001B0  D7FE               	goto	i1u1192_27
 14905                           
 14906                           ;parcheggio.c: 166: distance_error = 1;
 14907  0001B2  8845               	bsf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14908                           
 14909                           ;parcheggio.c: 167: LATBbits.LATB0 = 0;
 14910  0001B4  908A               	bcf	3978,0,c	;volatile
 14911                           
 14912                           ;parcheggio.c: 168: TRISBbits.RB0 = 1;
 14913  0001B6  8093               	bsf	3987,0,c	;volatile
 14914                           
 14915                           ;parcheggio.c: 169: INTCONbits.INT0IF = 0;
 14916  0001B8  92F2               	bcf	intcon,1,c	;volatile
 14917                           
 14918                           ;parcheggio.c: 170: INTCONbits.INT0IE = 1;
 14919  0001BA  88F2               	bsf	intcon,4,c	;volatile
 14920                           
 14921                           ;parcheggio.c: 171: INTCONbits.TMR0IF = 0;
 14922  0001BC  94F2               	bcf	intcon,2,c	;volatile
 14923                           
 14924                           ;parcheggio.c: 172: INTCON2bits.INTEDG0 = 1;
 14925  0001BE  8CF1               	bsf	intcon2,6,c	;volatile
 14926  0001C0                     i1l8621:
 14927                           
 14928                           ;parcheggio.c: 173: }
 14929                           ;parcheggio.c: 176: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
 14930  0001C0  A0A4               	btfss	4004,0,c	;volatile
 14931  0001C2  B2A4               	btfsc	4004,1,c	;volatile
 14932  0001C4  D001               	goto	i1l8625
 14933  0001C6  D09E               	goto	i1l731
 14934  0001C8                     i1l8625:
 14935                           
 14936                           ;parcheggio.c: 177: CANreceiveMessage(&msg);
 14937  0001C8  0E5C               	movlw	low _msg
 14938  0001CA  6E18               	movwf	CANreceiveMessage@msg,c
 14939  0001CC  0E01               	movlw	high _msg
 14940  0001CE  6E19               	movwf	CANreceiveMessage@msg+1,c
 14941  0001D0  ECFF  F015         	call	_CANreceiveMessage	;wreg free
 14942                           
 14943                           ;parcheggio.c: 179: if (msg.identifier == 0b00000001101) {
 14944  0001D4  0E0D               	movlw	13
 14945  0001D6  0101               	movlb	1	; () banked
 14946  0001D8  195C               	xorwf	_msg& (0+255),w,b
 14947  0001DA  0101               	movlb	1	; () banked
 14948  0001DC  115D               	iorwf	(_msg+1)& (0+255),w,b
 14949  0001DE  0101               	movlb	1	; () banked
 14950  0001E0  115E               	iorwf	(_msg+2)& (0+255),w,b
 14951  0001E2  0101               	movlb	1	; () banked
 14952  0001E4  115F               	iorwf	(_msg+3)& (0+255),w,b
 14953  0001E6  B4D8               	btfsc	status,2,c
 14954                           
 14955                           ; BSR set to: 1
 14956                           ;parcheggio.c: 180: asd = 0;
 14957  0001E8  9245               	bcf	_asd/(0+8),_asd& (0+7),c	;volatile
 14958                           
 14959                           ; BSR set to: 1
 14960                           ;parcheggio.c: 181: }
 14961                           ;parcheggio.c: 183: if ((msg.identifier == 0b00000000111) && (msg.RTR != 1)) {
 14962                           
 14963                           ; BSR set to: 1
 14964  0001EA  0E07               	movlw	7
 14965  0001EC  0101               	movlb	1	; () banked
 14966  0001EE  195C               	xorwf	_msg& (0+255),w,b
 14967  0001F0  0101               	movlb	1	; () banked
 14968  0001F2  115D               	iorwf	(_msg+1)& (0+255),w,b
 14969  0001F4  0101               	movlb	1	; () banked
 14970  0001F6  115E               	iorwf	(_msg+2)& (0+255),w,b
 14971  0001F8  0101               	movlb	1	; () banked
 14972  0001FA  115F               	iorwf	(_msg+3)& (0+255),w,b
 14973  0001FC  A4D8               	btfss	status,2,c
 14974  0001FE  D034               	goto	i1l8647
 14975                           
 14976                           ; BSR set to: 1
 14977  000200  0101               	movlb	1	; () banked
 14978  000202  056A               	decf	(_msg+14)& (0+255),w,b
 14979  000204  B4D8               	btfsc	status,2,c
 14980  000206  D030               	goto	i1l8647
 14981                           
 14982                           ; BSR set to: 1
 14983                           ;parcheggio.c: 184: distance_average = 0;
 14984  000208  0E00               	movlw	0
 14985  00020A  0101               	movlb	1	; () banked
 14986  00020C  6F51               	movwf	(_distance_average+1)& (0+255),b	;volatile
 14987  00020E  0E00               	movlw	0
 14988  000210  6F50               	movwf	_distance_average& (0+255),b	;volatile
 14989                           
 14990                           ; BSR set to: 1
 14991                           ;parcheggio.c: 185: distance_dx = msg.data[1];
 14992  000212  C161  F03A         	movff	_msg+5,_distance_dx	;volatile
 14993  000216  6A3B               	clrf	_distance_dx+1,c	;volatile
 14994                           
 14995                           ;parcheggio.c: 186: distance_dx = ((distance_dx << 8) | msg.data[0]);
 14996  000218  503A               	movf	_distance_dx,w,c	;volatile
 14997  00021A  0100               	movlb	0	; () banked
 14998  00021C  6F60               	movwf	??_ISR_Bassa& (0+255),b
 14999  00021E  0101               	movlb	1	; () banked
 15000  000220  5160               	movf	(_msg+4)& (0+255),w,b
 15001  000222  6E3A               	movwf	_distance_dx,c	;volatile
 15002  000224  C060  F03B         	movff	??_ISR_Bassa,_distance_dx+1	;volatile
 15003                           
 15004                           ; BSR set to: 1
 15005                           ;parcheggio.c: 187: distance_sx = msg.data[3];
 15006  000228  C163  F03C         	movff	_msg+7,_distance_sx	;volatile
 15007  00022C  6A3D               	clrf	_distance_sx+1,c	;volatile
 15008                           
 15009                           ;parcheggio.c: 188: distance_sx = ((distance_sx << 8) | msg.data[2]);
 15010  00022E  503C               	movf	_distance_sx,w,c	;volatile
 15011  000230  0100               	movlb	0	; () banked
 15012  000232  6F60               	movwf	??_ISR_Bassa& (0+255),b
 15013  000234  0101               	movlb	1	; () banked
 15014  000236  5162               	movf	(_msg+6)& (0+255),w,b
 15015  000238  6E3C               	movwf	_distance_sx,c	;volatile
 15016  00023A  C060  F03D         	movff	??_ISR_Bassa,_distance_sx+1	;volatile
 15017                           
 15018                           ; BSR set to: 1
 15019                           ;parcheggio.c: 189: distance_average = (distance_sx + distance_dx) / 2;
 15020  00023E  503A               	movf	_distance_dx,w,c	;volatile
 15021  000240  243C               	addwf	_distance_sx,w,c	;volatile
 15022  000242  0100               	movlb	0	; () banked
 15023  000244  6F60               	movwf	??_ISR_Bassa& (0+255),b
 15024  000246  503B               	movf	_distance_dx+1,w,c	;volatile
 15025  000248  203D               	addwfc	_distance_sx+1,w,c	;volatile
 15026  00024A  0100               	movlb	0	; () banked
 15027  00024C  6F61               	movwf	(??_ISR_Bassa+1)& (0+255),b
 15028  00024E  90D8               	bcf	status,0,c
 15029  000250  0100               	movlb	0	; () banked
 15030  000252  3161               	rrcf	(??_ISR_Bassa+1)& (0+255),w,b
 15031  000254  0100               	movlb	0	; () banked
 15032  000256  6F62               	movwf	(??_ISR_Bassa+2)& (0+255),b
 15033  000258  0100               	movlb	0	; () banked
 15034  00025A  3160               	rrcf	??_ISR_Bassa& (0+255),w,b
 15035  00025C  0101               	movlb	1	; () banked
 15036  00025E  6F50               	movwf	_distance_average& (0+255),b	;volatile
 15037  000260  C062  F151         	movff	??_ISR_Bassa+2,_distance_average+1	;volatile
 15038                           
 15039                           ; BSR set to: 1
 15040                           ;parcheggio.c: 190: distance_received = 1;
 15041  000264  8A45               	bsf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
 15042                           
 15043                           ; BSR set to: 1
 15044                           ;parcheggio.c: 191: distance_received1 = 1;
 15045  000266  8C45               	bsf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
 15046  000268                     i1l8647:
 15047                           
 15048                           ; BSR set to: 1
 15049                           ;parcheggio.c: 192: }
 15050                           ;parcheggio.c: 194: if (msg.identifier == 0b00000001010) {
 15051  000268  0E0A               	movlw	10
 15052  00026A  0101               	movlb	1	; () banked
 15053  00026C  195C               	xorwf	_msg& (0+255),w,b
 15054  00026E  0101               	movlb	1	; () banked
 15055  000270  115D               	iorwf	(_msg+1)& (0+255),w,b
 15056  000272  0101               	movlb	1	; () banked
 15057  000274  115E               	iorwf	(_msg+2)& (0+255),w,b
 15058  000276  0101               	movlb	1	; () banked
 15059  000278  115F               	iorwf	(_msg+3)& (0+255),w,b
 15060  00027A  A4D8               	btfss	status,2,c
 15061  00027C  D00C               	goto	i1l8653
 15062                           
 15063                           ; BSR set to: 1
 15064                           ;parcheggio.c: 195: if (msg.data[0] == 1) {
 15065  00027E  0101               	movlb	1	; () banked
 15066  000280  0560               	decf	(_msg+4)& (0+255),w,b
 15067  000282  A4D8               	btfss	status,2,c
 15068  000284  D003               	goto	i1l725
 15069                           
 15070                           ; BSR set to: 1
 15071                           ;parcheggio.c: 196: activation = 1;
 15072  000286  8045               	bsf	_activation/(0+8),_activation& (0+7),c	;volatile
 15073                           
 15074                           ;parcheggio.c: 197: PORTBbits.RB6 = 1;
 15075  000288  8C81               	bsf	3969,6,c	;volatile
 15076                           
 15077                           ;parcheggio.c: 198: } else {
 15078  00028A  D005               	goto	i1l8653
 15079  00028C                     i1l725:
 15080                           
 15081                           ; BSR set to: 1
 15082                           ;parcheggio.c: 199: activation = 0;
 15083  00028C  9045               	bcf	_activation/(0+8),_activation& (0+7),c	;volatile
 15084                           
 15085                           ;parcheggio.c: 200: PORTBbits.RB4 = 0;
 15086  00028E  9881               	bcf	3969,4,c	;volatile
 15087                           
 15088                           ;parcheggio.c: 201: PORTBbits.RB5 = 0;
 15089  000290  9A81               	bcf	3969,5,c	;volatile
 15090                           
 15091                           ;parcheggio.c: 202: PORTBbits.RB6 = 0;
 15092  000292  9C81               	bcf	3969,6,c	;volatile
 15093                           
 15094                           ;parcheggio.c: 203: request_sent = 0;
 15095  000294  9646               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
 15096  000296                     i1l8653:
 15097                           
 15098                           ; BSR set to: 1
 15099                           ;parcheggio.c: 204: }
 15100                           ;parcheggio.c: 205: }
 15101                           ;parcheggio.c: 207: if (msg.identifier == 0b00000001100) {
 15102  000296  0E0C               	movlw	12
 15103  000298  0101               	movlb	1	; () banked
 15104  00029A  195C               	xorwf	_msg& (0+255),w,b
 15105  00029C  0101               	movlb	1	; () banked
 15106  00029E  115D               	iorwf	(_msg+1)& (0+255),w,b
 15107  0002A0  0101               	movlb	1	; () banked
 15108  0002A2  115E               	iorwf	(_msg+2)& (0+255),w,b
 15109  0002A4  0101               	movlb	1	; () banked
 15110  0002A6  115F               	iorwf	(_msg+3)& (0+255),w,b
 15111  0002A8  B4D8               	btfsc	status,2,c
 15112                           
 15113                           ; BSR set to: 1
 15114                           ;parcheggio.c: 208: start_operation = 1;
 15115  0002AA  8A46               	bsf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 15116                           
 15117                           ; BSR set to: 1
 15118                           ;parcheggio.c: 209: }
 15119                           ;parcheggio.c: 212: if (msg.identifier == 0b00000000110) {
 15120                           
 15121                           ; BSR set to: 1
 15122  0002AC  0E06               	movlw	6
 15123  0002AE  0101               	movlb	1	; () banked
 15124  0002B0  195C               	xorwf	_msg& (0+255),w,b
 15125  0002B2  0101               	movlb	1	; () banked
 15126  0002B4  115D               	iorwf	(_msg+1)& (0+255),w,b
 15127  0002B6  0101               	movlb	1	; () banked
 15128  0002B8  115E               	iorwf	(_msg+2)& (0+255),w,b
 15129  0002BA  0101               	movlb	1	; () banked
 15130  0002BC  115F               	iorwf	(_msg+3)& (0+255),w,b
 15131  0002BE  A4D8               	btfss	status,2,c
 15132  0002C0  D01F               	goto	i1l728
 15133                           
 15134                           ; BSR set to: 1
 15135                           ;parcheggio.c: 213: for (unsigned char i = 0; i < 8; i++) {
 15136  0002C2  0E00               	movlw	0
 15137  0002C4  0100               	movlb	0	; () banked
 15138  0002C6  6F76               	movwf	ISR_Bassa@i& (0+255),b
 15139  0002C8                     i1l8661:
 15140                           
 15141                           ; BSR set to: 0
 15142  0002C8  0E07               	movlw	7
 15143  0002CA  0100               	movlb	0	; () banked
 15144  0002CC  6576               	cpfsgt	ISR_Bassa@i& (0+255),b
 15145  0002CE  D001               	goto	i1l8665
 15146  0002D0  D017               	goto	i1l728
 15147  0002D2                     i1l8665:
 15148                           
 15149                           ; BSR set to: 0
 15150                           ;parcheggio.c: 214: data_speed_rx[i] = msg.data[i];
 15151  0002D2  0100               	movlb	0	; () banked
 15152  0002D4  5176               	movf	ISR_Bassa@i& (0+255),w,b
 15153  0002D6  0D01               	mullw	1
 15154  0002D8  0E60               	movlw	low (_msg+4)
 15155  0002DA  24F3               	addwf	prodl,w,c
 15156  0002DC  6ED9               	movwf	fsr2l,c
 15157  0002DE  0E01               	movlw	high (_msg+4)
 15158  0002E0  20F4               	addwfc	prodh,w,c
 15159  0002E2  6EDA               	movwf	fsr2h,c
 15160  0002E4  0100               	movlb	0	; () banked
 15161  0002E6  5176               	movf	ISR_Bassa@i& (0+255),w,b
 15162  0002E8  0D01               	mullw	1
 15163  0002EA  0E08               	movlw	low _data_speed_rx
 15164  0002EC  24F3               	addwf	prodl,w,c
 15165  0002EE  6EE1               	movwf	fsr1l,c
 15166  0002F0  0E01               	movlw	high _data_speed_rx
 15167  0002F2  20F4               	addwfc	prodh,w,c
 15168  0002F4  6EE2               	movwf	fsr1h,c
 15169  0002F6  CFDF FFE7          	movff	indf2,indf1
 15170                           
 15171                           ; BSR set to: 0
 15172  0002FA  0100               	movlb	0	; () banked
 15173  0002FC  2B76               	incf	ISR_Bassa@i& (0+255),f,b
 15174  0002FE  D7E4               	goto	i1l8661
 15175  000300                     i1l728:
 15176                           
 15177                           ;parcheggio.c: 215: }
 15178                           ;parcheggio.c: 216: }
 15179                           ;parcheggio.c: 219: PIR3bits.RXB0IF = 0;
 15180  000300  90A4               	bcf	4004,0,c	;volatile
 15181                           
 15182                           ;parcheggio.c: 220: PIR3bits.RXB1IF = 0;
 15183  000302  92A4               	bcf	4004,1,c	;volatile
 15184  000304                     i1l731:
 15185  000304  C074  FFF5         	movff	??_ISR_Bassa+20,tablat
 15186  000308  C073  FFF8         	movff	??_ISR_Bassa+19,tblptru
 15187  00030C  C072  FFF7         	movff	??_ISR_Bassa+18,tblptrh
 15188  000310  C071  FFF6         	movff	??_ISR_Bassa+17,tblptrl
 15189  000314  C070  FFF4         	movff	??_ISR_Bassa+16,prodh
 15190  000318  C06F  FFF3         	movff	??_ISR_Bassa+15,prodl
 15191  00031C  C06E  FFDA         	movff	??_ISR_Bassa+14,fsr2h
 15192  000320  C06D  FFD9         	movff	??_ISR_Bassa+13,fsr2l
 15193  000324  C06C  FFE2         	movff	??_ISR_Bassa+12,fsr1h
 15194  000328  C06B  FFE1         	movff	??_ISR_Bassa+11,fsr1l
 15195  00032C  C06A  FFEA         	movff	??_ISR_Bassa+10,fsr0h
 15196  000330  C069  FFE9         	movff	??_ISR_Bassa+9,fsr0l
 15197  000334  C068  FFFB         	movff	??_ISR_Bassa+8,pclatu
 15198  000338  C067  FFFA         	movff	??_ISR_Bassa+7,pclath
 15199  00033C  C066  FFE0         	movff	??_ISR_Bassa+6,bsr
 15200  000340  C065  FFE8         	movff	??_ISR_Bassa+5,wreg
 15201  000344  C064  FFD8         	movff	??_ISR_Bassa+4,status
 15202  000348  9048               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 15203  00034A  0010               	retfie	
 15204  00034C                     __end_of_ISR_Bassa:
 15205                           	opt stack 0
 15206                           pclatu	equ	0xFFB
 15207                           pclath	equ	0xFFA
 15208                           tblptru	equ	0xFF8
 15209                           tblptrh	equ	0xFF7
 15210                           tblptrl	equ	0xFF6
 15211                           tablat	equ	0xFF5
 15212                           prodh	equ	0xFF4
 15213                           prodl	equ	0xFF3
 15214                           intcon	equ	0xFF2
 15215                           intcon2	equ	0xFF1
 15216                           postinc0	equ	0xFEE
 15217                           fsr0h	equ	0xFEA
 15218                           fsr0l	equ	0xFE9
 15219                           wreg	equ	0xFE8
 15220                           indf1	equ	0xFE7
 15221                           postdec1	equ	0xFE5
 15222                           fsr1h	equ	0xFE2
 15223                           fsr1l	equ	0xFE1
 15224                           bsr	equ	0xFE0
 15225                           indf2	equ	0xFDF
 15226                           postinc2	equ	0xFDE
 15227                           postdec2	equ	0xFDD
 15228                           plusw2	equ	0xFDB
 15229                           fsr2h	equ	0xFDA
 15230                           fsr2l	equ	0xFD9
 15231                           status	equ	0xFD8
 15232                           
 15233 ;; *************** function i1_CANsendMessage *****************
 15234 ;; Defined at:
 15235 ;;		line 294 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 15236 ;; Parameters:    Size  Location     Type
 15237 ;;  identifier      4   23[COMRAM] unsigned long 
 15238 ;;  data            2   27[COMRAM] PTR unsigned char 
 15239 ;;		 -> data_speed(8), data_brake(8), data_steering(8), data_correction(8), 
 15240 ;;		 -> data_test(8), data(8), sensor_distance_short(8), 
 15241 ;;  dataLength      1   29[COMRAM] unsigned char 
 15242 ;;  flags           1   30[COMRAM] enum E16170
 15243 ;; Auto vars:     Size  Location     Type
 15244 ;;  CANsendMessa    4   35[COMRAM] unsigned long 
 15245 ;; Return value:  Size  Location     Type
 15246 ;;                  1    wreg      void 
 15247 ;; Registers used:
 15248 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15249 ;; Tracked objects:
 15250 ;;		On entry : 0/0
 15251 ;;		On exit  : 0/0
 15252 ;;		Unchanged: 0/0
 15253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15254 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15255 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15256 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15257 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15258 ;;Total ram usage:       16 bytes
 15259 ;; Hardware stack levels used:    1
 15260 ;; Hardware stack levels required when called:    2
 15261 ;; This function calls:
 15262 ;;		Nothing
 15263 ;; This function is called by:
 15264 ;;		_ISR_Bassa
 15265 ;; This function uses a non-reentrant model
 15266 ;;
 15267                           
 15268                           	psect	text36
 15269  001FE4                     __ptext36:
 15270                           	opt stack 0
 15271  001FE4                     i1_CANsendMessage:
 15272                           	opt stack 21
 15273                           
 15274                           ;inc\CANlib.h: 296: unsigned long tamp;
 15275                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 15276                           
 15277                           ;incstack = 0
 15278  001FE4  010F               	movlb	15	; () banked
 15279  001FE6  B740               	btfsc	64,3,b	;volatile
 15280  001FE8  D115               	goto	i1l363
 15281                           
 15282                           ; BSR set to: 15
 15283                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 15284  001FEA  C01E  FF45         	movff	i1CANsendMessage@dataLength,3909	;volatile
 15285                           
 15286                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 15287  001FEE  AC1F               	btfss	i1CANsendMessage@flags,6,c
 15288  001FF0  D003               	goto	i1l364
 15289                           
 15290                           ; BSR set to: 15
 15291                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 15292  001FF2  010F               	movlb	15	; () banked
 15293  001FF4  8D45               	bsf	69,6,b	;volatile
 15294  001FF6  D002               	goto	i1l365
 15295  001FF8                     i1l364:
 15296                           
 15297                           ; BSR set to: 15
 15298                           ;inc\CANlib.h: 302: else
 15299                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 15300  001FF8  010F               	movlb	15	; () banked
 15301  001FFA  9D45               	bcf	69,6,b	;volatile
 15302  001FFC                     i1l365:
 15303                           
 15304                           ; BSR set to: 15
 15305                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 15306  001FFC  A61F               	btfss	i1CANsendMessage@flags,3,c
 15307  001FFE  D066               	goto	i1l366
 15308                           
 15309                           ; BSR set to: 15
 15310                           ;inc\CANlib.h: 306: {
 15311                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 15312  002000  5018               	movf	i1CANsendMessage@identifier,w,c
 15313  002002  6E24               	movwf	i1CANsendMessage@tamp,c
 15314  002004  6A25               	clrf	i1CANsendMessage@tamp+1,c
 15315  002006  6A26               	clrf	i1CANsendMessage@tamp+2,c
 15316  002008  6A27               	clrf	i1CANsendMessage@tamp+3,c
 15317                           
 15318                           ; BSR set to: 15
 15319                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 15320  00200A  C024  FF44         	movff	i1CANsendMessage@tamp,3908	;volatile
 15321                           
 15322                           ; BSR set to: 15
 15323                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 15324  00200E  0E00               	movlw	0
 15325  002010  1418               	andwf	i1CANsendMessage@identifier,w,c
 15326  002012  6E24               	movwf	i1CANsendMessage@tamp,c
 15327  002014  0EFF               	movlw	255
 15328  002016  1419               	andwf	i1CANsendMessage@identifier+1,w,c
 15329  002018  6E25               	movwf	i1CANsendMessage@tamp+1,c
 15330  00201A  0E00               	movlw	0
 15331  00201C  141A               	andwf	i1CANsendMessage@identifier+2,w,c
 15332  00201E  6E26               	movwf	i1CANsendMessage@tamp+2,c
 15333  002020  0E00               	movlw	0
 15334  002022  141B               	andwf	i1CANsendMessage@identifier+3,w,c
 15335  002024  6E27               	movwf	i1CANsendMessage@tamp+3,c
 15336                           
 15337                           ; BSR set to: 15
 15338                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 15339  002026  C024  F020         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 15340  00202A  C025  F021         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 15341  00202E  C026  F022         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 15342  002032  C027  F023         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 15343  002036  C021  F020         	movff	??i1_CANsendMessage+1,??i1_CANsendMessage
 15344  00203A  C022  F021         	movff	??i1_CANsendMessage+2,??i1_CANsendMessage+1
 15345  00203E  C023  F022         	movff	??i1_CANsendMessage+3,??i1_CANsendMessage+2
 15346  002042  6A23               	clrf	??i1_CANsendMessage+3,c
 15347  002044  C020  F024         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15348  002048  C021  F025         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15349  00204C  C022  F026         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15350  002050  C023  F027         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15351                           
 15352                           ; BSR set to: 15
 15353                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 15354  002054  C024  FF43         	movff	i1CANsendMessage@tamp,3907	;volatile
 15355                           
 15356                           ; BSR set to: 15
 15357                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 15358  002058  0E00               	movlw	0
 15359  00205A  010F               	movlb	15	; () banked
 15360  00205C  6F42               	movwf	66,b	;volatile
 15361                           
 15362                           ; BSR set to: 15
 15363                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 15364  00205E  010F               	movlb	15	; () banked
 15365  002060  8742               	bsf	66,3,b	;volatile
 15366                           
 15367                           ; BSR set to: 15
 15368                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 15369  002062  A01A               	btfss	i1CANsendMessage@identifier+2,0,c
 15370  002064  D002               	goto	i1l367
 15371                           
 15372                           ; BSR set to: 15
 15373                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 15374  002066  010F               	movlb	15	; () banked
 15375  002068  8142               	bsf	66,0,b	;volatile
 15376  00206A                     i1l367:
 15377                           
 15378                           ; BSR set to: 15
 15379                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 15380  00206A  A21A               	btfss	i1CANsendMessage@identifier+2,1,c
 15381  00206C  D002               	goto	i1l368
 15382                           
 15383                           ; BSR set to: 15
 15384                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 15385  00206E  010F               	movlb	15	; () banked
 15386  002070  8342               	bsf	66,1,b	;volatile
 15387  002072                     i1l368:
 15388                           
 15389                           ; BSR set to: 15
 15390                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 15391  002072  A41A               	btfss	i1CANsendMessage@identifier+2,2,c
 15392  002074  D002               	goto	i1l369
 15393                           
 15394                           ; BSR set to: 15
 15395                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 15396  002076  010F               	movlb	15	; () banked
 15397  002078  8B42               	bsf	66,5,b	;volatile
 15398  00207A                     i1l369:
 15399                           
 15400                           ; BSR set to: 15
 15401                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 15402  00207A  A61A               	btfss	i1CANsendMessage@identifier+2,3,c
 15403  00207C  D002               	goto	i1l370
 15404                           
 15405                           ; BSR set to: 15
 15406                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 15407  00207E  010F               	movlb	15	; () banked
 15408  002080  8D42               	bsf	66,6,b	;volatile
 15409  002082                     i1l370:
 15410                           
 15411                           ; BSR set to: 15
 15412                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 15413  002082  A81A               	btfss	i1CANsendMessage@identifier+2,4,c
 15414  002084  D002               	goto	i1l8341
 15415                           
 15416                           ; BSR set to: 15
 15417                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 15418  002086  010F               	movlb	15	; () banked
 15419  002088  8F42               	bsf	66,7,b	;volatile
 15420  00208A                     i1l8341:
 15421                           
 15422                           ; BSR set to: 15
 15423                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 15424  00208A  C018  F020         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 15425  00208E  C019  F021         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 15426  002092  C01A  F022         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 15427  002096  C01B  F023         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 15428  00209A  0E16               	movlw	22
 15429  00209C  D005               	goto	i1u1128_20
 15430  00209E                     i1u1128_25:
 15431  00209E  90D8               	bcf	status,0,c
 15432  0020A0  3223               	rrcf	??i1_CANsendMessage+3,f,c
 15433  0020A2  3222               	rrcf	??i1_CANsendMessage+2,f,c
 15434  0020A4  3221               	rrcf	??i1_CANsendMessage+1,f,c
 15435  0020A6  3220               	rrcf	??i1_CANsendMessage,f,c
 15436  0020A8                     i1u1128_20:
 15437  0020A8  2EE8               	decfsz	wreg,f,c
 15438  0020AA  D7F9               	goto	i1u1128_25
 15439  0020AC  C020  F024         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15440  0020B0  C021  F025         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15441  0020B4  C022  F026         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15442  0020B8  C023  F027         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15443                           
 15444                           ; BSR set to: 15
 15445                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 15446  0020BC  5024               	movf	i1CANsendMessage@tamp,w,c
 15447  0020BE  6E24               	movwf	i1CANsendMessage@tamp,c
 15448  0020C0  6A25               	clrf	i1CANsendMessage@tamp+1,c
 15449  0020C2  6A26               	clrf	i1CANsendMessage@tamp+2,c
 15450  0020C4  6A27               	clrf	i1CANsendMessage@tamp+3,c
 15451                           
 15452                           ; BSR set to: 15
 15453                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 15454  0020C6  C024  FF41         	movff	i1CANsendMessage@tamp,3905	;volatile
 15455                           
 15456                           ;inc\CANlib.h: 332: }
 15457  0020CA  D04D               	goto	i1l8361
 15458  0020CC                     i1l366:
 15459                           
 15460                           ; BSR set to: 15
 15461                           ;inc\CANlib.h: 334: else
 15462                           ;inc\CANlib.h: 336: {
 15463                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 15464  0020CC  010F               	movlb	15	; () banked
 15465  0020CE  9742               	bcf	66,3,b	;volatile
 15466                           
 15467                           ; BSR set to: 15
 15468                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 15469  0020D0  C018  F020         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 15470  0020D4  C019  F021         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 15471  0020D8  C01A  F022         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 15472  0020DC  C01B  F023         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 15473  0020E0  0E04               	movlw	4
 15474  0020E2  D005               	goto	i1u1129_20
 15475  0020E4                     i1u1129_25:
 15476  0020E4  90D8               	bcf	status,0,c
 15477  0020E6  3223               	rrcf	??i1_CANsendMessage+3,f,c
 15478  0020E8  3222               	rrcf	??i1_CANsendMessage+2,f,c
 15479  0020EA  3221               	rrcf	??i1_CANsendMessage+1,f,c
 15480  0020EC  3220               	rrcf	??i1_CANsendMessage,f,c
 15481  0020EE                     i1u1129_20:
 15482  0020EE  2EE8               	decfsz	wreg,f,c
 15483  0020F0  D7F9               	goto	i1u1129_25
 15484  0020F2  C020  F024         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15485  0020F6  C021  F025         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15486  0020FA  C022  F026         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15487  0020FE  C023  F027         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15488                           
 15489                           ; BSR set to: 15
 15490                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 15491  002102  5024               	movf	i1CANsendMessage@tamp,w,c
 15492  002104  6E24               	movwf	i1CANsendMessage@tamp,c
 15493  002106  6A25               	clrf	i1CANsendMessage@tamp+1,c
 15494  002108  6A26               	clrf	i1CANsendMessage@tamp+2,c
 15495  00210A  6A27               	clrf	i1CANsendMessage@tamp+3,c
 15496                           
 15497                           ; BSR set to: 15
 15498                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 15499  00210C  C024  FF41         	movff	i1CANsendMessage@tamp,3905	;volatile
 15500                           
 15501                           ; BSR set to: 15
 15502                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 15503  002110  0E07               	movlw	7
 15504  002112  1418               	andwf	i1CANsendMessage@identifier,w,c
 15505  002114  6E24               	movwf	i1CANsendMessage@tamp,c
 15506  002116  0E00               	movlw	0
 15507  002118  1419               	andwf	i1CANsendMessage@identifier+1,w,c
 15508  00211A  6E25               	movwf	i1CANsendMessage@tamp+1,c
 15509  00211C  0E00               	movlw	0
 15510  00211E  141A               	andwf	i1CANsendMessage@identifier+2,w,c
 15511  002120  6E26               	movwf	i1CANsendMessage@tamp+2,c
 15512  002122  0E00               	movlw	0
 15513  002124  141B               	andwf	i1CANsendMessage@identifier+3,w,c
 15514  002126  6E27               	movwf	i1CANsendMessage@tamp+3,c
 15515                           
 15516                           ; BSR set to: 15
 15517                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 15518  002128  C024  F020         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 15519  00212C  C025  F021         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 15520  002130  C026  F022         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 15521  002134  C027  F023         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 15522  002138  0E05               	movlw	5
 15523  00213A                     i1u1130_25:
 15524  00213A  90D8               	bcf	status,0,c
 15525  00213C  3620               	rlcf	??i1_CANsendMessage,f,c
 15526  00213E  3621               	rlcf	??i1_CANsendMessage+1,f,c
 15527  002140  3622               	rlcf	??i1_CANsendMessage+2,f,c
 15528  002142  3623               	rlcf	??i1_CANsendMessage+3,f,c
 15529  002144  2EE8               	decfsz	wreg,f,c
 15530  002146  D7F9               	goto	i1u1130_25
 15531  002148  C020  F024         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15532  00214C  C021  F025         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15533  002150  C022  F026         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15534  002154  C023  F027         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15535                           
 15536                           ; BSR set to: 15
 15537                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 15538  002158  010F               	movlb	15	; () banked
 15539  00215A  5142               	movf	66,w,b	;volatile
 15540  00215C  0B1F               	andlw	31
 15541  00215E  010F               	movlb	15	; () banked
 15542  002160  6F42               	movwf	66,b	;volatile
 15543                           
 15544                           ; BSR set to: 15
 15545                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 15546  002162  C024  FF42         	movff	i1CANsendMessage@tamp,3906	;volatile
 15547  002166                     i1l8361:
 15548                           
 15549                           ; BSR set to: 15
 15550                           ;inc\CANlib.h: 347: }
 15551                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 15552  002166  A01F               	btfss	i1CANsendMessage@flags,0,c
 15553  002168  D003               	goto	i1l373
 15554                           
 15555                           ; BSR set to: 15
 15556                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 15557  00216A  010F               	movlb	15	; () banked
 15558  00216C  8140               	bsf	64,0,b	;volatile
 15559  00216E  D002               	goto	i1l374
 15560  002170                     i1l373:
 15561                           
 15562                           ; BSR set to: 15
 15563                           ;inc\CANlib.h: 351: else
 15564                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 15565  002170  010F               	movlb	15	; () banked
 15566  002172  9140               	bcf	64,0,b	;volatile
 15567  002174                     i1l374:
 15568                           
 15569                           ; BSR set to: 15
 15570                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 15571  002174  A21F               	btfss	i1CANsendMessage@flags,1,c
 15572  002176  D003               	goto	i1l375
 15573                           
 15574                           ; BSR set to: 15
 15575                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 15576  002178  010F               	movlb	15	; () banked
 15577  00217A  8340               	bsf	64,1,b	;volatile
 15578  00217C  D002               	goto	i1l8367
 15579  00217E                     i1l375:
 15580                           
 15581                           ; BSR set to: 15
 15582                           ;inc\CANlib.h: 355: else
 15583                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 15584  00217E  010F               	movlb	15	; () banked
 15585  002180  9340               	bcf	64,1,b	;volatile
 15586  002182                     i1l8367:
 15587                           
 15588                           ; BSR set to: 15
 15589                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 15590  002182  C01C  FFD9         	movff	i1CANsendMessage@data,fsr2l
 15591  002186  C01D  FFDA         	movff	i1CANsendMessage@data+1,fsr2h
 15592  00218A  50DF               	movf	indf2,w,c
 15593  00218C  010F               	movlb	15	; () banked
 15594  00218E  6F46               	movwf	70,b	;volatile
 15595                           
 15596                           ; BSR set to: 15
 15597                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 15598  002190  EE20 F001          	lfsr	2,1
 15599  002194  501C               	movf	i1CANsendMessage@data,w,c
 15600  002196  26D9               	addwf	fsr2l,f,c
 15601  002198  501D               	movf	i1CANsendMessage@data+1,w,c
 15602  00219A  22DA               	addwfc	fsr2h,f,c
 15603  00219C  50DF               	movf	indf2,w,c
 15604  00219E  010F               	movlb	15	; () banked
 15605  0021A0  6F47               	movwf	71,b	;volatile
 15606                           
 15607                           ; BSR set to: 15
 15608                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 15609  0021A2  EE20 F002          	lfsr	2,2
 15610  0021A6  501C               	movf	i1CANsendMessage@data,w,c
 15611  0021A8  26D9               	addwf	fsr2l,f,c
 15612  0021AA  501D               	movf	i1CANsendMessage@data+1,w,c
 15613  0021AC  22DA               	addwfc	fsr2h,f,c
 15614  0021AE  50DF               	movf	indf2,w,c
 15615  0021B0  010F               	movlb	15	; () banked
 15616  0021B2  6F48               	movwf	72,b	;volatile
 15617                           
 15618                           ; BSR set to: 15
 15619                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 15620  0021B4  EE20 F003          	lfsr	2,3
 15621  0021B8  501C               	movf	i1CANsendMessage@data,w,c
 15622  0021BA  26D9               	addwf	fsr2l,f,c
 15623  0021BC  501D               	movf	i1CANsendMessage@data+1,w,c
 15624  0021BE  22DA               	addwfc	fsr2h,f,c
 15625  0021C0  50DF               	movf	indf2,w,c
 15626  0021C2  010F               	movlb	15	; () banked
 15627  0021C4  6F49               	movwf	73,b	;volatile
 15628                           
 15629                           ; BSR set to: 15
 15630                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 15631  0021C6  EE20 F004          	lfsr	2,4
 15632  0021CA  501C               	movf	i1CANsendMessage@data,w,c
 15633  0021CC  26D9               	addwf	fsr2l,f,c
 15634  0021CE  501D               	movf	i1CANsendMessage@data+1,w,c
 15635  0021D0  22DA               	addwfc	fsr2h,f,c
 15636  0021D2  50DF               	movf	indf2,w,c
 15637  0021D4  010F               	movlb	15	; () banked
 15638  0021D6  6F4A               	movwf	74,b	;volatile
 15639                           
 15640                           ; BSR set to: 15
 15641                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 15642  0021D8  EE20 F005          	lfsr	2,5
 15643  0021DC  501C               	movf	i1CANsendMessage@data,w,c
 15644  0021DE  26D9               	addwf	fsr2l,f,c
 15645  0021E0  501D               	movf	i1CANsendMessage@data+1,w,c
 15646  0021E2  22DA               	addwfc	fsr2h,f,c
 15647  0021E4  50DF               	movf	indf2,w,c
 15648  0021E6  010F               	movlb	15	; () banked
 15649  0021E8  6F4B               	movwf	75,b	;volatile
 15650                           
 15651                           ; BSR set to: 15
 15652                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 15653  0021EA  EE20 F006          	lfsr	2,6
 15654  0021EE  501C               	movf	i1CANsendMessage@data,w,c
 15655  0021F0  26D9               	addwf	fsr2l,f,c
 15656  0021F2  501D               	movf	i1CANsendMessage@data+1,w,c
 15657  0021F4  22DA               	addwfc	fsr2h,f,c
 15658  0021F6  50DF               	movf	indf2,w,c
 15659  0021F8  010F               	movlb	15	; () banked
 15660  0021FA  6F4C               	movwf	76,b	;volatile
 15661                           
 15662                           ; BSR set to: 15
 15663                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 15664  0021FC  EE20 F007          	lfsr	2,7
 15665  002200  501C               	movf	i1CANsendMessage@data,w,c
 15666  002202  26D9               	addwf	fsr2l,f,c
 15667  002204  501D               	movf	i1CANsendMessage@data+1,w,c
 15668  002206  22DA               	addwfc	fsr2h,f,c
 15669  002208  50DF               	movf	indf2,w,c
 15670  00220A  010F               	movlb	15	; () banked
 15671  00220C  6F4D               	movwf	77,b	;volatile
 15672                           
 15673                           ; BSR set to: 15
 15674                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 15675  00220E  010F               	movlb	15	; () banked
 15676  002210  8740               	bsf	64,3,b	;volatile
 15677                           
 15678                           ; BSR set to: 15
 15679                           ;inc\CANlib.h: 368: return;
 15680  002212  0012               	return	
 15681  002214                     i1l363:
 15682                           
 15683                           ; BSR set to: 15
 15684                           ;inc\CANlib.h: 369: }
 15685                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 15686  002214  010F               	movlb	15	; () banked
 15687  002216  B730               	btfsc	48,3,b	;volatile
 15688  002218  D115               	goto	i1l378
 15689                           
 15690                           ; BSR set to: 15
 15691                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 15692  00221A  C01E  FF35         	movff	i1CANsendMessage@dataLength,3893	;volatile
 15693                           
 15694                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 15695  00221E  AC1F               	btfss	i1CANsendMessage@flags,6,c
 15696  002220  D003               	goto	i1l379
 15697                           
 15698                           ; BSR set to: 15
 15699                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 15700  002222  010F               	movlb	15	; () banked
 15701  002224  8D35               	bsf	53,6,b	;volatile
 15702  002226  D002               	goto	i1l380
 15703  002228                     i1l379:
 15704                           
 15705                           ; BSR set to: 15
 15706                           ;inc\CANlib.h: 378: else
 15707                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 15708  002228  010F               	movlb	15	; () banked
 15709  00222A  9D35               	bcf	53,6,b	;volatile
 15710  00222C                     i1l380:
 15711                           
 15712                           ; BSR set to: 15
 15713                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 15714  00222C  A61F               	btfss	i1CANsendMessage@flags,3,c
 15715  00222E  D066               	goto	i1l381
 15716                           
 15717                           ; BSR set to: 15
 15718                           ;inc\CANlib.h: 382: {
 15719                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 15720  002230  5018               	movf	i1CANsendMessage@identifier,w,c
 15721  002232  6E24               	movwf	i1CANsendMessage@tamp,c
 15722  002234  6A25               	clrf	i1CANsendMessage@tamp+1,c
 15723  002236  6A26               	clrf	i1CANsendMessage@tamp+2,c
 15724  002238  6A27               	clrf	i1CANsendMessage@tamp+3,c
 15725                           
 15726                           ; BSR set to: 15
 15727                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 15728  00223A  C024  FF34         	movff	i1CANsendMessage@tamp,3892	;volatile
 15729                           
 15730                           ; BSR set to: 15
 15731                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 15732  00223E  0E00               	movlw	0
 15733  002240  1418               	andwf	i1CANsendMessage@identifier,w,c
 15734  002242  6E24               	movwf	i1CANsendMessage@tamp,c
 15735  002244  0EFF               	movlw	255
 15736  002246  1419               	andwf	i1CANsendMessage@identifier+1,w,c
 15737  002248  6E25               	movwf	i1CANsendMessage@tamp+1,c
 15738  00224A  0E00               	movlw	0
 15739  00224C  141A               	andwf	i1CANsendMessage@identifier+2,w,c
 15740  00224E  6E26               	movwf	i1CANsendMessage@tamp+2,c
 15741  002250  0E00               	movlw	0
 15742  002252  141B               	andwf	i1CANsendMessage@identifier+3,w,c
 15743  002254  6E27               	movwf	i1CANsendMessage@tamp+3,c
 15744                           
 15745                           ; BSR set to: 15
 15746                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 15747  002256  C024  F020         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 15748  00225A  C025  F021         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 15749  00225E  C026  F022         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 15750  002262  C027  F023         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 15751  002266  C021  F020         	movff	??i1_CANsendMessage+1,??i1_CANsendMessage
 15752  00226A  C022  F021         	movff	??i1_CANsendMessage+2,??i1_CANsendMessage+1
 15753  00226E  C023  F022         	movff	??i1_CANsendMessage+3,??i1_CANsendMessage+2
 15754  002272  6A23               	clrf	??i1_CANsendMessage+3,c
 15755  002274  C020  F024         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15756  002278  C021  F025         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15757  00227C  C022  F026         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15758  002280  C023  F027         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15759                           
 15760                           ; BSR set to: 15
 15761                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 15762  002284  C024  FF33         	movff	i1CANsendMessage@tamp,3891	;volatile
 15763                           
 15764                           ; BSR set to: 15
 15765                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 15766  002288  0E00               	movlw	0
 15767  00228A  010F               	movlb	15	; () banked
 15768  00228C  6F32               	movwf	50,b	;volatile
 15769                           
 15770                           ; BSR set to: 15
 15771                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 15772  00228E  010F               	movlb	15	; () banked
 15773  002290  8732               	bsf	50,3,b	;volatile
 15774                           
 15775                           ; BSR set to: 15
 15776                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 15777  002292  A01A               	btfss	i1CANsendMessage@identifier+2,0,c
 15778  002294  D002               	goto	i1l382
 15779                           
 15780                           ; BSR set to: 15
 15781                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 15782  002296  010F               	movlb	15	; () banked
 15783  002298  8132               	bsf	50,0,b	;volatile
 15784  00229A                     i1l382:
 15785                           
 15786                           ; BSR set to: 15
 15787                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 15788  00229A  A21A               	btfss	i1CANsendMessage@identifier+2,1,c
 15789  00229C  D002               	goto	i1l383
 15790                           
 15791                           ; BSR set to: 15
 15792                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 15793  00229E  010F               	movlb	15	; () banked
 15794  0022A0  8332               	bsf	50,1,b	;volatile
 15795  0022A2                     i1l383:
 15796                           
 15797                           ; BSR set to: 15
 15798                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 15799  0022A2  A41A               	btfss	i1CANsendMessage@identifier+2,2,c
 15800  0022A4  D002               	goto	i1l384
 15801                           
 15802                           ; BSR set to: 15
 15803                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 15804  0022A6  010F               	movlb	15	; () banked
 15805  0022A8  8B32               	bsf	50,5,b	;volatile
 15806  0022AA                     i1l384:
 15807                           
 15808                           ; BSR set to: 15
 15809                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 15810  0022AA  A61A               	btfss	i1CANsendMessage@identifier+2,3,c
 15811  0022AC  D002               	goto	i1l385
 15812                           
 15813                           ; BSR set to: 15
 15814                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 15815  0022AE  010F               	movlb	15	; () banked
 15816  0022B0  8D32               	bsf	50,6,b	;volatile
 15817  0022B2                     i1l385:
 15818                           
 15819                           ; BSR set to: 15
 15820                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 15821  0022B2  A81A               	btfss	i1CANsendMessage@identifier+2,4,c
 15822  0022B4  D002               	goto	i1l8417
 15823                           
 15824                           ; BSR set to: 15
 15825                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 15826  0022B6  010F               	movlb	15	; () banked
 15827  0022B8  8F32               	bsf	50,7,b	;volatile
 15828  0022BA                     i1l8417:
 15829                           
 15830                           ; BSR set to: 15
 15831                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 15832  0022BA  C018  F020         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 15833  0022BE  C019  F021         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 15834  0022C2  C01A  F022         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 15835  0022C6  C01B  F023         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 15836  0022CA  0E16               	movlw	22
 15837  0022CC  D005               	goto	i1u1141_20
 15838  0022CE                     i1u1141_25:
 15839  0022CE  90D8               	bcf	status,0,c
 15840  0022D0  3223               	rrcf	??i1_CANsendMessage+3,f,c
 15841  0022D2  3222               	rrcf	??i1_CANsendMessage+2,f,c
 15842  0022D4  3221               	rrcf	??i1_CANsendMessage+1,f,c
 15843  0022D6  3220               	rrcf	??i1_CANsendMessage,f,c
 15844  0022D8                     i1u1141_20:
 15845  0022D8  2EE8               	decfsz	wreg,f,c
 15846  0022DA  D7F9               	goto	i1u1141_25
 15847  0022DC  C020  F024         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15848  0022E0  C021  F025         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15849  0022E4  C022  F026         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15850  0022E8  C023  F027         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15851                           
 15852                           ; BSR set to: 15
 15853                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 15854  0022EC  5024               	movf	i1CANsendMessage@tamp,w,c
 15855  0022EE  6E24               	movwf	i1CANsendMessage@tamp,c
 15856  0022F0  6A25               	clrf	i1CANsendMessage@tamp+1,c
 15857  0022F2  6A26               	clrf	i1CANsendMessage@tamp+2,c
 15858  0022F4  6A27               	clrf	i1CANsendMessage@tamp+3,c
 15859                           
 15860                           ; BSR set to: 15
 15861                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 15862  0022F6  C024  FF31         	movff	i1CANsendMessage@tamp,3889	;volatile
 15863                           
 15864                           ;inc\CANlib.h: 407: }
 15865  0022FA  D04D               	goto	i1l8437
 15866  0022FC                     i1l381:
 15867                           
 15868                           ; BSR set to: 15
 15869                           ;inc\CANlib.h: 409: else
 15870                           ;inc\CANlib.h: 411: {
 15871                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 15872  0022FC  010F               	movlb	15	; () banked
 15873  0022FE  9732               	bcf	50,3,b	;volatile
 15874                           
 15875                           ; BSR set to: 15
 15876                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 15877  002300  C018  F020         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 15878  002304  C019  F021         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 15879  002308  C01A  F022         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 15880  00230C  C01B  F023         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 15881  002310  0E04               	movlw	4
 15882  002312  D005               	goto	i1u1142_20
 15883  002314                     i1u1142_25:
 15884  002314  90D8               	bcf	status,0,c
 15885  002316  3223               	rrcf	??i1_CANsendMessage+3,f,c
 15886  002318  3222               	rrcf	??i1_CANsendMessage+2,f,c
 15887  00231A  3221               	rrcf	??i1_CANsendMessage+1,f,c
 15888  00231C  3220               	rrcf	??i1_CANsendMessage,f,c
 15889  00231E                     i1u1142_20:
 15890  00231E  2EE8               	decfsz	wreg,f,c
 15891  002320  D7F9               	goto	i1u1142_25
 15892  002322  C020  F024         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15893  002326  C021  F025         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15894  00232A  C022  F026         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15895  00232E  C023  F027         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15896                           
 15897                           ; BSR set to: 15
 15898                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 15899  002332  5024               	movf	i1CANsendMessage@tamp,w,c
 15900  002334  6E24               	movwf	i1CANsendMessage@tamp,c
 15901  002336  6A25               	clrf	i1CANsendMessage@tamp+1,c
 15902  002338  6A26               	clrf	i1CANsendMessage@tamp+2,c
 15903  00233A  6A27               	clrf	i1CANsendMessage@tamp+3,c
 15904                           
 15905                           ; BSR set to: 15
 15906                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 15907  00233C  C024  FF31         	movff	i1CANsendMessage@tamp,3889	;volatile
 15908                           
 15909                           ; BSR set to: 15
 15910                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 15911  002340  0E07               	movlw	7
 15912  002342  1418               	andwf	i1CANsendMessage@identifier,w,c
 15913  002344  6E24               	movwf	i1CANsendMessage@tamp,c
 15914  002346  0E00               	movlw	0
 15915  002348  1419               	andwf	i1CANsendMessage@identifier+1,w,c
 15916  00234A  6E25               	movwf	i1CANsendMessage@tamp+1,c
 15917  00234C  0E00               	movlw	0
 15918  00234E  141A               	andwf	i1CANsendMessage@identifier+2,w,c
 15919  002350  6E26               	movwf	i1CANsendMessage@tamp+2,c
 15920  002352  0E00               	movlw	0
 15921  002354  141B               	andwf	i1CANsendMessage@identifier+3,w,c
 15922  002356  6E27               	movwf	i1CANsendMessage@tamp+3,c
 15923                           
 15924                           ; BSR set to: 15
 15925                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 15926  002358  C024  F020         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 15927  00235C  C025  F021         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 15928  002360  C026  F022         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 15929  002364  C027  F023         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 15930  002368  0E05               	movlw	5
 15931  00236A                     i1u1143_25:
 15932  00236A  90D8               	bcf	status,0,c
 15933  00236C  3620               	rlcf	??i1_CANsendMessage,f,c
 15934  00236E  3621               	rlcf	??i1_CANsendMessage+1,f,c
 15935  002370  3622               	rlcf	??i1_CANsendMessage+2,f,c
 15936  002372  3623               	rlcf	??i1_CANsendMessage+3,f,c
 15937  002374  2EE8               	decfsz	wreg,f,c
 15938  002376  D7F9               	goto	i1u1143_25
 15939  002378  C020  F024         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15940  00237C  C021  F025         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15941  002380  C022  F026         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15942  002384  C023  F027         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15943                           
 15944                           ; BSR set to: 15
 15945                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 15946  002388  010F               	movlb	15	; () banked
 15947  00238A  5132               	movf	50,w,b	;volatile
 15948  00238C  0B1F               	andlw	31
 15949  00238E  010F               	movlb	15	; () banked
 15950  002390  6F32               	movwf	50,b	;volatile
 15951                           
 15952                           ; BSR set to: 15
 15953                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 15954  002392  C024  FF32         	movff	i1CANsendMessage@tamp,3890	;volatile
 15955  002396                     i1l8437:
 15956                           
 15957                           ; BSR set to: 15
 15958                           ;inc\CANlib.h: 422: }
 15959                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 15960  002396  A01F               	btfss	i1CANsendMessage@flags,0,c
 15961  002398  D003               	goto	i1l388
 15962                           
 15963                           ; BSR set to: 15
 15964                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 15965  00239A  010F               	movlb	15	; () banked
 15966  00239C  8130               	bsf	48,0,b	;volatile
 15967  00239E  D002               	goto	i1l389
 15968  0023A0                     i1l388:
 15969                           
 15970                           ; BSR set to: 15
 15971                           ;inc\CANlib.h: 426: else
 15972                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 15973  0023A0  010F               	movlb	15	; () banked
 15974  0023A2  9130               	bcf	48,0,b	;volatile
 15975  0023A4                     i1l389:
 15976                           
 15977                           ; BSR set to: 15
 15978                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 15979  0023A4  A21F               	btfss	i1CANsendMessage@flags,1,c
 15980  0023A6  D003               	goto	i1l390
 15981                           
 15982                           ; BSR set to: 15
 15983                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 15984  0023A8  010F               	movlb	15	; () banked
 15985  0023AA  8330               	bsf	48,1,b	;volatile
 15986  0023AC  D002               	goto	i1l8443
 15987  0023AE                     i1l390:
 15988                           
 15989                           ; BSR set to: 15
 15990                           ;inc\CANlib.h: 430: else
 15991                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 15992  0023AE  010F               	movlb	15	; () banked
 15993  0023B0  9330               	bcf	48,1,b	;volatile
 15994  0023B2                     i1l8443:
 15995                           
 15996                           ; BSR set to: 15
 15997                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 15998  0023B2  C01C  FFD9         	movff	i1CANsendMessage@data,fsr2l
 15999  0023B6  C01D  FFDA         	movff	i1CANsendMessage@data+1,fsr2h
 16000  0023BA  50DF               	movf	indf2,w,c
 16001  0023BC  010F               	movlb	15	; () banked
 16002  0023BE  6F36               	movwf	54,b	;volatile
 16003                           
 16004                           ; BSR set to: 15
 16005                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 16006  0023C0  EE20 F001          	lfsr	2,1
 16007  0023C4  501C               	movf	i1CANsendMessage@data,w,c
 16008  0023C6  26D9               	addwf	fsr2l,f,c
 16009  0023C8  501D               	movf	i1CANsendMessage@data+1,w,c
 16010  0023CA  22DA               	addwfc	fsr2h,f,c
 16011  0023CC  50DF               	movf	indf2,w,c
 16012  0023CE  010F               	movlb	15	; () banked
 16013  0023D0  6F37               	movwf	55,b	;volatile
 16014                           
 16015                           ; BSR set to: 15
 16016                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 16017  0023D2  EE20 F002          	lfsr	2,2
 16018  0023D6  501C               	movf	i1CANsendMessage@data,w,c
 16019  0023D8  26D9               	addwf	fsr2l,f,c
 16020  0023DA  501D               	movf	i1CANsendMessage@data+1,w,c
 16021  0023DC  22DA               	addwfc	fsr2h,f,c
 16022  0023DE  50DF               	movf	indf2,w,c
 16023  0023E0  010F               	movlb	15	; () banked
 16024  0023E2  6F38               	movwf	56,b	;volatile
 16025                           
 16026                           ; BSR set to: 15
 16027                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 16028  0023E4  EE20 F003          	lfsr	2,3
 16029  0023E8  501C               	movf	i1CANsendMessage@data,w,c
 16030  0023EA  26D9               	addwf	fsr2l,f,c
 16031  0023EC  501D               	movf	i1CANsendMessage@data+1,w,c
 16032  0023EE  22DA               	addwfc	fsr2h,f,c
 16033  0023F0  50DF               	movf	indf2,w,c
 16034  0023F2  010F               	movlb	15	; () banked
 16035  0023F4  6F39               	movwf	57,b	;volatile
 16036                           
 16037                           ; BSR set to: 15
 16038                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 16039  0023F6  EE20 F004          	lfsr	2,4
 16040  0023FA  501C               	movf	i1CANsendMessage@data,w,c
 16041  0023FC  26D9               	addwf	fsr2l,f,c
 16042  0023FE  501D               	movf	i1CANsendMessage@data+1,w,c
 16043  002400  22DA               	addwfc	fsr2h,f,c
 16044  002402  50DF               	movf	indf2,w,c
 16045  002404  010F               	movlb	15	; () banked
 16046  002406  6F3A               	movwf	58,b	;volatile
 16047                           
 16048                           ; BSR set to: 15
 16049                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 16050  002408  EE20 F005          	lfsr	2,5
 16051  00240C  501C               	movf	i1CANsendMessage@data,w,c
 16052  00240E  26D9               	addwf	fsr2l,f,c
 16053  002410  501D               	movf	i1CANsendMessage@data+1,w,c
 16054  002412  22DA               	addwfc	fsr2h,f,c
 16055  002414  50DF               	movf	indf2,w,c
 16056  002416  010F               	movlb	15	; () banked
 16057  002418  6F3B               	movwf	59,b	;volatile
 16058                           
 16059                           ; BSR set to: 15
 16060                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 16061  00241A  EE20 F006          	lfsr	2,6
 16062  00241E  501C               	movf	i1CANsendMessage@data,w,c
 16063  002420  26D9               	addwf	fsr2l,f,c
 16064  002422  501D               	movf	i1CANsendMessage@data+1,w,c
 16065  002424  22DA               	addwfc	fsr2h,f,c
 16066  002426  50DF               	movf	indf2,w,c
 16067  002428  010F               	movlb	15	; () banked
 16068  00242A  6F3C               	movwf	60,b	;volatile
 16069                           
 16070                           ; BSR set to: 15
 16071                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 16072  00242C  EE20 F007          	lfsr	2,7
 16073  002430  501C               	movf	i1CANsendMessage@data,w,c
 16074  002432  26D9               	addwf	fsr2l,f,c
 16075  002434  501D               	movf	i1CANsendMessage@data+1,w,c
 16076  002436  22DA               	addwfc	fsr2h,f,c
 16077  002438  50DF               	movf	indf2,w,c
 16078  00243A  010F               	movlb	15	; () banked
 16079  00243C  6F3D               	movwf	61,b	;volatile
 16080                           
 16081                           ; BSR set to: 15
 16082                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 16083  00243E  010F               	movlb	15	; () banked
 16084  002440  8730               	bsf	48,3,b	;volatile
 16085                           
 16086                           ; BSR set to: 15
 16087                           ;inc\CANlib.h: 444: return;
 16088  002442  0012               	return	
 16089  002444                     i1l378:
 16090                           
 16091                           ; BSR set to: 15
 16092                           ;inc\CANlib.h: 445: }
 16093                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 16094  002444  010F               	movlb	15	; () banked
 16095  002446  B720               	btfsc	32,3,b	;volatile
 16096  002448  0012               	return	
 16097                           
 16098                           ; BSR set to: 15
 16099                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 16100  00244A  C01E  FF25         	movff	i1CANsendMessage@dataLength,3877	;volatile
 16101                           
 16102                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 16103  00244E  AC1F               	btfss	i1CANsendMessage@flags,6,c
 16104  002450  D003               	goto	i1l393
 16105                           
 16106                           ; BSR set to: 15
 16107                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 16108  002452  010F               	movlb	15	; () banked
 16109  002454  8D25               	bsf	37,6,b	;volatile
 16110  002456  D002               	goto	i1l394
 16111  002458                     i1l393:
 16112                           
 16113                           ; BSR set to: 15
 16114                           ;inc\CANlib.h: 454: else
 16115                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 16116  002458  010F               	movlb	15	; () banked
 16117  00245A  9D25               	bcf	37,6,b	;volatile
 16118  00245C                     i1l394:
 16119                           
 16120                           ; BSR set to: 15
 16121                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 16122  00245C  A61F               	btfss	i1CANsendMessage@flags,3,c
 16123  00245E  D066               	goto	i1l395
 16124                           
 16125                           ; BSR set to: 15
 16126                           ;inc\CANlib.h: 458: {
 16127                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 16128  002460  5018               	movf	i1CANsendMessage@identifier,w,c
 16129  002462  6E24               	movwf	i1CANsendMessage@tamp,c
 16130  002464  6A25               	clrf	i1CANsendMessage@tamp+1,c
 16131  002466  6A26               	clrf	i1CANsendMessage@tamp+2,c
 16132  002468  6A27               	clrf	i1CANsendMessage@tamp+3,c
 16133                           
 16134                           ; BSR set to: 15
 16135                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 16136  00246A  C024  FF24         	movff	i1CANsendMessage@tamp,3876	;volatile
 16137                           
 16138                           ; BSR set to: 15
 16139                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 16140  00246E  0E00               	movlw	0
 16141  002470  1418               	andwf	i1CANsendMessage@identifier,w,c
 16142  002472  6E24               	movwf	i1CANsendMessage@tamp,c
 16143  002474  0EFF               	movlw	255
 16144  002476  1419               	andwf	i1CANsendMessage@identifier+1,w,c
 16145  002478  6E25               	movwf	i1CANsendMessage@tamp+1,c
 16146  00247A  0E00               	movlw	0
 16147  00247C  141A               	andwf	i1CANsendMessage@identifier+2,w,c
 16148  00247E  6E26               	movwf	i1CANsendMessage@tamp+2,c
 16149  002480  0E00               	movlw	0
 16150  002482  141B               	andwf	i1CANsendMessage@identifier+3,w,c
 16151  002484  6E27               	movwf	i1CANsendMessage@tamp+3,c
 16152                           
 16153                           ; BSR set to: 15
 16154                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 16155  002486  C024  F020         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 16156  00248A  C025  F021         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 16157  00248E  C026  F022         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 16158  002492  C027  F023         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 16159  002496  C021  F020         	movff	??i1_CANsendMessage+1,??i1_CANsendMessage
 16160  00249A  C022  F021         	movff	??i1_CANsendMessage+2,??i1_CANsendMessage+1
 16161  00249E  C023  F022         	movff	??i1_CANsendMessage+3,??i1_CANsendMessage+2
 16162  0024A2  6A23               	clrf	??i1_CANsendMessage+3,c
 16163  0024A4  C020  F024         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 16164  0024A8  C021  F025         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 16165  0024AC  C022  F026         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 16166  0024B0  C023  F027         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 16167                           
 16168                           ; BSR set to: 15
 16169                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 16170  0024B4  C024  FF23         	movff	i1CANsendMessage@tamp,3875	;volatile
 16171                           
 16172                           ; BSR set to: 15
 16173                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 16174  0024B8  0E00               	movlw	0
 16175  0024BA  010F               	movlb	15	; () banked
 16176  0024BC  6F22               	movwf	34,b	;volatile
 16177                           
 16178                           ; BSR set to: 15
 16179                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 16180  0024BE  010F               	movlb	15	; () banked
 16181  0024C0  8722               	bsf	34,3,b	;volatile
 16182                           
 16183                           ; BSR set to: 15
 16184                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 16185  0024C2  A01A               	btfss	i1CANsendMessage@identifier+2,0,c
 16186  0024C4  D002               	goto	i1l396
 16187                           
 16188                           ; BSR set to: 15
 16189                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 16190  0024C6  010F               	movlb	15	; () banked
 16191  0024C8  8122               	bsf	34,0,b	;volatile
 16192  0024CA                     i1l396:
 16193                           
 16194                           ; BSR set to: 15
 16195                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 16196  0024CA  A21A               	btfss	i1CANsendMessage@identifier+2,1,c
 16197  0024CC  D002               	goto	i1l397
 16198                           
 16199                           ; BSR set to: 15
 16200                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 16201  0024CE  010F               	movlb	15	; () banked
 16202  0024D0  8322               	bsf	34,1,b	;volatile
 16203  0024D2                     i1l397:
 16204                           
 16205                           ; BSR set to: 15
 16206                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 16207  0024D2  A41A               	btfss	i1CANsendMessage@identifier+2,2,c
 16208  0024D4  D002               	goto	i1l398
 16209                           
 16210                           ; BSR set to: 15
 16211                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 16212  0024D6  010F               	movlb	15	; () banked
 16213  0024D8  8B22               	bsf	34,5,b	;volatile
 16214  0024DA                     i1l398:
 16215                           
 16216                           ; BSR set to: 15
 16217                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 16218  0024DA  A61A               	btfss	i1CANsendMessage@identifier+2,3,c
 16219  0024DC  D002               	goto	i1l399
 16220                           
 16221                           ; BSR set to: 15
 16222                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 16223  0024DE  010F               	movlb	15	; () banked
 16224  0024E0  8D22               	bsf	34,6,b	;volatile
 16225  0024E2                     i1l399:
 16226                           
 16227                           ; BSR set to: 15
 16228                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 16229  0024E2  A81A               	btfss	i1CANsendMessage@identifier+2,4,c
 16230  0024E4  D002               	goto	i1l8493
 16231                           
 16232                           ; BSR set to: 15
 16233                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 16234  0024E6  010F               	movlb	15	; () banked
 16235  0024E8  8F22               	bsf	34,7,b	;volatile
 16236  0024EA                     i1l8493:
 16237                           
 16238                           ; BSR set to: 15
 16239                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 16240  0024EA  C018  F020         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 16241  0024EE  C019  F021         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 16242  0024F2  C01A  F022         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 16243  0024F6  C01B  F023         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 16244  0024FA  0E16               	movlw	22
 16245  0024FC  D005               	goto	i1u1154_20
 16246  0024FE                     i1u1154_25:
 16247  0024FE  90D8               	bcf	status,0,c
 16248  002500  3223               	rrcf	??i1_CANsendMessage+3,f,c
 16249  002502  3222               	rrcf	??i1_CANsendMessage+2,f,c
 16250  002504  3221               	rrcf	??i1_CANsendMessage+1,f,c
 16251  002506  3220               	rrcf	??i1_CANsendMessage,f,c
 16252  002508                     i1u1154_20:
 16253  002508  2EE8               	decfsz	wreg,f,c
 16254  00250A  D7F9               	goto	i1u1154_25
 16255  00250C  C020  F024         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 16256  002510  C021  F025         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 16257  002514  C022  F026         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 16258  002518  C023  F027         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 16259                           
 16260                           ; BSR set to: 15
 16261                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 16262  00251C  5024               	movf	i1CANsendMessage@tamp,w,c
 16263  00251E  6E24               	movwf	i1CANsendMessage@tamp,c
 16264  002520  6A25               	clrf	i1CANsendMessage@tamp+1,c
 16265  002522  6A26               	clrf	i1CANsendMessage@tamp+2,c
 16266  002524  6A27               	clrf	i1CANsendMessage@tamp+3,c
 16267                           
 16268                           ; BSR set to: 15
 16269                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 16270  002526  C024  FF21         	movff	i1CANsendMessage@tamp,3873	;volatile
 16271                           
 16272                           ;inc\CANlib.h: 483: }
 16273  00252A  D04D               	goto	i1l8513
 16274  00252C                     i1l395:
 16275                           
 16276                           ; BSR set to: 15
 16277                           ;inc\CANlib.h: 485: else
 16278                           ;inc\CANlib.h: 487: {
 16279                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 16280  00252C  010F               	movlb	15	; () banked
 16281  00252E  9722               	bcf	34,3,b	;volatile
 16282                           
 16283                           ; BSR set to: 15
 16284                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 16285  002530  C018  F020         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 16286  002534  C019  F021         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 16287  002538  C01A  F022         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 16288  00253C  C01B  F023         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 16289  002540  0E04               	movlw	4
 16290  002542  D005               	goto	i1u1155_20
 16291  002544                     i1u1155_25:
 16292  002544  90D8               	bcf	status,0,c
 16293  002546  3223               	rrcf	??i1_CANsendMessage+3,f,c
 16294  002548  3222               	rrcf	??i1_CANsendMessage+2,f,c
 16295  00254A  3221               	rrcf	??i1_CANsendMessage+1,f,c
 16296  00254C  3220               	rrcf	??i1_CANsendMessage,f,c
 16297  00254E                     i1u1155_20:
 16298  00254E  2EE8               	decfsz	wreg,f,c
 16299  002550  D7F9               	goto	i1u1155_25
 16300  002552  C020  F024         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 16301  002556  C021  F025         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 16302  00255A  C022  F026         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 16303  00255E  C023  F027         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 16304                           
 16305                           ; BSR set to: 15
 16306                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 16307  002562  5024               	movf	i1CANsendMessage@tamp,w,c
 16308  002564  6E24               	movwf	i1CANsendMessage@tamp,c
 16309  002566  6A25               	clrf	i1CANsendMessage@tamp+1,c
 16310  002568  6A26               	clrf	i1CANsendMessage@tamp+2,c
 16311  00256A  6A27               	clrf	i1CANsendMessage@tamp+3,c
 16312                           
 16313                           ; BSR set to: 15
 16314                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 16315  00256C  C024  FF21         	movff	i1CANsendMessage@tamp,3873	;volatile
 16316                           
 16317                           ; BSR set to: 15
 16318                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 16319  002570  0E07               	movlw	7
 16320  002572  1418               	andwf	i1CANsendMessage@identifier,w,c
 16321  002574  6E24               	movwf	i1CANsendMessage@tamp,c
 16322  002576  0E00               	movlw	0
 16323  002578  1419               	andwf	i1CANsendMessage@identifier+1,w,c
 16324  00257A  6E25               	movwf	i1CANsendMessage@tamp+1,c
 16325  00257C  0E00               	movlw	0
 16326  00257E  141A               	andwf	i1CANsendMessage@identifier+2,w,c
 16327  002580  6E26               	movwf	i1CANsendMessage@tamp+2,c
 16328  002582  0E00               	movlw	0
 16329  002584  141B               	andwf	i1CANsendMessage@identifier+3,w,c
 16330  002586  6E27               	movwf	i1CANsendMessage@tamp+3,c
 16331                           
 16332                           ; BSR set to: 15
 16333                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 16334  002588  C024  F020         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 16335  00258C  C025  F021         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 16336  002590  C026  F022         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 16337  002594  C027  F023         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 16338  002598  0E05               	movlw	5
 16339  00259A                     i1u1156_25:
 16340  00259A  90D8               	bcf	status,0,c
 16341  00259C  3620               	rlcf	??i1_CANsendMessage,f,c
 16342  00259E  3621               	rlcf	??i1_CANsendMessage+1,f,c
 16343  0025A0  3622               	rlcf	??i1_CANsendMessage+2,f,c
 16344  0025A2  3623               	rlcf	??i1_CANsendMessage+3,f,c
 16345  0025A4  2EE8               	decfsz	wreg,f,c
 16346  0025A6  D7F9               	goto	i1u1156_25
 16347  0025A8  C020  F024         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 16348  0025AC  C021  F025         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 16349  0025B0  C022  F026         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 16350  0025B4  C023  F027         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 16351                           
 16352                           ; BSR set to: 15
 16353                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 16354  0025B8  010F               	movlb	15	; () banked
 16355  0025BA  5122               	movf	34,w,b	;volatile
 16356  0025BC  0B1F               	andlw	31
 16357  0025BE  010F               	movlb	15	; () banked
 16358  0025C0  6F22               	movwf	34,b	;volatile
 16359                           
 16360                           ; BSR set to: 15
 16361                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 16362  0025C2  C024  FF22         	movff	i1CANsendMessage@tamp,3874	;volatile
 16363  0025C6                     i1l8513:
 16364                           
 16365                           ; BSR set to: 15
 16366                           ;inc\CANlib.h: 498: }
 16367                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 16368  0025C6  A01F               	btfss	i1CANsendMessage@flags,0,c
 16369  0025C8  D003               	goto	i1l402
 16370                           
 16371                           ; BSR set to: 15
 16372                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 16373  0025CA  010F               	movlb	15	; () banked
 16374  0025CC  8120               	bsf	32,0,b	;volatile
 16375  0025CE  D002               	goto	i1l403
 16376  0025D0                     i1l402:
 16377                           
 16378                           ; BSR set to: 15
 16379                           ;inc\CANlib.h: 502: else
 16380                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 16381  0025D0  010F               	movlb	15	; () banked
 16382  0025D2  9120               	bcf	32,0,b	;volatile
 16383  0025D4                     i1l403:
 16384                           
 16385                           ; BSR set to: 15
 16386                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 16387  0025D4  A21F               	btfss	i1CANsendMessage@flags,1,c
 16388  0025D6  D003               	goto	i1l404
 16389                           
 16390                           ; BSR set to: 15
 16391                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 16392  0025D8  010F               	movlb	15	; () banked
 16393  0025DA  8320               	bsf	32,1,b	;volatile
 16394  0025DC  D002               	goto	i1l8519
 16395  0025DE                     i1l404:
 16396                           
 16397                           ; BSR set to: 15
 16398                           ;inc\CANlib.h: 506: else
 16399                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 16400  0025DE  010F               	movlb	15	; () banked
 16401  0025E0  9320               	bcf	32,1,b	;volatile
 16402  0025E2                     i1l8519:
 16403                           
 16404                           ; BSR set to: 15
 16405                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 16406  0025E2  C01C  FFD9         	movff	i1CANsendMessage@data,fsr2l
 16407  0025E6  C01D  FFDA         	movff	i1CANsendMessage@data+1,fsr2h
 16408  0025EA  50DF               	movf	indf2,w,c
 16409  0025EC  010F               	movlb	15	; () banked
 16410  0025EE  6F26               	movwf	38,b	;volatile
 16411                           
 16412                           ; BSR set to: 15
 16413                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 16414  0025F0  EE20 F001          	lfsr	2,1
 16415  0025F4  501C               	movf	i1CANsendMessage@data,w,c
 16416  0025F6  26D9               	addwf	fsr2l,f,c
 16417  0025F8  501D               	movf	i1CANsendMessage@data+1,w,c
 16418  0025FA  22DA               	addwfc	fsr2h,f,c
 16419  0025FC  50DF               	movf	indf2,w,c
 16420  0025FE  010F               	movlb	15	; () banked
 16421  002600  6F27               	movwf	39,b	;volatile
 16422                           
 16423                           ; BSR set to: 15
 16424                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 16425  002602  EE20 F002          	lfsr	2,2
 16426  002606  501C               	movf	i1CANsendMessage@data,w,c
 16427  002608  26D9               	addwf	fsr2l,f,c
 16428  00260A  501D               	movf	i1CANsendMessage@data+1,w,c
 16429  00260C  22DA               	addwfc	fsr2h,f,c
 16430  00260E  50DF               	movf	indf2,w,c
 16431  002610  010F               	movlb	15	; () banked
 16432  002612  6F28               	movwf	40,b	;volatile
 16433                           
 16434                           ; BSR set to: 15
 16435                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 16436  002614  EE20 F003          	lfsr	2,3
 16437  002618  501C               	movf	i1CANsendMessage@data,w,c
 16438  00261A  26D9               	addwf	fsr2l,f,c
 16439  00261C  501D               	movf	i1CANsendMessage@data+1,w,c
 16440  00261E  22DA               	addwfc	fsr2h,f,c
 16441  002620  50DF               	movf	indf2,w,c
 16442  002622  010F               	movlb	15	; () banked
 16443  002624  6F29               	movwf	41,b	;volatile
 16444                           
 16445                           ; BSR set to: 15
 16446                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 16447  002626  EE20 F004          	lfsr	2,4
 16448  00262A  501C               	movf	i1CANsendMessage@data,w,c
 16449  00262C  26D9               	addwf	fsr2l,f,c
 16450  00262E  501D               	movf	i1CANsendMessage@data+1,w,c
 16451  002630  22DA               	addwfc	fsr2h,f,c
 16452  002632  50DF               	movf	indf2,w,c
 16453  002634  010F               	movlb	15	; () banked
 16454  002636  6F2A               	movwf	42,b	;volatile
 16455                           
 16456                           ; BSR set to: 15
 16457                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 16458  002638  EE20 F005          	lfsr	2,5
 16459  00263C  501C               	movf	i1CANsendMessage@data,w,c
 16460  00263E  26D9               	addwf	fsr2l,f,c
 16461  002640  501D               	movf	i1CANsendMessage@data+1,w,c
 16462  002642  22DA               	addwfc	fsr2h,f,c
 16463  002644  50DF               	movf	indf2,w,c
 16464  002646  010F               	movlb	15	; () banked
 16465  002648  6F2B               	movwf	43,b	;volatile
 16466                           
 16467                           ; BSR set to: 15
 16468                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 16469  00264A  EE20 F006          	lfsr	2,6
 16470  00264E  501C               	movf	i1CANsendMessage@data,w,c
 16471  002650  26D9               	addwf	fsr2l,f,c
 16472  002652  501D               	movf	i1CANsendMessage@data+1,w,c
 16473  002654  22DA               	addwfc	fsr2h,f,c
 16474  002656  50DF               	movf	indf2,w,c
 16475  002658  010F               	movlb	15	; () banked
 16476  00265A  6F2C               	movwf	44,b	;volatile
 16477                           
 16478                           ; BSR set to: 15
 16479                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 16480  00265C  EE20 F007          	lfsr	2,7
 16481  002660  501C               	movf	i1CANsendMessage@data,w,c
 16482  002662  26D9               	addwf	fsr2l,f,c
 16483  002664  501D               	movf	i1CANsendMessage@data+1,w,c
 16484  002666  22DA               	addwfc	fsr2h,f,c
 16485  002668  50DF               	movf	indf2,w,c
 16486  00266A  010F               	movlb	15	; () banked
 16487  00266C  6F2D               	movwf	45,b	;volatile
 16488                           
 16489                           ; BSR set to: 15
 16490                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 16491  00266E  010F               	movlb	15	; () banked
 16492  002670  8720               	bsf	32,3,b	;volatile
 16493                           
 16494                           ; BSR set to: 15
 16495                           ;inc\CANlib.h: 520: return;
 16496  002672  0012               	return	
 16497  002674                     __end_ofi1_CANsendMessage:
 16498                           	opt stack 0
 16499                           pclatu	equ	0xFFB
 16500                           pclath	equ	0xFFA
 16501                           tblptru	equ	0xFF8
 16502                           tblptrh	equ	0xFF7
 16503                           tblptrl	equ	0xFF6
 16504                           tablat	equ	0xFF5
 16505                           prodh	equ	0xFF4
 16506                           prodl	equ	0xFF3
 16507                           intcon	equ	0xFF2
 16508                           intcon2	equ	0xFF1
 16509                           postinc0	equ	0xFEE
 16510                           fsr0h	equ	0xFEA
 16511                           fsr0l	equ	0xFE9
 16512                           wreg	equ	0xFE8
 16513                           indf1	equ	0xFE7
 16514                           postdec1	equ	0xFE5
 16515                           fsr1h	equ	0xFE2
 16516                           fsr1l	equ	0xFE1
 16517                           bsr	equ	0xFE0
 16518                           indf2	equ	0xFDF
 16519                           postinc2	equ	0xFDE
 16520                           postdec2	equ	0xFDD
 16521                           plusw2	equ	0xFDB
 16522                           fsr2h	equ	0xFDA
 16523                           fsr2l	equ	0xFD9
 16524                           status	equ	0xFD8
 16525                           
 16526 ;; *************** function i1_CANisTxReady *****************
 16527 ;; Defined at:
 16528 ;;		line 1154 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 16529 ;; Parameters:    Size  Location     Type
 16530 ;;		None
 16531 ;; Auto vars:     Size  Location     Type
 16532 ;;		None
 16533 ;; Return value:  Size  Location     Type
 16534 ;;                  1    wreg      unsigned char 
 16535 ;; Registers used:
 16536 ;;		wreg, status,2
 16537 ;; Tracked objects:
 16538 ;;		On entry : 0/0
 16539 ;;		On exit  : 0/0
 16540 ;;		Unchanged: 0/0
 16541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16543 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16545 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16546 ;;Total ram usage:        1 bytes
 16547 ;; Hardware stack levels used:    1
 16548 ;; Hardware stack levels required when called:    2
 16549 ;; This function calls:
 16550 ;;		Nothing
 16551 ;; This function is called by:
 16552 ;;		_ISR_Bassa
 16553 ;; This function uses a non-reentrant model
 16554 ;;
 16555                           
 16556                           	psect	text37
 16557  00666E                     __ptext37:
 16558                           	opt stack 0
 16559  00666E                     i1_CANisTxReady:
 16560                           	opt stack 21
 16561                           
 16562                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 16563                           
 16564                           ; BSR set to: 15
 16565                           ;incstack = 0
 16566  00666E  0E01               	movlw	1
 16567  006670  6E18               	movwf	i1_CANisTxReady$2800,c
 16568  006672  010F               	movlb	15	; () banked
 16569  006674  A740               	btfss	64,3,b	;volatile
 16570  006676  D008               	goto	i1l556
 16571                           
 16572                           ; BSR set to: 15
 16573  006678  010F               	movlb	15	; () banked
 16574  00667A  A730               	btfss	48,3,b	;volatile
 16575  00667C  D005               	goto	i1l556
 16576                           
 16577                           ; BSR set to: 15
 16578  00667E  010F               	movlb	15	; () banked
 16579  006680  A720               	btfss	32,3,b	;volatile
 16580  006682  D002               	goto	i1l556
 16581                           
 16582                           ; BSR set to: 15
 16583  006684  0E00               	movlw	0
 16584  006686  6E18               	movwf	i1_CANisTxReady$2800,c
 16585  006688                     i1l556:
 16586                           
 16587                           ; BSR set to: 15
 16588  006688  5018               	movf	i1_CANisTxReady$2800,w,c
 16589  00668A  0012               	return	
 16590  00668C                     __end_ofi1_CANisTxReady:
 16591                           	opt stack 0
 16592                           pclatu	equ	0xFFB
 16593                           pclath	equ	0xFFA
 16594                           tblptru	equ	0xFF8
 16595                           tblptrh	equ	0xFF7
 16596                           tblptrl	equ	0xFF6
 16597                           tablat	equ	0xFF5
 16598                           prodh	equ	0xFF4
 16599                           prodl	equ	0xFF3
 16600                           intcon	equ	0xFF2
 16601                           intcon2	equ	0xFF1
 16602                           postinc0	equ	0xFEE
 16603                           fsr0h	equ	0xFEA
 16604                           fsr0l	equ	0xFE9
 16605                           wreg	equ	0xFE8
 16606                           indf1	equ	0xFE7
 16607                           postdec1	equ	0xFE5
 16608                           fsr1h	equ	0xFE2
 16609                           fsr1l	equ	0xFE1
 16610                           bsr	equ	0xFE0
 16611                           indf2	equ	0xFDF
 16612                           postinc2	equ	0xFDE
 16613                           postdec2	equ	0xFDD
 16614                           plusw2	equ	0xFDB
 16615                           fsr2h	equ	0xFDA
 16616                           fsr2l	equ	0xFD9
 16617                           status	equ	0xFD8
 16618                           
 16619 ;; *************** function _CANreceiveMessage *****************
 16620 ;; Defined at:
 16621 ;;		line 528 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 16622 ;; Parameters:    Size  Location     Type
 16623 ;;  msg             2   23[COMRAM] PTR struct .
 16624 ;;		 -> msg(15), 
 16625 ;; Auto vars:     Size  Location     Type
 16626 ;;  tamp            1   34[COMRAM] unsigned char 
 16627 ;;  error           1   33[COMRAM] unsigned char 
 16628 ;; Return value:  Size  Location     Type
 16629 ;;                  1    wreg      unsigned char 
 16630 ;; Registers used:
 16631 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16632 ;; Tracked objects:
 16633 ;;		On entry : 0/0
 16634 ;;		On exit  : 0/0
 16635 ;;		Unchanged: 0/0
 16636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16637 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16638 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16639 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16640 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16641 ;;Total ram usage:       12 bytes
 16642 ;; Hardware stack levels used:    1
 16643 ;; Hardware stack levels required when called:    2
 16644 ;; This function calls:
 16645 ;;		Nothing
 16646 ;; This function is called by:
 16647 ;;		_ISR_Bassa
 16648 ;; This function uses a non-reentrant model
 16649 ;;
 16650                           
 16651                           	psect	text38
 16652  002BFE                     __ptext38:
 16653                           	opt stack 0
 16654  002BFE                     _CANreceiveMessage:
 16655                           	opt stack 21
 16656                           
 16657                           ;inc\CANlib.h: 530: BYTE tamp;
 16658                           ;inc\CANlib.h: 531: BYTE error = 0;
 16659                           
 16660                           ; BSR set to: 15
 16661                           ;incstack = 0
 16662  002BFE  0E00               	movlw	0
 16663  002C00  6E22               	movwf	CANreceiveMessage@error,c
 16664                           
 16665                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 16666  002C02  BE74               	btfsc	3956,7,c	;volatile
 16667                           
 16668                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 16669  002C04  8022               	bsf	CANreceiveMessage@error,0,c
 16670                           
 16671                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 16672  002C06  BC74               	btfsc	3956,6,c	;volatile
 16673                           
 16674                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 16675  002C08  8222               	bsf	CANreceiveMessage@error,1,c
 16676                           
 16677                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 16678  002C0A  010F               	movlb	15	; () banked
 16679  002C0C  AF50               	btfss	80,7,b	;volatile
 16680  002C0E  D143               	goto	i1l410
 16681                           
 16682                           ; BSR set to: 15
 16683                           ;inc\CANlib.h: 541: {
 16684                           ;inc\CANlib.h: 542: msg->identifier = 0;
 16685  002C10  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16686  002C14  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16687  002C18  6ADE               	clrf	postinc2,c
 16688  002C1A  6ADE               	clrf	postinc2,c
 16689  002C1C  6ADE               	clrf	postinc2,c
 16690  002C1E  6ADD               	clrf	postdec2,c
 16691                           
 16692                           ; BSR set to: 15
 16693                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 16694  002C20  EE20 F004          	lfsr	2,4
 16695  002C24  5018               	movf	CANreceiveMessage@msg,w,c
 16696  002C26  26D9               	addwf	fsr2l,f,c
 16697  002C28  5019               	movf	CANreceiveMessage@msg+1,w,c
 16698  002C2A  22DA               	addwfc	fsr2h,f,c
 16699  002C2C  CF56 FFDF          	movff	3926,indf2	;volatile
 16700                           
 16701                           ; BSR set to: 15
 16702                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 16703  002C30  EE20 F005          	lfsr	2,5
 16704  002C34  5018               	movf	CANreceiveMessage@msg,w,c
 16705  002C36  26D9               	addwf	fsr2l,f,c
 16706  002C38  5019               	movf	CANreceiveMessage@msg+1,w,c
 16707  002C3A  22DA               	addwfc	fsr2h,f,c
 16708  002C3C  CF57 FFDF          	movff	3927,indf2	;volatile
 16709                           
 16710                           ; BSR set to: 15
 16711                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 16712  002C40  EE20 F006          	lfsr	2,6
 16713  002C44  5018               	movf	CANreceiveMessage@msg,w,c
 16714  002C46  26D9               	addwf	fsr2l,f,c
 16715  002C48  5019               	movf	CANreceiveMessage@msg+1,w,c
 16716  002C4A  22DA               	addwfc	fsr2h,f,c
 16717  002C4C  CF58 FFDF          	movff	3928,indf2	;volatile
 16718                           
 16719                           ; BSR set to: 15
 16720                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 16721  002C50  EE20 F007          	lfsr	2,7
 16722  002C54  5018               	movf	CANreceiveMessage@msg,w,c
 16723  002C56  26D9               	addwf	fsr2l,f,c
 16724  002C58  5019               	movf	CANreceiveMessage@msg+1,w,c
 16725  002C5A  22DA               	addwfc	fsr2h,f,c
 16726  002C5C  CF59 FFDF          	movff	3929,indf2	;volatile
 16727                           
 16728                           ; BSR set to: 15
 16729                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 16730  002C60  EE20 F008          	lfsr	2,8
 16731  002C64  5018               	movf	CANreceiveMessage@msg,w,c
 16732  002C66  26D9               	addwf	fsr2l,f,c
 16733  002C68  5019               	movf	CANreceiveMessage@msg+1,w,c
 16734  002C6A  22DA               	addwfc	fsr2h,f,c
 16735  002C6C  CF5A FFDF          	movff	3930,indf2	;volatile
 16736                           
 16737                           ; BSR set to: 15
 16738                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 16739  002C70  EE20 F009          	lfsr	2,9
 16740  002C74  5018               	movf	CANreceiveMessage@msg,w,c
 16741  002C76  26D9               	addwf	fsr2l,f,c
 16742  002C78  5019               	movf	CANreceiveMessage@msg+1,w,c
 16743  002C7A  22DA               	addwfc	fsr2h,f,c
 16744  002C7C  CF5B FFDF          	movff	3931,indf2	;volatile
 16745                           
 16746                           ; BSR set to: 15
 16747                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 16748  002C80  EE20 F00A          	lfsr	2,10
 16749  002C84  5018               	movf	CANreceiveMessage@msg,w,c
 16750  002C86  26D9               	addwf	fsr2l,f,c
 16751  002C88  5019               	movf	CANreceiveMessage@msg+1,w,c
 16752  002C8A  22DA               	addwfc	fsr2h,f,c
 16753  002C8C  CF5C FFDF          	movff	3932,indf2	;volatile
 16754                           
 16755                           ; BSR set to: 15
 16756                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 16757  002C90  EE20 F00B          	lfsr	2,11
 16758  002C94  5018               	movf	CANreceiveMessage@msg,w,c
 16759  002C96  26D9               	addwf	fsr2l,f,c
 16760  002C98  5019               	movf	CANreceiveMessage@msg+1,w,c
 16761  002C9A  22DA               	addwfc	fsr2h,f,c
 16762  002C9C  CF5D FFDF          	movff	3933,indf2	;volatile
 16763                           
 16764                           ; BSR set to: 15
 16765                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 16766  002CA0  EE20 F00E          	lfsr	2,14
 16767  002CA4  5018               	movf	CANreceiveMessage@msg,w,c
 16768  002CA6  26D9               	addwf	fsr2l,f,c
 16769  002CA8  5019               	movf	CANreceiveMessage@msg+1,w,c
 16770  002CAA  22DA               	addwfc	fsr2h,f,c
 16771  002CAC  010F               	movlb	15	; () banked
 16772  002CAE  AD55               	btfss	85,6,b	;volatile
 16773  002CB0  D002               	goto	i1u1065_20
 16774  002CB2  0E01               	movlw	1
 16775  002CB4  D001               	goto	i1u1065_26
 16776  002CB6                     i1u1065_20:
 16777  002CB6  0E00               	movlw	0
 16778  002CB8                     i1u1065_26:
 16779  002CB8  6EDF               	movwf	indf2,c
 16780                           
 16781                           ; BSR set to: 15
 16782                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 16783  002CBA  EE20 F00D          	lfsr	2,13
 16784  002CBE  5018               	movf	CANreceiveMessage@msg,w,c
 16785  002CC0  26D9               	addwf	fsr2l,f,c
 16786  002CC2  5019               	movf	CANreceiveMessage@msg+1,w,c
 16787  002CC4  22DA               	addwfc	fsr2h,f,c
 16788  002CC6  010F               	movlb	15	; () banked
 16789  002CC8  5155               	movf	85,w,b	;volatile
 16790  002CCA  0B0F               	andlw	15
 16791  002CCC  6EDF               	movwf	indf2,c
 16792                           
 16793                           ; BSR set to: 15
 16794                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 16795  002CCE  EE20 F00C          	lfsr	2,12
 16796  002CD2  5018               	movf	CANreceiveMessage@msg,w,c
 16797  002CD4  26D9               	addwf	fsr2l,f,c
 16798  002CD6  5019               	movf	CANreceiveMessage@msg+1,w,c
 16799  002CD8  22DA               	addwfc	fsr2h,f,c
 16800  002CDA  010F               	movlb	15	; () banked
 16801  002CDC  A752               	btfss	82,3,b	;volatile
 16802  002CDE  D002               	goto	i1u1066_20
 16803  002CE0  0E01               	movlw	1
 16804  002CE2  D001               	goto	i1u1066_26
 16805  002CE4                     i1u1066_20:
 16806  002CE4  0E00               	movlw	0
 16807  002CE6                     i1u1066_26:
 16808  002CE6  6EDF               	movwf	indf2,c
 16809                           
 16810                           ; BSR set to: 15
 16811                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 16812  002CE8  010F               	movlb	15	; () banked
 16813  002CEA  B752               	btfsc	82,3,b	;volatile
 16814  002CEC  D044               	goto	i1l7999
 16815                           
 16816                           ; BSR set to: 15
 16817                           ;inc\CANlib.h: 559: {
 16818                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 16819  002CEE  CF51 F01A          	movff	3921,??_CANreceiveMessage	;volatile
 16820  002CF2  6A1B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16821  002CF4  6A1C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 16822  002CF6  6A1D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 16823  002CF8  0E03               	movlw	3
 16824  002CFA                     i1u1068_25:
 16825  002CFA  90D8               	bcf	status,0,c
 16826  002CFC  361A               	rlcf	??_CANreceiveMessage,f,c
 16827  002CFE  361B               	rlcf	??_CANreceiveMessage+1,f,c
 16828  002D00  361C               	rlcf	??_CANreceiveMessage+2,f,c
 16829  002D02  361D               	rlcf	??_CANreceiveMessage+3,f,c
 16830  002D04  2EE8               	decfsz	wreg,f,c
 16831  002D06  D7F9               	goto	i1u1068_25
 16832  002D08  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16833  002D0C  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16834  002D10  C01A  FFDE         	movff	??_CANreceiveMessage,postinc2
 16835  002D14  C01B  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 16836  002D18  C01C  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 16837  002D1C  C01D  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 16838                           
 16839                           ; BSR set to: 15
 16840                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 16841  002D20  010F               	movlb	15	; () banked
 16842  002D22  3952               	swapf	82,w,b	;volatile
 16843  002D24  42E8               	rrncf	wreg,f,c
 16844  002D26  0B07               	andlw	7
 16845  002D28  0B07               	andlw	7
 16846  002D2A  6E23               	movwf	CANreceiveMessage@tamp,c
 16847                           
 16848                           ; BSR set to: 15
 16849                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 16850  002D2C  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16851  002D30  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16852  002D34  CFDE F01A          	movff	postinc2,??_CANreceiveMessage
 16853  002D38  CFDE F01B          	movff	postinc2,??_CANreceiveMessage+1
 16854  002D3C  CFDE F01C          	movff	postinc2,??_CANreceiveMessage+2
 16855  002D40  CFDE F01D          	movff	postinc2,??_CANreceiveMessage+3
 16856  002D44  5023               	movf	CANreceiveMessage@tamp,w,c
 16857  002D46  241A               	addwf	??_CANreceiveMessage,w,c
 16858  002D48  6E1E               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 16859  002D4A  0E00               	movlw	0
 16860  002D4C  201B               	addwfc	??_CANreceiveMessage+1,w,c
 16861  002D4E  6E1F               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 16862  002D50  0E00               	movlw	0
 16863  002D52  201C               	addwfc	??_CANreceiveMessage+2,w,c
 16864  002D54  6E20               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 16865  002D56  0E00               	movlw	0
 16866  002D58  201D               	addwfc	??_CANreceiveMessage+3,w,c
 16867  002D5A  6E21               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 16868  002D5C  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16869  002D60  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16870  002D64  C01E  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 16871  002D68  C01F  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 16872  002D6C  C020  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 16873  002D70  C021  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 16874                           
 16875                           ;inc\CANlib.h: 563: }
 16876  002D74  D08D               	goto	i1l8025
 16877  002D76                     i1l7999:
 16878                           
 16879                           ; BSR set to: 15
 16880                           ;inc\CANlib.h: 564: else
 16881                           ;inc\CANlib.h: 565: {
 16882                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 16883  002D76  CF54 F01A          	movff	3924,??_CANreceiveMessage	;volatile
 16884  002D7A  6A1B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16885  002D7C  6A1C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 16886  002D7E  6A1D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 16887  002D80  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16888  002D84  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16889  002D88  C01A  FFDE         	movff	??_CANreceiveMessage,postinc2
 16890  002D8C  C01B  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 16891  002D90  C01C  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 16892  002D94  C01D  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 16893                           
 16894                           ; BSR set to: 15
 16895                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 16896  002D98  CF53 F01A          	movff	3923,??_CANreceiveMessage	;volatile
 16897  002D9C  6A1B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16898  002D9E  6A1C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 16899  002DA0  6A1D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 16900  002DA2  C01C  F01D         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 16901  002DA6  C01B  F01C         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 16902  002DAA  C01A  F01B         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 16903  002DAE  6A1A               	clrf	??_CANreceiveMessage,c
 16904  002DB0  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16905  002DB4  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16906  002DB8  501A               	movf	??_CANreceiveMessage,w,c
 16907  002DBA  26DE               	addwf	postinc2,f,c
 16908  002DBC  501B               	movf	??_CANreceiveMessage+1,w,c
 16909  002DBE  22DE               	addwfc	postinc2,f,c
 16910  002DC0  501C               	movf	??_CANreceiveMessage+2,w,c
 16911  002DC2  22DE               	addwfc	postinc2,f,c
 16912  002DC4  501D               	movf	??_CANreceiveMessage+3,w,c
 16913  002DC6  22DE               	addwfc	postinc2,f,c
 16914                           
 16915                           ; BSR set to: 15
 16916                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 16917  002DC8  010F               	movlb	15	; () banked
 16918  002DCA  A152               	btfss	82,0,b	;volatile
 16919  002DCC  D00C               	goto	i1l8007
 16920                           
 16921                           ; BSR set to: 15
 16922                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 16923  002DCE  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16924  002DD2  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16925  002DD6  0E00               	movlw	0
 16926  002DD8  12DE               	iorwf	postinc2,f,c
 16927  002DDA  0E00               	movlw	0
 16928  002DDC  12DE               	iorwf	postinc2,f,c
 16929  002DDE  0E01               	movlw	1
 16930  002DE0  12DE               	iorwf	postinc2,f,c
 16931  002DE2  0E00               	movlw	0
 16932  002DE4  12DE               	iorwf	postinc2,f,c
 16933  002DE6                     i1l8007:
 16934                           
 16935                           ; BSR set to: 15
 16936                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 16937  002DE6  010F               	movlb	15	; () banked
 16938  002DE8  A352               	btfss	82,1,b	;volatile
 16939  002DEA  D00C               	goto	i1l8011
 16940                           
 16941                           ; BSR set to: 15
 16942                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 16943  002DEC  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16944  002DF0  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16945  002DF4  0E00               	movlw	0
 16946  002DF6  12DE               	iorwf	postinc2,f,c
 16947  002DF8  0E00               	movlw	0
 16948  002DFA  12DE               	iorwf	postinc2,f,c
 16949  002DFC  0E02               	movlw	2
 16950  002DFE  12DE               	iorwf	postinc2,f,c
 16951  002E00  0E00               	movlw	0
 16952  002E02  12DE               	iorwf	postinc2,f,c
 16953  002E04                     i1l8011:
 16954                           
 16955                           ; BSR set to: 15
 16956                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 16957  002E04  010F               	movlb	15	; () banked
 16958  002E06  AB52               	btfss	82,5,b	;volatile
 16959  002E08  D00C               	goto	i1l8015
 16960                           
 16961                           ; BSR set to: 15
 16962                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 16963  002E0A  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16964  002E0E  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16965  002E12  0E00               	movlw	0
 16966  002E14  12DE               	iorwf	postinc2,f,c
 16967  002E16  0E00               	movlw	0
 16968  002E18  12DE               	iorwf	postinc2,f,c
 16969  002E1A  0E04               	movlw	4
 16970  002E1C  12DE               	iorwf	postinc2,f,c
 16971  002E1E  0E00               	movlw	0
 16972  002E20  12DE               	iorwf	postinc2,f,c
 16973  002E22                     i1l8015:
 16974                           
 16975                           ; BSR set to: 15
 16976                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 16977  002E22  010F               	movlb	15	; () banked
 16978  002E24  AD52               	btfss	82,6,b	;volatile
 16979  002E26  D00C               	goto	i1l8019
 16980                           
 16981                           ; BSR set to: 15
 16982                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 16983  002E28  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16984  002E2C  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16985  002E30  0E00               	movlw	0
 16986  002E32  12DE               	iorwf	postinc2,f,c
 16987  002E34  0E00               	movlw	0
 16988  002E36  12DE               	iorwf	postinc2,f,c
 16989  002E38  0E08               	movlw	8
 16990  002E3A  12DE               	iorwf	postinc2,f,c
 16991  002E3C  0E00               	movlw	0
 16992  002E3E  12DE               	iorwf	postinc2,f,c
 16993  002E40                     i1l8019:
 16994                           
 16995                           ; BSR set to: 15
 16996                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 16997  002E40  010F               	movlb	15	; () banked
 16998  002E42  AF52               	btfss	82,7,b	;volatile
 16999  002E44  D00C               	goto	i1l8023
 17000                           
 17001                           ; BSR set to: 15
 17002                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 17003  002E46  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17004  002E4A  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17005  002E4E  0E00               	movlw	0
 17006  002E50  12DE               	iorwf	postinc2,f,c
 17007  002E52  0E00               	movlw	0
 17008  002E54  12DE               	iorwf	postinc2,f,c
 17009  002E56  0E10               	movlw	16
 17010  002E58  12DE               	iorwf	postinc2,f,c
 17011  002E5A  0E00               	movlw	0
 17012  002E5C  12DE               	iorwf	postinc2,f,c
 17013  002E5E                     i1l8023:
 17014                           
 17015                           ; BSR set to: 15
 17016                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 17017  002E5E  CF51 F01A          	movff	3921,??_CANreceiveMessage	;volatile
 17018  002E62  6A1B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17019  002E64  6A1C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17020  002E66  6A1D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17021  002E68  0E15               	movlw	21
 17022  002E6A                     i1u1074_25:
 17023  002E6A  90D8               	bcf	status,0,c
 17024  002E6C  361A               	rlcf	??_CANreceiveMessage,f,c
 17025  002E6E  361B               	rlcf	??_CANreceiveMessage+1,f,c
 17026  002E70  361C               	rlcf	??_CANreceiveMessage+2,f,c
 17027  002E72  361D               	rlcf	??_CANreceiveMessage+3,f,c
 17028  002E74  2EE8               	decfsz	wreg,f,c
 17029  002E76  D7F9               	goto	i1u1074_25
 17030  002E78  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17031  002E7C  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17032  002E80  501A               	movf	??_CANreceiveMessage,w,c
 17033  002E82  12DE               	iorwf	postinc2,f,c
 17034  002E84  501B               	movf	??_CANreceiveMessage+1,w,c
 17035  002E86  12DE               	iorwf	postinc2,f,c
 17036  002E88  501C               	movf	??_CANreceiveMessage+2,w,c
 17037  002E8A  12DE               	iorwf	postinc2,f,c
 17038  002E8C  501D               	movf	??_CANreceiveMessage+3,w,c
 17039  002E8E  12DE               	iorwf	postinc2,f,c
 17040  002E90                     i1l8025:
 17041                           
 17042                           ; BSR set to: 15
 17043                           ;inc\CANlib.h: 581: }
 17044                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 17045  002E90  010F               	movlb	15	; () banked
 17046  002E92  9F50               	bcf	80,7,b	;volatile
 17047                           
 17048                           ; BSR set to: 15
 17049                           ;inc\CANlib.h: 584: return (error);
 17050                           ;	Return value of _CANreceiveMessage is never used
 17051  002E94  0012               	return	
 17052  002E96                     i1l410:
 17053                           
 17054                           ; BSR set to: 15
 17055                           ;inc\CANlib.h: 585: }
 17056                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 17057  002E96  AE60               	btfss	3936,7,c	;volatile
 17058  002E98  0012               	return	
 17059                           
 17060                           ; BSR set to: 15
 17061                           ;inc\CANlib.h: 588: {
 17062                           ;inc\CANlib.h: 589: msg->identifier = 0;
 17063  002E9A  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17064  002E9E  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17065  002EA2  6ADE               	clrf	postinc2,c
 17066  002EA4  6ADE               	clrf	postinc2,c
 17067  002EA6  6ADE               	clrf	postinc2,c
 17068  002EA8  6ADD               	clrf	postdec2,c
 17069                           
 17070                           ; BSR set to: 15
 17071                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 17072  002EAA  EE20 F004          	lfsr	2,4
 17073  002EAE  5018               	movf	CANreceiveMessage@msg,w,c
 17074  002EB0  26D9               	addwf	fsr2l,f,c
 17075  002EB2  5019               	movf	CANreceiveMessage@msg+1,w,c
 17076  002EB4  22DA               	addwfc	fsr2h,f,c
 17077  002EB6  CF66 FFDF          	movff	3942,indf2	;volatile
 17078                           
 17079                           ; BSR set to: 15
 17080                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 17081  002EBA  EE20 F005          	lfsr	2,5
 17082  002EBE  5018               	movf	CANreceiveMessage@msg,w,c
 17083  002EC0  26D9               	addwf	fsr2l,f,c
 17084  002EC2  5019               	movf	CANreceiveMessage@msg+1,w,c
 17085  002EC4  22DA               	addwfc	fsr2h,f,c
 17086  002EC6  CF67 FFDF          	movff	3943,indf2	;volatile
 17087                           
 17088                           ; BSR set to: 15
 17089                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 17090  002ECA  EE20 F006          	lfsr	2,6
 17091  002ECE  5018               	movf	CANreceiveMessage@msg,w,c
 17092  002ED0  26D9               	addwf	fsr2l,f,c
 17093  002ED2  5019               	movf	CANreceiveMessage@msg+1,w,c
 17094  002ED4  22DA               	addwfc	fsr2h,f,c
 17095  002ED6  CF68 FFDF          	movff	3944,indf2	;volatile
 17096                           
 17097                           ; BSR set to: 15
 17098                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 17099  002EDA  EE20 F007          	lfsr	2,7
 17100  002EDE  5018               	movf	CANreceiveMessage@msg,w,c
 17101  002EE0  26D9               	addwf	fsr2l,f,c
 17102  002EE2  5019               	movf	CANreceiveMessage@msg+1,w,c
 17103  002EE4  22DA               	addwfc	fsr2h,f,c
 17104  002EE6  CF69 FFDF          	movff	3945,indf2	;volatile
 17105                           
 17106                           ; BSR set to: 15
 17107                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 17108  002EEA  EE20 F008          	lfsr	2,8
 17109  002EEE  5018               	movf	CANreceiveMessage@msg,w,c
 17110  002EF0  26D9               	addwf	fsr2l,f,c
 17111  002EF2  5019               	movf	CANreceiveMessage@msg+1,w,c
 17112  002EF4  22DA               	addwfc	fsr2h,f,c
 17113  002EF6  CF6A FFDF          	movff	3946,indf2	;volatile
 17114                           
 17115                           ; BSR set to: 15
 17116                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 17117  002EFA  EE20 F009          	lfsr	2,9
 17118  002EFE  5018               	movf	CANreceiveMessage@msg,w,c
 17119  002F00  26D9               	addwf	fsr2l,f,c
 17120  002F02  5019               	movf	CANreceiveMessage@msg+1,w,c
 17121  002F04  22DA               	addwfc	fsr2h,f,c
 17122  002F06  CF6B FFDF          	movff	3947,indf2	;volatile
 17123                           
 17124                           ; BSR set to: 15
 17125                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 17126  002F0A  EE20 F00A          	lfsr	2,10
 17127  002F0E  5018               	movf	CANreceiveMessage@msg,w,c
 17128  002F10  26D9               	addwf	fsr2l,f,c
 17129  002F12  5019               	movf	CANreceiveMessage@msg+1,w,c
 17130  002F14  22DA               	addwfc	fsr2h,f,c
 17131  002F16  CF6C FFDF          	movff	3948,indf2	;volatile
 17132                           
 17133                           ; BSR set to: 15
 17134                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 17135  002F1A  EE20 F00B          	lfsr	2,11
 17136  002F1E  5018               	movf	CANreceiveMessage@msg,w,c
 17137  002F20  26D9               	addwf	fsr2l,f,c
 17138  002F22  5019               	movf	CANreceiveMessage@msg+1,w,c
 17139  002F24  22DA               	addwfc	fsr2h,f,c
 17140  002F26  CF6D FFDF          	movff	3949,indf2	;volatile
 17141                           
 17142                           ; BSR set to: 15
 17143                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 17144  002F2A  EE20 F00E          	lfsr	2,14
 17145  002F2E  5018               	movf	CANreceiveMessage@msg,w,c
 17146  002F30  26D9               	addwf	fsr2l,f,c
 17147  002F32  5019               	movf	CANreceiveMessage@msg+1,w,c
 17148  002F34  22DA               	addwfc	fsr2h,f,c
 17149  002F36  AC65               	btfss	3941,6,c	;volatile
 17150  002F38  D002               	goto	i1u1076_20
 17151  002F3A  0E01               	movlw	1
 17152  002F3C  D001               	goto	i1u1076_26
 17153  002F3E                     i1u1076_20:
 17154  002F3E  0E00               	movlw	0
 17155  002F40                     i1u1076_26:
 17156  002F40  6EDF               	movwf	indf2,c
 17157                           
 17158                           ; BSR set to: 15
 17159                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 17160  002F42  EE20 F00D          	lfsr	2,13
 17161  002F46  5018               	movf	CANreceiveMessage@msg,w,c
 17162  002F48  26D9               	addwf	fsr2l,f,c
 17163  002F4A  5019               	movf	CANreceiveMessage@msg+1,w,c
 17164  002F4C  22DA               	addwfc	fsr2h,f,c
 17165  002F4E  5065               	movf	3941,w,c	;volatile
 17166  002F50  0B0F               	andlw	15
 17167  002F52  6EDF               	movwf	indf2,c
 17168                           
 17169                           ; BSR set to: 15
 17170                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 17171  002F54  EE20 F00C          	lfsr	2,12
 17172  002F58  5018               	movf	CANreceiveMessage@msg,w,c
 17173  002F5A  26D9               	addwf	fsr2l,f,c
 17174  002F5C  5019               	movf	CANreceiveMessage@msg+1,w,c
 17175  002F5E  22DA               	addwfc	fsr2h,f,c
 17176  002F60  A662               	btfss	3938,3,c	;volatile
 17177  002F62  D002               	goto	i1u1077_20
 17178  002F64  0E01               	movlw	1
 17179  002F66  D001               	goto	i1u1077_26
 17180  002F68                     i1u1077_20:
 17181  002F68  0E00               	movlw	0
 17182  002F6A                     i1u1077_26:
 17183  002F6A  6EDF               	movwf	indf2,c
 17184                           
 17185                           ; BSR set to: 15
 17186                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 17187  002F6C  B662               	btfsc	3938,3,c	;volatile
 17188  002F6E  D043               	goto	i1l8061
 17189                           
 17190                           ; BSR set to: 15
 17191                           ;inc\CANlib.h: 606: {
 17192                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 17193  002F70  CF61 F01A          	movff	3937,??_CANreceiveMessage	;volatile
 17194  002F74  6A1B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17195  002F76  6A1C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17196  002F78  6A1D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17197  002F7A  0E03               	movlw	3
 17198  002F7C                     i1u1079_25:
 17199  002F7C  90D8               	bcf	status,0,c
 17200  002F7E  361A               	rlcf	??_CANreceiveMessage,f,c
 17201  002F80  361B               	rlcf	??_CANreceiveMessage+1,f,c
 17202  002F82  361C               	rlcf	??_CANreceiveMessage+2,f,c
 17203  002F84  361D               	rlcf	??_CANreceiveMessage+3,f,c
 17204  002F86  2EE8               	decfsz	wreg,f,c
 17205  002F88  D7F9               	goto	i1u1079_25
 17206  002F8A  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17207  002F8E  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17208  002F92  C01A  FFDE         	movff	??_CANreceiveMessage,postinc2
 17209  002F96  C01B  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 17210  002F9A  C01C  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 17211  002F9E  C01D  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 17212                           
 17213                           ; BSR set to: 15
 17214                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 17215  002FA2  3862               	swapf	3938,w,c	;volatile
 17216  002FA4  42E8               	rrncf	wreg,f,c
 17217  002FA6  0B07               	andlw	7
 17218  002FA8  0B07               	andlw	7
 17219  002FAA  6E23               	movwf	CANreceiveMessage@tamp,c
 17220                           
 17221                           ; BSR set to: 15
 17222                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 17223  002FAC  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17224  002FB0  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17225  002FB4  CFDE F01A          	movff	postinc2,??_CANreceiveMessage
 17226  002FB8  CFDE F01B          	movff	postinc2,??_CANreceiveMessage+1
 17227  002FBC  CFDE F01C          	movff	postinc2,??_CANreceiveMessage+2
 17228  002FC0  CFDE F01D          	movff	postinc2,??_CANreceiveMessage+3
 17229  002FC4  5023               	movf	CANreceiveMessage@tamp,w,c
 17230  002FC6  241A               	addwf	??_CANreceiveMessage,w,c
 17231  002FC8  6E1E               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 17232  002FCA  0E00               	movlw	0
 17233  002FCC  201B               	addwfc	??_CANreceiveMessage+1,w,c
 17234  002FCE  6E1F               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 17235  002FD0  0E00               	movlw	0
 17236  002FD2  201C               	addwfc	??_CANreceiveMessage+2,w,c
 17237  002FD4  6E20               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 17238  002FD6  0E00               	movlw	0
 17239  002FD8  201D               	addwfc	??_CANreceiveMessage+3,w,c
 17240  002FDA  6E21               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 17241  002FDC  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17242  002FE0  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17243  002FE4  C01E  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 17244  002FE8  C01F  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 17245  002FEC  C020  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 17246  002FF0  C021  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 17247                           
 17248                           ;inc\CANlib.h: 610: }
 17249  002FF4  D088               	goto	i1l8087
 17250  002FF6                     i1l8061:
 17251                           
 17252                           ; BSR set to: 15
 17253                           ;inc\CANlib.h: 611: else
 17254                           ;inc\CANlib.h: 612: {
 17255                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 17256  002FF6  CF64 F01A          	movff	3940,??_CANreceiveMessage	;volatile
 17257  002FFA  6A1B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17258  002FFC  6A1C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17259  002FFE  6A1D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17260  003000  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17261  003004  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17262  003008  C01A  FFDE         	movff	??_CANreceiveMessage,postinc2
 17263  00300C  C01B  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 17264  003010  C01C  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 17265  003014  C01D  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 17266                           
 17267                           ; BSR set to: 15
 17268                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 17269  003018  CF63 F01A          	movff	3939,??_CANreceiveMessage	;volatile
 17270  00301C  6A1B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17271  00301E  6A1C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17272  003020  6A1D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17273  003022  C01C  F01D         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 17274  003026  C01B  F01C         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 17275  00302A  C01A  F01B         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 17276  00302E  6A1A               	clrf	??_CANreceiveMessage,c
 17277  003030  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17278  003034  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17279  003038  501A               	movf	??_CANreceiveMessage,w,c
 17280  00303A  26DE               	addwf	postinc2,f,c
 17281  00303C  501B               	movf	??_CANreceiveMessage+1,w,c
 17282  00303E  22DE               	addwfc	postinc2,f,c
 17283  003040  501C               	movf	??_CANreceiveMessage+2,w,c
 17284  003042  22DE               	addwfc	postinc2,f,c
 17285  003044  501D               	movf	??_CANreceiveMessage+3,w,c
 17286  003046  22DE               	addwfc	postinc2,f,c
 17287                           
 17288                           ; BSR set to: 15
 17289                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 17290  003048  A062               	btfss	3938,0,c	;volatile
 17291  00304A  D00C               	goto	i1l8069
 17292                           
 17293                           ; BSR set to: 15
 17294                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 17295  00304C  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17296  003050  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17297  003054  0E00               	movlw	0
 17298  003056  12DE               	iorwf	postinc2,f,c
 17299  003058  0E00               	movlw	0
 17300  00305A  12DE               	iorwf	postinc2,f,c
 17301  00305C  0E01               	movlw	1
 17302  00305E  12DE               	iorwf	postinc2,f,c
 17303  003060  0E00               	movlw	0
 17304  003062  12DE               	iorwf	postinc2,f,c
 17305  003064                     i1l8069:
 17306                           
 17307                           ; BSR set to: 15
 17308                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 17309  003064  A262               	btfss	3938,1,c	;volatile
 17310  003066  D00C               	goto	i1l8073
 17311                           
 17312                           ; BSR set to: 15
 17313                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 17314  003068  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17315  00306C  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17316  003070  0E00               	movlw	0
 17317  003072  12DE               	iorwf	postinc2,f,c
 17318  003074  0E00               	movlw	0
 17319  003076  12DE               	iorwf	postinc2,f,c
 17320  003078  0E02               	movlw	2
 17321  00307A  12DE               	iorwf	postinc2,f,c
 17322  00307C  0E00               	movlw	0
 17323  00307E  12DE               	iorwf	postinc2,f,c
 17324  003080                     i1l8073:
 17325                           
 17326                           ; BSR set to: 15
 17327                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 17328  003080  AA62               	btfss	3938,5,c	;volatile
 17329  003082  D00C               	goto	i1l8077
 17330                           
 17331                           ; BSR set to: 15
 17332                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 17333  003084  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17334  003088  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17335  00308C  0E00               	movlw	0
 17336  00308E  12DE               	iorwf	postinc2,f,c
 17337  003090  0E00               	movlw	0
 17338  003092  12DE               	iorwf	postinc2,f,c
 17339  003094  0E04               	movlw	4
 17340  003096  12DE               	iorwf	postinc2,f,c
 17341  003098  0E00               	movlw	0
 17342  00309A  12DE               	iorwf	postinc2,f,c
 17343  00309C                     i1l8077:
 17344                           
 17345                           ; BSR set to: 15
 17346                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 17347  00309C  AC62               	btfss	3938,6,c	;volatile
 17348  00309E  D00C               	goto	i1l8081
 17349                           
 17350                           ; BSR set to: 15
 17351                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 17352  0030A0  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17353  0030A4  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17354  0030A8  0E00               	movlw	0
 17355  0030AA  12DE               	iorwf	postinc2,f,c
 17356  0030AC  0E00               	movlw	0
 17357  0030AE  12DE               	iorwf	postinc2,f,c
 17358  0030B0  0E08               	movlw	8
 17359  0030B2  12DE               	iorwf	postinc2,f,c
 17360  0030B4  0E00               	movlw	0
 17361  0030B6  12DE               	iorwf	postinc2,f,c
 17362  0030B8                     i1l8081:
 17363                           
 17364                           ; BSR set to: 15
 17365                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 17366  0030B8  AE62               	btfss	3938,7,c	;volatile
 17367  0030BA  D00C               	goto	i1l8085
 17368                           
 17369                           ; BSR set to: 15
 17370                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 17371  0030BC  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17372  0030C0  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17373  0030C4  0E00               	movlw	0
 17374  0030C6  12DE               	iorwf	postinc2,f,c
 17375  0030C8  0E00               	movlw	0
 17376  0030CA  12DE               	iorwf	postinc2,f,c
 17377  0030CC  0E10               	movlw	16
 17378  0030CE  12DE               	iorwf	postinc2,f,c
 17379  0030D0  0E00               	movlw	0
 17380  0030D2  12DE               	iorwf	postinc2,f,c
 17381  0030D4                     i1l8085:
 17382                           
 17383                           ; BSR set to: 15
 17384                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 17385  0030D4  CF61 F01A          	movff	3937,??_CANreceiveMessage	;volatile
 17386  0030D8  6A1B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17387  0030DA  6A1C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17388  0030DC  6A1D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17389  0030DE  0E15               	movlw	21
 17390  0030E0                     i1u1085_25:
 17391  0030E0  90D8               	bcf	status,0,c
 17392  0030E2  361A               	rlcf	??_CANreceiveMessage,f,c
 17393  0030E4  361B               	rlcf	??_CANreceiveMessage+1,f,c
 17394  0030E6  361C               	rlcf	??_CANreceiveMessage+2,f,c
 17395  0030E8  361D               	rlcf	??_CANreceiveMessage+3,f,c
 17396  0030EA  2EE8               	decfsz	wreg,f,c
 17397  0030EC  D7F9               	goto	i1u1085_25
 17398  0030EE  C018  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17399  0030F2  C019  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17400  0030F6  501A               	movf	??_CANreceiveMessage,w,c
 17401  0030F8  12DE               	iorwf	postinc2,f,c
 17402  0030FA  501B               	movf	??_CANreceiveMessage+1,w,c
 17403  0030FC  12DE               	iorwf	postinc2,f,c
 17404  0030FE  501C               	movf	??_CANreceiveMessage+2,w,c
 17405  003100  12DE               	iorwf	postinc2,f,c
 17406  003102  501D               	movf	??_CANreceiveMessage+3,w,c
 17407  003104  12DE               	iorwf	postinc2,f,c
 17408  003106                     i1l8087:
 17409                           
 17410                           ; BSR set to: 15
 17411                           ;inc\CANlib.h: 629: }
 17412                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 17413  003106  9E60               	bcf	3936,7,c	;volatile
 17414                           
 17415                           ; BSR set to: 15
 17416                           ;inc\CANlib.h: 632: return (error);
 17417                           ;	Return value of _CANreceiveMessage is never used
 17418  003108  0012               	return	
 17419  00310A                     __end_of_CANreceiveMessage:
 17420                           	opt stack 0
 17421                           pclatu	equ	0xFFB
 17422                           pclath	equ	0xFFA
 17423                           tblptru	equ	0xFF8
 17424                           tblptrh	equ	0xFF7
 17425                           tblptrl	equ	0xFF6
 17426                           tablat	equ	0xFF5
 17427                           prodh	equ	0xFF4
 17428                           prodl	equ	0xFF3
 17429                           intcon	equ	0xFF2
 17430                           intcon2	equ	0xFF1
 17431                           postinc0	equ	0xFEE
 17432                           fsr0h	equ	0xFEA
 17433                           fsr0l	equ	0xFE9
 17434                           wreg	equ	0xFE8
 17435                           indf1	equ	0xFE7
 17436                           postdec1	equ	0xFE5
 17437                           fsr1h	equ	0xFE2
 17438                           fsr1l	equ	0xFE1
 17439                           bsr	equ	0xFE0
 17440                           indf2	equ	0xFDF
 17441                           postinc2	equ	0xFDE
 17442                           postdec2	equ	0xFDD
 17443                           plusw2	equ	0xFDB
 17444                           fsr2h	equ	0xFDA
 17445                           fsr2l	equ	0xFD9
 17446                           status	equ	0xFD8
 17447                           
 17448 ;; *************** function _ISR_Alta *****************
 17449 ;; Defined at:
 17450 ;;		line 105 in file "parcheggio.c"
 17451 ;; Parameters:    Size  Location     Type
 17452 ;;		None
 17453 ;; Auto vars:     Size  Location     Type
 17454 ;;		None
 17455 ;; Return value:  Size  Location     Type
 17456 ;;                  1    wreg      void 
 17457 ;; Registers used:
 17458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17459 ;; Tracked objects:
 17460 ;;		On entry : 0/0
 17461 ;;		On exit  : 0/0
 17462 ;;		Unchanged: 0/0
 17463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17466 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17467 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17468 ;;Total ram usage:       16 bytes
 17469 ;; Hardware stack levels used:    1
 17470 ;; Hardware stack levels required when called:    1
 17471 ;; This function calls:
 17472 ;;		___lwdiv
 17473 ;; This function is called by:
 17474 ;;		Interrupt level 2
 17475 ;; This function uses a non-reentrant model
 17476 ;;
 17477                           
 17478                           	psect	intcode
 17479  000008                     __pintcode:
 17480                           	opt stack 0
 17481  000008                     _ISR_Alta:
 17482                           	opt stack 21
 17483                           
 17484                           ; BSR set to: 15
 17485                           ;incstack = 0
 17486  000008  8248               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 17487  00000A  CFFA F00A          	movff	pclath,??_ISR_Alta+2
 17488  00000E  CFFB F00B          	movff	pclatu,??_ISR_Alta+3
 17489  000012  EF88  F030         	goto	int_func
 17490                           pclatu	equ	0xFFB
 17491                           pclath	equ	0xFFA
 17492                           tblptru	equ	0xFF8
 17493                           tblptrh	equ	0xFF7
 17494                           tblptrl	equ	0xFF6
 17495                           tablat	equ	0xFF5
 17496                           prodh	equ	0xFF4
 17497                           prodl	equ	0xFF3
 17498                           intcon	equ	0xFF2
 17499                           intcon2	equ	0xFF1
 17500                           postinc0	equ	0xFEE
 17501                           fsr0h	equ	0xFEA
 17502                           fsr0l	equ	0xFE9
 17503                           wreg	equ	0xFE8
 17504                           indf1	equ	0xFE7
 17505                           postdec1	equ	0xFE5
 17506                           fsr1h	equ	0xFE2
 17507                           fsr1l	equ	0xFE1
 17508                           bsr	equ	0xFE0
 17509                           indf2	equ	0xFDF
 17510                           postinc2	equ	0xFDE
 17511                           postdec2	equ	0xFDD
 17512                           plusw2	equ	0xFDB
 17513                           fsr2h	equ	0xFDA
 17514                           fsr2l	equ	0xFD9
 17515                           status	equ	0xFD8
 17516                           
 17517                           	psect	intcode_body
 17518  006110                     __pintcode_body:
 17519                           	opt stack 21
 17520  006110                     int_func:
 17521                           	opt stack 21
 17522  006110  CFE9 F00C          	movff	fsr0l,??_ISR_Alta+4
 17523  006114  CFEA F00D          	movff	fsr0h,??_ISR_Alta+5
 17524  006118  CFE1 F00E          	movff	fsr1l,??_ISR_Alta+6
 17525  00611C  CFE2 F00F          	movff	fsr1h,??_ISR_Alta+7
 17526  006120  CFD9 F010          	movff	fsr2l,??_ISR_Alta+8
 17527  006124  CFDA F011          	movff	fsr2h,??_ISR_Alta+9
 17528  006128  CFF3 F012          	movff	prodl,??_ISR_Alta+10
 17529  00612C  CFF4 F013          	movff	prodh,??_ISR_Alta+11
 17530  006130  CFF6 F014          	movff	tblptrl,??_ISR_Alta+12
 17531  006134  CFF7 F015          	movff	tblptrh,??_ISR_Alta+13
 17532  006138  CFF8 F016          	movff	tblptru,??_ISR_Alta+14
 17533  00613C  CFF5 F017          	movff	tablat,??_ISR_Alta+15
 17534                           
 17535                           ;parcheggio.c: 106: if (INTCON2bits.INTEDG0 == 1) {
 17536  006140  ACF1               	btfss	intcon2,6,c	;volatile
 17537  006142  D007               	goto	i2l700
 17538                           
 17539                           ;parcheggio.c: 107: INTCON2bits.INTEDG0 = 0;
 17540  006144  9CF1               	bcf	intcon2,6,c	;volatile
 17541                           
 17542                           ;parcheggio.c: 108: TMR3H = 0;
 17543  006146  0E00               	movlw	0
 17544  006148  6EB3               	movwf	4019,c	;volatile
 17545                           
 17546                           ;parcheggio.c: 109: TMR3L = 0;
 17547  00614A  0E00               	movlw	0
 17548  00614C  6EB2               	movwf	4018,c	;volatile
 17549                           
 17550                           ;parcheggio.c: 110: distance_error = 0;
 17551  00614E  9845               	bcf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 17552                           
 17553                           ;parcheggio.c: 111: } else {
 17554  006150  D02C               	goto	i2l6553
 17555  006152                     i2l700:
 17556                           
 17557                           ;parcheggio.c: 112: TMR3H_temp = TMR3H;
 17558  006152  CFB3 F041          	movff	4019,_TMR3H_temp	;volatile
 17559                           
 17560                           ;parcheggio.c: 113: TMR3L_temp = TMR3L;
 17561  006156  CFB2 F042          	movff	4018,_TMR3L_temp	;volatile
 17562                           
 17563                           ;parcheggio.c: 114: timerValue2 = TMR3H_temp;
 17564  00615A  C041  F03E         	movff	_TMR3H_temp,_timerValue2	;volatile
 17565  00615E  6A3F               	clrf	_timerValue2+1,c	;volatile
 17566                           
 17567                           ;parcheggio.c: 115: timerValue2 = ((timerValue2 << 8) | (TMR3L_temp));
 17568  006160  503E               	movf	_timerValue2,w,c	;volatile
 17569  006162  6E08               	movwf	??_ISR_Alta& (0+255),c
 17570  006164  5042               	movf	_TMR3L_temp,w,c	;volatile
 17571  006166  6E3E               	movwf	_timerValue2,c	;volatile
 17572  006168  C008  F03F         	movff	??_ISR_Alta,_timerValue2+1	;volatile
 17573                           
 17574                           ;parcheggio.c: 116: pulse_time = timerValue2 / 2;
 17575  00616C  90D8               	bcf	status,0,c
 17576  00616E  303F               	rrcf	_timerValue2+1,w,c	;volatile
 17577  006170  6E08               	movwf	??_ISR_Alta& (0+255),c
 17578  006172  303E               	rrcf	_timerValue2,w,c	;volatile
 17579  006174  0101               	movlb	1	; () banked
 17580  006176  6F56               	movwf	_pulse_time& (0+255),b	;volatile
 17581  006178  C008  F157         	movff	??_ISR_Alta,_pulse_time+1	;volatile
 17582                           
 17583                           ; BSR set to: 1
 17584                           ;parcheggio.c: 117: sensor_distance[MUX_index] = pulse_time / 58;
 17585  00617C  C156  F001         	movff	_pulse_time,___lwdiv@dividend	;volatile
 17586  006180  C157  F002         	movff	_pulse_time+1,___lwdiv@dividend+1	;volatile
 17587  006184  0E00               	movlw	0
 17588  006186  6E04               	movwf	___lwdiv@divisor+1,c
 17589  006188  0E3A               	movlw	58
 17590  00618A  6E03               	movwf	___lwdiv@divisor,c
 17591  00618C  EC3C  F032         	call	___lwdiv	;wreg free
 17592  006190  5040               	movf	_MUX_index,w,c	;volatile
 17593  006192  0D02               	mullw	2
 17594  006194  0E28               	movlw	low _sensor_distance
 17595  006196  24F3               	addwf	prodl,w,c
 17596  006198  6ED9               	movwf	fsr2l,c
 17597  00619A  0E00               	movlw	high _sensor_distance
 17598  00619C  20F4               	addwfc	prodh,w,c
 17599  00619E  6EDA               	movwf	fsr2h,c
 17600  0061A0  C001  FFDE         	movff	?___lwdiv,postinc2
 17601  0061A4  C002  FFDD         	movff	?___lwdiv+1,postdec2
 17602                           
 17603                           ;parcheggio.c: 118: INTCON2bits.INTEDG0 = 1;
 17604  0061A8  8CF1               	bsf	intcon2,6,c	;volatile
 17605  0061AA                     i2l6553:
 17606                           
 17607                           ;parcheggio.c: 119: }
 17608                           ;parcheggio.c: 120: INTCONbits.INT0IF = 0;
 17609  0061AA  92F2               	bcf	intcon,1,c	;volatile
 17610  0061AC  C017  FFF5         	movff	??_ISR_Alta+15,tablat
 17611  0061B0  C016  FFF8         	movff	??_ISR_Alta+14,tblptru
 17612  0061B4  C015  FFF7         	movff	??_ISR_Alta+13,tblptrh
 17613  0061B8  C014  FFF6         	movff	??_ISR_Alta+12,tblptrl
 17614  0061BC  C013  FFF4         	movff	??_ISR_Alta+11,prodh
 17615  0061C0  C012  FFF3         	movff	??_ISR_Alta+10,prodl
 17616  0061C4  C011  FFDA         	movff	??_ISR_Alta+9,fsr2h
 17617  0061C8  C010  FFD9         	movff	??_ISR_Alta+8,fsr2l
 17618  0061CC  C00F  FFE2         	movff	??_ISR_Alta+7,fsr1h
 17619  0061D0  C00E  FFE1         	movff	??_ISR_Alta+6,fsr1l
 17620  0061D4  C00D  FFEA         	movff	??_ISR_Alta+5,fsr0h
 17621  0061D8  C00C  FFE9         	movff	??_ISR_Alta+4,fsr0l
 17622  0061DC  C00B  FFFB         	movff	??_ISR_Alta+3,pclatu
 17623  0061E0  C00A  FFFA         	movff	??_ISR_Alta+2,pclath
 17624  0061E4  9248               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 17625  0061E6  0011               	retfie		f
 17626  0061E8                     __end_of_ISR_Alta:
 17627                           	opt stack 0
 17628                           pclatu	equ	0xFFB
 17629                           pclath	equ	0xFFA
 17630                           tblptru	equ	0xFF8
 17631                           tblptrh	equ	0xFF7
 17632                           tblptrl	equ	0xFF6
 17633                           tablat	equ	0xFF5
 17634                           prodh	equ	0xFF4
 17635                           prodl	equ	0xFF3
 17636                           intcon	equ	0xFF2
 17637                           intcon2	equ	0xFF1
 17638                           postinc0	equ	0xFEE
 17639                           fsr0h	equ	0xFEA
 17640                           fsr0l	equ	0xFE9
 17641                           wreg	equ	0xFE8
 17642                           indf1	equ	0xFE7
 17643                           postdec1	equ	0xFE5
 17644                           fsr1h	equ	0xFE2
 17645                           fsr1l	equ	0xFE1
 17646                           bsr	equ	0xFE0
 17647                           indf2	equ	0xFDF
 17648                           postinc2	equ	0xFDE
 17649                           postdec2	equ	0xFDD
 17650                           plusw2	equ	0xFDB
 17651                           fsr2h	equ	0xFDA
 17652                           fsr2l	equ	0xFD9
 17653                           status	equ	0xFD8
 17654                           
 17655 ;; *************** function ___lwdiv *****************
 17656 ;; Defined at:
 17657 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
 17658 ;; Parameters:    Size  Location     Type
 17659 ;;  dividend        2    0[COMRAM] unsigned int 
 17660 ;;  divisor         2    2[COMRAM] unsigned int 
 17661 ;; Auto vars:     Size  Location     Type
 17662 ;;  quotient        2    4[COMRAM] unsigned int 
 17663 ;;  counter         1    6[COMRAM] unsigned char 
 17664 ;; Return value:  Size  Location     Type
 17665 ;;                  2    0[COMRAM] unsigned int 
 17666 ;; Registers used:
 17667 ;;		wreg, status,2, status,0
 17668 ;; Tracked objects:
 17669 ;;		On entry : 0/0
 17670 ;;		On exit  : 0/0
 17671 ;;		Unchanged: 0/0
 17672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17673 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17674 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17676 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17677 ;;Total ram usage:        7 bytes
 17678 ;; Hardware stack levels used:    1
 17679 ;; This function calls:
 17680 ;;		Nothing
 17681 ;; This function is called by:
 17682 ;;		_ISR_Alta
 17683 ;; This function uses a non-reentrant model
 17684 ;;
 17685                           
 17686                           	psect	text40
 17687  006478                     __ptext40:
 17688                           	opt stack 0
 17689  006478                     ___lwdiv:
 17690                           	opt stack 21
 17691                           
 17692                           ;incstack = 0
 17693  006478  0E00               	movlw	0
 17694  00647A  6E06               	movwf	___lwdiv@quotient+1,c
 17695  00647C  0E00               	movlw	0
 17696  00647E  6E05               	movwf	___lwdiv@quotient,c
 17697  006480  5003               	movf	___lwdiv@divisor,w,c
 17698  006482  1004               	iorwf	___lwdiv@divisor+1,w,c
 17699  006484  B4D8               	btfsc	status,2,c
 17700  006486  D01C               	goto	i2l1302
 17701  006488  0E01               	movlw	1
 17702  00648A  6E07               	movwf	___lwdiv@counter,c
 17703  00648C  D004               	goto	i2l6281
 17704  00648E                     i2l6279:
 17705  00648E  90D8               	bcf	status,0,c
 17706  006490  3603               	rlcf	___lwdiv@divisor,f,c
 17707  006492  3604               	rlcf	___lwdiv@divisor+1,f,c
 17708  006494  2A07               	incf	___lwdiv@counter,f,c
 17709  006496                     i2l6281:
 17710  006496  AE04               	btfss	___lwdiv@divisor+1,7,c
 17711  006498  D7FA               	goto	i2l6279
 17712  00649A                     i2l6283:
 17713  00649A  90D8               	bcf	status,0,c
 17714  00649C  3605               	rlcf	___lwdiv@quotient,f,c
 17715  00649E  3606               	rlcf	___lwdiv@quotient+1,f,c
 17716  0064A0  5003               	movf	___lwdiv@divisor,w,c
 17717  0064A2  5C01               	subwf	___lwdiv@dividend,w,c
 17718  0064A4  5004               	movf	___lwdiv@divisor+1,w,c
 17719  0064A6  5802               	subwfb	___lwdiv@dividend+1,w,c
 17720  0064A8  A0D8               	btfss	status,0,c
 17721  0064AA  D005               	goto	i2l6291
 17722  0064AC  5003               	movf	___lwdiv@divisor,w,c
 17723  0064AE  5E01               	subwf	___lwdiv@dividend,f,c
 17724  0064B0  5004               	movf	___lwdiv@divisor+1,w,c
 17725  0064B2  5A02               	subwfb	___lwdiv@dividend+1,f,c
 17726  0064B4  8005               	bsf	___lwdiv@quotient,0,c
 17727  0064B6                     i2l6291:
 17728  0064B6  90D8               	bcf	status,0,c
 17729  0064B8  3204               	rrcf	___lwdiv@divisor+1,f,c
 17730  0064BA  3203               	rrcf	___lwdiv@divisor,f,c
 17731  0064BC  2E07               	decfsz	___lwdiv@counter,f,c
 17732  0064BE  D7ED               	goto	i2l6283
 17733  0064C0                     i2l1302:
 17734  0064C0  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 17735  0064C4  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 17736  0064C8  0012               	return		;funcret
 17737  0064CA                     __end_of___lwdiv:
 17738                           	opt stack 0
 17739                           pclatu	equ	0xFFB
 17740                           pclath	equ	0xFFA
 17741                           tblptru	equ	0xFF8
 17742                           tblptrh	equ	0xFF7
 17743                           tblptrl	equ	0xFF6
 17744                           tablat	equ	0xFF5
 17745                           prodh	equ	0xFF4
 17746                           prodl	equ	0xFF3
 17747                           intcon	equ	0xFF2
 17748                           intcon2	equ	0xFF1
 17749                           postinc0	equ	0xFEE
 17750                           fsr0h	equ	0xFEA
 17751                           fsr0l	equ	0xFE9
 17752                           wreg	equ	0xFE8
 17753                           indf1	equ	0xFE7
 17754                           postdec1	equ	0xFE5
 17755                           fsr1h	equ	0xFE2
 17756                           fsr1l	equ	0xFE1
 17757                           bsr	equ	0xFE0
 17758                           indf2	equ	0xFDF
 17759                           postinc2	equ	0xFDE
 17760                           postdec2	equ	0xFDD
 17761                           plusw2	equ	0xFDB
 17762                           fsr2h	equ	0xFDA
 17763                           fsr2l	equ	0xFD9
 17764                           status	equ	0xFD8
 17765                           pclatu	equ	0xFFB
 17766                           pclath	equ	0xFFA
 17767                           tblptru	equ	0xFF8
 17768                           tblptrh	equ	0xFF7
 17769                           tblptrl	equ	0xFF6
 17770                           tablat	equ	0xFF5
 17771                           prodh	equ	0xFF4
 17772                           prodl	equ	0xFF3
 17773                           intcon	equ	0xFF2
 17774                           intcon2	equ	0xFF1
 17775                           postinc0	equ	0xFEE
 17776                           fsr0h	equ	0xFEA
 17777                           fsr0l	equ	0xFE9
 17778                           wreg	equ	0xFE8
 17779                           indf1	equ	0xFE7
 17780                           postdec1	equ	0xFE5
 17781                           fsr1h	equ	0xFE2
 17782                           fsr1l	equ	0xFE1
 17783                           bsr	equ	0xFE0
 17784                           indf2	equ	0xFDF
 17785                           postinc2	equ	0xFDE
 17786                           postdec2	equ	0xFDD
 17787                           plusw2	equ	0xFDB
 17788                           fsr2h	equ	0xFDA
 17789                           fsr2l	equ	0xFD9
 17790                           status	equ	0xFD8
 17791                           
 17792                           	psect	rparam
 17793  0000                     pclatu	equ	0xFFB
 17794                           pclath	equ	0xFFA
 17795                           tblptru	equ	0xFF8
 17796                           tblptrh	equ	0xFF7
 17797                           tblptrl	equ	0xFF6
 17798                           tablat	equ	0xFF5
 17799                           prodh	equ	0xFF4
 17800                           prodl	equ	0xFF3
 17801                           intcon	equ	0xFF2
 17802                           intcon2	equ	0xFF1
 17803                           postinc0	equ	0xFEE
 17804                           fsr0h	equ	0xFEA
 17805                           fsr0l	equ	0xFE9
 17806                           wreg	equ	0xFE8
 17807                           indf1	equ	0xFE7
 17808                           postdec1	equ	0xFE5
 17809                           fsr1h	equ	0xFE2
 17810                           fsr1l	equ	0xFE1
 17811                           bsr	equ	0xFE0
 17812                           indf2	equ	0xFDF
 17813                           postinc2	equ	0xFDE
 17814                           postdec2	equ	0xFDD
 17815                           plusw2	equ	0xFDB
 17816                           fsr2h	equ	0xFDA
 17817                           fsr2l	equ	0xFD9
 17818                           status	equ	0xFD8
 17819                           
 17820                           	psect	temp
 17821  000048                     btemp:
 17822                           	opt stack 0
 17823  000048                     	ds	1
 17824  0000                     int$flags	set	btemp
 17825                           pclatu	equ	0xFFB
 17826                           pclath	equ	0xFFA
 17827                           tblptru	equ	0xFF8
 17828                           tblptrh	equ	0xFF7
 17829                           tblptrl	equ	0xFF6
 17830                           tablat	equ	0xFF5
 17831                           prodh	equ	0xFF4
 17832                           prodl	equ	0xFF3
 17833                           intcon	equ	0xFF2
 17834                           intcon2	equ	0xFF1
 17835                           postinc0	equ	0xFEE
 17836                           fsr0h	equ	0xFEA
 17837                           fsr0l	equ	0xFE9
 17838                           wreg	equ	0xFE8
 17839                           indf1	equ	0xFE7
 17840                           postdec1	equ	0xFE5
 17841                           fsr1h	equ	0xFE2
 17842                           fsr1l	equ	0xFE1
 17843                           bsr	equ	0xFE0
 17844                           indf2	equ	0xFDF
 17845                           postinc2	equ	0xFDE
 17846                           postdec2	equ	0xFDD
 17847                           plusw2	equ	0xFDB
 17848                           fsr2h	equ	0xFDA
 17849                           fsr2l	equ	0xFD9
 17850                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    80
    Data        11
    BSS         196
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      71
    BANK0           160    133     137
    BANK1           256     77     250
    BANK2           256      8       8
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_speed(BANK1[8]), data_brake(BANK1[8]), data_steering(BANK1[8]), data_correction(BANK1[8]), 
		 -> data_test(BANK1[8]), data(BANK1[8]), sensor_distance_short(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->i1_CANsendMessage

Critical Paths under _ISR_Alta in COMRAM

    _ISR_Alta->___lwdiv

Critical Paths under _main in BANK0

    _park_search->_parallelo
    _park_routine->_parallelo
    _parallelo->_asin
    _can_send->_CANsendMessage
    _sin->_floor
    _floor->___xxtofl
    ___xxtofl->___fltol
    ___fltol->___flneg
    ___flsub->_floor
    _asin->_sqrt
    _sqrt->___flneg
    _atan->___flge
    _fabs->___flneg
    ___flneg->___fladd
    _eval_poly->___fladd
    ___flmul->___fldiv
    ___fladd->___flmul
    ___flge->_fabs
    _delay_s->_delay_ms
    _delay_ms->___wmul
    _configurations->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _ISR_Alta in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_park_routine
    _park_routine->_matematica
    _parallelo->_asin
    _matematica->_cos
    _cos->_asin
    _sin->___flsub
    _asin->_atan

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_park_routine

Critical Paths under _ISR_Bassa in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Bassa in BANK3

    None.

Critical Paths under _ISR_Alta in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Bassa in BANK4

    None.

Critical Paths under _ISR_Alta in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Bassa in BANK5

    None.

Critical Paths under _ISR_Alta in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Bassa in BANK6

    None.

Critical Paths under _ISR_Alta in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Bassa in BANK7

    None.

Critical Paths under _ISR_Alta in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Bassa in BANK8

    None.

Critical Paths under _ISR_Alta in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Bassa in BANK9

    None.

Critical Paths under _ISR_Alta in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Bassa in BANK10

    None.

Critical Paths under _ISR_Alta in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Bassa in BANK11

    None.

Critical Paths under _ISR_Alta in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Bassa in BANK12

    None.

Critical Paths under _ISR_Alta in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  355778
                                            132 BANK0      1     1      0
                       _CANisTxReady
                     _CANsendMessage
                    _can_interpreter
                     _configurations
                           _delay_ms
                       _park_routine
                        _park_search
 ---------------------------------------------------------------------------------
 (1) _park_search                                          2     2      0   95129
                                             37 BANK1      2     2      0
                       _CANisTxReady
                     _CANsendMessage
                           ___xxtofl
                                _abs
                          _parallelo
 ---------------------------------------------------------------------------------
 (1) _park_routine                                        12    12      0  246031
                                             73 BANK1      4     4      0
                                              0 BANK2      8     8      0
                       _CANisTxReady
                     _CANsendMessage
                            ___fladd
                            ___flneg
                            ___fltol
                           ___xxtofl
                           _can_send
                           _delay_ms
                            _delay_s
                         _matematica
                          _parallelo
 ---------------------------------------------------------------------------------
 (2) _parallelo                                            2     2      0   86216
                                            130 BANK0      2     2      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _abs
                               _asin
                           _can_send
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _can_send                                             0     0      0    7882
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (4) _CANsendMessage                                      16     8      8    7845
                                             23 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (4) _CANisTxReady                                         1     1      0      37
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     247
                                             23 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _matematica                                          32    32      0  133218
                                             45 BANK1     28    28      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                               _asin
                                _cos
 ---------------------------------------------------------------------------------
 (3) _cos                                                 12     8      4   57965
                                             37 BANK1      8     4      4
                            ___fladd
                             ___flge
                               _asin (ARG)
                                _sin
 ---------------------------------------------------------------------------------
 (4) _sin                                                 17    13      4   49794
                                              8 BANK1     17    13      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                          _eval_poly
                              _floor
 ---------------------------------------------------------------------------------
 (5) _floor                                               10     6      4   10191
                                            121 BANK0     10     6      4
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (6) _frexp                                                8     2      6     452
                                             23 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     784
                                            107 BANK0     14    10      4
                            ___fltol (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     722
                                             97 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    6777
                                              0 BANK1      8     0      8
                            ___fladd
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (3) _asin                                                36    32      4   57438
                                            126 BANK0      4     0      4
                                             17 BANK1     20    20      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                               _atan
                               _fabs
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _sqrt                                                29    25      4    1467
                                             97 BANK0     29    25      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (4) _atan                                                21    17      4   34323
                                            113 BANK0      4     0      4
                                              0 BANK1     17    17      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                          _eval_poly
                               _fabs
 ---------------------------------------------------------------------------------
 (4) _fabs                                                 4     0      4    1621
                                             97 BANK0      4     0      4
                            ___flneg
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4    1297
                                             93 BANK0      4     0      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           16     8      8   13009
                                             93 BANK0     16     8      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    5541
                                             48 BANK0     25    17      8
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    6290
                                             73 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1498
                                            101 BANK0     12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4347
                                             23 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (2) _delay_s                                              2     2      0     870
                                             31 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             2     0      2     802
                                             29 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     386
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _configurations                                       0     0      0    5934
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             37 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      4     4      0       0
                                             23 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_Bassa                                           23    23      0    4995
                                              0 BANK0     23    23      0
                  _CANreceiveMessage
                     i1_CANisTxReady
                   i1_CANsendMessage
 ---------------------------------------------------------------------------------
 (8) i1_CANsendMessage                                    16     8      8    3197
                                             23 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (8) i1_CANisTxReady                                       1     1      0      37
                                             23 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _CANreceiveMessage                                   12    10      2    1594
                                             23 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_Alta                                            16    16      0     290
                                              7 COMRAM    16    16      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (10) ___lwdiv                                             7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisTxReady
   _CANsendMessage
   _can_interpreter
   _configurations
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _delay_ms
     ___wmul
   _park_routine
     _CANisTxReady
     _CANsendMessage
     ___fladd
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
     ___flneg
       ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___flneg (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
     ___xxtofl
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       _abs (ARG)
     _can_send
       _CANisTxReady
       _CANsendMessage
     _delay_ms
       ___wmul
     _delay_s
       _delay_ms
         ___wmul
     _matematica
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flmul
         ___fldiv (ARG)
       ___flneg
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _cos
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _asin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _atan
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___flmul
               ___fldiv (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _eval_poly
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _fabs
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           _sqrt
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _sin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flsub
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _floor (ARG)
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___flge
                 _fabs (ARG)
                   ___flneg
                     ___fladd (ARG)
                       ___fldiv (ARG)
                       ___flmul (ARG)
                         ___fldiv (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
               ___xxtofl
                 ___fltol (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___flneg (ARG)
                     ___fladd (ARG)
                       ___fldiv (ARG)
                       ___flmul (ARG)
                         ___fldiv (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                 _abs (ARG)
               _frexp
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _floor
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___flneg (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___xxtofl
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
               _abs (ARG)
             _frexp
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___flmul
         ___fldiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _abs (ARG)
       _abs
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
   _park_search
     _CANisTxReady
     _CANsendMessage
     ___xxtofl
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       _abs (ARG)
     _abs
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___flmul
         ___fldiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _abs (ARG)
       _abs
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)

 _ISR_Bassa (ROOT)
   _CANreceiveMessage
   i1_CANisTxReady
   i1_CANsendMessage

 _ISR_Alta (ROOT)
   ___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      8       8       9        3.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     4D      FA       7       97.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     85      89       5       85.6%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     27      47       1       75.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1D2      20        0.0%
DATA                 0      0     1D2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sat May 28 19:31:53 2016

                ___fldiv@aexp 008F                  ___fldiv@bexp 008E                             _n 0138  
                           _x 0144                             _z 0148          __end_of_CANSetFilter 1858  
                ___fldiv@sign 0083            delay_s@repeat_loop 0080                            bsr 000FE0  
         ___wmul@multiplicand 0079                   __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                 __CFG_OSC$HS 000000                    _MUX_select 0100                           l402 1F30  
                         l403 1F34                           l500 15B4                           l404 1F40  
                         l501 15B8                           l510 16C4                           l502 15C4  
                         l511 16D0                           l503 15C8                           l520 17DC  
                         l512 16D4                           l504 15D4                           l440 48AC  
                         l432 486C                           l521 17E0                           l513 16E0  
                         l433 4870                           l522 17EC                           l514 16E4  
                         l450 49B8                           l434 487C                           l370 1918  
                         l523 17F0                           l515 16F0                           l507 16B0  
                         l451 49C4                           l443 4984                           l435 4880  
                         l363 1ADC                           l524 17FC                           l508 16B4  
                         l444 4988                           l436 488C                           l380 1AF6  
                         l364 186E                           l525 1800                           l509 16C0  
                         l445 4994                           l437 4890                           l381 1BEE  
                         l373 1A28                           l365 1872                           l526 180C  
                         l518 17CC                           l470 1276                           l446 4998  
                         l438 489C                           l358 5946                           l390 1CBC  
                         l382 1B7E                           l374 1A2C                           l366 196A  
                         l519 17D0                           l471 1282                           l463 1242  
                         l447 49A4                           l439 48A0                           l359 5950  
                         l383 1B88                           l375 1A38                           l367 18FA  
                         l480 138C                           l464 1246                           l448 49A8  
                         l384 1B92                           l368 1904                           l481 1390  
                         l465 1252                           l449 49B4                           l393 1D76  
                         l385 1B9C                           l369 190E                           l490 149C  
                         l482 139C                           l474 135C                           l466 1256  
                         l394 1D7A                           l378 1D60                           l491 14A8  
                         l475 1360                           l467 1262                           l395 1E72  
                         l379 1AF2                           l492 14AC                           l476 136C  
                         l468 1266                           l556 6668                           l396 1E02  
                         l388 1CAC                           l493 14B8                           l485 1478  
                         l477 1370                           l469 1272                           l397 1E0C  
                         l389 1CB0                           l486 147C                           l478 137C  
                         l398 1E16                           l487 1488                           l479 1380  
                         l399 1E20                           l496 1594                           l488 148C  
                         l497 1598                           l489 1498                           l569 65E8  
                         l498 15A4                           l834 5276                           l746 5880  
                         l499 15A8                           l748 572A                           l782 3B2A  
                         l759 587C                           l792 3D74                           l795 3DFE  
                         l779 3AEC                           l788 3B58                           l789 3CDC  
                         l895 6614                  __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000  
                         _abs 65F2                           _asd 0229                           _dir 022B  
                         _cos 602C                           _msg 015C                           _sin 4A10  
                         prod 000FF3                           wreg 000FE8               ?_configurations 0001  
                ___flmul@aexp 009D                  ___flmul@bexp 00A2                  ___flmul@sign 009C  
                ___flmul@temp 00A7                  ___flmul@prod 00A3                  __CFG_LVP$OFF 000000  
                ___fltol@exp1 00CA                  __CFG_WDT$OFF 000000                          l1102 5B90  
                        ?_abs 0077                          l1410 44E0                          l1421 4586  
                        l1413 4488                          l1095 653E                          l1440 3666  
                        l1354 32EA                          l1338 4D16                          l1419 4518  
                        l1371 345E                          l1355 32DE                          l1507 5CF2  
                        l1380 34F2                          l1356 32AA                          l1447 3902  
                        l1457 3A14                          l1449 3970                          l1482 5540  
                        l1496 5648                          l1497 5660                          l1489 55EC  
                        l5301 48F6                          ?_cos 01C8                          l5235 6694  
                        l5405 103C                          l5253 472A                          l7021 3916  
                        l5503 13A0                          l5423 10F6                          l5351 0E10  
                        l5327 49C8                          l7031 396A                          l7015 38EC  
                        l5441 11B0                          l7201 42D0                          l7041 39C0  
                        l5611 173A                          l7211 42FE                          l7115 5EB0  
                        l5605 16F4                          l5509 13E6                          l5269 47E0  
                        l7221 432E                          l7045 39E6                          l7133 5F16  
                        l7125 5EE0                          l8101 56DA                          l5543 1502  
                        l5295 48B0                          l7311 4604                          l7231 435C  
                        l7207 42F4                          l7071 5AEC                          l7055 3A34  
                        l7047 39FA                          l7127 5EF0                          l7119 5EC4  
                        l7151 5580                          l7143 5550                          l5537 14BC  
                        l5369 0EC8                          l7321 464A                          l7313 4618  
                        l7081 5BDC                          l7057 3A3E                          l7129 5EFA  
                        l7161 562A                          l7153 5590                          l8121 57A4  
                        l8113 5788                          l5571 15D8                          l5475 12CC  
                        l5387 0F82                          l7323 464E                          l7315 463A  
                        l7307 45D6                          l7251 43DE                          l7243 43B0  
                        l7227 4352                          l7075 5B3E                          l7067 5A9E  
                        l7163 563A                          l7155 55CE                          l5469 1286  
                        l7261 445C                          l7149 5578                          l7501 1CA0  
                        l7405 1922                          l8125 57DC                          l8109 5726  
                        l5639 1810                          l7175 56B2                          l7431 1A3C  
                        l8303 3EDA                          l8143 583E                          l5577 161E  
                        l7281 4502                          l7345 5D5A                          l7089 6576  
                        l7185 62D4                          l7425 1A1C                          l7275 44DC  
                        l7347 5DFE                          l7099 5E42                          l7363 5C34  
                        l7507 1CC0                          l5781 59A0                          l5773 593E  
                        l7269 4494                          l6821 32BE                          l7621 3F06  
                        l8173 3AE2                          l8093 56C6                          l5775 5954  
                        l7287 452C                          l6823 32C4                          l6743 314C  
                        l7367 5C56                          l7359 5C20                          l8159 3A66  
                        l7297 4580                          l6921 3588                          l6913 355A  
                        l6809 322A                          l6761 3196                          l6737 3128  
                        l7705 4292                          l7641 3F84                          l7633 3F52  
                        l7481 1BA6                          l7801 5F2C                          l8193 3B50  
                        l8169 3AAA                          l5779 595C                          l6923 358C  
                        l6851 335C                          l6827 32CE                          l6771 31C4  
                        l6755 3182                          l6747 3156                          l7635 3F64  
                        l7811 5F7A                          l6917 357C                          l6909 3548  
                        l6845 334C                          l6837 330E                          l7741 54B8  
                        l7725 52F0                          l7661 3FF6                          l7653 3FC6  
                        l7557 1E2A                          l7821 5FF2                          l8285 3E58  
                        l6847 3352                          l6855 336E                          l6767 31BA  
                        l7671 4078                          l7831 4D86                          l7583 1F44  
                        l8287 3E64                          l6929 35A0                          l6873 3490  
                        l6865 343E                          l6945 35F4                          l7745 54D0  
                        l7729 5364                          l7673 4080                          l7577 1F24  
                        l7817 5FB8                          l8297 3E92                          l6883 34B2  
                        l6891 34CC                          l6779 31EE                          l6963 364E  
                        l6947 35FA                          l6939 35D0                          l7843 4EB4  
                        l7915 5292                          ?_sin 01AB                          l6973 368E  
                        l6965 3654                          l6957 362A                          l6949 360C  
                        l7677 4106                          l7685 417C                          l7773 4BE6  
                        l7757 4A46                          l7909 5238                          l7917 5298  
                        l6879 34A6                          l7679 4140                          l7855 4F96  
                        l7871 60B4                          l6889 34C6                          l6969 367A  
                        l7697 425C                          l7769 4B70                          l7883 663C  
                        l6899 34EC                          l7789 65DC                          l7879 662A  
                        l8687 6236                          l8695 629C                          l8689 6244  
                        _LATA 000F89                          _LATB 000F8A                          _LATC 000F8B  
                        u6140 46A6                          u6145 469A                          u6155 4706  
                        u6500 0FB8                          u6420 0E44                          u6180 475C  
                        u7070 1830                          u6350 49E8                          u6270 48D0  
                        u6505 0FAC                          u6425 0E38                          u6185 4750  
                        u7075 1824                          u6515 1018                          u6435 0EA4  
                        u6355 49DC                          u6275 48C4                          u6195 47BC  
                        u6540 1072                          u6460 0EFE                          u6380 0D8C  
                        u9200 39D4                          u9120 388E                          u6545 1066  
                        u6465 0EF2                          u6385 0D80                          u6555 10D2  
                        u6475 0F5E                          u6395 0DEC                          u6580 112C  
                        u9300 5E62                          u9125 3882                          u6910 15F8  
                        u6830 14DC                          u6750 13C0                          u6670 12A6  
                        u6585 1120                          u9305 5E56                          u6915 15EC  
                        u6835 14D0                          u6755 13B4                          u6675 129A  
                        u6595 118C                          u8740 3274                          u6990 1714  
                        u8750 328C                          u9470 6306                          u8760 328E  
                        u6995 1708                          u9478 630A                          u9750 5C44  
                        u9680 45EA                          u9850 1942                          u9860 198E  
                        u9855 1936                          u9865 1982                          u9875 19EE  
                        u9980 1BC6                          u9990 1C12                          u9985 1BBA  
                        u9995 1C06      __end_ofi1_CANsendMessage 2674           __size_of_CANSetMask 039E  
                        _Pmin 0128                          abs@a 0077                          _alfa 012C  
                        _fabs 6512                          _data 016B                          _beta 0130  
                        _atan 52A4                          _asin 4D28                          _main 61E8  
                        cos@f 01C8                          fsr0h 000FEA                          fsr1h 000FE2  
                        fsr0l 000FE9                          fsr2h 000FDA                          indf1 000FE7  
                        fsr1l 000FE1                          indf2 000FDF                          fsr2l 000FD9  
                        btemp 0048                          _sqrt 3EE8                          pclat 000FFA  
                        sin@f 01AB                          sin@y 01AF                          prodh 000FF4  
                        prodl 000FF3                          start 034C                 __CFG_IESO$OFF 000000  
             ___fldiv@new_exp 0088                delay_s@value_s 007F           ISR_Bassa@PORTA_temp 0075  
               __CFG_MCLRE$ON 000000                  ___param_bank 000010              _CANOperationMode 668C  
                       ??_abs 0079                         ??_cos 00E3                         ??_sin 00E3  
  __size_of_CANreceiveMessage 050C                         ?_fabs 00C1                 ___fltol@sign1 00C9  
                       ?_atan 00D1                         ?_asin 00DE               __end_of___fladd 35B2  
                       ?_main 0001               __end_of___fldiv 4672               __end_of___flneg 6588  
             __end_of___flmul 3A58               __end_of___flsub 6512               __end_of___fltol 5F28  
                       ?_sqrt 00C1                         u10005 1C72                         u10110 1E4A  
                       u10120 1E96                         u11000 3A7C                         u10115 1E3E  
                       u10125 1E8A                         u10310 5320                         u11006 3A7E  
                       u10135 1EF6                         u10320 5322                         u11140 3E36  
                       u10600 5290                         _T0CON 000FD5                         u10380 4B6A  
                       u10390 4B6C                         u10551 50CC                         u10561 50D8  
                       u10940 57F0                         u10860 56D6                         _T3CON 000FB1  
                       u11917 65DE                         u11890 6256            __size_of_ISR_Bassa 0334  
                       u11896 6258               __end_of___lwdiv 64CA                         i1l410 2E96  
                       i1l402 25D0                         i1l403 25D4                         i1l404 25DE  
                       i1l370 2082                         i1l363 2214                         i1l380 222C  
                       i1l364 1FF8                         i1l381 22FC                         i1l373 2170  
                       i1l365 1FFC                         i1l390 23AE                         i1l382 229A  
                       i1l374 2174                         i1l366 20CC                         i1l383 22A2  
                       i1l375 217E                         i1l367 206A                         i1l384 22AA  
                       i1l368 2072                         i1l393 2458                         i1l385 22B2  
                       i1l369 207A                         i1l394 245C                         i1l378 2444  
                       i1l706 008C                         i1l395 252C                         i1l379 2228  
                       i1l731 0304                         i1l556 6688                         i1l396 24CA  
                       i1l388 23A0                         i1l397 24D2                         i1l389 23A4  
                       i1l725 028C                         i1l398 24DA                         i1l718 0188  
                       i1l399 24E2                         i1l728 0300                         i2l700 6152  
                       _TMR0H 000FD7                         _TMR0L 000FD6                         _TMR3H 000FB3  
                       _TMR3L 000FB2                         _PORTA 000F80                         _TRISA 000F92  
                       _TRISB 000F93                         _TRISC 000F94            __end_ofsin@coeff_a 0D41  
          __end_ofsin@coeff_b 0D51                 __CFG_PWRT$OFF 000000              __end_of_ISR_Alta 61E8  
             __end_of_delay_s 664A                 __CFG_WRT0$OFF 000000                         _J_var 0120  
               __CFG_WRT1$OFF 000000                         _K_var 0124                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000            CANInitialize@flags 0089                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000                         _bordo 0134  
                       fabs@d 00C1                         _first 0230                         _floor 5BE0  
                       _frexp 62AE                         _errno 0152                         atan@f 00D1  
                       atan@x 01A7                         atan@y 01A3                         asin@x 00DE  
                       asin@y 01C0                __pbitbssCOMRAM 0228                         sin@x2 01B7  
                       tablat 000FF5          __end_of_CANisTxReady 666E                         plusw2 000FDB  
                       sqrt@a 00C1                         sqrt@i 00CA                         sqrt@p 00CF  
                       status 000FD8                  ?_park_search 0001               __initialization 6416  
                __end_of_fabs 6550                  __end_of_atan 54F6                  __end_of_asin 503A  
                __end_of_main 62AE                  __end_of_sqrt 42B2                        ??_fabs 00C5  
                      ??_atan 00D5                        ??_asin 00E2                        ??_main 00E4  
           _park_routine$3693 0200             _park_routine$3694 0204                        ??_sqrt 00C5  
               __activetblptr 000003             _CANisTxReady$2800 0077                        _ADCON1 000FC1  
                      ?_floor 00D9                        ?_frexp 0077                        _CANCON 000F6F  
          _distance_received1 022E               __CFG_BBSIZ$1024 000000             _spazio_parcheggio 01F4  
               _avvicinamento 022A                        i2l1302 64C0                        i1l8011 2E04  
                      i1l8023 2E5E                        i1l8015 2E22                        i1l8007 2DE6  
                      i1l8025 2E90                        i1l8019 2E40                        i1l8061 2FF6  
                      i1l8081 30B8                        i1l8073 3080                        i1l8085 30D4  
                      i1l8077 309C                        i1l8069 3064                        i1l8341 208A  
                      i1l8087 3106                        i1l8513 25C6                        i1l8417 22BA  
                      i1l8361 2166                        i1l8443 23B2                        i1l8437 2396  
                      i1l8621 01C0                        i1l8519 25E2                        i1l8367 2182  
                      i1l8625 01C8                        i1l8493 24EA                        i1l8661 02C8  
                      i1l8653 0296                        i1l8647 0268                        i1l8583 0112  
                      i1l8591 017A                        i1l8567 00D2                        i2l6281 6496  
                      i1l8665 02D2                        i1l8585 011E                        i2l6291 64B6  
                      i2l6283 649A                        i1l8589 0150                        i2l6279 648E  
                      i2l6553 61AA                        i1l7999 2D76                        _RXB0D0 000F66  
                      _RXB0D1 000F67                        _RXB0D2 000F68                        _RXB0D3 000F69  
                      _RXB0D4 000F6A                        _RXB1D0 000F56                        _RXB0D5 000F6B  
                      _RXB1D1 000F57                        _RXB0D6 000F6C                        _RXB1D2 000F58  
                      _RXB0D7 000F6D                        _RXB1D3 000F59                        _RXB1D4 000F5A  
                      _RXB1D5 000F5B                        _RXB1D6 000F5C                        _RXB1D7 000F5D  
                      _TXB0D0 000F46                        _TXB0D1 000F47                        _TXB0D2 000F48  
                      _TXB0D3 000F49                        _TXB1D0 000F36                        _TXB0D4 000F4A  
                      _TXB1D1 000F37                        _TXB0D5 000F4B                        _TXB1D2 000F38  
                      _TXB0D6 000F4C                        _TXB1D3 000F39                        _TXB0D7 000F4D  
                      _TXB2D0 000F26                        _TXB1D4 000F3A                        _TXB2D1 000F27  
                      _TXB1D5 000F3B                        _TXB2D2 000F28                        _TXB1D6 000F3C  
                      _TXB2D3 000F29                        _TXB1D7 000F3D                        _TXB2D4 000F2A  
                      _TXB2D5 000F2B                        _TXB2D6 000F2C                        _TXB2D7 000F2D  
          CANsendMessage@data 007B              __end_of_can_send 602C            CANsendMessage@tamp 0083  
            __end_of___xxtofl 56C4             __end_of_ISR_Bassa 034C              __end_of_delay_ms 65F2  
       __size_of_CANSetFilter 0B06                __CFG_XINST$OFF 000000                        ___flge 5A50  
             _data_correction 017B                     ??___fladd 00B1                        ___wmul 6588  
                   ??___fldiv 007F                     ??___flneg 00C1                __CFG_STVREN$ON 000000  
                   ??___flmul 0098                     ??___flsub 00E3                     ??___fltol 00C5  
                   ??___lwdiv 0005                  ??_CANSetMask 007C                        _raggio 01F6  
                      clear_0 641C                        clear_1 6436                     ??_delay_s 007F  
                      floor@i 00DD                        floor@x 00D9               __CFG_BOREN$BOHW 000000  
     __size_ofi1_CANisTxReady 001E                  __pdataCOMRAM 0047                        sin@sgn 01BB  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                  _CANSetFilter 0D52                    ___flge@ff1 00C5  
                  ___flge@ff2 00C9                  ___xxtofl@arg 00D5                  ___xxtofl@exp 00D4  
                ___xxtofl@val 00CB                    __accesstop 0060       __end_of__initialization 646E  
          __end_of_CANSetMask 4A10               __CFG_PBADEN$OFF 000000                    ___flneg@f1 00BD  
               ?_park_routine 0001                  eval_poly@res 00C9                 ___rparam_used 000001  
                  ___fltol@f1 00C1                __pcstackCOMRAM 0001                     ?_ISR_Alta 0001  
                __pidataBANK1 66A2                 __end_of_floor 5D04                 __end_of_frexp 6342  
            ??_configurations 0091         CANSetFilter@numBuffer 0080                  _actual_speed 014C  
       __size_of_CANisTxReady 0024                       ??_floor 00DD                       ??_frexp 007D  
    __end_of_CANOperationMode 66A2                    __pbssBANK0 00E5                    __pbssBANK1 0100  
             _sensor_distance 0028            __size_of_eval_poly 0118             ?i1_CANsendMessage 0018  
                  _data_brake 0173                ??_park_routine 01EC       __size_of_CANsendMessage 078C  
                  _data_speed 0183                    _activation 0228            ??i1_CANsendMessage 0020  
    __size_of_can_interpreter 0068            __size_of_parallelo 026A          __size_of_park_search 01C6  
           _old_alignment_gap 013C                    ??_ISR_Alta 0008                       ?___flge 00C5  
                     ?___wmul 0077                       _CANSTAT 000F6E                  _CANisTxReady 664A  
                     _BRGCON1 000F70                       _BRGCON2 000F71                       _BRGCON3 000F72  
                   ?_can_send 0001                     ?___xxtofl 00CB        __size_of_CANInitialize 01C6  
                   ?_delay_ms 007D                       _RXB0DLC 000F65                       _RXB1DLC 000F55  
                     _RXB0CON 000F60                       _RXB1CON 000F50                       _TXB0DLC 000F45  
                     _TXB1DLC 000F35                       _TXB2DLC 000F25           CANsendMessage@flags 007E  
                     __Hparam 0000                    _left_speed 0154                       __Lparam 0000  
            delay_ms@value_ms 007D               __size_of___flge 0190                    _matematica 2674  
                     ___fladd 310A                       ___fldiv 42B2                       ___flneg 6550  
                     ___flmul 35B2                       ___flsub 64CA                       ___fltol 5E1C  
             __size_of___wmul 0036                       ___lwdiv 6478                  __psmallconst 0D00  
        CANInitialize@propSeg 008E                       __pcinit 6416             __end_of_eval_poly 5E1C  
                     _delay_s 661E                       __ramtop 0D00                       __ptext0 61E8  
                     __ptext1 56C4                       __ptext2 3A58                       __ptext3 503A  
                     __ptext4 5F28                       __ptext5 1858                       __ptext6 664A  
                     __ptext7 65F2                       __ptext8 2674                       __ptext9 602C  
                   _T0CONbits 000FD5                i1_CANisTxReady 666E                       _counter 0043  
                  ??_can_send 0087                  __size_of_abs 002C                  __size_of_cos 00E4  
             atan@val_squared 01AC                  __size_of_sin 0318                    ??___xxtofl 00CF  
                     atan@val 01B0             __end_of_parallelo 52A4                    ??_delay_ms 007F  
                     asin@sgn 01B4        CANreceiveMessage@error 0022               _start_operation 0235  
              __pintcode_body 6110          end_of_initialization 646E                     i1u1130_25 213A  
                   i1u1141_20 22D8                     i1u1141_25 22CE                     i1u1142_20 231E  
                   i1u1142_25 2314                     i1u1143_25 236A                     i1u1128_20 20A8  
                   i1u1128_25 209E                     i1u1065_20 2CB6                     i1u1129_20 20EE  
                   i1u1129_25 20E4                     i1u1065_26 2CB8                     i1u1066_20 2CE4  
                   i1u1154_20 2508                     i1u1074_25 2E6A                     i1u1154_25 24FE  
                   i1u1066_26 2CE6                     i1u1155_20 254E                     i1u1155_25 2544  
                   i1u1076_20 2F3E                     i1u1068_25 2CFA                     i1u1156_25 259A  
                   i1u1076_26 2F40                     i1u1077_20 2F68                     i1u1085_25 30E0  
                   i1u1077_26 2F6A                       int_func 6110                     i1u1166_24 00C2  
                   i1u1166_25 00BC                     i1u1175_24 0166                     i1u1079_25 2F7C  
                   i1u1175_25 0160                     i1u1192_27 01AE                 _CANInitialize 588A  
                   _ISR_Bassa 0018                       postdec1 000FE5                       postdec2 000FDD  
                     postinc0 000FEE                       postinc2 000FDE                       sqrt@grs 00D0  
                     sqrt@exp 00D4             ??_can_interpreter 0077        __end_ofi1_CANisTxReady 668C  
     _steering_correction_dir 0236                     _PORTBbits 000F81                CANSetMask@mask 0077  
              CANSetMask@tamp 0081                  _distance_set 0110                CANSetMask@type 007B  
        __end_of_park_routine 3EE8                   ___fladd@grs 00BC                 ___xxtofl@sign 00D3  
                   _TRISBbits 000F93                   ___fldiv@grs 008A                   ___fldiv@rem 0084  
                   _MUX_index 0040                    _pulse_time 0156       _clock_counter_reference 0038  
                 ___flmul@grs 009E                _CANsendMessage 1858              CANInitialize@BRP 0088  
            CANInitialize@SJW 0087                ?_CANInitialize 0085           i1_CANisTxReady$2800 0018  
                  ?_ISR_Bassa 0001                   ?_matematica 0001                __end_of___flge 5BE0  
           __size_of_ISR_Alta 61E0                __end_of___wmul 65BE                 __pidataCOMRAM 66AC  
             ?i1_CANisTxReady 0001                    floor@expon 00E1           start_initialization 6416  
                  eval_poly@d 00C1                    eval_poly@n 00C3                    eval_poly@x 00BD  
                 __end_of_abs 661E                   __end_of_cos 6110                   __end_of_sin 4D28  
         CANSetMask@numBuffer 0080                 _data_speed_rx 0108        __end_of_CANsendMessage 1FE4  
           ?_CANOperationMode 0001                 _data_steering 018B                    frexp@value 0077  
          ??_CANOperationMode 0077             _distance_received 022D    CANInitialize@FilterConfig1 008F  
  CANInitialize@FilterConfig2 0090           _steering_correction 0044                      ??___flge 00CD  
                    ??___wmul 007B                   __pdataBANK1 01F0              __CFG_LPT1OSC$OFF 000000  
   __size_ofi1_CANsendMessage 0690                     ___fladd@a 00AD                     ___fladd@b 00A9  
      CANInitialize@phaseSeg1 0085        CANInitialize@phaseSeg2 0086                     ___fldiv@a 007B  
                   ___fldiv@b 0077                     ___flmul@a 0094                     ___flmul@b 0090  
                 __pbssCOMRAM 0028                     ___flsub@a 01A7                     ___flsub@b 01A3  
               __pcstackBANK0 0060                 __pcstackBANK1 01A3                 __pcstackBANK2 0200  
                 _BRGCON2bits 000F71                   _BRGCON3bits 000F72             __size_of_can_send 0104  
           __size_of___xxtofl 01CE             __size_of_delay_ms 0034               ?_CANsendMessage 0077  
         __size_of_matematica 058A               ??_CANInitialize 008A                     _asin$3702 01C4  
                   _asin$3703 01BC                     _asin$3704 01B8                    sin@coeff_a 0D2D  
                  sin@coeff_b 0D41                 ??_park_search 01C8                 _alignment_gap 00E5  
          CANSetFilter@filter 0077                     _data_test 0193              ___lwdiv@dividend 0001  
                  ISR_Bassa@i 0076                   ??_ISR_Bassa 0060                     __pintcode 0008  
                    ?___fladd 00A9                      ?___fldiv 0077                      ?___flneg 00BD  
                    ?___flmul 0090                      ?___flsub 01A3                      ?___fltol 00C1  
       __size_of_park_routine 0490                      ?___lwdiv 0001                   __pintcodelo 0018  
                    ?_delay_s 0001                   __smallconst 0D00                   _COMSTATbits 000F74  
                   _eval_poly 5D04                     _larghezza 01F0              ___lwdiv@quotient 0005  
              __size_of_floor 0124                __size_of_frexp 0094       __size_of_configurations 006C  
                   _parallelo 503A                  _new_distance 0231         CANreceiveMessage@tamp 0023  
              _prima_sterzata 0140                ___wmul@product 007B                      _LATBbits 000F8A  
             _can_interpreter 63AE                     atan@recip 01AB                  _park_routine 3A58  
_delay_quartz_frequency_value 0047                      _IPR3bits 000FA5                      _PIE3bits 000FA3  
                    _PIR3bits 000FA4                      _RXB0EIDH 000F63                      _RXB0EIDL 000F64  
                    _RXB1EIDH 000F53                      _RXB1EIDL 000F54                      _ISR_Alta 0008  
                   _set_speed 015A                      _RCONbits 000FD0              __CFG_WDTPS$32768 000000  
                    _RXB0SIDH 000F61                      _RXB0SIDL 000F62                      _RXF0EIDH 000F02  
                    _RXB1SIDH 000F51                      _RXF0EIDL 000F03                      _RXB1SIDL 000F52  
                    _RXF1EIDH 000F06                      _RXF1EIDL 000F07                      _RXF2EIDH 000F0A  
                    _RXF2EIDL 000F0B                      _RXF3EIDH 000F0E                      _RXF3EIDL 000F0F  
                    _RXF4EIDH 000F12                      _RXF4EIDL 000F13                      _RXF5EIDH 000F16  
                    _RXF5EIDL 000F17                      _RXF0SIDH 000F00                      _RXF0SIDL 000F01  
         __end_of_park_search 588A                      _TXB0EIDH 000F43                      _RXF1SIDH 000F04  
                    _TXB0EIDL 000F44                      _RXF1SIDL 000F05                      _TXB1EIDH 000F33  
                    _RXF2SIDH 000F08                      _TXB1EIDL 000F34                      _RXF2SIDL 000F09  
                    _TXB2EIDH 000F23                      _RXF3SIDH 000F0C                      _TXB2EIDL 000F24  
                    _RXF3SIDL 000F0D                      _RXF4SIDH 000F10                      _RXF4SIDL 000F11  
                    _RXF5SIDH 000F14                      _RXF5SIDL 000F15                      _RXM0EIDH 000F1A  
                    _RXM0EIDL 000F1B                      _TXB0SIDH 000F41                      _RXM1EIDH 000F1E  
                    _TXB0SIDL 000F42                      _RXM1EIDL 000F1F                      _TXB1SIDH 000F31  
                    _TXB1SIDL 000F32                      _TXB2SIDH 000F21                      _TXB2SIDL 000F22  
                    _RXM0SIDH 000F18                      _RXM0SIDL 000F19                      _RXM1SIDH 000F1C  
                    _RXM1SIDL 000F1D                   _distance_dx 003A                   _distance_sx 003C  
                    _RXERRCNT 000F75                      _TXERRCNT 000F76             ___wmul@multiplier 0077  
                  ?_eval_poly 00BD           __end_ofatan@coeff_a 0D19           __end_ofatan@coeff_b 0D2D  
               ?_CANSetFilter 0077                   _INTCON2bits 000FF1                     copy_data0 6450  
                  _CANCONbits 000F6F                    ?_parallelo 0001              _distance_average 0150  
                   frexp@eptr 007B                      __Hrparam 0000                  _RXB0SIDLbits 000F62  
                    __Lrparam 0000                  _RXB1SIDLbits 000F52              ??i1_CANisTxReady 0018  
                ??_matematica 00E3                 _request_sent1 0234              __size_of___fladd 04A8  
                  _CANSetMask 4672              __size_of___fldiv 03C0              __size_of___flneg 0038  
            __size_of___flmul 04A6              __size_of___flsub 0048              __size_of___fltol 010C  
            i1_CANsendMessage 1FE4                      _cos$3705 01CC              __size_of___lwdiv 0052  
            __size_of_delay_s 002C                      _can_send 5F28                      ___xxtofl 54F6  
                _RXF0SIDLbits 000F01                      _delay_ms 65BE               ___lwdiv@divisor 0003  
                _RXF1SIDLbits 000F05               ___lwdiv@counter 0007         i1CANsendMessage@flags 001F  
              ??_CANSetFilter 007C                      __ptext10 4A10                      __ptext11 5BE0  
                    __ptext20 6550                      __ptext12 62AE                      __ptext21 5D04  
                    __ptext13 54F6                      __ptext30 588A                      __ptext22 35B2  
                    __ptext14 5E1C                      __ptext31 4672                      __ptext23 310A  
                    __ptext15 64CA                      __ptext40 6478                      __ptext32 0D52  
                    __ptext24 5A50                      __ptext16 4D28                      __ptext33 668C  
                    __ptext25 42B2                      __ptext17 3EE8                      __ptext34 63AE  
                    __ptext26 661E                      __ptext18 52A4                      __ptext27 65BE  
                    __ptext19 6512                      __ptext36 1FE4                      __ptext28 6588  
                    __ptext37 666E                      __ptext29 6342                      __ptext38 2BFE  
                _RXF2SIDLbits 000F09                      _sin$3706 01B3       __end_of_can_interpreter 6416  
                _RXF3SIDLbits 000F0D                      _distance 014E            __end_of_matematica 2BFE  
                _RXF4SIDLbits 000F11                  _RXF5SIDLbits 000F15      CANsendMessage@dataLength 007D  
               __size_of_fabs 003E                 __size_of_atan 0252                 __size_of_asin 0312  
               __size_of_main 00C6                 __size_of_sqrt 03CA                   _park_search 56C4  
        CANreceiveMessage@msg 0018                  _TXB0SIDLbits 000F42                  _TXB1SIDLbits 000F32  
                _TXB2SIDLbits 000F22                      int$flags 0048     __size_of_CANOperationMode 0016  
               ?_CANisTxReady 0001                   atan@coeff_a 0D01                   atan@coeff_b 0D19  
                 _RXB0DLCbits 000F65                   _RXB1DLCbits 000F55                  _RXM0SIDLbits 000F19  
                 _RXB0CONbits 000F60                   _RXB1CONbits 000F50             _CANreceiveMessage 2BFE  
                _RXM1SIDLbits 000F1D                    _INTCONbits 000FF2                   ??_eval_poly 00C5  
            ??_CANsendMessage 007F    i1CANsendMessage@dataLength 001E            ?_CANreceiveMessage 0018  
                _request_sent 0233                _configurations 6342                     sqrt@tfrac 00CB  
    CANsendMessage@identifier 0077                   ??_parallelo 00E2                      intlevel1 0000  
                    intlevel2 0000              CANSetFilter@tamp 0081              CANSetFilter@type 007B  
         ??_CANreceiveMessage 001A          i1CANsendMessage@data 001C          i1CANsendMessage@tamp 0024  
                 _TXB0DLCbits 000F45                   _right_speed 0158                   _TXB1DLCbits 000F35  
                 _TXB0CONbits 000F40                   _TXB2DLCbits 000F25                   _TXB1CONbits 000F30  
                 _TXB2CONbits 000F20          CANOperationMode@mode 0077                   ?_CANSetMask 0077  
              ??_CANisTxReady 0077                _distance_error 022C               _matematica$3700 01E0  
             _matematica$3701 01E4               _matematica$3695 01D0               _matematica$3696 01D4  
             _matematica$3697 01D8               _matematica$3698 01DC               _matematica$3699 01E8  
   __end_of_CANreceiveMessage 310A                      sqrt@frac 00DA                      sqrt@sign 00C9  
                    sqrt@root 00D6    i1CANsendMessage@identifier 0018                   _timerValue2 003E  
                  _TMR3H_temp 0041        __end_of_configurations 63AE                    _TMR3L_temp 0042  
               ___fladd@signs 00B9                 _distance_wait 022F              ?_can_interpreter 0001  
                ___fladd@aexp 00BA            _old_dir_correction 0232                  ___fladd@bexp 00BB  
       __end_of_CANInitialize 5A50         _sensor_distance_short 019B           _sensor_distance_old 0118  
