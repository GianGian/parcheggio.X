

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue May 24 19:37:51 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2685
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    61                           	psect	param0,global,class=BANK0,space=1,delta=1
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    63  0000                     
    64                           	psect	idataBANK0
    65  00671A                     __pidataBANK0:
    66                           	opt stack 0
    67                           
    68                           ;initializer for _spazio_parcheggio
    69  00671A  0064               	dw	100
    70                           
    71                           ;initializer for _delay_quartz_frequency_value
    72  00671C  10                 	db	16
    73                           
    74                           	psect	idataBANK1
    75  006712                     __pidataBANK1:
    76                           	opt stack 0
    77                           
    78                           ;initializer for _larghezza
    79  006712  0000               	dw	0
    80  006714  4200               	dw	16896
    81                           
    82                           ;initializer for _raggio
    83  006716  0000               	dw	0
    84  006718  428C               	dw	17036
    85                           
    86                           	psect	smallconst
    87  000D00                     __psmallconst:
    88                           	opt stack 0
    89  000D00  00                 	db	0
    90  000D01                     atan@coeff_a:
    91                           	opt stack 0
    92  000D01  3C06               	dw	15366
    93  000D03  4204               	dw	16900
    94  000D05  9F7D               	dw	40829
    95  000D07  426A               	dw	17002
    96  000D09  905C               	dw	36956
    97  000D0B  4201               	dw	16897
    98  000D0D  4D60               	dw	19808
    99  000D0F  40BB               	dw	16571
   100  000D11  EC51               	dw	60497
   101  000D13  3E47               	dw	15943
   102  000D15  8DDE               	dw	36318
   103  000D17  BB1F               	dw	47903
   104  000D19                     __end_ofatan@coeff_a:
   105                           	opt stack 0
   106  000D19                     atan@coeff_b:
   107                           	opt stack 0
   108  000D19  3C06               	dw	15366
   109  000D1B  4204               	dw	16900
   110  000D1D  59C0               	dw	22976
   111  000D1F  428B               	dw	17035
   112  000D21  0474               	dw	1140
   113  000D23  4244               	dw	16964
   114  000D25  9BF9               	dw	39929
   115  000D27  414F               	dw	16719
   116  000D29  0000               	dw	0
   117  000D2B  3F80               	dw	16256
   118  000D2D                     __end_ofatan@coeff_b:
   119                           	opt stack 0
   120  000D2D                     sin@coeff_a:
   121                           	opt stack 0
   122  000D2D  F3EC               	dw	62444
   123  000D2F  484A               	dw	18506
   124  000D31  9535               	dw	38197
   125  000D33  C795               	dw	51093
   126  000D35  C117               	dw	49431
   127  000D37  45DC               	dw	17884
   128  000D39  DBFD               	dw	56317
   129  000D3B  C36D               	dw	50029
   130  000D3D  B372               	dw	45938
   131  000D3F  4033               	dw	16435
   132  000D41                     __end_ofsin@coeff_a:
   133                           	opt stack 0
   134  000D41                     sin@coeff_b:
   135                           	opt stack 0
   136  000D41  342B               	dw	13355
   137  000D43  4801               	dw	18433
   138  000D45  9D7F               	dw	40319
   139  000D47  45B0               	dw	17840
   140  000D49  FFE7               	dw	65511
   141  000D4B  42D9               	dw	17113
   142  000D4D  0000               	dw	0
   143  000D4F  3F80               	dw	16256
   144  000D51                     __end_ofsin@coeff_b:
   145                           	opt stack 0
   146  0000                     _RXB1CON	set	3920
   147  0000                     _RXB1CONbits	set	3920
   148  0000                     _RXB1D0	set	3926
   149  0000                     _RXB1D1	set	3927
   150  0000                     _RXB1D2	set	3928
   151  0000                     _RXB1D3	set	3929
   152  0000                     _RXB1D4	set	3930
   153  0000                     _RXB1D5	set	3931
   154  0000                     _RXB1D6	set	3932
   155  0000                     _RXB1D7	set	3933
   156  0000                     _RXB1DLC	set	3925
   157  0000                     _RXB1DLCbits	set	3925
   158  0000                     _RXB1EIDH	set	3923
   159  0000                     _RXB1EIDL	set	3924
   160  0000                     _RXB1SIDH	set	3921
   161  0000                     _RXB1SIDL	set	3922
   162  0000                     _RXB1SIDLbits	set	3922
   163  0000                     _RXF0EIDH	set	3842
   164  0000                     _RXF0EIDL	set	3843
   165  0000                     _RXF0SIDH	set	3840
   166  0000                     _RXF0SIDL	set	3841
   167  0000                     _RXF0SIDLbits	set	3841
   168  0000                     _RXF1EIDH	set	3846
   169  0000                     _RXF1EIDL	set	3847
   170  0000                     _RXF1SIDH	set	3844
   171  0000                     _RXF1SIDL	set	3845
   172  0000                     _RXF1SIDLbits	set	3845
   173  0000                     _RXF2EIDH	set	3850
   174  0000                     _RXF2EIDL	set	3851
   175  0000                     _RXF2SIDH	set	3848
   176  0000                     _RXF2SIDL	set	3849
   177  0000                     _RXF2SIDLbits	set	3849
   178  0000                     _RXF3EIDH	set	3854
   179  0000                     _RXF3EIDL	set	3855
   180  0000                     _RXF3SIDH	set	3852
   181  0000                     _RXF3SIDL	set	3853
   182  0000                     _RXF3SIDLbits	set	3853
   183  0000                     _RXF4EIDH	set	3858
   184  0000                     _RXF4EIDL	set	3859
   185  0000                     _RXF4SIDH	set	3856
   186  0000                     _RXF4SIDL	set	3857
   187  0000                     _RXF4SIDLbits	set	3857
   188  0000                     _RXF5EIDH	set	3862
   189  0000                     _RXF5EIDL	set	3863
   190  0000                     _RXF5SIDH	set	3860
   191  0000                     _RXF5SIDL	set	3861
   192  0000                     _RXF5SIDLbits	set	3861
   193  0000                     _RXM0EIDH	set	3866
   194  0000                     _RXM0EIDL	set	3867
   195  0000                     _RXM0SIDH	set	3864
   196  0000                     _RXM0SIDL	set	3865
   197  0000                     _RXM0SIDLbits	set	3865
   198  0000                     _RXM1EIDH	set	3870
   199  0000                     _RXM1EIDL	set	3871
   200  0000                     _RXM1SIDH	set	3868
   201  0000                     _RXM1SIDL	set	3869
   202  0000                     _RXM1SIDLbits	set	3869
   203  0000                     _TXB0CONbits	set	3904
   204  0000                     _TXB0D0	set	3910
   205  0000                     _TXB0D1	set	3911
   206  0000                     _TXB0D2	set	3912
   207  0000                     _TXB0D3	set	3913
   208  0000                     _TXB0D4	set	3914
   209  0000                     _TXB0D5	set	3915
   210  0000                     _TXB0D6	set	3916
   211  0000                     _TXB0D7	set	3917
   212  0000                     _TXB0DLC	set	3909
   213  0000                     _TXB0DLCbits	set	3909
   214  0000                     _TXB0EIDH	set	3907
   215  0000                     _TXB0EIDL	set	3908
   216  0000                     _TXB0SIDH	set	3905
   217  0000                     _TXB0SIDL	set	3906
   218  0000                     _TXB0SIDLbits	set	3906
   219  0000                     _TXB1CONbits	set	3888
   220  0000                     _TXB1D0	set	3894
   221  0000                     _TXB1D1	set	3895
   222  0000                     _TXB1D2	set	3896
   223  0000                     _TXB1D3	set	3897
   224  0000                     _TXB1D4	set	3898
   225  0000                     _TXB1D5	set	3899
   226  0000                     _TXB1D6	set	3900
   227  0000                     _TXB1D7	set	3901
   228  0000                     _TXB1DLC	set	3893
   229  0000                     _TXB1DLCbits	set	3893
   230  0000                     _TXB1EIDH	set	3891
   231  0000                     _TXB1EIDL	set	3892
   232  0000                     _TXB1SIDH	set	3889
   233  0000                     _TXB1SIDL	set	3890
   234  0000                     _TXB1SIDLbits	set	3890
   235  0000                     _TXB2CONbits	set	3872
   236  0000                     _TXB2D0	set	3878
   237  0000                     _TXB2D1	set	3879
   238  0000                     _TXB2D2	set	3880
   239  0000                     _TXB2D3	set	3881
   240  0000                     _TXB2D4	set	3882
   241  0000                     _TXB2D5	set	3883
   242  0000                     _TXB2D6	set	3884
   243  0000                     _TXB2D7	set	3885
   244  0000                     _TXB2DLC	set	3877
   245  0000                     _TXB2DLCbits	set	3877
   246  0000                     _TXB2EIDH	set	3875
   247  0000                     _TXB2EIDL	set	3876
   248  0000                     _TXB2SIDH	set	3873
   249  0000                     _TXB2SIDL	set	3874
   250  0000                     _TXB2SIDLbits	set	3874
   251  0000                     _ADCON1	set	4033
   252  0000                     _BRGCON1	set	3952
   253  0000                     _BRGCON2	set	3953
   254  0000                     _BRGCON2bits	set	3953
   255  0000                     _BRGCON3	set	3954
   256  0000                     _BRGCON3bits	set	3954
   257  0000                     _CANCON	set	3951
   258  0000                     _CANCONbits	set	3951
   259  0000                     _CANSTAT	set	3950
   260  0000                     _COMSTATbits	set	3956
   261  0000                     _INTCON2bits	set	4081
   262  0000                     _INTCONbits	set	4082
   263  0000                     _IPR3bits	set	4005
   264  0000                     _LATA	set	3977
   265  0000                     _LATB	set	3978
   266  0000                     _LATBbits	set	3978
   267  0000                     _LATC	set	3979
   268  0000                     _PIE3bits	set	4003
   269  0000                     _PIR3bits	set	4004
   270  0000                     _PORTA	set	3968
   271  0000                     _PORTBbits	set	3969
   272  0000                     _RCONbits	set	4048
   273  0000                     _RXB0CON	set	3936
   274  0000                     _RXB0CONbits	set	3936
   275  0000                     _RXB0D0	set	3942
   276  0000                     _RXB0D1	set	3943
   277  0000                     _RXB0D2	set	3944
   278  0000                     _RXB0D3	set	3945
   279  0000                     _RXB0D4	set	3946
   280  0000                     _RXB0D5	set	3947
   281  0000                     _RXB0D6	set	3948
   282  0000                     _RXB0D7	set	3949
   283  0000                     _RXB0DLC	set	3941
   284  0000                     _RXB0DLCbits	set	3941
   285  0000                     _RXB0EIDH	set	3939
   286  0000                     _RXB0EIDL	set	3940
   287  0000                     _RXB0SIDH	set	3937
   288  0000                     _RXB0SIDL	set	3938
   289  0000                     _RXB0SIDLbits	set	3938
   290  0000                     _RXERRCNT	set	3957
   291  0000                     _T0CON	set	4053
   292  0000                     _T0CONbits	set	4053
   293  0000                     _T3CON	set	4017
   294  0000                     _TMR0H	set	4055
   295  0000                     _TMR0L	set	4054
   296  0000                     _TMR3H	set	4019
   297  0000                     _TMR3L	set	4018
   298  0000                     _TRISA	set	3986
   299  0000                     _TRISB	set	3987
   300  0000                     _TRISBbits	set	3987
   301  0000                     _TRISC	set	3988
   302  0000                     _TXERRCNT	set	3958
   303                           
   304                           ; #config settings
   305  000D51  00                 	db	0	; dummy byte at the end
   306  0000                     
   307                           	psect	cinit
   308  006404                     __pcinit:
   309                           	opt stack 0
   310  006404                     start_initialization:
   311                           	opt stack 0
   312  006404                     __initialization:
   313                           	opt stack 0
   314                           
   315                           ; Clear objects allocated to BANK1 (139 bytes)
   316  006404  EE01  F000         	lfsr	0,__pbssBANK1
   317  006408  0E8B               	movlw	139
   318  00640A                     clear_0:
   319  00640A  6AEE               	clrf	postinc0,c
   320  00640C  06E8               	decf	wreg,f,c
   321  00640E  E1FD               	bnz	clear_0
   322                           
   323                           ; Clear objects allocated to BANK0 (12 bytes)
   324  006410  EE00  F0DA         	lfsr	0,__pbssBANK0
   325  006414  0E0C               	movlw	12
   326  006416                     clear_1:
   327  006416  6AEE               	clrf	postinc0,c
   328  006418  06E8               	decf	wreg,f,c
   329  00641A  E1FD               	bnz	clear_1
   330                           
   331                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   332  00641C  6A55               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   333  00641E  6A54               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   334                           
   335                           ; Clear objects allocated to COMRAM (44 bytes)
   336  006420  EE00  F001         	lfsr	0,__pbssCOMRAM
   337  006424  0E2C               	movlw	44
   338  006426                     clear_2:
   339  006426  6AEE               	clrf	postinc0,c
   340  006428  06E8               	decf	wreg,f,c
   341  00642A  E1FD               	bnz	clear_2
   342                           
   343                           ; Initialize objects allocated to BANK1 (8 bytes)
   344                           ; load TBLPTR registers with __pidataBANK1
   345  00642C  0E12               	movlw	low __pidataBANK1
   346  00642E  6EF6               	movwf	tblptrl,c
   347  006430  0E67               	movlw	high __pidataBANK1
   348  006432  6EF7               	movwf	tblptrh,c
   349  006434  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   350  006436  6EF8               	movwf	tblptru,c
   351  006438  EE01  F0E4         	lfsr	0,__pdataBANK1
   352  00643C  EE10 F008          	lfsr	1,8
   353  006440                     copy_data0:
   354  006440  0009               	tblrd		*+
   355  006442  CFF5 FFEE          	movff	tablat,postinc0
   356  006446  50E5               	movf	postdec1,w,c
   357  006448  50E1               	movf	fsr1l,w,c
   358  00644A  E1FA               	bnz	copy_data0
   359                           
   360                           ; Initialize objects allocated to BANK0 (3 bytes)
   361                           ; load TBLPTR registers with __pidataBANK0
   362  00644C  0E1A               	movlw	low __pidataBANK0
   363  00644E  6EF6               	movwf	tblptrl,c
   364  006450  0E67               	movlw	high __pidataBANK0
   365  006452  6EF7               	movwf	tblptrh,c
   366  006454  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   367  006456  6EF8               	movwf	tblptru,c
   368  006458  0009               	tblrd		*+	;fetch initializer
   369  00645A  CFF5 F0E6          	movff	tablat,__pdataBANK0
   370  00645E  0009               	tblrd		*+	;fetch initializer
   371  006460  CFF5 F0E7          	movff	tablat,__pdataBANK0+1
   372  006464  0009               	tblrd		*+	;fetch initializer
   373  006466  CFF5 F0E8          	movff	tablat,__pdataBANK0+2
   374  00646A                     end_of_initialization:
   375                           	opt stack 0
   376  00646A                     __end_of__initialization:
   377                           	opt stack 0
   378  00646A  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   379  00646C  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   380  00646E  0100               	movlb	0
   381  006470  EF18  F031         	goto	_main	;jump to C main() function
   382                           tblptru	equ	0xFF8
   383                           tblptrh	equ	0xFF7
   384                           tblptrl	equ	0xFF6
   385                           tablat	equ	0xFF5
   386                           postinc0	equ	0xFEE
   387                           wreg	equ	0xFE8
   388                           postdec1	equ	0xFE5
   389                           fsr1l	equ	0xFE1
   390                           
   391                           	psect	bitbssCOMRAM
   392  0002A0                     __pbitbssCOMRAM:
   393                           	opt stack 0
   394  0002A0                     _activation:
   395                           	opt stack 0
   396  0002A0                     	ds	1
   397  0002A1                     _asd:
   398                           	opt stack 0
   399  0002A1                     	ds	1
   400  0002A2                     _avvicinamento:
   401                           	opt stack 0
   402  0002A2                     	ds	1
   403  0002A3                     _dir:
   404                           	opt stack 0
   405  0002A3                     	ds	1
   406  0002A4                     _distance_error:
   407                           	opt stack 0
   408  0002A4                     	ds	1
   409  0002A5                     _distance_received:
   410                           	opt stack 0
   411  0002A5                     	ds	1
   412  0002A6                     _distance_received1:
   413                           	opt stack 0
   414  0002A6                     	ds	1
   415  0002A7                     _distance_wait:
   416                           	opt stack 0
   417  0002A7                     	ds	1
   418  0002A8                     _emergency:
   419                           	opt stack 0
   420  0002A8                     	ds	1
   421  0002A9                     _first:
   422                           	opt stack 0
   423  0002A9                     	ds	1
   424  0002AA                     _new_distance:
   425                           	opt stack 0
   426  0002AA                     	ds	1
   427  0002AB                     _old_data_correction:
   428                           	opt stack 0
   429  0002AB                     	ds	1
   430  0002AC                     _request_sent:
   431                           	opt stack 0
   432  0002AC                     	ds	1
   433  0002AD                     _request_sent1:
   434                           	opt stack 0
   435  0002AD                     	ds	1
   436  0002AE                     _start_operation:
   437                           	opt stack 0
   438  0002AE                     	ds	1
   439  0002AF                     _steering_correction_dir:
   440                           	opt stack 0
   441  0002AF                     	ds	1
   442                           tblptru	equ	0xFF8
   443                           tblptrh	equ	0xFF7
   444                           tblptrl	equ	0xFF6
   445                           tablat	equ	0xFF5
   446                           postinc0	equ	0xFEE
   447                           wreg	equ	0xFE8
   448                           postdec1	equ	0xFE5
   449                           fsr1l	equ	0xFE1
   450                           
   451                           	psect	bssCOMRAM
   452  000001                     __pbssCOMRAM:
   453                           	opt stack 0
   454  000001                     _sensor_distance:
   455                           	opt stack 0
   456  000001                     	ds	16
   457  000011                     _alignment_gap:
   458                           	opt stack 0
   459  000011                     	ds	4
   460  000015                     _z:
   461                           	opt stack 0
   462  000015                     	ds	4
   463  000019                     _distance_average:
   464                           	opt stack 0
   465  000019                     	ds	2
   466  00001B                     _distance_dx:
   467                           	opt stack 0
   468  00001B                     	ds	2
   469  00001D                     _distance_sx:
   470                           	opt stack 0
   471  00001D                     	ds	2
   472  00001F                     _left_speed:
   473                           	opt stack 0
   474  00001F                     	ds	2
   475  000021                     _pulse_time:
   476                           	opt stack 0
   477  000021                     	ds	2
   478  000023                     _right_speed:
   479                           	opt stack 0
   480  000023                     	ds	2
   481  000025                     _set_speed:
   482                           	opt stack 0
   483  000025                     	ds	2
   484  000027                     _timerValue2:
   485                           	opt stack 0
   486  000027                     	ds	2
   487  000029                     _MUX_index:
   488                           	opt stack 0
   489  000029                     	ds	1
   490  00002A                     _asus:
   491                           	opt stack 0
   492  00002A                     	ds	1
   493  00002B                     _gianni:
   494                           	opt stack 0
   495  00002B                     	ds	1
   496  00002C                     _steering_correction:
   497                           	opt stack 0
   498  00002C                     	ds	1
   499                           tblptru	equ	0xFF8
   500                           tblptrh	equ	0xFF7
   501                           tblptrl	equ	0xFF6
   502                           tablat	equ	0xFF5
   503                           postinc0	equ	0xFEE
   504                           wreg	equ	0xFE8
   505                           postdec1	equ	0xFE5
   506                           fsr1l	equ	0xFE1
   507                           
   508                           	psect	bssBANK0
   509  0000DA                     __pbssBANK0:
   510                           	opt stack 0
   511  0000DA                     _x:
   512                           	opt stack 0
   513  0000DA                     	ds	4
   514  0000DE                     _actual_speed:
   515                           	opt stack 0
   516  0000DE                     	ds	2
   517  0000E0                     _clock_counter_reference:
   518                           	opt stack 0
   519  0000E0                     	ds	2
   520  0000E2                     _distance:
   521                           	opt stack 0
   522  0000E2                     	ds	2
   523  0000E4                     _errno:
   524                           	opt stack 0
   525  0000E4                     	ds	2
   526                           tblptru	equ	0xFF8
   527                           tblptrh	equ	0xFF7
   528                           tblptrl	equ	0xFF6
   529                           tablat	equ	0xFF5
   530                           postinc0	equ	0xFEE
   531                           wreg	equ	0xFE8
   532                           postdec1	equ	0xFE5
   533                           fsr1l	equ	0xFE1
   534                           
   535                           	psect	dataBANK0
   536  0000E6                     __pdataBANK0:
   537                           	opt stack 0
   538  0000E6                     _spazio_parcheggio:
   539                           	opt stack 0
   540  0000E6                     	ds	2
   541  0000E8                     _delay_quartz_frequency_value:
   542                           	opt stack 0
   543  0000E8                     	ds	1
   544                           tblptru	equ	0xFF8
   545                           tblptrh	equ	0xFF7
   546                           tblptrl	equ	0xFF6
   547                           tablat	equ	0xFF5
   548                           postinc0	equ	0xFEE
   549                           wreg	equ	0xFE8
   550                           postdec1	equ	0xFE5
   551                           fsr1l	equ	0xFE1
   552                           
   553                           	psect	bssBANK1
   554  000100                     __pbssBANK1:
   555                           	opt stack 0
   556  000100                     _MUX_select:
   557                           	opt stack 0
   558  000100                     	ds	8
   559  000108                     _data_speed_rx:
   560                           	opt stack 0
   561  000108                     	ds	8
   562  000110                     _distance_set:
   563                           	opt stack 0
   564  000110                     	ds	8
   565  000118                     _sensor_distance_old:
   566                           	opt stack 0
   567  000118                     	ds	8
   568  000120                     _Pminimo:
   569                           	opt stack 0
   570  000120                     	ds	4
   571  000124                     _alfa:
   572                           	opt stack 0
   573  000124                     	ds	4
   574  000128                     _beta:
   575                           	opt stack 0
   576  000128                     	ds	4
   577  00012C                     _bordo:
   578                           	opt stack 0
   579  00012C                     	ds	4
   580  000130                     _jjj:
   581                           	opt stack 0
   582  000130                     	ds	4
   583  000134                     _kkk:
   584                           	opt stack 0
   585  000134                     	ds	4
   586  000138                     _n:
   587                           	opt stack 0
   588  000138                     	ds	4
   589  00013C                     _old_alignment_gap:
   590                           	opt stack 0
   591  00013C                     	ds	4
   592  000140                     _prima_sterzata:
   593                           	opt stack 0
   594  000140                     	ds	4
   595  000144                     _msg:
   596                           	opt stack 0
   597  000144                     	ds	15
   598  000153                     _data:
   599                           	opt stack 0
   600  000153                     	ds	8
   601  00015B                     _data_brake:
   602                           	opt stack 0
   603  00015B                     	ds	8
   604  000163                     _data_correction:
   605                           	opt stack 0
   606  000163                     	ds	8
   607  00016B                     _data_speed:
   608                           	opt stack 0
   609  00016B                     	ds	8
   610  000173                     _data_steering:
   611                           	opt stack 0
   612  000173                     	ds	8
   613  00017B                     _data_test:
   614                           	opt stack 0
   615  00017B                     	ds	8
   616  000183                     _sensor_distance_short:
   617                           	opt stack 0
   618  000183                     	ds	8
   619                           tblptru	equ	0xFF8
   620                           tblptrh	equ	0xFF7
   621                           tblptrl	equ	0xFF6
   622                           tablat	equ	0xFF5
   623                           postinc0	equ	0xFEE
   624                           wreg	equ	0xFE8
   625                           postdec1	equ	0xFE5
   626                           fsr1l	equ	0xFE1
   627                           
   628                           	psect	dataBANK1
   629  0001E4                     __pdataBANK1:
   630                           	opt stack 0
   631  0001E4                     _larghezza:
   632                           	opt stack 0
   633  0001E4                     	ds	4
   634  0001E8                     _raggio:
   635                           	opt stack 0
   636  0001E8                     	ds	4
   637                           tblptru	equ	0xFF8
   638                           tblptrh	equ	0xFF7
   639                           tblptrl	equ	0xFF6
   640                           tablat	equ	0xFF5
   641                           postinc0	equ	0xFEE
   642                           wreg	equ	0xFE8
   643                           postdec1	equ	0xFE5
   644                           fsr1l	equ	0xFE1
   645                           
   646                           	psect	cstackBANK1
   647  00018B                     __pcstackBANK1:
   648                           	opt stack 0
   649  00018B                     ?_floor:
   650                           	opt stack 0
   651  00018B                     sqrt@sign:
   652                           	opt stack 0
   653  00018B                     atan@y:
   654                           	opt stack 0
   655  00018B                     floor@x:
   656                           	opt stack 0
   657                           
   658                           ; 4 bytes @ 0x0
   659  00018B                     	ds	1
   660  00018C                     sqrt@i:
   661                           	opt stack 0
   662                           
   663                           ; 1 bytes @ 0x1
   664  00018C                     	ds	1
   665  00018D                     sqrt@tfrac:
   666                           	opt stack 0
   667                           
   668                           ; 4 bytes @ 0x2
   669  00018D                     	ds	2
   670  00018F                     atan@x:
   671                           	opt stack 0
   672  00018F                     floor@i:
   673                           	opt stack 0
   674                           
   675                           ; 4 bytes @ 0x4
   676  00018F                     	ds	2
   677  000191                     sqrt@p:
   678                           	opt stack 0
   679                           
   680                           ; 1 bytes @ 0x6
   681  000191                     	ds	1
   682  000192                     sqrt@grs:
   683                           	opt stack 0
   684                           
   685                           ; 4 bytes @ 0x7
   686  000192                     	ds	1
   687  000193                     atan@recip:
   688                           	opt stack 0
   689  000193                     floor@expon:
   690                           	opt stack 0
   691                           
   692                           ; 2 bytes @ 0x8
   693  000193                     	ds	1
   694  000194                     atan@val_squared:
   695                           	opt stack 0
   696                           
   697                           ; 4 bytes @ 0x9
   698  000194                     	ds	1
   699  000195                     ?___flsub:
   700                           	opt stack 0
   701  000195                     ___flsub@b:
   702                           	opt stack 0
   703                           
   704                           ; 4 bytes @ 0xA
   705  000195                     	ds	1
   706  000196                     sqrt@exp:
   707                           	opt stack 0
   708                           
   709                           ; 2 bytes @ 0xB
   710  000196                     	ds	2
   711  000198                     atan@val:
   712                           	opt stack 0
   713  000198                     sqrt@root:
   714                           	opt stack 0
   715                           
   716                           ; 4 bytes @ 0xD
   717  000198                     	ds	1
   718  000199                     ___flsub@a:
   719                           	opt stack 0
   720                           
   721                           ; 4 bytes @ 0xE
   722  000199                     	ds	3
   723  00019C                     sqrt@frac:
   724                           	opt stack 0
   725                           
   726                           ; 4 bytes @ 0x11
   727  00019C                     	ds	1
   728  00019D                     ?_sin:
   729                           	opt stack 0
   730  00019D                     sin@f:
   731                           	opt stack 0
   732                           
   733                           ; 4 bytes @ 0x12
   734  00019D                     	ds	3
   735  0001A0                     asin@sgn:
   736                           	opt stack 0
   737                           
   738                           ; 4 bytes @ 0x15
   739  0001A0                     	ds	1
   740  0001A1                     sin@y:
   741                           	opt stack 0
   742                           
   743                           ; 4 bytes @ 0x16
   744  0001A1                     	ds	3
   745  0001A4                     _asin$3755:
   746                           	opt stack 0
   747                           
   748                           ; 4 bytes @ 0x19
   749  0001A4                     	ds	1
   750  0001A5                     _sin$3757:
   751                           	opt stack 0
   752                           
   753                           ; 4 bytes @ 0x1A
   754  0001A5                     	ds	3
   755  0001A8                     _asin$3754:
   756                           	opt stack 0
   757                           
   758                           ; 4 bytes @ 0x1D
   759  0001A8                     	ds	1
   760  0001A9                     sin@x2:
   761                           	opt stack 0
   762                           
   763                           ; 4 bytes @ 0x1E
   764  0001A9                     	ds	3
   765  0001AC                     asin@y:
   766                           	opt stack 0
   767                           
   768                           ; 4 bytes @ 0x21
   769  0001AC                     	ds	1
   770  0001AD                     sin@sgn:
   771                           	opt stack 0
   772                           
   773                           ; 1 bytes @ 0x22
   774  0001AD                     	ds	3
   775  0001B0                     _asin$3753:
   776                           	opt stack 0
   777                           
   778                           ; 4 bytes @ 0x25
   779  0001B0                     	ds	4
   780  0001B4                     ??_parallelo:
   781  0001B4                     ?_cos:
   782                           	opt stack 0
   783  0001B4                     cos@f:
   784                           	opt stack 0
   785                           
   786                           ; 4 bytes @ 0x29
   787  0001B4                     	ds	2
   788  0001B6                     ??_park_search:
   789                           
   790                           ; 0 bytes @ 0x2B
   791  0001B6                     	ds	2
   792  0001B8                     _cos$3756:
   793                           	opt stack 0
   794                           
   795                           ; 4 bytes @ 0x2D
   796  0001B8                     	ds	4
   797  0001BC                     _matematica$3746:
   798                           	opt stack 0
   799                           
   800                           ; 4 bytes @ 0x31
   801  0001BC                     	ds	4
   802  0001C0                     _matematica$3747:
   803                           	opt stack 0
   804                           
   805                           ; 4 bytes @ 0x35
   806  0001C0                     	ds	4
   807  0001C4                     _matematica$3748:
   808                           	opt stack 0
   809                           
   810                           ; 4 bytes @ 0x39
   811  0001C4                     	ds	4
   812  0001C8                     _matematica$3749:
   813                           	opt stack 0
   814                           
   815                           ; 4 bytes @ 0x3D
   816  0001C8                     	ds	4
   817  0001CC                     _matematica$3751:
   818                           	opt stack 0
   819                           
   820                           ; 4 bytes @ 0x41
   821  0001CC                     	ds	4
   822  0001D0                     _matematica$3752:
   823                           	opt stack 0
   824                           
   825                           ; 4 bytes @ 0x45
   826  0001D0                     	ds	4
   827  0001D4                     _matematica$3750:
   828                           	opt stack 0
   829                           
   830                           ; 4 bytes @ 0x49
   831  0001D4                     	ds	4
   832  0001D8                     ??_park_routine:
   833                           
   834                           ; 0 bytes @ 0x4D
   835  0001D8                     	ds	4
   836  0001DC                     _park_routine$3744:
   837                           	opt stack 0
   838                           
   839                           ; 4 bytes @ 0x51
   840  0001DC                     	ds	4
   841  0001E0                     _park_routine$3745:
   842                           	opt stack 0
   843                           
   844                           ; 4 bytes @ 0x55
   845  0001E0                     	ds	4
   846                           tblptru	equ	0xFF8
   847                           tblptrh	equ	0xFF7
   848                           tblptrl	equ	0xFF6
   849                           tablat	equ	0xFF5
   850                           postinc0	equ	0xFEE
   851                           wreg	equ	0xFE8
   852                           postdec1	equ	0xFE5
   853                           fsr1l	equ	0xFE1
   854                           
   855                           	psect	cstackBANK0
   856  000060                     __pcstackBANK0:
   857                           	opt stack 0
   858  000060                     ?___lwdiv:
   859                           	opt stack 0
   860  000060                     ___lwdiv@dividend:
   861                           	opt stack 0
   862                           
   863                           ; 2 bytes @ 0x0
   864  000060                     	ds	2
   865  000062                     ___lwdiv@divisor:
   866                           	opt stack 0
   867                           
   868                           ; 2 bytes @ 0x2
   869  000062                     	ds	2
   870  000064                     ___lwdiv@counter:
   871                           	opt stack 0
   872                           
   873                           ; 1 bytes @ 0x4
   874  000064                     	ds	1
   875  000065                     ___lwdiv@quotient:
   876                           	opt stack 0
   877                           
   878                           ; 2 bytes @ 0x5
   879  000065                     	ds	2
   880  000067                     ??_ISR_Alta:
   881                           
   882                           ; 0 bytes @ 0x7
   883  000067                     	ds	16
   884  000077                     ??_can_interpreter:
   885  000077                     ?_abs:
   886                           	opt stack 0
   887  000077                     ?___wmul:
   888                           	opt stack 0
   889  000077                     ?___fldiv:
   890                           	opt stack 0
   891  000077                     CANOperationMode@mode:
   892                           	opt stack 0
   893  000077                     _CANisTxReady$2845:
   894                           	opt stack 0
   895  000077                     ___wmul@multiplier:
   896                           	opt stack 0
   897  000077                     abs@a:
   898                           	opt stack 0
   899  000077                     CANsendMessage@identifier:
   900                           	opt stack 0
   901  000077                     CANSetMask@mask:
   902                           	opt stack 0
   903  000077                     CANSetFilter@filter:
   904                           	opt stack 0
   905  000077                     ___fldiv@b:
   906                           	opt stack 0
   907  000077                     frexp@value:
   908                           	opt stack 0
   909                           
   910                           ; 4 bytes @ 0x17
   911  000077                     	ds	2
   912  000079                     ??_abs:
   913  000079                     ___wmul@multiplicand:
   914                           	opt stack 0
   915                           
   916                           ; 2 bytes @ 0x19
   917  000079                     	ds	2
   918  00007B                     CANSetMask@type:
   919                           	opt stack 0
   920  00007B                     CANSetFilter@type:
   921                           	opt stack 0
   922  00007B                     CANsendMessage@data:
   923                           	opt stack 0
   924  00007B                     ___wmul@product:
   925                           	opt stack 0
   926  00007B                     frexp@eptr:
   927                           	opt stack 0
   928  00007B                     ___fldiv@a:
   929                           	opt stack 0
   930                           
   931                           ; 4 bytes @ 0x1B
   932  00007B                     	ds	1
   933  00007C                     ??_CANSetMask:
   934  00007C                     ??_CANSetFilter:
   935                           
   936                           ; 0 bytes @ 0x1C
   937  00007C                     	ds	1
   938  00007D                     ??_frexp:
   939  00007D                     CANsendMessage@dataLength:
   940                           	opt stack 0
   941  00007D                     delay_ms@value_ms:
   942                           	opt stack 0
   943                           
   944                           ; 2 bytes @ 0x1D
   945  00007D                     	ds	1
   946  00007E                     CANsendMessage@flags:
   947                           	opt stack 0
   948                           
   949                           ; 1 bytes @ 0x1E
   950  00007E                     	ds	1
   951  00007F                     ??___fldiv:
   952  00007F                     ??_CANsendMessage:
   953  00007F                     delay_s@value_s:
   954                           	opt stack 0
   955                           
   956                           ; 1 bytes @ 0x1F
   957  00007F                     	ds	1
   958  000080                     CANSetMask@numBuffer:
   959                           	opt stack 0
   960  000080                     CANSetFilter@numBuffer:
   961                           	opt stack 0
   962  000080                     delay_s@repeat_loop:
   963                           	opt stack 0
   964                           
   965                           ; 1 bytes @ 0x20
   966  000080                     	ds	1
   967  000081                     CANSetMask@tamp:
   968                           	opt stack 0
   969  000081                     CANSetFilter@tamp:
   970                           	opt stack 0
   971                           
   972                           ; 4 bytes @ 0x21
   973  000081                     	ds	2
   974  000083                     ___fldiv@sign:
   975                           	opt stack 0
   976  000083                     CANsendMessage@tamp:
   977                           	opt stack 0
   978                           
   979                           ; 4 bytes @ 0x23
   980  000083                     	ds	1
   981  000084                     ___fldiv@rem:
   982                           	opt stack 0
   983                           
   984                           ; 4 bytes @ 0x24
   985  000084                     	ds	1
   986  000085                     CANInitialize@phaseSeg1:
   987                           	opt stack 0
   988                           
   989                           ; 1 bytes @ 0x25
   990  000085                     	ds	1
   991  000086                     CANInitialize@phaseSeg2:
   992                           	opt stack 0
   993                           
   994                           ; 1 bytes @ 0x26
   995  000086                     	ds	1
   996  000087                     can_send@data_correction1:
   997                           	opt stack 0
   998  000087                     CANInitialize@SJW:
   999                           	opt stack 0
  1000                           
  1001                           ; 1 bytes @ 0x27
  1002  000087                     	ds	1
  1003  000088                     CANInitialize@BRP:
  1004                           	opt stack 0
  1005  000088                     ___fldiv@new_exp:
  1006                           	opt stack 0
  1007                           
  1008                           ; 2 bytes @ 0x28
  1009  000088                     	ds	1
  1010  000089                     CANInitialize@flags:
  1011                           	opt stack 0
  1012                           
  1013                           ; 1 bytes @ 0x29
  1014  000089                     	ds	1
  1015  00008A                     ??_CANInitialize:
  1016  00008A                     ___fldiv@grs:
  1017                           	opt stack 0
  1018                           
  1019                           ; 4 bytes @ 0x2A
  1020  00008A                     	ds	4
  1021  00008E                     CANInitialize@propSeg:
  1022                           	opt stack 0
  1023  00008E                     ___fldiv@bexp:
  1024                           	opt stack 0
  1025                           
  1026                           ; 1 bytes @ 0x2E
  1027  00008E                     	ds	1
  1028  00008F                     CANInitialize@FilterConfig1:
  1029                           	opt stack 0
  1030  00008F                     ___fldiv@aexp:
  1031                           	opt stack 0
  1032                           
  1033                           ; 1 bytes @ 0x2F
  1034  00008F                     	ds	1
  1035  000090                     ?___flmul:
  1036                           	opt stack 0
  1037  000090                     CANInitialize@FilterConfig2:
  1038                           	opt stack 0
  1039  000090                     ___flmul@b:
  1040                           	opt stack 0
  1041                           
  1042                           ; 4 bytes @ 0x30
  1043  000090                     	ds	1
  1044  000091                     
  1045                           ; 0 bytes @ 0x31
  1046  000091                     	ds	3
  1047  000094                     ___flmul@a:
  1048                           	opt stack 0
  1049                           
  1050                           ; 4 bytes @ 0x34
  1051  000094                     	ds	4
  1052  000098                     ??___flmul:
  1053                           
  1054                           ; 0 bytes @ 0x38
  1055  000098                     	ds	4
  1056  00009C                     ___flmul@sign:
  1057                           	opt stack 0
  1058                           
  1059                           ; 1 bytes @ 0x3C
  1060  00009C                     	ds	1
  1061  00009D                     ___flmul@aexp:
  1062                           	opt stack 0
  1063                           
  1064                           ; 1 bytes @ 0x3D
  1065  00009D                     	ds	1
  1066  00009E                     ___flmul@grs:
  1067                           	opt stack 0
  1068                           
  1069                           ; 4 bytes @ 0x3E
  1070  00009E                     	ds	4
  1071  0000A2                     ___flmul@bexp:
  1072                           	opt stack 0
  1073                           
  1074                           ; 1 bytes @ 0x42
  1075  0000A2                     	ds	1
  1076  0000A3                     ___flmul@prod:
  1077                           	opt stack 0
  1078                           
  1079                           ; 4 bytes @ 0x43
  1080  0000A3                     	ds	4
  1081  0000A7                     ___flmul@temp:
  1082                           	opt stack 0
  1083                           
  1084                           ; 2 bytes @ 0x47
  1085  0000A7                     	ds	2
  1086  0000A9                     ?___fladd:
  1087                           	opt stack 0
  1088  0000A9                     ___fladd@b:
  1089                           	opt stack 0
  1090                           
  1091                           ; 4 bytes @ 0x49
  1092  0000A9                     	ds	4
  1093  0000AD                     ___fladd@a:
  1094                           	opt stack 0
  1095                           
  1096                           ; 4 bytes @ 0x4D
  1097  0000AD                     	ds	4
  1098  0000B1                     ??___fladd:
  1099                           
  1100                           ; 0 bytes @ 0x51
  1101  0000B1                     	ds	8
  1102  0000B9                     ___fladd@signs:
  1103                           	opt stack 0
  1104                           
  1105                           ; 1 bytes @ 0x59
  1106  0000B9                     	ds	1
  1107  0000BA                     ___fladd@aexp:
  1108                           	opt stack 0
  1109                           
  1110                           ; 1 bytes @ 0x5A
  1111  0000BA                     	ds	1
  1112  0000BB                     ___fladd@bexp:
  1113                           	opt stack 0
  1114                           
  1115                           ; 1 bytes @ 0x5B
  1116  0000BB                     	ds	1
  1117  0000BC                     ___fladd@grs:
  1118                           	opt stack 0
  1119                           
  1120                           ; 1 bytes @ 0x5C
  1121  0000BC                     	ds	1
  1122  0000BD                     ?_eval_poly:
  1123                           	opt stack 0
  1124  0000BD                     ?___flneg:
  1125                           	opt stack 0
  1126  0000BD                     eval_poly@x:
  1127                           	opt stack 0
  1128  0000BD                     ___flneg@f1:
  1129                           	opt stack 0
  1130                           
  1131                           ; 4 bytes @ 0x5D
  1132  0000BD                     	ds	4
  1133  0000C1                     ?_sqrt:
  1134                           	opt stack 0
  1135  0000C1                     ?_fabs:
  1136                           	opt stack 0
  1137  0000C1                     ?___fltol:
  1138                           	opt stack 0
  1139  0000C1                     eval_poly@d:
  1140                           	opt stack 0
  1141  0000C1                     fabs@d:
  1142                           	opt stack 0
  1143  0000C1                     ___fltol@f1:
  1144                           	opt stack 0
  1145  0000C1                     sqrt@a:
  1146                           	opt stack 0
  1147                           
  1148                           ; 4 bytes @ 0x61
  1149  0000C1                     	ds	2
  1150  0000C3                     eval_poly@n:
  1151                           	opt stack 0
  1152                           
  1153                           ; 2 bytes @ 0x63
  1154  0000C3                     	ds	2
  1155  0000C5                     ??_sqrt:
  1156  0000C5                     ??_eval_poly:
  1157  0000C5                     ??___fltol:
  1158  0000C5                     ___flge@ff1:
  1159                           	opt stack 0
  1160                           
  1161                           ; 4 bytes @ 0x65
  1162  0000C5                     	ds	4
  1163  0000C9                     ___fltol@sign1:
  1164                           	opt stack 0
  1165  0000C9                     eval_poly@res:
  1166                           	opt stack 0
  1167  0000C9                     ___flge@ff2:
  1168                           	opt stack 0
  1169                           
  1170                           ; 4 bytes @ 0x69
  1171  0000C9                     	ds	1
  1172  0000CA                     ___fltol@exp1:
  1173                           	opt stack 0
  1174                           
  1175                           ; 1 bytes @ 0x6A
  1176  0000CA                     	ds	1
  1177  0000CB                     ?___xxtofl:
  1178                           	opt stack 0
  1179  0000CB                     ___xxtofl@val:
  1180                           	opt stack 0
  1181                           
  1182                           ; 4 bytes @ 0x6B
  1183  0000CB                     	ds	2
  1184  0000CD                     ??___flge:
  1185                           
  1186                           ; 0 bytes @ 0x6D
  1187  0000CD                     	ds	2
  1188  0000CF                     ??___xxtofl:
  1189                           
  1190                           ; 0 bytes @ 0x6F
  1191  0000CF                     	ds	2
  1192  0000D1                     ?_atan:
  1193                           	opt stack 0
  1194  0000D1                     atan@f:
  1195                           	opt stack 0
  1196                           
  1197                           ; 4 bytes @ 0x71
  1198  0000D1                     	ds	2
  1199  0000D3                     ___xxtofl@sign:
  1200                           	opt stack 0
  1201                           
  1202                           ; 1 bytes @ 0x73
  1203  0000D3                     	ds	1
  1204  0000D4                     ___xxtofl@exp:
  1205                           	opt stack 0
  1206                           
  1207                           ; 1 bytes @ 0x74
  1208  0000D4                     	ds	1
  1209  0000D5                     ?_asin:
  1210                           	opt stack 0
  1211  0000D5                     asin@x:
  1212                           	opt stack 0
  1213  0000D5                     ___xxtofl@arg:
  1214                           	opt stack 0
  1215                           
  1216                           ; 4 bytes @ 0x75
  1217  0000D5                     	ds	4
  1218  0000D9                     ??_main:
  1219                           
  1220                           ; 0 bytes @ 0x79
  1221  0000D9                     	ds	1
  1222                           tblptru	equ	0xFF8
  1223                           tblptrh	equ	0xFF7
  1224                           tblptrl	equ	0xFF6
  1225                           tablat	equ	0xFF5
  1226                           postinc0	equ	0xFEE
  1227                           wreg	equ	0xFE8
  1228                           postdec1	equ	0xFE5
  1229                           fsr1l	equ	0xFE1
  1230                           
  1231                           	psect	cstackCOMRAM
  1232  00002D                     __pcstackCOMRAM:
  1233                           	opt stack 0
  1234  00002D                     i1_CANisTxReady$2845:
  1235                           	opt stack 0
  1236  00002D                     CANreceiveMessage@msg:
  1237                           	opt stack 0
  1238  00002D                     i1CANsendMessage@identifier:
  1239                           	opt stack 0
  1240                           
  1241                           ; 4 bytes @ 0x0
  1242  00002D                     	ds	2
  1243  00002F                     ??_CANreceiveMessage:
  1244                           
  1245                           ; 0 bytes @ 0x2
  1246  00002F                     	ds	2
  1247  000031                     i1CANsendMessage@data:
  1248                           	opt stack 0
  1249                           
  1250                           ; 2 bytes @ 0x4
  1251  000031                     	ds	2
  1252  000033                     i1CANsendMessage@dataLength:
  1253                           	opt stack 0
  1254                           
  1255                           ; 1 bytes @ 0x6
  1256  000033                     	ds	1
  1257  000034                     i1CANsendMessage@flags:
  1258                           	opt stack 0
  1259                           
  1260                           ; 1 bytes @ 0x7
  1261  000034                     	ds	1
  1262  000035                     ??i1_CANsendMessage:
  1263                           
  1264                           ; 0 bytes @ 0x8
  1265  000035                     	ds	2
  1266  000037                     CANreceiveMessage@error:
  1267                           	opt stack 0
  1268                           
  1269                           ; 1 bytes @ 0xA
  1270  000037                     	ds	1
  1271  000038                     CANreceiveMessage@tamp:
  1272                           	opt stack 0
  1273                           
  1274                           ; 1 bytes @ 0xB
  1275  000038                     	ds	1
  1276  000039                     i1CANsendMessage@tamp:
  1277                           	opt stack 0
  1278                           
  1279                           ; 4 bytes @ 0xC
  1280  000039                     	ds	4
  1281  00003D                     ??_ISR_Bassa:
  1282                           
  1283                           ; 0 bytes @ 0x10
  1284  00003D                     	ds	21
  1285  000052                     ISR_Bassa@gigi:
  1286                           	opt stack 0
  1287                           
  1288                           ; 1 bytes @ 0x25
  1289  000052                     	ds	1
  1290  000053                     ISR_Bassa@i:
  1291                           	opt stack 0
  1292                           
  1293                           ; 1 bytes @ 0x26
  1294  000053                     	ds	1
  1295                           tblptru	equ	0xFF8
  1296                           tblptrh	equ	0xFF7
  1297                           tblptrl	equ	0xFF6
  1298                           tablat	equ	0xFF5
  1299                           postinc0	equ	0xFEE
  1300                           wreg	equ	0xFE8
  1301                           postdec1	equ	0xFE5
  1302                           fsr1l	equ	0xFE1
  1303                           
  1304 ;;
  1305 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1306 ;;
  1307 ;; *************** function _main *****************
  1308 ;; Defined at:
  1309 ;;		line 204 in file "parcheggio.c"
  1310 ;; Parameters:    Size  Location     Type
  1311 ;;		None
  1312 ;; Auto vars:     Size  Location     Type
  1313 ;;		None
  1314 ;; Return value:  Size  Location     Type
  1315 ;;		None               void
  1316 ;; Registers used:
  1317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1325 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1326 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1327 ;;Total ram usage:        1 bytes
  1328 ;; Hardware stack levels required when called:   10
  1329 ;; This function calls:
  1330 ;;		_CANisTxReady
  1331 ;;		_CANsendMessage
  1332 ;;		_can_interpreter
  1333 ;;		_configurazione
  1334 ;;		_delay_ms
  1335 ;;		_park_routine
  1336 ;;		_park_search
  1337 ;; This function is called by:
  1338 ;;		Startup code after reset
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	text0
  1343  006230                     __ptext0:
  1344                           	opt stack 0
  1345  006230                     _main:
  1346                           	opt stack 21
  1347                           
  1348                           ;parcheggio.c: 205: MUX_select[0] = 0b00000000;
  1349                           
  1350                           ; BSR set to: 15
  1351                           ;incstack = 0
  1352  006230  0E00               	movlw	0
  1353  006232  0101               	movlb	1	; () banked
  1354  006234  6F00               	movwf	_MUX_select& (0+255),b
  1355                           
  1356                           ;parcheggio.c: 206: MUX_select[1] = 0b00000001;
  1357  006236  0E01               	movlw	1
  1358  006238  0101               	movlb	1	; () banked
  1359  00623A  6F01               	movwf	(_MUX_select+1)& (0+255),b
  1360                           
  1361                           ;parcheggio.c: 207: MUX_select[2] = 0b00000010;
  1362  00623C  0E02               	movlw	2
  1363  00623E  0101               	movlb	1	; () banked
  1364  006240  6F02               	movwf	(_MUX_select+2)& (0+255),b
  1365                           
  1366                           ;parcheggio.c: 208: MUX_select[3] = 0b00000011;
  1367  006242  0E03               	movlw	3
  1368  006244  0101               	movlb	1	; () banked
  1369  006246  6F03               	movwf	(_MUX_select+3)& (0+255),b
  1370                           
  1371                           ;parcheggio.c: 209: MUX_select[4] = 0b00000100;
  1372  006248  0E04               	movlw	4
  1373  00624A  0101               	movlb	1	; () banked
  1374  00624C  6F04               	movwf	(_MUX_select+4)& (0+255),b
  1375                           
  1376                           ;parcheggio.c: 210: MUX_select[5] = 0b00000101;
  1377  00624E  0E05               	movlw	5
  1378  006250  0101               	movlb	1	; () banked
  1379  006252  6F05               	movwf	(_MUX_select+5)& (0+255),b
  1380                           
  1381                           ;parcheggio.c: 211: MUX_select[6] = 0b00000110;
  1382  006254  0E06               	movlw	6
  1383  006256  0101               	movlb	1	; () banked
  1384  006258  6F06               	movwf	(_MUX_select+6)& (0+255),b
  1385                           
  1386                           ;parcheggio.c: 212: MUX_select[7] = 0b00000111;
  1387  00625A  0E07               	movlw	7
  1388  00625C  0101               	movlb	1	; () banked
  1389  00625E  6F07               	movwf	(_MUX_select+7)& (0+255),b
  1390                           
  1391                           ; BSR set to: 1
  1392                           ;parcheggio.c: 213: emergency = 0;
  1393  006260  9055               	bcf	_emergency/(0+8),_emergency& (0+7),c	;volatile
  1394                           
  1395                           ; BSR set to: 1
  1396                           ;parcheggio.c: 214: configurazione();
  1397  006262  EC3A  F032         	call	_configurazione	;wreg free
  1398                           
  1399                           ;parcheggio.c: 215: PORTBbits.RB4 = 0;
  1400  006266  9881               	bcf	3969,4,c	;volatile
  1401                           
  1402                           ;parcheggio.c: 216: PORTBbits.RB5 = 0;
  1403  006268  9A81               	bcf	3969,5,c	;volatile
  1404                           
  1405                           ;parcheggio.c: 217: PORTBbits.RB6 = 0;
  1406  00626A  9C81               	bcf	3969,6,c	;volatile
  1407                           
  1408                           ;parcheggio.c: 218: request_sent = 0;
  1409  00626C  9855               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1410                           
  1411                           ;parcheggio.c: 219: start_operation = 0;
  1412  00626E  9C55               	bcf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  1413                           
  1414                           ;parcheggio.c: 220: delay_ms(500);
  1415  006270  0E01               	movlw	1
  1416  006272  0100               	movlb	0	; () banked
  1417  006274  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1418  006276  0EF4               	movlw	244
  1419  006278  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  1420  00627A  ECDD  F032         	call	_delay_ms	;wreg free
  1421                           
  1422                           ;parcheggio.c: 222: while (activation != 1) {
  1423                           
  1424                           ;parcheggio.c: 221: while (1) {
  1425  00627E  D033               	goto	l8724
  1426  006280                     l8716:
  1427                           
  1428                           ;parcheggio.c: 223: delay_ms(100);
  1429  006280  0E00               	movlw	0
  1430  006282  0100               	movlb	0	; () banked
  1431  006284  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1432  006286  0E64               	movlw	100
  1433  006288  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  1434  00628A  ECDD  F032         	call	_delay_ms	;wreg free
  1435  00628E                     l8718:
  1436  00628E  EC5D  F033         	call	_CANisTxReady	;wreg free
  1437  006292  0900               	iorlw	0
  1438  006294  B4D8               	btfsc	status,2,c
  1439  006296  D7FB               	goto	l8718
  1440                           
  1441                           ;parcheggio.c: 225: PORTBbits.RB4 = ~PORTBbits.RB4;
  1442  006298  A881               	btfss	3969,4,c	;volatile
  1443  00629A  D002               	goto	u11650
  1444  00629C  0E01               	movlw	1
  1445  00629E  D001               	goto	u11656
  1446  0062A0                     u11650:
  1447  0062A0  0E00               	movlw	0
  1448  0062A2                     u11656:
  1449  0062A2  0AFF               	xorlw	255
  1450  0062A4  0100               	movlb	0	; () banked
  1451  0062A6  6FD9               	movwf	??_main& (0+255),b
  1452  0062A8  0100               	movlb	0	; () banked
  1453  0062AA  3BD9               	swapf	??_main& (0+255),f,b
  1454  0062AC  5081               	movf	3969,w,c	;volatile
  1455  0062AE  0100               	movlb	0	; () banked
  1456  0062B0  19D9               	xorwf	??_main& (0+255),w,b
  1457  0062B2  0BEF               	andlw	-17
  1458  0062B4  19D9               	xorwf	??_main& (0+255),w,b
  1459  0062B6  6E81               	movwf	3969,c	;volatile
  1460                           
  1461                           ; BSR set to: 0
  1462                           ;parcheggio.c: 226: CANsendMessage(0xAA, sensor_distance_short, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1463  0062B8  0EAA               	movlw	170
  1464  0062BA  0100               	movlb	0	; () banked
  1465  0062BC  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1466  0062BE  0E00               	movlw	0
  1467  0062C0  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1468  0062C2  0E00               	movlw	0
  1469  0062C4  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1470  0062C6  0E00               	movlw	0
  1471  0062C8  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1472  0062CA  0E83               	movlw	low _sensor_distance_short
  1473  0062CC  0100               	movlb	0	; () banked
  1474  0062CE  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1475  0062D0  0E01               	movlw	high _sensor_distance_short
  1476  0062D2  0100               	movlb	0	; () banked
  1477  0062D4  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1478  0062D6  0E08               	movlw	8
  1479  0062D8  0100               	movlb	0	; () banked
  1480  0062DA  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1481  0062DC  0EFC               	movlw	252
  1482  0062DE  0100               	movlb	0	; () banked
  1483  0062E0  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1484  0062E2  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1485  0062E6                     l8724:
  1486  0062E6  A054               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1487  0062E8  D7CB               	goto	l8716
  1488                           
  1489                           ;parcheggio.c: 242: }
  1490                           ;parcheggio.c: 243: park_search();
  1491  0062EA  EC50  F02C         	call	_park_search	;wreg free
  1492                           
  1493                           ;parcheggio.c: 244: can_interpreter();
  1494  0062EE  EC70  F032         	call	_can_interpreter	;wreg free
  1495                           
  1496                           ;parcheggio.c: 245: park_routine();
  1497  0062F2  EC2C  F01D         	call	_park_routine	;wreg free
  1498  0062F6  D7F7               	goto	l8724
  1499  0062F8                     __end_of_main:
  1500                           	opt stack 0
  1501                           tblptru	equ	0xFF8
  1502                           tblptrh	equ	0xFF7
  1503                           tblptrl	equ	0xFF6
  1504                           tablat	equ	0xFF5
  1505                           postinc0	equ	0xFEE
  1506                           wreg	equ	0xFE8
  1507                           postdec1	equ	0xFE5
  1508                           fsr1l	equ	0xFE1
  1509                           status	equ	0xFD8
  1510                           
  1511 ;; *************** function _park_search *****************
  1512 ;; Defined at:
  1513 ;;		line 249 in file "parcheggio.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;		None
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;		None
  1518 ;; Return value:  Size  Location     Type
  1519 ;;		None               void
  1520 ;; Registers used:
  1521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1529 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1530 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1531 ;;Total ram usage:        2 bytes
  1532 ;; Hardware stack levels used:    1
  1533 ;; Hardware stack levels required when called:    9
  1534 ;; This function calls:
  1535 ;;		_CANisTxReady
  1536 ;;		_CANsendMessage
  1537 ;;		___xxtofl
  1538 ;;		_abs
  1539 ;;		_parallelo
  1540 ;; This function is called by:
  1541 ;;		_main
  1542 ;; This function uses a non-reentrant model
  1543 ;;
  1544                           
  1545                           	psect	text1
  1546  0058A0                     __ptext1:
  1547                           	opt stack 0
  1548  0058A0                     _park_search:
  1549                           	opt stack 21
  1550                           
  1551                           ;parcheggio.c: 250: while ((activation == 1) && (PORTBbits.RB5 == 0)) {
  1552                           
  1553                           ;incstack = 0
  1554  0058A0  D0DA               	goto	l743
  1555  0058A2                     l8096:
  1556                           
  1557                           ;parcheggio.c: 251: parallelo();
  1558  0058A2  EC1B  F028         	call	_parallelo	;wreg free
  1559                           
  1560                           ;parcheggio.c: 252: if (sensor_distance[0] > 50) {
  1561  0058A6  5002               	movf	_sensor_distance+1,w,c	;volatile
  1562  0058A8  E104               	bnz	u10640
  1563  0058AA  0E33               	movlw	51
  1564  0058AC  5C01               	subwf	_sensor_distance,w,c	;volatile
  1565  0058AE  A0D8               	btfss	status,0,c
  1566  0058B0  D029               	goto	l745
  1567  0058B2                     u10640:
  1568                           
  1569                           ;parcheggio.c: 253: if (request_sent == 0) {
  1570  0058B2  B855               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1571  0058B4  D025               	goto	l8112
  1572  0058B6                     l8104:
  1573  0058B6  EC5D  F033         	call	_CANisTxReady	;wreg free
  1574  0058BA  0900               	iorlw	0
  1575  0058BC  B4D8               	btfsc	status,2,c
  1576  0058BE  D7FB               	goto	l8104
  1577                           
  1578                           ;parcheggio.c: 255: CANsendMessage(0b00000001000, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1579  0058C0  0E08               	movlw	8
  1580  0058C2  0100               	movlb	0	; () banked
  1581  0058C4  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1582  0058C6  0E00               	movlw	0
  1583  0058C8  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1584  0058CA  0E00               	movlw	0
  1585  0058CC  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1586  0058CE  0E00               	movlw	0
  1587  0058D0  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1588  0058D2  0E53               	movlw	low _data
  1589  0058D4  0100               	movlb	0	; () banked
  1590  0058D6  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1591  0058D8  0E01               	movlw	high _data
  1592  0058DA  0100               	movlb	0	; () banked
  1593  0058DC  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1594  0058DE  0E08               	movlw	8
  1595  0058E0  0100               	movlb	0	; () banked
  1596  0058E2  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1597  0058E4  0EFC               	movlw	252
  1598  0058E6  0100               	movlb	0	; () banked
  1599  0058E8  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1600  0058EA  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1601                           
  1602                           ;parcheggio.c: 256: request_sent = 1;
  1603  0058EE  8855               	bsf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1604                           
  1605                           ;parcheggio.c: 257: alignment_gap = 0;
  1606  0058F0  0E00               	movlw	0
  1607  0058F2  6E11               	movwf	_alignment_gap,c
  1608  0058F4  0E00               	movlw	0
  1609  0058F6  6E12               	movwf	_alignment_gap+1,c
  1610  0058F8  0E00               	movlw	0
  1611  0058FA  6E13               	movwf	_alignment_gap+2,c
  1612  0058FC  0E00               	movlw	0
  1613  0058FE  6E14               	movwf	_alignment_gap+3,c
  1614  005900                     l8112:
  1615                           
  1616                           ;parcheggio.c: 259: }
  1617                           ;parcheggio.c: 260: LATBbits.LATB4 = 1;
  1618  005900  888A               	bsf	3978,4,c	;volatile
  1619                           
  1620                           ;parcheggio.c: 261: } else {
  1621  005902  D02F               	goto	l8116
  1622  005904                     l745:
  1623                           
  1624                           ;parcheggio.c: 262: LATBbits.LATB4 = 0;
  1625  005904  988A               	bcf	3978,4,c	;volatile
  1626                           
  1627                           ;parcheggio.c: 263: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  1628  005906  EE20  F003         	lfsr	2,_sensor_distance+2	;volatile
  1629  00590A  CFDE F1B6          	movff	postinc2,??_park_search
  1630  00590E  CFDD F1B7          	movff	postdec2,??_park_search+1
  1631  005912  0101               	movlb	1	; () banked
  1632  005914  1FB6               	comf	??_park_search& (0+255),f,b
  1633  005916  1FB7               	comf	(??_park_search+1)& (0+255),f,b
  1634  005918  4BB6               	infsnz	??_park_search& (0+255),f,b
  1635  00591A  2BB7               	incf	(??_park_search+1)& (0+255),f,b
  1636  00591C  5001               	movf	_sensor_distance,w,c	;volatile
  1637  00591E  0101               	movlb	1	; () banked
  1638  005920  25B6               	addwf	??_park_search& (0+255),w,b
  1639  005922  0100               	movlb	0	; () banked
  1640  005924  6F77               	movwf	abs@a& (0+255),b
  1641  005926  5002               	movf	_sensor_distance+1,w,c	;volatile
  1642  005928  0101               	movlb	1	; () banked
  1643  00592A  21B7               	addwfc	(??_park_search+1)& (0+255),w,b
  1644  00592C  0100               	movlb	0	; () banked
  1645  00592E  6F78               	movwf	(abs@a+1)& (0+255),b
  1646  005930  EC31  F033         	call	_abs	;wreg free
  1647  005934  0100               	movlb	0	; () banked
  1648  005936  C077  F0CB         	movff	?_abs,___xxtofl@val
  1649  00593A  0100               	movlb	0	; () banked
  1650  00593C  C078  F0CC         	movff	?_abs+1,___xxtofl@val+1
  1651  005940  0100               	movlb	0	; () banked
  1652  005942  0E00               	movlw	0
  1653  005944  BFCC               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1654  005946  0EFF               	movlw	-1
  1655  005948  6FCD               	movwf	(___xxtofl@val+2)& (0+255),b
  1656  00594A  6FCE               	movwf	(___xxtofl@val+3)& (0+255),b
  1657  00594C  0E01               	movlw	1
  1658  00594E  EC86  F02A         	call	___xxtofl
  1659  005952  C0CB  F011         	movff	?___xxtofl,_alignment_gap
  1660  005956  C0CC  F012         	movff	?___xxtofl+1,_alignment_gap+1
  1661  00595A  C0CD  F013         	movff	?___xxtofl+2,_alignment_gap+2
  1662  00595E  C0CE  F014         	movff	?___xxtofl+3,_alignment_gap+3
  1663  005962                     l8116:
  1664                           
  1665                           ;parcheggio.c: 264: }
  1666                           ;parcheggio.c: 265: if ((sensor_distance[0] < 50) && (request_sent == 1)&&(sensor_distan
      +                          ce[1] < 50)) {
  1667  005962  5002               	movf	_sensor_distance+1,w,c	;volatile
  1668  005964  E128               	bnz	l8128
  1669  005966  0E32               	movlw	50
  1670  005968  5C01               	subwf	_sensor_distance,w,c	;volatile
  1671  00596A  A0D8               	btfss	status,0,c
  1672  00596C  A855               	btfss	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1673  00596E  D023               	goto	l8128
  1674  005970  5004               	movf	_sensor_distance+3,w,c	;volatile
  1675  005972  E121               	bnz	l8128
  1676  005974  0E32               	movlw	50
  1677  005976  5C03               	subwf	_sensor_distance+2,w,c	;volatile
  1678  005978  B0D8               	btfsc	status,0,c
  1679  00597A  D01D               	goto	l8128
  1680                           
  1681                           ;parcheggio.c: 266: request_sent = 0;
  1682  00597C  9855               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1683  00597E                     l8124:
  1684  00597E  EC5D  F033         	call	_CANisTxReady	;wreg free
  1685  005982  0900               	iorlw	0
  1686  005984  B4D8               	btfsc	status,2,c
  1687  005986  D7FB               	goto	l8124
  1688                           
  1689                           ;parcheggio.c: 268: CANsendMessage(0b00000000111, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1690  005988  0E07               	movlw	7
  1691  00598A  0100               	movlb	0	; () banked
  1692  00598C  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1693  00598E  0E00               	movlw	0
  1694  005990  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1695  005992  0E00               	movlw	0
  1696  005994  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1697  005996  0E00               	movlw	0
  1698  005998  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1699  00599A  0E53               	movlw	low _data
  1700  00599C  0100               	movlb	0	; () banked
  1701  00599E  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1702  0059A0  0E01               	movlw	high _data
  1703  0059A2  0100               	movlb	0	; () banked
  1704  0059A4  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1705  0059A6  0E08               	movlw	8
  1706  0059A8  0100               	movlb	0	; () banked
  1707  0059AA  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1708  0059AC  0EFC               	movlw	252
  1709  0059AE  0100               	movlb	0	; () banked
  1710  0059B0  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1711  0059B2  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1712  0059B6                     l8128:
  1713                           
  1714                           ;parcheggio.c: 269: }
  1715                           ;parcheggio.c: 270: if (distance_received == 1) {
  1716  0059B6  AA54               	btfss	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1717  0059B8  D04E               	goto	l743
  1718                           
  1719                           ;parcheggio.c: 271: if (distance_average > 65) {
  1720  0059BA  501A               	movf	_distance_average+1,w,c	;volatile
  1721  0059BC  E104               	bnz	u10720
  1722  0059BE  0E42               	movlw	66
  1723  0059C0  5C19               	subwf	_distance_average,w,c	;volatile
  1724  0059C2  A0D8               	btfss	status,0,c
  1725  0059C4  D046               	goto	l756
  1726  0059C6                     u10720:
  1727                           
  1728                           ;parcheggio.c: 272: PORTBbits.RB5 = 1;
  1729  0059C6  8A81               	bsf	3969,5,c	;volatile
  1730                           
  1731                           ;parcheggio.c: 273: data[0] = 1;
  1732  0059C8  0E01               	movlw	1
  1733  0059CA  0101               	movlb	1	; () banked
  1734  0059CC  6F53               	movwf	_data& (0+255),b
  1735                           
  1736                           ; BSR set to: 1
  1737                           ;parcheggio.c: 274: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  1738  0059CE  0E0B               	movlw	11
  1739  0059D0  0100               	movlb	0	; () banked
  1740  0059D2  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1741  0059D4  0E00               	movlw	0
  1742  0059D6  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1743  0059D8  0E00               	movlw	0
  1744  0059DA  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1745  0059DC  0E00               	movlw	0
  1746  0059DE  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1747  0059E0  0E53               	movlw	low _data
  1748  0059E2  0100               	movlb	0	; () banked
  1749  0059E4  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1750  0059E6  0E01               	movlw	high _data
  1751  0059E8  0100               	movlb	0	; () banked
  1752  0059EA  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1753  0059EC  0E01               	movlw	1
  1754  0059EE  0100               	movlb	0	; () banked
  1755  0059F0  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1756  0059F2  0EBC               	movlw	188
  1757  0059F4  0100               	movlb	0	; () banked
  1758  0059F6  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1759  0059F8  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1760                           
  1761                           ;parcheggio.c: 275: if ((request_sent1 == 0)&&(sensor_distance[0] < 40)) {
  1762  0059FC  BA55               	btfsc	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1763  0059FE  D02B               	goto	l743
  1764  005A00  5002               	movf	_sensor_distance+1,w,c	;volatile
  1765  005A02  E129               	bnz	l743
  1766  005A04  0E28               	movlw	40
  1767  005A06  5C01               	subwf	_sensor_distance,w,c	;volatile
  1768  005A08  B0D8               	btfsc	status,0,c
  1769  005A0A  D025               	goto	l743
  1770                           
  1771                           ;parcheggio.c: 276: data_test[0] = 50;
  1772  005A0C  0E32               	movlw	50
  1773  005A0E  0101               	movlb	1	; () banked
  1774  005A10  6F7B               	movwf	_data_test& (0+255),b
  1775                           
  1776                           ; BSR set to: 1
  1777                           ;parcheggio.c: 277: asd = 1;
  1778  005A12  8254               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  1779  005A14                     l8146:
  1780  005A14  EC5D  F033         	call	_CANisTxReady	;wreg free
  1781  005A18  0900               	iorlw	0
  1782  005A1A  B4D8               	btfsc	status,2,c
  1783  005A1C  D7FB               	goto	l8146
  1784                           
  1785                           ;parcheggio.c: 279: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1786  005A1E  0E0D               	movlw	13
  1787  005A20  0100               	movlb	0	; () banked
  1788  005A22  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1789  005A24  0E00               	movlw	0
  1790  005A26  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1791  005A28  0E00               	movlw	0
  1792  005A2A  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1793  005A2C  0E00               	movlw	0
  1794  005A2E  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1795  005A30  0E7B               	movlw	low _data_test
  1796  005A32  0100               	movlb	0	; () banked
  1797  005A34  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1798  005A36  0E01               	movlw	high _data_test
  1799  005A38  0100               	movlb	0	; () banked
  1800  005A3A  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1801  005A3C  0E08               	movlw	8
  1802  005A3E  0100               	movlb	0	; () banked
  1803  005A40  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1804  005A42  0EBC               	movlw	188
  1805  005A44  0100               	movlb	0	; () banked
  1806  005A46  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1807  005A48  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1808                           
  1809                           ;parcheggio.c: 281: distance_received1 = 0;
  1810  005A4C  9C54               	bcf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
  1811                           
  1812                           ;parcheggio.c: 282: request_sent1 = 1;
  1813  005A4E  8A55               	bsf	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1814                           
  1815                           ;parcheggio.c: 283: }
  1816                           ;parcheggio.c: 284: } else {
  1817  005A50  D002               	goto	l743
  1818  005A52                     l756:
  1819                           
  1820                           ;parcheggio.c: 285: distance_received = 0;
  1821  005A52  9A54               	bcf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1822                           
  1823                           ;parcheggio.c: 286: PORTBbits.RB5 = 0;
  1824  005A54  9A81               	bcf	3969,5,c	;volatile
  1825  005A56                     l743:
  1826  005A56  A054               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1827  005A58  0012               	return	
  1828  005A5A  BA81               	btfsc	3969,5,c	;volatile
  1829  005A5C  0012               	return	
  1830  005A5E  D721               	goto	l8096
  1831  005A60                     __end_of_park_search:
  1832                           	opt stack 0
  1833                           tblptru	equ	0xFF8
  1834                           tblptrh	equ	0xFF7
  1835                           tblptrl	equ	0xFF6
  1836                           tablat	equ	0xFF5
  1837                           postinc0	equ	0xFEE
  1838                           wreg	equ	0xFE8
  1839                           postdec1	equ	0xFE5
  1840                           fsr1l	equ	0xFE1
  1841                           postinc2	equ	0xFDE
  1842                           postdec2	equ	0xFDD
  1843                           status	equ	0xFD8
  1844                           
  1845 ;; *************** function _park_routine *****************
  1846 ;; Defined at:
  1847 ;;		line 292 in file "parcheggio.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;		None
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;		None
  1852 ;; Return value:  Size  Location     Type
  1853 ;;		None               void
  1854 ;; Registers used:
  1855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1862 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1863 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1864 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  1865 ;;Total ram usage:       12 bytes
  1866 ;; Hardware stack levels used:    1
  1867 ;; Hardware stack levels required when called:    9
  1868 ;; This function calls:
  1869 ;;		_CANisTxReady
  1870 ;;		_CANsendMessage
  1871 ;;		___fladd
  1872 ;;		___flneg
  1873 ;;		___fltol
  1874 ;;		___xxtofl
  1875 ;;		_can_send
  1876 ;;		_delay_ms
  1877 ;;		_delay_s
  1878 ;;		_matematica
  1879 ;;		_parallelo
  1880 ;; This function is called by:
  1881 ;;		_main
  1882 ;; This function uses a non-reentrant model
  1883 ;;
  1884                           
  1885                           	psect	text2
  1886  003A58                     __ptext2:
  1887                           	opt stack 0
  1888  003A58                     _park_routine:
  1889                           	opt stack 21
  1890                           
  1891                           ;parcheggio.c: 294: avvicinamento = 0;
  1892                           
  1893                           ;incstack = 0
  1894  003A58  9454               	bcf	_avvicinamento/(0+8),_avvicinamento& (0+7),c	;volatile
  1895                           
  1896                           ;parcheggio.c: 295: data_correction[0] = 0;
  1897  003A5A  0E00               	movlw	0
  1898  003A5C  0101               	movlb	1	; () banked
  1899  003A5E  6F63               	movwf	_data_correction& (0+255),b
  1900                           
  1901                           ; BSR set to: 1
  1902                           ;parcheggio.c: 296: parallelo();
  1903  003A60  EC1B  F028         	call	_parallelo	;wreg free
  1904                           
  1905                           ;parcheggio.c: 297: delay_ms(200);
  1906  003A64  0E00               	movlw	0
  1907  003A66  0100               	movlb	0	; () banked
  1908  003A68  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1909  003A6A  0EC8               	movlw	200
  1910  003A6C  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  1911  003A6E  ECDD  F032         	call	_delay_ms	;wreg free
  1912                           
  1913                           ;parcheggio.c: 298: while ((asd == 1)&&(PORTBbits.RB5 == 1) && (activation == 1)) {
  1914  003A72  D03E               	goto	l8178
  1915  003A74                     l8164:
  1916                           
  1917                           ;parcheggio.c: 299: delay_ms(200);
  1918  003A74  0E00               	movlw	0
  1919  003A76  0100               	movlb	0	; () banked
  1920  003A78  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1921  003A7A  0EC8               	movlw	200
  1922  003A7C  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  1923  003A7E  ECDD  F032         	call	_delay_ms	;wreg free
  1924                           
  1925                           ;parcheggio.c: 300: PORTBbits.RB6 = ~PORTBbits.RB6;
  1926  003A82  AC81               	btfss	3969,6,c	;volatile
  1927  003A84  D002               	goto	u10780
  1928  003A86  0E01               	movlw	1
  1929  003A88  D001               	goto	u10786
  1930  003A8A                     u10780:
  1931  003A8A  0E00               	movlw	0
  1932  003A8C                     u10786:
  1933  003A8C  0AFF               	xorlw	255
  1934  003A8E  0101               	movlb	1	; () banked
  1935  003A90  6FD8               	movwf	??_park_routine& (0+255),b
  1936  003A92  0101               	movlb	1	; () banked
  1937  003A94  3BD8               	swapf	??_park_routine& (0+255),f,b
  1938  003A96  47D8               	rlncf	??_park_routine& (0+255),f,b
  1939  003A98  47D8               	rlncf	??_park_routine& (0+255),f,b
  1940  003A9A  5081               	movf	3969,w,c	;volatile
  1941  003A9C  0101               	movlb	1	; () banked
  1942  003A9E  19D8               	xorwf	??_park_routine& (0+255),w,b
  1943  003AA0  0BBF               	andlw	-65
  1944  003AA2  19D8               	xorwf	??_park_routine& (0+255),w,b
  1945  003AA4  6E81               	movwf	3969,c	;volatile
  1946                           
  1947                           ; BSR set to: 1
  1948                           ;parcheggio.c: 301: parallelo();
  1949  003AA6  EC1B  F028         	call	_parallelo	;wreg free
  1950                           
  1951                           ;parcheggio.c: 302: if (data_correction[0] > 50) {
  1952  003AAA  0E32               	movlw	50
  1953  003AAC  0101               	movlb	1	; () banked
  1954  003AAE  6563               	cpfsgt	_data_correction& (0+255),b
  1955  003AB0  D003               	goto	l8174
  1956                           
  1957                           ; BSR set to: 1
  1958                           ;parcheggio.c: 303: data_correction[0] = 0;
  1959  003AB2  0E00               	movlw	0
  1960  003AB4  0101               	movlb	1	; () banked
  1961  003AB6  6F63               	movwf	_data_correction& (0+255),b
  1962  003AB8                     l8174:
  1963  003AB8  EC5D  F033         	call	_CANisTxReady	;wreg free
  1964  003ABC  0900               	iorlw	0
  1965  003ABE  B4D8               	btfsc	status,2,c
  1966  003AC0  D7FB               	goto	l8174
  1967                           
  1968                           ;parcheggio.c: 306: CANsendMessage(0b00000001110, data_correction, 8, CAN_CONFIG_STD_MSG
      +                           & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1969  003AC2  0E0E               	movlw	14
  1970  003AC4  0100               	movlb	0	; () banked
  1971  003AC6  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1972  003AC8  0E00               	movlw	0
  1973  003ACA  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1974  003ACC  0E00               	movlw	0
  1975  003ACE  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1976  003AD0  0E00               	movlw	0
  1977  003AD2  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1978  003AD4  0E63               	movlw	low _data_correction
  1979  003AD6  0100               	movlb	0	; () banked
  1980  003AD8  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1981  003ADA  0E01               	movlw	high _data_correction
  1982  003ADC  0100               	movlb	0	; () banked
  1983  003ADE  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1984  003AE0  0E08               	movlw	8
  1985  003AE2  0100               	movlb	0	; () banked
  1986  003AE4  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1987  003AE6  0EBC               	movlw	188
  1988  003AE8  0100               	movlb	0	; () banked
  1989  003AEA  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1990  003AEC  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1991  003AF0                     l8178:
  1992  003AF0  B254               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  1993  003AF2  AA81               	btfss	3969,5,c	;volatile
  1994  003AF4  D002               	goto	l776
  1995  003AF6  B054               	btfsc	_activation/(0+8),_activation& (0+7),c	;volatile
  1996  003AF8  D7BD               	goto	l8164
  1997  003AFA                     l776:
  1998                           
  1999                           ;parcheggio.c: 307: }
  2000                           ;parcheggio.c: 308: if ((PORTBbits.RB5 == 1) && (activation == 1)) {
  2001  003AFA  BA81               	btfsc	3969,5,c	;volatile
  2002  003AFC  A054               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  2003  003AFE  D02E               	goto	l8198
  2004                           
  2005                           ;parcheggio.c: 309: PORTBbits.RB6 = 0;
  2006  003B00  9C81               	bcf	3969,6,c	;volatile
  2007                           
  2008                           ;parcheggio.c: 310: data[0] = 2;
  2009  003B02  0E02               	movlw	2
  2010  003B04  0101               	movlb	1	; () banked
  2011  003B06  6F53               	movwf	_data& (0+255),b
  2012                           
  2013                           ; BSR set to: 1
  2014                           ;parcheggio.c: 311: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  2015  003B08  0E0B               	movlw	11
  2016  003B0A  0100               	movlb	0	; () banked
  2017  003B0C  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2018  003B0E  0E00               	movlw	0
  2019  003B10  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2020  003B12  0E00               	movlw	0
  2021  003B14  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2022  003B16  0E00               	movlw	0
  2023  003B18  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2024  003B1A  0E53               	movlw	low _data
  2025  003B1C  0100               	movlb	0	; () banked
  2026  003B1E  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2027  003B20  0E01               	movlw	high _data
  2028  003B22  0100               	movlb	0	; () banked
  2029  003B24  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2030  003B26  0E01               	movlw	1
  2031  003B28  0100               	movlb	0	; () banked
  2032  003B2A  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2033  003B2C  0EBC               	movlw	188
  2034  003B2E  0100               	movlb	0	; () banked
  2035  003B30  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2036  003B32  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2037                           
  2038                           ;parcheggio.c: 312: }
  2039                           ;parcheggio.c: 313: while ((start_operation != 1)&&(activation == 1)) {
  2040  003B36  D012               	goto	l8198
  2041  003B38                     l779:
  2042                           
  2043                           ;parcheggio.c: 314: if (first == 0) {
  2044  003B38  B255               	btfsc	_first/(0+8),_first& (0+7),c	;volatile
  2045  003B3A  D010               	goto	l8198
  2046                           
  2047                           ;parcheggio.c: 315: set_speed = 0;
  2048  003B3C  0E00               	movlw	0
  2049  003B3E  6E26               	movwf	_set_speed+1,c
  2050  003B40  0E00               	movlw	0
  2051  003B42  6E25               	movwf	_set_speed,c
  2052                           
  2053                           ;parcheggio.c: 316: data_steering[0] = 90;
  2054  003B44  0E5A               	movlw	90
  2055  003B46  0101               	movlb	1	; () banked
  2056  003B48  6F73               	movwf	_data_steering& (0+255),b
  2057                           
  2058                           ;parcheggio.c: 317: data_brake [0] = 0;
  2059  003B4A  0E00               	movlw	0
  2060  003B4C  0101               	movlb	1	; () banked
  2061  003B4E  6F5B               	movwf	_data_brake& (0+255),b
  2062                           
  2063                           ;parcheggio.c: 318: data_brake [1] = 1;
  2064  003B50  0E01               	movlw	1
  2065  003B52  0101               	movlb	1	; () banked
  2066  003B54  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2067                           
  2068                           ; BSR set to: 1
  2069                           ;parcheggio.c: 319: can_send();
  2070  003B56  ECF8  F02D         	call	_can_send	;wreg free
  2071                           
  2072                           ;parcheggio.c: 320: first = 1;
  2073  003B5A  8255               	bsf	_first/(0+8),_first& (0+7),c	;volatile
  2074  003B5C                     l8198:
  2075  003B5C  AC55               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2076  003B5E  A054               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  2077  003B60  D1BA               	goto	l8308
  2078  003B62  D7EA               	goto	l779
  2079  003B64                     l785:
  2080                           
  2081                           ;parcheggio.c: 324: LATBbits.LATB4 = 1;
  2082  003B64  888A               	bsf	3978,4,c	;volatile
  2083                           
  2084                           ;parcheggio.c: 326: bordo = (sensor_distance[0] + sensor_distance[1]) / 2;
  2085  003B66  5001               	movf	_sensor_distance,w,c	;volatile
  2086  003B68  2403               	addwf	_sensor_distance+2,w,c	;volatile
  2087  003B6A  0101               	movlb	1	; () banked
  2088  003B6C  6FD8               	movwf	??_park_routine& (0+255),b
  2089  003B6E  5002               	movf	_sensor_distance+1,w,c	;volatile
  2090  003B70  2004               	addwfc	_sensor_distance+3,w,c	;volatile
  2091  003B72  0101               	movlb	1	; () banked
  2092  003B74  6FD9               	movwf	(??_park_routine+1)& (0+255),b
  2093  003B76  90D8               	bcf	status,0,c
  2094  003B78  0101               	movlb	1	; () banked
  2095  003B7A  31D9               	rrcf	(??_park_routine+1)& (0+255),w,b
  2096  003B7C  0101               	movlb	1	; () banked
  2097  003B7E  6FDB               	movwf	(??_park_routine+3)& (0+255),b
  2098  003B80  0101               	movlb	1	; () banked
  2099  003B82  31D8               	rrcf	??_park_routine& (0+255),w,b
  2100  003B84  0101               	movlb	1	; () banked
  2101  003B86  6FDA               	movwf	(??_park_routine+2)& (0+255),b
  2102  003B88  C1DA  F0CB         	movff	??_park_routine+2,___xxtofl@val
  2103  003B8C  C1DB  F0CC         	movff	??_park_routine+3,___xxtofl@val+1
  2104  003B90  0100               	movlb	0	; () banked
  2105  003B92  6BCD               	clrf	(___xxtofl@val+2)& (0+255),b
  2106  003B94  6BCE               	clrf	(___xxtofl@val+3)& (0+255),b
  2107  003B96  0E00               	movlw	0
  2108  003B98  EC86  F02A         	call	___xxtofl
  2109  003B9C  C0CB  F12C         	movff	?___xxtofl,_bordo	;volatile
  2110  003BA0  C0CC  F12D         	movff	?___xxtofl+1,_bordo+1	;volatile
  2111  003BA4  C0CD  F12E         	movff	?___xxtofl+2,_bordo+2	;volatile
  2112  003BA8  C0CE  F12F         	movff	?___xxtofl+3,_bordo+3	;volatile
  2113                           
  2114                           ;parcheggio.c: 327: matematica();
  2115  003BAC  EC3A  F013         	call	_matematica	;wreg free
  2116                           
  2117                           ;parcheggio.c: 328: set_speed = 0;
  2118  003BB0  0E00               	movlw	0
  2119  003BB2  6E26               	movwf	_set_speed+1,c
  2120  003BB4  0E00               	movlw	0
  2121  003BB6  6E25               	movwf	_set_speed,c
  2122                           
  2123                           ;parcheggio.c: 329: data_steering[0] = 90;
  2124  003BB8  0E5A               	movlw	90
  2125  003BBA  0101               	movlb	1	; () banked
  2126  003BBC  6F73               	movwf	_data_steering& (0+255),b
  2127                           
  2128                           ; BSR set to: 1
  2129                           ;parcheggio.c: 330: data_brake [0] = 0;
  2130  003BBE  0E00               	movlw	0
  2131  003BC0  0101               	movlb	1	; () banked
  2132  003BC2  6F5B               	movwf	_data_brake& (0+255),b
  2133                           
  2134                           ; BSR set to: 1
  2135                           ;parcheggio.c: 331: data_brake [1] = 1;
  2136  003BC4  0E01               	movlw	1
  2137  003BC6  0101               	movlb	1	; () banked
  2138  003BC8  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2139                           
  2140                           ; BSR set to: 1
  2141                           ;parcheggio.c: 332: can_send();
  2142  003BCA  ECF8  F02D         	call	_can_send	;wreg free
  2143                           
  2144                           ;parcheggio.c: 333: delay_s(1);
  2145  003BCE  0E01               	movlw	1
  2146  003BD0  EC47  F033         	call	_delay_s
  2147                           
  2148                           ;parcheggio.c: 335: data_brake [0] = 3;
  2149  003BD4  0E03               	movlw	3
  2150  003BD6  0101               	movlb	1	; () banked
  2151  003BD8  6F5B               	movwf	_data_brake& (0+255),b
  2152                           
  2153                           ; BSR set to: 1
  2154                           ;parcheggio.c: 336: data_brake [1] = 1;
  2155  003BDA  0E01               	movlw	1
  2156  003BDC  0101               	movlb	1	; () banked
  2157  003BDE  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2158                           
  2159                           ; BSR set to: 1
  2160                           ;parcheggio.c: 338: set_speed = 1000;
  2161  003BE0  0E03               	movlw	3
  2162  003BE2  6E26               	movwf	_set_speed+1,c
  2163  003BE4  0EE8               	movlw	232
  2164  003BE6  6E25               	movwf	_set_speed,c
  2165                           
  2166                           ; BSR set to: 1
  2167                           ;parcheggio.c: 339: dir = 0;
  2168  003BE8  9654               	bcf	_dir/(0+8),_dir& (0+7),c
  2169                           
  2170                           ; BSR set to: 1
  2171                           ;parcheggio.c: 340: data_steering[0] = 90;
  2172  003BEA  0E5A               	movlw	90
  2173  003BEC  0101               	movlb	1	; () banked
  2174  003BEE  6F73               	movwf	_data_steering& (0+255),b
  2175                           
  2176                           ; BSR set to: 1
  2177                           ;parcheggio.c: 341: data_test[0] = ((50 + Pminimo + 5)-(n + 15));
  2178  003BF0  0E00               	movlw	0
  2179  003BF2  0100               	movlb	0	; () banked
  2180  003BF4  6FAD               	movwf	___fladd@a& (0+255),b
  2181  003BF6  0E00               	movlw	0
  2182  003BF8  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2183  003BFA  0E70               	movlw	112
  2184  003BFC  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2185  003BFE  0E41               	movlw	65
  2186  003C00  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2187  003C02  C138  F0A9         	movff	_n,___fladd@b
  2188  003C06  C139  F0AA         	movff	_n+1,___fladd@b+1
  2189  003C0A  C13A  F0AB         	movff	_n+2,___fladd@b+2
  2190  003C0E  C13B  F0AC         	movff	_n+3,___fladd@b+3
  2191  003C12  EC85  F018         	call	___fladd	;wreg free
  2192  003C16  C0A9  F0BD         	movff	?___fladd,___flneg@f1
  2193  003C1A  C0AA  F0BE         	movff	?___fladd+1,___flneg@f1+1
  2194  003C1E  C0AB  F0BF         	movff	?___fladd+2,___flneg@f1+2
  2195  003C22  C0AC  F0C0         	movff	?___fladd+3,___flneg@f1+3
  2196  003C26  ECFA  F032         	call	___flneg	;wreg free
  2197  003C2A  C0BD  F1DC         	movff	?___flneg,_park_routine$3744
  2198  003C2E  C0BE  F1DD         	movff	?___flneg+1,_park_routine$3744+1
  2199  003C32  C0BF  F1DE         	movff	?___flneg+2,_park_routine$3744+2
  2200  003C36  C0C0  F1DF         	movff	?___flneg+3,_park_routine$3744+3
  2201                           
  2202                           ;parcheggio.c: 341: data_test[0] = ((50 + Pminimo + 5)-(n + 15));
  2203  003C3A  C120  F0AD         	movff	_Pminimo,___fladd@a
  2204  003C3E  C121  F0AE         	movff	_Pminimo+1,___fladd@a+1
  2205  003C42  C122  F0AF         	movff	_Pminimo+2,___fladd@a+2
  2206  003C46  C123  F0B0         	movff	_Pminimo+3,___fladd@a+3
  2207  003C4A  C1DC  F0A9         	movff	_park_routine$3744,___fladd@b
  2208  003C4E  C1DD  F0AA         	movff	_park_routine$3744+1,___fladd@b+1
  2209  003C52  C1DE  F0AB         	movff	_park_routine$3744+2,___fladd@b+2
  2210  003C56  C1DF  F0AC         	movff	_park_routine$3744+3,___fladd@b+3
  2211  003C5A  EC85  F018         	call	___fladd	;wreg free
  2212  003C5E  C0A9  F1E0         	movff	?___fladd,_park_routine$3745
  2213  003C62  C0AA  F1E1         	movff	?___fladd+1,_park_routine$3745+1
  2214  003C66  C0AB  F1E2         	movff	?___fladd+2,_park_routine$3745+2
  2215  003C6A  C0AC  F1E3         	movff	?___fladd+3,_park_routine$3745+3
  2216                           
  2217                           ;parcheggio.c: 341: data_test[0] = ((50 + Pminimo + 5)-(n + 15));
  2218  003C6E  0E00               	movlw	0
  2219  003C70  0100               	movlb	0	; () banked
  2220  003C72  6FAD               	movwf	___fladd@a& (0+255),b
  2221  003C74  0E00               	movlw	0
  2222  003C76  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2223  003C78  0E5C               	movlw	92
  2224  003C7A  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2225  003C7C  0E42               	movlw	66
  2226  003C7E  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2227  003C80  C1E0  F0A9         	movff	_park_routine$3745,___fladd@b
  2228  003C84  C1E1  F0AA         	movff	_park_routine$3745+1,___fladd@b+1
  2229  003C88  C1E2  F0AB         	movff	_park_routine$3745+2,___fladd@b+2
  2230  003C8C  C1E3  F0AC         	movff	_park_routine$3745+3,___fladd@b+3
  2231  003C90  EC85  F018         	call	___fladd	;wreg free
  2232  003C94  C0A9  F0C1         	movff	?___fladd,___fltol@f1
  2233  003C98  C0AA  F0C2         	movff	?___fladd+1,___fltol@f1+1
  2234  003C9C  C0AB  F0C3         	movff	?___fladd+2,___fltol@f1+2
  2235  003CA0  C0AC  F0C4         	movff	?___fladd+3,___fltol@f1+3
  2236  003CA4  ECB0  F02F         	call	___fltol	;wreg free
  2237  003CA8  0100               	movlb	0	; () banked
  2238  003CAA  51C1               	movf	?___fltol& (0+255),w,b
  2239  003CAC  0101               	movlb	1	; () banked
  2240  003CAE  6F7B               	movwf	_data_test& (0+255),b
  2241                           
  2242                           ; BSR set to: 1
  2243                           ;parcheggio.c: 342: asd = 1;
  2244  003CB0  8254               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2245                           
  2246                           ; BSR set to: 1
  2247                           ;parcheggio.c: 343: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2248  003CB2  0E0D               	movlw	13
  2249  003CB4  0100               	movlb	0	; () banked
  2250  003CB6  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2251  003CB8  0E00               	movlw	0
  2252  003CBA  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2253  003CBC  0E00               	movlw	0
  2254  003CBE  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2255  003CC0  0E00               	movlw	0
  2256  003CC2  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2257  003CC4  0E7B               	movlw	low _data_test
  2258  003CC6  0100               	movlb	0	; () banked
  2259  003CC8  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2260  003CCA  0E01               	movlw	high _data_test
  2261  003CCC  0100               	movlb	0	; () banked
  2262  003CCE  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2263  003CD0  0E08               	movlw	8
  2264  003CD2  0100               	movlb	0	; () banked
  2265  003CD4  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2266  003CD6  0EBC               	movlw	188
  2267  003CD8  0100               	movlb	0	; () banked
  2268  003CDA  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2269  003CDC  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2270                           
  2271                           ;parcheggio.c: 344: can_send();
  2272  003CE0  ECF8  F02D         	call	_can_send	;wreg free
  2273  003CE4                     l786:
  2274  003CE4  B254               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2275  003CE6  D7FE               	goto	l786
  2276                           
  2277                           ;parcheggio.c: 347: set_speed = 0;
  2278  003CE8  0E00               	movlw	0
  2279  003CEA  6E26               	movwf	_set_speed+1,c
  2280  003CEC  0E00               	movlw	0
  2281  003CEE  6E25               	movwf	_set_speed,c
  2282                           
  2283                           ;parcheggio.c: 348: data_steering[0] = 90;
  2284  003CF0  0E5A               	movlw	90
  2285  003CF2  0101               	movlb	1	; () banked
  2286  003CF4  6F73               	movwf	_data_steering& (0+255),b
  2287                           
  2288                           ;parcheggio.c: 349: data_brake [0] = 0;
  2289  003CF6  0E00               	movlw	0
  2290  003CF8  0101               	movlb	1	; () banked
  2291  003CFA  6F5B               	movwf	_data_brake& (0+255),b
  2292                           
  2293                           ;parcheggio.c: 350: data_brake [1] = 1;
  2294  003CFC  0E01               	movlw	1
  2295  003CFE  0101               	movlb	1	; () banked
  2296  003D00  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2297                           
  2298                           ; BSR set to: 1
  2299                           ;parcheggio.c: 351: can_send();
  2300  003D02  ECF8  F02D         	call	_can_send	;wreg free
  2301                           
  2302                           ;parcheggio.c: 352: delay_s(1);
  2303  003D06  0E01               	movlw	1
  2304  003D08  EC47  F033         	call	_delay_s
  2305                           
  2306                           ;parcheggio.c: 354: data_brake [0] = 3;
  2307  003D0C  0E03               	movlw	3
  2308  003D0E  0101               	movlb	1	; () banked
  2309  003D10  6F5B               	movwf	_data_brake& (0+255),b
  2310                           
  2311                           ; BSR set to: 1
  2312                           ;parcheggio.c: 355: data_brake [1] = 1;
  2313  003D12  0E01               	movlw	1
  2314  003D14  0101               	movlb	1	; () banked
  2315  003D16  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2316                           
  2317                           ; BSR set to: 1
  2318                           ;parcheggio.c: 356: set_speed = 1000;
  2319  003D18  0E03               	movlw	3
  2320  003D1A  6E26               	movwf	_set_speed+1,c
  2321  003D1C  0EE8               	movlw	232
  2322  003D1E  6E25               	movwf	_set_speed,c
  2323                           
  2324                           ; BSR set to: 1
  2325                           ;parcheggio.c: 357: dir = 0;
  2326  003D20  9654               	bcf	_dir/(0+8),_dir& (0+7),c
  2327                           
  2328                           ; BSR set to: 1
  2329                           ;parcheggio.c: 358: data_steering[0] = 180;
  2330  003D22  0EB4               	movlw	180
  2331  003D24  0101               	movlb	1	; () banked
  2332  003D26  6F73               	movwf	_data_steering& (0+255),b
  2333                           
  2334                           ; BSR set to: 1
  2335                           ;parcheggio.c: 359: data_test[0] = prima_sterzata;
  2336  003D28  C140  F0C1         	movff	_prima_sterzata,___fltol@f1
  2337  003D2C  C141  F0C2         	movff	_prima_sterzata+1,___fltol@f1+1
  2338  003D30  C142  F0C3         	movff	_prima_sterzata+2,___fltol@f1+2
  2339  003D34  C143  F0C4         	movff	_prima_sterzata+3,___fltol@f1+3
  2340  003D38  ECB0  F02F         	call	___fltol	;wreg free
  2341  003D3C  0100               	movlb	0	; () banked
  2342  003D3E  51C1               	movf	?___fltol& (0+255),w,b
  2343  003D40  0101               	movlb	1	; () banked
  2344  003D42  6F7B               	movwf	_data_test& (0+255),b
  2345                           
  2346                           ; BSR set to: 1
  2347                           ;parcheggio.c: 360: asd = 1;
  2348  003D44  8254               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2349                           
  2350                           ; BSR set to: 1
  2351                           ;parcheggio.c: 361: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2352  003D46  0E0D               	movlw	13
  2353  003D48  0100               	movlb	0	; () banked
  2354  003D4A  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2355  003D4C  0E00               	movlw	0
  2356  003D4E  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2357  003D50  0E00               	movlw	0
  2358  003D52  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2359  003D54  0E00               	movlw	0
  2360  003D56  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2361  003D58  0E7B               	movlw	low _data_test
  2362  003D5A  0100               	movlb	0	; () banked
  2363  003D5C  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2364  003D5E  0E01               	movlw	high _data_test
  2365  003D60  0100               	movlb	0	; () banked
  2366  003D62  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2367  003D64  0E08               	movlw	8
  2368  003D66  0100               	movlb	0	; () banked
  2369  003D68  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2370  003D6A  0EBC               	movlw	188
  2371  003D6C  0100               	movlb	0	; () banked
  2372  003D6E  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2373  003D70  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2374                           
  2375                           ;parcheggio.c: 362: can_send();
  2376  003D74  ECF8  F02D         	call	_can_send	;wreg free
  2377  003D78                     l789:
  2378  003D78  B254               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2379  003D7A  D7FE               	goto	l789
  2380                           
  2381                           ;parcheggio.c: 364: set_speed = 1000;
  2382  003D7C  0E03               	movlw	3
  2383  003D7E  6E26               	movwf	_set_speed+1,c
  2384  003D80  0EE8               	movlw	232
  2385  003D82  6E25               	movwf	_set_speed,c
  2386                           
  2387                           ;parcheggio.c: 365: data_steering[0] = 0;
  2388  003D84  0E00               	movlw	0
  2389  003D86  0101               	movlb	1	; () banked
  2390  003D88  6F73               	movwf	_data_steering& (0+255),b
  2391                           
  2392                           ; BSR set to: 1
  2393                           ;parcheggio.c: 366: asd = 1;
  2394  003D8A  8254               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2395                           
  2396                           ; BSR set to: 1
  2397                           ;parcheggio.c: 367: data_test[0] = prima_sterzata + 9;
  2398  003D8C  0E00               	movlw	0
  2399  003D8E  0100               	movlb	0	; () banked
  2400  003D90  6FAD               	movwf	___fladd@a& (0+255),b
  2401  003D92  0E00               	movlw	0
  2402  003D94  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2403  003D96  0E10               	movlw	16
  2404  003D98  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2405  003D9A  0E41               	movlw	65
  2406  003D9C  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2407  003D9E  C140  F0A9         	movff	_prima_sterzata,___fladd@b
  2408  003DA2  C141  F0AA         	movff	_prima_sterzata+1,___fladd@b+1
  2409  003DA6  C142  F0AB         	movff	_prima_sterzata+2,___fladd@b+2
  2410  003DAA  C143  F0AC         	movff	_prima_sterzata+3,___fladd@b+3
  2411  003DAE  EC85  F018         	call	___fladd	;wreg free
  2412  003DB2  C0A9  F0C1         	movff	?___fladd,___fltol@f1
  2413  003DB6  C0AA  F0C2         	movff	?___fladd+1,___fltol@f1+1
  2414  003DBA  C0AB  F0C3         	movff	?___fladd+2,___fltol@f1+2
  2415  003DBE  C0AC  F0C4         	movff	?___fladd+3,___fltol@f1+3
  2416  003DC2  ECB0  F02F         	call	___fltol	;wreg free
  2417  003DC6  0100               	movlb	0	; () banked
  2418  003DC8  51C1               	movf	?___fltol& (0+255),w,b
  2419  003DCA  0101               	movlb	1	; () banked
  2420  003DCC  6F7B               	movwf	_data_test& (0+255),b
  2421                           
  2422                           ; BSR set to: 1
  2423                           ;parcheggio.c: 368: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2424  003DCE  0E0D               	movlw	13
  2425  003DD0  0100               	movlb	0	; () banked
  2426  003DD2  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2427  003DD4  0E00               	movlw	0
  2428  003DD6  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2429  003DD8  0E00               	movlw	0
  2430  003DDA  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2431  003DDC  0E00               	movlw	0
  2432  003DDE  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2433  003DE0  0E7B               	movlw	low _data_test
  2434  003DE2  0100               	movlb	0	; () banked
  2435  003DE4  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2436  003DE6  0E01               	movlw	high _data_test
  2437  003DE8  0100               	movlb	0	; () banked
  2438  003DEA  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2439  003DEC  0E08               	movlw	8
  2440  003DEE  0100               	movlb	0	; () banked
  2441  003DF0  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2442  003DF2  0EBC               	movlw	188
  2443  003DF4  0100               	movlb	0	; () banked
  2444  003DF6  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2445  003DF8  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2446                           
  2447                           ;parcheggio.c: 369: can_send();
  2448  003DFC  ECF8  F02D         	call	_can_send	;wreg free
  2449  003E00                     l792:
  2450  003E00  B254               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2451  003E02  D7FE               	goto	l792
  2452                           
  2453                           ;parcheggio.c: 371: data_brake [0] = 0;
  2454  003E04  0E00               	movlw	0
  2455  003E06  0101               	movlb	1	; () banked
  2456  003E08  6F5B               	movwf	_data_brake& (0+255),b
  2457                           
  2458                           ;parcheggio.c: 372: data_brake [1] = 1;
  2459  003E0A  0E01               	movlw	1
  2460  003E0C  0101               	movlb	1	; () banked
  2461  003E0E  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2462                           
  2463                           ;parcheggio.c: 373: set_speed = 0;
  2464  003E10  0E00               	movlw	0
  2465  003E12  6E26               	movwf	_set_speed+1,c
  2466  003E14  0E00               	movlw	0
  2467  003E16  6E25               	movwf	_set_speed,c
  2468                           
  2469                           ;parcheggio.c: 374: data_steering[0] = 90;
  2470  003E18  0E5A               	movlw	90
  2471  003E1A  0101               	movlb	1	; () banked
  2472  003E1C  6F73               	movwf	_data_steering& (0+255),b
  2473                           
  2474                           ; BSR set to: 1
  2475                           ;parcheggio.c: 375: can_send();
  2476  003E1E  ECF8  F02D         	call	_can_send	;wreg free
  2477                           
  2478                           ;parcheggio.c: 376: delay_s(1);
  2479  003E22  0E01               	movlw	1
  2480  003E24  EC47  F033         	call	_delay_s
  2481                           
  2482                           ;parcheggio.c: 377: avvicinamento = 1;
  2483  003E28  8454               	bsf	_avvicinamento/(0+8),_avvicinamento& (0+7),c	;volatile
  2484                           
  2485                           ;parcheggio.c: 378: if (sensor_distance [2] > 20) {
  2486  003E2A  5006               	movf	_sensor_distance+5,w,c	;volatile
  2487  003E2C  E104               	bnz	u10920
  2488  003E2E  0E15               	movlw	21
  2489  003E30  5C05               	subwf	_sensor_distance+4,w,c	;volatile
  2490  003E32  A0D8               	btfss	status,0,c
  2491  003E34  D016               	goto	l8292
  2492  003E36                     u10920:
  2493                           
  2494                           ;parcheggio.c: 379: data_brake [0] = 3;
  2495  003E36  0E03               	movlw	3
  2496  003E38  0101               	movlb	1	; () banked
  2497  003E3A  6F5B               	movwf	_data_brake& (0+255),b
  2498                           
  2499                           ;parcheggio.c: 380: data_brake [1] = 1;
  2500  003E3C  0E01               	movlw	1
  2501  003E3E  0101               	movlb	1	; () banked
  2502  003E40  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2503                           
  2504                           ;parcheggio.c: 381: set_speed = 500;
  2505  003E42  0E01               	movlw	1
  2506  003E44  6E26               	movwf	_set_speed+1,c
  2507  003E46  0EF4               	movlw	244
  2508  003E48  6E25               	movwf	_set_speed,c
  2509                           
  2510                           ;parcheggio.c: 382: data_steering[0] = 90;
  2511  003E4A  0E5A               	movlw	90
  2512  003E4C  0101               	movlb	1	; () banked
  2513  003E4E  6F73               	movwf	_data_steering& (0+255),b
  2514                           
  2515                           ; BSR set to: 1
  2516                           ;parcheggio.c: 383: dir = 1;
  2517  003E50  8654               	bsf	_dir/(0+8),_dir& (0+7),c
  2518                           
  2519                           ; BSR set to: 1
  2520                           ;parcheggio.c: 384: can_send();
  2521  003E52  ECF8  F02D         	call	_can_send	;wreg free
  2522  003E56                     l8290:
  2523  003E56  5006               	movf	_sensor_distance+5,w,c	;volatile
  2524  003E58  E1FE               	bnz	l8290
  2525  003E5A  0E15               	movlw	21
  2526  003E5C  5C05               	subwf	_sensor_distance+4,w,c	;volatile
  2527  003E5E  B0D8               	btfsc	status,0,c
  2528  003E60  D7FA               	goto	l8290
  2529  003E62                     l8292:
  2530                           
  2531                           ;parcheggio.c: 386: }
  2532                           ;parcheggio.c: 387: data_brake [0] = 0;
  2533  003E62  0E00               	movlw	0
  2534  003E64  0101               	movlb	1	; () banked
  2535  003E66  6F5B               	movwf	_data_brake& (0+255),b
  2536                           
  2537                           ;parcheggio.c: 388: data_brake [1] = 1;
  2538  003E68  0E01               	movlw	1
  2539  003E6A  0101               	movlb	1	; () banked
  2540  003E6C  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2541                           
  2542                           ;parcheggio.c: 389: set_speed = 0;
  2543  003E6E  0E00               	movlw	0
  2544  003E70  6E26               	movwf	_set_speed+1,c
  2545  003E72  0E00               	movlw	0
  2546  003E74  6E25               	movwf	_set_speed,c
  2547                           
  2548                           ;parcheggio.c: 390: data_steering[0] = 90;
  2549  003E76  0E5A               	movlw	90
  2550  003E78  0101               	movlb	1	; () banked
  2551  003E7A  6F73               	movwf	_data_steering& (0+255),b
  2552                           
  2553                           ; BSR set to: 1
  2554                           ;parcheggio.c: 391: dir = 0;
  2555  003E7C  9654               	bcf	_dir/(0+8),_dir& (0+7),c
  2556                           
  2557                           ; BSR set to: 1
  2558                           ;parcheggio.c: 392: can_send();
  2559  003E7E  ECF8  F02D         	call	_can_send	;wreg free
  2560                           
  2561                           ;parcheggio.c: 393: delay_s(1);
  2562  003E82  0E01               	movlw	1
  2563  003E84  EC47  F033         	call	_delay_s
  2564                           
  2565                           ;parcheggio.c: 394: data[0] = 3;
  2566  003E88  0E03               	movlw	3
  2567  003E8A  0101               	movlb	1	; () banked
  2568  003E8C  6F53               	movwf	_data& (0+255),b
  2569  003E8E                     l8302:
  2570  003E8E  EC5D  F033         	call	_CANisTxReady	;wreg free
  2571  003E92  0900               	iorlw	0
  2572  003E94  B4D8               	btfsc	status,2,c
  2573  003E96  D7FB               	goto	l8302
  2574                           
  2575                           ;parcheggio.c: 396: CANsendMessage(0b00000001011, data, 8, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  2576  003E98  0E0B               	movlw	11
  2577  003E9A  0100               	movlb	0	; () banked
  2578  003E9C  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2579  003E9E  0E00               	movlw	0
  2580  003EA0  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2581  003EA2  0E00               	movlw	0
  2582  003EA4  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2583  003EA6  0E00               	movlw	0
  2584  003EA8  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2585  003EAA  0E53               	movlw	low _data
  2586  003EAC  0100               	movlb	0	; () banked
  2587  003EAE  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2588  003EB0  0E01               	movlw	high _data
  2589  003EB2  0100               	movlb	0	; () banked
  2590  003EB4  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2591  003EB6  0E08               	movlw	8
  2592  003EB8  0100               	movlb	0	; () banked
  2593  003EBA  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2594  003EBC  0EBC               	movlw	188
  2595  003EBE  0100               	movlb	0	; () banked
  2596  003EC0  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2597  003EC2  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2598                           
  2599                           ;parcheggio.c: 397: delay_ms(100);
  2600  003EC6  0E00               	movlw	0
  2601  003EC8  0100               	movlb	0	; () banked
  2602  003ECA  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2603  003ECC  0E64               	movlw	100
  2604  003ECE  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  2605  003ED0  ECDD  F032         	call	_delay_ms	;wreg free
  2606  003ED4  00FF               	reset		;# 
  2607  003ED6                     l8308:
  2608  003ED6  AA81               	btfss	3969,5,c	;volatile
  2609  003ED8  0012               	return	
  2610  003EDA  A054               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  2611  003EDC  0012               	return	
  2612  003EDE  AC55               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2613  003EE0  0012               	return	
  2614  003EE2  D640               	goto	l785
  2615  003EE4                     __end_of_park_routine:
  2616                           	opt stack 0
  2617                           tblptru	equ	0xFF8
  2618                           tblptrh	equ	0xFF7
  2619                           tblptrl	equ	0xFF6
  2620                           tablat	equ	0xFF5
  2621                           postinc0	equ	0xFEE
  2622                           wreg	equ	0xFE8
  2623                           postdec1	equ	0xFE5
  2624                           fsr1l	equ	0xFE1
  2625                           postinc2	equ	0xFDE
  2626                           postdec2	equ	0xFDD
  2627                           status	equ	0xFD8
  2628                           
  2629 ;; *************** function _parallelo *****************
  2630 ;; Defined at:
  2631 ;;		line 423 in file "parcheggio.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;		None
  2634 ;; Auto vars:     Size  Location     Type
  2635 ;;		None
  2636 ;; Return value:  Size  Location     Type
  2637 ;;		None               void
  2638 ;; Registers used:
  2639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2647 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2648 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2649 ;;Total ram usage:        2 bytes
  2650 ;; Hardware stack levels used:    1
  2651 ;; Hardware stack levels required when called:    8
  2652 ;; This function calls:
  2653 ;;		___fladd
  2654 ;;		___fldiv
  2655 ;;		___flge
  2656 ;;		___flmul
  2657 ;;		___fltol
  2658 ;;		___xxtofl
  2659 ;;		_abs
  2660 ;;		_asin
  2661 ;;		_can_send
  2662 ;;		_sqrt
  2663 ;; This function is called by:
  2664 ;;		_park_search
  2665 ;;		_park_routine
  2666 ;; This function uses a non-reentrant model
  2667 ;;
  2668                           
  2669                           	psect	text3
  2670  005036                     __ptext3:
  2671                           	opt stack 0
  2672  005036                     _parallelo:
  2673                           	opt stack 21
  2674                           
  2675                           ;parcheggio.c: 424: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  2676                           
  2677                           ;incstack = 0
  2678  005036  EE20  F003         	lfsr	2,_sensor_distance+2	;volatile
  2679  00503A  CFDE F1B4          	movff	postinc2,??_parallelo
  2680  00503E  CFDD F1B5          	movff	postdec2,??_parallelo+1
  2681  005042  0101               	movlb	1	; () banked
  2682  005044  1FB4               	comf	??_parallelo& (0+255),f,b
  2683  005046  1FB5               	comf	(??_parallelo+1)& (0+255),f,b
  2684  005048  4BB4               	infsnz	??_parallelo& (0+255),f,b
  2685  00504A  2BB5               	incf	(??_parallelo+1)& (0+255),f,b
  2686  00504C  5001               	movf	_sensor_distance,w,c	;volatile
  2687  00504E  0101               	movlb	1	; () banked
  2688  005050  25B4               	addwf	??_parallelo& (0+255),w,b
  2689  005052  0100               	movlb	0	; () banked
  2690  005054  6F77               	movwf	abs@a& (0+255),b
  2691  005056  5002               	movf	_sensor_distance+1,w,c	;volatile
  2692  005058  0101               	movlb	1	; () banked
  2693  00505A  21B5               	addwfc	(??_parallelo+1)& (0+255),w,b
  2694  00505C  0100               	movlb	0	; () banked
  2695  00505E  6F78               	movwf	(abs@a+1)& (0+255),b
  2696  005060  EC31  F033         	call	_abs	;wreg free
  2697  005064  0100               	movlb	0	; () banked
  2698  005066  C077  F0CB         	movff	?_abs,___xxtofl@val
  2699  00506A  0100               	movlb	0	; () banked
  2700  00506C  C078  F0CC         	movff	?_abs+1,___xxtofl@val+1
  2701  005070  0100               	movlb	0	; () banked
  2702  005072  0E00               	movlw	0
  2703  005074  BFCC               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2704  005076  0EFF               	movlw	-1
  2705  005078  6FCD               	movwf	(___xxtofl@val+2)& (0+255),b
  2706  00507A  6FCE               	movwf	(___xxtofl@val+3)& (0+255),b
  2707  00507C  0E01               	movlw	1
  2708  00507E  EC86  F02A         	call	___xxtofl
  2709  005082  C0CB  F011         	movff	?___xxtofl,_alignment_gap
  2710  005086  C0CC  F012         	movff	?___xxtofl+1,_alignment_gap+1
  2711  00508A  C0CD  F013         	movff	?___xxtofl+2,_alignment_gap+2
  2712  00508E  C0CE  F014         	movff	?___xxtofl+3,_alignment_gap+3
  2713                           
  2714                           ;parcheggio.c: 425: if (alignment_gap < 20) {
  2715  005092  C011  F0C5         	movff	_alignment_gap,___flge@ff1
  2716  005096  C012  F0C6         	movff	_alignment_gap+1,___flge@ff1+1
  2717  00509A  C013  F0C7         	movff	_alignment_gap+2,___flge@ff1+2
  2718  00509E  C014  F0C8         	movff	_alignment_gap+3,___flge@ff1+3
  2719  0050A2  0E00               	movlw	0
  2720  0050A4  0100               	movlb	0	; () banked
  2721  0050A6  6FC9               	movwf	___flge@ff2& (0+255),b
  2722  0050A8  0E00               	movlw	0
  2723  0050AA  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
  2724  0050AC  0EA0               	movlw	160
  2725  0050AE  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
  2726  0050B0  0E41               	movlw	65
  2727  0050B2  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
  2728  0050B4  EC30  F02D         	call	___flge	;wreg free
  2729  0050B8  0100               	movlb	0	; () banked
  2730  0050BA  B0D8               	btfsc	status,0,c
  2731  0050BC  D0F5               	goto	l822
  2732                           
  2733                           ; BSR set to: 0
  2734                           ;parcheggio.c: 426: if ((sensor_distance[0] < 30) && (sensor_distance[1] < 30)) {
  2735  0050BE  5002               	movf	_sensor_distance+1,w,c	;volatile
  2736  0050C0  E103               	bnz	u10551
  2737  0050C2  0E1E               	movlw	30
  2738  0050C4  5C01               	subwf	_sensor_distance,w,c	;volatile
  2739  0050C6  B0D8               	btfsc	status,0,c
  2740  0050C8                     u10551:
  2741  0050C8  D0E1               	goto	l8000
  2742                           
  2743                           ; BSR set to: 0
  2744  0050CA  5004               	movf	_sensor_distance+3,w,c	;volatile
  2745  0050CC  E103               	bnz	u10561
  2746  0050CE  0E1E               	movlw	30
  2747  0050D0  5C03               	subwf	_sensor_distance+2,w,c	;volatile
  2748  0050D2  B0D8               	btfsc	status,0,c
  2749  0050D4                     u10561:
  2750  0050D4  D0DB               	goto	l8000
  2751                           
  2752                           ; BSR set to: 0
  2753                           ;parcheggio.c: 430: x = ((100) + (alignment_gap * alignment_gap));
  2754  0050D6  C011  F094         	movff	_alignment_gap,___flmul@a
  2755  0050DA  C012  F095         	movff	_alignment_gap+1,___flmul@a+1
  2756  0050DE  C013  F096         	movff	_alignment_gap+2,___flmul@a+2
  2757  0050E2  C014  F097         	movff	_alignment_gap+3,___flmul@a+3
  2758  0050E6  C011  F090         	movff	_alignment_gap,___flmul@b
  2759  0050EA  C012  F091         	movff	_alignment_gap+1,___flmul@b+1
  2760  0050EE  C013  F092         	movff	_alignment_gap+2,___flmul@b+2
  2761  0050F2  C014  F093         	movff	_alignment_gap+3,___flmul@b+3
  2762  0050F6  ECD9  F01A         	call	___flmul	;wreg free
  2763  0050FA  C090  F0A9         	movff	?___flmul,___fladd@b
  2764  0050FE  C091  F0AA         	movff	?___flmul+1,___fladd@b+1
  2765  005102  C092  F0AB         	movff	?___flmul+2,___fladd@b+2
  2766  005106  C093  F0AC         	movff	?___flmul+3,___fladd@b+3
  2767  00510A  0E00               	movlw	0
  2768  00510C  0100               	movlb	0	; () banked
  2769  00510E  6FAD               	movwf	___fladd@a& (0+255),b
  2770  005110  0E00               	movlw	0
  2771  005112  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2772  005114  0EC8               	movlw	200
  2773  005116  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2774  005118  0E42               	movlw	66
  2775  00511A  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2776  00511C  EC85  F018         	call	___fladd	;wreg free
  2777  005120  C0A9  F0DA         	movff	?___fladd,_x
  2778  005124  C0AA  F0DB         	movff	?___fladd+1,_x+1
  2779  005128  C0AB  F0DC         	movff	?___fladd+2,_x+2
  2780  00512C  C0AC  F0DD         	movff	?___fladd+3,_x+3
  2781                           
  2782                           ;parcheggio.c: 431: x = sqrt(x);
  2783  005130  C0DA  F0C1         	movff	_x,sqrt@a
  2784  005134  C0DB  F0C2         	movff	_x+1,sqrt@a+1
  2785  005138  C0DC  F0C3         	movff	_x+2,sqrt@a+2
  2786  00513C  C0DD  F0C4         	movff	_x+3,sqrt@a+3
  2787  005140  EC72  F01F         	call	_sqrt	;wreg free
  2788  005144  C0C1  F0DA         	movff	?_sqrt,_x
  2789  005148  C0C2  F0DB         	movff	?_sqrt+1,_x+1
  2790  00514C  C0C3  F0DC         	movff	?_sqrt+2,_x+2
  2791  005150  C0C4  F0DD         	movff	?_sqrt+3,_x+3
  2792                           
  2793                           ;parcheggio.c: 432: z = alignment_gap / x;
  2794  005154  C011  F077         	movff	_alignment_gap,___fldiv@b
  2795  005158  C012  F078         	movff	_alignment_gap+1,___fldiv@b+1
  2796  00515C  C013  F079         	movff	_alignment_gap+2,___fldiv@b+2
  2797  005160  C014  F07A         	movff	_alignment_gap+3,___fldiv@b+3
  2798  005164  C0DA  F07B         	movff	_x,___fldiv@a
  2799  005168  C0DB  F07C         	movff	_x+1,___fldiv@a+1
  2800  00516C  C0DC  F07D         	movff	_x+2,___fldiv@a+2
  2801  005170  C0DD  F07E         	movff	_x+3,___fldiv@a+3
  2802  005174  EC57  F021         	call	___fldiv	;wreg free
  2803  005178  C077  F015         	movff	?___fldiv,_z
  2804  00517C  C078  F016         	movff	?___fldiv+1,_z+1
  2805  005180  C079  F017         	movff	?___fldiv+2,_z+2
  2806  005184  C07A  F018         	movff	?___fldiv+3,_z+3
  2807                           
  2808                           ;parcheggio.c: 433: z = asin(z);
  2809  005188  C015  F0D5         	movff	_z,asin@x
  2810  00518C  C016  F0D6         	movff	_z+1,asin@x+1
  2811  005190  C017  F0D7         	movff	_z+2,asin@x+2
  2812  005194  C018  F0D8         	movff	_z+3,asin@x+3
  2813  005198  EC92  F026         	call	_asin	;wreg free
  2814  00519C  C0D5  F015         	movff	?_asin,_z
  2815  0051A0  C0D6  F016         	movff	?_asin+1,_z+1
  2816  0051A4  C0D7  F017         	movff	?_asin+2,_z+2
  2817  0051A8  C0D8  F018         	movff	?_asin+3,_z+3
  2818                           
  2819                           ;parcheggio.c: 434: z = z / 3.14159265358979323846 * 180;
  2820  0051AC  0EDB               	movlw	219
  2821  0051AE  0100               	movlb	0	; () banked
  2822  0051B0  6F7B               	movwf	___fldiv@a& (0+255),b
  2823  0051B2  0E0F               	movlw	15
  2824  0051B4  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  2825  0051B6  0E49               	movlw	73
  2826  0051B8  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  2827  0051BA  0E40               	movlw	64
  2828  0051BC  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  2829  0051BE  C015  F077         	movff	_z,___fldiv@b
  2830  0051C2  C016  F078         	movff	_z+1,___fldiv@b+1
  2831  0051C6  C017  F079         	movff	_z+2,___fldiv@b+2
  2832  0051CA  C018  F07A         	movff	_z+3,___fldiv@b+3
  2833  0051CE  EC57  F021         	call	___fldiv	;wreg free
  2834  0051D2  C077  F090         	movff	?___fldiv,___flmul@b
  2835  0051D6  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  2836  0051DA  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  2837  0051DE  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  2838  0051E2  0E00               	movlw	0
  2839  0051E4  0100               	movlb	0	; () banked
  2840  0051E6  6F94               	movwf	___flmul@a& (0+255),b
  2841  0051E8  0E00               	movlw	0
  2842  0051EA  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2843  0051EC  0E34               	movlw	52
  2844  0051EE  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2845  0051F0  0E43               	movlw	67
  2846  0051F2  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2847  0051F4  ECD9  F01A         	call	___flmul	;wreg free
  2848  0051F8  C090  F015         	movff	?___flmul,_z
  2849  0051FC  C091  F016         	movff	?___flmul+1,_z+1
  2850  005200  C092  F017         	movff	?___flmul+2,_z+2
  2851  005204  C093  F018         	movff	?___flmul+3,_z+3
  2852                           
  2853                           ;parcheggio.c: 435: data_correction[0] = z;
  2854  005208  C015  F0C1         	movff	_z,___fltol@f1
  2855  00520C  C016  F0C2         	movff	_z+1,___fltol@f1+1
  2856  005210  C017  F0C3         	movff	_z+2,___fltol@f1+2
  2857  005214  C018  F0C4         	movff	_z+3,___fltol@f1+3
  2858  005218  ECB0  F02F         	call	___fltol	;wreg free
  2859  00521C  0100               	movlb	0	; () banked
  2860  00521E  51C1               	movf	?___fltol& (0+255),w,b
  2861  005220  0101               	movlb	1	; () banked
  2862  005222  6F63               	movwf	_data_correction& (0+255),b
  2863                           
  2864                           ; BSR set to: 1
  2865                           ;parcheggio.c: 437: if (sensor_distance[0] < sensor_distance[1]) {
  2866  005224  5003               	movf	_sensor_distance+2,w,c	;volatile
  2867  005226  5C01               	subwf	_sensor_distance,w,c	;volatile
  2868  005228  5004               	movf	_sensor_distance+3,w,c	;volatile
  2869  00522A  5802               	subwfb	_sensor_distance+1,w,c	;volatile
  2870  00522C  B0D8               	btfsc	status,0,c
  2871  00522E  D002               	goto	l7992
  2872                           
  2873                           ; BSR set to: 1
  2874                           ;parcheggio.c: 438: data_correction[1] = 0;
  2875  005230  0E00               	movlw	0
  2876  005232  D001               	goto	L1
  2877  005234                     l7992:
  2878                           
  2879                           ; BSR set to: 1
  2880                           ;parcheggio.c: 440: data_correction[1] = 1;
  2881  005234  0E01               	movlw	1
  2882  005236                     L1:
  2883  005236  0101               	movlb	1	; () banked
  2884  005238  6F64               	movwf	(_data_correction+1)& (0+255),b
  2885                           
  2886                           ; BSR set to: 1
  2887                           ;parcheggio.c: 441: }
  2888                           ;parcheggio.c: 442: if ((old_alignment_gap != alignment_gap) || (old_data_correction != 
      +                          data_correction[1])) {
  2889                           
  2890                           ; BSR set to: 1
  2891  00523A  5011               	movf	_alignment_gap,w,c
  2892  00523C  0101               	movlb	1	; () banked
  2893  00523E  193C               	xorwf	_old_alignment_gap& (0+255),w,b
  2894  005240  E114               	bnz	l828
  2895  005242  5012               	movf	_alignment_gap+1,w,c
  2896  005244  0101               	movlb	1	; () banked
  2897  005246  193D               	xorwf	(_old_alignment_gap+1)& (0+255),w,b
  2898  005248  E110               	bnz	l828
  2899  00524A  5013               	movf	_alignment_gap+2,w,c
  2900  00524C  0101               	movlb	1	; () banked
  2901  00524E  193E               	xorwf	(_old_alignment_gap+2)& (0+255),w,b
  2902  005250  E10C               	bnz	l828
  2903  005252  5014               	movf	_alignment_gap+3,w,c
  2904  005254  0101               	movlb	1	; () banked
  2905  005256  193F               	xorwf	(_old_alignment_gap+3)& (0+255),w,b
  2906  005258  A4D8               	btfss	status,2,c
  2907  00525A  D007               	goto	l828
  2908                           
  2909                           ; BSR set to: 1
  2910  00525C  0E00               	movlw	0
  2911  00525E  B655               	btfsc	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2912  005260  0E01               	movlw	1
  2913  005262  0101               	movlb	1	; () banked
  2914  005264  1964               	xorwf	(_data_correction+1)& (0+255),w,b
  2915  005266  B4D8               	btfsc	status,2,c
  2916  005268  0012               	return	
  2917  00526A                     l828:
  2918                           
  2919                           ; BSR set to: 1
  2920                           ;parcheggio.c: 443: old_alignment_gap = alignment_gap;
  2921  00526A  C011  F13C         	movff	_alignment_gap,_old_alignment_gap
  2922  00526E  C012  F13D         	movff	_alignment_gap+1,_old_alignment_gap+1
  2923  005272  C013  F13E         	movff	_alignment_gap+2,_old_alignment_gap+2
  2924  005276  C014  F13F         	movff	_alignment_gap+3,_old_alignment_gap+3
  2925                           
  2926                           ;parcheggio.c: 444: old_data_correction = data_correction[1];
  2927  00527A  0101               	movlb	1	; () banked
  2928  00527C  A164               	btfss	(_data_correction+1)& (0+255),0,b
  2929  00527E  D002               	goto	u10600
  2930  005280  8655               	bsf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2931  005282  D001               	goto	l7998
  2932  005284                     u10600:
  2933  005284  9655               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2934  005286                     l7998:
  2935                           
  2936                           ;parcheggio.c: 445: can_send();
  2937  005286  ECF8  F02D         	call	_can_send	;wreg free
  2938                           
  2939                           ;parcheggio.c: 446: }
  2940                           ;parcheggio.c: 447: } else if (data_correction[0] != old_data_correction) {
  2941  00528A  0012               	return	
  2942  00528C                     l8000:
  2943  00528C  0E00               	movlw	0
  2944  00528E  B655               	btfsc	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2945  005290  0E01               	movlw	1
  2946  005292  0101               	movlb	1	; () banked
  2947  005294  1963               	xorwf	_data_correction& (0+255),w,b
  2948  005296  B4D8               	btfsc	status,2,c
  2949  005298  0012               	return	
  2950                           
  2951                           ; BSR set to: 1
  2952                           ;parcheggio.c: 448: data_correction[0] = 0;
  2953  00529A  0E00               	movlw	0
  2954  00529C  0101               	movlb	1	; () banked
  2955  00529E  6F63               	movwf	_data_correction& (0+255),b
  2956                           
  2957                           ; BSR set to: 1
  2958                           ;parcheggio.c: 449: old_data_correction = 0;
  2959  0052A0  9655               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2960                           
  2961                           ; BSR set to: 1
  2962                           ;parcheggio.c: 450: can_send();
  2963  0052A2  ECF8  F02D         	call	_can_send	;wreg free
  2964                           
  2965                           ;parcheggio.c: 451: }
  2966                           ;parcheggio.c: 452: } else {
  2967  0052A6  0012               	return	
  2968  0052A8                     l822:
  2969                           
  2970                           ; BSR set to: 0
  2971                           ;parcheggio.c: 453: if (old_data_correction != 0) {
  2972  0052A8  A655               	btfss	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2973  0052AA  0012               	return	
  2974                           
  2975                           ; BSR set to: 0
  2976                           ;parcheggio.c: 454: data_correction[0] = 0;
  2977  0052AC  0E00               	movlw	0
  2978  0052AE  0101               	movlb	1	; () banked
  2979  0052B0  6F63               	movwf	_data_correction& (0+255),b
  2980                           
  2981                           ; BSR set to: 1
  2982                           ;parcheggio.c: 455: old_data_correction = 0;
  2983  0052B2  9655               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2984                           
  2985                           ; BSR set to: 1
  2986                           ;parcheggio.c: 456: can_send();
  2987  0052B4  ECF8  F02D         	call	_can_send	;wreg free
  2988  0052B8  0012               	return	
  2989  0052BA                     __end_of_parallelo:
  2990                           	opt stack 0
  2991                           tblptru	equ	0xFF8
  2992                           tblptrh	equ	0xFF7
  2993                           tblptrl	equ	0xFF6
  2994                           tablat	equ	0xFF5
  2995                           postinc0	equ	0xFEE
  2996                           wreg	equ	0xFE8
  2997                           postdec1	equ	0xFE5
  2998                           fsr1l	equ	0xFE1
  2999                           postinc2	equ	0xFDE
  3000                           postdec2	equ	0xFDD
  3001                           status	equ	0xFD8
  3002                           
  3003 ;; *************** function _can_send *****************
  3004 ;; Defined at:
  3005 ;;		line 402 in file "parcheggio.c"
  3006 ;; Parameters:    Size  Location     Type
  3007 ;;		None
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;  data_correct    0   39[BANK0 ] unsigned char [0]
  3010 ;; Return value:  Size  Location     Type
  3011 ;;		None               void
  3012 ;; Registers used:
  3013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3023 ;;Total ram usage:        0 bytes
  3024 ;; Hardware stack levels used:    1
  3025 ;; Hardware stack levels required when called:    5
  3026 ;; This function calls:
  3027 ;;		_CANisTxReady
  3028 ;;		_CANsendMessage
  3029 ;; This function is called by:
  3030 ;;		_park_routine
  3031 ;;		_parallelo
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035                           	psect	text4
  3036  005BF0                     __ptext4:
  3037                           	opt stack 0
  3038  005BF0                     _can_send:
  3039                           	opt stack 23
  3040                           
  3041                           ;parcheggio.c: 403: if (PORTBbits.RB5 == 1) {
  3042                           
  3043                           ;incstack = 0
  3044  005BF0  AA81               	btfss	3969,5,c	;volatile
  3045  005BF2  D062               	goto	l7848
  3046  005BF4                     l7828:
  3047  005BF4  EC5D  F033         	call	_CANisTxReady	;wreg free
  3048  005BF8  06E8               	decf	wreg,f,c
  3049  005BFA  A4D8               	btfss	status,2,c
  3050  005BFC  D7FB               	goto	l7828
  3051                           
  3052                           ;parcheggio.c: 405: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG &
      +                           CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3053  005BFE  0E05               	movlw	5
  3054  005C00  0100               	movlb	0	; () banked
  3055  005C02  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3056  005C04  0E00               	movlw	0
  3057  005C06  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3058  005C08  0E00               	movlw	0
  3059  005C0A  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3060  005C0C  0E00               	movlw	0
  3061  005C0E  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3062  005C10  0E73               	movlw	low _data_steering
  3063  005C12  0100               	movlb	0	; () banked
  3064  005C14  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3065  005C16  0E01               	movlw	high _data_steering
  3066  005C18  0100               	movlb	0	; () banked
  3067  005C1A  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3068  005C1C  0E08               	movlw	8
  3069  005C1E  0100               	movlb	0	; () banked
  3070  005C20  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3071  005C22  0EBC               	movlw	188
  3072  005C24  0100               	movlb	0	; () banked
  3073  005C26  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3074  005C28  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3075                           
  3076                           ;parcheggio.c: 406: data_speed[0] = set_speed;
  3077  005C2C  C025  F16B         	movff	_set_speed,_data_speed
  3078                           
  3079                           ;parcheggio.c: 407: data_speed[1] = (set_speed >> 8);
  3080  005C30  5026               	movf	_set_speed+1,w,c
  3081  005C32  0101               	movlb	1	; () banked
  3082  005C34  6F6C               	movwf	(_data_speed+1)& (0+255),b
  3083                           
  3084                           ; BSR set to: 1
  3085                           ;parcheggio.c: 408: data_speed[2] = dir;
  3086  005C36  0E00               	movlw	0
  3087  005C38  B654               	btfsc	_dir/(0+8),_dir& (0+7),c
  3088  005C3A  0E01               	movlw	1
  3089  005C3C  0101               	movlb	1	; () banked
  3090  005C3E  6F6D               	movwf	(_data_speed+2)& (0+255),b
  3091  005C40                     l7838:
  3092  005C40  EC5D  F033         	call	_CANisTxReady	;wreg free
  3093  005C44  06E8               	decf	wreg,f,c
  3094  005C46  A4D8               	btfss	status,2,c
  3095  005C48  D7FB               	goto	l7838
  3096                           
  3097                           ;parcheggio.c: 410: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3098  005C4A  0E03               	movlw	3
  3099  005C4C  0100               	movlb	0	; () banked
  3100  005C4E  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3101  005C50  0E00               	movlw	0
  3102  005C52  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3103  005C54  0E00               	movlw	0
  3104  005C56  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3105  005C58  0E00               	movlw	0
  3106  005C5A  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3107  005C5C  0E6B               	movlw	low _data_speed
  3108  005C5E  0100               	movlb	0	; () banked
  3109  005C60  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3110  005C62  0E01               	movlw	high _data_speed
  3111  005C64  0100               	movlb	0	; () banked
  3112  005C66  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3113  005C68  0E08               	movlw	8
  3114  005C6A  0100               	movlb	0	; () banked
  3115  005C6C  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3116  005C6E  0EBC               	movlw	188
  3117  005C70  0100               	movlb	0	; () banked
  3118  005C72  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3119  005C74  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3120  005C78                     l7842:
  3121  005C78  EC5D  F033         	call	_CANisTxReady	;wreg free
  3122  005C7C  06E8               	decf	wreg,f,c
  3123  005C7E  A4D8               	btfss	status,2,c
  3124  005C80  D7FB               	goto	l7842
  3125                           
  3126                           ;parcheggio.c: 412: data_brake[1] = 0;
  3127  005C82  0E00               	movlw	0
  3128  005C84  0101               	movlb	1	; () banked
  3129  005C86  6F5C               	movwf	(_data_brake+1)& (0+255),b
  3130                           
  3131                           ; BSR set to: 1
  3132                           ;parcheggio.c: 413: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3133  005C88  0E04               	movlw	4
  3134  005C8A  0100               	movlb	0	; () banked
  3135  005C8C  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3136  005C8E  0E00               	movlw	0
  3137  005C90  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3138  005C92  0E00               	movlw	0
  3139  005C94  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3140  005C96  0E00               	movlw	0
  3141  005C98  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3142  005C9A  0E5B               	movlw	low _data_brake
  3143  005C9C  0100               	movlb	0	; () banked
  3144  005C9E  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3145  005CA0  0E01               	movlw	high _data_brake
  3146  005CA2  0100               	movlb	0	; () banked
  3147  005CA4  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3148  005CA6  0E08               	movlw	8
  3149  005CA8  0100               	movlb	0	; () banked
  3150  005CAA  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3151  005CAC  0EBC               	movlw	188
  3152  005CAE  0100               	movlb	0	; () banked
  3153  005CB0  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3154  005CB2  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3155                           
  3156                           ;parcheggio.c: 414: } else {
  3157  005CB6  0012               	return	
  3158  005CB8                     l7848:
  3159                           
  3160                           ;parcheggio.c: 415: CANsendMessage(0b00000001110, data_correction, 8, CAN_CONFIG_STD_MSG
      +                           & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3161  005CB8  0E0E               	movlw	14
  3162  005CBA  0100               	movlb	0	; () banked
  3163  005CBC  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3164  005CBE  0E00               	movlw	0
  3165  005CC0  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3166  005CC2  0E00               	movlw	0
  3167  005CC4  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3168  005CC6  0E00               	movlw	0
  3169  005CC8  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3170  005CCA  0E63               	movlw	low _data_correction
  3171  005CCC  0100               	movlb	0	; () banked
  3172  005CCE  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3173  005CD0  0E01               	movlw	high _data_correction
  3174  005CD2  0100               	movlb	0	; () banked
  3175  005CD4  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3176  005CD6  0E08               	movlw	8
  3177  005CD8  0100               	movlb	0	; () banked
  3178  005CDA  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3179  005CDC  0EBC               	movlw	188
  3180  005CDE  0100               	movlb	0	; () banked
  3181  005CE0  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3182  005CE2  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3183                           
  3184                           ;parcheggio.c: 416: unsigned char data_correction1[];
  3185                           ;parcheggio.c: 417: data_correction1[0] = data_correction[0];
  3186  005CE6  EE20  F087         	lfsr	2,can_send@data_correction1
  3187  005CEA  C163  FFDF         	movff	_data_correction,indf2
  3188                           
  3189                           ;parcheggio.c: 418: data_correction1[1] = 0;
  3190  005CEE  0E00               	movlw	0
  3191  005CF0  CFE8 F088          	movff	wreg,can_send@data_correction1+1
  3192                           
  3193                           ;parcheggio.c: 419: CANsendMessage(0xAA, data_correction1, 8, CAN_CONFIG_STD_MSG & CAN_N
      +                          ORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3194  005CF4  0EAA               	movlw	170
  3195  005CF6  0100               	movlb	0	; () banked
  3196  005CF8  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3197  005CFA  0E00               	movlw	0
  3198  005CFC  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3199  005CFE  0E00               	movlw	0
  3200  005D00  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3201  005D02  0E00               	movlw	0
  3202  005D04  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3203  005D06  0E87               	movlw	low can_send@data_correction1
  3204  005D08  0100               	movlb	0	; () banked
  3205  005D0A  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3206  005D0C  0E00               	movlw	high can_send@data_correction1
  3207  005D0E  0100               	movlb	0	; () banked
  3208  005D10  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3209  005D12  0E08               	movlw	8
  3210  005D14  0100               	movlb	0	; () banked
  3211  005D16  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3212  005D18  0EBC               	movlw	188
  3213  005D1A  0100               	movlb	0	; () banked
  3214  005D1C  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3215  005D1E  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3216  005D22  0012               	return	
  3217  005D24                     __end_of_can_send:
  3218                           	opt stack 0
  3219                           tblptru	equ	0xFF8
  3220                           tblptrh	equ	0xFF7
  3221                           tblptrl	equ	0xFF6
  3222                           tablat	equ	0xFF5
  3223                           postinc0	equ	0xFEE
  3224                           wreg	equ	0xFE8
  3225                           postdec1	equ	0xFE5
  3226                           fsr1l	equ	0xFE1
  3227                           indf2	equ	0xFDF
  3228                           postinc2	equ	0xFDE
  3229                           postdec2	equ	0xFDD
  3230                           status	equ	0xFD8
  3231                           
  3232 ;; *************** function _CANsendMessage *****************
  3233 ;; Defined at:
  3234 ;;		line 295 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
  3235 ;; Parameters:    Size  Location     Type
  3236 ;;  identifier      4   23[BANK0 ] unsigned long 
  3237 ;;  data            2   27[BANK0 ] PTR unsigned char 
  3238 ;;		 -> can_send@data_correction1(0), data_speed(8), data_brake(8), data_steering(8), 
  3239 ;;		 -> data_correction(8), data_test(8), data(8), sensor_distance_short(8), 
  3240 ;;  dataLength      1   29[BANK0 ] unsigned char 
  3241 ;;  flags           1   30[BANK0 ] enum E16335
  3242 ;; Auto vars:     Size  Location     Type
  3243 ;;  tamp            4   35[BANK0 ] unsigned long 
  3244 ;; Return value:  Size  Location     Type
  3245 ;;		None               void
  3246 ;; Registers used:
  3247 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3248 ;; Tracked objects:
  3249 ;;		On entry : 0/0
  3250 ;;		On exit  : 0/0
  3251 ;;		Unchanged: 0/0
  3252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3253 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3254 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3255 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3256 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3257 ;;Total ram usage:       16 bytes
  3258 ;; Hardware stack levels used:    1
  3259 ;; Hardware stack levels required when called:    4
  3260 ;; This function calls:
  3261 ;;		Nothing
  3262 ;; This function is called by:
  3263 ;;		_main
  3264 ;;		_park_search
  3265 ;;		_park_routine
  3266 ;;		_can_send
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           	psect	text5
  3271  001858                     __ptext5:
  3272                           	opt stack 0
  3273  001858                     _CANsendMessage:
  3274                           	opt stack 23
  3275                           
  3276                           ;inc\CANlib.h: 297: unsigned long tamp;
  3277                           ;inc\CANlib.h: 299: if (TXB0CONbits.TXREQ == 0)
  3278                           
  3279                           ;incstack = 0
  3280  001858  010F               	movlb	15	; () banked
  3281  00185A  B740               	btfsc	64,3,b	;volatile
  3282  00185C  D13F               	goto	l363
  3283                           
  3284                           ; BSR set to: 15
  3285                           ;inc\CANlib.h: 300: { TXB0DLC = dataLength;
  3286  00185E  C07D  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  3287                           
  3288                           ;inc\CANlib.h: 301: if (0b01000000 & flags)
  3289  001862  0100               	movlb	0	; () banked
  3290  001864  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  3291  001866  D003               	goto	l364
  3292                           
  3293                           ; BSR set to: 0
  3294                           ;inc\CANlib.h: 302: TXB0DLCbits.TXRTR = 0x01;
  3295  001868  010F               	movlb	15	; () banked
  3296  00186A  8D45               	bsf	69,6,b	;volatile
  3297  00186C  D002               	goto	l365
  3298  00186E                     l364:
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;inc\CANlib.h: 303: else
  3302                           ;inc\CANlib.h: 304: TXB0DLCbits.TXRTR = 0x00;
  3303  00186E  010F               	movlb	15	; () banked
  3304  001870  9D45               	bcf	69,6,b	;volatile
  3305  001872                     l365:
  3306                           
  3307                           ; BSR set to: 15
  3308                           ;inc\CANlib.h: 306: if (CAN_TX_FRAME_MASK & flags)
  3309  001872  0100               	movlb	0	; () banked
  3310  001874  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  3311  001876  D079               	goto	l366
  3312                           
  3313                           ; BSR set to: 0
  3314                           ;inc\CANlib.h: 307: {
  3315                           ;inc\CANlib.h: 309: tamp = identifier & 0x000000FF;
  3316  001878  0100               	movlb	0	; () banked
  3317  00187A  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  3318  00187C  0100               	movlb	0	; () banked
  3319  00187E  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3320  001880  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3321  001882  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3322  001884  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3323                           
  3324                           ; BSR set to: 0
  3325                           ;inc\CANlib.h: 310: TXB0EIDL = (unsigned char) tamp;
  3326  001886  C083  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  3327                           
  3328                           ; BSR set to: 0
  3329                           ;inc\CANlib.h: 312: tamp = identifier & 0x0000FF00;
  3330  00188A  0E00               	movlw	0
  3331  00188C  0100               	movlb	0	; () banked
  3332  00188E  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3333  001890  0100               	movlb	0	; () banked
  3334  001892  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3335  001894  0EFF               	movlw	255
  3336  001896  0100               	movlb	0	; () banked
  3337  001898  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3338  00189A  0100               	movlb	0	; () banked
  3339  00189C  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3340  00189E  0E00               	movlw	0
  3341  0018A0  0100               	movlb	0	; () banked
  3342  0018A2  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3343  0018A4  0100               	movlb	0	; () banked
  3344  0018A6  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3345  0018A8  0E00               	movlw	0
  3346  0018AA  0100               	movlb	0	; () banked
  3347  0018AC  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3348  0018AE  0100               	movlb	0	; () banked
  3349  0018B0  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3350                           
  3351                           ; BSR set to: 0
  3352                           ;inc\CANlib.h: 313: tamp = tamp >> 8;
  3353  0018B2  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3354  0018B6  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3355  0018BA  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3356  0018BE  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3357  0018C2  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  3358  0018C6  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  3359  0018CA  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  3360  0018CE  0100               	movlb	0	; () banked
  3361  0018D0  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  3362  0018D2  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3363  0018D6  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3364  0018DA  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3365  0018DE  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3366                           
  3367                           ; BSR set to: 0
  3368                           ;inc\CANlib.h: 314: TXB0EIDH = (unsigned char) tamp;
  3369  0018E2  C083  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  3370                           
  3371                           ; BSR set to: 0
  3372                           ;inc\CANlib.h: 316: TXB0SIDL = 0x00;
  3373  0018E6  0E00               	movlw	0
  3374  0018E8  010F               	movlb	15	; () banked
  3375  0018EA  6F42               	movwf	66,b	;volatile
  3376                           
  3377                           ; BSR set to: 15
  3378                           ;inc\CANlib.h: 317: TXB0SIDLbits.EXIDE = 0x01;
  3379  0018EC  010F               	movlb	15	; () banked
  3380  0018EE  8742               	bsf	66,3,b	;volatile
  3381                           
  3382                           ; BSR set to: 15
  3383                           ;inc\CANlib.h: 319: if (identifier & 0x00010000)
  3384  0018F0  0100               	movlb	0	; () banked
  3385  0018F2  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  3386  0018F4  D002               	goto	l367
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;inc\CANlib.h: 320: TXB0SIDLbits.EID16 = 0x01;
  3390  0018F6  010F               	movlb	15	; () banked
  3391  0018F8  8142               	bsf	66,0,b	;volatile
  3392  0018FA                     l367:
  3393                           
  3394                           ;inc\CANlib.h: 321: if (identifier & 0x00020000)
  3395  0018FA  0100               	movlb	0	; () banked
  3396  0018FC  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  3397  0018FE  D002               	goto	l368
  3398                           
  3399                           ; BSR set to: 0
  3400                           ;inc\CANlib.h: 322: TXB0SIDLbits.EID17 = 0x01;
  3401  001900  010F               	movlb	15	; () banked
  3402  001902  8342               	bsf	66,1,b	;volatile
  3403  001904                     l368:
  3404                           
  3405                           ;inc\CANlib.h: 323: if (identifier & 0x00040000)
  3406  001904  0100               	movlb	0	; () banked
  3407  001906  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  3408  001908  D002               	goto	l369
  3409                           
  3410                           ; BSR set to: 0
  3411                           ;inc\CANlib.h: 324: TXB0SIDLbits.SID0 = 0x01;
  3412  00190A  010F               	movlb	15	; () banked
  3413  00190C  8B42               	bsf	66,5,b	;volatile
  3414  00190E                     l369:
  3415                           
  3416                           ;inc\CANlib.h: 325: if (identifier & 0x00080000)
  3417  00190E  0100               	movlb	0	; () banked
  3418  001910  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  3419  001912  D002               	goto	l370
  3420                           
  3421                           ; BSR set to: 0
  3422                           ;inc\CANlib.h: 326: TXB0SIDLbits.SID1 = 0x01;
  3423  001914  010F               	movlb	15	; () banked
  3424  001916  8D42               	bsf	66,6,b	;volatile
  3425  001918                     l370:
  3426                           
  3427                           ;inc\CANlib.h: 327: if (identifier & 0x00100000)
  3428  001918  0100               	movlb	0	; () banked
  3429  00191A  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  3430  00191C  D002               	goto	l7428
  3431                           
  3432                           ; BSR set to: 0
  3433                           ;inc\CANlib.h: 328: TXB0SIDLbits.SID2 = 0x01;
  3434  00191E  010F               	movlb	15	; () banked
  3435  001920  8F42               	bsf	66,7,b	;volatile
  3436  001922                     l7428:
  3437                           
  3438                           ;inc\CANlib.h: 330: tamp = (identifier >> 21);
  3439  001922  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3440  001926  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3441  00192A  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3442  00192E  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3443  001932  0E16               	movlw	22
  3444  001934  D006               	goto	u9810
  3445  001936                     u9815:
  3446  001936  0100               	movlb	0	; () banked
  3447  001938  90D8               	bcf	status,0,c
  3448  00193A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3449  00193C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3450  00193E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3451  001940  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3452  001942                     u9810:
  3453  001942  2EE8               	decfsz	wreg,f,c
  3454  001944  D7F8               	goto	u9815
  3455  001946  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3456  00194A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3457  00194E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3458  001952  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3459                           
  3460                           ; BSR set to: 0
  3461                           ;inc\CANlib.h: 331: tamp = tamp & 0x000000FF;
  3462  001956  0100               	movlb	0	; () banked
  3463  001958  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3464  00195A  0100               	movlb	0	; () banked
  3465  00195C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3466  00195E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3467  001960  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3468  001962  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3469                           
  3470                           ; BSR set to: 0
  3471                           ;inc\CANlib.h: 332: TXB0SIDH = (unsigned char) tamp;
  3472  001964  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  3473                           
  3474                           ;inc\CANlib.h: 333: }
  3475  001968  D059               	goto	l7448
  3476  00196A                     l366:
  3477                           
  3478                           ; BSR set to: 0
  3479                           ;inc\CANlib.h: 335: else
  3480                           ;inc\CANlib.h: 337: {
  3481                           ;inc\CANlib.h: 338: TXB0SIDLbits.EXIDE = 0x00;
  3482  00196A  010F               	movlb	15	; () banked
  3483  00196C  9742               	bcf	66,3,b	;volatile
  3484                           
  3485                           ; BSR set to: 15
  3486                           ;inc\CANlib.h: 340: tamp = (identifier >> 3);
  3487  00196E  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3488  001972  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3489  001976  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3490  00197A  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3491  00197E  0E04               	movlw	4
  3492  001980  D006               	goto	u9820
  3493  001982                     u9825:
  3494  001982  0100               	movlb	0	; () banked
  3495  001984  90D8               	bcf	status,0,c
  3496  001986  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3497  001988  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3498  00198A  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3499  00198C  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3500  00198E                     u9820:
  3501  00198E  2EE8               	decfsz	wreg,f,c
  3502  001990  D7F8               	goto	u9825
  3503  001992  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3504  001996  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3505  00199A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3506  00199E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3507                           
  3508                           ; BSR set to: 0
  3509                           ;inc\CANlib.h: 341: tamp = tamp & 0x000000FF;
  3510  0019A2  0100               	movlb	0	; () banked
  3511  0019A4  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3512  0019A6  0100               	movlb	0	; () banked
  3513  0019A8  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3514  0019AA  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3515  0019AC  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3516  0019AE  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3517                           
  3518                           ; BSR set to: 0
  3519                           ;inc\CANlib.h: 342: TXB0SIDH = (unsigned char) tamp;
  3520  0019B0  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  3521                           
  3522                           ; BSR set to: 0
  3523                           ;inc\CANlib.h: 344: tamp = identifier & 0x00000007;
  3524  0019B4  0E07               	movlw	7
  3525  0019B6  0100               	movlb	0	; () banked
  3526  0019B8  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3527  0019BA  0100               	movlb	0	; () banked
  3528  0019BC  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3529  0019BE  0E00               	movlw	0
  3530  0019C0  0100               	movlb	0	; () banked
  3531  0019C2  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3532  0019C4  0100               	movlb	0	; () banked
  3533  0019C6  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3534  0019C8  0E00               	movlw	0
  3535  0019CA  0100               	movlb	0	; () banked
  3536  0019CC  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3537  0019CE  0100               	movlb	0	; () banked
  3538  0019D0  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3539  0019D2  0E00               	movlw	0
  3540  0019D4  0100               	movlb	0	; () banked
  3541  0019D6  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3542  0019D8  0100               	movlb	0	; () banked
  3543  0019DA  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;inc\CANlib.h: 345: tamp = tamp << 5;
  3547  0019DC  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3548  0019E0  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3549  0019E4  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3550  0019E8  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3551  0019EC  0E05               	movlw	5
  3552  0019EE                     u9835:
  3553  0019EE  90D8               	bcf	status,0,c
  3554  0019F0  0100               	movlb	0	; () banked
  3555  0019F2  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  3556  0019F4  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  3557  0019F6  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  3558  0019F8  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  3559  0019FA  2EE8               	decfsz	wreg,f,c
  3560  0019FC  D7F8               	goto	u9835
  3561  0019FE  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3562  001A02  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3563  001A06  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3564  001A0A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3565                           
  3566                           ; BSR set to: 0
  3567                           ;inc\CANlib.h: 346: TXB0SIDL = TXB0SIDL & 0b00011111;
  3568  001A0E  010F               	movlb	15	; () banked
  3569  001A10  5142               	movf	66,w,b	;volatile
  3570  001A12  0B1F               	andlw	31
  3571  001A14  010F               	movlb	15	; () banked
  3572  001A16  6F42               	movwf	66,b	;volatile
  3573                           
  3574                           ; BSR set to: 15
  3575                           ;inc\CANlib.h: 347: TXB0SIDL = (unsigned char) tamp;
  3576  001A18  C083  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  3577  001A1C                     l7448:
  3578                           
  3579                           ;inc\CANlib.h: 348: }
  3580                           ;inc\CANlib.h: 350: if (0b00000001 & flags)
  3581  001A1C  0100               	movlb	0	; () banked
  3582  001A1E  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  3583  001A20  D003               	goto	l373
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;inc\CANlib.h: 351: TXB0CONbits.TXPRI0 = 0x01;
  3587  001A22  010F               	movlb	15	; () banked
  3588  001A24  8140               	bsf	64,0,b	;volatile
  3589  001A26  D002               	goto	l374
  3590  001A28                     l373:
  3591                           
  3592                           ; BSR set to: 0
  3593                           ;inc\CANlib.h: 352: else
  3594                           ;inc\CANlib.h: 353: TXB0CONbits.TXPRI0 = 0x00;
  3595  001A28  010F               	movlb	15	; () banked
  3596  001A2A  9140               	bcf	64,0,b	;volatile
  3597  001A2C                     l374:
  3598                           
  3599                           ; BSR set to: 15
  3600                           ;inc\CANlib.h: 354: if (0b00000010 & flags)
  3601  001A2C  0100               	movlb	0	; () banked
  3602  001A2E  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  3603  001A30  D003               	goto	l375
  3604                           
  3605                           ; BSR set to: 0
  3606                           ;inc\CANlib.h: 355: TXB0CONbits.TXPRI1 = 0x01;
  3607  001A32  010F               	movlb	15	; () banked
  3608  001A34  8340               	bsf	64,1,b	;volatile
  3609  001A36  D002               	goto	l7454
  3610  001A38                     l375:
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;inc\CANlib.h: 356: else
  3614                           ;inc\CANlib.h: 357: TXB0CONbits.TXPRI1 = 0x00;
  3615  001A38  010F               	movlb	15	; () banked
  3616  001A3A  9340               	bcf	64,1,b	;volatile
  3617  001A3C                     l7454:
  3618                           
  3619                           ; BSR set to: 15
  3620                           ;inc\CANlib.h: 359: TXB0D0 = data[0];
  3621  001A3C  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  3622  001A40  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  3623  001A44  50DF               	movf	indf2,w,c
  3624  001A46  010F               	movlb	15	; () banked
  3625  001A48  6F46               	movwf	70,b	;volatile
  3626                           
  3627                           ; BSR set to: 15
  3628                           ;inc\CANlib.h: 360: TXB0D1 = data[1];
  3629  001A4A  0100               	movlb	0	; () banked
  3630  001A4C  EE20 F001          	lfsr	2,1
  3631  001A50  517B               	movf	CANsendMessage@data& (0+255),w,b
  3632  001A52  26D9               	addwf	fsr2l,f,c
  3633  001A54  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3634  001A56  22DA               	addwfc	fsr2h,f,c
  3635  001A58  50DF               	movf	indf2,w,c
  3636  001A5A  010F               	movlb	15	; () banked
  3637  001A5C  6F47               	movwf	71,b	;volatile
  3638                           
  3639                           ; BSR set to: 15
  3640                           ;inc\CANlib.h: 361: TXB0D2 = data[2];
  3641  001A5E  0100               	movlb	0	; () banked
  3642  001A60  EE20 F002          	lfsr	2,2
  3643  001A64  517B               	movf	CANsendMessage@data& (0+255),w,b
  3644  001A66  26D9               	addwf	fsr2l,f,c
  3645  001A68  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3646  001A6A  22DA               	addwfc	fsr2h,f,c
  3647  001A6C  50DF               	movf	indf2,w,c
  3648  001A6E  010F               	movlb	15	; () banked
  3649  001A70  6F48               	movwf	72,b	;volatile
  3650                           
  3651                           ; BSR set to: 15
  3652                           ;inc\CANlib.h: 362: TXB0D3 = data[3];
  3653  001A72  0100               	movlb	0	; () banked
  3654  001A74  EE20 F003          	lfsr	2,3
  3655  001A78  517B               	movf	CANsendMessage@data& (0+255),w,b
  3656  001A7A  26D9               	addwf	fsr2l,f,c
  3657  001A7C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3658  001A7E  22DA               	addwfc	fsr2h,f,c
  3659  001A80  50DF               	movf	indf2,w,c
  3660  001A82  010F               	movlb	15	; () banked
  3661  001A84  6F49               	movwf	73,b	;volatile
  3662                           
  3663                           ; BSR set to: 15
  3664                           ;inc\CANlib.h: 363: TXB0D4 = data[4];
  3665  001A86  0100               	movlb	0	; () banked
  3666  001A88  EE20 F004          	lfsr	2,4
  3667  001A8C  517B               	movf	CANsendMessage@data& (0+255),w,b
  3668  001A8E  26D9               	addwf	fsr2l,f,c
  3669  001A90  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3670  001A92  22DA               	addwfc	fsr2h,f,c
  3671  001A94  50DF               	movf	indf2,w,c
  3672  001A96  010F               	movlb	15	; () banked
  3673  001A98  6F4A               	movwf	74,b	;volatile
  3674                           
  3675                           ; BSR set to: 15
  3676                           ;inc\CANlib.h: 364: TXB0D5 = data[5];
  3677  001A9A  0100               	movlb	0	; () banked
  3678  001A9C  EE20 F005          	lfsr	2,5
  3679  001AA0  517B               	movf	CANsendMessage@data& (0+255),w,b
  3680  001AA2  26D9               	addwf	fsr2l,f,c
  3681  001AA4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3682  001AA6  22DA               	addwfc	fsr2h,f,c
  3683  001AA8  50DF               	movf	indf2,w,c
  3684  001AAA  010F               	movlb	15	; () banked
  3685  001AAC  6F4B               	movwf	75,b	;volatile
  3686                           
  3687                           ; BSR set to: 15
  3688                           ;inc\CANlib.h: 365: TXB0D6 = data[6];
  3689  001AAE  0100               	movlb	0	; () banked
  3690  001AB0  EE20 F006          	lfsr	2,6
  3691  001AB4  517B               	movf	CANsendMessage@data& (0+255),w,b
  3692  001AB6  26D9               	addwf	fsr2l,f,c
  3693  001AB8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3694  001ABA  22DA               	addwfc	fsr2h,f,c
  3695  001ABC  50DF               	movf	indf2,w,c
  3696  001ABE  010F               	movlb	15	; () banked
  3697  001AC0  6F4C               	movwf	76,b	;volatile
  3698                           
  3699                           ; BSR set to: 15
  3700                           ;inc\CANlib.h: 366: TXB0D7 = data[7];
  3701  001AC2  0100               	movlb	0	; () banked
  3702  001AC4  EE20 F007          	lfsr	2,7
  3703  001AC8  517B               	movf	CANsendMessage@data& (0+255),w,b
  3704  001ACA  26D9               	addwf	fsr2l,f,c
  3705  001ACC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3706  001ACE  22DA               	addwfc	fsr2h,f,c
  3707  001AD0  50DF               	movf	indf2,w,c
  3708  001AD2  010F               	movlb	15	; () banked
  3709  001AD4  6F4D               	movwf	77,b	;volatile
  3710                           
  3711                           ; BSR set to: 15
  3712                           ;inc\CANlib.h: 368: TXB0CONbits.TXREQ = 0x01;
  3713  001AD6  010F               	movlb	15	; () banked
  3714  001AD8  8740               	bsf	64,3,b	;volatile
  3715                           
  3716                           ; BSR set to: 15
  3717                           ;inc\CANlib.h: 369: return;
  3718  001ADA  0012               	return	
  3719  001ADC                     l363:
  3720                           
  3721                           ; BSR set to: 15
  3722                           ;inc\CANlib.h: 370: }
  3723                           ;inc\CANlib.h: 374: if (TXB1CONbits.TXREQ == 0)
  3724  001ADC  010F               	movlb	15	; () banked
  3725  001ADE  B730               	btfsc	48,3,b	;volatile
  3726  001AE0  D13F               	goto	l378
  3727                           
  3728                           ; BSR set to: 15
  3729                           ;inc\CANlib.h: 375: { TXB1DLC = dataLength;
  3730  001AE2  C07D  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  3731                           
  3732                           ;inc\CANlib.h: 377: if (0b01000000 & flags)
  3733  001AE6  0100               	movlb	0	; () banked
  3734  001AE8  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  3735  001AEA  D003               	goto	l379
  3736                           
  3737                           ; BSR set to: 0
  3738                           ;inc\CANlib.h: 378: TXB1DLCbits.TXRTR = 0x01;
  3739  001AEC  010F               	movlb	15	; () banked
  3740  001AEE  8D35               	bsf	53,6,b	;volatile
  3741  001AF0  D002               	goto	l380
  3742  001AF2                     l379:
  3743                           
  3744                           ; BSR set to: 0
  3745                           ;inc\CANlib.h: 379: else
  3746                           ;inc\CANlib.h: 380: TXB1DLCbits.TXRTR = 0x00;
  3747  001AF2  010F               	movlb	15	; () banked
  3748  001AF4  9D35               	bcf	53,6,b	;volatile
  3749  001AF6                     l380:
  3750                           
  3751                           ; BSR set to: 15
  3752                           ;inc\CANlib.h: 382: if (CAN_TX_FRAME_MASK & flags)
  3753  001AF6  0100               	movlb	0	; () banked
  3754  001AF8  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  3755  001AFA  D079               	goto	l381
  3756                           
  3757                           ; BSR set to: 0
  3758                           ;inc\CANlib.h: 383: {
  3759                           ;inc\CANlib.h: 384: tamp = identifier & 0x000000FF;
  3760  001AFC  0100               	movlb	0	; () banked
  3761  001AFE  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  3762  001B00  0100               	movlb	0	; () banked
  3763  001B02  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3764  001B04  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3765  001B06  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3766  001B08  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3767                           
  3768                           ; BSR set to: 0
  3769                           ;inc\CANlib.h: 385: TXB1EIDL = (unsigned char) tamp;
  3770  001B0A  C083  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  3771                           
  3772                           ; BSR set to: 0
  3773                           ;inc\CANlib.h: 387: tamp = identifier & 0x0000FF00;
  3774  001B0E  0E00               	movlw	0
  3775  001B10  0100               	movlb	0	; () banked
  3776  001B12  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3777  001B14  0100               	movlb	0	; () banked
  3778  001B16  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3779  001B18  0EFF               	movlw	255
  3780  001B1A  0100               	movlb	0	; () banked
  3781  001B1C  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3782  001B1E  0100               	movlb	0	; () banked
  3783  001B20  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3784  001B22  0E00               	movlw	0
  3785  001B24  0100               	movlb	0	; () banked
  3786  001B26  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3787  001B28  0100               	movlb	0	; () banked
  3788  001B2A  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3789  001B2C  0E00               	movlw	0
  3790  001B2E  0100               	movlb	0	; () banked
  3791  001B30  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3792  001B32  0100               	movlb	0	; () banked
  3793  001B34  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3794                           
  3795                           ; BSR set to: 0
  3796                           ;inc\CANlib.h: 388: tamp = tamp >> 8;
  3797  001B36  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3798  001B3A  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3799  001B3E  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3800  001B42  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3801  001B46  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  3802  001B4A  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  3803  001B4E  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  3804  001B52  0100               	movlb	0	; () banked
  3805  001B54  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  3806  001B56  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3807  001B5A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3808  001B5E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3809  001B62  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;inc\CANlib.h: 389: TXB1EIDH = (unsigned char) tamp;
  3813  001B66  C083  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  3814                           
  3815                           ; BSR set to: 0
  3816                           ;inc\CANlib.h: 391: TXB1SIDL = 0x00;
  3817  001B6A  0E00               	movlw	0
  3818  001B6C  010F               	movlb	15	; () banked
  3819  001B6E  6F32               	movwf	50,b	;volatile
  3820                           
  3821                           ; BSR set to: 15
  3822                           ;inc\CANlib.h: 392: TXB1SIDLbits.EXIDE = 0x01;
  3823  001B70  010F               	movlb	15	; () banked
  3824  001B72  8732               	bsf	50,3,b	;volatile
  3825                           
  3826                           ; BSR set to: 15
  3827                           ;inc\CANlib.h: 394: if (identifier & 0x00010000)
  3828  001B74  0100               	movlb	0	; () banked
  3829  001B76  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  3830  001B78  D002               	goto	l382
  3831                           
  3832                           ; BSR set to: 0
  3833                           ;inc\CANlib.h: 395: TXB1SIDLbits.EID16 = 0x01;
  3834  001B7A  010F               	movlb	15	; () banked
  3835  001B7C  8132               	bsf	50,0,b	;volatile
  3836  001B7E                     l382:
  3837                           
  3838                           ;inc\CANlib.h: 396: if (identifier & 0x00020000)
  3839  001B7E  0100               	movlb	0	; () banked
  3840  001B80  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  3841  001B82  D002               	goto	l383
  3842                           
  3843                           ; BSR set to: 0
  3844                           ;inc\CANlib.h: 397: TXB1SIDLbits.EID17 = 0x01;
  3845  001B84  010F               	movlb	15	; () banked
  3846  001B86  8332               	bsf	50,1,b	;volatile
  3847  001B88                     l383:
  3848                           
  3849                           ;inc\CANlib.h: 398: if (identifier & 0x00040000)
  3850  001B88  0100               	movlb	0	; () banked
  3851  001B8A  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  3852  001B8C  D002               	goto	l384
  3853                           
  3854                           ; BSR set to: 0
  3855                           ;inc\CANlib.h: 399: TXB1SIDLbits.SID0 = 0x01;
  3856  001B8E  010F               	movlb	15	; () banked
  3857  001B90  8B32               	bsf	50,5,b	;volatile
  3858  001B92                     l384:
  3859                           
  3860                           ;inc\CANlib.h: 400: if (identifier & 0x00080000)
  3861  001B92  0100               	movlb	0	; () banked
  3862  001B94  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  3863  001B96  D002               	goto	l385
  3864                           
  3865                           ; BSR set to: 0
  3866                           ;inc\CANlib.h: 401: TXB1SIDLbits.SID1 = 0x01;
  3867  001B98  010F               	movlb	15	; () banked
  3868  001B9A  8D32               	bsf	50,6,b	;volatile
  3869  001B9C                     l385:
  3870                           
  3871                           ;inc\CANlib.h: 402: if (identifier & 0x00100000)
  3872  001B9C  0100               	movlb	0	; () banked
  3873  001B9E  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  3874  001BA0  D002               	goto	l7504
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;inc\CANlib.h: 403: TXB1SIDLbits.SID2 = 0x01;
  3878  001BA2  010F               	movlb	15	; () banked
  3879  001BA4  8F32               	bsf	50,7,b	;volatile
  3880  001BA6                     l7504:
  3881                           
  3882                           ;inc\CANlib.h: 405: tamp = (identifier >> 21);
  3883  001BA6  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3884  001BAA  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3885  001BAE  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3886  001BB2  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3887  001BB6  0E16               	movlw	22
  3888  001BB8  D006               	goto	u9940
  3889  001BBA                     u9945:
  3890  001BBA  0100               	movlb	0	; () banked
  3891  001BBC  90D8               	bcf	status,0,c
  3892  001BBE  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3893  001BC0  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3894  001BC2  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3895  001BC4  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3896  001BC6                     u9940:
  3897  001BC6  2EE8               	decfsz	wreg,f,c
  3898  001BC8  D7F8               	goto	u9945
  3899  001BCA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3900  001BCE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3901  001BD2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3902  001BD6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3903                           
  3904                           ; BSR set to: 0
  3905                           ;inc\CANlib.h: 406: tamp = tamp & 0x000000FF;
  3906  001BDA  0100               	movlb	0	; () banked
  3907  001BDC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3908  001BDE  0100               	movlb	0	; () banked
  3909  001BE0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3910  001BE2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3911  001BE4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3912  001BE6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3913                           
  3914                           ; BSR set to: 0
  3915                           ;inc\CANlib.h: 407: TXB1SIDH = (unsigned char) tamp;
  3916  001BE8  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  3917                           
  3918                           ;inc\CANlib.h: 408: }
  3919  001BEC  D059               	goto	l7524
  3920  001BEE                     l381:
  3921                           
  3922                           ; BSR set to: 0
  3923                           ;inc\CANlib.h: 410: else
  3924                           ;inc\CANlib.h: 412: {
  3925                           ;inc\CANlib.h: 413: TXB1SIDLbits.EXIDE = 0x00;
  3926  001BEE  010F               	movlb	15	; () banked
  3927  001BF0  9732               	bcf	50,3,b	;volatile
  3928                           
  3929                           ; BSR set to: 15
  3930                           ;inc\CANlib.h: 415: tamp = (identifier >> 3);
  3931  001BF2  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3932  001BF6  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3933  001BFA  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3934  001BFE  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3935  001C02  0E04               	movlw	4
  3936  001C04  D006               	goto	u9950
  3937  001C06                     u9955:
  3938  001C06  0100               	movlb	0	; () banked
  3939  001C08  90D8               	bcf	status,0,c
  3940  001C0A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3941  001C0C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3942  001C0E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3943  001C10  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3944  001C12                     u9950:
  3945  001C12  2EE8               	decfsz	wreg,f,c
  3946  001C14  D7F8               	goto	u9955
  3947  001C16  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3948  001C1A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3949  001C1E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3950  001C22  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3951                           
  3952                           ; BSR set to: 0
  3953                           ;inc\CANlib.h: 416: tamp = tamp & 0x000000FF;
  3954  001C26  0100               	movlb	0	; () banked
  3955  001C28  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3956  001C2A  0100               	movlb	0	; () banked
  3957  001C2C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3958  001C2E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3959  001C30  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3960  001C32  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3961                           
  3962                           ; BSR set to: 0
  3963                           ;inc\CANlib.h: 417: TXB1SIDH = (unsigned char) tamp;
  3964  001C34  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  3965                           
  3966                           ; BSR set to: 0
  3967                           ;inc\CANlib.h: 419: tamp = identifier & 0x00000007;
  3968  001C38  0E07               	movlw	7
  3969  001C3A  0100               	movlb	0	; () banked
  3970  001C3C  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3971  001C3E  0100               	movlb	0	; () banked
  3972  001C40  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3973  001C42  0E00               	movlw	0
  3974  001C44  0100               	movlb	0	; () banked
  3975  001C46  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3976  001C48  0100               	movlb	0	; () banked
  3977  001C4A  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3978  001C4C  0E00               	movlw	0
  3979  001C4E  0100               	movlb	0	; () banked
  3980  001C50  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3981  001C52  0100               	movlb	0	; () banked
  3982  001C54  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3983  001C56  0E00               	movlw	0
  3984  001C58  0100               	movlb	0	; () banked
  3985  001C5A  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3986  001C5C  0100               	movlb	0	; () banked
  3987  001C5E  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3988                           
  3989                           ; BSR set to: 0
  3990                           ;inc\CANlib.h: 420: tamp = tamp << 5;
  3991  001C60  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3992  001C64  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3993  001C68  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3994  001C6C  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3995  001C70  0E05               	movlw	5
  3996  001C72                     u9965:
  3997  001C72  90D8               	bcf	status,0,c
  3998  001C74  0100               	movlb	0	; () banked
  3999  001C76  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  4000  001C78  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  4001  001C7A  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  4002  001C7C  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  4003  001C7E  2EE8               	decfsz	wreg,f,c
  4004  001C80  D7F8               	goto	u9965
  4005  001C82  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4006  001C86  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4007  001C8A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4008  001C8E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;inc\CANlib.h: 421: TXB1SIDL = TXB1SIDL & 0b00011111;
  4012  001C92  010F               	movlb	15	; () banked
  4013  001C94  5132               	movf	50,w,b	;volatile
  4014  001C96  0B1F               	andlw	31
  4015  001C98  010F               	movlb	15	; () banked
  4016  001C9A  6F32               	movwf	50,b	;volatile
  4017                           
  4018                           ; BSR set to: 15
  4019                           ;inc\CANlib.h: 422: TXB1SIDL = (unsigned char) tamp;
  4020  001C9C  C083  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  4021  001CA0                     l7524:
  4022                           
  4023                           ;inc\CANlib.h: 423: }
  4024                           ;inc\CANlib.h: 425: if (0b00000001 & flags)
  4025  001CA0  0100               	movlb	0	; () banked
  4026  001CA2  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  4027  001CA4  D003               	goto	l388
  4028                           
  4029                           ; BSR set to: 0
  4030                           ;inc\CANlib.h: 426: TXB1CONbits.TXPRI0 = 0x01;
  4031  001CA6  010F               	movlb	15	; () banked
  4032  001CA8  8130               	bsf	48,0,b	;volatile
  4033  001CAA  D002               	goto	l389
  4034  001CAC                     l388:
  4035                           
  4036                           ; BSR set to: 0
  4037                           ;inc\CANlib.h: 427: else
  4038                           ;inc\CANlib.h: 428: TXB1CONbits.TXPRI0 = 0x00;
  4039  001CAC  010F               	movlb	15	; () banked
  4040  001CAE  9130               	bcf	48,0,b	;volatile
  4041  001CB0                     l389:
  4042                           
  4043                           ; BSR set to: 15
  4044                           ;inc\CANlib.h: 429: if (0b00000010 & flags)
  4045  001CB0  0100               	movlb	0	; () banked
  4046  001CB2  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  4047  001CB4  D003               	goto	l390
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;inc\CANlib.h: 430: TXB1CONbits.TXPRI1 = 0x01;
  4051  001CB6  010F               	movlb	15	; () banked
  4052  001CB8  8330               	bsf	48,1,b	;volatile
  4053  001CBA  D002               	goto	l7530
  4054  001CBC                     l390:
  4055                           
  4056                           ; BSR set to: 0
  4057                           ;inc\CANlib.h: 431: else
  4058                           ;inc\CANlib.h: 432: TXB1CONbits.TXPRI1 = 0x00;
  4059  001CBC  010F               	movlb	15	; () banked
  4060  001CBE  9330               	bcf	48,1,b	;volatile
  4061  001CC0                     l7530:
  4062                           
  4063                           ; BSR set to: 15
  4064                           ;inc\CANlib.h: 434: TXB1D0 = data[0];
  4065  001CC0  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  4066  001CC4  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  4067  001CC8  50DF               	movf	indf2,w,c
  4068  001CCA  010F               	movlb	15	; () banked
  4069  001CCC  6F36               	movwf	54,b	;volatile
  4070                           
  4071                           ; BSR set to: 15
  4072                           ;inc\CANlib.h: 435: TXB1D1 = data[1];
  4073  001CCE  0100               	movlb	0	; () banked
  4074  001CD0  EE20 F001          	lfsr	2,1
  4075  001CD4  517B               	movf	CANsendMessage@data& (0+255),w,b
  4076  001CD6  26D9               	addwf	fsr2l,f,c
  4077  001CD8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4078  001CDA  22DA               	addwfc	fsr2h,f,c
  4079  001CDC  50DF               	movf	indf2,w,c
  4080  001CDE  010F               	movlb	15	; () banked
  4081  001CE0  6F37               	movwf	55,b	;volatile
  4082                           
  4083                           ; BSR set to: 15
  4084                           ;inc\CANlib.h: 436: TXB1D2 = data[2];
  4085  001CE2  0100               	movlb	0	; () banked
  4086  001CE4  EE20 F002          	lfsr	2,2
  4087  001CE8  517B               	movf	CANsendMessage@data& (0+255),w,b
  4088  001CEA  26D9               	addwf	fsr2l,f,c
  4089  001CEC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4090  001CEE  22DA               	addwfc	fsr2h,f,c
  4091  001CF0  50DF               	movf	indf2,w,c
  4092  001CF2  010F               	movlb	15	; () banked
  4093  001CF4  6F38               	movwf	56,b	;volatile
  4094                           
  4095                           ; BSR set to: 15
  4096                           ;inc\CANlib.h: 437: TXB1D3 = data[3];
  4097  001CF6  0100               	movlb	0	; () banked
  4098  001CF8  EE20 F003          	lfsr	2,3
  4099  001CFC  517B               	movf	CANsendMessage@data& (0+255),w,b
  4100  001CFE  26D9               	addwf	fsr2l,f,c
  4101  001D00  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4102  001D02  22DA               	addwfc	fsr2h,f,c
  4103  001D04  50DF               	movf	indf2,w,c
  4104  001D06  010F               	movlb	15	; () banked
  4105  001D08  6F39               	movwf	57,b	;volatile
  4106                           
  4107                           ; BSR set to: 15
  4108                           ;inc\CANlib.h: 438: TXB1D4 = data[4];
  4109  001D0A  0100               	movlb	0	; () banked
  4110  001D0C  EE20 F004          	lfsr	2,4
  4111  001D10  517B               	movf	CANsendMessage@data& (0+255),w,b
  4112  001D12  26D9               	addwf	fsr2l,f,c
  4113  001D14  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4114  001D16  22DA               	addwfc	fsr2h,f,c
  4115  001D18  50DF               	movf	indf2,w,c
  4116  001D1A  010F               	movlb	15	; () banked
  4117  001D1C  6F3A               	movwf	58,b	;volatile
  4118                           
  4119                           ; BSR set to: 15
  4120                           ;inc\CANlib.h: 439: TXB1D5 = data[5];
  4121  001D1E  0100               	movlb	0	; () banked
  4122  001D20  EE20 F005          	lfsr	2,5
  4123  001D24  517B               	movf	CANsendMessage@data& (0+255),w,b
  4124  001D26  26D9               	addwf	fsr2l,f,c
  4125  001D28  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4126  001D2A  22DA               	addwfc	fsr2h,f,c
  4127  001D2C  50DF               	movf	indf2,w,c
  4128  001D2E  010F               	movlb	15	; () banked
  4129  001D30  6F3B               	movwf	59,b	;volatile
  4130                           
  4131                           ; BSR set to: 15
  4132                           ;inc\CANlib.h: 440: TXB1D6 = data[6];
  4133  001D32  0100               	movlb	0	; () banked
  4134  001D34  EE20 F006          	lfsr	2,6
  4135  001D38  517B               	movf	CANsendMessage@data& (0+255),w,b
  4136  001D3A  26D9               	addwf	fsr2l,f,c
  4137  001D3C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4138  001D3E  22DA               	addwfc	fsr2h,f,c
  4139  001D40  50DF               	movf	indf2,w,c
  4140  001D42  010F               	movlb	15	; () banked
  4141  001D44  6F3C               	movwf	60,b	;volatile
  4142                           
  4143                           ; BSR set to: 15
  4144                           ;inc\CANlib.h: 441: TXB1D7 = data[7];
  4145  001D46  0100               	movlb	0	; () banked
  4146  001D48  EE20 F007          	lfsr	2,7
  4147  001D4C  517B               	movf	CANsendMessage@data& (0+255),w,b
  4148  001D4E  26D9               	addwf	fsr2l,f,c
  4149  001D50  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4150  001D52  22DA               	addwfc	fsr2h,f,c
  4151  001D54  50DF               	movf	indf2,w,c
  4152  001D56  010F               	movlb	15	; () banked
  4153  001D58  6F3D               	movwf	61,b	;volatile
  4154                           
  4155                           ; BSR set to: 15
  4156                           ;inc\CANlib.h: 443: TXB1CONbits.TXREQ = 0x01;
  4157  001D5A  010F               	movlb	15	; () banked
  4158  001D5C  8730               	bsf	48,3,b	;volatile
  4159                           
  4160                           ; BSR set to: 15
  4161                           ;inc\CANlib.h: 445: return;
  4162  001D5E  0012               	return	
  4163  001D60                     l378:
  4164                           
  4165                           ; BSR set to: 15
  4166                           ;inc\CANlib.h: 446: }
  4167                           ;inc\CANlib.h: 450: if (TXB2CONbits.TXREQ == 0)
  4168  001D60  010F               	movlb	15	; () banked
  4169  001D62  B720               	btfsc	32,3,b	;volatile
  4170  001D64  0012               	return	
  4171                           
  4172                           ; BSR set to: 15
  4173                           ;inc\CANlib.h: 451: { TXB2DLC = dataLength;
  4174  001D66  C07D  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  4175                           
  4176                           ;inc\CANlib.h: 453: if (0b01000000 & flags)
  4177  001D6A  0100               	movlb	0	; () banked
  4178  001D6C  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  4179  001D6E  D003               	goto	l393
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;inc\CANlib.h: 454: TXB2DLCbits.TXRTR = 0x01;
  4183  001D70  010F               	movlb	15	; () banked
  4184  001D72  8D25               	bsf	37,6,b	;volatile
  4185  001D74  D002               	goto	l394
  4186  001D76                     l393:
  4187                           
  4188                           ; BSR set to: 0
  4189                           ;inc\CANlib.h: 455: else
  4190                           ;inc\CANlib.h: 456: TXB2DLCbits.TXRTR = 0x00;
  4191  001D76  010F               	movlb	15	; () banked
  4192  001D78  9D25               	bcf	37,6,b	;volatile
  4193  001D7A                     l394:
  4194                           
  4195                           ; BSR set to: 15
  4196                           ;inc\CANlib.h: 458: if (CAN_TX_FRAME_MASK & flags)
  4197  001D7A  0100               	movlb	0	; () banked
  4198  001D7C  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  4199  001D7E  D079               	goto	l395
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;inc\CANlib.h: 459: {
  4203                           ;inc\CANlib.h: 460: tamp = identifier & 0x000000FF;
  4204  001D80  0100               	movlb	0	; () banked
  4205  001D82  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  4206  001D84  0100               	movlb	0	; () banked
  4207  001D86  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4208  001D88  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4209  001D8A  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4210  001D8C  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4211                           
  4212                           ; BSR set to: 0
  4213                           ;inc\CANlib.h: 461: TXB2EIDL = (unsigned char) tamp;
  4214  001D8E  C083  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;inc\CANlib.h: 463: tamp = identifier & 0x0000FF00;
  4218  001D92  0E00               	movlw	0
  4219  001D94  0100               	movlb	0	; () banked
  4220  001D96  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  4221  001D98  0100               	movlb	0	; () banked
  4222  001D9A  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4223  001D9C  0EFF               	movlw	255
  4224  001D9E  0100               	movlb	0	; () banked
  4225  001DA0  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  4226  001DA2  0100               	movlb	0	; () banked
  4227  001DA4  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  4228  001DA6  0E00               	movlw	0
  4229  001DA8  0100               	movlb	0	; () banked
  4230  001DAA  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  4231  001DAC  0100               	movlb	0	; () banked
  4232  001DAE  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  4233  001DB0  0E00               	movlw	0
  4234  001DB2  0100               	movlb	0	; () banked
  4235  001DB4  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  4236  001DB6  0100               	movlb	0	; () banked
  4237  001DB8  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  4238                           
  4239                           ; BSR set to: 0
  4240                           ;inc\CANlib.h: 464: tamp = tamp >> 8;
  4241  001DBA  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  4242  001DBE  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  4243  001DC2  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  4244  001DC6  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  4245  001DCA  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  4246  001DCE  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  4247  001DD2  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  4248  001DD6  0100               	movlb	0	; () banked
  4249  001DD8  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  4250  001DDA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4251  001DDE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4252  001DE2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4253  001DE6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4254                           
  4255                           ; BSR set to: 0
  4256                           ;inc\CANlib.h: 465: TXB2EIDH = (unsigned char) tamp;
  4257  001DEA  C083  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  4258                           
  4259                           ; BSR set to: 0
  4260                           ;inc\CANlib.h: 467: TXB2SIDL = 0x00;
  4261  001DEE  0E00               	movlw	0
  4262  001DF0  010F               	movlb	15	; () banked
  4263  001DF2  6F22               	movwf	34,b	;volatile
  4264                           
  4265                           ; BSR set to: 15
  4266                           ;inc\CANlib.h: 468: TXB2SIDLbits.EXIDE = 0x01;
  4267  001DF4  010F               	movlb	15	; () banked
  4268  001DF6  8722               	bsf	34,3,b	;volatile
  4269                           
  4270                           ; BSR set to: 15
  4271                           ;inc\CANlib.h: 470: if (identifier & 0x00010000)
  4272  001DF8  0100               	movlb	0	; () banked
  4273  001DFA  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  4274  001DFC  D002               	goto	l396
  4275                           
  4276                           ; BSR set to: 0
  4277                           ;inc\CANlib.h: 471: TXB2SIDLbits.EID16 = 0x01;
  4278  001DFE  010F               	movlb	15	; () banked
  4279  001E00  8122               	bsf	34,0,b	;volatile
  4280  001E02                     l396:
  4281                           
  4282                           ;inc\CANlib.h: 472: if (identifier & 0x00020000)
  4283  001E02  0100               	movlb	0	; () banked
  4284  001E04  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  4285  001E06  D002               	goto	l397
  4286                           
  4287                           ; BSR set to: 0
  4288                           ;inc\CANlib.h: 473: TXB2SIDLbits.EID17 = 0x01;
  4289  001E08  010F               	movlb	15	; () banked
  4290  001E0A  8322               	bsf	34,1,b	;volatile
  4291  001E0C                     l397:
  4292                           
  4293                           ;inc\CANlib.h: 474: if (identifier & 0x00040000)
  4294  001E0C  0100               	movlb	0	; () banked
  4295  001E0E  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  4296  001E10  D002               	goto	l398
  4297                           
  4298                           ; BSR set to: 0
  4299                           ;inc\CANlib.h: 475: TXB2SIDLbits.SID0 = 0x01;
  4300  001E12  010F               	movlb	15	; () banked
  4301  001E14  8B22               	bsf	34,5,b	;volatile
  4302  001E16                     l398:
  4303                           
  4304                           ;inc\CANlib.h: 476: if (identifier & 0x00080000)
  4305  001E16  0100               	movlb	0	; () banked
  4306  001E18  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  4307  001E1A  D002               	goto	l399
  4308                           
  4309                           ; BSR set to: 0
  4310                           ;inc\CANlib.h: 477: TXB2SIDLbits.SID1 = 0x01;
  4311  001E1C  010F               	movlb	15	; () banked
  4312  001E1E  8D22               	bsf	34,6,b	;volatile
  4313  001E20                     l399:
  4314                           
  4315                           ;inc\CANlib.h: 478: if (identifier & 0x00100000)
  4316  001E20  0100               	movlb	0	; () banked
  4317  001E22  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  4318  001E24  D002               	goto	l7580
  4319                           
  4320                           ; BSR set to: 0
  4321                           ;inc\CANlib.h: 479: TXB2SIDLbits.SID2 = 0x01;
  4322  001E26  010F               	movlb	15	; () banked
  4323  001E28  8F22               	bsf	34,7,b	;volatile
  4324  001E2A                     l7580:
  4325                           
  4326                           ;inc\CANlib.h: 481: tamp = (identifier >> 21);
  4327  001E2A  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  4328  001E2E  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  4329  001E32  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  4330  001E36  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  4331  001E3A  0E16               	movlw	22
  4332  001E3C  D006               	goto	u10070
  4333  001E3E                     u10075:
  4334  001E3E  0100               	movlb	0	; () banked
  4335  001E40  90D8               	bcf	status,0,c
  4336  001E42  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  4337  001E44  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  4338  001E46  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  4339  001E48  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  4340  001E4A                     u10070:
  4341  001E4A  2EE8               	decfsz	wreg,f,c
  4342  001E4C  D7F8               	goto	u10075
  4343  001E4E  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4344  001E52  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4345  001E56  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4346  001E5A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4347                           
  4348                           ; BSR set to: 0
  4349                           ;inc\CANlib.h: 482: tamp = tamp & 0x000000FF;
  4350  001E5E  0100               	movlb	0	; () banked
  4351  001E60  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  4352  001E62  0100               	movlb	0	; () banked
  4353  001E64  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4354  001E66  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4355  001E68  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4356  001E6A  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4357                           
  4358                           ; BSR set to: 0
  4359                           ;inc\CANlib.h: 483: TXB2SIDH = (unsigned char) tamp;
  4360  001E6C  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  4361                           
  4362                           ;inc\CANlib.h: 484: }
  4363  001E70  D059               	goto	l7600
  4364  001E72                     l395:
  4365                           
  4366                           ; BSR set to: 0
  4367                           ;inc\CANlib.h: 486: else
  4368                           ;inc\CANlib.h: 488: {
  4369                           ;inc\CANlib.h: 489: TXB2SIDLbits.EXIDE = 0x00;
  4370  001E72  010F               	movlb	15	; () banked
  4371  001E74  9722               	bcf	34,3,b	;volatile
  4372                           
  4373                           ; BSR set to: 15
  4374                           ;inc\CANlib.h: 491: tamp = (identifier >> 3);
  4375  001E76  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  4376  001E7A  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  4377  001E7E  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  4378  001E82  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  4379  001E86  0E04               	movlw	4
  4380  001E88  D006               	goto	u10080
  4381  001E8A                     u10085:
  4382  001E8A  0100               	movlb	0	; () banked
  4383  001E8C  90D8               	bcf	status,0,c
  4384  001E8E  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  4385  001E90  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  4386  001E92  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  4387  001E94  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  4388  001E96                     u10080:
  4389  001E96  2EE8               	decfsz	wreg,f,c
  4390  001E98  D7F8               	goto	u10085
  4391  001E9A  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4392  001E9E  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4393  001EA2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4394  001EA6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4395                           
  4396                           ; BSR set to: 0
  4397                           ;inc\CANlib.h: 492: tamp = tamp & 0x000000FF;
  4398  001EAA  0100               	movlb	0	; () banked
  4399  001EAC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  4400  001EAE  0100               	movlb	0	; () banked
  4401  001EB0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4402  001EB2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4403  001EB4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4404  001EB6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4405                           
  4406                           ; BSR set to: 0
  4407                           ;inc\CANlib.h: 493: TXB2SIDH = (unsigned char) tamp;
  4408  001EB8  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  4409                           
  4410                           ; BSR set to: 0
  4411                           ;inc\CANlib.h: 495: tamp = identifier & 0x00000007;
  4412  001EBC  0E07               	movlw	7
  4413  001EBE  0100               	movlb	0	; () banked
  4414  001EC0  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  4415  001EC2  0100               	movlb	0	; () banked
  4416  001EC4  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4417  001EC6  0E00               	movlw	0
  4418  001EC8  0100               	movlb	0	; () banked
  4419  001ECA  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  4420  001ECC  0100               	movlb	0	; () banked
  4421  001ECE  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  4422  001ED0  0E00               	movlw	0
  4423  001ED2  0100               	movlb	0	; () banked
  4424  001ED4  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  4425  001ED6  0100               	movlb	0	; () banked
  4426  001ED8  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  4427  001EDA  0E00               	movlw	0
  4428  001EDC  0100               	movlb	0	; () banked
  4429  001EDE  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  4430  001EE0  0100               	movlb	0	; () banked
  4431  001EE2  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  4432                           
  4433                           ; BSR set to: 0
  4434                           ;inc\CANlib.h: 496: tamp = tamp << 5;
  4435  001EE4  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  4436  001EE8  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  4437  001EEC  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  4438  001EF0  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  4439  001EF4  0E05               	movlw	5
  4440  001EF6                     u10095:
  4441  001EF6  90D8               	bcf	status,0,c
  4442  001EF8  0100               	movlb	0	; () banked
  4443  001EFA  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  4444  001EFC  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  4445  001EFE  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  4446  001F00  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  4447  001F02  2EE8               	decfsz	wreg,f,c
  4448  001F04  D7F8               	goto	u10095
  4449  001F06  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4450  001F0A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4451  001F0E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4452  001F12  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4453                           
  4454                           ; BSR set to: 0
  4455                           ;inc\CANlib.h: 497: TXB2SIDL = TXB2SIDL & 0b00011111;
  4456  001F16  010F               	movlb	15	; () banked
  4457  001F18  5122               	movf	34,w,b	;volatile
  4458  001F1A  0B1F               	andlw	31
  4459  001F1C  010F               	movlb	15	; () banked
  4460  001F1E  6F22               	movwf	34,b	;volatile
  4461                           
  4462                           ; BSR set to: 15
  4463                           ;inc\CANlib.h: 498: TXB2SIDL = (unsigned char) tamp;
  4464  001F20  C083  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  4465  001F24                     l7600:
  4466                           
  4467                           ;inc\CANlib.h: 499: }
  4468                           ;inc\CANlib.h: 501: if (0b00000001 & flags)
  4469  001F24  0100               	movlb	0	; () banked
  4470  001F26  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  4471  001F28  D003               	goto	l402
  4472                           
  4473                           ; BSR set to: 0
  4474                           ;inc\CANlib.h: 502: TXB2CONbits.TXPRI0 = 0x01;
  4475  001F2A  010F               	movlb	15	; () banked
  4476  001F2C  8120               	bsf	32,0,b	;volatile
  4477  001F2E  D002               	goto	l403
  4478  001F30                     l402:
  4479                           
  4480                           ; BSR set to: 0
  4481                           ;inc\CANlib.h: 503: else
  4482                           ;inc\CANlib.h: 504: TXB2CONbits.TXPRI0 = 0x00;
  4483  001F30  010F               	movlb	15	; () banked
  4484  001F32  9120               	bcf	32,0,b	;volatile
  4485  001F34                     l403:
  4486                           
  4487                           ; BSR set to: 15
  4488                           ;inc\CANlib.h: 505: if (0b00000010 & flags)
  4489  001F34  0100               	movlb	0	; () banked
  4490  001F36  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  4491  001F38  D003               	goto	l404
  4492                           
  4493                           ; BSR set to: 0
  4494                           ;inc\CANlib.h: 506: TXB2CONbits.TXPRI1 = 0x01;
  4495  001F3A  010F               	movlb	15	; () banked
  4496  001F3C  8320               	bsf	32,1,b	;volatile
  4497  001F3E  D002               	goto	l7606
  4498  001F40                     l404:
  4499                           
  4500                           ; BSR set to: 0
  4501                           ;inc\CANlib.h: 507: else
  4502                           ;inc\CANlib.h: 508: TXB2CONbits.TXPRI1 = 0x00;
  4503  001F40  010F               	movlb	15	; () banked
  4504  001F42  9320               	bcf	32,1,b	;volatile
  4505  001F44                     l7606:
  4506                           
  4507                           ; BSR set to: 15
  4508                           ;inc\CANlib.h: 510: TXB2D0 = data[0];
  4509  001F44  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  4510  001F48  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  4511  001F4C  50DF               	movf	indf2,w,c
  4512  001F4E  010F               	movlb	15	; () banked
  4513  001F50  6F26               	movwf	38,b	;volatile
  4514                           
  4515                           ; BSR set to: 15
  4516                           ;inc\CANlib.h: 511: TXB2D1 = data[1];
  4517  001F52  0100               	movlb	0	; () banked
  4518  001F54  EE20 F001          	lfsr	2,1
  4519  001F58  517B               	movf	CANsendMessage@data& (0+255),w,b
  4520  001F5A  26D9               	addwf	fsr2l,f,c
  4521  001F5C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4522  001F5E  22DA               	addwfc	fsr2h,f,c
  4523  001F60  50DF               	movf	indf2,w,c
  4524  001F62  010F               	movlb	15	; () banked
  4525  001F64  6F27               	movwf	39,b	;volatile
  4526                           
  4527                           ; BSR set to: 15
  4528                           ;inc\CANlib.h: 512: TXB2D2 = data[2];
  4529  001F66  0100               	movlb	0	; () banked
  4530  001F68  EE20 F002          	lfsr	2,2
  4531  001F6C  517B               	movf	CANsendMessage@data& (0+255),w,b
  4532  001F6E  26D9               	addwf	fsr2l,f,c
  4533  001F70  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4534  001F72  22DA               	addwfc	fsr2h,f,c
  4535  001F74  50DF               	movf	indf2,w,c
  4536  001F76  010F               	movlb	15	; () banked
  4537  001F78  6F28               	movwf	40,b	;volatile
  4538                           
  4539                           ; BSR set to: 15
  4540                           ;inc\CANlib.h: 513: TXB2D3 = data[3];
  4541  001F7A  0100               	movlb	0	; () banked
  4542  001F7C  EE20 F003          	lfsr	2,3
  4543  001F80  517B               	movf	CANsendMessage@data& (0+255),w,b
  4544  001F82  26D9               	addwf	fsr2l,f,c
  4545  001F84  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4546  001F86  22DA               	addwfc	fsr2h,f,c
  4547  001F88  50DF               	movf	indf2,w,c
  4548  001F8A  010F               	movlb	15	; () banked
  4549  001F8C  6F29               	movwf	41,b	;volatile
  4550                           
  4551                           ; BSR set to: 15
  4552                           ;inc\CANlib.h: 514: TXB2D4 = data[4];
  4553  001F8E  0100               	movlb	0	; () banked
  4554  001F90  EE20 F004          	lfsr	2,4
  4555  001F94  517B               	movf	CANsendMessage@data& (0+255),w,b
  4556  001F96  26D9               	addwf	fsr2l,f,c
  4557  001F98  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4558  001F9A  22DA               	addwfc	fsr2h,f,c
  4559  001F9C  50DF               	movf	indf2,w,c
  4560  001F9E  010F               	movlb	15	; () banked
  4561  001FA0  6F2A               	movwf	42,b	;volatile
  4562                           
  4563                           ; BSR set to: 15
  4564                           ;inc\CANlib.h: 515: TXB2D5 = data[5];
  4565  001FA2  0100               	movlb	0	; () banked
  4566  001FA4  EE20 F005          	lfsr	2,5
  4567  001FA8  517B               	movf	CANsendMessage@data& (0+255),w,b
  4568  001FAA  26D9               	addwf	fsr2l,f,c
  4569  001FAC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4570  001FAE  22DA               	addwfc	fsr2h,f,c
  4571  001FB0  50DF               	movf	indf2,w,c
  4572  001FB2  010F               	movlb	15	; () banked
  4573  001FB4  6F2B               	movwf	43,b	;volatile
  4574                           
  4575                           ; BSR set to: 15
  4576                           ;inc\CANlib.h: 516: TXB2D6 = data[6];
  4577  001FB6  0100               	movlb	0	; () banked
  4578  001FB8  EE20 F006          	lfsr	2,6
  4579  001FBC  517B               	movf	CANsendMessage@data& (0+255),w,b
  4580  001FBE  26D9               	addwf	fsr2l,f,c
  4581  001FC0  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4582  001FC2  22DA               	addwfc	fsr2h,f,c
  4583  001FC4  50DF               	movf	indf2,w,c
  4584  001FC6  010F               	movlb	15	; () banked
  4585  001FC8  6F2C               	movwf	44,b	;volatile
  4586                           
  4587                           ; BSR set to: 15
  4588                           ;inc\CANlib.h: 517: TXB2D7 = data[7];
  4589  001FCA  0100               	movlb	0	; () banked
  4590  001FCC  EE20 F007          	lfsr	2,7
  4591  001FD0  517B               	movf	CANsendMessage@data& (0+255),w,b
  4592  001FD2  26D9               	addwf	fsr2l,f,c
  4593  001FD4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4594  001FD6  22DA               	addwfc	fsr2h,f,c
  4595  001FD8  50DF               	movf	indf2,w,c
  4596  001FDA  010F               	movlb	15	; () banked
  4597  001FDC  6F2D               	movwf	45,b	;volatile
  4598                           
  4599                           ; BSR set to: 15
  4600                           ;inc\CANlib.h: 519: TXB2CONbits.TXREQ = 0x01;
  4601  001FDE  010F               	movlb	15	; () banked
  4602  001FE0  8720               	bsf	32,3,b	;volatile
  4603                           
  4604                           ; BSR set to: 15
  4605                           ;inc\CANlib.h: 521: return;
  4606  001FE2  0012               	return	
  4607  001FE4                     __end_of_CANsendMessage:
  4608                           	opt stack 0
  4609                           tblptru	equ	0xFF8
  4610                           tblptrh	equ	0xFF7
  4611                           tblptrl	equ	0xFF6
  4612                           tablat	equ	0xFF5
  4613                           postinc0	equ	0xFEE
  4614                           wreg	equ	0xFE8
  4615                           postdec1	equ	0xFE5
  4616                           fsr1l	equ	0xFE1
  4617                           indf2	equ	0xFDF
  4618                           postinc2	equ	0xFDE
  4619                           postdec2	equ	0xFDD
  4620                           fsr2h	equ	0xFDA
  4621                           fsr2l	equ	0xFD9
  4622                           status	equ	0xFD8
  4623                           
  4624 ;; *************** function _CANisTxReady *****************
  4625 ;; Defined at:
  4626 ;;		line 1155 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
  4627 ;; Parameters:    Size  Location     Type
  4628 ;;		None
  4629 ;; Auto vars:     Size  Location     Type
  4630 ;;		None
  4631 ;; Return value:  Size  Location     Type
  4632 ;;                  1    wreg      unsigned char 
  4633 ;; Registers used:
  4634 ;;		wreg, status,2
  4635 ;; Tracked objects:
  4636 ;;		On entry : 0/0
  4637 ;;		On exit  : 0/0
  4638 ;;		Unchanged: 0/0
  4639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4641 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4643 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4644 ;;Total ram usage:        1 bytes
  4645 ;; Hardware stack levels used:    1
  4646 ;; Hardware stack levels required when called:    4
  4647 ;; This function calls:
  4648 ;;		Nothing
  4649 ;; This function is called by:
  4650 ;;		_main
  4651 ;;		_park_search
  4652 ;;		_park_routine
  4653 ;;		_can_send
  4654 ;; This function uses a non-reentrant model
  4655 ;;
  4656                           
  4657                           	psect	text6
  4658  0066BA                     __ptext6:
  4659                           	opt stack 0
  4660  0066BA                     _CANisTxReady:
  4661                           	opt stack 23
  4662                           
  4663                           ;inc\CANlib.h: 1157: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  4664                           
  4665                           ; BSR set to: 15
  4666                           ;incstack = 0
  4667  0066BA  0E01               	movlw	1
  4668  0066BC  0100               	movlb	0	; () banked
  4669  0066BE  6F77               	movwf	_CANisTxReady$2845& (0+255),b
  4670                           
  4671                           ; BSR set to: 0
  4672  0066C0  010F               	movlb	15	; () banked
  4673  0066C2  A740               	btfss	64,3,b	;volatile
  4674  0066C4  D009               	goto	l556
  4675                           
  4676                           ; BSR set to: 15
  4677  0066C6  010F               	movlb	15	; () banked
  4678  0066C8  A730               	btfss	48,3,b	;volatile
  4679  0066CA  D006               	goto	l556
  4680                           
  4681                           ; BSR set to: 15
  4682  0066CC  010F               	movlb	15	; () banked
  4683  0066CE  A720               	btfss	32,3,b	;volatile
  4684  0066D0  D003               	goto	l556
  4685                           
  4686                           ; BSR set to: 15
  4687  0066D2  0E00               	movlw	0
  4688  0066D4  0100               	movlb	0	; () banked
  4689  0066D6  6F77               	movwf	_CANisTxReady$2845& (0+255),b
  4690  0066D8                     l556:
  4691  0066D8  0100               	movlb	0	; () banked
  4692  0066DA  5177               	movf	_CANisTxReady$2845& (0+255),w,b
  4693  0066DC  0012               	return	
  4694  0066DE                     __end_of_CANisTxReady:
  4695                           	opt stack 0
  4696                           tblptru	equ	0xFF8
  4697                           tblptrh	equ	0xFF7
  4698                           tblptrl	equ	0xFF6
  4699                           tablat	equ	0xFF5
  4700                           postinc0	equ	0xFEE
  4701                           wreg	equ	0xFE8
  4702                           postdec1	equ	0xFE5
  4703                           fsr1l	equ	0xFE1
  4704                           indf2	equ	0xFDF
  4705                           postinc2	equ	0xFDE
  4706                           postdec2	equ	0xFDD
  4707                           fsr2h	equ	0xFDA
  4708                           fsr2l	equ	0xFD9
  4709                           status	equ	0xFD8
  4710                           
  4711 ;; *************** function _abs *****************
  4712 ;; Defined at:
  4713 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;  a               2   23[BANK0 ] int 
  4716 ;; Auto vars:     Size  Location     Type
  4717 ;;		None
  4718 ;; Return value:  Size  Location     Type
  4719 ;;                  2   23[BANK0 ] int 
  4720 ;; Registers used:
  4721 ;;		wreg, status,2, status,0
  4722 ;; Tracked objects:
  4723 ;;		On entry : 0/0
  4724 ;;		On exit  : 0/0
  4725 ;;		Unchanged: 0/0
  4726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4727 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4729 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4730 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4731 ;;Total ram usage:        4 bytes
  4732 ;; Hardware stack levels used:    1
  4733 ;; Hardware stack levels required when called:    4
  4734 ;; This function calls:
  4735 ;;		Nothing
  4736 ;; This function is called by:
  4737 ;;		_park_search
  4738 ;;		_parallelo
  4739 ;; This function uses a non-reentrant model
  4740 ;;
  4741                           
  4742                           	psect	text7
  4743  006662                     __ptext7:
  4744                           	opt stack 0
  4745  006662                     _abs:
  4746                           	opt stack 24
  4747                           
  4748                           ; BSR set to: 0
  4749                           ;incstack = 0
  4750  006662  0100               	movlb	0	; () banked
  4751  006664  AF78               	btfss	(abs@a+1)& (0+255),7,b
  4752  006666  D00E               	goto	l892
  4753                           
  4754                           ; BSR set to: 0
  4755  006668  C077  F079         	movff	abs@a,??_abs
  4756  00666C  C078  F07A         	movff	abs@a+1,??_abs+1
  4757  006670  0100               	movlb	0	; () banked
  4758  006672  1F79               	comf	??_abs& (0+255),f,b
  4759  006674  1F7A               	comf	(??_abs+1)& (0+255),f,b
  4760  006676  4B79               	infsnz	??_abs& (0+255),f,b
  4761  006678  2B7A               	incf	(??_abs+1)& (0+255),f,b
  4762  00667A  C079  F077         	movff	??_abs,?_abs
  4763  00667E  C07A  F078         	movff	??_abs+1,?_abs+1
  4764  006682  0012               	return	
  4765  006684                     l892:
  4766                           
  4767                           ; BSR set to: 0
  4768  006684  C077  F077         	movff	abs@a,?_abs
  4769  006688  C078  F078         	movff	abs@a+1,?_abs+1
  4770                           
  4771                           ; BSR set to: 0
  4772  00668C  0012               	return		;funcret
  4773  00668E                     __end_of_abs:
  4774                           	opt stack 0
  4775                           tblptru	equ	0xFF8
  4776                           tblptrh	equ	0xFF7
  4777                           tblptrl	equ	0xFF6
  4778                           tablat	equ	0xFF5
  4779                           postinc0	equ	0xFEE
  4780                           wreg	equ	0xFE8
  4781                           postdec1	equ	0xFE5
  4782                           fsr1l	equ	0xFE1
  4783                           indf2	equ	0xFDF
  4784                           postinc2	equ	0xFDE
  4785                           postdec2	equ	0xFDD
  4786                           fsr2h	equ	0xFDA
  4787                           fsr2l	equ	0xFD9
  4788                           status	equ	0xFD8
  4789                           
  4790 ;; *************** function _matematica *****************
  4791 ;; Defined at:
  4792 ;;		line 462 in file "parcheggio.c"
  4793 ;; Parameters:    Size  Location     Type
  4794 ;;		None
  4795 ;; Auto vars:     Size  Location     Type
  4796 ;;		None
  4797 ;; Return value:  Size  Location     Type
  4798 ;;		None               void
  4799 ;; Registers used:
  4800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4801 ;; Tracked objects:
  4802 ;;		On entry : 0/0
  4803 ;;		On exit  : 0/0
  4804 ;;		Unchanged: 0/0
  4805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4807 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0
  4808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4809 ;;      Totals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0
  4810 ;;Total ram usage:       28 bytes
  4811 ;; Hardware stack levels used:    1
  4812 ;; Hardware stack levels required when called:    8
  4813 ;; This function calls:
  4814 ;;		___fladd
  4815 ;;		___fldiv
  4816 ;;		___flmul
  4817 ;;		___flneg
  4818 ;;		_asin
  4819 ;;		_cos
  4820 ;; This function is called by:
  4821 ;;		_park_routine
  4822 ;; This function uses a non-reentrant model
  4823 ;;
  4824                           
  4825                           	psect	text8
  4826  002674                     __ptext8:
  4827                           	opt stack 0
  4828  002674                     _matematica:
  4829                           	opt stack 21
  4830                           
  4831                           ;parcheggio.c: 463: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4832                           
  4833                           ; BSR set to: 0
  4834                           ;incstack = 0
  4835  002674  C12C  F0AD         	movff	_bordo,___fladd@a	;volatile
  4836  002678  C12D  F0AE         	movff	_bordo+1,___fladd@a+1	;volatile
  4837  00267C  C12E  F0AF         	movff	_bordo+2,___fladd@a+2	;volatile
  4838  002680  C12F  F0B0         	movff	_bordo+3,___fladd@a+3	;volatile
  4839  002684  0E00               	movlw	0
  4840  002686  0100               	movlb	0	; () banked
  4841  002688  6F7B               	movwf	___fldiv@a& (0+255),b
  4842  00268A  0E00               	movlw	0
  4843  00268C  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4844  00268E  0E00               	movlw	0
  4845  002690  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4846  002692  0E40               	movlw	64
  4847  002694  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4848  002696  C1E4  F077         	movff	_larghezza,___fldiv@b
  4849  00269A  C1E5  F078         	movff	_larghezza+1,___fldiv@b+1
  4850  00269E  C1E6  F079         	movff	_larghezza+2,___fldiv@b+2
  4851  0026A2  C1E7  F07A         	movff	_larghezza+3,___fldiv@b+3
  4852  0026A6  EC57  F021         	call	___fldiv	;wreg free
  4853  0026AA  C077  F0A9         	movff	?___fldiv,___fladd@b
  4854  0026AE  C078  F0AA         	movff	?___fldiv+1,___fladd@b+1
  4855  0026B2  C079  F0AB         	movff	?___fldiv+2,___fladd@b+2
  4856  0026B6  C07A  F0AC         	movff	?___fldiv+3,___fladd@b+3
  4857  0026BA  EC85  F018         	call	___fladd	;wreg free
  4858  0026BE  C0A9  F0BD         	movff	?___fladd,___flneg@f1
  4859  0026C2  C0AA  F0BE         	movff	?___fladd+1,___flneg@f1+1
  4860  0026C6  C0AB  F0BF         	movff	?___fladd+2,___flneg@f1+2
  4861  0026CA  C0AC  F0C0         	movff	?___fladd+3,___flneg@f1+3
  4862  0026CE  ECFA  F032         	call	___flneg	;wreg free
  4863  0026D2  C0BD  F1BC         	movff	?___flneg,_matematica$3746
  4864  0026D6  C0BE  F1BD         	movff	?___flneg+1,_matematica$3746+1
  4865  0026DA  C0BF  F1BE         	movff	?___flneg+2,_matematica$3746+2
  4866  0026DE  C0C0  F1BF         	movff	?___flneg+3,_matematica$3746+3
  4867                           
  4868                           ;parcheggio.c: 463: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4869  0026E2  C1BC  F0AD         	movff	_matematica$3746,___fladd@a
  4870  0026E6  C1BD  F0AE         	movff	_matematica$3746+1,___fladd@a+1
  4871  0026EA  C1BE  F0AF         	movff	_matematica$3746+2,___fladd@a+2
  4872  0026EE  C1BF  F0B0         	movff	_matematica$3746+3,___fladd@a+3
  4873  0026F2  0E00               	movlw	0
  4874  0026F4  0100               	movlb	0	; () banked
  4875  0026F6  6F94               	movwf	___flmul@a& (0+255),b
  4876  0026F8  0E00               	movlw	0
  4877  0026FA  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4878  0026FC  0E00               	movlw	0
  4879  0026FE  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4880  002700  0E40               	movlw	64
  4881  002702  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4882  002704  C1E8  F090         	movff	_raggio,___flmul@b
  4883  002708  C1E9  F091         	movff	_raggio+1,___flmul@b+1
  4884  00270C  C1EA  F092         	movff	_raggio+2,___flmul@b+2
  4885  002710  C1EB  F093         	movff	_raggio+3,___flmul@b+3
  4886  002714  ECD9  F01A         	call	___flmul	;wreg free
  4887  002718  C090  F0A9         	movff	?___flmul,___fladd@b
  4888  00271C  C091  F0AA         	movff	?___flmul+1,___fladd@b+1
  4889  002720  C092  F0AB         	movff	?___flmul+2,___fladd@b+2
  4890  002724  C093  F0AC         	movff	?___flmul+3,___fladd@b+3
  4891  002728  EC85  F018         	call	___fladd	;wreg free
  4892  00272C  C0A9  F1C0         	movff	?___fladd,_matematica$3747
  4893  002730  C0AA  F1C1         	movff	?___fladd+1,_matematica$3747+1
  4894  002734  C0AB  F1C2         	movff	?___fladd+2,_matematica$3747+2
  4895  002738  C0AC  F1C3         	movff	?___fladd+3,_matematica$3747+3
  4896                           
  4897                           ;parcheggio.c: 463: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4898  00273C  0E00               	movlw	0
  4899  00273E  0100               	movlb	0	; () banked
  4900  002740  6F7B               	movwf	___fldiv@a& (0+255),b
  4901  002742  0E00               	movlw	0
  4902  002744  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4903  002746  0E00               	movlw	0
  4904  002748  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4905  00274A  0E40               	movlw	64
  4906  00274C  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4907  00274E  C1E4  F077         	movff	_larghezza,___fldiv@b
  4908  002752  C1E5  F078         	movff	_larghezza+1,___fldiv@b+1
  4909  002756  C1E6  F079         	movff	_larghezza+2,___fldiv@b+2
  4910  00275A  C1E7  F07A         	movff	_larghezza+3,___fldiv@b+3
  4911  00275E  EC57  F021         	call	___fldiv	;wreg free
  4912  002762  C077  F0BD         	movff	?___fldiv,___flneg@f1
  4913  002766  C078  F0BE         	movff	?___fldiv+1,___flneg@f1+1
  4914  00276A  C079  F0BF         	movff	?___fldiv+2,___flneg@f1+2
  4915  00276E  C07A  F0C0         	movff	?___fldiv+3,___flneg@f1+3
  4916  002772  ECFA  F032         	call	___flneg	;wreg free
  4917  002776  C0BD  F0AD         	movff	?___flneg,___fladd@a
  4918  00277A  C0BE  F0AE         	movff	?___flneg+1,___fladd@a+1
  4919  00277E  C0BF  F0AF         	movff	?___flneg+2,___fladd@a+2
  4920  002782  C0C0  F0B0         	movff	?___flneg+3,___fladd@a+3
  4921  002786  C1C0  F0A9         	movff	_matematica$3747,___fladd@b
  4922  00278A  C1C1  F0AA         	movff	_matematica$3747+1,___fladd@b+1
  4923  00278E  C1C2  F0AB         	movff	_matematica$3747+2,___fladd@b+2
  4924  002792  C1C3  F0AC         	movff	_matematica$3747+3,___fladd@b+3
  4925  002796  EC85  F018         	call	___fladd	;wreg free
  4926  00279A  C0A9  F1C4         	movff	?___fladd,_matematica$3748
  4927  00279E  C0AA  F1C5         	movff	?___fladd+1,_matematica$3748+1
  4928  0027A2  C0AB  F1C6         	movff	?___fladd+2,_matematica$3748+2
  4929  0027A6  C0AC  F1C7         	movff	?___fladd+3,_matematica$3748+3
  4930                           
  4931                           ;parcheggio.c: 463: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4932  0027AA  C1C4  F077         	movff	_matematica$3748,___fldiv@b
  4933  0027AE  C1C5  F078         	movff	_matematica$3748+1,___fldiv@b+1
  4934  0027B2  C1C6  F079         	movff	_matematica$3748+2,___fldiv@b+2
  4935  0027B6  C1C7  F07A         	movff	_matematica$3748+3,___fldiv@b+3
  4936  0027BA  0E00               	movlw	0
  4937  0027BC  0100               	movlb	0	; () banked
  4938  0027BE  6F94               	movwf	___flmul@a& (0+255),b
  4939  0027C0  0E00               	movlw	0
  4940  0027C2  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4941  0027C4  0E00               	movlw	0
  4942  0027C6  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4943  0027C8  0E40               	movlw	64
  4944  0027CA  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4945  0027CC  C1E8  F090         	movff	_raggio,___flmul@b
  4946  0027D0  C1E9  F091         	movff	_raggio+1,___flmul@b+1
  4947  0027D4  C1EA  F092         	movff	_raggio+2,___flmul@b+2
  4948  0027D8  C1EB  F093         	movff	_raggio+3,___flmul@b+3
  4949  0027DC  ECD9  F01A         	call	___flmul	;wreg free
  4950  0027E0  C090  F07B         	movff	?___flmul,___fldiv@a
  4951  0027E4  C091  F07C         	movff	?___flmul+1,___fldiv@a+1
  4952  0027E8  C092  F07D         	movff	?___flmul+2,___fldiv@a+2
  4953  0027EC  C093  F07E         	movff	?___flmul+3,___fldiv@a+3
  4954  0027F0  EC57  F021         	call	___fldiv	;wreg free
  4955  0027F4  C077  F1C8         	movff	?___fldiv,_matematica$3749
  4956  0027F8  C078  F1C9         	movff	?___fldiv+1,_matematica$3749+1
  4957  0027FC  C079  F1CA         	movff	?___fldiv+2,_matematica$3749+2
  4958  002800  C07A  F1CB         	movff	?___fldiv+3,_matematica$3749+3
  4959                           
  4960                           ;parcheggio.c: 463: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4961  002804  C1C8  F0D5         	movff	_matematica$3749,asin@x
  4962  002808  C1C9  F0D6         	movff	_matematica$3749+1,asin@x+1
  4963  00280C  C1CA  F0D7         	movff	_matematica$3749+2,asin@x+2
  4964  002810  C1CB  F0D8         	movff	_matematica$3749+3,asin@x+3
  4965  002814  EC92  F026         	call	_asin	;wreg free
  4966  002818  C0D5  F124         	movff	?_asin,_alfa
  4967  00281C  C0D6  F125         	movff	?_asin+1,_alfa+1
  4968  002820  C0D7  F126         	movff	?_asin+2,_alfa+2
  4969  002824  C0D8  F127         	movff	?_asin+3,_alfa+3
  4970                           
  4971                           ;parcheggio.c: 464: alfa = alfa / 3.14159265358979323846 * 180;
  4972  002828  0EDB               	movlw	219
  4973  00282A  0100               	movlb	0	; () banked
  4974  00282C  6F7B               	movwf	___fldiv@a& (0+255),b
  4975  00282E  0E0F               	movlw	15
  4976  002830  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4977  002832  0E49               	movlw	73
  4978  002834  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4979  002836  0E40               	movlw	64
  4980  002838  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4981  00283A  C124  F077         	movff	_alfa,___fldiv@b
  4982  00283E  C125  F078         	movff	_alfa+1,___fldiv@b+1
  4983  002842  C126  F079         	movff	_alfa+2,___fldiv@b+2
  4984  002846  C127  F07A         	movff	_alfa+3,___fldiv@b+3
  4985  00284A  EC57  F021         	call	___fldiv	;wreg free
  4986  00284E  C077  F090         	movff	?___fldiv,___flmul@b
  4987  002852  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  4988  002856  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  4989  00285A  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  4990  00285E  0E00               	movlw	0
  4991  002860  0100               	movlb	0	; () banked
  4992  002862  6F94               	movwf	___flmul@a& (0+255),b
  4993  002864  0E00               	movlw	0
  4994  002866  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4995  002868  0E34               	movlw	52
  4996  00286A  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4997  00286C  0E43               	movlw	67
  4998  00286E  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4999  002870  ECD9  F01A         	call	___flmul	;wreg free
  5000  002874  C090  F124         	movff	?___flmul,_alfa
  5001  002878  C091  F125         	movff	?___flmul+1,_alfa+1
  5002  00287C  C092  F126         	movff	?___flmul+2,_alfa+2
  5003  002880  C093  F127         	movff	?___flmul+3,_alfa+3
  5004                           
  5005                           ;parcheggio.c: 465: beta = 90 - alfa;
  5006  002884  C124  F0BD         	movff	_alfa,___flneg@f1
  5007  002888  C125  F0BE         	movff	_alfa+1,___flneg@f1+1
  5008  00288C  C126  F0BF         	movff	_alfa+2,___flneg@f1+2
  5009  002890  C127  F0C0         	movff	_alfa+3,___flneg@f1+3
  5010  002894  ECFA  F032         	call	___flneg	;wreg free
  5011  002898  C0BD  F0A9         	movff	?___flneg,___fladd@b
  5012  00289C  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  5013  0028A0  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  5014  0028A4  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  5015  0028A8  0E00               	movlw	0
  5016  0028AA  0100               	movlb	0	; () banked
  5017  0028AC  6FAD               	movwf	___fladd@a& (0+255),b
  5018  0028AE  0E00               	movlw	0
  5019  0028B0  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5020  0028B2  0EB4               	movlw	180
  5021  0028B4  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5022  0028B6  0E42               	movlw	66
  5023  0028B8  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5024  0028BA  EC85  F018         	call	___fladd	;wreg free
  5025  0028BE  C0A9  F128         	movff	?___fladd,_beta
  5026  0028C2  C0AA  F129         	movff	?___fladd+1,_beta+1
  5027  0028C6  C0AB  F12A         	movff	?___fladd+2,_beta+2
  5028  0028CA  C0AC  F12B         	movff	?___fladd+3,_beta+3
  5029                           
  5030                           ;parcheggio.c: 466: alfa = (alfa * 3.14159265358979323846) / 180;
  5031  0028CE  0EDB               	movlw	219
  5032  0028D0  0100               	movlb	0	; () banked
  5033  0028D2  6F94               	movwf	___flmul@a& (0+255),b
  5034  0028D4  0E0F               	movlw	15
  5035  0028D6  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5036  0028D8  0E49               	movlw	73
  5037  0028DA  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5038  0028DC  0E40               	movlw	64
  5039  0028DE  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5040  0028E0  C124  F090         	movff	_alfa,___flmul@b
  5041  0028E4  C125  F091         	movff	_alfa+1,___flmul@b+1
  5042  0028E8  C126  F092         	movff	_alfa+2,___flmul@b+2
  5043  0028EC  C127  F093         	movff	_alfa+3,___flmul@b+3
  5044  0028F0  ECD9  F01A         	call	___flmul	;wreg free
  5045  0028F4  C090  F077         	movff	?___flmul,___fldiv@b
  5046  0028F8  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  5047  0028FC  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  5048  002900  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  5049  002904  0E00               	movlw	0
  5050  002906  0100               	movlb	0	; () banked
  5051  002908  6F7B               	movwf	___fldiv@a& (0+255),b
  5052  00290A  0E00               	movlw	0
  5053  00290C  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5054  00290E  0E34               	movlw	52
  5055  002910  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5056  002912  0E43               	movlw	67
  5057  002914  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5058  002916  EC57  F021         	call	___fldiv	;wreg free
  5059  00291A  C077  F124         	movff	?___fldiv,_alfa
  5060  00291E  C078  F125         	movff	?___fldiv+1,_alfa+1
  5061  002922  C079  F126         	movff	?___fldiv+2,_alfa+2
  5062  002926  C07A  F127         	movff	?___fldiv+3,_alfa+3
  5063                           
  5064                           ;parcheggio.c: 467: n = cos(alfa);
  5065  00292A  C124  F1B4         	movff	_alfa,cos@f
  5066  00292E  C125  F1B5         	movff	_alfa+1,cos@f+1
  5067  002932  C126  F1B6         	movff	_alfa+2,cos@f+2
  5068  002936  C127  F1B7         	movff	_alfa+3,cos@f+3
  5069  00293A  EC36  F030         	call	_cos	;wreg free
  5070  00293E  C1B4  F138         	movff	?_cos,_n
  5071  002942  C1B5  F139         	movff	?_cos+1,_n+1
  5072  002946  C1B6  F13A         	movff	?_cos+2,_n+2
  5073  00294A  C1B7  F13B         	movff	?_cos+3,_n+3
  5074                           
  5075                           ;parcheggio.c: 468: n = 2 * raggio *n;
  5076  00294E  C138  F094         	movff	_n,___flmul@a
  5077  002952  C139  F095         	movff	_n+1,___flmul@a+1
  5078  002956  C13A  F096         	movff	_n+2,___flmul@a+2
  5079  00295A  C13B  F097         	movff	_n+3,___flmul@a+3
  5080  00295E  C1E8  F090         	movff	_raggio,___flmul@b
  5081  002962  C1E9  F091         	movff	_raggio+1,___flmul@b+1
  5082  002966  C1EA  F092         	movff	_raggio+2,___flmul@b+2
  5083  00296A  C1EB  F093         	movff	_raggio+3,___flmul@b+3
  5084  00296E  ECD9  F01A         	call	___flmul	;wreg free
  5085  002972  C090  F1D4         	movff	?___flmul,_matematica$3750
  5086  002976  C091  F1D5         	movff	?___flmul+1,_matematica$3750+1
  5087  00297A  C092  F1D6         	movff	?___flmul+2,_matematica$3750+2
  5088  00297E  C093  F1D7         	movff	?___flmul+3,_matematica$3750+3
  5089                           
  5090                           ;parcheggio.c: 468: n = 2 * raggio *n;
  5091  002982  C1D4  F090         	movff	_matematica$3750,___flmul@b
  5092  002986  C1D5  F091         	movff	_matematica$3750+1,___flmul@b+1
  5093  00298A  C1D6  F092         	movff	_matematica$3750+2,___flmul@b+2
  5094  00298E  C1D7  F093         	movff	_matematica$3750+3,___flmul@b+3
  5095  002992  0E00               	movlw	0
  5096  002994  0100               	movlb	0	; () banked
  5097  002996  6F94               	movwf	___flmul@a& (0+255),b
  5098  002998  0E00               	movlw	0
  5099  00299A  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5100  00299C  0E00               	movlw	0
  5101  00299E  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5102  0029A0  0E40               	movlw	64
  5103  0029A2  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5104  0029A4  ECD9  F01A         	call	___flmul	;wreg free
  5105  0029A8  C090  F138         	movff	?___flmul,_n
  5106  0029AC  C091  F139         	movff	?___flmul+1,_n+1
  5107  0029B0  C092  F13A         	movff	?___flmul+2,_n+2
  5108  0029B4  C093  F13B         	movff	?___flmul+3,_n+3
  5109                           
  5110                           ;parcheggio.c: 469: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  5111  0029B8  C128  F094         	movff	_beta,___flmul@a
  5112  0029BC  C129  F095         	movff	_beta+1,___flmul@a+1
  5113  0029C0  C12A  F096         	movff	_beta+2,___flmul@a+2
  5114  0029C4  C12B  F097         	movff	_beta+3,___flmul@a+3
  5115  0029C8  C1E8  F090         	movff	_raggio,___flmul@b
  5116  0029CC  C1E9  F091         	movff	_raggio+1,___flmul@b+1
  5117  0029D0  C1EA  F092         	movff	_raggio+2,___flmul@b+2
  5118  0029D4  C1EB  F093         	movff	_raggio+3,___flmul@b+3
  5119  0029D8  ECD9  F01A         	call	___flmul	;wreg free
  5120  0029DC  C090  F1D4         	movff	?___flmul,_matematica$3750
  5121  0029E0  C091  F1D5         	movff	?___flmul+1,_matematica$3750+1
  5122  0029E4  C092  F1D6         	movff	?___flmul+2,_matematica$3750+2
  5123  0029E8  C093  F1D7         	movff	?___flmul+3,_matematica$3750+3
  5124                           
  5125                           ;parcheggio.c: 469: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  5126  0029EC  0EDB               	movlw	219
  5127  0029EE  0100               	movlb	0	; () banked
  5128  0029F0  6F94               	movwf	___flmul@a& (0+255),b
  5129  0029F2  0E0F               	movlw	15
  5130  0029F4  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5131  0029F6  0EC9               	movlw	201
  5132  0029F8  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5133  0029FA  0E40               	movlw	64
  5134  0029FC  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5135  0029FE  C1D4  F090         	movff	_matematica$3750,___flmul@b
  5136  002A02  C1D5  F091         	movff	_matematica$3750+1,___flmul@b+1
  5137  002A06  C1D6  F092         	movff	_matematica$3750+2,___flmul@b+2
  5138  002A0A  C1D7  F093         	movff	_matematica$3750+3,___flmul@b+3
  5139  002A0E  ECD9  F01A         	call	___flmul	;wreg free
  5140  002A12  C090  F077         	movff	?___flmul,___fldiv@b
  5141  002A16  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  5142  002A1A  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  5143  002A1E  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  5144  002A22  0E00               	movlw	0
  5145  002A24  0100               	movlb	0	; () banked
  5146  002A26  6F7B               	movwf	___fldiv@a& (0+255),b
  5147  002A28  0E00               	movlw	0
  5148  002A2A  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5149  002A2C  0EB4               	movlw	180
  5150  002A2E  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5151  002A30  0E43               	movlw	67
  5152  002A32  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5153  002A34  EC57  F021         	call	___fldiv	;wreg free
  5154  002A38  C077  F140         	movff	?___fldiv,_prima_sterzata
  5155  002A3C  C078  F141         	movff	?___fldiv+1,_prima_sterzata+1
  5156  002A40  C079  F142         	movff	?___fldiv+2,_prima_sterzata+2
  5157  002A44  C07A  F143         	movff	?___fldiv+3,_prima_sterzata+3
  5158                           
  5159                           ;parcheggio.c: 470: kkk = raggio + (2 * larghezza / 3);
  5160  002A48  0E00               	movlw	0
  5161  002A4A  0100               	movlb	0	; () banked
  5162  002A4C  6F7B               	movwf	___fldiv@a& (0+255),b
  5163  002A4E  0E00               	movlw	0
  5164  002A50  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5165  002A52  0E40               	movlw	64
  5166  002A54  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5167  002A56  0E40               	movlw	64
  5168  002A58  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5169  002A5A  0E00               	movlw	0
  5170  002A5C  0100               	movlb	0	; () banked
  5171  002A5E  6F94               	movwf	___flmul@a& (0+255),b
  5172  002A60  0E00               	movlw	0
  5173  002A62  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5174  002A64  0E00               	movlw	0
  5175  002A66  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5176  002A68  0E40               	movlw	64
  5177  002A6A  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5178  002A6C  C1E4  F090         	movff	_larghezza,___flmul@b
  5179  002A70  C1E5  F091         	movff	_larghezza+1,___flmul@b+1
  5180  002A74  C1E6  F092         	movff	_larghezza+2,___flmul@b+2
  5181  002A78  C1E7  F093         	movff	_larghezza+3,___flmul@b+3
  5182  002A7C  ECD9  F01A         	call	___flmul	;wreg free
  5183  002A80  C090  F077         	movff	?___flmul,___fldiv@b
  5184  002A84  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  5185  002A88  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  5186  002A8C  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  5187  002A90  EC57  F021         	call	___fldiv	;wreg free
  5188  002A94  C077  F0A9         	movff	?___fldiv,___fladd@b
  5189  002A98  C078  F0AA         	movff	?___fldiv+1,___fladd@b+1
  5190  002A9C  C079  F0AB         	movff	?___fldiv+2,___fladd@b+2
  5191  002AA0  C07A  F0AC         	movff	?___fldiv+3,___fladd@b+3
  5192  002AA4  C1E8  F0AD         	movff	_raggio,___fladd@a
  5193  002AA8  C1E9  F0AE         	movff	_raggio+1,___fladd@a+1
  5194  002AAC  C1EA  F0AF         	movff	_raggio+2,___fladd@a+2
  5195  002AB0  C1EB  F0B0         	movff	_raggio+3,___fladd@a+3
  5196  002AB4  EC85  F018         	call	___fladd	;wreg free
  5197  002AB8  C0A9  F134         	movff	?___fladd,_kkk
  5198  002ABC  C0AA  F135         	movff	?___fladd+1,_kkk+1
  5199  002AC0  C0AB  F136         	movff	?___fladd+2,_kkk+2
  5200  002AC4  C0AC  F137         	movff	?___fladd+3,_kkk+3
  5201                           
  5202                           ;parcheggio.c: 471: jjj = raggio - (2 * larghezza / 3);
  5203  002AC8  0E00               	movlw	0
  5204  002ACA  0100               	movlb	0	; () banked
  5205  002ACC  6F7B               	movwf	___fldiv@a& (0+255),b
  5206  002ACE  0E00               	movlw	0
  5207  002AD0  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5208  002AD2  0E40               	movlw	64
  5209  002AD4  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5210  002AD6  0E40               	movlw	64
  5211  002AD8  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5212  002ADA  0E00               	movlw	0
  5213  002ADC  0100               	movlb	0	; () banked
  5214  002ADE  6F94               	movwf	___flmul@a& (0+255),b
  5215  002AE0  0E00               	movlw	0
  5216  002AE2  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5217  002AE4  0E00               	movlw	0
  5218  002AE6  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5219  002AE8  0E40               	movlw	64
  5220  002AEA  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5221  002AEC  C1E4  F090         	movff	_larghezza,___flmul@b
  5222  002AF0  C1E5  F091         	movff	_larghezza+1,___flmul@b+1
  5223  002AF4  C1E6  F092         	movff	_larghezza+2,___flmul@b+2
  5224  002AF8  C1E7  F093         	movff	_larghezza+3,___flmul@b+3
  5225  002AFC  ECD9  F01A         	call	___flmul	;wreg free
  5226  002B00  C090  F077         	movff	?___flmul,___fldiv@b
  5227  002B04  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  5228  002B08  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  5229  002B0C  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  5230  002B10  EC57  F021         	call	___fldiv	;wreg free
  5231  002B14  C077  F0BD         	movff	?___fldiv,___flneg@f1
  5232  002B18  C078  F0BE         	movff	?___fldiv+1,___flneg@f1+1
  5233  002B1C  C079  F0BF         	movff	?___fldiv+2,___flneg@f1+2
  5234  002B20  C07A  F0C0         	movff	?___fldiv+3,___flneg@f1+3
  5235  002B24  ECFA  F032         	call	___flneg	;wreg free
  5236  002B28  C0BD  F0A9         	movff	?___flneg,___fladd@b
  5237  002B2C  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  5238  002B30  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  5239  002B34  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  5240  002B38  C1E8  F0AD         	movff	_raggio,___fladd@a
  5241  002B3C  C1E9  F0AE         	movff	_raggio+1,___fladd@a+1
  5242  002B40  C1EA  F0AF         	movff	_raggio+2,___fladd@a+2
  5243  002B44  C1EB  F0B0         	movff	_raggio+3,___fladd@a+3
  5244  002B48  EC85  F018         	call	___fladd	;wreg free
  5245  002B4C  C0A9  F130         	movff	?___fladd,_jjj
  5246  002B50  C0AA  F131         	movff	?___fladd+1,_jjj+1
  5247  002B54  C0AB  F132         	movff	?___fladd+2,_jjj+2
  5248  002B58  C0AC  F133         	movff	?___fladd+3,_jjj+3
  5249                           
  5250                           ;parcheggio.c: 472: Pminimo = kkk * cos(asin((jjj / kkk)));
  5251  002B5C  C134  F07B         	movff	_kkk,___fldiv@a
  5252  002B60  C135  F07C         	movff	_kkk+1,___fldiv@a+1
  5253  002B64  C136  F07D         	movff	_kkk+2,___fldiv@a+2
  5254  002B68  C137  F07E         	movff	_kkk+3,___fldiv@a+3
  5255  002B6C  C130  F077         	movff	_jjj,___fldiv@b
  5256  002B70  C131  F078         	movff	_jjj+1,___fldiv@b+1
  5257  002B74  C132  F079         	movff	_jjj+2,___fldiv@b+2
  5258  002B78  C133  F07A         	movff	_jjj+3,___fldiv@b+3
  5259  002B7C  EC57  F021         	call	___fldiv	;wreg free
  5260  002B80  C077  F1CC         	movff	?___fldiv,_matematica$3751
  5261  002B84  C078  F1CD         	movff	?___fldiv+1,_matematica$3751+1
  5262  002B88  C079  F1CE         	movff	?___fldiv+2,_matematica$3751+2
  5263  002B8C  C07A  F1CF         	movff	?___fldiv+3,_matematica$3751+3
  5264                           
  5265                           ;parcheggio.c: 472: Pminimo = kkk * cos(asin((jjj / kkk)));
  5266  002B90  C1CC  F0D5         	movff	_matematica$3751,asin@x
  5267  002B94  C1CD  F0D6         	movff	_matematica$3751+1,asin@x+1
  5268  002B98  C1CE  F0D7         	movff	_matematica$3751+2,asin@x+2
  5269  002B9C  C1CF  F0D8         	movff	_matematica$3751+3,asin@x+3
  5270  002BA0  EC92  F026         	call	_asin	;wreg free
  5271  002BA4  C0D5  F1B4         	movff	?_asin,cos@f
  5272  002BA8  C0D6  F1B5         	movff	?_asin+1,cos@f+1
  5273  002BAC  C0D7  F1B6         	movff	?_asin+2,cos@f+2
  5274  002BB0  C0D8  F1B7         	movff	?_asin+3,cos@f+3
  5275  002BB4  EC36  F030         	call	_cos	;wreg free
  5276  002BB8  C1B4  F1D0         	movff	?_cos,_matematica$3752
  5277  002BBC  C1B5  F1D1         	movff	?_cos+1,_matematica$3752+1
  5278  002BC0  C1B6  F1D2         	movff	?_cos+2,_matematica$3752+2
  5279  002BC4  C1B7  F1D3         	movff	?_cos+3,_matematica$3752+3
  5280                           
  5281                           ;parcheggio.c: 472: Pminimo = kkk * cos(asin((jjj / kkk)));
  5282  002BC8  C1D0  F090         	movff	_matematica$3752,___flmul@b
  5283  002BCC  C1D1  F091         	movff	_matematica$3752+1,___flmul@b+1
  5284  002BD0  C1D2  F092         	movff	_matematica$3752+2,___flmul@b+2
  5285  002BD4  C1D3  F093         	movff	_matematica$3752+3,___flmul@b+3
  5286  002BD8  C134  F094         	movff	_kkk,___flmul@a
  5287  002BDC  C135  F095         	movff	_kkk+1,___flmul@a+1
  5288  002BE0  C136  F096         	movff	_kkk+2,___flmul@a+2
  5289  002BE4  C137  F097         	movff	_kkk+3,___flmul@a+3
  5290  002BE8  ECD9  F01A         	call	___flmul	;wreg free
  5291  002BEC  C090  F120         	movff	?___flmul,_Pminimo
  5292  002BF0  C091  F121         	movff	?___flmul+1,_Pminimo+1
  5293  002BF4  C092  F122         	movff	?___flmul+2,_Pminimo+2
  5294  002BF8  C093  F123         	movff	?___flmul+3,_Pminimo+3
  5295  002BFC  0012               	return		;funcret
  5296  002BFE                     __end_of_matematica:
  5297                           	opt stack 0
  5298                           tblptru	equ	0xFF8
  5299                           tblptrh	equ	0xFF7
  5300                           tblptrl	equ	0xFF6
  5301                           tablat	equ	0xFF5
  5302                           postinc0	equ	0xFEE
  5303                           wreg	equ	0xFE8
  5304                           postdec1	equ	0xFE5
  5305                           fsr1l	equ	0xFE1
  5306                           indf2	equ	0xFDF
  5307                           postinc2	equ	0xFDE
  5308                           postdec2	equ	0xFDD
  5309                           fsr2h	equ	0xFDA
  5310                           fsr2l	equ	0xFD9
  5311                           status	equ	0xFD8
  5312                           
  5313 ;; *************** function _cos *****************
  5314 ;; Defined at:
  5315 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\cos.c"
  5316 ;; Parameters:    Size  Location     Type
  5317 ;;  f               4   41[BANK1 ] int 
  5318 ;; Auto vars:     Size  Location     Type
  5319 ;;		None
  5320 ;; Return value:  Size  Location     Type
  5321 ;;                  4   41[BANK1 ] int 
  5322 ;; Registers used:
  5323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5324 ;; Tracked objects:
  5325 ;;		On entry : 0/0
  5326 ;;		On exit  : 0/0
  5327 ;;		Unchanged: 0/0
  5328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5329 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5330 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5332 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5333 ;;Total ram usage:        8 bytes
  5334 ;; Hardware stack levels used:    1
  5335 ;; Hardware stack levels required when called:    7
  5336 ;; This function calls:
  5337 ;;		___fladd
  5338 ;;		___flge
  5339 ;;		_sin
  5340 ;; This function is called by:
  5341 ;;		_matematica
  5342 ;; This function uses a non-reentrant model
  5343 ;;
  5344                           
  5345                           	psect	text9
  5346  00606C                     __ptext9:
  5347                           	opt stack 0
  5348  00606C                     _cos:
  5349                           	opt stack 21
  5350                           
  5351                           ;incstack = 0
  5352  00606C  0EDB               	movlw	219
  5353  00606E  0100               	movlb	0	; () banked
  5354  006070  6FC5               	movwf	___flge@ff1& (0+255),b
  5355  006072  0E0F               	movlw	15
  5356  006074  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  5357  006076  0E49               	movlw	73
  5358  006078  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  5359  00607A  0E40               	movlw	64
  5360  00607C  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  5361  00607E  C1B4  F0C9         	movff	cos@f,___flge@ff2
  5362  006082  C1B5  F0CA         	movff	cos@f+1,___flge@ff2+1
  5363  006086  C1B6  F0CB         	movff	cos@f+2,___flge@ff2+2
  5364  00608A  C1B7  F0CC         	movff	cos@f+3,___flge@ff2+3
  5365  00608E  EC30  F02D         	call	___flge	;wreg free
  5366  006092  0100               	movlb	0	; () banked
  5367  006094  B0D8               	btfsc	status,0,c
  5368  006096  D02E               	goto	l7902
  5369                           
  5370                           ; BSR set to: 0
  5371  006098  C1B4  F0A9         	movff	cos@f,___fladd@b
  5372  00609C  C1B5  F0AA         	movff	cos@f+1,___fladd@b+1
  5373  0060A0  C1B6  F0AB         	movff	cos@f+2,___fladd@b+2
  5374  0060A4  C1B7  F0AC         	movff	cos@f+3,___fladd@b+3
  5375  0060A8  0EE4               	movlw	228
  5376  0060AA  0100               	movlb	0	; () banked
  5377  0060AC  6FAD               	movwf	___fladd@a& (0+255),b
  5378  0060AE  0ECB               	movlw	203
  5379  0060B0  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5380  0060B2  0E96               	movlw	150
  5381  0060B4  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5382  0060B6  0EC0               	movlw	192
  5383  0060B8  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5384  0060BA  EC85  F018         	call	___fladd	;wreg free
  5385  0060BE  C0A9  F1B8         	movff	?___fladd,_cos$3756
  5386  0060C2  C0AA  F1B9         	movff	?___fladd+1,_cos$3756+1
  5387  0060C6  C0AB  F1BA         	movff	?___fladd+2,_cos$3756+2
  5388  0060CA  C0AC  F1BB         	movff	?___fladd+3,_cos$3756+3
  5389  0060CE  C1B8  F19D         	movff	_cos$3756,sin@f
  5390  0060D2  C1B9  F19E         	movff	_cos$3756+1,sin@f+1
  5391  0060D6  C1BA  F19F         	movff	_cos$3756+2,sin@f+2
  5392  0060DA  C1BB  F1A0         	movff	_cos$3756+3,sin@f+3
  5393  0060DE  EC06  F025         	call	_sin	;wreg free
  5394  0060E2  C19D  F1B4         	movff	?_sin,?_cos
  5395  0060E6  C19E  F1B5         	movff	?_sin+1,?_cos+1
  5396  0060EA  C19F  F1B6         	movff	?_sin+2,?_cos+2
  5397  0060EE  C1A0  F1B7         	movff	?_sin+3,?_cos+3
  5398  0060F2  0012               	return	
  5399  0060F4                     l7902:
  5400  0060F4  C1B4  F0A9         	movff	cos@f,___fladd@b
  5401  0060F8  C1B5  F0AA         	movff	cos@f+1,___fladd@b+1
  5402  0060FC  C1B6  F0AB         	movff	cos@f+2,___fladd@b+2
  5403  006100  C1B7  F0AC         	movff	cos@f+3,___fladd@b+3
  5404  006104  0EDB               	movlw	219
  5405  006106  0100               	movlb	0	; () banked
  5406  006108  6FAD               	movwf	___fladd@a& (0+255),b
  5407  00610A  0E0F               	movlw	15
  5408  00610C  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5409  00610E  0EC9               	movlw	201
  5410  006110  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5411  006112  0E3F               	movlw	63
  5412  006114  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5413  006116  EC85  F018         	call	___fladd	;wreg free
  5414  00611A  C0A9  F1B8         	movff	?___fladd,_cos$3756
  5415  00611E  C0AA  F1B9         	movff	?___fladd+1,_cos$3756+1
  5416  006122  C0AB  F1BA         	movff	?___fladd+2,_cos$3756+2
  5417  006126  C0AC  F1BB         	movff	?___fladd+3,_cos$3756+3
  5418  00612A  C1B8  F19D         	movff	_cos$3756,sin@f
  5419  00612E  C1B9  F19E         	movff	_cos$3756+1,sin@f+1
  5420  006132  C1BA  F19F         	movff	_cos$3756+2,sin@f+2
  5421  006136  C1BB  F1A0         	movff	_cos$3756+3,sin@f+3
  5422  00613A  EC06  F025         	call	_sin	;wreg free
  5423  00613E  C19D  F1B4         	movff	?_sin,?_cos
  5424  006142  C19E  F1B5         	movff	?_sin+1,?_cos+1
  5425  006146  C19F  F1B6         	movff	?_sin+2,?_cos+2
  5426  00614A  C1A0  F1B7         	movff	?_sin+3,?_cos+3
  5427  00614E  0012               	return	
  5428  006150                     __end_of_cos:
  5429                           	opt stack 0
  5430                           tblptru	equ	0xFF8
  5431                           tblptrh	equ	0xFF7
  5432                           tblptrl	equ	0xFF6
  5433                           tablat	equ	0xFF5
  5434                           postinc0	equ	0xFEE
  5435                           wreg	equ	0xFE8
  5436                           postdec1	equ	0xFE5
  5437                           fsr1l	equ	0xFE1
  5438                           indf2	equ	0xFDF
  5439                           postinc2	equ	0xFDE
  5440                           postdec2	equ	0xFDD
  5441                           fsr2h	equ	0xFDA
  5442                           fsr2l	equ	0xFD9
  5443                           status	equ	0xFD8
  5444                           
  5445 ;; *************** function _sin *****************
  5446 ;; Defined at:
  5447 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sin.c"
  5448 ;; Parameters:    Size  Location     Type
  5449 ;;  f               4   18[BANK1 ] int 
  5450 ;; Auto vars:     Size  Location     Type
  5451 ;;  x2              4   30[BANK1 ] int 
  5452 ;;  y               4   22[BANK1 ] int 
  5453 ;;  sgn             1   34[BANK1 ] unsigned char 
  5454 ;; Return value:  Size  Location     Type
  5455 ;;                  4   18[BANK1 ] unsigned char 
  5456 ;; Registers used:
  5457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5458 ;; Tracked objects:
  5459 ;;		On entry : 0/0
  5460 ;;		On exit  : 0/0
  5461 ;;		Unchanged: 0/0
  5462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5463 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5464 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  5465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5466 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  5467 ;;Total ram usage:       17 bytes
  5468 ;; Hardware stack levels used:    1
  5469 ;; Hardware stack levels required when called:    6
  5470 ;; This function calls:
  5471 ;;		___fladd
  5472 ;;		___fldiv
  5473 ;;		___flge
  5474 ;;		___flmul
  5475 ;;		___flneg
  5476 ;;		___flsub
  5477 ;;		_eval_poly
  5478 ;;		_floor
  5479 ;; This function is called by:
  5480 ;;		_cos
  5481 ;; This function uses a non-reentrant model
  5482 ;;
  5483                           
  5484                           	psect	text10
  5485  004A0C                     __ptext10:
  5486                           	opt stack 0
  5487  004A0C                     _sin:
  5488                           	opt stack 21
  5489                           
  5490                           ;incstack = 0
  5491  004A0C  0E00               	movlw	0
  5492  004A0E  0101               	movlb	1	; () banked
  5493  004A10  6FAD               	movwf	sin@sgn& (0+255),b
  5494                           
  5495                           ; BSR set to: 1
  5496  004A12  0101               	movlb	1	; () banked
  5497  004A14  AFA0               	btfss	(sin@f+3)& (0+255),7,b
  5498  004A16  D015               	goto	l7780
  5499                           
  5500                           ; BSR set to: 1
  5501  004A18  C19D  F0BD         	movff	sin@f,___flneg@f1
  5502  004A1C  C19E  F0BE         	movff	sin@f+1,___flneg@f1+1
  5503  004A20  C19F  F0BF         	movff	sin@f+2,___flneg@f1+2
  5504  004A24  C1A0  F0C0         	movff	sin@f+3,___flneg@f1+3
  5505  004A28  ECFA  F032         	call	___flneg	;wreg free
  5506  004A2C  C0BD  F19D         	movff	?___flneg,sin@f
  5507  004A30  C0BE  F19E         	movff	?___flneg+1,sin@f+1
  5508  004A34  C0BF  F19F         	movff	?___flneg+2,sin@f+2
  5509  004A38  C0C0  F1A0         	movff	?___flneg+3,sin@f+3
  5510  004A3C  0E01               	movlw	1
  5511  004A3E  0101               	movlb	1	; () banked
  5512  004A40  6FAD               	movwf	sin@sgn& (0+255),b
  5513  004A42                     l7780:
  5514                           
  5515                           ; BSR set to: 1
  5516  004A42  C19D  F090         	movff	sin@f,___flmul@b
  5517  004A46  C19E  F091         	movff	sin@f+1,___flmul@b+1
  5518  004A4A  C19F  F092         	movff	sin@f+2,___flmul@b+2
  5519  004A4E  C1A0  F093         	movff	sin@f+3,___flmul@b+3
  5520  004A52  0E83               	movlw	131
  5521  004A54  0100               	movlb	0	; () banked
  5522  004A56  6F94               	movwf	___flmul@a& (0+255),b
  5523  004A58  0EF9               	movlw	249
  5524  004A5A  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5525  004A5C  0E22               	movlw	34
  5526  004A5E  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5527  004A60  0E3E               	movlw	62
  5528  004A62  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5529  004A64  ECD9  F01A         	call	___flmul	;wreg free
  5530  004A68  C090  F19D         	movff	?___flmul,sin@f
  5531  004A6C  C091  F19E         	movff	?___flmul+1,sin@f+1
  5532  004A70  C092  F19F         	movff	?___flmul+2,sin@f+2
  5533  004A74  C093  F1A0         	movff	?___flmul+3,sin@f+3
  5534  004A78  C19D  F195         	movff	sin@f,___flsub@b
  5535  004A7C  C19E  F196         	movff	sin@f+1,___flsub@b+1
  5536  004A80  C19F  F197         	movff	sin@f+2,___flsub@b+2
  5537  004A84  C1A0  F198         	movff	sin@f+3,___flsub@b+3
  5538  004A88  C19D  F18B         	movff	sin@f,floor@x
  5539  004A8C  C19E  F18C         	movff	sin@f+1,floor@x+1
  5540  004A90  C19F  F18D         	movff	sin@f+2,floor@x+2
  5541  004A94  C1A0  F18E         	movff	sin@f+3,floor@x+3
  5542  004A98  EC92  F02E         	call	_floor	;wreg free
  5543  004A9C  C18B  F199         	movff	?_floor,___flsub@a
  5544  004AA0  C18C  F19A         	movff	?_floor+1,___flsub@a+1
  5545  004AA4  C18D  F19B         	movff	?_floor+2,___flsub@a+2
  5546  004AA8  C18E  F19C         	movff	?_floor+3,___flsub@a+3
  5547  004AAC  EC9A  F032         	call	___flsub	;wreg free
  5548  004AB0  C195  F19D         	movff	?___flsub,sin@f
  5549  004AB4  C196  F19E         	movff	?___flsub+1,sin@f+1
  5550  004AB8  C197  F19F         	movff	?___flsub+2,sin@f+2
  5551  004ABC  C198  F1A0         	movff	?___flsub+3,sin@f+3
  5552  004AC0  C19D  F090         	movff	sin@f,___flmul@b
  5553  004AC4  C19E  F091         	movff	sin@f+1,___flmul@b+1
  5554  004AC8  C19F  F092         	movff	sin@f+2,___flmul@b+2
  5555  004ACC  C1A0  F093         	movff	sin@f+3,___flmul@b+3
  5556  004AD0  0E00               	movlw	0
  5557  004AD2  0100               	movlb	0	; () banked
  5558  004AD4  6F94               	movwf	___flmul@a& (0+255),b
  5559  004AD6  0E00               	movlw	0
  5560  004AD8  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5561  004ADA  0E80               	movlw	128
  5562  004ADC  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5563  004ADE  0E40               	movlw	64
  5564  004AE0  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5565  004AE2  ECD9  F01A         	call	___flmul	;wreg free
  5566  004AE6  C090  F19D         	movff	?___flmul,sin@f
  5567  004AEA  C091  F19E         	movff	?___flmul+1,sin@f+1
  5568  004AEE  C092  F19F         	movff	?___flmul+2,sin@f+2
  5569  004AF2  C093  F1A0         	movff	?___flmul+3,sin@f+3
  5570  004AF6  0E00               	movlw	0
  5571  004AF8  0100               	movlb	0	; () banked
  5572  004AFA  6FC5               	movwf	___flge@ff1& (0+255),b
  5573  004AFC  0E00               	movlw	0
  5574  004AFE  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  5575  004B00  0E00               	movlw	0
  5576  004B02  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  5577  004B04  0E40               	movlw	64
  5578  004B06  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  5579  004B08  C19D  F0C9         	movff	sin@f,___flge@ff2
  5580  004B0C  C19E  F0CA         	movff	sin@f+1,___flge@ff2+1
  5581  004B10  C19F  F0CB         	movff	sin@f+2,___flge@ff2+2
  5582  004B14  C1A0  F0CC         	movff	sin@f+3,___flge@ff2+3
  5583  004B18  EC30  F02D         	call	___flge	;wreg free
  5584  004B1C  0100               	movlb	0	; () banked
  5585  004B1E  B0D8               	btfsc	status,0,c
  5586  004B20  D025               	goto	l7792
  5587                           
  5588                           ; BSR set to: 0
  5589  004B22  C19D  F195         	movff	sin@f,___flsub@b
  5590  004B26  C19E  F196         	movff	sin@f+1,___flsub@b+1
  5591  004B2A  C19F  F197         	movff	sin@f+2,___flsub@b+2
  5592  004B2E  C1A0  F198         	movff	sin@f+3,___flsub@b+3
  5593  004B32  0E00               	movlw	0
  5594  004B34  0101               	movlb	1	; () banked
  5595  004B36  6F99               	movwf	___flsub@a& (0+255),b
  5596  004B38  0E00               	movlw	0
  5597  004B3A  6F9A               	movwf	(___flsub@a+1)& (0+255),b
  5598  004B3C  0E00               	movlw	0
  5599  004B3E  6F9B               	movwf	(___flsub@a+2)& (0+255),b
  5600  004B40  0E40               	movlw	64
  5601  004B42  6F9C               	movwf	(___flsub@a+3)& (0+255),b
  5602  004B44  EC9A  F032         	call	___flsub	;wreg free
  5603  004B48  C195  F19D         	movff	?___flsub,sin@f
  5604  004B4C  C196  F19E         	movff	?___flsub+1,sin@f+1
  5605  004B50  C197  F19F         	movff	?___flsub+2,sin@f+2
  5606  004B54  C198  F1A0         	movff	?___flsub+3,sin@f+3
  5607  004B58  0101               	movlb	1	; () banked
  5608  004B5A  51AD               	movf	sin@sgn& (0+255),w,b
  5609  004B5C  0101               	movlb	1	; () banked
  5610  004B5E  A4D8               	btfss	status,2,c
  5611  004B60  D002               	goto	u10340
  5612  004B62  0E01               	movlw	1
  5613  004B64  D001               	goto	u10350
  5614  004B66                     u10340:
  5615  004B66  0E00               	movlw	0
  5616  004B68                     u10350:
  5617  004B68  0101               	movlb	1	; () banked
  5618  004B6A  6FAD               	movwf	sin@sgn& (0+255),b
  5619  004B6C                     l7792:
  5620  004B6C  0E00               	movlw	0
  5621  004B6E  0100               	movlb	0	; () banked
  5622  004B70  6FC5               	movwf	___flge@ff1& (0+255),b
  5623  004B72  0E00               	movlw	0
  5624  004B74  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  5625  004B76  0E80               	movlw	128
  5626  004B78  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  5627  004B7A  0E3F               	movlw	63
  5628  004B7C  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  5629  004B7E  C19D  F0C9         	movff	sin@f,___flge@ff2
  5630  004B82  C19E  F0CA         	movff	sin@f+1,___flge@ff2+1
  5631  004B86  C19F  F0CB         	movff	sin@f+2,___flge@ff2+2
  5632  004B8A  C1A0  F0CC         	movff	sin@f+3,___flge@ff2+3
  5633  004B8E  EC30  F02D         	call	___flge	;wreg free
  5634  004B92  0100               	movlb	0	; () banked
  5635  004B94  B0D8               	btfsc	status,0,c
  5636  004B96  D025               	goto	l7796
  5637                           
  5638                           ; BSR set to: 0
  5639  004B98  C19D  F0BD         	movff	sin@f,___flneg@f1
  5640  004B9C  C19E  F0BE         	movff	sin@f+1,___flneg@f1+1
  5641  004BA0  C19F  F0BF         	movff	sin@f+2,___flneg@f1+2
  5642  004BA4  C1A0  F0C0         	movff	sin@f+3,___flneg@f1+3
  5643  004BA8  ECFA  F032         	call	___flneg	;wreg free
  5644  004BAC  C0BD  F0A9         	movff	?___flneg,___fladd@b
  5645  004BB0  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  5646  004BB4  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  5647  004BB8  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  5648  004BBC  0E00               	movlw	0
  5649  004BBE  0100               	movlb	0	; () banked
  5650  004BC0  6FAD               	movwf	___fladd@a& (0+255),b
  5651  004BC2  0E00               	movlw	0
  5652  004BC4  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5653  004BC6  0E00               	movlw	0
  5654  004BC8  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5655  004BCA  0E40               	movlw	64
  5656  004BCC  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5657  004BCE  EC85  F018         	call	___fladd	;wreg free
  5658  004BD2  C0A9  F19D         	movff	?___fladd,sin@f
  5659  004BD6  C0AA  F19E         	movff	?___fladd+1,sin@f+1
  5660  004BDA  C0AB  F19F         	movff	?___fladd+2,sin@f+2
  5661  004BDE  C0AC  F1A0         	movff	?___fladd+3,sin@f+3
  5662  004BE2                     l7796:
  5663  004BE2  C19D  F090         	movff	sin@f,___flmul@b
  5664  004BE6  C19E  F091         	movff	sin@f+1,___flmul@b+1
  5665  004BEA  C19F  F092         	movff	sin@f+2,___flmul@b+2
  5666  004BEE  C1A0  F093         	movff	sin@f+3,___flmul@b+3
  5667  004BF2  C19D  F094         	movff	sin@f,___flmul@a
  5668  004BF6  C19E  F095         	movff	sin@f+1,___flmul@a+1
  5669  004BFA  C19F  F096         	movff	sin@f+2,___flmul@a+2
  5670  004BFE  C1A0  F097         	movff	sin@f+3,___flmul@a+3
  5671  004C02  ECD9  F01A         	call	___flmul	;wreg free
  5672  004C06  C090  F1A9         	movff	?___flmul,sin@x2
  5673  004C0A  C091  F1AA         	movff	?___flmul+1,sin@x2+1
  5674  004C0E  C092  F1AB         	movff	?___flmul+2,sin@x2+2
  5675  004C12  C093  F1AC         	movff	?___flmul+3,sin@x2+3
  5676  004C16  C1A9  F0BD         	movff	sin@x2,eval_poly@x
  5677  004C1A  C1AA  F0BE         	movff	sin@x2+1,eval_poly@x+1
  5678  004C1E  C1AB  F0BF         	movff	sin@x2+2,eval_poly@x+2
  5679  004C22  C1AC  F0C0         	movff	sin@x2+3,eval_poly@x+3
  5680  004C26  0E41               	movlw	low sin@coeff_b
  5681  004C28  0100               	movlb	0	; () banked
  5682  004C2A  6FC1               	movwf	eval_poly@d& (0+255),b
  5683  004C2C  0E0D               	movlw	high sin@coeff_b
  5684  004C2E  0100               	movlb	0	; () banked
  5685  004C30  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  5686  004C32  0E00               	movlw	0
  5687  004C34  0100               	movlb	0	; () banked
  5688  004C36  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  5689  004C38  0E03               	movlw	3
  5690  004C3A  6FC3               	movwf	eval_poly@n& (0+255),b
  5691  004C3C  EC24  F02F         	call	_eval_poly	;wreg free
  5692  004C40  C0BD  F1A1         	movff	?_eval_poly,sin@y
  5693  004C44  C0BE  F1A2         	movff	?_eval_poly+1,sin@y+1
  5694  004C48  C0BF  F1A3         	movff	?_eval_poly+2,sin@y+2
  5695  004C4C  C0C0  F1A4         	movff	?_eval_poly+3,sin@y+3
  5696  004C50  C1A1  F07B         	movff	sin@y,___fldiv@a
  5697  004C54  C1A2  F07C         	movff	sin@y+1,___fldiv@a+1
  5698  004C58  C1A3  F07D         	movff	sin@y+2,___fldiv@a+2
  5699  004C5C  C1A4  F07E         	movff	sin@y+3,___fldiv@a+3
  5700  004C60  0E00               	movlw	0
  5701  004C62  0100               	movlb	0	; () banked
  5702  004C64  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  5703  004C66  0E04               	movlw	4
  5704  004C68  6FC3               	movwf	eval_poly@n& (0+255),b
  5705  004C6A  0E2D               	movlw	low sin@coeff_a
  5706  004C6C  0100               	movlb	0	; () banked
  5707  004C6E  6FC1               	movwf	eval_poly@d& (0+255),b
  5708  004C70  0E0D               	movlw	high sin@coeff_a
  5709  004C72  0100               	movlb	0	; () banked
  5710  004C74  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  5711  004C76  C1A9  F0BD         	movff	sin@x2,eval_poly@x
  5712  004C7A  C1AA  F0BE         	movff	sin@x2+1,eval_poly@x+1
  5713  004C7E  C1AB  F0BF         	movff	sin@x2+2,eval_poly@x+2
  5714  004C82  C1AC  F0C0         	movff	sin@x2+3,eval_poly@x+3
  5715  004C86  EC24  F02F         	call	_eval_poly	;wreg free
  5716  004C8A  C0BD  F077         	movff	?_eval_poly,___fldiv@b
  5717  004C8E  C0BE  F078         	movff	?_eval_poly+1,___fldiv@b+1
  5718  004C92  C0BF  F079         	movff	?_eval_poly+2,___fldiv@b+2
  5719  004C96  C0C0  F07A         	movff	?_eval_poly+3,___fldiv@b+3
  5720  004C9A  EC57  F021         	call	___fldiv	;wreg free
  5721  004C9E  C077  F1A5         	movff	?___fldiv,_sin$3757
  5722  004CA2  C078  F1A6         	movff	?___fldiv+1,_sin$3757+1
  5723  004CA6  C079  F1A7         	movff	?___fldiv+2,_sin$3757+2
  5724  004CAA  C07A  F1A8         	movff	?___fldiv+3,_sin$3757+3
  5725  004CAE  C19D  F090         	movff	sin@f,___flmul@b
  5726  004CB2  C19E  F091         	movff	sin@f+1,___flmul@b+1
  5727  004CB6  C19F  F092         	movff	sin@f+2,___flmul@b+2
  5728  004CBA  C1A0  F093         	movff	sin@f+3,___flmul@b+3
  5729  004CBE  C1A5  F094         	movff	_sin$3757,___flmul@a
  5730  004CC2  C1A6  F095         	movff	_sin$3757+1,___flmul@a+1
  5731  004CC6  C1A7  F096         	movff	_sin$3757+2,___flmul@a+2
  5732  004CCA  C1A8  F097         	movff	_sin$3757+3,___flmul@a+3
  5733  004CCE  ECD9  F01A         	call	___flmul	;wreg free
  5734  004CD2  C090  F19D         	movff	?___flmul,sin@f
  5735  004CD6  C091  F19E         	movff	?___flmul+1,sin@f+1
  5736  004CDA  C092  F19F         	movff	?___flmul+2,sin@f+2
  5737  004CDE  C093  F1A0         	movff	?___flmul+3,sin@f+3
  5738  004CE2  0101               	movlb	1	; () banked
  5739  004CE4  51AD               	movf	sin@sgn& (0+255),w,b
  5740  004CE6  0101               	movlb	1	; () banked
  5741  004CE8  B4D8               	btfsc	status,2,c
  5742  004CEA  D013               	goto	l1335
  5743                           
  5744                           ; BSR set to: 1
  5745  004CEC  C19D  F0BD         	movff	sin@f,___flneg@f1
  5746  004CF0  C19E  F0BE         	movff	sin@f+1,___flneg@f1+1
  5747  004CF4  C19F  F0BF         	movff	sin@f+2,___flneg@f1+2
  5748  004CF8  C1A0  F0C0         	movff	sin@f+3,___flneg@f1+3
  5749  004CFC  ECFA  F032         	call	___flneg	;wreg free
  5750  004D00  C0BD  F19D         	movff	?___flneg,?_sin
  5751  004D04  C0BE  F19E         	movff	?___flneg+1,?_sin+1
  5752  004D08  C0BF  F19F         	movff	?___flneg+2,?_sin+2
  5753  004D0C  C0C0  F1A0         	movff	?___flneg+3,?_sin+3
  5754  004D10  0012               	return	
  5755  004D12                     l1335:
  5756                           
  5757                           ; BSR set to: 1
  5758  004D12  C19D  F19D         	movff	sin@f,?_sin
  5759  004D16  C19E  F19E         	movff	sin@f+1,?_sin+1
  5760  004D1A  C19F  F19F         	movff	sin@f+2,?_sin+2
  5761  004D1E  C1A0  F1A0         	movff	sin@f+3,?_sin+3
  5762  004D22  0012               	return		;funcret
  5763  004D24                     __end_of_sin:
  5764                           	opt stack 0
  5765                           tblptru	equ	0xFF8
  5766                           tblptrh	equ	0xFF7
  5767                           tblptrl	equ	0xFF6
  5768                           tablat	equ	0xFF5
  5769                           postinc0	equ	0xFEE
  5770                           wreg	equ	0xFE8
  5771                           postdec1	equ	0xFE5
  5772                           fsr1l	equ	0xFE1
  5773                           indf2	equ	0xFDF
  5774                           postinc2	equ	0xFDE
  5775                           postdec2	equ	0xFDD
  5776                           fsr2h	equ	0xFDA
  5777                           fsr2l	equ	0xFD9
  5778                           status	equ	0xFD8
  5779                           
  5780 ;; *************** function _floor *****************
  5781 ;; Defined at:
  5782 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\floor.c"
  5783 ;; Parameters:    Size  Location     Type
  5784 ;;  x               4    0[BANK1 ] unsigned char 
  5785 ;; Auto vars:     Size  Location     Type
  5786 ;;  i               4    4[BANK1 ] unsigned char 
  5787 ;;  expon           2    8[BANK1 ] int 
  5788 ;; Return value:  Size  Location     Type
  5789 ;;                  4    0[BANK1 ] int 
  5790 ;; Registers used:
  5791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5792 ;; Tracked objects:
  5793 ;;		On entry : 0/0
  5794 ;;		On exit  : 0/0
  5795 ;;		Unchanged: 0/0
  5796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5797 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5798 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5800 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  5801 ;;Total ram usage:       10 bytes
  5802 ;; Hardware stack levels used:    1
  5803 ;; Hardware stack levels required when called:    5
  5804 ;; This function calls:
  5805 ;;		___fladd
  5806 ;;		___flge
  5807 ;;		___fltol
  5808 ;;		___xxtofl
  5809 ;;		_frexp
  5810 ;; This function is called by:
  5811 ;;		_sin
  5812 ;; This function uses a non-reentrant model
  5813 ;;
  5814                           
  5815                           	psect	text11
  5816  005D24                     __ptext11:
  5817                           	opt stack 0
  5818  005D24                     _floor:
  5819                           	opt stack 21
  5820                           
  5821                           ;incstack = 0
  5822  005D24  C18B  F077         	movff	floor@x,frexp@value
  5823  005D28  C18C  F078         	movff	floor@x+1,frexp@value+1
  5824  005D2C  C18D  F079         	movff	floor@x+2,frexp@value+2
  5825  005D30  C18E  F07A         	movff	floor@x+3,frexp@value+3
  5826  005D34  0E93               	movlw	low floor@expon
  5827  005D36  0100               	movlb	0	; () banked
  5828  005D38  6F7B               	movwf	frexp@eptr& (0+255),b
  5829  005D3A  0E01               	movlw	high floor@expon
  5830  005D3C  0100               	movlb	0	; () banked
  5831  005D3E  6F7C               	movwf	(frexp@eptr+1)& (0+255),b
  5832  005D40  EC7C  F031         	call	_frexp	;wreg free
  5833  005D44  0101               	movlb	1	; () banked
  5834  005D46  AF94               	btfss	(floor@expon+1)& (0+255),7,b
  5835  005D48  D017               	goto	l7386
  5836                           
  5837                           ; BSR set to: 1
  5838  005D4A  0101               	movlb	1	; () banked
  5839  005D4C  AF8E               	btfss	(floor@x+3)& (0+255),7,b
  5840  005D4E  D00A               	goto	l7382
  5841                           
  5842                           ; BSR set to: 1
  5843  005D50  0E00               	movlw	0
  5844  005D52  0101               	movlb	1	; () banked
  5845  005D54  6F8B               	movwf	?_floor& (0+255),b
  5846  005D56  0E00               	movlw	0
  5847  005D58  6F8C               	movwf	(?_floor+1)& (0+255),b
  5848  005D5A  0E80               	movlw	128
  5849  005D5C  6F8D               	movwf	(?_floor+2)& (0+255),b
  5850  005D5E  0EBF               	movlw	191
  5851  005D60  6F8E               	movwf	(?_floor+3)& (0+255),b
  5852                           
  5853                           ; BSR set to: 1
  5854  005D62  0012               	return	
  5855  005D64                     l7382:
  5856                           
  5857                           ; BSR set to: 1
  5858  005D64  0E00               	movlw	0
  5859  005D66  0101               	movlb	1	; () banked
  5860  005D68  6F8B               	movwf	?_floor& (0+255),b
  5861  005D6A  0E00               	movlw	0
  5862  005D6C  6F8C               	movwf	(?_floor+1)& (0+255),b
  5863  005D6E  0E00               	movlw	0
  5864  005D70  6F8D               	movwf	(?_floor+2)& (0+255),b
  5865  005D72  0E00               	movlw	0
  5866  005D74  6F8E               	movwf	(?_floor+3)& (0+255),b
  5867                           
  5868                           ; BSR set to: 1
  5869  005D76  0012               	return	
  5870  005D78                     l7386:
  5871                           
  5872                           ; BSR set to: 1
  5873  005D78  0101               	movlb	1	; () banked
  5874  005D7A  5194               	movf	(floor@expon+1)& (0+255),w,b
  5875  005D7C  E105               	bnz	u9710
  5876  005D7E  0E1D               	movlw	29
  5877  005D80  0101               	movlb	1	; () banked
  5878  005D82  5D93               	subwf	floor@expon& (0+255),w,b
  5879  005D84  A0D8               	btfss	status,0,c
  5880  005D86  D009               	goto	l7390
  5881  005D88                     u9710:
  5882                           
  5883                           ; BSR set to: 1
  5884  005D88  C18B  F18B         	movff	floor@x,?_floor
  5885  005D8C  C18C  F18C         	movff	floor@x+1,?_floor+1
  5886  005D90  C18D  F18D         	movff	floor@x+2,?_floor+2
  5887  005D94  C18E  F18E         	movff	floor@x+3,?_floor+3
  5888  005D98  0012               	return	
  5889  005D9A                     l7390:
  5890                           
  5891                           ; BSR set to: 1
  5892  005D9A  C18B  F0C1         	movff	floor@x,___fltol@f1
  5893  005D9E  C18C  F0C2         	movff	floor@x+1,___fltol@f1+1
  5894  005DA2  C18D  F0C3         	movff	floor@x+2,___fltol@f1+2
  5895  005DA6  C18E  F0C4         	movff	floor@x+3,___fltol@f1+3
  5896  005DAA  ECB0  F02F         	call	___fltol	;wreg free
  5897  005DAE  C0C1  F0CB         	movff	?___fltol,___xxtofl@val
  5898  005DB2  C0C2  F0CC         	movff	?___fltol+1,___xxtofl@val+1
  5899  005DB6  C0C3  F0CD         	movff	?___fltol+2,___xxtofl@val+2
  5900  005DBA  C0C4  F0CE         	movff	?___fltol+3,___xxtofl@val+3
  5901  005DBE  0E01               	movlw	1
  5902  005DC0  EC86  F02A         	call	___xxtofl
  5903  005DC4  C0CB  F18F         	movff	?___xxtofl,floor@i
  5904  005DC8  C0CC  F190         	movff	?___xxtofl+1,floor@i+1
  5905  005DCC  C0CD  F191         	movff	?___xxtofl+2,floor@i+2
  5906  005DD0  C0CE  F192         	movff	?___xxtofl+3,floor@i+3
  5907  005DD4  C18B  F0C5         	movff	floor@x,___flge@ff1
  5908  005DD8  C18C  F0C6         	movff	floor@x+1,___flge@ff1+1
  5909  005DDC  C18D  F0C7         	movff	floor@x+2,___flge@ff1+2
  5910  005DE0  C18E  F0C8         	movff	floor@x+3,___flge@ff1+3
  5911  005DE4  C18F  F0C9         	movff	floor@i,___flge@ff2
  5912  005DE8  C190  F0CA         	movff	floor@i+1,___flge@ff2+1
  5913  005DEC  C191  F0CB         	movff	floor@i+2,___flge@ff2+2
  5914  005DF0  C192  F0CC         	movff	floor@i+3,___flge@ff2+3
  5915  005DF4  EC30  F02D         	call	___flge	;wreg free
  5916  005DF8  0100               	movlb	0	; () banked
  5917  005DFA  B0D8               	btfsc	status,0,c
  5918  005DFC  D01C               	goto	l1504
  5919                           
  5920                           ; BSR set to: 0
  5921  005DFE  C18F  F0A9         	movff	floor@i,___fladd@b
  5922  005E02  C190  F0AA         	movff	floor@i+1,___fladd@b+1
  5923  005E06  C191  F0AB         	movff	floor@i+2,___fladd@b+2
  5924  005E0A  C192  F0AC         	movff	floor@i+3,___fladd@b+3
  5925  005E0E  0E00               	movlw	0
  5926  005E10  0100               	movlb	0	; () banked
  5927  005E12  6FAD               	movwf	___fladd@a& (0+255),b
  5928  005E14  0E00               	movlw	0
  5929  005E16  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5930  005E18  0E80               	movlw	128
  5931  005E1A  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5932  005E1C  0EBF               	movlw	191
  5933  005E1E  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5934  005E20  EC85  F018         	call	___fladd	;wreg free
  5935  005E24  C0A9  F18B         	movff	?___fladd,?_floor
  5936  005E28  C0AA  F18C         	movff	?___fladd+1,?_floor+1
  5937  005E2C  C0AB  F18D         	movff	?___fladd+2,?_floor+2
  5938  005E30  C0AC  F18E         	movff	?___fladd+3,?_floor+3
  5939  005E34  0012               	return	
  5940  005E36                     l1504:
  5941                           
  5942                           ; BSR set to: 0
  5943  005E36  C18F  F18B         	movff	floor@i,?_floor
  5944  005E3A  C190  F18C         	movff	floor@i+1,?_floor+1
  5945  005E3E  C191  F18D         	movff	floor@i+2,?_floor+2
  5946  005E42  C192  F18E         	movff	floor@i+3,?_floor+3
  5947  005E46  0012               	return		;funcret
  5948  005E48                     __end_of_floor:
  5949                           	opt stack 0
  5950                           tblptru	equ	0xFF8
  5951                           tblptrh	equ	0xFF7
  5952                           tblptrl	equ	0xFF6
  5953                           tablat	equ	0xFF5
  5954                           postinc0	equ	0xFEE
  5955                           wreg	equ	0xFE8
  5956                           postdec1	equ	0xFE5
  5957                           fsr1l	equ	0xFE1
  5958                           indf2	equ	0xFDF
  5959                           postinc2	equ	0xFDE
  5960                           postdec2	equ	0xFDD
  5961                           fsr2h	equ	0xFDA
  5962                           fsr2l	equ	0xFD9
  5963                           status	equ	0xFD8
  5964                           
  5965 ;; *************** function _frexp *****************
  5966 ;; Defined at:
  5967 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\frexp.c"
  5968 ;; Parameters:    Size  Location     Type
  5969 ;;  value           4   23[BANK0 ] int 
  5970 ;;  eptr            2   27[BANK0 ] PTR int 
  5971 ;;		 -> floor@expon(2), 
  5972 ;; Auto vars:     Size  Location     Type
  5973 ;;		None
  5974 ;; Return value:  Size  Location     Type
  5975 ;;                  4   23[BANK0 ] PTR int 
  5976 ;; Registers used:
  5977 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5978 ;; Tracked objects:
  5979 ;;		On entry : 0/0
  5980 ;;		On exit  : 0/0
  5981 ;;		Unchanged: 0/0
  5982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5983 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5985 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5986 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5987 ;;Total ram usage:        8 bytes
  5988 ;; Hardware stack levels used:    1
  5989 ;; Hardware stack levels required when called:    4
  5990 ;; This function calls:
  5991 ;;		Nothing
  5992 ;; This function is called by:
  5993 ;;		_floor
  5994 ;; This function uses a non-reentrant model
  5995 ;;
  5996                           
  5997                           	psect	text12
  5998  0062F8                     __ptext12:
  5999                           	opt stack 0
  6000  0062F8                     _frexp:
  6001                           	opt stack 21
  6002                           
  6003                           ;incstack = 0
  6004  0062F8  0100               	movlb	0	; () banked
  6005  0062FA  5177               	movf	frexp@value& (0+255),w,b
  6006  0062FC  0100               	movlb	0	; () banked
  6007  0062FE  1178               	iorwf	(frexp@value+1)& (0+255),w,b
  6008  006300  0100               	movlb	0	; () banked
  6009  006302  1179               	iorwf	(frexp@value+2)& (0+255),w,b
  6010  006304  0100               	movlb	0	; () banked
  6011  006306  117A               	iorwf	(frexp@value+3)& (0+255),w,b
  6012  006308  A4D8               	btfss	status,2,c
  6013  00630A  D009               	goto	l7208
  6014                           
  6015                           ; BSR set to: 0
  6016  00630C  C07B  FFD9         	movff	frexp@eptr,fsr2l
  6017  006310  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  6018  006314  0E00               	movlw	0
  6019  006316  6EDE               	movwf	postinc2,c
  6020  006318  0E00               	movlw	0
  6021  00631A  6EDD               	movwf	postdec2,c
  6022                           
  6023                           ; BSR set to: 0
  6024                           ;	Return value of _frexp is never used
  6025  00631C  0012               	return	
  6026  00631E                     l7208:
  6027                           
  6028                           ; BSR set to: 0
  6029  00631E  0100               	movlb	0	; () banked
  6030  006320  517A               	movf	(frexp@value+3)& (0+255),w,b
  6031  006322  0B7F               	andlw	127
  6032  006324  0100               	movlb	0	; () banked
  6033  006326  6F7D               	movwf	??_frexp& (0+255),b
  6034  006328  6B7E               	clrf	(??_frexp+1)& (0+255),b
  6035  00632A  90D8               	bcf	status,0,c
  6036  00632C  0100               	movlb	0	; () banked
  6037  00632E  377D               	rlcf	??_frexp& (0+255),f,b
  6038  006330  377E               	rlcf	(??_frexp+1)& (0+255),f,b
  6039  006332  C07B  FFD9         	movff	frexp@eptr,fsr2l
  6040  006336  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  6041  00633A  C07D  FFDE         	movff	??_frexp,postinc2
  6042  00633E  C07E  FFDD         	movff	??_frexp+1,postdec2
  6043  006342  0100               	movlb	0	; () banked
  6044  006344  AF79               	btfss	(frexp@value+2)& (0+255),7,b
  6045  006346  D004               	goto	u9430
  6046  006348  0100               	movlb	0	; () banked
  6047  00634A  6B7D               	clrf	??_frexp& (0+255),b
  6048  00634C  2B7D               	incf	??_frexp& (0+255),f,b
  6049  00634E  D002               	goto	u9438
  6050  006350                     u9430:
  6051  006350  0100               	movlb	0	; () banked
  6052  006352  6B7D               	clrf	??_frexp& (0+255),b
  6053  006354                     u9438:
  6054  006354  0100               	movlb	0	; () banked
  6055  006356  517D               	movf	??_frexp& (0+255),w,b
  6056  006358  C07B  FFD9         	movff	frexp@eptr,fsr2l
  6057  00635C  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  6058  006360  12DE               	iorwf	postinc2,f,c
  6059  006362  0E00               	movlw	0
  6060  006364  12DD               	iorwf	postdec2,f,c
  6061                           
  6062                           ; BSR set to: 0
  6063  006366  C07B  FFD9         	movff	frexp@eptr,fsr2l
  6064  00636A  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  6065  00636E  0E82               	movlw	130
  6066  006370  26DE               	addwf	postinc2,f,c
  6067  006372  0EFF               	movlw	255
  6068  006374  22DD               	addwfc	postdec2,f,c
  6069                           
  6070                           ; BSR set to: 0
  6071  006376  0100               	movlb	0	; () banked
  6072  006378  817A               	bsf	(frexp@value+3)& (0+255),0,b
  6073  00637A  837A               	bsf	(frexp@value+3)& (0+255),1,b
  6074  00637C  857A               	bsf	(frexp@value+3)& (0+255),2,b
  6075  00637E  877A               	bsf	(frexp@value+3)& (0+255),3,b
  6076  006380  897A               	bsf	(frexp@value+3)& (0+255),4,b
  6077  006382  8B7A               	bsf	(frexp@value+3)& (0+255),5,b
  6078  006384  9D7A               	bcf	(frexp@value+3)& (0+255),6,b
  6079                           
  6080                           ; BSR set to: 0
  6081  006386  0100               	movlb	0	; () banked
  6082  006388  9F79               	bcf	(frexp@value+2)& (0+255),7,b
  6083  00638A  0012               	return	
  6084  00638C                     __end_of_frexp:
  6085                           	opt stack 0
  6086                           tblptru	equ	0xFF8
  6087                           tblptrh	equ	0xFF7
  6088                           tblptrl	equ	0xFF6
  6089                           tablat	equ	0xFF5
  6090                           postinc0	equ	0xFEE
  6091                           wreg	equ	0xFE8
  6092                           postdec1	equ	0xFE5
  6093                           fsr1l	equ	0xFE1
  6094                           indf2	equ	0xFDF
  6095                           postinc2	equ	0xFDE
  6096                           postdec2	equ	0xFDD
  6097                           fsr2h	equ	0xFDA
  6098                           fsr2l	equ	0xFD9
  6099                           status	equ	0xFD8
  6100                           
  6101 ;; *************** function ___xxtofl *****************
  6102 ;; Defined at:
  6103 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  6104 ;; Parameters:    Size  Location     Type
  6105 ;;  sign            1    wreg     unsigned char 
  6106 ;;  val             4  107[BANK0 ] long 
  6107 ;; Auto vars:     Size  Location     Type
  6108 ;;  sign            1  115[BANK0 ] unsigned char 
  6109 ;;  arg             4  117[BANK0 ] unsigned long 
  6110 ;;  exp             1  116[BANK0 ] unsigned char 
  6111 ;; Return value:  Size  Location     Type
  6112 ;;                  4  107[BANK0 ] unsigned char 
  6113 ;; Registers used:
  6114 ;;		wreg, status,2, status,0
  6115 ;; Tracked objects:
  6116 ;;		On entry : 0/0
  6117 ;;		On exit  : 0/0
  6118 ;;		Unchanged: 0/0
  6119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6120 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6121 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6122 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6123 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6124 ;;Total ram usage:       14 bytes
  6125 ;; Hardware stack levels used:    1
  6126 ;; Hardware stack levels required when called:    4
  6127 ;; This function calls:
  6128 ;;		Nothing
  6129 ;; This function is called by:
  6130 ;;		_park_search
  6131 ;;		_park_routine
  6132 ;;		_parallelo
  6133 ;;		_floor
  6134 ;; This function uses a non-reentrant model
  6135 ;;
  6136                           
  6137                           	psect	text13
  6138  00550C                     __ptext13:
  6139                           	opt stack 0
  6140  00550C                     ___xxtofl:
  6141                           	opt stack 24
  6142                           
  6143                           ; BSR set to: 0
  6144                           ;incstack = 0
  6145                           ;___xxtofl@sign stored from wreg
  6146  00550C  0100               	movlb	0	; () banked
  6147  00550E  6FD3               	movwf	___xxtofl@sign& (0+255),b
  6148  005510  0100               	movlb	0	; () banked
  6149  005512  51D3               	movf	___xxtofl@sign& (0+255),w,b
  6150  005514  0100               	movlb	0	; () banked
  6151  005516  B4D8               	btfsc	status,2,c
  6152  005518  D01E               	goto	l1479
  6153                           
  6154                           ; BSR set to: 0
  6155  00551A  0100               	movlb	0	; () banked
  6156  00551C  AFCE               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6157  00551E  D01B               	goto	l1479
  6158                           
  6159                           ; BSR set to: 0
  6160  005520  C0CB  F0CF         	movff	___xxtofl@val,??___xxtofl
  6161  005524  C0CC  F0D0         	movff	___xxtofl@val+1,??___xxtofl+1
  6162  005528  C0CD  F0D1         	movff	___xxtofl@val+2,??___xxtofl+2
  6163  00552C  C0CE  F0D2         	movff	___xxtofl@val+3,??___xxtofl+3
  6164  005530  0100               	movlb	0	; () banked
  6165  005532  1FCF               	comf	??___xxtofl& (0+255),f,b
  6166  005534  1FD0               	comf	(??___xxtofl+1)& (0+255),f,b
  6167  005536  1FD1               	comf	(??___xxtofl+2)& (0+255),f,b
  6168  005538  1FD2               	comf	(??___xxtofl+3)& (0+255),f,b
  6169  00553A  2BCF               	incf	??___xxtofl& (0+255),f,b
  6170  00553C  0E00               	movlw	0
  6171  00553E  23D0               	addwfc	(??___xxtofl+1)& (0+255),f,b
  6172  005540  23D1               	addwfc	(??___xxtofl+2)& (0+255),f,b
  6173  005542  23D2               	addwfc	(??___xxtofl+3)& (0+255),f,b
  6174  005544  C0CF  F0D5         	movff	??___xxtofl,___xxtofl@arg
  6175  005548  C0D0  F0D6         	movff	??___xxtofl+1,___xxtofl@arg+1
  6176  00554C  C0D1  F0D7         	movff	??___xxtofl+2,___xxtofl@arg+2
  6177  005550  C0D2  F0D8         	movff	??___xxtofl+3,___xxtofl@arg+3
  6178  005554  D008               	goto	l7166
  6179  005556                     l1479:
  6180                           
  6181                           ; BSR set to: 0
  6182  005556  C0CB  F0D5         	movff	___xxtofl@val,___xxtofl@arg
  6183  00555A  C0CC  F0D6         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6184  00555E  C0CD  F0D7         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6185  005562  C0CE  F0D8         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6186  005566                     l7166:
  6187                           
  6188                           ; BSR set to: 0
  6189  005566  0100               	movlb	0	; () banked
  6190  005568  51CB               	movf	___xxtofl@val& (0+255),w,b
  6191  00556A  0100               	movlb	0	; () banked
  6192  00556C  11CC               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  6193  00556E  0100               	movlb	0	; () banked
  6194  005570  11CD               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  6195  005572  0100               	movlb	0	; () banked
  6196  005574  11CE               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  6197  005576  A4D8               	btfss	status,2,c
  6198  005578  D00A               	goto	l7172
  6199                           
  6200                           ; BSR set to: 0
  6201  00557A  0E00               	movlw	0
  6202  00557C  0100               	movlb	0	; () banked
  6203  00557E  6FCB               	movwf	?___xxtofl& (0+255),b
  6204  005580  0E00               	movlw	0
  6205  005582  6FCC               	movwf	(?___xxtofl+1)& (0+255),b
  6206  005584  0E00               	movlw	0
  6207  005586  6FCD               	movwf	(?___xxtofl+2)& (0+255),b
  6208  005588  0E00               	movlw	0
  6209  00558A  6FCE               	movwf	(?___xxtofl+3)& (0+255),b
  6210                           
  6211                           ; BSR set to: 0
  6212  00558C  0012               	return	
  6213  00558E                     l7172:
  6214                           
  6215                           ; BSR set to: 0
  6216  00558E  0E96               	movlw	150
  6217  005590  0100               	movlb	0	; () banked
  6218  005592  6FD4               	movwf	___xxtofl@exp& (0+255),b
  6219  005594  D008               	goto	l7176
  6220  005596                     l7174:
  6221                           
  6222                           ; BSR set to: 0
  6223  005596  0100               	movlb	0	; () banked
  6224  005598  2BD4               	incf	___xxtofl@exp& (0+255),f,b
  6225  00559A  0100               	movlb	0	; () banked
  6226  00559C  90D8               	bcf	status,0,c
  6227  00559E  33D8               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6228  0055A0  33D7               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6229  0055A2  33D6               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6230  0055A4  33D5               	rrcf	___xxtofl@arg& (0+255),f,b
  6231  0055A6                     l7176:
  6232                           
  6233                           ; BSR set to: 0
  6234  0055A6  0E00               	movlw	0
  6235  0055A8  0100               	movlb	0	; () banked
  6236  0055AA  15D5               	andwf	___xxtofl@arg& (0+255),w,b
  6237  0055AC  0100               	movlb	0	; () banked
  6238  0055AE  6FCF               	movwf	??___xxtofl& (0+255),b
  6239  0055B0  0E00               	movlw	0
  6240  0055B2  0100               	movlb	0	; () banked
  6241  0055B4  15D6               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6242  0055B6  0100               	movlb	0	; () banked
  6243  0055B8  6FD0               	movwf	(??___xxtofl+1)& (0+255),b
  6244  0055BA  0E00               	movlw	0
  6245  0055BC  0100               	movlb	0	; () banked
  6246  0055BE  15D7               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6247  0055C0  0100               	movlb	0	; () banked
  6248  0055C2  6FD1               	movwf	(??___xxtofl+2)& (0+255),b
  6249  0055C4  0EFE               	movlw	254
  6250  0055C6  0100               	movlb	0	; () banked
  6251  0055C8  15D8               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6252  0055CA  0100               	movlb	0	; () banked
  6253  0055CC  6FD2               	movwf	(??___xxtofl+3)& (0+255),b
  6254  0055CE  0100               	movlb	0	; () banked
  6255  0055D0  51CF               	movf	??___xxtofl& (0+255),w,b
  6256  0055D2  0100               	movlb	0	; () banked
  6257  0055D4  11D0               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6258  0055D6  0100               	movlb	0	; () banked
  6259  0055D8  11D1               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6260  0055DA  0100               	movlb	0	; () banked
  6261  0055DC  11D2               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6262  0055DE  B4D8               	btfsc	status,2,c
  6263  0055E0  D010               	goto	l1486
  6264  0055E2  D7D9               	goto	l7174
  6265  0055E4                     l7178:
  6266                           
  6267                           ; BSR set to: 0
  6268  0055E4  0100               	movlb	0	; () banked
  6269  0055E6  2BD4               	incf	___xxtofl@exp& (0+255),f,b
  6270                           
  6271                           ; BSR set to: 0
  6272  0055E8  0E01               	movlw	1
  6273  0055EA  0100               	movlb	0	; () banked
  6274  0055EC  27D5               	addwf	___xxtofl@arg& (0+255),f,b
  6275  0055EE  0E00               	movlw	0
  6276  0055F0  23D6               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  6277  0055F2  23D7               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  6278  0055F4  23D8               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  6279                           
  6280                           ; BSR set to: 0
  6281  0055F6  0100               	movlb	0	; () banked
  6282  0055F8  90D8               	bcf	status,0,c
  6283  0055FA  33D8               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6284  0055FC  33D7               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6285  0055FE  33D6               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6286  005600  33D5               	rrcf	___xxtofl@arg& (0+255),f,b
  6287  005602                     l1486:
  6288                           
  6289                           ; BSR set to: 0
  6290  005602  0E00               	movlw	0
  6291  005604  0100               	movlb	0	; () banked
  6292  005606  15D5               	andwf	___xxtofl@arg& (0+255),w,b
  6293  005608  0100               	movlb	0	; () banked
  6294  00560A  6FCF               	movwf	??___xxtofl& (0+255),b
  6295  00560C  0E00               	movlw	0
  6296  00560E  0100               	movlb	0	; () banked
  6297  005610  15D6               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6298  005612  0100               	movlb	0	; () banked
  6299  005614  6FD0               	movwf	(??___xxtofl+1)& (0+255),b
  6300  005616  0E00               	movlw	0
  6301  005618  0100               	movlb	0	; () banked
  6302  00561A  15D7               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6303  00561C  0100               	movlb	0	; () banked
  6304  00561E  6FD1               	movwf	(??___xxtofl+2)& (0+255),b
  6305  005620  0EFF               	movlw	255
  6306  005622  0100               	movlb	0	; () banked
  6307  005624  15D8               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6308  005626  0100               	movlb	0	; () banked
  6309  005628  6FD2               	movwf	(??___xxtofl+3)& (0+255),b
  6310  00562A  0100               	movlb	0	; () banked
  6311  00562C  51CF               	movf	??___xxtofl& (0+255),w,b
  6312  00562E  0100               	movlb	0	; () banked
  6313  005630  11D0               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6314  005632  0100               	movlb	0	; () banked
  6315  005634  11D1               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6316  005636  0100               	movlb	0	; () banked
  6317  005638  11D2               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6318  00563A  B4D8               	btfsc	status,2,c
  6319  00563C  D009               	goto	l7186
  6320  00563E  D7D2               	goto	l7178
  6321  005640                     l7184:
  6322                           
  6323                           ; BSR set to: 0
  6324  005640  0100               	movlb	0	; () banked
  6325  005642  07D4               	decf	___xxtofl@exp& (0+255),f,b
  6326  005644  0100               	movlb	0	; () banked
  6327  005646  90D8               	bcf	status,0,c
  6328  005648  37D5               	rlcf	___xxtofl@arg& (0+255),f,b
  6329  00564A  37D6               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  6330  00564C  37D7               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  6331  00564E  37D8               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  6332  005650                     l7186:
  6333                           
  6334                           ; BSR set to: 0
  6335  005650  0100               	movlb	0	; () banked
  6336  005652  BFD7               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  6337  005654  D004               	goto	l1493
  6338                           
  6339                           ; BSR set to: 0
  6340  005656  0E02               	movlw	2
  6341  005658  0100               	movlb	0	; () banked
  6342  00565A  61D4               	cpfslt	___xxtofl@exp& (0+255),b
  6343  00565C  D7F1               	goto	l7184
  6344  00565E                     l1493:
  6345                           
  6346                           ; BSR set to: 0
  6347  00565E  0100               	movlb	0	; () banked
  6348  005660  B1D4               	btfsc	___xxtofl@exp& (0+255),0,b
  6349  005662  D009               	goto	l1494
  6350                           
  6351                           ; BSR set to: 0
  6352  005664  0EFF               	movlw	255
  6353  005666  0100               	movlb	0	; () banked
  6354  005668  17D5               	andwf	___xxtofl@arg& (0+255),f,b
  6355  00566A  0EFF               	movlw	255
  6356  00566C  17D6               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  6357  00566E  0E7F               	movlw	127
  6358  005670  17D7               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  6359  005672  0EFF               	movlw	255
  6360  005674  17D8               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  6361  005676                     l1494:
  6362                           
  6363                           ; BSR set to: 0
  6364  005676  0100               	movlb	0	; () banked
  6365  005678  90D8               	bcf	status,0,c
  6366  00567A  33D4               	rrcf	___xxtofl@exp& (0+255),f,b
  6367  00567C  C0D4  F0CF         	movff	___xxtofl@exp,??___xxtofl
  6368  005680  0100               	movlb	0	; () banked
  6369  005682  6BD0               	clrf	(??___xxtofl+1)& (0+255),b
  6370  005684  6BD1               	clrf	(??___xxtofl+2)& (0+255),b
  6371  005686  6BD2               	clrf	(??___xxtofl+3)& (0+255),b
  6372  005688  C0CF  F0D2         	movff	??___xxtofl,??___xxtofl+3
  6373  00568C  0100               	movlb	0	; () banked
  6374  00568E  6BD1               	clrf	(??___xxtofl+2)& (0+255),b
  6375  005690  6BD0               	clrf	(??___xxtofl+1)& (0+255),b
  6376  005692  6BCF               	clrf	??___xxtofl& (0+255),b
  6377  005694  0100               	movlb	0	; () banked
  6378  005696  51CF               	movf	??___xxtofl& (0+255),w,b
  6379  005698  0100               	movlb	0	; () banked
  6380  00569A  13D5               	iorwf	___xxtofl@arg& (0+255),f,b
  6381  00569C  0100               	movlb	0	; () banked
  6382  00569E  51D0               	movf	(??___xxtofl+1)& (0+255),w,b
  6383  0056A0  0100               	movlb	0	; () banked
  6384  0056A2  13D6               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  6385  0056A4  0100               	movlb	0	; () banked
  6386  0056A6  51D1               	movf	(??___xxtofl+2)& (0+255),w,b
  6387  0056A8  0100               	movlb	0	; () banked
  6388  0056AA  13D7               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  6389  0056AC  0100               	movlb	0	; () banked
  6390  0056AE  51D2               	movf	(??___xxtofl+3)& (0+255),w,b
  6391  0056B0  0100               	movlb	0	; () banked
  6392  0056B2  13D8               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  6393                           
  6394                           ; BSR set to: 0
  6395  0056B4  0100               	movlb	0	; () banked
  6396  0056B6  51D3               	movf	___xxtofl@sign& (0+255),w,b
  6397  0056B8  0100               	movlb	0	; () banked
  6398  0056BA  B4D8               	btfsc	status,2,c
  6399  0056BC  D005               	goto	l7198
  6400                           
  6401                           ; BSR set to: 0
  6402  0056BE  0100               	movlb	0	; () banked
  6403  0056C0  AFCE               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6404  0056C2  D002               	goto	l7198
  6405                           
  6406                           ; BSR set to: 0
  6407  0056C4  0100               	movlb	0	; () banked
  6408  0056C6  8FD8               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  6409  0056C8                     l7198:
  6410                           
  6411                           ; BSR set to: 0
  6412  0056C8  C0D5  F0CB         	movff	___xxtofl@arg,?___xxtofl
  6413  0056CC  C0D6  F0CC         	movff	___xxtofl@arg+1,?___xxtofl+1
  6414  0056D0  C0D7  F0CD         	movff	___xxtofl@arg+2,?___xxtofl+2
  6415  0056D4  C0D8  F0CE         	movff	___xxtofl@arg+3,?___xxtofl+3
  6416  0056D8  0012               	return	
  6417  0056DA                     __end_of___xxtofl:
  6418                           	opt stack 0
  6419                           tblptru	equ	0xFF8
  6420                           tblptrh	equ	0xFF7
  6421                           tblptrl	equ	0xFF6
  6422                           tablat	equ	0xFF5
  6423                           postinc0	equ	0xFEE
  6424                           wreg	equ	0xFE8
  6425                           postdec1	equ	0xFE5
  6426                           fsr1l	equ	0xFE1
  6427                           indf2	equ	0xFDF
  6428                           postinc2	equ	0xFDE
  6429                           postdec2	equ	0xFDD
  6430                           fsr2h	equ	0xFDA
  6431                           fsr2l	equ	0xFD9
  6432                           status	equ	0xFD8
  6433                           
  6434 ;; *************** function ___fltol *****************
  6435 ;; Defined at:
  6436 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  6437 ;; Parameters:    Size  Location     Type
  6438 ;;  f1              4   97[BANK0 ] unsigned char 
  6439 ;; Auto vars:     Size  Location     Type
  6440 ;;  exp1            1  106[BANK0 ] unsigned char 
  6441 ;;  sign1           1  105[BANK0 ] unsigned char 
  6442 ;; Return value:  Size  Location     Type
  6443 ;;                  4   97[BANK0 ] long 
  6444 ;; Registers used:
  6445 ;;		wreg, status,2, status,0
  6446 ;; Tracked objects:
  6447 ;;		On entry : 0/0
  6448 ;;		On exit  : 0/0
  6449 ;;		Unchanged: 0/0
  6450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6451 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6452 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6453 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6454 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6455 ;;Total ram usage:       10 bytes
  6456 ;; Hardware stack levels used:    1
  6457 ;; Hardware stack levels required when called:    4
  6458 ;; This function calls:
  6459 ;;		Nothing
  6460 ;; This function is called by:
  6461 ;;		_park_routine
  6462 ;;		_parallelo
  6463 ;;		_floor
  6464 ;; This function uses a non-reentrant model
  6465 ;;
  6466                           
  6467                           	psect	text14
  6468  005F60                     __ptext14:
  6469                           	opt stack 0
  6470  005F60                     ___fltol:
  6471                           	opt stack 24
  6472                           
  6473                           ; BSR set to: 0
  6474                           ;incstack = 0
  6475  005F60  0100               	movlb	0	; () banked
  6476  005F62  35C3               	rlcf	(___fltol@f1+2)& (0+255),w,b
  6477  005F64  35C4               	rlcf	(___fltol@f1+3)& (0+255),w,b
  6478  005F66  0100               	movlb	0	; () banked
  6479  005F68  6FCA               	movwf	___fltol@exp1& (0+255),b
  6480  005F6A  0100               	movlb	0	; () banked
  6481  005F6C  51CA               	movf	___fltol@exp1& (0+255),w,b
  6482  005F6E  A4D8               	btfss	status,2,c
  6483  005F70  D00A               	goto	l7122
  6484                           
  6485                           ; BSR set to: 0
  6486  005F72  0E00               	movlw	0
  6487  005F74  0100               	movlb	0	; () banked
  6488  005F76  6FC1               	movwf	?___fltol& (0+255),b
  6489  005F78  0E00               	movlw	0
  6490  005F7A  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6491  005F7C  0E00               	movlw	0
  6492  005F7E  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6493  005F80  0E00               	movlw	0
  6494  005F82  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6495                           
  6496                           ; BSR set to: 0
  6497  005F84  0012               	return	
  6498  005F86                     l7122:
  6499                           
  6500                           ; BSR set to: 0
  6501  005F86  C0C1  F0C5         	movff	___fltol@f1,??___fltol
  6502  005F8A  C0C2  F0C6         	movff	___fltol@f1+1,??___fltol+1
  6503  005F8E  C0C3  F0C7         	movff	___fltol@f1+2,??___fltol+2
  6504  005F92  C0C4  F0C8         	movff	___fltol@f1+3,??___fltol+3
  6505  005F96  0E20               	movlw	32
  6506  005F98  D006               	goto	u9260
  6507  005F9A                     u9265:
  6508  005F9A  0100               	movlb	0	; () banked
  6509  005F9C  90D8               	bcf	status,0,c
  6510  005F9E  33C8               	rrcf	(??___fltol+3)& (0+255),f,b
  6511  005FA0  33C7               	rrcf	(??___fltol+2)& (0+255),f,b
  6512  005FA2  33C6               	rrcf	(??___fltol+1)& (0+255),f,b
  6513  005FA4  33C5               	rrcf	??___fltol& (0+255),f,b
  6514  005FA6                     u9260:
  6515  005FA6  2EE8               	decfsz	wreg,f,c
  6516  005FA8  D7F8               	goto	u9265
  6517  005FAA  0100               	movlb	0	; () banked
  6518  005FAC  51C5               	movf	??___fltol& (0+255),w,b
  6519  005FAE  0100               	movlb	0	; () banked
  6520  005FB0  6FC9               	movwf	___fltol@sign1& (0+255),b
  6521                           
  6522                           ; BSR set to: 0
  6523  005FB2  0100               	movlb	0	; () banked
  6524  005FB4  8FC3               	bsf	(___fltol@f1+2)& (0+255),7,b
  6525                           
  6526                           ; BSR set to: 0
  6527  005FB6  0EFF               	movlw	255
  6528  005FB8  0100               	movlb	0	; () banked
  6529  005FBA  17C1               	andwf	___fltol@f1& (0+255),f,b
  6530  005FBC  0EFF               	movlw	255
  6531  005FBE  17C2               	andwf	(___fltol@f1+1)& (0+255),f,b
  6532  005FC0  0EFF               	movlw	255
  6533  005FC2  17C3               	andwf	(___fltol@f1+2)& (0+255),f,b
  6534  005FC4  0E00               	movlw	0
  6535  005FC6  17C4               	andwf	(___fltol@f1+3)& (0+255),f,b
  6536                           
  6537                           ; BSR set to: 0
  6538  005FC8  0E96               	movlw	150
  6539  005FCA  0100               	movlb	0	; () banked
  6540  005FCC  5FCA               	subwf	___fltol@exp1& (0+255),f,b
  6541                           
  6542                           ; BSR set to: 0
  6543  005FCE  0100               	movlb	0	; () banked
  6544  005FD0  AFCA               	btfss	___fltol@exp1& (0+255),7,b
  6545  005FD2  D01A               	goto	l7142
  6546                           
  6547                           ; BSR set to: 0
  6548  005FD4  0100               	movlb	0	; () banked
  6549  005FD6  51CA               	movf	___fltol@exp1& (0+255),w,b
  6550  005FD8  0A80               	xorlw	128
  6551  005FDA  0F97               	addlw	151
  6552  005FDC  B0D8               	btfsc	status,0,c
  6553  005FDE  D00A               	goto	l7138
  6554                           
  6555                           ; BSR set to: 0
  6556  005FE0  0E00               	movlw	0
  6557  005FE2  0100               	movlb	0	; () banked
  6558  005FE4  6FC1               	movwf	?___fltol& (0+255),b
  6559  005FE6  0E00               	movlw	0
  6560  005FE8  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6561  005FEA  0E00               	movlw	0
  6562  005FEC  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6563  005FEE  0E00               	movlw	0
  6564  005FF0  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6565                           
  6566                           ; BSR set to: 0
  6567  005FF2  0012               	return	
  6568  005FF4                     l7138:
  6569                           
  6570                           ; BSR set to: 0
  6571  005FF4  0100               	movlb	0	; () banked
  6572  005FF6  90D8               	bcf	status,0,c
  6573  005FF8  33C4               	rrcf	(___fltol@f1+3)& (0+255),f,b
  6574  005FFA  33C3               	rrcf	(___fltol@f1+2)& (0+255),f,b
  6575  005FFC  33C2               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6576  005FFE  33C1               	rrcf	___fltol@f1& (0+255),f,b
  6577                           
  6578                           ; BSR set to: 0
  6579  006000  0100               	movlb	0	; () banked
  6580  006002  3FCA               	incfsz	___fltol@exp1& (0+255),f,b
  6581  006004  D7F7               	goto	l7138
  6582                           
  6583                           ; BSR set to: 0
  6584  006006  D01B               	goto	l7152
  6585  006008                     l7142:
  6586                           
  6587                           ; BSR set to: 0
  6588  006008  0E1F               	movlw	31
  6589  00600A  0100               	movlb	0	; () banked
  6590  00600C  65CA               	cpfsgt	___fltol@exp1& (0+255),b
  6591  00600E  D012               	goto	l7150
  6592                           
  6593                           ; BSR set to: 0
  6594  006010  0E00               	movlw	0
  6595  006012  0100               	movlb	0	; () banked
  6596  006014  6FC1               	movwf	?___fltol& (0+255),b
  6597  006016  0E00               	movlw	0
  6598  006018  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6599  00601A  0E00               	movlw	0
  6600  00601C  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6601  00601E  0E00               	movlw	0
  6602  006020  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6603                           
  6604                           ; BSR set to: 0
  6605  006022  0012               	return	
  6606  006024                     l7148:
  6607                           
  6608                           ; BSR set to: 0
  6609  006024  0100               	movlb	0	; () banked
  6610  006026  90D8               	bcf	status,0,c
  6611  006028  37C1               	rlcf	___fltol@f1& (0+255),f,b
  6612  00602A  37C2               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6613  00602C  37C3               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6614  00602E  37C4               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6615  006030  0100               	movlb	0	; () banked
  6616  006032  07CA               	decf	___fltol@exp1& (0+255),f,b
  6617  006034                     l7150:
  6618                           
  6619                           ; BSR set to: 0
  6620  006034  0100               	movlb	0	; () banked
  6621  006036  51CA               	movf	___fltol@exp1& (0+255),w,b
  6622  006038  0100               	movlb	0	; () banked
  6623  00603A  A4D8               	btfss	status,2,c
  6624  00603C  D7F3               	goto	l7148
  6625  00603E                     l7152:
  6626                           
  6627                           ; BSR set to: 0
  6628  00603E  0100               	movlb	0	; () banked
  6629  006040  51C9               	movf	___fltol@sign1& (0+255),w,b
  6630  006042  0100               	movlb	0	; () banked
  6631  006044  B4D8               	btfsc	status,2,c
  6632  006046  D009               	goto	l7156
  6633                           
  6634                           ; BSR set to: 0
  6635  006048  0100               	movlb	0	; () banked
  6636  00604A  1FC4               	comf	(___fltol@f1+3)& (0+255),f,b
  6637  00604C  1FC3               	comf	(___fltol@f1+2)& (0+255),f,b
  6638  00604E  1FC2               	comf	(___fltol@f1+1)& (0+255),f,b
  6639  006050  6DC1               	negf	___fltol@f1& (0+255),b
  6640  006052  0E00               	movlw	0
  6641  006054  23C2               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6642  006056  23C3               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6643  006058  23C4               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6644  00605A                     l7156:
  6645                           
  6646                           ; BSR set to: 0
  6647  00605A  C0C1  F0C1         	movff	___fltol@f1,?___fltol
  6648  00605E  C0C2  F0C2         	movff	___fltol@f1+1,?___fltol+1
  6649  006062  C0C3  F0C3         	movff	___fltol@f1+2,?___fltol+2
  6650  006066  C0C4  F0C4         	movff	___fltol@f1+3,?___fltol+3
  6651  00606A  0012               	return	
  6652  00606C                     __end_of___fltol:
  6653                           	opt stack 0
  6654                           tblptru	equ	0xFF8
  6655                           tblptrh	equ	0xFF7
  6656                           tblptrl	equ	0xFF6
  6657                           tablat	equ	0xFF5
  6658                           postinc0	equ	0xFEE
  6659                           wreg	equ	0xFE8
  6660                           postdec1	equ	0xFE5
  6661                           fsr1l	equ	0xFE1
  6662                           indf2	equ	0xFDF
  6663                           postinc2	equ	0xFDE
  6664                           postdec2	equ	0xFDD
  6665                           fsr2h	equ	0xFDA
  6666                           fsr2l	equ	0xFD9
  6667                           status	equ	0xFD8
  6668                           
  6669 ;; *************** function ___flsub *****************
  6670 ;; Defined at:
  6671 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;  b               4   10[BANK1 ] long 
  6674 ;;  a               4   14[BANK1 ] long 
  6675 ;; Auto vars:     Size  Location     Type
  6676 ;;		None
  6677 ;; Return value:  Size  Location     Type
  6678 ;;                  4   10[BANK1 ] long 
  6679 ;; Registers used:
  6680 ;;		wreg, status,2, status,0, cstack
  6681 ;; Tracked objects:
  6682 ;;		On entry : 0/0
  6683 ;;		On exit  : 0/0
  6684 ;;		Unchanged: 0/0
  6685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6686 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6689 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6690 ;;Total ram usage:        8 bytes
  6691 ;; Hardware stack levels used:    1
  6692 ;; Hardware stack levels required when called:    5
  6693 ;; This function calls:
  6694 ;;		___fladd
  6695 ;; This function is called by:
  6696 ;;		_sin
  6697 ;; This function uses a non-reentrant model
  6698 ;;
  6699                           
  6700                           	psect	text15
  6701  006534                     __ptext15:
  6702                           	opt stack 0
  6703  006534                     ___flsub:
  6704                           	opt stack 21
  6705                           
  6706                           ; BSR set to: 0
  6707                           ;incstack = 0
  6708  006534  0E00               	movlw	0
  6709  006536  0101               	movlb	1	; () banked
  6710  006538  1B99               	xorwf	___flsub@a& (0+255),f,b
  6711  00653A  0E00               	movlw	0
  6712  00653C  1B9A               	xorwf	(___flsub@a+1)& (0+255),f,b
  6713  00653E  0E00               	movlw	0
  6714  006540  1B9B               	xorwf	(___flsub@a+2)& (0+255),f,b
  6715  006542  0E80               	movlw	128
  6716  006544  1B9C               	xorwf	(___flsub@a+3)& (0+255),f,b
  6717                           
  6718                           ; BSR set to: 1
  6719  006546  C195  F0A9         	movff	___flsub@b,___fladd@b
  6720  00654A  C196  F0AA         	movff	___flsub@b+1,___fladd@b+1
  6721  00654E  C197  F0AB         	movff	___flsub@b+2,___fladd@b+2
  6722  006552  C198  F0AC         	movff	___flsub@b+3,___fladd@b+3
  6723  006556  C199  F0AD         	movff	___flsub@a,___fladd@a
  6724  00655A  C19A  F0AE         	movff	___flsub@a+1,___fladd@a+1
  6725  00655E  C19B  F0AF         	movff	___flsub@a+2,___fladd@a+2
  6726  006562  C19C  F0B0         	movff	___flsub@a+3,___fladd@a+3
  6727  006566  EC85  F018         	call	___fladd	;wreg free
  6728  00656A  C0A9  F195         	movff	?___fladd,?___flsub
  6729  00656E  C0AA  F196         	movff	?___fladd+1,?___flsub+1
  6730  006572  C0AB  F197         	movff	?___fladd+2,?___flsub+2
  6731  006576  C0AC  F198         	movff	?___fladd+3,?___flsub+3
  6732  00657A  0012               	return	
  6733  00657C                     __end_of___flsub:
  6734                           	opt stack 0
  6735                           tblptru	equ	0xFF8
  6736                           tblptrh	equ	0xFF7
  6737                           tblptrl	equ	0xFF6
  6738                           tablat	equ	0xFF5
  6739                           postinc0	equ	0xFEE
  6740                           wreg	equ	0xFE8
  6741                           postdec1	equ	0xFE5
  6742                           fsr1l	equ	0xFE1
  6743                           indf2	equ	0xFDF
  6744                           postinc2	equ	0xFDE
  6745                           postdec2	equ	0xFDD
  6746                           fsr2h	equ	0xFDA
  6747                           fsr2l	equ	0xFD9
  6748                           status	equ	0xFD8
  6749                           
  6750 ;; *************** function _asin *****************
  6751 ;; Defined at:
  6752 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\asin.c"
  6753 ;; Parameters:    Size  Location     Type
  6754 ;;  x               4  117[BANK0 ] long 
  6755 ;; Auto vars:     Size  Location     Type
  6756 ;;  y               4   33[BANK1 ] long 
  6757 ;;  sgn             4   21[BANK1 ] long 
  6758 ;; Return value:  Size  Location     Type
  6759 ;;                  4  117[BANK0 ] long 
  6760 ;; Registers used:
  6761 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6762 ;; Tracked objects:
  6763 ;;		On entry : 0/0
  6764 ;;		On exit  : 0/0
  6765 ;;		Unchanged: 0/0
  6766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6767 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6768 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  6769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6770 ;;      Totals:         0       4      20       0       0       0       0       0       0       0       0       0       
      +0       0
  6771 ;;Total ram usage:       24 bytes
  6772 ;; Hardware stack levels used:    1
  6773 ;; Hardware stack levels required when called:    7
  6774 ;; This function calls:
  6775 ;;		___fladd
  6776 ;;		___fldiv
  6777 ;;		___flge
  6778 ;;		___flmul
  6779 ;;		___flneg
  6780 ;;		_atan
  6781 ;;		_fabs
  6782 ;;		_sqrt
  6783 ;; This function is called by:
  6784 ;;		_parallelo
  6785 ;;		_matematica
  6786 ;; This function uses a non-reentrant model
  6787 ;;
  6788                           
  6789                           	psect	text16
  6790  004D24                     __ptext16:
  6791                           	opt stack 0
  6792  004D24                     _asin:
  6793                           	opt stack 21
  6794                           
  6795                           ;incstack = 0
  6796  004D24  0E00               	movlw	0
  6797  004D26  0100               	movlb	0	; () banked
  6798  004D28  6FC5               	movwf	___flge@ff1& (0+255),b
  6799  004D2A  0E00               	movlw	0
  6800  004D2C  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  6801  004D2E  0E80               	movlw	128
  6802  004D30  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  6803  004D32  0E3F               	movlw	63
  6804  004D34  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  6805  004D36  C0D5  F0C1         	movff	asin@x,fabs@d
  6806  004D3A  C0D6  F0C2         	movff	asin@x+1,fabs@d+1
  6807  004D3E  C0D7  F0C3         	movff	asin@x+2,fabs@d+2
  6808  004D42  C0D8  F0C4         	movff	asin@x+3,fabs@d+3
  6809  004D46  ECBE  F032         	call	_fabs	;wreg free
  6810  004D4A  C0C1  F0C9         	movff	?_fabs,___flge@ff2
  6811  004D4E  C0C2  F0CA         	movff	?_fabs+1,___flge@ff2+1
  6812  004D52  C0C3  F0CB         	movff	?_fabs+2,___flge@ff2+2
  6813  004D56  C0C4  F0CC         	movff	?_fabs+3,___flge@ff2+3
  6814  004D5A  EC30  F02D         	call	___flge	;wreg free
  6815  004D5E  0100               	movlb	0	; () banked
  6816  004D60  B0D8               	btfsc	status,0,c
  6817  004D62  D00F               	goto	l7862
  6818                           
  6819                           ; BSR set to: 0
  6820  004D64  0E00               	movlw	0
  6821  004D66  0100               	movlb	0	; () banked
  6822  004D68  6FE5               	movwf	(_errno+1)& (0+255),b
  6823  004D6A  0E21               	movlw	33
  6824  004D6C  6FE4               	movwf	_errno& (0+255),b
  6825  004D6E  0E00               	movlw	0
  6826  004D70  0100               	movlb	0	; () banked
  6827  004D72  6FD5               	movwf	?_asin& (0+255),b
  6828  004D74  0E00               	movlw	0
  6829  004D76  6FD6               	movwf	(?_asin+1)& (0+255),b
  6830  004D78  0E00               	movlw	0
  6831  004D7A  6FD7               	movwf	(?_asin+2)& (0+255),b
  6832  004D7C  0E00               	movlw	0
  6833  004D7E  6FD8               	movwf	(?_asin+3)& (0+255),b
  6834                           
  6835                           ; BSR set to: 0
  6836  004D80  0012               	return	
  6837  004D82                     l7862:
  6838                           
  6839                           ; BSR set to: 0
  6840  004D82  0E00               	movlw	0
  6841  004D84  0101               	movlb	1	; () banked
  6842  004D86  6FA0               	movwf	asin@sgn& (0+255),b
  6843  004D88  0E00               	movlw	0
  6844  004D8A  6FA1               	movwf	(asin@sgn+1)& (0+255),b
  6845  004D8C  0E80               	movlw	128
  6846  004D8E  6FA2               	movwf	(asin@sgn+2)& (0+255),b
  6847  004D90  0E3F               	movlw	63
  6848  004D92  6FA3               	movwf	(asin@sgn+3)& (0+255),b
  6849                           
  6850                           ; BSR set to: 1
  6851  004D94  C0D5  F094         	movff	asin@x,___flmul@a
  6852  004D98  C0D6  F095         	movff	asin@x+1,___flmul@a+1
  6853  004D9C  C0D7  F096         	movff	asin@x+2,___flmul@a+2
  6854  004DA0  C0D8  F097         	movff	asin@x+3,___flmul@a+3
  6855  004DA4  C0D5  F090         	movff	asin@x,___flmul@b
  6856  004DA8  C0D6  F091         	movff	asin@x+1,___flmul@b+1
  6857  004DAC  C0D7  F092         	movff	asin@x+2,___flmul@b+2
  6858  004DB0  C0D8  F093         	movff	asin@x+3,___flmul@b+3
  6859  004DB4  ECD9  F01A         	call	___flmul	;wreg free
  6860  004DB8  C090  F0BD         	movff	?___flmul,___flneg@f1
  6861  004DBC  C091  F0BE         	movff	?___flmul+1,___flneg@f1+1
  6862  004DC0  C092  F0BF         	movff	?___flmul+2,___flneg@f1+2
  6863  004DC4  C093  F0C0         	movff	?___flmul+3,___flneg@f1+3
  6864  004DC8  ECFA  F032         	call	___flneg	;wreg free
  6865  004DCC  C0BD  F0A9         	movff	?___flneg,___fladd@b
  6866  004DD0  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  6867  004DD4  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  6868  004DD8  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  6869  004DDC  0E00               	movlw	0
  6870  004DDE  0100               	movlb	0	; () banked
  6871  004DE0  6FAD               	movwf	___fladd@a& (0+255),b
  6872  004DE2  0E00               	movlw	0
  6873  004DE4  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  6874  004DE6  0E80               	movlw	128
  6875  004DE8  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  6876  004DEA  0E3F               	movlw	63
  6877  004DEC  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  6878  004DEE  EC85  F018         	call	___fladd	;wreg free
  6879  004DF2  C0A9  F0C1         	movff	?___fladd,sqrt@a
  6880  004DF6  C0AA  F0C2         	movff	?___fladd+1,sqrt@a+1
  6881  004DFA  C0AB  F0C3         	movff	?___fladd+2,sqrt@a+2
  6882  004DFE  C0AC  F0C4         	movff	?___fladd+3,sqrt@a+3
  6883  004E02  EC72  F01F         	call	_sqrt	;wreg free
  6884  004E06  C0C1  F1AC         	movff	?_sqrt,asin@y
  6885  004E0A  C0C2  F1AD         	movff	?_sqrt+1,asin@y+1
  6886  004E0E  C0C3  F1AE         	movff	?_sqrt+2,asin@y+2
  6887  004E12  C0C4  F1AF         	movff	?_sqrt+3,asin@y+3
  6888  004E16  C0D5  F0C1         	movff	asin@x,fabs@d
  6889  004E1A  C0D6  F0C2         	movff	asin@x+1,fabs@d+1
  6890  004E1E  C0D7  F0C3         	movff	asin@x+2,fabs@d+2
  6891  004E22  C0D8  F0C4         	movff	asin@x+3,fabs@d+3
  6892  004E26  ECBE  F032         	call	_fabs	;wreg free
  6893  004E2A  C0C1  F0C5         	movff	?_fabs,___flge@ff1
  6894  004E2E  C0C2  F0C6         	movff	?_fabs+1,___flge@ff1+1
  6895  004E32  C0C3  F0C7         	movff	?_fabs+2,___flge@ff1+2
  6896  004E36  C0C4  F0C8         	movff	?_fabs+3,___flge@ff1+3
  6897  004E3A  0E8F               	movlw	143
  6898  004E3C  0100               	movlb	0	; () banked
  6899  004E3E  6FC9               	movwf	___flge@ff2& (0+255),b
  6900  004E40  0EC2               	movlw	194
  6901  004E42  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
  6902  004E44  0E35               	movlw	53
  6903  004E46  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
  6904  004E48  0E3F               	movlw	63
  6905  004E4A  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
  6906  004E4C  EC30  F02D         	call	___flge	;wreg free
  6907  004E50  0100               	movlb	0	; () banked
  6908  004E52  B0D8               	btfsc	status,0,c
  6909  004E54  D02D               	goto	l7874
  6910                           
  6911                           ; BSR set to: 0
  6912  004E56  C0D5  F077         	movff	asin@x,___fldiv@b
  6913  004E5A  C0D6  F078         	movff	asin@x+1,___fldiv@b+1
  6914  004E5E  C0D7  F079         	movff	asin@x+2,___fldiv@b+2
  6915  004E62  C0D8  F07A         	movff	asin@x+3,___fldiv@b+3
  6916  004E66  C1AC  F07B         	movff	asin@y,___fldiv@a
  6917  004E6A  C1AD  F07C         	movff	asin@y+1,___fldiv@a+1
  6918  004E6E  C1AE  F07D         	movff	asin@y+2,___fldiv@a+2
  6919  004E72  C1AF  F07E         	movff	asin@y+3,___fldiv@a+3
  6920  004E76  EC57  F021         	call	___fldiv	;wreg free
  6921  004E7A  C077  F1B0         	movff	?___fldiv,_asin$3753
  6922  004E7E  C078  F1B1         	movff	?___fldiv+1,_asin$3753+1
  6923  004E82  C079  F1B2         	movff	?___fldiv+2,_asin$3753+2
  6924  004E86  C07A  F1B3         	movff	?___fldiv+3,_asin$3753+3
  6925  004E8A  C1B0  F0D1         	movff	_asin$3753,atan@f
  6926  004E8E  C1B1  F0D2         	movff	_asin$3753+1,atan@f+1
  6927  004E92  C1B2  F0D3         	movff	_asin$3753+2,atan@f+2
  6928  004E96  C1B3  F0D4         	movff	_asin$3753+3,atan@f+3
  6929  004E9A  EC5D  F029         	call	_atan	;wreg free
  6930  004E9E  C0D1  F0D5         	movff	?_atan,?_asin
  6931  004EA2  C0D2  F0D6         	movff	?_atan+1,?_asin+1
  6932  004EA6  C0D3  F0D7         	movff	?_atan+2,?_asin+2
  6933  004EAA  C0D4  F0D8         	movff	?_atan+3,?_asin+3
  6934  004EAE  0012               	return	
  6935  004EB0                     l7874:
  6936  004EB0  0100               	movlb	0	; () banked
  6937  004EB2  AFD8               	btfss	(asin@x+3)& (0+255),7,b
  6938  004EB4  D06E               	goto	l7886
  6939                           
  6940                           ; BSR set to: 0
  6941  004EB6  C0D5  F07B         	movff	asin@x,___fldiv@a
  6942  004EBA  C0D6  F07C         	movff	asin@x+1,___fldiv@a+1
  6943  004EBE  C0D7  F07D         	movff	asin@x+2,___fldiv@a+2
  6944  004EC2  C0D8  F07E         	movff	asin@x+3,___fldiv@a+3
  6945  004EC6  C1AC  F0BD         	movff	asin@y,___flneg@f1
  6946  004ECA  C1AD  F0BE         	movff	asin@y+1,___flneg@f1+1
  6947  004ECE  C1AE  F0BF         	movff	asin@y+2,___flneg@f1+2
  6948  004ED2  C1AF  F0C0         	movff	asin@y+3,___flneg@f1+3
  6949  004ED6  ECFA  F032         	call	___flneg	;wreg free
  6950  004EDA  C0BD  F077         	movff	?___flneg,___fldiv@b
  6951  004EDE  C0BE  F078         	movff	?___flneg+1,___fldiv@b+1
  6952  004EE2  C0BF  F079         	movff	?___flneg+2,___fldiv@b+2
  6953  004EE6  C0C0  F07A         	movff	?___flneg+3,___fldiv@b+3
  6954  004EEA  EC57  F021         	call	___fldiv	;wreg free
  6955  004EEE  C077  F1B0         	movff	?___fldiv,_asin$3753
  6956  004EF2  C078  F1B1         	movff	?___fldiv+1,_asin$3753+1
  6957  004EF6  C079  F1B2         	movff	?___fldiv+2,_asin$3753+2
  6958  004EFA  C07A  F1B3         	movff	?___fldiv+3,_asin$3753+3
  6959  004EFE  C1B0  F0D1         	movff	_asin$3753,atan@f
  6960  004F02  C1B1  F0D2         	movff	_asin$3753+1,atan@f+1
  6961  004F06  C1B2  F0D3         	movff	_asin$3753+2,atan@f+2
  6962  004F0A  C1B3  F0D4         	movff	_asin$3753+3,atan@f+3
  6963  004F0E  EC5D  F029         	call	_atan	;wreg free
  6964  004F12  C0D1  F1A8         	movff	?_atan,_asin$3754
  6965  004F16  C0D2  F1A9         	movff	?_atan+1,_asin$3754+1
  6966  004F1A  C0D3  F1AA         	movff	?_atan+2,_asin$3754+2
  6967  004F1E  C0D4  F1AB         	movff	?_atan+3,_asin$3754+3
  6968  004F22  0EDB               	movlw	219
  6969  004F24  0100               	movlb	0	; () banked
  6970  004F26  6FAD               	movwf	___fladd@a& (0+255),b
  6971  004F28  0E0F               	movlw	15
  6972  004F2A  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  6973  004F2C  0EC9               	movlw	201
  6974  004F2E  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  6975  004F30  0E3F               	movlw	63
  6976  004F32  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  6977  004F34  C1A8  F0BD         	movff	_asin$3754,___flneg@f1
  6978  004F38  C1A9  F0BE         	movff	_asin$3754+1,___flneg@f1+1
  6979  004F3C  C1AA  F0BF         	movff	_asin$3754+2,___flneg@f1+2
  6980  004F40  C1AB  F0C0         	movff	_asin$3754+3,___flneg@f1+3
  6981  004F44  ECFA  F032         	call	___flneg	;wreg free
  6982  004F48  C0BD  F0A9         	movff	?___flneg,___fladd@b
  6983  004F4C  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  6984  004F50  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  6985  004F54  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  6986  004F58  EC85  F018         	call	___fladd	;wreg free
  6987  004F5C  C0A9  F1A4         	movff	?___fladd,_asin$3755
  6988  004F60  C0AA  F1A5         	movff	?___fladd+1,_asin$3755+1
  6989  004F64  C0AB  F1A6         	movff	?___fladd+2,_asin$3755+2
  6990  004F68  C0AC  F1A7         	movff	?___fladd+3,_asin$3755+3
  6991  004F6C  C1A4  F0BD         	movff	_asin$3755,___flneg@f1
  6992  004F70  C1A5  F0BE         	movff	_asin$3755+1,___flneg@f1+1
  6993  004F74  C1A6  F0BF         	movff	_asin$3755+2,___flneg@f1+2
  6994  004F78  C1A7  F0C0         	movff	_asin$3755+3,___flneg@f1+3
  6995  004F7C  ECFA  F032         	call	___flneg	;wreg free
  6996  004F80  C0BD  F0D5         	movff	?___flneg,?_asin
  6997  004F84  C0BE  F0D6         	movff	?___flneg+1,?_asin+1
  6998  004F88  C0BF  F0D7         	movff	?___flneg+2,?_asin+2
  6999  004F8C  C0C0  F0D8         	movff	?___flneg+3,?_asin+3
  7000  004F90  0012               	return	
  7001  004F92                     l7886:
  7002  004F92  C0D5  F07B         	movff	asin@x,___fldiv@a
  7003  004F96  C0D6  F07C         	movff	asin@x+1,___fldiv@a+1
  7004  004F9A  C0D7  F07D         	movff	asin@x+2,___fldiv@a+2
  7005  004F9E  C0D8  F07E         	movff	asin@x+3,___fldiv@a+3
  7006  004FA2  C1AC  F077         	movff	asin@y,___fldiv@b
  7007  004FA6  C1AD  F078         	movff	asin@y+1,___fldiv@b+1
  7008  004FAA  C1AE  F079         	movff	asin@y+2,___fldiv@b+2
  7009  004FAE  C1AF  F07A         	movff	asin@y+3,___fldiv@b+3
  7010  004FB2  EC57  F021         	call	___fldiv	;wreg free
  7011  004FB6  C077  F1B0         	movff	?___fldiv,_asin$3753
  7012  004FBA  C078  F1B1         	movff	?___fldiv+1,_asin$3753+1
  7013  004FBE  C079  F1B2         	movff	?___fldiv+2,_asin$3753+2
  7014  004FC2  C07A  F1B3         	movff	?___fldiv+3,_asin$3753+3
  7015  004FC6  C1B0  F0D1         	movff	_asin$3753,atan@f
  7016  004FCA  C1B1  F0D2         	movff	_asin$3753+1,atan@f+1
  7017  004FCE  C1B2  F0D3         	movff	_asin$3753+2,atan@f+2
  7018  004FD2  C1B3  F0D4         	movff	_asin$3753+3,atan@f+3
  7019  004FD6  EC5D  F029         	call	_atan	;wreg free
  7020  004FDA  C0D1  F1A8         	movff	?_atan,_asin$3754
  7021  004FDE  C0D2  F1A9         	movff	?_atan+1,_asin$3754+1
  7022  004FE2  C0D3  F1AA         	movff	?_atan+2,_asin$3754+2
  7023  004FE6  C0D4  F1AB         	movff	?_atan+3,_asin$3754+3
  7024  004FEA  C1A8  F0BD         	movff	_asin$3754,___flneg@f1
  7025  004FEE  C1A9  F0BE         	movff	_asin$3754+1,___flneg@f1+1
  7026  004FF2  C1AA  F0BF         	movff	_asin$3754+2,___flneg@f1+2
  7027  004FF6  C1AB  F0C0         	movff	_asin$3754+3,___flneg@f1+3
  7028  004FFA  ECFA  F032         	call	___flneg	;wreg free
  7029  004FFE  C0BD  F0A9         	movff	?___flneg,___fladd@b
  7030  005002  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  7031  005006  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  7032  00500A  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  7033  00500E  0EDB               	movlw	219
  7034  005010  0100               	movlb	0	; () banked
  7035  005012  6FAD               	movwf	___fladd@a& (0+255),b
  7036  005014  0E0F               	movlw	15
  7037  005016  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  7038  005018  0EC9               	movlw	201
  7039  00501A  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  7040  00501C  0E3F               	movlw	63
  7041  00501E  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  7042  005020  EC85  F018         	call	___fladd	;wreg free
  7043  005024  C0A9  F0D5         	movff	?___fladd,?_asin
  7044  005028  C0AA  F0D6         	movff	?___fladd+1,?_asin+1
  7045  00502C  C0AB  F0D7         	movff	?___fladd+2,?_asin+2
  7046  005030  C0AC  F0D8         	movff	?___fladd+3,?_asin+3
  7047  005034  0012               	return	
  7048  005036                     __end_of_asin:
  7049                           	opt stack 0
  7050                           tblptru	equ	0xFF8
  7051                           tblptrh	equ	0xFF7
  7052                           tblptrl	equ	0xFF6
  7053                           tablat	equ	0xFF5
  7054                           postinc0	equ	0xFEE
  7055                           wreg	equ	0xFE8
  7056                           postdec1	equ	0xFE5
  7057                           fsr1l	equ	0xFE1
  7058                           indf2	equ	0xFDF
  7059                           postinc2	equ	0xFDE
  7060                           postdec2	equ	0xFDD
  7061                           fsr2h	equ	0xFDA
  7062                           fsr2l	equ	0xFD9
  7063                           status	equ	0xFD8
  7064                           
  7065 ;; *************** function _sqrt *****************
  7066 ;; Defined at:
  7067 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcsqrt.c"
  7068 ;; Parameters:    Size  Location     Type
  7069 ;;  a               4   97[BANK0 ] long 
  7070 ;; Auto vars:     Size  Location     Type
  7071 ;;  frac            4   17[BANK1 ] unsigned long 
  7072 ;;  root            4   13[BANK1 ] struct .
  7073 ;;  grs             4    7[BANK1 ] unsigned long 
  7074 ;;  tfrac           4    2[BANK1 ] unsigned long 
  7075 ;;  exp             2   11[BANK1 ] int 
  7076 ;;  p               1    6[BANK1 ] unsigned char 
  7077 ;;  i               1    1[BANK1 ] unsigned char 
  7078 ;;  sign            1    0[BANK1 ] unsigned char 
  7079 ;; Return value:  Size  Location     Type
  7080 ;;                  4   97[BANK0 ] unsigned char 
  7081 ;; Registers used:
  7082 ;;		wreg, status,2, status,0
  7083 ;; Tracked objects:
  7084 ;;		On entry : 0/0
  7085 ;;		On exit  : 0/0
  7086 ;;		Unchanged: 0/0
  7087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7088 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7089 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
  7090 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7091 ;;      Totals:         0       8      21       0       0       0       0       0       0       0       0       0       
      +0       0
  7092 ;;Total ram usage:       29 bytes
  7093 ;; Hardware stack levels used:    1
  7094 ;; Hardware stack levels required when called:    4
  7095 ;; This function calls:
  7096 ;;		Nothing
  7097 ;; This function is called by:
  7098 ;;		_parallelo
  7099 ;;		_asin
  7100 ;; This function uses a non-reentrant model
  7101 ;;
  7102                           
  7103                           	psect	text17
  7104  003EE4                     __ptext17:
  7105                           	opt stack 0
  7106  003EE4                     _sqrt:
  7107                           	opt stack 24
  7108                           
  7109                           ;incstack = 0
  7110  003EE4  0100               	movlb	0	; () banked
  7111  003EE6  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  7112  003EE8  0B80               	andlw	128
  7113  003EEA  0101               	movlb	1	; () banked
  7114  003EEC  6F8B               	movwf	sqrt@sign& (0+255),b
  7115  003EEE  0100               	movlb	0	; () banked
  7116  003EF0  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  7117  003EF2  25C4               	addwf	(sqrt@a+3)& (0+255),w,b
  7118  003EF4  0101               	movlb	1	; () banked
  7119  003EF6  6F91               	movwf	sqrt@p& (0+255),b
  7120                           
  7121                           ; BSR set to: 1
  7122  003EF8  0100               	movlb	0	; () banked
  7123  003EFA  AFC3               	btfss	(sqrt@a+2)& (0+255),7,b
  7124  003EFC  D002               	goto	l7644
  7125                           
  7126                           ; BSR set to: 0
  7127  003EFE  0101               	movlb	1	; () banked
  7128  003F00  8191               	bsf	sqrt@p& (0+255),0,b
  7129  003F02                     l7644:
  7130  003F02  C191  F196         	movff	sqrt@p,sqrt@exp
  7131  003F06  0101               	movlb	1	; () banked
  7132  003F08  6B97               	clrf	(sqrt@exp+1)& (0+255),b
  7133                           
  7134                           ; BSR set to: 1
  7135  003F0A  0EFF               	movlw	255
  7136  003F0C  0100               	movlb	0	; () banked
  7137  003F0E  15C1               	andwf	sqrt@a& (0+255),w,b
  7138  003F10  0101               	movlb	1	; () banked
  7139  003F12  6F9C               	movwf	sqrt@frac& (0+255),b
  7140  003F14  0EFF               	movlw	255
  7141  003F16  0100               	movlb	0	; () banked
  7142  003F18  15C2               	andwf	(sqrt@a+1)& (0+255),w,b
  7143  003F1A  0101               	movlb	1	; () banked
  7144  003F1C  6F9D               	movwf	(sqrt@frac+1)& (0+255),b
  7145  003F1E  0E7F               	movlw	127
  7146  003F20  0100               	movlb	0	; () banked
  7147  003F22  15C3               	andwf	(sqrt@a+2)& (0+255),w,b
  7148  003F24  0101               	movlb	1	; () banked
  7149  003F26  6F9E               	movwf	(sqrt@frac+2)& (0+255),b
  7150  003F28  0E00               	movlw	0
  7151  003F2A  0100               	movlb	0	; () banked
  7152  003F2C  15C4               	andwf	(sqrt@a+3)& (0+255),w,b
  7153  003F2E  0101               	movlb	1	; () banked
  7154  003F30  6F9F               	movwf	(sqrt@frac+3)& (0+255),b
  7155                           
  7156                           ; BSR set to: 1
  7157  003F32  0101               	movlb	1	; () banked
  7158  003F34  5196               	movf	sqrt@exp& (0+255),w,b
  7159  003F36  0101               	movlb	1	; () banked
  7160  003F38  1197               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7161  003F3A  B4D8               	btfsc	status,2,c
  7162  003F3C  D008               	goto	l7656
  7163                           
  7164                           ; BSR set to: 1
  7165  003F3E  0101               	movlb	1	; () banked
  7166  003F40  8F9E               	bsf	(sqrt@frac+2)& (0+255),7,b
  7167                           
  7168                           ; BSR set to: 1
  7169  003F42  0101               	movlb	1	; () banked
  7170  003F44  2996               	incf	sqrt@exp& (0+255),w,b
  7171  003F46  0101               	movlb	1	; () banked
  7172  003F48  1197               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7173  003F4A  A4D8               	btfss	status,2,c
  7174  003F4C  D009               	goto	l7658
  7175  003F4E                     l7656:
  7176                           
  7177                           ; BSR set to: 1
  7178  003F4E  0E00               	movlw	0
  7179  003F50  0101               	movlb	1	; () banked
  7180  003F52  6F9C               	movwf	sqrt@frac& (0+255),b
  7181  003F54  0E00               	movlw	0
  7182  003F56  6F9D               	movwf	(sqrt@frac+1)& (0+255),b
  7183  003F58  0E00               	movlw	0
  7184  003F5A  6F9E               	movwf	(sqrt@frac+2)& (0+255),b
  7185  003F5C  0E00               	movlw	0
  7186  003F5E  6F9F               	movwf	(sqrt@frac+3)& (0+255),b
  7187  003F60                     l7658:
  7188                           
  7189                           ; BSR set to: 1
  7190  003F60  0101               	movlb	1	; () banked
  7191  003F62  5196               	movf	sqrt@exp& (0+255),w,b
  7192  003F64  0101               	movlb	1	; () banked
  7193  003F66  1197               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7194  003F68  A4D8               	btfss	status,2,c
  7195  003F6A  D00A               	goto	l7664
  7196                           
  7197                           ; BSR set to: 1
  7198  003F6C  0E00               	movlw	0
  7199  003F6E  0100               	movlb	0	; () banked
  7200  003F70  6FC1               	movwf	?_sqrt& (0+255),b
  7201  003F72  0E00               	movlw	0
  7202  003F74  6FC2               	movwf	(?_sqrt+1)& (0+255),b
  7203  003F76  0E00               	movlw	0
  7204  003F78  6FC3               	movwf	(?_sqrt+2)& (0+255),b
  7205  003F7A  0E00               	movlw	0
  7206  003F7C  6FC4               	movwf	(?_sqrt+3)& (0+255),b
  7207                           
  7208                           ; BSR set to: 0
  7209  003F7E  0012               	return	
  7210  003F80                     l7664:
  7211  003F80  0101               	movlb	1	; () banked
  7212  003F82  518B               	movf	sqrt@sign& (0+255),w,b
  7213  003F84  0101               	movlb	1	; () banked
  7214  003F86  B4D8               	btfsc	status,2,c
  7215  003F88  D01C               	goto	l7676
  7216                           
  7217                           ; BSR set to: 1
  7218  003F8A  0E00               	movlw	0
  7219  003F8C  0101               	movlb	1	; () banked
  7220  003F8E  6F98               	movwf	sqrt@root& (0+255),b
  7221  003F90  0E00               	movlw	0
  7222  003F92  6F99               	movwf	(sqrt@root+1)& (0+255),b
  7223  003F94  0E40               	movlw	64
  7224  003F96  6F9A               	movwf	(sqrt@root+2)& (0+255),b
  7225  003F98  0E00               	movlw	0
  7226  003F9A  6F9B               	movwf	(sqrt@root+3)& (0+255),b
  7227                           
  7228                           ; BSR set to: 1
  7229  003F9C  0101               	movlb	1	; () banked
  7230  003F9E  0E80               	movlw	128
  7231  003FA0  139A               	iorwf	(sqrt@root+2)& (0+255),f,b
  7232  003FA2  0EFF               	movlw	255
  7233  003FA4  139B               	iorwf	(sqrt@root+3)& (0+255),f,b
  7234                           
  7235                           ; BSR set to: 1
  7236  003FA6  0E00               	movlw	0
  7237  003FA8  0100               	movlb	0	; () banked
  7238  003FAA  6FE5               	movwf	(_errno+1)& (0+255),b
  7239  003FAC  0E21               	movlw	33
  7240  003FAE  6FE4               	movwf	_errno& (0+255),b
  7241                           
  7242                           ; BSR set to: 0
  7243  003FB0  C198  F0C1         	movff	sqrt@root,?_sqrt
  7244  003FB4  C199  F0C2         	movff	sqrt@root+1,?_sqrt+1
  7245  003FB8  C19A  F0C3         	movff	sqrt@root+2,?_sqrt+2
  7246  003FBC  C19B  F0C4         	movff	sqrt@root+3,?_sqrt+3
  7247                           
  7248                           ; BSR set to: 0
  7249  003FC0  0012               	return	
  7250  003FC2                     l7676:
  7251  003FC2  0101               	movlb	1	; () banked
  7252  003FC4  2996               	incf	sqrt@exp& (0+255),w,b
  7253  003FC6  0101               	movlb	1	; () banked
  7254  003FC8  1197               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7255  003FCA  A4D8               	btfss	status,2,c
  7256  003FCC  D012               	goto	l7684
  7257                           
  7258                           ; BSR set to: 1
  7259  003FCE  0E00               	movlw	0
  7260  003FD0  0101               	movlb	1	; () banked
  7261  003FD2  6F98               	movwf	sqrt@root& (0+255),b
  7262  003FD4  0E00               	movlw	0
  7263  003FD6  6F99               	movwf	(sqrt@root+1)& (0+255),b
  7264  003FD8  0E80               	movlw	128
  7265  003FDA  6F9A               	movwf	(sqrt@root+2)& (0+255),b
  7266  003FDC  0E7F               	movlw	127
  7267  003FDE  6F9B               	movwf	(sqrt@root+3)& (0+255),b
  7268                           
  7269                           ; BSR set to: 1
  7270  003FE0  C198  F0C1         	movff	sqrt@root,?_sqrt
  7271  003FE4  C199  F0C2         	movff	sqrt@root+1,?_sqrt+1
  7272  003FE8  C19A  F0C3         	movff	sqrt@root+2,?_sqrt+2
  7273  003FEC  C19B  F0C4         	movff	sqrt@root+3,?_sqrt+3
  7274                           
  7275                           ; BSR set to: 1
  7276  003FF0  0012               	return	
  7277  003FF2                     l7684:
  7278                           
  7279                           ; BSR set to: 1
  7280  003FF2  0101               	movlb	1	; () banked
  7281  003FF4  0E81               	movlw	129
  7282  003FF6  2796               	addwf	sqrt@exp& (0+255),f,b
  7283  003FF8  0EFF               	movlw	255
  7284  003FFA  2397               	addwfc	(sqrt@exp+1)& (0+255),f,b
  7285  003FFC  0101               	movlb	1	; () banked
  7286  003FFE  5196               	movf	sqrt@exp& (0+255),w,b
  7287  004000  0B01               	andlw	1
  7288  004002  0101               	movlb	1	; () banked
  7289  004004  6F91               	movwf	sqrt@p& (0+255),b
  7290  004006  0101               	movlb	1	; () banked
  7291  004008  3597               	rlcf	(sqrt@exp+1)& (0+255),w,b
  7292  00400A  3397               	rrcf	(sqrt@exp+1)& (0+255),f,b
  7293  00400C  3396               	rrcf	sqrt@exp& (0+255),f,b
  7294  00400E  0E7F               	movlw	127
  7295  004010  0101               	movlb	1	; () banked
  7296  004012  2796               	addwf	sqrt@exp& (0+255),f,b
  7297  004014  0E00               	movlw	0
  7298  004016  2397               	addwfc	(sqrt@exp+1)& (0+255),f,b
  7299  004018  90D8               	bcf	status,0,c
  7300  00401A  0101               	movlb	1	; () banked
  7301  00401C  359C               	rlcf	sqrt@frac& (0+255),w,b
  7302  00401E  0101               	movlb	1	; () banked
  7303  004020  6F8D               	movwf	sqrt@tfrac& (0+255),b
  7304  004022  0101               	movlb	1	; () banked
  7305  004024  359D               	rlcf	(sqrt@frac+1)& (0+255),w,b
  7306  004026  0101               	movlb	1	; () banked
  7307  004028  6F8E               	movwf	(sqrt@tfrac+1)& (0+255),b
  7308  00402A  0101               	movlb	1	; () banked
  7309  00402C  359E               	rlcf	(sqrt@frac+2)& (0+255),w,b
  7310  00402E  0101               	movlb	1	; () banked
  7311  004030  6F8F               	movwf	(sqrt@tfrac+2)& (0+255),b
  7312  004032  0101               	movlb	1	; () banked
  7313  004034  359F               	rlcf	(sqrt@frac+3)& (0+255),w,b
  7314  004036  0101               	movlb	1	; () banked
  7315  004038  6F90               	movwf	(sqrt@tfrac+3)& (0+255),b
  7316                           
  7317                           ; BSR set to: 1
  7318  00403A  0E00               	movlw	0
  7319  00403C  0101               	movlb	1	; () banked
  7320  00403E  6F9C               	movwf	sqrt@frac& (0+255),b
  7321  004040  0E00               	movlw	0
  7322  004042  6F9D               	movwf	(sqrt@frac+1)& (0+255),b
  7323  004044  0E00               	movlw	0
  7324  004046  6F9E               	movwf	(sqrt@frac+2)& (0+255),b
  7325  004048  0E00               	movlw	0
  7326  00404A  6F9F               	movwf	(sqrt@frac+3)& (0+255),b
  7327                           
  7328                           ; BSR set to: 1
  7329  00404C  0E00               	movlw	0
  7330  00404E  0101               	movlb	1	; () banked
  7331  004050  6F92               	movwf	sqrt@grs& (0+255),b
  7332  004052  0E00               	movlw	0
  7333  004054  6F93               	movwf	(sqrt@grs+1)& (0+255),b
  7334  004056  0E00               	movlw	0
  7335  004058  6F94               	movwf	(sqrt@grs+2)& (0+255),b
  7336  00405A  0E01               	movlw	1
  7337  00405C  6F95               	movwf	(sqrt@grs+3)& (0+255),b
  7338                           
  7339                           ; BSR set to: 1
  7340  00405E  0101               	movlb	1	; () banked
  7341  004060  5191               	movf	sqrt@p& (0+255),w,b
  7342  004062  0101               	movlb	1	; () banked
  7343  004064  B4D8               	btfsc	status,2,c
  7344  004066  D006               	goto	l7694
  7345                           
  7346                           ; BSR set to: 1
  7347  004068  0101               	movlb	1	; () banked
  7348  00406A  90D8               	bcf	status,0,c
  7349  00406C  378D               	rlcf	sqrt@tfrac& (0+255),f,b
  7350  00406E  378E               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  7351  004070  378F               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  7352  004072  3790               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  7353  004074                     l7694:
  7354                           
  7355                           ; BSR set to: 1
  7356  004074  0E00               	movlw	0
  7357  004076  0101               	movlb	1	; () banked
  7358  004078  6F8C               	movwf	sqrt@i& (0+255),b
  7359  00407A  D07E               	goto	l7708
  7360  00407C                     l7696:
  7361                           
  7362                           ; BSR set to: 1
  7363  00407C  0101               	movlb	1	; () banked
  7364  00407E  5192               	movf	sqrt@grs& (0+255),w,b
  7365  004080  0101               	movlb	1	; () banked
  7366  004082  139C               	iorwf	sqrt@frac& (0+255),f,b
  7367  004084  0101               	movlb	1	; () banked
  7368  004086  5193               	movf	(sqrt@grs+1)& (0+255),w,b
  7369  004088  0101               	movlb	1	; () banked
  7370  00408A  139D               	iorwf	(sqrt@frac+1)& (0+255),f,b
  7371  00408C  0101               	movlb	1	; () banked
  7372  00408E  5194               	movf	(sqrt@grs+2)& (0+255),w,b
  7373  004090  0101               	movlb	1	; () banked
  7374  004092  139E               	iorwf	(sqrt@frac+2)& (0+255),f,b
  7375  004094  0101               	movlb	1	; () banked
  7376  004096  5195               	movf	(sqrt@grs+3)& (0+255),w,b
  7377  004098  0101               	movlb	1	; () banked
  7378  00409A  139F               	iorwf	(sqrt@frac+3)& (0+255),f,b
  7379  00409C  0101               	movlb	1	; () banked
  7380  00409E  519C               	movf	sqrt@frac& (0+255),w,b
  7381  0040A0  0101               	movlb	1	; () banked
  7382  0040A2  5D8D               	subwf	sqrt@tfrac& (0+255),w,b
  7383  0040A4  0101               	movlb	1	; () banked
  7384  0040A6  519D               	movf	(sqrt@frac+1)& (0+255),w,b
  7385  0040A8  0101               	movlb	1	; () banked
  7386  0040AA  598E               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
  7387  0040AC  0101               	movlb	1	; () banked
  7388  0040AE  519E               	movf	(sqrt@frac+2)& (0+255),w,b
  7389  0040B0  0101               	movlb	1	; () banked
  7390  0040B2  598F               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
  7391  0040B4  0101               	movlb	1	; () banked
  7392  0040B6  519F               	movf	(sqrt@frac+3)& (0+255),w,b
  7393  0040B8  0101               	movlb	1	; () banked
  7394  0040BA  5990               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
  7395  0040BC  A0D8               	btfss	status,0,c
  7396  0040BE  D021               	goto	l7700
  7397                           
  7398                           ; BSR set to: 1
  7399  0040C0  0101               	movlb	1	; () banked
  7400  0040C2  519C               	movf	sqrt@frac& (0+255),w,b
  7401  0040C4  0101               	movlb	1	; () banked
  7402  0040C6  5F8D               	subwf	sqrt@tfrac& (0+255),f,b
  7403  0040C8  0101               	movlb	1	; () banked
  7404  0040CA  519D               	movf	(sqrt@frac+1)& (0+255),w,b
  7405  0040CC  0101               	movlb	1	; () banked
  7406  0040CE  5B8E               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
  7407  0040D0  0101               	movlb	1	; () banked
  7408  0040D2  519E               	movf	(sqrt@frac+2)& (0+255),w,b
  7409  0040D4  0101               	movlb	1	; () banked
  7410  0040D6  5B8F               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
  7411  0040D8  0101               	movlb	1	; () banked
  7412  0040DA  519F               	movf	(sqrt@frac+3)& (0+255),w,b
  7413  0040DC  0101               	movlb	1	; () banked
  7414  0040DE  5B90               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
  7415  0040E0  0101               	movlb	1	; () banked
  7416  0040E2  5192               	movf	sqrt@grs& (0+255),w,b
  7417  0040E4  0101               	movlb	1	; () banked
  7418  0040E6  279C               	addwf	sqrt@frac& (0+255),f,b
  7419  0040E8  0101               	movlb	1	; () banked
  7420  0040EA  5193               	movf	(sqrt@grs+1)& (0+255),w,b
  7421  0040EC  0101               	movlb	1	; () banked
  7422  0040EE  239D               	addwfc	(sqrt@frac+1)& (0+255),f,b
  7423  0040F0  0101               	movlb	1	; () banked
  7424  0040F2  5194               	movf	(sqrt@grs+2)& (0+255),w,b
  7425  0040F4  0101               	movlb	1	; () banked
  7426  0040F6  239E               	addwfc	(sqrt@frac+2)& (0+255),f,b
  7427  0040F8  0101               	movlb	1	; () banked
  7428  0040FA  5195               	movf	(sqrt@grs+3)& (0+255),w,b
  7429  0040FC  0101               	movlb	1	; () banked
  7430  0040FE  239F               	addwfc	(sqrt@frac+3)& (0+255),f,b
  7431  004100  D01D               	goto	l7702
  7432  004102                     l7700:
  7433                           
  7434                           ; BSR set to: 1
  7435  004102  C192  F0C5         	movff	sqrt@grs,??_sqrt
  7436  004106  C193  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  7437  00410A  C194  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  7438  00410E  C195  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  7439  004112  0100               	movlb	0	; () banked
  7440  004114  1FC5               	comf	??_sqrt& (0+255),f,b
  7441  004116  1FC6               	comf	(??_sqrt+1)& (0+255),f,b
  7442  004118  1FC7               	comf	(??_sqrt+2)& (0+255),f,b
  7443  00411A  1FC8               	comf	(??_sqrt+3)& (0+255),f,b
  7444  00411C  0100               	movlb	0	; () banked
  7445  00411E  51C5               	movf	??_sqrt& (0+255),w,b
  7446  004120  0101               	movlb	1	; () banked
  7447  004122  179C               	andwf	sqrt@frac& (0+255),f,b
  7448  004124  0100               	movlb	0	; () banked
  7449  004126  51C6               	movf	(??_sqrt+1)& (0+255),w,b
  7450  004128  0101               	movlb	1	; () banked
  7451  00412A  179D               	andwf	(sqrt@frac+1)& (0+255),f,b
  7452  00412C  0100               	movlb	0	; () banked
  7453  00412E  51C7               	movf	(??_sqrt+2)& (0+255),w,b
  7454  004130  0101               	movlb	1	; () banked
  7455  004132  179E               	andwf	(sqrt@frac+2)& (0+255),f,b
  7456  004134  0100               	movlb	0	; () banked
  7457  004136  51C8               	movf	(??_sqrt+3)& (0+255),w,b
  7458  004138  0101               	movlb	1	; () banked
  7459  00413A  179F               	andwf	(sqrt@frac+3)& (0+255),f,b
  7460  00413C                     l7702:
  7461                           
  7462                           ; BSR set to: 1
  7463  00413C  C192  F0C5         	movff	sqrt@grs,??_sqrt
  7464  004140  C193  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  7465  004144  C194  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  7466  004148  C195  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  7467  00414C  0100               	movlb	0	; () banked
  7468  00414E  90D8               	bcf	status,0,c
  7469  004150  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7470  004152  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7471  004154  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7472  004156  33C5               	rrcf	??_sqrt& (0+255),f,b
  7473  004158  C0C5  F192         	movff	??_sqrt,sqrt@grs
  7474  00415C  C0C6  F193         	movff	??_sqrt+1,sqrt@grs+1
  7475  004160  C0C7  F194         	movff	??_sqrt+2,sqrt@grs+2
  7476  004164  C0C8  F195         	movff	??_sqrt+3,sqrt@grs+3
  7477                           
  7478                           ; BSR set to: 0
  7479  004168  0101               	movlb	1	; () banked
  7480  00416A  90D8               	bcf	status,0,c
  7481  00416C  378D               	rlcf	sqrt@tfrac& (0+255),f,b
  7482  00416E  378E               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  7483  004170  378F               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  7484  004172  3790               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  7485                           
  7486                           ; BSR set to: 1
  7487  004174  0101               	movlb	1	; () banked
  7488  004176  2B8C               	incf	sqrt@i& (0+255),f,b
  7489  004178                     l7708:
  7490                           
  7491                           ; BSR set to: 1
  7492  004178  0E18               	movlw	24
  7493  00417A  0101               	movlb	1	; () banked
  7494  00417C  658C               	cpfsgt	sqrt@i& (0+255),b
  7495  00417E  D77E               	goto	l7696
  7496                           
  7497                           ; BSR set to: 1
  7498                           
  7499                           ; BSR set to: 1
  7500  004180  C19C  F0C5         	movff	sqrt@frac,??_sqrt
  7501  004184  C19D  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7502  004188  C19E  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7503  00418C  C19F  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7504  004190  0100               	movlb	0	; () banked
  7505  004192  90D8               	bcf	status,0,c
  7506  004194  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7507  004196  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7508  004198  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7509  00419A  33C5               	rrcf	??_sqrt& (0+255),f,b
  7510  00419C  C0C5  F19C         	movff	??_sqrt,sqrt@frac
  7511  0041A0  C0C6  F19D         	movff	??_sqrt+1,sqrt@frac+1
  7512  0041A4  C0C7  F19E         	movff	??_sqrt+2,sqrt@frac+2
  7513  0041A8  C0C8  F19F         	movff	??_sqrt+3,sqrt@frac+3
  7514                           
  7515                           ; BSR set to: 0
  7516  0041AC  0E01               	movlw	1
  7517  0041AE  0101               	movlb	1	; () banked
  7518  0041B0  159C               	andwf	sqrt@frac& (0+255),w,b
  7519  0041B2  0101               	movlb	1	; () banked
  7520  0041B4  6F92               	movwf	sqrt@grs& (0+255),b
  7521  0041B6  0E00               	movlw	0
  7522  0041B8  0101               	movlb	1	; () banked
  7523  0041BA  159D               	andwf	(sqrt@frac+1)& (0+255),w,b
  7524  0041BC  0101               	movlb	1	; () banked
  7525  0041BE  6F93               	movwf	(sqrt@grs+1)& (0+255),b
  7526  0041C0  0E00               	movlw	0
  7527  0041C2  0101               	movlb	1	; () banked
  7528  0041C4  159E               	andwf	(sqrt@frac+2)& (0+255),w,b
  7529  0041C6  0101               	movlb	1	; () banked
  7530  0041C8  6F94               	movwf	(sqrt@grs+2)& (0+255),b
  7531  0041CA  0E00               	movlw	0
  7532  0041CC  0101               	movlb	1	; () banked
  7533  0041CE  159F               	andwf	(sqrt@frac+3)& (0+255),w,b
  7534  0041D0  0101               	movlb	1	; () banked
  7535  0041D2  6F95               	movwf	(sqrt@grs+3)& (0+255),b
  7536                           
  7537                           ; BSR set to: 1
  7538  0041D4  C19C  F0C5         	movff	sqrt@frac,??_sqrt
  7539  0041D8  C19D  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7540  0041DC  C19E  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7541  0041E0  C19F  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7542  0041E4  0100               	movlb	0	; () banked
  7543  0041E6  90D8               	bcf	status,0,c
  7544  0041E8  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7545  0041EA  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7546  0041EC  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7547  0041EE  33C5               	rrcf	??_sqrt& (0+255),f,b
  7548  0041F0  C0C5  F19C         	movff	??_sqrt,sqrt@frac
  7549  0041F4  C0C6  F19D         	movff	??_sqrt+1,sqrt@frac+1
  7550  0041F8  C0C7  F19E         	movff	??_sqrt+2,sqrt@frac+2
  7551  0041FC  C0C8  F19F         	movff	??_sqrt+3,sqrt@frac+3
  7552  004200  0101               	movlb	1	; () banked
  7553  004202  5192               	movf	sqrt@grs& (0+255),w,b
  7554  004204  0101               	movlb	1	; () banked
  7555  004206  279C               	addwf	sqrt@frac& (0+255),f,b
  7556  004208  0101               	movlb	1	; () banked
  7557  00420A  5193               	movf	(sqrt@grs+1)& (0+255),w,b
  7558  00420C  0101               	movlb	1	; () banked
  7559  00420E  239D               	addwfc	(sqrt@frac+1)& (0+255),f,b
  7560  004210  0101               	movlb	1	; () banked
  7561  004212  5194               	movf	(sqrt@grs+2)& (0+255),w,b
  7562  004214  0101               	movlb	1	; () banked
  7563  004216  239E               	addwfc	(sqrt@frac+2)& (0+255),f,b
  7564  004218  0101               	movlb	1	; () banked
  7565  00421A  5195               	movf	(sqrt@grs+3)& (0+255),w,b
  7566  00421C  0101               	movlb	1	; () banked
  7567  00421E  239F               	addwfc	(sqrt@frac+3)& (0+255),f,b
  7568                           
  7569                           ; BSR set to: 1
  7570  004220  0101               	movlb	1	; () banked
  7571  004222  A19F               	btfss	(sqrt@frac+3)& (0+255),0,b
  7572  004224  D019               	goto	l7720
  7573                           
  7574                           ; BSR set to: 1
  7575  004226  C19C  F0C5         	movff	sqrt@frac,??_sqrt
  7576  00422A  C19D  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7577  00422E  C19E  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7578  004232  C19F  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7579  004236  0100               	movlb	0	; () banked
  7580  004238  90D8               	bcf	status,0,c
  7581  00423A  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7582  00423C  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7583  00423E  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7584  004240  33C5               	rrcf	??_sqrt& (0+255),f,b
  7585  004242  C0C5  F19C         	movff	??_sqrt,sqrt@frac
  7586  004246  C0C6  F19D         	movff	??_sqrt+1,sqrt@frac+1
  7587  00424A  C0C7  F19E         	movff	??_sqrt+2,sqrt@frac+2
  7588  00424E  C0C8  F19F         	movff	??_sqrt+3,sqrt@frac+3
  7589  004252  0101               	movlb	1	; () banked
  7590  004254  4B96               	infsnz	sqrt@exp& (0+255),f,b
  7591  004256  2B97               	incf	(sqrt@exp+1)& (0+255),f,b
  7592  004258                     l7720:
  7593                           
  7594                           ; BSR set to: 1
  7595  004258  0EFF               	movlw	255
  7596  00425A  0101               	movlb	1	; () banked
  7597  00425C  159C               	andwf	sqrt@frac& (0+255),w,b
  7598  00425E  0101               	movlb	1	; () banked
  7599  004260  6F98               	movwf	sqrt@root& (0+255),b
  7600  004262  0EFF               	movlw	255
  7601  004264  0101               	movlb	1	; () banked
  7602  004266  159D               	andwf	(sqrt@frac+1)& (0+255),w,b
  7603  004268  0101               	movlb	1	; () banked
  7604  00426A  6F99               	movwf	(sqrt@root+1)& (0+255),b
  7605  00426C  0E7F               	movlw	127
  7606  00426E  0101               	movlb	1	; () banked
  7607  004270  159E               	andwf	(sqrt@frac+2)& (0+255),w,b
  7608  004272  0101               	movlb	1	; () banked
  7609  004274  6F9A               	movwf	(sqrt@root+2)& (0+255),b
  7610  004276  0E00               	movlw	0
  7611  004278  0101               	movlb	1	; () banked
  7612  00427A  159F               	andwf	(sqrt@frac+3)& (0+255),w,b
  7613  00427C  0101               	movlb	1	; () banked
  7614  00427E  6F9B               	movwf	(sqrt@root+3)& (0+255),b
  7615                           
  7616                           ; BSR set to: 1
  7617  004280  C196  F191         	movff	sqrt@exp,sqrt@p
  7618                           
  7619                           ; BSR set to: 1
  7620  004284  0101               	movlb	1	; () banked
  7621  004286  A191               	btfss	sqrt@p& (0+255),0,b
  7622  004288  D002               	goto	l7728
  7623                           
  7624                           ; BSR set to: 1
  7625  00428A  0101               	movlb	1	; () banked
  7626  00428C  8F9A               	bsf	(sqrt@root+2)& (0+255),7,b
  7627  00428E                     l7728:
  7628                           
  7629                           ; BSR set to: 1
  7630  00428E  0101               	movlb	1	; () banked
  7631  004290  90D8               	bcf	status,0,c
  7632  004292  3191               	rrcf	sqrt@p& (0+255),w,b
  7633  004294  0101               	movlb	1	; () banked
  7634  004296  6F9B               	movwf	(sqrt@root+3)& (0+255),b
  7635                           
  7636                           ; BSR set to: 1
  7637  004298  0101               	movlb	1	; () banked
  7638  00429A  9F9B               	bcf	(sqrt@root+3)& (0+255),7,b
  7639                           
  7640                           ; BSR set to: 1
  7641  00429C  C198  F0C1         	movff	sqrt@root,?_sqrt
  7642  0042A0  C199  F0C2         	movff	sqrt@root+1,?_sqrt+1
  7643  0042A4  C19A  F0C3         	movff	sqrt@root+2,?_sqrt+2
  7644  0042A8  C19B  F0C4         	movff	sqrt@root+3,?_sqrt+3
  7645  0042AC  0012               	return	
  7646  0042AE                     __end_of_sqrt:
  7647                           	opt stack 0
  7648                           tblptru	equ	0xFF8
  7649                           tblptrh	equ	0xFF7
  7650                           tblptrl	equ	0xFF6
  7651                           tablat	equ	0xFF5
  7652                           postinc0	equ	0xFEE
  7653                           wreg	equ	0xFE8
  7654                           postdec1	equ	0xFE5
  7655                           fsr1l	equ	0xFE1
  7656                           indf2	equ	0xFDF
  7657                           postinc2	equ	0xFDE
  7658                           postdec2	equ	0xFDD
  7659                           fsr2h	equ	0xFDA
  7660                           fsr2l	equ	0xFD9
  7661                           status	equ	0xFD8
  7662                           
  7663 ;; *************** function _atan *****************
  7664 ;; Defined at:
  7665 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atan.c"
  7666 ;; Parameters:    Size  Location     Type
  7667 ;;  f               4  113[BANK0 ] unsigned char 
  7668 ;; Auto vars:     Size  Location     Type
  7669 ;;  val             4   13[BANK1 ] unsigned char 
  7670 ;;  val_squared     4    9[BANK1 ] unsigned char 
  7671 ;;  x               4    4[BANK1 ] unsigned char 
  7672 ;;  y               4    0[BANK1 ] unsigned char 
  7673 ;;  recip           1    8[BANK1 ] unsigned char 
  7674 ;; Return value:  Size  Location     Type
  7675 ;;                  4  113[BANK0 ] unsigned char 
  7676 ;; Registers used:
  7677 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7678 ;; Tracked objects:
  7679 ;;		On entry : 0/0
  7680 ;;		On exit  : 0/0
  7681 ;;		Unchanged: 0/0
  7682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7683 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7684 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  7685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7686 ;;      Totals:         0       4      17       0       0       0       0       0       0       0       0       0       
      +0       0
  7687 ;;Total ram usage:       21 bytes
  7688 ;; Hardware stack levels used:    1
  7689 ;; Hardware stack levels required when called:    6
  7690 ;; This function calls:
  7691 ;;		___fladd
  7692 ;;		___fldiv
  7693 ;;		___flge
  7694 ;;		___flmul
  7695 ;;		___flneg
  7696 ;;		_eval_poly
  7697 ;;		_fabs
  7698 ;; This function is called by:
  7699 ;;		_asin
  7700 ;; This function uses a non-reentrant model
  7701 ;;
  7702                           
  7703                           	psect	text18
  7704  0052BA                     __ptext18:
  7705                           	opt stack 0
  7706  0052BA                     _atan:
  7707                           	opt stack 21
  7708                           
  7709                           ;incstack = 0
  7710  0052BA  C0D1  F0C1         	movff	atan@f,fabs@d
  7711  0052BE  C0D2  F0C2         	movff	atan@f+1,fabs@d+1
  7712  0052C2  C0D3  F0C3         	movff	atan@f+2,fabs@d+2
  7713  0052C6  C0D4  F0C4         	movff	atan@f+3,fabs@d+3
  7714  0052CA  ECBE  F032         	call	_fabs	;wreg free
  7715  0052CE  C0C1  F198         	movff	?_fabs,atan@val
  7716  0052D2  C0C2  F199         	movff	?_fabs+1,atan@val+1
  7717  0052D6  C0C3  F19A         	movff	?_fabs+2,atan@val+2
  7718  0052DA  C0C4  F19B         	movff	?_fabs+3,atan@val+3
  7719  0052DE  0101               	movlb	1	; () banked
  7720  0052E0  5198               	movf	atan@val& (0+255),w,b
  7721  0052E2  0101               	movlb	1	; () banked
  7722  0052E4  1199               	iorwf	(atan@val+1)& (0+255),w,b
  7723  0052E6  0101               	movlb	1	; () banked
  7724  0052E8  119A               	iorwf	(atan@val+2)& (0+255),w,b
  7725  0052EA  0101               	movlb	1	; () banked
  7726  0052EC  119B               	iorwf	(atan@val+3)& (0+255),w,b
  7727  0052EE  A4D8               	btfss	status,2,c
  7728  0052F0  D00A               	goto	l7748
  7729                           
  7730                           ; BSR set to: 1
  7731  0052F2  0E00               	movlw	0
  7732  0052F4  0100               	movlb	0	; () banked
  7733  0052F6  6FD1               	movwf	?_atan& (0+255),b
  7734  0052F8  0E00               	movlw	0
  7735  0052FA  6FD2               	movwf	(?_atan+1)& (0+255),b
  7736  0052FC  0E00               	movlw	0
  7737  0052FE  6FD3               	movwf	(?_atan+2)& (0+255),b
  7738  005300  0E00               	movlw	0
  7739  005302  6FD4               	movwf	(?_atan+3)& (0+255),b
  7740                           
  7741                           ; BSR set to: 0
  7742  005304  0012               	return	
  7743  005306                     l7748:
  7744  005306  0E00               	movlw	0
  7745  005308  0100               	movlb	0	; () banked
  7746  00530A  6FC5               	movwf	___flge@ff1& (0+255),b
  7747  00530C  0E00               	movlw	0
  7748  00530E  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  7749  005310  0E80               	movlw	128
  7750  005312  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  7751  005314  0E3F               	movlw	63
  7752  005316  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  7753  005318  C198  F0C9         	movff	atan@val,___flge@ff2
  7754  00531C  C199  F0CA         	movff	atan@val+1,___flge@ff2+1
  7755  005320  C19A  F0CB         	movff	atan@val+2,___flge@ff2+2
  7756  005324  C19B  F0CC         	movff	atan@val+3,___flge@ff2+3
  7757  005328  EC30  F02D         	call	___flge	;wreg free
  7758  00532C  0100               	movlb	0	; () banked
  7759  00532E  B0D8               	btfsc	status,0,c
  7760  005330  D002               	goto	u10270
  7761  005332  0E01               	movlw	1
  7762  005334  D001               	goto	u10280
  7763  005336                     u10270:
  7764  005336  0E00               	movlw	0
  7765  005338                     u10280:
  7766  005338  0101               	movlb	1	; () banked
  7767  00533A  6F93               	movwf	atan@recip& (0+255),b
  7768  00533C  0101               	movlb	1	; () banked
  7769  00533E  5193               	movf	atan@recip& (0+255),w,b
  7770  005340  B4D8               	btfsc	status,2,c
  7771  005342  D01B               	goto	l7752
  7772                           
  7773                           ; BSR set to: 1
  7774  005344  0E00               	movlw	0
  7775  005346  0100               	movlb	0	; () banked
  7776  005348  6F77               	movwf	___fldiv@b& (0+255),b
  7777  00534A  0E00               	movlw	0
  7778  00534C  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  7779  00534E  0E80               	movlw	128
  7780  005350  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  7781  005352  0E3F               	movlw	63
  7782  005354  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  7783  005356  C198  F07B         	movff	atan@val,___fldiv@a
  7784  00535A  C199  F07C         	movff	atan@val+1,___fldiv@a+1
  7785  00535E  C19A  F07D         	movff	atan@val+2,___fldiv@a+2
  7786  005362  C19B  F07E         	movff	atan@val+3,___fldiv@a+3
  7787  005366  EC57  F021         	call	___fldiv	;wreg free
  7788  00536A  C077  F198         	movff	?___fldiv,atan@val
  7789  00536E  C078  F199         	movff	?___fldiv+1,atan@val+1
  7790  005372  C079  F19A         	movff	?___fldiv+2,atan@val+2
  7791  005376  C07A  F19B         	movff	?___fldiv+3,atan@val+3
  7792  00537A                     l7752:
  7793  00537A  C198  F090         	movff	atan@val,___flmul@b
  7794  00537E  C199  F091         	movff	atan@val+1,___flmul@b+1
  7795  005382  C19A  F092         	movff	atan@val+2,___flmul@b+2
  7796  005386  C19B  F093         	movff	atan@val+3,___flmul@b+3
  7797  00538A  C198  F094         	movff	atan@val,___flmul@a
  7798  00538E  C199  F095         	movff	atan@val+1,___flmul@a+1
  7799  005392  C19A  F096         	movff	atan@val+2,___flmul@a+2
  7800  005396  C19B  F097         	movff	atan@val+3,___flmul@a+3
  7801  00539A  ECD9  F01A         	call	___flmul	;wreg free
  7802  00539E  C090  F194         	movff	?___flmul,atan@val_squared
  7803  0053A2  C091  F195         	movff	?___flmul+1,atan@val_squared+1
  7804  0053A6  C092  F196         	movff	?___flmul+2,atan@val_squared+2
  7805  0053AA  C093  F197         	movff	?___flmul+3,atan@val_squared+3
  7806  0053AE  C194  F0BD         	movff	atan@val_squared,eval_poly@x
  7807  0053B2  C195  F0BE         	movff	atan@val_squared+1,eval_poly@x+1
  7808  0053B6  C196  F0BF         	movff	atan@val_squared+2,eval_poly@x+2
  7809  0053BA  C197  F0C0         	movff	atan@val_squared+3,eval_poly@x+3
  7810  0053BE  0E19               	movlw	low atan@coeff_b
  7811  0053C0  0100               	movlb	0	; () banked
  7812  0053C2  6FC1               	movwf	eval_poly@d& (0+255),b
  7813  0053C4  0E0D               	movlw	high atan@coeff_b
  7814  0053C6  0100               	movlb	0	; () banked
  7815  0053C8  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  7816  0053CA  0E00               	movlw	0
  7817  0053CC  0100               	movlb	0	; () banked
  7818  0053CE  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  7819  0053D0  0E04               	movlw	4
  7820  0053D2  6FC3               	movwf	eval_poly@n& (0+255),b
  7821  0053D4  EC24  F02F         	call	_eval_poly	;wreg free
  7822  0053D8  C0BD  F18B         	movff	?_eval_poly,atan@y
  7823  0053DC  C0BE  F18C         	movff	?_eval_poly+1,atan@y+1
  7824  0053E0  C0BF  F18D         	movff	?_eval_poly+2,atan@y+2
  7825  0053E4  C0C0  F18E         	movff	?_eval_poly+3,atan@y+3
  7826  0053E8  C194  F0BD         	movff	atan@val_squared,eval_poly@x
  7827  0053EC  C195  F0BE         	movff	atan@val_squared+1,eval_poly@x+1
  7828  0053F0  C196  F0BF         	movff	atan@val_squared+2,eval_poly@x+2
  7829  0053F4  C197  F0C0         	movff	atan@val_squared+3,eval_poly@x+3
  7830  0053F8  0E01               	movlw	low atan@coeff_a
  7831  0053FA  0100               	movlb	0	; () banked
  7832  0053FC  6FC1               	movwf	eval_poly@d& (0+255),b
  7833  0053FE  0E0D               	movlw	high atan@coeff_a
  7834  005400  0100               	movlb	0	; () banked
  7835  005402  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  7836  005404  0E00               	movlw	0
  7837  005406  0100               	movlb	0	; () banked
  7838  005408  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  7839  00540A  0E05               	movlw	5
  7840  00540C  6FC3               	movwf	eval_poly@n& (0+255),b
  7841  00540E  EC24  F02F         	call	_eval_poly	;wreg free
  7842  005412  C0BD  F18F         	movff	?_eval_poly,atan@x
  7843  005416  C0BE  F190         	movff	?_eval_poly+1,atan@x+1
  7844  00541A  C0BF  F191         	movff	?_eval_poly+2,atan@x+2
  7845  00541E  C0C0  F192         	movff	?_eval_poly+3,atan@x+3
  7846  005422  C198  F090         	movff	atan@val,___flmul@b
  7847  005426  C199  F091         	movff	atan@val+1,___flmul@b+1
  7848  00542A  C19A  F092         	movff	atan@val+2,___flmul@b+2
  7849  00542E  C19B  F093         	movff	atan@val+3,___flmul@b+3
  7850  005432  C18B  F07B         	movff	atan@y,___fldiv@a
  7851  005436  C18C  F07C         	movff	atan@y+1,___fldiv@a+1
  7852  00543A  C18D  F07D         	movff	atan@y+2,___fldiv@a+2
  7853  00543E  C18E  F07E         	movff	atan@y+3,___fldiv@a+3
  7854  005442  C18F  F077         	movff	atan@x,___fldiv@b
  7855  005446  C190  F078         	movff	atan@x+1,___fldiv@b+1
  7856  00544A  C191  F079         	movff	atan@x+2,___fldiv@b+2
  7857  00544E  C192  F07A         	movff	atan@x+3,___fldiv@b+3
  7858  005452  EC57  F021         	call	___fldiv	;wreg free
  7859  005456  C077  F094         	movff	?___fldiv,___flmul@a
  7860  00545A  C078  F095         	movff	?___fldiv+1,___flmul@a+1
  7861  00545E  C079  F096         	movff	?___fldiv+2,___flmul@a+2
  7862  005462  C07A  F097         	movff	?___fldiv+3,___flmul@a+3
  7863  005466  ECD9  F01A         	call	___flmul	;wreg free
  7864  00546A  C090  F198         	movff	?___flmul,atan@val
  7865  00546E  C091  F199         	movff	?___flmul+1,atan@val+1
  7866  005472  C092  F19A         	movff	?___flmul+2,atan@val+2
  7867  005476  C093  F19B         	movff	?___flmul+3,atan@val+3
  7868  00547A  0101               	movlb	1	; () banked
  7869  00547C  5193               	movf	atan@recip& (0+255),w,b
  7870  00547E  0101               	movlb	1	; () banked
  7871  005480  B4D8               	btfsc	status,2,c
  7872  005482  D025               	goto	l7764
  7873                           
  7874                           ; BSR set to: 1
  7875  005484  C198  F0BD         	movff	atan@val,___flneg@f1
  7876  005488  C199  F0BE         	movff	atan@val+1,___flneg@f1+1
  7877  00548C  C19A  F0BF         	movff	atan@val+2,___flneg@f1+2
  7878  005490  C19B  F0C0         	movff	atan@val+3,___flneg@f1+3
  7879  005494  ECFA  F032         	call	___flneg	;wreg free
  7880  005498  C0BD  F0A9         	movff	?___flneg,___fladd@b
  7881  00549C  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  7882  0054A0  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  7883  0054A4  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  7884  0054A8  0EDB               	movlw	219
  7885  0054AA  0100               	movlb	0	; () banked
  7886  0054AC  6FAD               	movwf	___fladd@a& (0+255),b
  7887  0054AE  0E0F               	movlw	15
  7888  0054B0  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  7889  0054B2  0EC9               	movlw	201
  7890  0054B4  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  7891  0054B6  0E3F               	movlw	63
  7892  0054B8  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  7893  0054BA  EC85  F018         	call	___fladd	;wreg free
  7894  0054BE  C0A9  F198         	movff	?___fladd,atan@val
  7895  0054C2  C0AA  F199         	movff	?___fladd+1,atan@val+1
  7896  0054C6  C0AB  F19A         	movff	?___fladd+2,atan@val+2
  7897  0054CA  C0AC  F19B         	movff	?___fladd+3,atan@val+3
  7898  0054CE                     l7764:
  7899  0054CE  0100               	movlb	0	; () banked
  7900  0054D0  BFD4               	btfsc	(atan@f+3)& (0+255),7,b
  7901  0054D2  D009               	goto	l7768
  7902                           
  7903                           ; BSR set to: 0
  7904  0054D4  C198  F0D1         	movff	atan@val,?_atan
  7905  0054D8  C199  F0D2         	movff	atan@val+1,?_atan+1
  7906  0054DC  C19A  F0D3         	movff	atan@val+2,?_atan+2
  7907  0054E0  C19B  F0D4         	movff	atan@val+3,?_atan+3
  7908  0054E4  0012               	return	
  7909  0054E6                     l7768:
  7910                           
  7911                           ; BSR set to: 0
  7912  0054E6  C198  F0BD         	movff	atan@val,___flneg@f1
  7913  0054EA  C199  F0BE         	movff	atan@val+1,___flneg@f1+1
  7914  0054EE  C19A  F0BF         	movff	atan@val+2,___flneg@f1+2
  7915  0054F2  C19B  F0C0         	movff	atan@val+3,___flneg@f1+3
  7916  0054F6  ECFA  F032         	call	___flneg	;wreg free
  7917  0054FA  C0BD  F0D1         	movff	?___flneg,?_atan
  7918  0054FE  C0BE  F0D2         	movff	?___flneg+1,?_atan+1
  7919  005502  C0BF  F0D3         	movff	?___flneg+2,?_atan+2
  7920  005506  C0C0  F0D4         	movff	?___flneg+3,?_atan+3
  7921  00550A  0012               	return	
  7922  00550C                     __end_of_atan:
  7923                           	opt stack 0
  7924                           tblptru	equ	0xFF8
  7925                           tblptrh	equ	0xFF7
  7926                           tblptrl	equ	0xFF6
  7927                           tablat	equ	0xFF5
  7928                           postinc0	equ	0xFEE
  7929                           wreg	equ	0xFE8
  7930                           postdec1	equ	0xFE5
  7931                           fsr1l	equ	0xFE1
  7932                           indf2	equ	0xFDF
  7933                           postinc2	equ	0xFDE
  7934                           postdec2	equ	0xFDD
  7935                           fsr2h	equ	0xFDA
  7936                           fsr2l	equ	0xFD9
  7937                           status	equ	0xFD8
  7938                           
  7939 ;; *************** function _fabs *****************
  7940 ;; Defined at:
  7941 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fabs.c"
  7942 ;; Parameters:    Size  Location     Type
  7943 ;;  d               4   97[BANK0 ] unsigned char 
  7944 ;; Auto vars:     Size  Location     Type
  7945 ;;		None
  7946 ;; Return value:  Size  Location     Type
  7947 ;;                  4   97[BANK0 ] unsigned char 
  7948 ;; Registers used:
  7949 ;;		wreg, status,2, status,0, cstack
  7950 ;; Tracked objects:
  7951 ;;		On entry : 0/0
  7952 ;;		On exit  : 0/0
  7953 ;;		Unchanged: 0/0
  7954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7955 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7958 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7959 ;;Total ram usage:        4 bytes
  7960 ;; Hardware stack levels used:    1
  7961 ;; Hardware stack levels required when called:    5
  7962 ;; This function calls:
  7963 ;;		___flneg
  7964 ;; This function is called by:
  7965 ;;		_asin
  7966 ;;		_atan
  7967 ;; This function uses a non-reentrant model
  7968 ;;
  7969                           
  7970                           	psect	text19
  7971  00657C                     __ptext19:
  7972                           	opt stack 0
  7973  00657C                     _fabs:
  7974                           	opt stack 22
  7975                           
  7976                           ;incstack = 0
  7977  00657C  0100               	movlb	0	; () banked
  7978  00657E  AFC4               	btfss	(fabs@d+3)& (0+255),7,b
  7979  006580  D013               	goto	l1092
  7980                           
  7981                           ; BSR set to: 0
  7982  006582  C0C1  F0BD         	movff	fabs@d,___flneg@f1
  7983  006586  C0C2  F0BE         	movff	fabs@d+1,___flneg@f1+1
  7984  00658A  C0C3  F0BF         	movff	fabs@d+2,___flneg@f1+2
  7985  00658E  C0C4  F0C0         	movff	fabs@d+3,___flneg@f1+3
  7986  006592  ECFA  F032         	call	___flneg	;wreg free
  7987  006596  C0BD  F0C1         	movff	?___flneg,?_fabs
  7988  00659A  C0BE  F0C2         	movff	?___flneg+1,?_fabs+1
  7989  00659E  C0BF  F0C3         	movff	?___flneg+2,?_fabs+2
  7990  0065A2  C0C0  F0C4         	movff	?___flneg+3,?_fabs+3
  7991  0065A6  0012               	return	
  7992  0065A8                     l1092:
  7993                           
  7994                           ; BSR set to: 0
  7995  0065A8  C0C1  F0C1         	movff	fabs@d,?_fabs
  7996  0065AC  C0C2  F0C2         	movff	fabs@d+1,?_fabs+1
  7997  0065B0  C0C3  F0C3         	movff	fabs@d+2,?_fabs+2
  7998  0065B4  C0C4  F0C4         	movff	fabs@d+3,?_fabs+3
  7999  0065B8  0012               	return		;funcret
  8000  0065BA                     __end_of_fabs:
  8001                           	opt stack 0
  8002                           tblptru	equ	0xFF8
  8003                           tblptrh	equ	0xFF7
  8004                           tblptrl	equ	0xFF6
  8005                           tablat	equ	0xFF5
  8006                           postinc0	equ	0xFEE
  8007                           wreg	equ	0xFE8
  8008                           postdec1	equ	0xFE5
  8009                           fsr1l	equ	0xFE1
  8010                           indf2	equ	0xFDF
  8011                           postinc2	equ	0xFDE
  8012                           postdec2	equ	0xFDD
  8013                           fsr2h	equ	0xFDA
  8014                           fsr2l	equ	0xFD9
  8015                           status	equ	0xFD8
  8016                           
  8017 ;; *************** function ___flneg *****************
  8018 ;; Defined at:
  8019 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  8020 ;; Parameters:    Size  Location     Type
  8021 ;;  f1              4   93[BANK0 ] unsigned char 
  8022 ;; Auto vars:     Size  Location     Type
  8023 ;;		None
  8024 ;; Return value:  Size  Location     Type
  8025 ;;                  4   93[BANK0 ] unsigned char 
  8026 ;; Registers used:
  8027 ;;		wreg, status,2, status,0
  8028 ;; Tracked objects:
  8029 ;;		On entry : 0/0
  8030 ;;		On exit  : 0/0
  8031 ;;		Unchanged: 0/0
  8032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8033 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8036 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8037 ;;Total ram usage:        4 bytes
  8038 ;; Hardware stack levels used:    1
  8039 ;; Hardware stack levels required when called:    4
  8040 ;; This function calls:
  8041 ;;		Nothing
  8042 ;; This function is called by:
  8043 ;;		_park_routine
  8044 ;;		_matematica
  8045 ;;		_asin
  8046 ;;		_atan
  8047 ;;		_fabs
  8048 ;;		_sin
  8049 ;; This function uses a non-reentrant model
  8050 ;;
  8051                           
  8052                           	psect	text20
  8053  0065F4                     __ptext20:
  8054                           	opt stack 0
  8055  0065F4                     ___flneg:
  8056                           	opt stack 22
  8057                           
  8058                           ;incstack = 0
  8059  0065F4  0100               	movlb	0	; () banked
  8060  0065F6  51BD               	movf	___flneg@f1& (0+255),w,b
  8061  0065F8  0100               	movlb	0	; () banked
  8062  0065FA  11BE               	iorwf	(___flneg@f1+1)& (0+255),w,b
  8063  0065FC  0100               	movlb	0	; () banked
  8064  0065FE  11BF               	iorwf	(___flneg@f1+2)& (0+255),w,b
  8065  006600  0100               	movlb	0	; () banked
  8066  006602  11C0               	iorwf	(___flneg@f1+3)& (0+255),w,b
  8067  006604  B4D8               	btfsc	status,2,c
  8068  006606  D009               	goto	l7112
  8069                           
  8070                           ; BSR set to: 0
  8071  006608  0E00               	movlw	0
  8072  00660A  0100               	movlb	0	; () banked
  8073  00660C  1BBD               	xorwf	___flneg@f1& (0+255),f,b
  8074  00660E  0E00               	movlw	0
  8075  006610  1BBE               	xorwf	(___flneg@f1+1)& (0+255),f,b
  8076  006612  0E00               	movlw	0
  8077  006614  1BBF               	xorwf	(___flneg@f1+2)& (0+255),f,b
  8078  006616  0E80               	movlw	128
  8079  006618  1BC0               	xorwf	(___flneg@f1+3)& (0+255),f,b
  8080  00661A                     l7112:
  8081                           
  8082                           ; BSR set to: 0
  8083  00661A  C0BD  F0BD         	movff	___flneg@f1,?___flneg
  8084  00661E  C0BE  F0BE         	movff	___flneg@f1+1,?___flneg+1
  8085  006622  C0BF  F0BF         	movff	___flneg@f1+2,?___flneg+2
  8086  006626  C0C0  F0C0         	movff	___flneg@f1+3,?___flneg+3
  8087  00662A  0012               	return	
  8088  00662C                     __end_of___flneg:
  8089                           	opt stack 0
  8090                           tblptru	equ	0xFF8
  8091                           tblptrh	equ	0xFF7
  8092                           tblptrl	equ	0xFF6
  8093                           tablat	equ	0xFF5
  8094                           postinc0	equ	0xFEE
  8095                           wreg	equ	0xFE8
  8096                           postdec1	equ	0xFE5
  8097                           fsr1l	equ	0xFE1
  8098                           indf2	equ	0xFDF
  8099                           postinc2	equ	0xFDE
  8100                           postdec2	equ	0xFDD
  8101                           fsr2h	equ	0xFDA
  8102                           fsr2l	equ	0xFD9
  8103                           status	equ	0xFD8
  8104                           
  8105 ;; *************** function _eval_poly *****************
  8106 ;; Defined at:
  8107 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\evalpoly.c"
  8108 ;; Parameters:    Size  Location     Type
  8109 ;;  x               4   93[BANK0 ] unsigned char 
  8110 ;;  d               2   97[BANK0 ] PTR const 
  8111 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), atan@coeff_a(24), atan@coeff_b(20), 
  8112 ;;  n               2   99[BANK0 ] int 
  8113 ;; Auto vars:     Size  Location     Type
  8114 ;;  res             4  105[BANK0 ] int 
  8115 ;; Return value:  Size  Location     Type
  8116 ;;                  4   93[BANK0 ] int 
  8117 ;; Registers used:
  8118 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8119 ;; Tracked objects:
  8120 ;;		On entry : 0/0
  8121 ;;		On exit  : 0/0
  8122 ;;		Unchanged: 0/0
  8123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8124 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8125 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8126 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8127 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8128 ;;Total ram usage:       16 bytes
  8129 ;; Hardware stack levels used:    1
  8130 ;; Hardware stack levels required when called:    5
  8131 ;; This function calls:
  8132 ;;		___fladd
  8133 ;;		___flmul
  8134 ;; This function is called by:
  8135 ;;		_atan
  8136 ;;		_sin
  8137 ;; This function uses a non-reentrant model
  8138 ;;
  8139                           
  8140                           	psect	text21
  8141  005E48                     __ptext21:
  8142                           	opt stack 0
  8143  005E48                     _eval_poly:
  8144                           	opt stack 21
  8145                           
  8146                           ; BSR set to: 0
  8147                           ;incstack = 0
  8148  005E48  C0C3  F0C5         	movff	eval_poly@n,??_eval_poly
  8149  005E4C  C0C4  F0C6         	movff	eval_poly@n+1,??_eval_poly+1
  8150  005E50  0100               	movlb	0	; () banked
  8151  005E52  90D8               	bcf	status,0,c
  8152  005E54  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8153  005E56  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8154  005E58  0100               	movlb	0	; () banked
  8155  005E5A  90D8               	bcf	status,0,c
  8156  005E5C  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8157  005E5E  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8158  005E60  C0C1  F0C7         	movff	eval_poly@d,??_eval_poly+2
  8159  005E64  C0C2  F0C8         	movff	eval_poly@d+1,??_eval_poly+3
  8160  005E68  0100               	movlb	0	; () banked
  8161  005E6A  51C5               	movf	??_eval_poly& (0+255),w,b
  8162  005E6C  0100               	movlb	0	; () banked
  8163  005E6E  27C7               	addwf	(??_eval_poly+2)& (0+255),f,b
  8164  005E70  0100               	movlb	0	; () banked
  8165  005E72  51C6               	movf	(??_eval_poly+1)& (0+255),w,b
  8166  005E74  0100               	movlb	0	; () banked
  8167  005E76  23C8               	addwfc	(??_eval_poly+3)& (0+255),f,b
  8168  005E78  C0C7  FFF6         	movff	??_eval_poly+2,tblptrl
  8169  005E7C  C0C8  FFF7         	movff	??_eval_poly+3,tblptrh
  8170  005E80                     	if	0	;tblptru may be non-zero
  8171  005E80                     	endif
  8172  005E80                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8173  005E80  0E00               	movlw	low (__mediumconst shr (0+16))
  8174  005E82  6EF8               	movwf	tblptru,c
  8175  005E84                     	endif
  8176  005E84  0009               	tblrd		*+
  8177  005E86  CFF5 F0C9          	movff	tablat,eval_poly@res
  8178  005E8A  0009               	tblrd		*+
  8179  005E8C  CFF5 F0CA          	movff	tablat,eval_poly@res+1
  8180  005E90  0009               	tblrd		*+
  8181  005E92  CFF5 F0CB          	movff	tablat,eval_poly@res+2
  8182  005E96  000A               	tblrd		*-
  8183  005E98  CFF5 F0CC          	movff	tablat,eval_poly@res+3
  8184  005E9C  D052               	goto	l7370
  8185  005E9E                     l7368:
  8186                           
  8187                           ; BSR set to: 0
  8188  005E9E  C0C9  F094         	movff	eval_poly@res,___flmul@a
  8189  005EA2  C0CA  F095         	movff	eval_poly@res+1,___flmul@a+1
  8190  005EA6  C0CB  F096         	movff	eval_poly@res+2,___flmul@a+2
  8191  005EAA  C0CC  F097         	movff	eval_poly@res+3,___flmul@a+3
  8192  005EAE  C0BD  F090         	movff	eval_poly@x,___flmul@b
  8193  005EB2  C0BE  F091         	movff	eval_poly@x+1,___flmul@b+1
  8194  005EB6  C0BF  F092         	movff	eval_poly@x+2,___flmul@b+2
  8195  005EBA  C0C0  F093         	movff	eval_poly@x+3,___flmul@b+3
  8196  005EBE  ECD9  F01A         	call	___flmul	;wreg free
  8197  005EC2  C090  F0A9         	movff	?___flmul,___fladd@b
  8198  005EC6  C091  F0AA         	movff	?___flmul+1,___fladd@b+1
  8199  005ECA  C092  F0AB         	movff	?___flmul+2,___fladd@b+2
  8200  005ECE  C093  F0AC         	movff	?___flmul+3,___fladd@b+3
  8201  005ED2  0100               	movlb	0	; () banked
  8202  005ED4  07C3               	decf	eval_poly@n& (0+255),f,b
  8203  005ED6  A0D8               	btfss	status,0,c
  8204  005ED8  07C4               	decf	(eval_poly@n+1)& (0+255),f,b
  8205  005EDA  C0C3  F0C5         	movff	eval_poly@n,??_eval_poly
  8206  005EDE  C0C4  F0C6         	movff	eval_poly@n+1,??_eval_poly+1
  8207  005EE2  0100               	movlb	0	; () banked
  8208  005EE4  90D8               	bcf	status,0,c
  8209  005EE6  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8210  005EE8  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8211  005EEA  0100               	movlb	0	; () banked
  8212  005EEC  90D8               	bcf	status,0,c
  8213  005EEE  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8214  005EF0  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8215  005EF2  C0C1  F0C7         	movff	eval_poly@d,??_eval_poly+2
  8216  005EF6  C0C2  F0C8         	movff	eval_poly@d+1,??_eval_poly+3
  8217  005EFA  0100               	movlb	0	; () banked
  8218  005EFC  51C5               	movf	??_eval_poly& (0+255),w,b
  8219  005EFE  0100               	movlb	0	; () banked
  8220  005F00  27C7               	addwf	(??_eval_poly+2)& (0+255),f,b
  8221  005F02  0100               	movlb	0	; () banked
  8222  005F04  51C6               	movf	(??_eval_poly+1)& (0+255),w,b
  8223  005F06  0100               	movlb	0	; () banked
  8224  005F08  23C8               	addwfc	(??_eval_poly+3)& (0+255),f,b
  8225  005F0A  C0C7  FFF6         	movff	??_eval_poly+2,tblptrl
  8226  005F0E  C0C8  FFF7         	movff	??_eval_poly+3,tblptrh
  8227  005F12                     	if	0	;tblptru may be non-zero
  8228  005F12                     	endif
  8229  005F12                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8230  005F12  0E00               	movlw	low (__mediumconst shr (0+16))
  8231  005F14  6EF8               	movwf	tblptru,c
  8232  005F16                     	endif
  8233  005F16  0009               	tblrd		*+
  8234  005F18  CFF5 F0AD          	movff	tablat,___fladd@a
  8235  005F1C  0009               	tblrd		*+
  8236  005F1E  CFF5 F0AE          	movff	tablat,___fladd@a+1
  8237  005F22  0009               	tblrd		*+
  8238  005F24  CFF5 F0AF          	movff	tablat,___fladd@a+2
  8239  005F28  000A               	tblrd		*-
  8240  005F2A  CFF5 F0B0          	movff	tablat,___fladd@a+3
  8241  005F2E  EC85  F018         	call	___fladd	;wreg free
  8242  005F32  C0A9  F0C9         	movff	?___fladd,eval_poly@res
  8243  005F36  C0AA  F0CA         	movff	?___fladd+1,eval_poly@res+1
  8244  005F3A  C0AB  F0CB         	movff	?___fladd+2,eval_poly@res+2
  8245  005F3E  C0AC  F0CC         	movff	?___fladd+3,eval_poly@res+3
  8246  005F42                     l7370:
  8247  005F42  0100               	movlb	0	; () banked
  8248  005F44  51C3               	movf	eval_poly@n& (0+255),w,b
  8249  005F46  0100               	movlb	0	; () banked
  8250  005F48  11C4               	iorwf	(eval_poly@n+1)& (0+255),w,b
  8251  005F4A  A4D8               	btfss	status,2,c
  8252  005F4C  D7A8               	goto	l7368
  8253                           
  8254                           ; BSR set to: 0
  8255  005F4E  C0C9  F0BD         	movff	eval_poly@res,?_eval_poly
  8256  005F52  C0CA  F0BE         	movff	eval_poly@res+1,?_eval_poly+1
  8257  005F56  C0CB  F0BF         	movff	eval_poly@res+2,?_eval_poly+2
  8258  005F5A  C0CC  F0C0         	movff	eval_poly@res+3,?_eval_poly+3
  8259                           
  8260                           ; BSR set to: 0
  8261  005F5E  0012               	return		;funcret
  8262  005F60                     __end_of_eval_poly:
  8263                           	opt stack 0
  8264                           tblptru	equ	0xFF8
  8265                           tblptrh	equ	0xFF7
  8266                           tblptrl	equ	0xFF6
  8267                           tablat	equ	0xFF5
  8268                           postinc0	equ	0xFEE
  8269                           wreg	equ	0xFE8
  8270                           postdec1	equ	0xFE5
  8271                           fsr1l	equ	0xFE1
  8272                           indf2	equ	0xFDF
  8273                           postinc2	equ	0xFDE
  8274                           postdec2	equ	0xFDD
  8275                           fsr2h	equ	0xFDA
  8276                           fsr2l	equ	0xFD9
  8277                           status	equ	0xFD8
  8278                           
  8279 ;; *************** function ___flmul *****************
  8280 ;; Defined at:
  8281 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  8282 ;; Parameters:    Size  Location     Type
  8283 ;;  b               4   48[BANK0 ] int 
  8284 ;;  a               4   52[BANK0 ] int 
  8285 ;; Auto vars:     Size  Location     Type
  8286 ;;  prod            4   67[BANK0 ] struct .
  8287 ;;  grs             4   62[BANK0 ] unsigned long 
  8288 ;;  temp            2   71[BANK0 ] struct .
  8289 ;;  bexp            1   66[BANK0 ] unsigned char 
  8290 ;;  aexp            1   61[BANK0 ] unsigned char 
  8291 ;;  sign            1   60[BANK0 ] unsigned char 
  8292 ;; Return value:  Size  Location     Type
  8293 ;;                  4   48[BANK0 ] unsigned char 
  8294 ;; Registers used:
  8295 ;;		wreg, status,2, status,0, prodl, prodh
  8296 ;; Tracked objects:
  8297 ;;		On entry : 0/0
  8298 ;;		On exit  : 0/0
  8299 ;;		Unchanged: 0/0
  8300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8301 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8302 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8303 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8304 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8305 ;;Total ram usage:       25 bytes
  8306 ;; Hardware stack levels used:    1
  8307 ;; Hardware stack levels required when called:    4
  8308 ;; This function calls:
  8309 ;;		Nothing
  8310 ;; This function is called by:
  8311 ;;		_parallelo
  8312 ;;		_matematica
  8313 ;;		_asin
  8314 ;;		_atan
  8315 ;;		_eval_poly
  8316 ;;		_sin
  8317 ;; This function uses a non-reentrant model
  8318 ;;
  8319                           
  8320                           	psect	text22
  8321  0035B2                     __ptext22:
  8322                           	opt stack 0
  8323  0035B2                     ___flmul:
  8324                           	opt stack 21
  8325                           
  8326                           ; BSR set to: 0
  8327                           ;incstack = 0
  8328  0035B2  0100               	movlb	0	; () banked
  8329  0035B4  5193               	movf	(___flmul@b+3)& (0+255),w,b
  8330  0035B6  0B80               	andlw	128
  8331  0035B8  0100               	movlb	0	; () banked
  8332  0035BA  6F9C               	movwf	___flmul@sign& (0+255),b
  8333  0035BC  0100               	movlb	0	; () banked
  8334  0035BE  5193               	movf	(___flmul@b+3)& (0+255),w,b
  8335  0035C0  2593               	addwf	(___flmul@b+3)& (0+255),w,b
  8336  0035C2  0100               	movlb	0	; () banked
  8337  0035C4  6FA2               	movwf	___flmul@bexp& (0+255),b
  8338                           
  8339                           ; BSR set to: 0
  8340  0035C6  0100               	movlb	0	; () banked
  8341  0035C8  AF92               	btfss	(___flmul@b+2)& (0+255),7,b
  8342  0035CA  D002               	goto	l6962
  8343                           
  8344                           ; BSR set to: 0
  8345  0035CC  0100               	movlb	0	; () banked
  8346  0035CE  81A2               	bsf	___flmul@bexp& (0+255),0,b
  8347  0035D0                     l6962:
  8348                           
  8349                           ; BSR set to: 0
  8350  0035D0  0100               	movlb	0	; () banked
  8351  0035D2  51A2               	movf	___flmul@bexp& (0+255),w,b
  8352  0035D4  0100               	movlb	0	; () banked
  8353  0035D6  B4D8               	btfsc	status,2,c
  8354  0035D8  D010               	goto	l6970
  8355                           
  8356                           ; BSR set to: 0
  8357  0035DA  0100               	movlb	0	; () banked
  8358  0035DC  29A2               	incf	___flmul@bexp& (0+255),w,b
  8359  0035DE  A4D8               	btfss	status,2,c
  8360  0035E0  D009               	goto	l6968
  8361                           
  8362                           ; BSR set to: 0
  8363  0035E2  0E00               	movlw	0
  8364  0035E4  0100               	movlb	0	; () banked
  8365  0035E6  6F90               	movwf	___flmul@b& (0+255),b
  8366  0035E8  0E00               	movlw	0
  8367  0035EA  6F91               	movwf	(___flmul@b+1)& (0+255),b
  8368  0035EC  0E00               	movlw	0
  8369  0035EE  6F92               	movwf	(___flmul@b+2)& (0+255),b
  8370  0035F0  0E00               	movlw	0
  8371  0035F2  6F93               	movwf	(___flmul@b+3)& (0+255),b
  8372  0035F4                     l6968:
  8373                           
  8374                           ; BSR set to: 0
  8375  0035F4  0100               	movlb	0	; () banked
  8376  0035F6  8F92               	bsf	(___flmul@b+2)& (0+255),7,b
  8377  0035F8  D009               	goto	l6972
  8378  0035FA                     l6970:
  8379                           
  8380                           ; BSR set to: 0
  8381  0035FA  0E00               	movlw	0
  8382  0035FC  0100               	movlb	0	; () banked
  8383  0035FE  6F90               	movwf	___flmul@b& (0+255),b
  8384  003600  0E00               	movlw	0
  8385  003602  6F91               	movwf	(___flmul@b+1)& (0+255),b
  8386  003604  0E00               	movlw	0
  8387  003606  6F92               	movwf	(___flmul@b+2)& (0+255),b
  8388  003608  0E00               	movlw	0
  8389  00360A  6F93               	movwf	(___flmul@b+3)& (0+255),b
  8390  00360C                     l6972:
  8391                           
  8392                           ; BSR set to: 0
  8393  00360C  0100               	movlb	0	; () banked
  8394  00360E  5197               	movf	(___flmul@a+3)& (0+255),w,b
  8395  003610  0B80               	andlw	128
  8396  003612  0100               	movlb	0	; () banked
  8397  003614  1B9C               	xorwf	___flmul@sign& (0+255),f,b
  8398                           
  8399                           ; BSR set to: 0
  8400  003616  0100               	movlb	0	; () banked
  8401  003618  5197               	movf	(___flmul@a+3)& (0+255),w,b
  8402  00361A  2597               	addwf	(___flmul@a+3)& (0+255),w,b
  8403  00361C  0100               	movlb	0	; () banked
  8404  00361E  6F9D               	movwf	___flmul@aexp& (0+255),b
  8405                           
  8406                           ; BSR set to: 0
  8407  003620  0100               	movlb	0	; () banked
  8408  003622  AF96               	btfss	(___flmul@a+2)& (0+255),7,b
  8409  003624  D002               	goto	l6980
  8410                           
  8411                           ; BSR set to: 0
  8412  003626  0100               	movlb	0	; () banked
  8413  003628  819D               	bsf	___flmul@aexp& (0+255),0,b
  8414  00362A                     l6980:
  8415                           
  8416                           ; BSR set to: 0
  8417  00362A  0100               	movlb	0	; () banked
  8418  00362C  519D               	movf	___flmul@aexp& (0+255),w,b
  8419  00362E  0100               	movlb	0	; () banked
  8420  003630  B4D8               	btfsc	status,2,c
  8421  003632  D010               	goto	l6988
  8422                           
  8423                           ; BSR set to: 0
  8424  003634  0100               	movlb	0	; () banked
  8425  003636  299D               	incf	___flmul@aexp& (0+255),w,b
  8426  003638  A4D8               	btfss	status,2,c
  8427  00363A  D009               	goto	l6986
  8428                           
  8429                           ; BSR set to: 0
  8430  00363C  0E00               	movlw	0
  8431  00363E  0100               	movlb	0	; () banked
  8432  003640  6F94               	movwf	___flmul@a& (0+255),b
  8433  003642  0E00               	movlw	0
  8434  003644  6F95               	movwf	(___flmul@a+1)& (0+255),b
  8435  003646  0E00               	movlw	0
  8436  003648  6F96               	movwf	(___flmul@a+2)& (0+255),b
  8437  00364A  0E00               	movlw	0
  8438  00364C  6F97               	movwf	(___flmul@a+3)& (0+255),b
  8439  00364E                     l6986:
  8440                           
  8441                           ; BSR set to: 0
  8442  00364E  0100               	movlb	0	; () banked
  8443  003650  8F96               	bsf	(___flmul@a+2)& (0+255),7,b
  8444  003652  D009               	goto	l1437
  8445  003654                     l6988:
  8446                           
  8447                           ; BSR set to: 0
  8448  003654  0E00               	movlw	0
  8449  003656  0100               	movlb	0	; () banked
  8450  003658  6F94               	movwf	___flmul@a& (0+255),b
  8451  00365A  0E00               	movlw	0
  8452  00365C  6F95               	movwf	(___flmul@a+1)& (0+255),b
  8453  00365E  0E00               	movlw	0
  8454  003660  6F96               	movwf	(___flmul@a+2)& (0+255),b
  8455  003662  0E00               	movlw	0
  8456  003664  6F97               	movwf	(___flmul@a+3)& (0+255),b
  8457  003666                     l1437:
  8458                           
  8459                           ; BSR set to: 0
  8460  003666  0100               	movlb	0	; () banked
  8461  003668  519D               	movf	___flmul@aexp& (0+255),w,b
  8462  00366A  0100               	movlb	0	; () banked
  8463  00366C  B4D8               	btfsc	status,2,c
  8464  00366E  D005               	goto	l6992
  8465                           
  8466                           ; BSR set to: 0
  8467  003670  0100               	movlb	0	; () banked
  8468  003672  51A2               	movf	___flmul@bexp& (0+255),w,b
  8469  003674  0100               	movlb	0	; () banked
  8470  003676  A4D8               	btfss	status,2,c
  8471  003678  D00A               	goto	l6996
  8472  00367A                     l6992:
  8473                           
  8474                           ; BSR set to: 0
  8475  00367A  0E00               	movlw	0
  8476  00367C  0100               	movlb	0	; () banked
  8477  00367E  6F90               	movwf	?___flmul& (0+255),b
  8478  003680  0E00               	movlw	0
  8479  003682  6F91               	movwf	(?___flmul+1)& (0+255),b
  8480  003684  0E00               	movlw	0
  8481  003686  6F92               	movwf	(?___flmul+2)& (0+255),b
  8482  003688  0E00               	movlw	0
  8483  00368A  6F93               	movwf	(?___flmul+3)& (0+255),b
  8484                           
  8485                           ; BSR set to: 0
  8486  00368C  0012               	return	
  8487  00368E                     l6996:
  8488                           
  8489                           ; BSR set to: 0
  8490  00368E  0100               	movlb	0	; () banked
  8491  003690  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8492  003692  0100               	movlb	0	; () banked
  8493  003694  0390               	mulwf	___flmul@b& (0+255),b
  8494  003696  CFF3 F0A7          	movff	prodl,___flmul@temp
  8495  00369A  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8496                           
  8497                           ; BSR set to: 0
  8498  00369E  0100               	movlb	0	; () banked
  8499  0036A0  51A7               	movf	___flmul@temp& (0+255),w,b
  8500  0036A2  0100               	movlb	0	; () banked
  8501  0036A4  6F9E               	movwf	___flmul@grs& (0+255),b
  8502  0036A6  6B9F               	clrf	(___flmul@grs+1)& (0+255),b
  8503  0036A8  6BA0               	clrf	(___flmul@grs+2)& (0+255),b
  8504  0036AA  6BA1               	clrf	(___flmul@grs+3)& (0+255),b
  8505                           
  8506                           ; BSR set to: 0
  8507  0036AC  0100               	movlb	0	; () banked
  8508  0036AE  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8509  0036B0  0100               	movlb	0	; () banked
  8510  0036B2  6FA3               	movwf	___flmul@prod& (0+255),b
  8511  0036B4  6BA4               	clrf	(___flmul@prod+1)& (0+255),b
  8512  0036B6  6BA5               	clrf	(___flmul@prod+2)& (0+255),b
  8513  0036B8  6BA6               	clrf	(___flmul@prod+3)& (0+255),b
  8514  0036BA  0100               	movlb	0	; () banked
  8515  0036BC  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8516  0036BE  0100               	movlb	0	; () banked
  8517  0036C0  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8518  0036C2  CFF3 F0A7          	movff	prodl,___flmul@temp
  8519  0036C6  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8520                           
  8521                           ; BSR set to: 0
  8522  0036CA  0100               	movlb	0	; () banked
  8523  0036CC  51A7               	movf	___flmul@temp& (0+255),w,b
  8524  0036CE  0100               	movlb	0	; () banked
  8525  0036D0  279E               	addwf	___flmul@grs& (0+255),f,b
  8526  0036D2  0E00               	movlw	0
  8527  0036D4  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8528  0036D6  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8529  0036D8  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8530                           
  8531                           ; BSR set to: 0
  8532  0036DA  0100               	movlb	0	; () banked
  8533  0036DC  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8534  0036DE  0100               	movlb	0	; () banked
  8535  0036E0  27A3               	addwf	___flmul@prod& (0+255),f,b
  8536  0036E2  0E00               	movlw	0
  8537  0036E4  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8538  0036E6  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8539  0036E8  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8540  0036EA  0100               	movlb	0	; () banked
  8541  0036EC  5194               	movf	___flmul@a& (0+255),w,b
  8542  0036EE  0100               	movlb	0	; () banked
  8543  0036F0  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8544  0036F2  CFF3 F0A7          	movff	prodl,___flmul@temp
  8545  0036F6  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8546                           
  8547                           ; BSR set to: 0
  8548  0036FA  0100               	movlb	0	; () banked
  8549  0036FC  51A7               	movf	___flmul@temp& (0+255),w,b
  8550  0036FE  0100               	movlb	0	; () banked
  8551  003700  279E               	addwf	___flmul@grs& (0+255),f,b
  8552  003702  0E00               	movlw	0
  8553  003704  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8554  003706  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8555  003708  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8556                           
  8557                           ; BSR set to: 0
  8558  00370A  0100               	movlb	0	; () banked
  8559  00370C  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8560  00370E  0100               	movlb	0	; () banked
  8561  003710  27A3               	addwf	___flmul@prod& (0+255),f,b
  8562  003712  0E00               	movlw	0
  8563  003714  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8564  003716  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8565  003718  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8566                           
  8567                           ; BSR set to: 0
  8568  00371A  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8569  00371E  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8570  003722  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8571  003726  0100               	movlb	0	; () banked
  8572  003728  6B9E               	clrf	___flmul@grs& (0+255),b
  8573                           
  8574                           ; BSR set to: 0
  8575  00372A  0100               	movlb	0	; () banked
  8576  00372C  5194               	movf	___flmul@a& (0+255),w,b
  8577  00372E  0100               	movlb	0	; () banked
  8578  003730  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8579  003732  CFF3 F0A7          	movff	prodl,___flmul@temp
  8580  003736  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8581                           
  8582                           ; BSR set to: 0
  8583  00373A  0100               	movlb	0	; () banked
  8584  00373C  51A7               	movf	___flmul@temp& (0+255),w,b
  8585  00373E  0100               	movlb	0	; () banked
  8586  003740  279E               	addwf	___flmul@grs& (0+255),f,b
  8587  003742  0100               	movlb	0	; () banked
  8588  003744  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8589  003746  0100               	movlb	0	; () banked
  8590  003748  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8591  00374A  0E00               	movlw	0
  8592  00374C  0100               	movlb	0	; () banked
  8593  00374E  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8594  003750  0E00               	movlw	0
  8595  003752  0100               	movlb	0	; () banked
  8596  003754  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8597                           
  8598                           ; BSR set to: 0
  8599  003756  0100               	movlb	0	; () banked
  8600  003758  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8601  00375A  0100               	movlb	0	; () banked
  8602  00375C  0390               	mulwf	___flmul@b& (0+255),b
  8603  00375E  CFF3 F0A7          	movff	prodl,___flmul@temp
  8604  003762  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8605                           
  8606                           ; BSR set to: 0
  8607  003766  0100               	movlb	0	; () banked
  8608  003768  51A7               	movf	___flmul@temp& (0+255),w,b
  8609  00376A  0100               	movlb	0	; () banked
  8610  00376C  279E               	addwf	___flmul@grs& (0+255),f,b
  8611  00376E  0100               	movlb	0	; () banked
  8612  003770  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8613  003772  0100               	movlb	0	; () banked
  8614  003774  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8615  003776  0E00               	movlw	0
  8616  003778  0100               	movlb	0	; () banked
  8617  00377A  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8618  00377C  0E00               	movlw	0
  8619  00377E  0100               	movlb	0	; () banked
  8620  003780  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8621                           
  8622                           ; BSR set to: 0
  8623  003782  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8624  003786  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8625  00378A  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8626  00378E  0100               	movlb	0	; () banked
  8627  003790  6B9E               	clrf	___flmul@grs& (0+255),b
  8628  003792  0100               	movlb	0	; () banked
  8629  003794  5194               	movf	___flmul@a& (0+255),w,b
  8630  003796  0100               	movlb	0	; () banked
  8631  003798  0390               	mulwf	___flmul@b& (0+255),b
  8632  00379A  CFF3 F0A7          	movff	prodl,___flmul@temp
  8633  00379E  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8634                           
  8635                           ; BSR set to: 0
  8636  0037A2  0100               	movlb	0	; () banked
  8637  0037A4  51A7               	movf	___flmul@temp& (0+255),w,b
  8638  0037A6  0100               	movlb	0	; () banked
  8639  0037A8  279E               	addwf	___flmul@grs& (0+255),f,b
  8640  0037AA  0100               	movlb	0	; () banked
  8641  0037AC  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8642  0037AE  0100               	movlb	0	; () banked
  8643  0037B0  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8644  0037B2  0E00               	movlw	0
  8645  0037B4  0100               	movlb	0	; () banked
  8646  0037B6  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8647  0037B8  0E00               	movlw	0
  8648  0037BA  0100               	movlb	0	; () banked
  8649  0037BC  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8650                           
  8651                           ; BSR set to: 0
  8652  0037BE  0100               	movlb	0	; () banked
  8653  0037C0  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8654  0037C2  0100               	movlb	0	; () banked
  8655  0037C4  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8656  0037C6  CFF3 F0A7          	movff	prodl,___flmul@temp
  8657  0037CA  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8658  0037CE  0100               	movlb	0	; () banked
  8659  0037D0  51A7               	movf	___flmul@temp& (0+255),w,b
  8660  0037D2  0100               	movlb	0	; () banked
  8661  0037D4  27A3               	addwf	___flmul@prod& (0+255),f,b
  8662  0037D6  0100               	movlb	0	; () banked
  8663  0037D8  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8664  0037DA  0100               	movlb	0	; () banked
  8665  0037DC  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8666  0037DE  0E00               	movlw	0
  8667  0037E0  0100               	movlb	0	; () banked
  8668  0037E2  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8669  0037E4  0E00               	movlw	0
  8670  0037E6  0100               	movlb	0	; () banked
  8671  0037E8  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8672                           
  8673                           ; BSR set to: 0
  8674  0037EA  0100               	movlb	0	; () banked
  8675  0037EC  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8676  0037EE  0100               	movlb	0	; () banked
  8677  0037F0  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8678  0037F2  CFF3 F0A7          	movff	prodl,___flmul@temp
  8679  0037F6  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8680                           
  8681                           ; BSR set to: 0
  8682  0037FA  0100               	movlb	0	; () banked
  8683  0037FC  51A7               	movf	___flmul@temp& (0+255),w,b
  8684  0037FE  0100               	movlb	0	; () banked
  8685  003800  27A3               	addwf	___flmul@prod& (0+255),f,b
  8686  003802  0100               	movlb	0	; () banked
  8687  003804  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8688  003806  0100               	movlb	0	; () banked
  8689  003808  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8690  00380A  0E00               	movlw	0
  8691  00380C  0100               	movlb	0	; () banked
  8692  00380E  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8693  003810  0E00               	movlw	0
  8694  003812  0100               	movlb	0	; () banked
  8695  003814  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8696  003816  0100               	movlb	0	; () banked
  8697  003818  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8698  00381A  0100               	movlb	0	; () banked
  8699  00381C  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8700  00381E  CFF3 F0A7          	movff	prodl,___flmul@temp
  8701  003822  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8702                           
  8703                           ; BSR set to: 0
  8704  003826  0100               	movlb	0	; () banked
  8705  003828  51A7               	movf	___flmul@temp& (0+255),w,b
  8706  00382A  0100               	movlb	0	; () banked
  8707  00382C  6F98               	movwf	??___flmul& (0+255),b
  8708  00382E  0100               	movlb	0	; () banked
  8709  003830  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8710  003832  0100               	movlb	0	; () banked
  8711  003834  6F99               	movwf	(??___flmul+1)& (0+255),b
  8712  003836  0100               	movlb	0	; () banked
  8713  003838  6B9A               	clrf	(??___flmul+2)& (0+255),b
  8714  00383A  0100               	movlb	0	; () banked
  8715  00383C  6B9B               	clrf	(??___flmul+3)& (0+255),b
  8716  00383E  C09A  F09B         	movff	??___flmul+2,??___flmul+3
  8717  003842  C099  F09A         	movff	??___flmul+1,??___flmul+2
  8718  003846  C098  F099         	movff	??___flmul,??___flmul+1
  8719  00384A  0100               	movlb	0	; () banked
  8720  00384C  6B98               	clrf	??___flmul& (0+255),b
  8721  00384E  0100               	movlb	0	; () banked
  8722  003850  5198               	movf	??___flmul& (0+255),w,b
  8723  003852  0100               	movlb	0	; () banked
  8724  003854  27A3               	addwf	___flmul@prod& (0+255),f,b
  8725  003856  0100               	movlb	0	; () banked
  8726  003858  5199               	movf	(??___flmul+1)& (0+255),w,b
  8727  00385A  0100               	movlb	0	; () banked
  8728  00385C  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8729  00385E  0100               	movlb	0	; () banked
  8730  003860  519A               	movf	(??___flmul+2)& (0+255),w,b
  8731  003862  0100               	movlb	0	; () banked
  8732  003864  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8733  003866  0100               	movlb	0	; () banked
  8734  003868  519B               	movf	(??___flmul+3)& (0+255),w,b
  8735  00386A  0100               	movlb	0	; () banked
  8736  00386C  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8737                           
  8738                           ; BSR set to: 0
  8739  00386E  C09E  F098         	movff	___flmul@grs,??___flmul
  8740  003872  C09F  F099         	movff	___flmul@grs+1,??___flmul+1
  8741  003876  C0A0  F09A         	movff	___flmul@grs+2,??___flmul+2
  8742  00387A  C0A1  F09B         	movff	___flmul@grs+3,??___flmul+3
  8743  00387E  0E19               	movlw	25
  8744  003880  D006               	goto	u9080
  8745  003882                     u9085:
  8746  003882  0100               	movlb	0	; () banked
  8747  003884  90D8               	bcf	status,0,c
  8748  003886  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  8749  003888  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  8750  00388A  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  8751  00388C  3398               	rrcf	??___flmul& (0+255),f,b
  8752  00388E                     u9080:
  8753  00388E  2EE8               	decfsz	wreg,f,c
  8754  003890  D7F8               	goto	u9085
  8755  003892  0100               	movlb	0	; () banked
  8756  003894  5198               	movf	??___flmul& (0+255),w,b
  8757  003896  0100               	movlb	0	; () banked
  8758  003898  27A3               	addwf	___flmul@prod& (0+255),f,b
  8759  00389A  0100               	movlb	0	; () banked
  8760  00389C  5199               	movf	(??___flmul+1)& (0+255),w,b
  8761  00389E  0100               	movlb	0	; () banked
  8762  0038A0  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8763  0038A2  0100               	movlb	0	; () banked
  8764  0038A4  519A               	movf	(??___flmul+2)& (0+255),w,b
  8765  0038A6  0100               	movlb	0	; () banked
  8766  0038A8  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8767  0038AA  0100               	movlb	0	; () banked
  8768  0038AC  519B               	movf	(??___flmul+3)& (0+255),w,b
  8769  0038AE  0100               	movlb	0	; () banked
  8770  0038B0  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8771                           
  8772                           ; BSR set to: 0
  8773  0038B2  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8774  0038B6  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8775  0038BA  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8776  0038BE  0100               	movlb	0	; () banked
  8777  0038C0  6B9E               	clrf	___flmul@grs& (0+255),b
  8778                           
  8779                           ; BSR set to: 0
  8780  0038C2  0100               	movlb	0	; () banked
  8781  0038C4  519D               	movf	___flmul@aexp& (0+255),w,b
  8782  0038C6  C0A2  F098         	movff	___flmul@bexp,??___flmul
  8783  0038CA  0100               	movlb	0	; () banked
  8784  0038CC  6B99               	clrf	(??___flmul+1)& (0+255),b
  8785  0038CE  0100               	movlb	0	; () banked
  8786  0038D0  2798               	addwf	??___flmul& (0+255),f,b
  8787  0038D2  0E00               	movlw	0
  8788  0038D4  2399               	addwfc	(??___flmul+1)& (0+255),f,b
  8789  0038D6  0E82               	movlw	130
  8790  0038D8  0100               	movlb	0	; () banked
  8791  0038DA  2598               	addwf	??___flmul& (0+255),w,b
  8792  0038DC  0100               	movlb	0	; () banked
  8793  0038DE  6FA7               	movwf	___flmul@temp& (0+255),b
  8794  0038E0  0EFF               	movlw	255
  8795  0038E2  0100               	movlb	0	; () banked
  8796  0038E4  2199               	addwfc	(??___flmul+1)& (0+255),w,b
  8797  0038E6  0100               	movlb	0	; () banked
  8798  0038E8  6FA8               	movwf	(___flmul@temp+1)& (0+255),b
  8799  0038EA  D015               	goto	l7044
  8800  0038EC                     l7038:
  8801                           
  8802                           ; BSR set to: 0
  8803  0038EC  0100               	movlb	0	; () banked
  8804  0038EE  90D8               	bcf	status,0,c
  8805  0038F0  37A3               	rlcf	___flmul@prod& (0+255),f,b
  8806  0038F2  37A4               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8807  0038F4  37A5               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8808  0038F6  37A6               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8809                           
  8810                           ; BSR set to: 0
  8811  0038F8  0100               	movlb	0	; () banked
  8812  0038FA  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  8813  0038FC  D002               	goto	l1444
  8814                           
  8815                           ; BSR set to: 0
  8816  0038FE  0100               	movlb	0	; () banked
  8817  003900  81A3               	bsf	___flmul@prod& (0+255),0,b
  8818  003902                     l1444:
  8819                           
  8820                           ; BSR set to: 0
  8821  003902  0100               	movlb	0	; () banked
  8822  003904  90D8               	bcf	status,0,c
  8823  003906  379E               	rlcf	___flmul@grs& (0+255),f,b
  8824  003908  379F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8825  00390A  37A0               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8826  00390C  37A1               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8827  00390E  0100               	movlb	0	; () banked
  8828  003910  07A7               	decf	___flmul@temp& (0+255),f,b
  8829  003912  A0D8               	btfss	status,0,c
  8830  003914  07A8               	decf	(___flmul@temp+1)& (0+255),f,b
  8831  003916                     l7044:
  8832                           
  8833                           ; BSR set to: 0
  8834  003916  0100               	movlb	0	; () banked
  8835  003918  AFA5               	btfss	(___flmul@prod+2)& (0+255),7,b
  8836  00391A  D7E8               	goto	l7038
  8837                           
  8838                           ; BSR set to: 0
  8839                           
  8840                           ; BSR set to: 0
  8841  00391C  0E00               	movlw	0
  8842  00391E  0100               	movlb	0	; () banked
  8843  003920  6F9D               	movwf	___flmul@aexp& (0+255),b
  8844                           
  8845                           ; BSR set to: 0
  8846  003922  0100               	movlb	0	; () banked
  8847  003924  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  8848  003926  D024               	goto	l1446
  8849                           
  8850                           ; BSR set to: 0
  8851  003928  0EFF               	movlw	255
  8852  00392A  0100               	movlb	0	; () banked
  8853  00392C  159E               	andwf	___flmul@grs& (0+255),w,b
  8854  00392E  0100               	movlb	0	; () banked
  8855  003930  6F98               	movwf	??___flmul& (0+255),b
  8856  003932  0EFF               	movlw	255
  8857  003934  0100               	movlb	0	; () banked
  8858  003936  159F               	andwf	(___flmul@grs+1)& (0+255),w,b
  8859  003938  0100               	movlb	0	; () banked
  8860  00393A  6F99               	movwf	(??___flmul+1)& (0+255),b
  8861  00393C  0EFF               	movlw	255
  8862  00393E  0100               	movlb	0	; () banked
  8863  003940  15A0               	andwf	(___flmul@grs+2)& (0+255),w,b
  8864  003942  0100               	movlb	0	; () banked
  8865  003944  6F9A               	movwf	(??___flmul+2)& (0+255),b
  8866  003946  0E7F               	movlw	127
  8867  003948  0100               	movlb	0	; () banked
  8868  00394A  15A1               	andwf	(___flmul@grs+3)& (0+255),w,b
  8869  00394C  0100               	movlb	0	; () banked
  8870  00394E  6F9B               	movwf	(??___flmul+3)& (0+255),b
  8871  003950  0100               	movlb	0	; () banked
  8872  003952  5198               	movf	??___flmul& (0+255),w,b
  8873  003954  0100               	movlb	0	; () banked
  8874  003956  1199               	iorwf	(??___flmul+1)& (0+255),w,b
  8875  003958  0100               	movlb	0	; () banked
  8876  00395A  119A               	iorwf	(??___flmul+2)& (0+255),w,b
  8877  00395C  0100               	movlb	0	; () banked
  8878  00395E  119B               	iorwf	(??___flmul+3)& (0+255),w,b
  8879  003960  A4D8               	btfss	status,2,c
  8880  003962  D003               	goto	l7054
  8881                           
  8882                           ; BSR set to: 0
  8883                           
  8884                           ; BSR set to: 0
  8885  003964  0100               	movlb	0	; () banked
  8886  003966  A1A3               	btfss	___flmul@prod& (0+255),0,b
  8887  003968  D003               	goto	l1446
  8888  00396A                     l7054:
  8889                           
  8890                           ; BSR set to: 0
  8891  00396A  0E01               	movlw	1
  8892  00396C  0100               	movlb	0	; () banked
  8893  00396E  6F9D               	movwf	___flmul@aexp& (0+255),b
  8894  003970                     l1446:
  8895                           
  8896                           ; BSR set to: 0
  8897  003970  0100               	movlb	0	; () banked
  8898  003972  519D               	movf	___flmul@aexp& (0+255),w,b
  8899  003974  0100               	movlb	0	; () banked
  8900  003976  B4D8               	btfsc	status,2,c
  8901  003978  D023               	goto	l7064
  8902                           
  8903                           ; BSR set to: 0
  8904  00397A  0E01               	movlw	1
  8905  00397C  0100               	movlb	0	; () banked
  8906  00397E  27A3               	addwf	___flmul@prod& (0+255),f,b
  8907  003980  0E00               	movlw	0
  8908  003982  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8909  003984  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8910  003986  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8911                           
  8912                           ; BSR set to: 0
  8913  003988  0100               	movlb	0	; () banked
  8914  00398A  A1A6               	btfss	(___flmul@prod+3)& (0+255),0,b
  8915  00398C  D019               	goto	l7064
  8916                           
  8917                           ; BSR set to: 0
  8918  00398E  C0A3  F098         	movff	___flmul@prod,??___flmul
  8919  003992  C0A4  F099         	movff	___flmul@prod+1,??___flmul+1
  8920  003996  C0A5  F09A         	movff	___flmul@prod+2,??___flmul+2
  8921  00399A  C0A6  F09B         	movff	___flmul@prod+3,??___flmul+3
  8922  00399E  0100               	movlb	0	; () banked
  8923  0039A0  359B               	rlcf	(??___flmul+3)& (0+255),w,b
  8924  0039A2  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  8925  0039A4  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  8926  0039A6  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  8927  0039A8  3398               	rrcf	??___flmul& (0+255),f,b
  8928  0039AA  C098  F0A3         	movff	??___flmul,___flmul@prod
  8929  0039AE  C099  F0A4         	movff	??___flmul+1,___flmul@prod+1
  8930  0039B2  C09A  F0A5         	movff	??___flmul+2,___flmul@prod+2
  8931  0039B6  C09B  F0A6         	movff	??___flmul+3,___flmul@prod+3
  8932                           
  8933                           ; BSR set to: 0
  8934  0039BA  0100               	movlb	0	; () banked
  8935  0039BC  4BA7               	infsnz	___flmul@temp& (0+255),f,b
  8936  0039BE  2BA8               	incf	(___flmul@temp+1)& (0+255),f,b
  8937  0039C0                     l7064:
  8938                           
  8939                           ; BSR set to: 0
  8940  0039C0  0100               	movlb	0	; () banked
  8941  0039C2  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8942  0039C4  D010               	goto	l7068
  8943  0039C6  0100               	movlb	0	; () banked
  8944  0039C8  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8945  0039CA  E104               	bnz	u9160
  8946  0039CC  0100               	movlb	0	; () banked
  8947  0039CE  29A7               	incf	___flmul@temp& (0+255),w,b
  8948  0039D0  A0D8               	btfss	status,0,c
  8949  0039D2  D009               	goto	l7068
  8950  0039D4                     u9160:
  8951                           
  8952                           ; BSR set to: 0
  8953  0039D4  0E00               	movlw	0
  8954  0039D6  0100               	movlb	0	; () banked
  8955  0039D8  6FA3               	movwf	___flmul@prod& (0+255),b
  8956  0039DA  0E00               	movlw	0
  8957  0039DC  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  8958  0039DE  0E80               	movlw	128
  8959  0039E0  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  8960  0039E2  0E7F               	movlw	127
  8961  0039E4  D02B               	goto	L2
  8962  0039E6                     l7068:
  8963                           
  8964                           ; BSR set to: 0
  8965  0039E6  0100               	movlb	0	; () banked
  8966  0039E8  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8967  0039EA  D007               	goto	l7070
  8968  0039EC  0100               	movlb	0	; () banked
  8969  0039EE  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8970  0039F0  E111               	bnz	l1454
  8971  0039F2  0100               	movlb	0	; () banked
  8972  0039F4  05A7               	decf	___flmul@temp& (0+255),w,b
  8973  0039F6  B0D8               	btfsc	status,0,c
  8974  0039F8  D00D               	goto	l1454
  8975  0039FA                     l7070:
  8976                           
  8977                           ; BSR set to: 0
  8978  0039FA  0E00               	movlw	0
  8979  0039FC  0100               	movlb	0	; () banked
  8980  0039FE  6FA3               	movwf	___flmul@prod& (0+255),b
  8981  003A00  0E00               	movlw	0
  8982  003A02  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  8983  003A04  0E00               	movlw	0
  8984  003A06  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  8985  003A08  0E00               	movlw	0
  8986  003A0A  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  8987  003A0C  0E00               	movlw	0
  8988  003A0E  0100               	movlb	0	; () banked
  8989  003A10  6F9C               	movwf	___flmul@sign& (0+255),b
  8990  003A12  D015               	goto	l7080
  8991  003A14                     l1454:
  8992                           
  8993                           ; BSR set to: 0
  8994  003A14  C0A7  F0A2         	movff	___flmul@temp,___flmul@bexp
  8995                           
  8996                           ; BSR set to: 0
  8997  003A18  0EFF               	movlw	255
  8998  003A1A  0100               	movlb	0	; () banked
  8999  003A1C  17A3               	andwf	___flmul@prod& (0+255),f,b
  9000  003A1E  0EFF               	movlw	255
  9001  003A20  17A4               	andwf	(___flmul@prod+1)& (0+255),f,b
  9002  003A22  0E7F               	movlw	127
  9003  003A24  17A5               	andwf	(___flmul@prod+2)& (0+255),f,b
  9004  003A26  0E00               	movlw	0
  9005  003A28  17A6               	andwf	(___flmul@prod+3)& (0+255),f,b
  9006                           
  9007                           ; BSR set to: 0
  9008  003A2A  0100               	movlb	0	; () banked
  9009  003A2C  A1A2               	btfss	___flmul@bexp& (0+255),0,b
  9010  003A2E  D002               	goto	l7078
  9011                           
  9012                           ; BSR set to: 0
  9013  003A30  0100               	movlb	0	; () banked
  9014  003A32  8FA5               	bsf	(___flmul@prod+2)& (0+255),7,b
  9015  003A34                     l7078:
  9016                           
  9017                           ; BSR set to: 0
  9018  003A34  0100               	movlb	0	; () banked
  9019  003A36  90D8               	bcf	status,0,c
  9020  003A38  31A2               	rrcf	___flmul@bexp& (0+255),w,b
  9021  003A3A  0100               	movlb	0	; () banked
  9022  003A3C                     L2:
  9023  003A3C  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  9024  003A3E                     l7080:
  9025                           
  9026                           ; BSR set to: 0
  9027  003A3E  0100               	movlb	0	; () banked
  9028  003A40  519C               	movf	___flmul@sign& (0+255),w,b
  9029  003A42  0100               	movlb	0	; () banked
  9030  003A44  13A6               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9031                           
  9032                           ; BSR set to: 0
  9033  003A46  C0A3  F090         	movff	___flmul@prod,?___flmul
  9034  003A4A  C0A4  F091         	movff	___flmul@prod+1,?___flmul+1
  9035  003A4E  C0A5  F092         	movff	___flmul@prod+2,?___flmul+2
  9036  003A52  C0A6  F093         	movff	___flmul@prod+3,?___flmul+3
  9037  003A56  0012               	return	
  9038  003A58                     __end_of___flmul:
  9039                           	opt stack 0
  9040                           tblptru	equ	0xFF8
  9041                           tblptrh	equ	0xFF7
  9042                           tblptrl	equ	0xFF6
  9043                           tablat	equ	0xFF5
  9044                           prodh	equ	0xFF4
  9045                           prodl	equ	0xFF3
  9046                           postinc0	equ	0xFEE
  9047                           wreg	equ	0xFE8
  9048                           postdec1	equ	0xFE5
  9049                           fsr1l	equ	0xFE1
  9050                           indf2	equ	0xFDF
  9051                           postinc2	equ	0xFDE
  9052                           postdec2	equ	0xFDD
  9053                           fsr2h	equ	0xFDA
  9054                           fsr2l	equ	0xFD9
  9055                           status	equ	0xFD8
  9056                           
  9057 ;; *************** function ___fladd *****************
  9058 ;; Defined at:
  9059 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  9060 ;; Parameters:    Size  Location     Type
  9061 ;;  b               4   73[BANK0 ] unsigned char 
  9062 ;;  a               4   77[BANK0 ] unsigned char 
  9063 ;; Auto vars:     Size  Location     Type
  9064 ;;  grs             1   92[BANK0 ] unsigned char 
  9065 ;;  bexp            1   91[BANK0 ] unsigned char 
  9066 ;;  aexp            1   90[BANK0 ] unsigned char 
  9067 ;;  signs           1   89[BANK0 ] unsigned char 
  9068 ;; Return value:  Size  Location     Type
  9069 ;;                  4   73[BANK0 ] unsigned char 
  9070 ;; Registers used:
  9071 ;;		wreg, status,2, status,0
  9072 ;; Tracked objects:
  9073 ;;		On entry : 0/0
  9074 ;;		On exit  : 0/0
  9075 ;;		Unchanged: 0/0
  9076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9077 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9078 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9079 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9080 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9081 ;;Total ram usage:       20 bytes
  9082 ;; Hardware stack levels used:    1
  9083 ;; Hardware stack levels required when called:    4
  9084 ;; This function calls:
  9085 ;;		Nothing
  9086 ;; This function is called by:
  9087 ;;		_park_routine
  9088 ;;		_parallelo
  9089 ;;		_matematica
  9090 ;;		_asin
  9091 ;;		_atan
  9092 ;;		_cos
  9093 ;;		_eval_poly
  9094 ;;		_sin
  9095 ;;		___flsub
  9096 ;;		_floor
  9097 ;; This function uses a non-reentrant model
  9098 ;;
  9099                           
  9100                           	psect	text23
  9101  00310A                     __ptext23:
  9102                           	opt stack 0
  9103  00310A                     ___fladd:
  9104                           	opt stack 21
  9105                           
  9106                           ; BSR set to: 0
  9107                           ;incstack = 0
  9108  00310A  0100               	movlb	0	; () banked
  9109  00310C  51AC               	movf	(___fladd@b+3)& (0+255),w,b
  9110  00310E  0B80               	andlw	128
  9111  003110  0100               	movlb	0	; () banked
  9112  003112  6FB9               	movwf	___fladd@signs& (0+255),b
  9113  003114  0100               	movlb	0	; () banked
  9114  003116  51AC               	movf	(___fladd@b+3)& (0+255),w,b
  9115  003118  25AC               	addwf	(___fladd@b+3)& (0+255),w,b
  9116  00311A  0100               	movlb	0	; () banked
  9117  00311C  6FBB               	movwf	___fladd@bexp& (0+255),b
  9118                           
  9119                           ; BSR set to: 0
  9120  00311E  0100               	movlb	0	; () banked
  9121  003120  AFAB               	btfss	(___fladd@b+2)& (0+255),7,b
  9122  003122  D002               	goto	l6760
  9123                           
  9124                           ; BSR set to: 0
  9125  003124  0100               	movlb	0	; () banked
  9126  003126  81BB               	bsf	___fladd@bexp& (0+255),0,b
  9127  003128                     l6760:
  9128                           
  9129                           ; BSR set to: 0
  9130  003128  0100               	movlb	0	; () banked
  9131  00312A  51BB               	movf	___fladd@bexp& (0+255),w,b
  9132  00312C  0100               	movlb	0	; () banked
  9133  00312E  B4D8               	btfsc	status,2,c
  9134  003130  D012               	goto	l6770
  9135                           
  9136                           ; BSR set to: 0
  9137  003132  0100               	movlb	0	; () banked
  9138  003134  29BB               	incf	___fladd@bexp& (0+255),w,b
  9139  003136  A4D8               	btfss	status,2,c
  9140  003138  D009               	goto	l6766
  9141                           
  9142                           ; BSR set to: 0
  9143  00313A  0E00               	movlw	0
  9144  00313C  0100               	movlb	0	; () banked
  9145  00313E  6FA9               	movwf	___fladd@b& (0+255),b
  9146  003140  0E00               	movlw	0
  9147  003142  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9148  003144  0E00               	movlw	0
  9149  003146  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9150  003148  0E00               	movlw	0
  9151  00314A  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9152  00314C                     l6766:
  9153                           
  9154                           ; BSR set to: 0
  9155  00314C  0100               	movlb	0	; () banked
  9156  00314E  8FAB               	bsf	(___fladd@b+2)& (0+255),7,b
  9157                           
  9158                           ; BSR set to: 0
  9159  003150  0E00               	movlw	0
  9160  003152  0100               	movlb	0	; () banked
  9161  003154  D008               	goto	L3
  9162  003156                     l6770:
  9163                           
  9164                           ; BSR set to: 0
  9165  003156  0E00               	movlw	0
  9166  003158  0100               	movlb	0	; () banked
  9167  00315A  6FA9               	movwf	___fladd@b& (0+255),b
  9168  00315C  0E00               	movlw	0
  9169  00315E  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9170  003160  0E00               	movlw	0
  9171  003162  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9172  003164  0E00               	movlw	0
  9173  003166                     L3:
  9174  003166  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9175                           
  9176                           ; BSR set to: 0
  9177                           
  9178                           ; BSR set to: 0
  9179  003168  0100               	movlb	0	; () banked
  9180  00316A  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9181  00316C  0B80               	andlw	128
  9182  00316E  0100               	movlb	0	; () banked
  9183  003170  6FBA               	movwf	___fladd@aexp& (0+255),b
  9184                           
  9185                           ; BSR set to: 0
  9186  003172  0100               	movlb	0	; () banked
  9187  003174  51B9               	movf	___fladd@signs& (0+255),w,b
  9188  003176  0100               	movlb	0	; () banked
  9189  003178  19BA               	xorwf	___fladd@aexp& (0+255),w,b
  9190  00317A  B4D8               	btfsc	status,2,c
  9191  00317C  D002               	goto	l6778
  9192                           
  9193                           ; BSR set to: 0
  9194  00317E  0100               	movlb	0	; () banked
  9195  003180  8DB9               	bsf	___fladd@signs& (0+255),6,b
  9196  003182                     l6778:
  9197                           
  9198                           ; BSR set to: 0
  9199  003182  0100               	movlb	0	; () banked
  9200  003184  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9201  003186  25B0               	addwf	(___fladd@a+3)& (0+255),w,b
  9202  003188  0100               	movlb	0	; () banked
  9203  00318A  6FBA               	movwf	___fladd@aexp& (0+255),b
  9204                           
  9205                           ; BSR set to: 0
  9206  00318C  0100               	movlb	0	; () banked
  9207  00318E  AFAF               	btfss	(___fladd@a+2)& (0+255),7,b
  9208  003190  D002               	goto	l6784
  9209                           
  9210                           ; BSR set to: 0
  9211  003192  0100               	movlb	0	; () banked
  9212  003194  81BA               	bsf	___fladd@aexp& (0+255),0,b
  9213  003196                     l6784:
  9214                           
  9215                           ; BSR set to: 0
  9216  003196  0100               	movlb	0	; () banked
  9217  003198  51BA               	movf	___fladd@aexp& (0+255),w,b
  9218  00319A  0100               	movlb	0	; () banked
  9219  00319C  B4D8               	btfsc	status,2,c
  9220  00319E  D012               	goto	l6794
  9221                           
  9222                           ; BSR set to: 0
  9223  0031A0  0100               	movlb	0	; () banked
  9224  0031A2  29BA               	incf	___fladd@aexp& (0+255),w,b
  9225  0031A4  A4D8               	btfss	status,2,c
  9226  0031A6  D009               	goto	l6790
  9227                           
  9228                           ; BSR set to: 0
  9229  0031A8  0E00               	movlw	0
  9230  0031AA  0100               	movlb	0	; () banked
  9231  0031AC  6FAD               	movwf	___fladd@a& (0+255),b
  9232  0031AE  0E00               	movlw	0
  9233  0031B0  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  9234  0031B2  0E00               	movlw	0
  9235  0031B4  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  9236  0031B6  0E00               	movlw	0
  9237  0031B8  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  9238  0031BA                     l6790:
  9239                           
  9240                           ; BSR set to: 0
  9241  0031BA  0100               	movlb	0	; () banked
  9242  0031BC  8FAF               	bsf	(___fladd@a+2)& (0+255),7,b
  9243                           
  9244                           ; BSR set to: 0
  9245  0031BE  0E00               	movlw	0
  9246  0031C0  0100               	movlb	0	; () banked
  9247  0031C2  D008               	goto	L4
  9248  0031C4                     l6794:
  9249                           
  9250                           ; BSR set to: 0
  9251  0031C4  0E00               	movlw	0
  9252  0031C6  0100               	movlb	0	; () banked
  9253  0031C8  6FAD               	movwf	___fladd@a& (0+255),b
  9254  0031CA  0E00               	movlw	0
  9255  0031CC  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  9256  0031CE  0E00               	movlw	0
  9257  0031D0  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  9258  0031D2  0E00               	movlw	0
  9259  0031D4                     L4:
  9260  0031D4  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  9261                           
  9262                           ; BSR set to: 0
  9263                           
  9264                           ; BSR set to: 0
  9265  0031D6  0100               	movlb	0	; () banked
  9266  0031D8  51BB               	movf	___fladd@bexp& (0+255),w,b
  9267  0031DA  0100               	movlb	0	; () banked
  9268  0031DC  5DBA               	subwf	___fladd@aexp& (0+255),w,b
  9269  0031DE  B0D8               	btfsc	status,0,c
  9270  0031E0  D024               	goto	l6832
  9271                           
  9272                           ; BSR set to: 0
  9273  0031E2  0100               	movlb	0	; () banked
  9274  0031E4  ADB9               	btfss	___fladd@signs& (0+255),6,b
  9275  0031E6  D003               	goto	l6802
  9276                           
  9277                           ; BSR set to: 0
  9278  0031E8  0E80               	movlw	128
  9279  0031EA  0100               	movlb	0	; () banked
  9280  0031EC  1BB9               	xorwf	___fladd@signs& (0+255),f,b
  9281  0031EE                     l6802:
  9282                           
  9283                           ; BSR set to: 0
  9284  0031EE  C0BB  F0BC         	movff	___fladd@bexp,___fladd@grs
  9285                           
  9286                           ; BSR set to: 0
  9287  0031F2  C0BA  F0BB         	movff	___fladd@aexp,___fladd@bexp
  9288                           
  9289                           ; BSR set to: 0
  9290  0031F6  C0BC  F0BA         	movff	___fladd@grs,___fladd@aexp
  9291                           
  9292                           ; BSR set to: 0
  9293  0031FA  C0A9  F0BC         	movff	___fladd@b,___fladd@grs
  9294                           
  9295                           ; BSR set to: 0
  9296  0031FE  C0AD  F0A9         	movff	___fladd@a,___fladd@b
  9297                           
  9298                           ; BSR set to: 0
  9299  003202  C0BC  F0AD         	movff	___fladd@grs,___fladd@a
  9300                           
  9301                           ; BSR set to: 0
  9302  003206  C0AA  F0BC         	movff	___fladd@b+1,___fladd@grs
  9303                           
  9304                           ; BSR set to: 0
  9305  00320A  C0AE  F0AA         	movff	___fladd@a+1,___fladd@b+1
  9306                           
  9307                           ; BSR set to: 0
  9308  00320E  C0BC  F0AE         	movff	___fladd@grs,___fladd@a+1
  9309                           
  9310                           ; BSR set to: 0
  9311  003212  C0AB  F0BC         	movff	___fladd@b+2,___fladd@grs
  9312                           
  9313                           ; BSR set to: 0
  9314  003216  C0AF  F0AB         	movff	___fladd@a+2,___fladd@b+2
  9315                           
  9316                           ; BSR set to: 0
  9317  00321A  C0BC  F0AF         	movff	___fladd@grs,___fladd@a+2
  9318                           
  9319                           ; BSR set to: 0
  9320  00321E  C0AC  F0BC         	movff	___fladd@b+3,___fladd@grs
  9321                           
  9322                           ; BSR set to: 0
  9323  003222  C0B0  F0AC         	movff	___fladd@a+3,___fladd@b+3
  9324                           
  9325                           ; BSR set to: 0
  9326  003226  C0BC  F0B0         	movff	___fladd@grs,___fladd@a+3
  9327  00322A                     l6832:
  9328                           
  9329                           ; BSR set to: 0
  9330  00322A  0E00               	movlw	0
  9331  00322C  0100               	movlb	0	; () banked
  9332  00322E  6FBC               	movwf	___fladd@grs& (0+255),b
  9333                           
  9334                           ; BSR set to: 0
  9335  003230  0100               	movlb	0	; () banked
  9336  003232  51BB               	movf	___fladd@bexp& (0+255),w,b
  9337  003234  0100               	movlb	0	; () banked
  9338  003236  6FB1               	movwf	??___fladd& (0+255),b
  9339  003238  6BB2               	clrf	(??___fladd+1)& (0+255),b
  9340  00323A  0100               	movlb	0	; () banked
  9341  00323C  1FB1               	comf	??___fladd& (0+255),f,b
  9342  00323E  1FB2               	comf	(??___fladd+1)& (0+255),f,b
  9343  003240  4BB1               	infsnz	??___fladd& (0+255),f,b
  9344  003242  2BB2               	incf	(??___fladd+1)& (0+255),f,b
  9345  003244  0100               	movlb	0	; () banked
  9346  003246  51BA               	movf	___fladd@aexp& (0+255),w,b
  9347  003248  0100               	movlb	0	; () banked
  9348  00324A  6FB3               	movwf	(??___fladd+2)& (0+255),b
  9349  00324C  6BB4               	clrf	(??___fladd+3)& (0+255),b
  9350  00324E  0100               	movlb	0	; () banked
  9351  003250  51B1               	movf	??___fladd& (0+255),w,b
  9352  003252  0100               	movlb	0	; () banked
  9353  003254  27B3               	addwf	(??___fladd+2)& (0+255),f,b
  9354  003256  0100               	movlb	0	; () banked
  9355  003258  51B2               	movf	(??___fladd+1)& (0+255),w,b
  9356  00325A  0100               	movlb	0	; () banked
  9357  00325C  23B4               	addwfc	(??___fladd+3)& (0+255),f,b
  9358  00325E  0100               	movlb	0	; () banked
  9359  003260  BFB4               	btfsc	(??___fladd+3)& (0+255),7,b
  9360  003262  D03D               	goto	l1352
  9361  003264  0100               	movlb	0	; () banked
  9362  003266  51B4               	movf	(??___fladd+3)& (0+255),w,b
  9363  003268  E105               	bnz	u8700
  9364  00326A  0E1A               	movlw	26
  9365  00326C  0100               	movlb	0	; () banked
  9366  00326E  5DB3               	subwf	(??___fladd+2)& (0+255),w,b
  9367  003270  A0D8               	btfss	status,0,c
  9368  003272  D035               	goto	l1352
  9369  003274                     u8700:
  9370                           
  9371                           ; BSR set to: 0
  9372  003274  0100               	movlb	0	; () banked
  9373  003276  51A9               	movf	___fladd@b& (0+255),w,b
  9374  003278  0100               	movlb	0	; () banked
  9375  00327A  11AA               	iorwf	(___fladd@b+1)& (0+255),w,b
  9376  00327C  0100               	movlb	0	; () banked
  9377  00327E  11AB               	iorwf	(___fladd@b+2)& (0+255),w,b
  9378  003280  0100               	movlb	0	; () banked
  9379  003282  11AC               	iorwf	(___fladd@b+3)& (0+255),w,b
  9380  003284  B4D8               	btfsc	status,2,c
  9381  003286  D002               	goto	u8710
  9382  003288  0E01               	movlw	1
  9383  00328A  D001               	goto	u8720
  9384  00328C                     u8710:
  9385  00328C  0E00               	movlw	0
  9386  00328E                     u8720:
  9387  00328E  0100               	movlb	0	; () banked
  9388  003290  6FBC               	movwf	___fladd@grs& (0+255),b
  9389                           
  9390                           ; BSR set to: 0
  9391  003292  0E00               	movlw	0
  9392  003294  0100               	movlb	0	; () banked
  9393  003296  6FA9               	movwf	___fladd@b& (0+255),b
  9394  003298  0E00               	movlw	0
  9395  00329A  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9396  00329C  0E00               	movlw	0
  9397  00329E  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9398  0032A0  0E00               	movlw	0
  9399  0032A2  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9400                           
  9401                           ; BSR set to: 0
  9402  0032A4  C0BA  F0BB         	movff	___fladd@aexp,___fladd@bexp
  9403  0032A8  D020               	goto	l1351
  9404  0032AA                     l1353:
  9405                           
  9406                           ; BSR set to: 0
  9407  0032AA  0100               	movlb	0	; () banked
  9408  0032AC  A1BC               	btfss	___fladd@grs& (0+255),0,b
  9409  0032AE  D007               	goto	l6844
  9410                           
  9411                           ; BSR set to: 0
  9412  0032B0  0100               	movlb	0	; () banked
  9413  0032B2  90D8               	bcf	status,0,c
  9414  0032B4  31BC               	rrcf	___fladd@grs& (0+255),w,b
  9415  0032B6  0901               	iorlw	1
  9416  0032B8  0100               	movlb	0	; () banked
  9417  0032BA  6FBC               	movwf	___fladd@grs& (0+255),b
  9418  0032BC  D003               	goto	l6846
  9419  0032BE                     l6844:
  9420                           
  9421                           ; BSR set to: 0
  9422  0032BE  0100               	movlb	0	; () banked
  9423  0032C0  90D8               	bcf	status,0,c
  9424  0032C2  33BC               	rrcf	___fladd@grs& (0+255),f,b
  9425  0032C4                     l6846:
  9426                           
  9427                           ; BSR set to: 0
  9428  0032C4  0100               	movlb	0	; () banked
  9429  0032C6  A1A9               	btfss	___fladd@b& (0+255),0,b
  9430  0032C8  D002               	goto	l6850
  9431                           
  9432                           ; BSR set to: 0
  9433  0032CA  0100               	movlb	0	; () banked
  9434  0032CC  8FBC               	bsf	___fladd@grs& (0+255),7,b
  9435  0032CE                     l6850:
  9436                           
  9437                           ; BSR set to: 0
  9438  0032CE  0100               	movlb	0	; () banked
  9439  0032D0  35AC               	rlcf	(___fladd@b+3)& (0+255),w,b
  9440  0032D2  33AC               	rrcf	(___fladd@b+3)& (0+255),f,b
  9441  0032D4  33AB               	rrcf	(___fladd@b+2)& (0+255),f,b
  9442  0032D6  33AA               	rrcf	(___fladd@b+1)& (0+255),f,b
  9443  0032D8  33A9               	rrcf	___fladd@b& (0+255),f,b
  9444                           
  9445                           ; BSR set to: 0
  9446  0032DA  0100               	movlb	0	; () banked
  9447  0032DC  2BBB               	incf	___fladd@bexp& (0+255),f,b
  9448  0032DE                     l1352:
  9449                           
  9450                           ; BSR set to: 0
  9451  0032DE  0100               	movlb	0	; () banked
  9452  0032E0  51BA               	movf	___fladd@aexp& (0+255),w,b
  9453  0032E2  0100               	movlb	0	; () banked
  9454  0032E4  5DBB               	subwf	___fladd@bexp& (0+255),w,b
  9455  0032E6  A0D8               	btfss	status,0,c
  9456  0032E8  D7E0               	goto	l1353
  9457  0032EA                     l1351:
  9458                           
  9459                           ; BSR set to: 0
  9460  0032EA  0100               	movlb	0	; () banked
  9461  0032EC  BDB9               	btfsc	___fladd@signs& (0+255),6,b
  9462  0032EE  D03F               	goto	l6878
  9463                           
  9464                           ; BSR set to: 0
  9465  0032F0  0100               	movlb	0	; () banked
  9466  0032F2  51BB               	movf	___fladd@bexp& (0+255),w,b
  9467  0032F4  0100               	movlb	0	; () banked
  9468  0032F6  A4D8               	btfss	status,2,c
  9469  0032F8  D00A               	goto	l6860
  9470                           
  9471                           ; BSR set to: 0
  9472  0032FA  0E00               	movlw	0
  9473  0032FC  0100               	movlb	0	; () banked
  9474  0032FE  6FA9               	movwf	?___fladd& (0+255),b
  9475  003300  0E00               	movlw	0
  9476  003302  6FAA               	movwf	(?___fladd+1)& (0+255),b
  9477  003304  0E00               	movlw	0
  9478  003306  6FAB               	movwf	(?___fladd+2)& (0+255),b
  9479  003308  0E00               	movlw	0
  9480  00330A  6FAC               	movwf	(?___fladd+3)& (0+255),b
  9481                           
  9482                           ; BSR set to: 0
  9483  00330C  0012               	return	
  9484  00330E                     l6860:
  9485                           
  9486                           ; BSR set to: 0
  9487  00330E  0100               	movlb	0	; () banked
  9488  003310  51AD               	movf	___fladd@a& (0+255),w,b
  9489  003312  0100               	movlb	0	; () banked
  9490  003314  27A9               	addwf	___fladd@b& (0+255),f,b
  9491  003316  0100               	movlb	0	; () banked
  9492  003318  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9493  00331A  0100               	movlb	0	; () banked
  9494  00331C  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
  9495  00331E  0100               	movlb	0	; () banked
  9496  003320  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9497  003322  0100               	movlb	0	; () banked
  9498  003324  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
  9499  003326  0100               	movlb	0	; () banked
  9500  003328  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9501  00332A  0100               	movlb	0	; () banked
  9502  00332C  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
  9503                           
  9504                           ; BSR set to: 0
  9505  00332E  0100               	movlb	0	; () banked
  9506  003330  A1AC               	btfss	(___fladd@b+3)& (0+255),0,b
  9507  003332  D0CC               	goto	l6914
  9508                           
  9509                           ; BSR set to: 0
  9510  003334  0100               	movlb	0	; () banked
  9511  003336  A1BC               	btfss	___fladd@grs& (0+255),0,b
  9512  003338  D009               	goto	l6868
  9513                           
  9514                           ; BSR set to: 0
  9515  00333A  0100               	movlb	0	; () banked
  9516  00333C  90D8               	bcf	status,0,c
  9517  00333E  33BC               	rrcf	___fladd@grs& (0+255),f,b
  9518  003340  0100               	movlb	0	; () banked
  9519  003342  51BC               	movf	___fladd@grs& (0+255),w,b
  9520  003344  0901               	iorlw	1
  9521  003346  0100               	movlb	0	; () banked
  9522  003348  6FBC               	movwf	___fladd@grs& (0+255),b
  9523  00334A  D003               	goto	l6870
  9524  00334C                     l6868:
  9525                           
  9526                           ; BSR set to: 0
  9527  00334C  0100               	movlb	0	; () banked
  9528  00334E  90D8               	bcf	status,0,c
  9529  003350  33BC               	rrcf	___fladd@grs& (0+255),f,b
  9530  003352                     l6870:
  9531                           
  9532                           ; BSR set to: 0
  9533  003352  0100               	movlb	0	; () banked
  9534  003354  A1A9               	btfss	___fladd@b& (0+255),0,b
  9535  003356  D002               	goto	l6874
  9536                           
  9537                           ; BSR set to: 0
  9538  003358  0100               	movlb	0	; () banked
  9539  00335A  8FBC               	bsf	___fladd@grs& (0+255),7,b
  9540  00335C                     l6874:
  9541                           
  9542                           ; BSR set to: 0
  9543  00335C  0100               	movlb	0	; () banked
  9544  00335E  35AC               	rlcf	(___fladd@b+3)& (0+255),w,b
  9545  003360  33AC               	rrcf	(___fladd@b+3)& (0+255),f,b
  9546  003362  33AB               	rrcf	(___fladd@b+2)& (0+255),f,b
  9547  003364  33AA               	rrcf	(___fladd@b+1)& (0+255),f,b
  9548  003366  33A9               	rrcf	___fladd@b& (0+255),f,b
  9549                           
  9550                           ; BSR set to: 0
  9551  003368  0100               	movlb	0	; () banked
  9552  00336A  2BBB               	incf	___fladd@bexp& (0+255),f,b
  9553                           
  9554                           ; BSR set to: 0
  9555  00336C  D0AF               	goto	l6914
  9556  00336E                     l6878:
  9557                           
  9558                           ; BSR set to: 0
  9559  00336E  0100               	movlb	0	; () banked
  9560  003370  51AD               	movf	___fladd@a& (0+255),w,b
  9561  003372  0100               	movlb	0	; () banked
  9562  003374  5DA9               	subwf	___fladd@b& (0+255),w,b
  9563  003376  0100               	movlb	0	; () banked
  9564  003378  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9565  00337A  0100               	movlb	0	; () banked
  9566  00337C  59AA               	subwfb	(___fladd@b+1)& (0+255),w,b
  9567  00337E  0100               	movlb	0	; () banked
  9568  003380  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9569  003382  0100               	movlb	0	; () banked
  9570  003384  59AB               	subwfb	(___fladd@b+2)& (0+255),w,b
  9571  003386  0100               	movlb	0	; () banked
  9572  003388  51AC               	movf	(___fladd@b+3)& (0+255),w,b
  9573  00338A  0A80               	xorlw	128
  9574  00338C  0100               	movlb	0	; () banked
  9575  00338E  6FB1               	movwf	??___fladd& (0+255),b
  9576  003390  0100               	movlb	0	; () banked
  9577  003392  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9578  003394  0A80               	xorlw	128
  9579  003396  0100               	movlb	0	; () banked
  9580  003398  59B1               	subwfb	??___fladd& (0+255),w,b
  9581  00339A  B0D8               	btfsc	status,0,c
  9582  00339C  D050               	goto	l6888
  9583                           
  9584                           ; BSR set to: 0
  9585  00339E  C0A9  F0B1         	movff	___fladd@b,??___fladd
  9586  0033A2  C0AA  F0B2         	movff	___fladd@b+1,??___fladd+1
  9587  0033A6  C0AB  F0B3         	movff	___fladd@b+2,??___fladd+2
  9588  0033AA  C0AC  F0B4         	movff	___fladd@b+3,??___fladd+3
  9589  0033AE  0100               	movlb	0	; () banked
  9590  0033B0  1FB1               	comf	??___fladd& (0+255),f,b
  9591  0033B2  1FB2               	comf	(??___fladd+1)& (0+255),f,b
  9592  0033B4  1FB3               	comf	(??___fladd+2)& (0+255),f,b
  9593  0033B6  1FB4               	comf	(??___fladd+3)& (0+255),f,b
  9594  0033B8  2BB1               	incf	??___fladd& (0+255),f,b
  9595  0033BA  0E00               	movlw	0
  9596  0033BC  23B2               	addwfc	(??___fladd+1)& (0+255),f,b
  9597  0033BE  23B3               	addwfc	(??___fladd+2)& (0+255),f,b
  9598  0033C0  23B4               	addwfc	(??___fladd+3)& (0+255),f,b
  9599  0033C2  0100               	movlb	0	; () banked
  9600  0033C4  51AD               	movf	___fladd@a& (0+255),w,b
  9601  0033C6  0100               	movlb	0	; () banked
  9602  0033C8  25B1               	addwf	??___fladd& (0+255),w,b
  9603  0033CA  0100               	movlb	0	; () banked
  9604  0033CC  6FB5               	movwf	(??___fladd+4)& (0+255),b
  9605  0033CE  0100               	movlb	0	; () banked
  9606  0033D0  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9607  0033D2  0100               	movlb	0	; () banked
  9608  0033D4  21B2               	addwfc	(??___fladd+1)& (0+255),w,b
  9609  0033D6  0100               	movlb	0	; () banked
  9610  0033D8  6FB6               	movwf	(??___fladd+5)& (0+255),b
  9611  0033DA  0100               	movlb	0	; () banked
  9612  0033DC  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9613  0033DE  0100               	movlb	0	; () banked
  9614  0033E0  21B3               	addwfc	(??___fladd+2)& (0+255),w,b
  9615  0033E2  0100               	movlb	0	; () banked
  9616  0033E4  6FB7               	movwf	(??___fladd+6)& (0+255),b
  9617  0033E6  0100               	movlb	0	; () banked
  9618  0033E8  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9619  0033EA  0100               	movlb	0	; () banked
  9620  0033EC  21B4               	addwfc	(??___fladd+3)& (0+255),w,b
  9621  0033EE  0100               	movlb	0	; () banked
  9622  0033F0  6FB8               	movwf	(??___fladd+7)& (0+255),b
  9623  0033F2  0EFF               	movlw	255
  9624  0033F4  0100               	movlb	0	; () banked
  9625  0033F6  25B5               	addwf	(??___fladd+4)& (0+255),w,b
  9626  0033F8  0100               	movlb	0	; () banked
  9627  0033FA  6FA9               	movwf	___fladd@b& (0+255),b
  9628  0033FC  0EFF               	movlw	255
  9629  0033FE  0100               	movlb	0	; () banked
  9630  003400  21B6               	addwfc	(??___fladd+5)& (0+255),w,b
  9631  003402  0100               	movlb	0	; () banked
  9632  003404  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9633  003406  0EFF               	movlw	255
  9634  003408  0100               	movlb	0	; () banked
  9635  00340A  21B7               	addwfc	(??___fladd+6)& (0+255),w,b
  9636  00340C  0100               	movlb	0	; () banked
  9637  00340E  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9638  003410  0EFF               	movlw	255
  9639  003412  0100               	movlb	0	; () banked
  9640  003414  21B8               	addwfc	(??___fladd+7)& (0+255),w,b
  9641  003416  0100               	movlb	0	; () banked
  9642  003418  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9643  00341A  0E80               	movlw	128
  9644  00341C  0100               	movlb	0	; () banked
  9645  00341E  1BB9               	xorwf	___fladd@signs& (0+255),f,b
  9646                           
  9647                           ; BSR set to: 0
  9648  003420  0100               	movlb	0	; () banked
  9649  003422  6DBC               	negf	___fladd@grs& (0+255),b
  9650                           
  9651                           ; BSR set to: 0
  9652  003424  0100               	movlb	0	; () banked
  9653  003426  51BC               	movf	___fladd@grs& (0+255),w,b
  9654  003428  0100               	movlb	0	; () banked
  9655  00342A  A4D8               	btfss	status,2,c
  9656  00342C  D018               	goto	l1368
  9657                           
  9658                           ; BSR set to: 0
  9659  00342E  0E01               	movlw	1
  9660  003430  0100               	movlb	0	; () banked
  9661  003432  27A9               	addwf	___fladd@b& (0+255),f,b
  9662  003434  0E00               	movlw	0
  9663  003436  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
  9664  003438  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
  9665  00343A  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
  9666                           
  9667                           ; BSR set to: 0
  9668  00343C  D010               	goto	l1368
  9669  00343E                     l6888:
  9670                           
  9671                           ; BSR set to: 0
  9672  00343E  0100               	movlb	0	; () banked
  9673  003440  51AD               	movf	___fladd@a& (0+255),w,b
  9674  003442  0100               	movlb	0	; () banked
  9675  003444  5FA9               	subwf	___fladd@b& (0+255),f,b
  9676  003446  0100               	movlb	0	; () banked
  9677  003448  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9678  00344A  0100               	movlb	0	; () banked
  9679  00344C  5BAA               	subwfb	(___fladd@b+1)& (0+255),f,b
  9680  00344E  0100               	movlb	0	; () banked
  9681  003450  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9682  003452  0100               	movlb	0	; () banked
  9683  003454  5BAB               	subwfb	(___fladd@b+2)& (0+255),f,b
  9684  003456  0100               	movlb	0	; () banked
  9685  003458  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9686  00345A  0100               	movlb	0	; () banked
  9687  00345C  5BAC               	subwfb	(___fladd@b+3)& (0+255),f,b
  9688  00345E                     l1368:
  9689                           
  9690                           ; BSR set to: 0
  9691  00345E  0100               	movlb	0	; () banked
  9692  003460  51A9               	movf	___fladd@b& (0+255),w,b
  9693  003462  0100               	movlb	0	; () banked
  9694  003464  11AA               	iorwf	(___fladd@b+1)& (0+255),w,b
  9695  003466  0100               	movlb	0	; () banked
  9696  003468  11AB               	iorwf	(___fladd@b+2)& (0+255),w,b
  9697  00346A  0100               	movlb	0	; () banked
  9698  00346C  11AC               	iorwf	(___fladd@b+3)& (0+255),w,b
  9699  00346E  A4D8               	btfss	status,2,c
  9700  003470  D02A               	goto	l6912
  9701                           
  9702                           ; BSR set to: 0
  9703  003472  0100               	movlb	0	; () banked
  9704  003474  51BC               	movf	___fladd@grs& (0+255),w,b
  9705  003476  0100               	movlb	0	; () banked
  9706  003478  A4D8               	btfss	status,2,c
  9707  00347A  D025               	goto	l6912
  9708                           
  9709                           ; BSR set to: 0
  9710  00347C  0E00               	movlw	0
  9711  00347E  0100               	movlb	0	; () banked
  9712  003480  6FA9               	movwf	?___fladd& (0+255),b
  9713  003482  0E00               	movlw	0
  9714  003484  6FAA               	movwf	(?___fladd+1)& (0+255),b
  9715  003486  0E00               	movlw	0
  9716  003488  6FAB               	movwf	(?___fladd+2)& (0+255),b
  9717  00348A  0E00               	movlw	0
  9718  00348C  6FAC               	movwf	(?___fladd+3)& (0+255),b
  9719                           
  9720                           ; BSR set to: 0
  9721  00348E  0012               	return	
  9722  003490                     l6896:
  9723                           
  9724                           ; BSR set to: 0
  9725  003490  0100               	movlb	0	; () banked
  9726  003492  90D8               	bcf	status,0,c
  9727  003494  37A9               	rlcf	___fladd@b& (0+255),f,b
  9728  003496  37AA               	rlcf	(___fladd@b+1)& (0+255),f,b
  9729  003498  37AB               	rlcf	(___fladd@b+2)& (0+255),f,b
  9730  00349A  37AC               	rlcf	(___fladd@b+3)& (0+255),f,b
  9731                           
  9732                           ; BSR set to: 0
  9733  00349C  0100               	movlb	0	; () banked
  9734  00349E  AFBC               	btfss	___fladd@grs& (0+255),7,b
  9735  0034A0  D002               	goto	l6902
  9736                           
  9737                           ; BSR set to: 0
  9738  0034A2  0100               	movlb	0	; () banked
  9739  0034A4  81A9               	bsf	___fladd@b& (0+255),0,b
  9740  0034A6                     l6902:
  9741                           
  9742                           ; BSR set to: 0
  9743  0034A6  0100               	movlb	0	; () banked
  9744  0034A8  A1BC               	btfss	___fladd@grs& (0+255),0,b
  9745  0034AA  D003               	goto	l6906
  9746                           
  9747                           ; BSR set to: 0
  9748  0034AC  80D8               	bsf	status,0,c
  9749  0034AE  0100               	movlb	0	; () banked
  9750  0034B0  D002               	goto	L5
  9751  0034B2                     l6906:
  9752                           
  9753                           ; BSR set to: 0
  9754  0034B2  0100               	movlb	0	; () banked
  9755  0034B4  90D8               	bcf	status,0,c
  9756  0034B6                     L5:
  9757  0034B6  37BC               	rlcf	___fladd@grs& (0+255),f,b
  9758                           
  9759                           ; BSR set to: 0
  9760                           
  9761                           ; BSR set to: 0
  9762  0034B8  0100               	movlb	0	; () banked
  9763  0034BA  51BB               	movf	___fladd@bexp& (0+255),w,b
  9764  0034BC  0100               	movlb	0	; () banked
  9765  0034BE  B4D8               	btfsc	status,2,c
  9766  0034C0  D002               	goto	l6912
  9767                           
  9768                           ; BSR set to: 0
  9769  0034C2  0100               	movlb	0	; () banked
  9770  0034C4  07BB               	decf	___fladd@bexp& (0+255),f,b
  9771  0034C6                     l6912:
  9772                           
  9773                           ; BSR set to: 0
  9774  0034C6  0100               	movlb	0	; () banked
  9775  0034C8  AFAB               	btfss	(___fladd@b+2)& (0+255),7,b
  9776  0034CA  D7E2               	goto	l6896
  9777  0034CC                     l6914:
  9778                           
  9779                           ; BSR set to: 0
  9780  0034CC  0E00               	movlw	0
  9781  0034CE  0100               	movlb	0	; () banked
  9782  0034D0  6FBA               	movwf	___fladd@aexp& (0+255),b
  9783                           
  9784                           ; BSR set to: 0
  9785  0034D2  0100               	movlb	0	; () banked
  9786  0034D4  AFBC               	btfss	___fladd@grs& (0+255),7,b
  9787  0034D6  D00D               	goto	l1377
  9788                           
  9789                           ; BSR set to: 0
  9790  0034D8  C0BC  F0B1         	movff	___fladd@grs,??___fladd
  9791  0034DC  0E7F               	movlw	127
  9792  0034DE  0100               	movlb	0	; () banked
  9793  0034E0  17B1               	andwf	??___fladd& (0+255),f,b
  9794  0034E2  A4D8               	btfss	status,2,c
  9795  0034E4  D003               	goto	l6922
  9796                           
  9797                           ; BSR set to: 0
  9798                           
  9799                           ; BSR set to: 0
  9800  0034E6  0100               	movlb	0	; () banked
  9801  0034E8  A1A9               	btfss	___fladd@b& (0+255),0,b
  9802  0034EA  D003               	goto	l1377
  9803  0034EC                     l6922:
  9804                           
  9805                           ; BSR set to: 0
  9806  0034EC  0E01               	movlw	1
  9807  0034EE  0100               	movlb	0	; () banked
  9808  0034F0  6FBA               	movwf	___fladd@aexp& (0+255),b
  9809  0034F2                     l1377:
  9810                           
  9811                           ; BSR set to: 0
  9812  0034F2  0100               	movlb	0	; () banked
  9813  0034F4  51BA               	movf	___fladd@aexp& (0+255),w,b
  9814  0034F6  0100               	movlb	0	; () banked
  9815  0034F8  B4D8               	btfsc	status,2,c
  9816  0034FA  D026               	goto	l6932
  9817                           
  9818                           ; BSR set to: 0
  9819  0034FC  0E01               	movlw	1
  9820  0034FE  0100               	movlb	0	; () banked
  9821  003500  27A9               	addwf	___fladd@b& (0+255),f,b
  9822  003502  0E00               	movlw	0
  9823  003504  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
  9824  003506  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
  9825  003508  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
  9826                           
  9827                           ; BSR set to: 0
  9828  00350A  0100               	movlb	0	; () banked
  9829  00350C  A1AC               	btfss	(___fladd@b+3)& (0+255),0,b
  9830  00350E  D01C               	goto	l6932
  9831                           
  9832                           ; BSR set to: 0
  9833  003510  C0A9  F0B1         	movff	___fladd@b,??___fladd
  9834  003514  C0AA  F0B2         	movff	___fladd@b+1,??___fladd+1
  9835  003518  C0AB  F0B3         	movff	___fladd@b+2,??___fladd+2
  9836  00351C  C0AC  F0B4         	movff	___fladd@b+3,??___fladd+3
  9837  003520  0100               	movlb	0	; () banked
  9838  003522  35B4               	rlcf	(??___fladd+3)& (0+255),w,b
  9839  003524  33B4               	rrcf	(??___fladd+3)& (0+255),f,b
  9840  003526  33B3               	rrcf	(??___fladd+2)& (0+255),f,b
  9841  003528  33B2               	rrcf	(??___fladd+1)& (0+255),f,b
  9842  00352A  33B1               	rrcf	??___fladd& (0+255),f,b
  9843  00352C  C0B1  F0A9         	movff	??___fladd,___fladd@b
  9844  003530  C0B2  F0AA         	movff	??___fladd+1,___fladd@b+1
  9845  003534  C0B3  F0AB         	movff	??___fladd+2,___fladd@b+2
  9846  003538  C0B4  F0AC         	movff	??___fladd+3,___fladd@b+3
  9847  00353C  0100               	movlb	0	; () banked
  9848  00353E  29BB               	incf	___fladd@bexp& (0+255),w,b
  9849  003540  B4D8               	btfsc	status,2,c
  9850  003542  D002               	goto	l6932
  9851                           
  9852                           ; BSR set to: 0
  9853  003544  0100               	movlb	0	; () banked
  9854  003546  2BBB               	incf	___fladd@bexp& (0+255),f,b
  9855  003548                     l6932:
  9856                           
  9857                           ; BSR set to: 0
  9858  003548  0100               	movlb	0	; () banked
  9859  00354A  29BB               	incf	___fladd@bexp& (0+255),w,b
  9860  00354C  B4D8               	btfsc	status,2,c
  9861  00354E  D005               	goto	l6936
  9862                           
  9863                           ; BSR set to: 0
  9864  003550  0100               	movlb	0	; () banked
  9865  003552  51BB               	movf	___fladd@bexp& (0+255),w,b
  9866  003554  0100               	movlb	0	; () banked
  9867  003556  A4D8               	btfss	status,2,c
  9868  003558  D011               	goto	l6940
  9869  00355A                     l6936:
  9870                           
  9871                           ; BSR set to: 0
  9872  00355A  0E00               	movlw	0
  9873  00355C  0100               	movlb	0	; () banked
  9874  00355E  6FA9               	movwf	___fladd@b& (0+255),b
  9875  003560  0E00               	movlw	0
  9876  003562  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9877  003564  0E00               	movlw	0
  9878  003566  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9879  003568  0E00               	movlw	0
  9880  00356A  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9881  00356C  0100               	movlb	0	; () banked
  9882  00356E  51BB               	movf	___fladd@bexp& (0+255),w,b
  9883  003570  0100               	movlb	0	; () banked
  9884  003572  A4D8               	btfss	status,2,c
  9885  003574  D003               	goto	l6940
  9886                           
  9887                           ; BSR set to: 0
  9888  003576  0E00               	movlw	0
  9889  003578  0100               	movlb	0	; () banked
  9890  00357A  6FB9               	movwf	___fladd@signs& (0+255),b
  9891  00357C                     l6940:
  9892                           
  9893                           ; BSR set to: 0
  9894  00357C  0100               	movlb	0	; () banked
  9895  00357E  A1BB               	btfss	___fladd@bexp& (0+255),0,b
  9896  003580  D003               	goto	l6944
  9897                           
  9898                           ; BSR set to: 0
  9899  003582  0100               	movlb	0	; () banked
  9900  003584  8FAB               	bsf	(___fladd@b+2)& (0+255),7,b
  9901  003586  D002               	goto	l6946
  9902  003588                     l6944:
  9903                           
  9904                           ; BSR set to: 0
  9905  003588  0100               	movlb	0	; () banked
  9906  00358A  9FAB               	bcf	(___fladd@b+2)& (0+255),7,b
  9907  00358C                     l6946:
  9908                           
  9909                           ; BSR set to: 0
  9910  00358C  0100               	movlb	0	; () banked
  9911  00358E  90D8               	bcf	status,0,c
  9912  003590  31BB               	rrcf	___fladd@bexp& (0+255),w,b
  9913  003592  0100               	movlb	0	; () banked
  9914  003594  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9915                           
  9916                           ; BSR set to: 0
  9917  003596  0100               	movlb	0	; () banked
  9918  003598  AFB9               	btfss	___fladd@signs& (0+255),7,b
  9919  00359A  D002               	goto	l6952
  9920                           
  9921                           ; BSR set to: 0
  9922  00359C  0100               	movlb	0	; () banked
  9923  00359E  8FAC               	bsf	(___fladd@b+3)& (0+255),7,b
  9924  0035A0                     l6952:
  9925                           
  9926                           ; BSR set to: 0
  9927  0035A0  C0A9  F0A9         	movff	___fladd@b,?___fladd
  9928  0035A4  C0AA  F0AA         	movff	___fladd@b+1,?___fladd+1
  9929  0035A8  C0AB  F0AB         	movff	___fladd@b+2,?___fladd+2
  9930  0035AC  C0AC  F0AC         	movff	___fladd@b+3,?___fladd+3
  9931  0035B0  0012               	return	
  9932  0035B2                     __end_of___fladd:
  9933                           	opt stack 0
  9934                           tblptru	equ	0xFF8
  9935                           tblptrh	equ	0xFF7
  9936                           tblptrl	equ	0xFF6
  9937                           tablat	equ	0xFF5
  9938                           prodh	equ	0xFF4
  9939                           prodl	equ	0xFF3
  9940                           postinc0	equ	0xFEE
  9941                           wreg	equ	0xFE8
  9942                           postdec1	equ	0xFE5
  9943                           fsr1l	equ	0xFE1
  9944                           indf2	equ	0xFDF
  9945                           postinc2	equ	0xFDE
  9946                           postdec2	equ	0xFDD
  9947                           fsr2h	equ	0xFDA
  9948                           fsr2l	equ	0xFD9
  9949                           status	equ	0xFD8
  9950                           
  9951 ;; *************** function ___flge *****************
  9952 ;; Defined at:
  9953 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  9954 ;; Parameters:    Size  Location     Type
  9955 ;;  ff1             4  101[BANK0 ] unsigned char 
  9956 ;;  ff2             4  105[BANK0 ] unsigned char 
  9957 ;; Auto vars:     Size  Location     Type
  9958 ;;		None
  9959 ;; Return value:  Size  Location     Type
  9960 ;;		None               void
  9961 ;; Registers used:
  9962 ;;		wreg, status,2, status,0
  9963 ;; Tracked objects:
  9964 ;;		On entry : 0/0
  9965 ;;		On exit  : 0/0
  9966 ;;		Unchanged: 0/0
  9967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9968 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9970 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9971 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9972 ;;Total ram usage:       12 bytes
  9973 ;; Hardware stack levels used:    1
  9974 ;; Hardware stack levels required when called:    4
  9975 ;; This function calls:
  9976 ;;		Nothing
  9977 ;; This function is called by:
  9978 ;;		_parallelo
  9979 ;;		_asin
  9980 ;;		_atan
  9981 ;;		_cos
  9982 ;;		_sin
  9983 ;;		_floor
  9984 ;; This function uses a non-reentrant model
  9985 ;;
  9986                           
  9987                           	psect	text24
  9988  005A60                     __ptext24:
  9989                           	opt stack 0
  9990  005A60                     ___flge:
  9991                           	opt stack 22
  9992                           
  9993                           ; BSR set to: 0
  9994                           ;incstack = 0
  9995  005A60  0E00               	movlw	0
  9996  005A62  0100               	movlb	0	; () banked
  9997  005A64  15C5               	andwf	___flge@ff1& (0+255),w,b
  9998  005A66  0100               	movlb	0	; () banked
  9999  005A68  6FCD               	movwf	??___flge& (0+255),b
 10000  005A6A  0E00               	movlw	0
 10001  005A6C  0100               	movlb	0	; () banked
 10002  005A6E  15C6               	andwf	(___flge@ff1+1)& (0+255),w,b
 10003  005A70  0100               	movlb	0	; () banked
 10004  005A72  6FCE               	movwf	(??___flge+1)& (0+255),b
 10005  005A74  0E80               	movlw	128
 10006  005A76  0100               	movlb	0	; () banked
 10007  005A78  15C7               	andwf	(___flge@ff1+2)& (0+255),w,b
 10008  005A7A  0100               	movlb	0	; () banked
 10009  005A7C  6FCF               	movwf	(??___flge+2)& (0+255),b
 10010  005A7E  0E7F               	movlw	127
 10011  005A80  0100               	movlb	0	; () banked
 10012  005A82  15C8               	andwf	(___flge@ff1+3)& (0+255),w,b
 10013  005A84  0100               	movlb	0	; () banked
 10014  005A86  6FD0               	movwf	(??___flge+3)& (0+255),b
 10015  005A88  0100               	movlb	0	; () banked
 10016  005A8A  51CD               	movf	??___flge& (0+255),w,b
 10017  005A8C  0100               	movlb	0	; () banked
 10018  005A8E  11CE               	iorwf	(??___flge+1)& (0+255),w,b
 10019  005A90  0100               	movlb	0	; () banked
 10020  005A92  11CF               	iorwf	(??___flge+2)& (0+255),w,b
 10021  005A94  0100               	movlb	0	; () banked
 10022  005A96  11D0               	iorwf	(??___flge+3)& (0+255),w,b
 10023  005A98  A4D8               	btfss	status,2,c
 10024  005A9A  D009               	goto	l7090
 10025                           
 10026                           ; BSR set to: 0
 10027  005A9C  0E00               	movlw	0
 10028  005A9E  0100               	movlb	0	; () banked
 10029  005AA0  6FC5               	movwf	___flge@ff1& (0+255),b
 10030  005AA2  0E00               	movlw	0
 10031  005AA4  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
 10032  005AA6  0E00               	movlw	0
 10033  005AA8  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
 10034  005AAA  0E00               	movlw	0
 10035  005AAC  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
 10036  005AAE                     l7090:
 10037                           
 10038                           ; BSR set to: 0
 10039  005AAE  0E00               	movlw	0
 10040  005AB0  0100               	movlb	0	; () banked
 10041  005AB2  15C9               	andwf	___flge@ff2& (0+255),w,b
 10042  005AB4  0100               	movlb	0	; () banked
 10043  005AB6  6FCD               	movwf	??___flge& (0+255),b
 10044  005AB8  0E00               	movlw	0
 10045  005ABA  0100               	movlb	0	; () banked
 10046  005ABC  15CA               	andwf	(___flge@ff2+1)& (0+255),w,b
 10047  005ABE  0100               	movlb	0	; () banked
 10048  005AC0  6FCE               	movwf	(??___flge+1)& (0+255),b
 10049  005AC2  0E80               	movlw	128
 10050  005AC4  0100               	movlb	0	; () banked
 10051  005AC6  15CB               	andwf	(___flge@ff2+2)& (0+255),w,b
 10052  005AC8  0100               	movlb	0	; () banked
 10053  005ACA  6FCF               	movwf	(??___flge+2)& (0+255),b
 10054  005ACC  0E7F               	movlw	127
 10055  005ACE  0100               	movlb	0	; () banked
 10056  005AD0  15CC               	andwf	(___flge@ff2+3)& (0+255),w,b
 10057  005AD2  0100               	movlb	0	; () banked
 10058  005AD4  6FD0               	movwf	(??___flge+3)& (0+255),b
 10059  005AD6  0100               	movlb	0	; () banked
 10060  005AD8  51CD               	movf	??___flge& (0+255),w,b
 10061  005ADA  0100               	movlb	0	; () banked
 10062  005ADC  11CE               	iorwf	(??___flge+1)& (0+255),w,b
 10063  005ADE  0100               	movlb	0	; () banked
 10064  005AE0  11CF               	iorwf	(??___flge+2)& (0+255),w,b
 10065  005AE2  0100               	movlb	0	; () banked
 10066  005AE4  11D0               	iorwf	(??___flge+3)& (0+255),w,b
 10067  005AE6  A4D8               	btfss	status,2,c
 10068  005AE8  D009               	goto	l7094
 10069                           
 10070                           ; BSR set to: 0
 10071  005AEA  0E00               	movlw	0
 10072  005AEC  0100               	movlb	0	; () banked
 10073  005AEE  6FC9               	movwf	___flge@ff2& (0+255),b
 10074  005AF0  0E00               	movlw	0
 10075  005AF2  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
 10076  005AF4  0E00               	movlw	0
 10077  005AF6  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
 10078  005AF8  0E00               	movlw	0
 10079  005AFA  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
 10080  005AFC                     l7094:
 10081                           
 10082                           ; BSR set to: 0
 10083  005AFC  0100               	movlb	0	; () banked
 10084  005AFE  AFC8               	btfss	(___flge@ff1+3)& (0+255),7,b
 10085  005B00  D026               	goto	l7098
 10086                           
 10087                           ; BSR set to: 0
 10088  005B02  C0C5  F0CD         	movff	___flge@ff1,??___flge
 10089  005B06  C0C6  F0CE         	movff	___flge@ff1+1,??___flge+1
 10090  005B0A  C0C7  F0CF         	movff	___flge@ff1+2,??___flge+2
 10091  005B0E  C0C8  F0D0         	movff	___flge@ff1+3,??___flge+3
 10092  005B12  0100               	movlb	0	; () banked
 10093  005B14  1FCD               	comf	??___flge& (0+255),f,b
 10094  005B16  1FCE               	comf	(??___flge+1)& (0+255),f,b
 10095  005B18  1FCF               	comf	(??___flge+2)& (0+255),f,b
 10096  005B1A  1FD0               	comf	(??___flge+3)& (0+255),f,b
 10097  005B1C  2BCD               	incf	??___flge& (0+255),f,b
 10098  005B1E  0E00               	movlw	0
 10099  005B20  23CE               	addwfc	(??___flge+1)& (0+255),f,b
 10100  005B22  23CF               	addwfc	(??___flge+2)& (0+255),f,b
 10101  005B24  23D0               	addwfc	(??___flge+3)& (0+255),f,b
 10102  005B26  0E00               	movlw	0
 10103  005B28  0100               	movlb	0	; () banked
 10104  005B2A  25CD               	addwf	??___flge& (0+255),w,b
 10105  005B2C  0100               	movlb	0	; () banked
 10106  005B2E  6FC5               	movwf	___flge@ff1& (0+255),b
 10107  005B30  0E00               	movlw	0
 10108  005B32  0100               	movlb	0	; () banked
 10109  005B34  21CE               	addwfc	(??___flge+1)& (0+255),w,b
 10110  005B36  0100               	movlb	0	; () banked
 10111  005B38  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
 10112  005B3A  0E00               	movlw	0
 10113  005B3C  0100               	movlb	0	; () banked
 10114  005B3E  21CF               	addwfc	(??___flge+2)& (0+255),w,b
 10115  005B40  0100               	movlb	0	; () banked
 10116  005B42  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
 10117  005B44  0E80               	movlw	128
 10118  005B46  0100               	movlb	0	; () banked
 10119  005B48  21D0               	addwfc	(??___flge+3)& (0+255),w,b
 10120  005B4A  0100               	movlb	0	; () banked
 10121  005B4C  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
 10122  005B4E                     l7098:
 10123                           
 10124                           ; BSR set to: 0
 10125  005B4E  0100               	movlb	0	; () banked
 10126  005B50  AFCC               	btfss	(___flge@ff2+3)& (0+255),7,b
 10127  005B52  D026               	goto	l1099
 10128                           
 10129                           ; BSR set to: 0
 10130  005B54  C0C9  F0CD         	movff	___flge@ff2,??___flge
 10131  005B58  C0CA  F0CE         	movff	___flge@ff2+1,??___flge+1
 10132  005B5C  C0CB  F0CF         	movff	___flge@ff2+2,??___flge+2
 10133  005B60  C0CC  F0D0         	movff	___flge@ff2+3,??___flge+3
 10134  005B64  0100               	movlb	0	; () banked
 10135  005B66  1FCD               	comf	??___flge& (0+255),f,b
 10136  005B68  1FCE               	comf	(??___flge+1)& (0+255),f,b
 10137  005B6A  1FCF               	comf	(??___flge+2)& (0+255),f,b
 10138  005B6C  1FD0               	comf	(??___flge+3)& (0+255),f,b
 10139  005B6E  2BCD               	incf	??___flge& (0+255),f,b
 10140  005B70  0E00               	movlw	0
 10141  005B72  23CE               	addwfc	(??___flge+1)& (0+255),f,b
 10142  005B74  23CF               	addwfc	(??___flge+2)& (0+255),f,b
 10143  005B76  23D0               	addwfc	(??___flge+3)& (0+255),f,b
 10144  005B78  0E00               	movlw	0
 10145  005B7A  0100               	movlb	0	; () banked
 10146  005B7C  25CD               	addwf	??___flge& (0+255),w,b
 10147  005B7E  0100               	movlb	0	; () banked
 10148  005B80  6FC9               	movwf	___flge@ff2& (0+255),b
 10149  005B82  0E00               	movlw	0
 10150  005B84  0100               	movlb	0	; () banked
 10151  005B86  21CE               	addwfc	(??___flge+1)& (0+255),w,b
 10152  005B88  0100               	movlb	0	; () banked
 10153  005B8A  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
 10154  005B8C  0E00               	movlw	0
 10155  005B8E  0100               	movlb	0	; () banked
 10156  005B90  21CF               	addwfc	(??___flge+2)& (0+255),w,b
 10157  005B92  0100               	movlb	0	; () banked
 10158  005B94  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
 10159  005B96  0E80               	movlw	128
 10160  005B98  0100               	movlb	0	; () banked
 10161  005B9A  21D0               	addwfc	(??___flge+3)& (0+255),w,b
 10162  005B9C  0100               	movlb	0	; () banked
 10163  005B9E  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
 10164  005BA0                     l1099:
 10165                           
 10166                           ; BSR set to: 0
 10167  005BA0  0E00               	movlw	0
 10168  005BA2  0100               	movlb	0	; () banked
 10169  005BA4  1BC5               	xorwf	___flge@ff1& (0+255),f,b
 10170  005BA6  0E00               	movlw	0
 10171  005BA8  1BC6               	xorwf	(___flge@ff1+1)& (0+255),f,b
 10172  005BAA  0E00               	movlw	0
 10173  005BAC  1BC7               	xorwf	(___flge@ff1+2)& (0+255),f,b
 10174  005BAE  0E80               	movlw	128
 10175  005BB0  1BC8               	xorwf	(___flge@ff1+3)& (0+255),f,b
 10176  005BB2  0E00               	movlw	0
 10177  005BB4  0100               	movlb	0	; () banked
 10178  005BB6  1BC9               	xorwf	___flge@ff2& (0+255),f,b
 10179  005BB8  0E00               	movlw	0
 10180  005BBA  1BCA               	xorwf	(___flge@ff2+1)& (0+255),f,b
 10181  005BBC  0E00               	movlw	0
 10182  005BBE  1BCB               	xorwf	(___flge@ff2+2)& (0+255),f,b
 10183  005BC0  0E80               	movlw	128
 10184  005BC2  1BCC               	xorwf	(___flge@ff2+3)& (0+255),f,b
 10185  005BC4  0100               	movlb	0	; () banked
 10186  005BC6  51C9               	movf	___flge@ff2& (0+255),w,b
 10187  005BC8  0100               	movlb	0	; () banked
 10188  005BCA  5DC5               	subwf	___flge@ff1& (0+255),w,b
 10189  005BCC  0100               	movlb	0	; () banked
 10190  005BCE  51CA               	movf	(___flge@ff2+1)& (0+255),w,b
 10191  005BD0  0100               	movlb	0	; () banked
 10192  005BD2  59C6               	subwfb	(___flge@ff1+1)& (0+255),w,b
 10193  005BD4  0100               	movlb	0	; () banked
 10194  005BD6  51CB               	movf	(___flge@ff2+2)& (0+255),w,b
 10195  005BD8  0100               	movlb	0	; () banked
 10196  005BDA  59C7               	subwfb	(___flge@ff1+2)& (0+255),w,b
 10197  005BDC  0100               	movlb	0	; () banked
 10198  005BDE  51CC               	movf	(___flge@ff2+3)& (0+255),w,b
 10199  005BE0  0100               	movlb	0	; () banked
 10200  005BE2  59C8               	subwfb	(___flge@ff1+3)& (0+255),w,b
 10201  005BE4  B0D8               	btfsc	status,0,c
 10202  005BE6  D002               	goto	l7104
 10203                           
 10204                           ; BSR set to: 0
 10205  005BE8  90D8               	bcf	status,0,c
 10206  005BEA  0012               	return	
 10207  005BEC                     l7104:
 10208                           
 10209                           ; BSR set to: 0
 10210  005BEC  80D8               	bsf	status,0,c
 10211                           
 10212                           ; BSR set to: 0
 10213  005BEE  0012               	return	
 10214  005BF0                     __end_of___flge:
 10215                           	opt stack 0
 10216                           tblptru	equ	0xFF8
 10217                           tblptrh	equ	0xFF7
 10218                           tblptrl	equ	0xFF6
 10219                           tablat	equ	0xFF5
 10220                           prodh	equ	0xFF4
 10221                           prodl	equ	0xFF3
 10222                           postinc0	equ	0xFEE
 10223                           wreg	equ	0xFE8
 10224                           postdec1	equ	0xFE5
 10225                           fsr1l	equ	0xFE1
 10226                           indf2	equ	0xFDF
 10227                           postinc2	equ	0xFDE
 10228                           postdec2	equ	0xFDD
 10229                           fsr2h	equ	0xFDA
 10230                           fsr2l	equ	0xFD9
 10231                           status	equ	0xFD8
 10232                           
 10233 ;; *************** function ___fldiv *****************
 10234 ;; Defined at:
 10235 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
 10236 ;; Parameters:    Size  Location     Type
 10237 ;;  b               4   23[BANK0 ] unsigned char 
 10238 ;;  a               4   27[BANK0 ] unsigned char 
 10239 ;; Auto vars:     Size  Location     Type
 10240 ;;  grs             4   42[BANK0 ] unsigned long 
 10241 ;;  rem             4   36[BANK0 ] unsigned long 
 10242 ;;  new_exp         2   40[BANK0 ] int 
 10243 ;;  aexp            1   47[BANK0 ] unsigned char 
 10244 ;;  bexp            1   46[BANK0 ] unsigned char 
 10245 ;;  sign            1   35[BANK0 ] unsigned char 
 10246 ;; Return value:  Size  Location     Type
 10247 ;;                  4   23[BANK0 ] unsigned char 
 10248 ;; Registers used:
 10249 ;;		wreg, status,2, status,0
 10250 ;; Tracked objects:
 10251 ;;		On entry : 0/0
 10252 ;;		On exit  : 0/0
 10253 ;;		Unchanged: 0/0
 10254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10255 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10256 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10257 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10258 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10259 ;;Total ram usage:       25 bytes
 10260 ;; Hardware stack levels used:    1
 10261 ;; Hardware stack levels required when called:    4
 10262 ;; This function calls:
 10263 ;;		Nothing
 10264 ;; This function is called by:
 10265 ;;		_parallelo
 10266 ;;		_matematica
 10267 ;;		_asin
 10268 ;;		_atan
 10269 ;;		_sin
 10270 ;; This function uses a non-reentrant model
 10271 ;;
 10272                           
 10273                           	psect	text25
 10274  0042AE                     __ptext25:
 10275                           	opt stack 0
 10276  0042AE                     ___fldiv:
 10277                           	opt stack 22
 10278                           
 10279                           ; BSR set to: 0
 10280                           ;incstack = 0
 10281  0042AE  0100               	movlb	0	; () banked
 10282  0042B0  517A               	movf	(___fldiv@b+3)& (0+255),w,b
 10283  0042B2  0B80               	andlw	128
 10284  0042B4  0100               	movlb	0	; () banked
 10285  0042B6  6F83               	movwf	___fldiv@sign& (0+255),b
 10286  0042B8  0100               	movlb	0	; () banked
 10287  0042BA  517A               	movf	(___fldiv@b+3)& (0+255),w,b
 10288  0042BC  257A               	addwf	(___fldiv@b+3)& (0+255),w,b
 10289  0042BE  0100               	movlb	0	; () banked
 10290  0042C0  6F8E               	movwf	___fldiv@bexp& (0+255),b
 10291                           
 10292                           ; BSR set to: 0
 10293  0042C2  0100               	movlb	0	; () banked
 10294  0042C4  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
 10295  0042C6  D002               	goto	l7224
 10296                           
 10297                           ; BSR set to: 0
 10298  0042C8  0100               	movlb	0	; () banked
 10299  0042CA  818E               	bsf	___fldiv@bexp& (0+255),0,b
 10300  0042CC                     l7224:
 10301                           
 10302                           ; BSR set to: 0
 10303  0042CC  0100               	movlb	0	; () banked
 10304  0042CE  518E               	movf	___fldiv@bexp& (0+255),w,b
 10305  0042D0  0100               	movlb	0	; () banked
 10306  0042D2  B4D8               	btfsc	status,2,c
 10307  0042D4  D012               	goto	l7234
 10308                           
 10309                           ; BSR set to: 0
 10310  0042D6  0100               	movlb	0	; () banked
 10311  0042D8  298E               	incf	___fldiv@bexp& (0+255),w,b
 10312  0042DA  A4D8               	btfss	status,2,c
 10313  0042DC  D009               	goto	l7230
 10314                           
 10315                           ; BSR set to: 0
 10316  0042DE  0E00               	movlw	0
 10317  0042E0  0100               	movlb	0	; () banked
 10318  0042E2  6F77               	movwf	___fldiv@b& (0+255),b
 10319  0042E4  0E00               	movlw	0
 10320  0042E6  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10321  0042E8  0E00               	movlw	0
 10322  0042EA  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10323  0042EC  0E00               	movlw	0
 10324  0042EE  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10325  0042F0                     l7230:
 10326                           
 10327                           ; BSR set to: 0
 10328  0042F0  0100               	movlb	0	; () banked
 10329  0042F2  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
 10330                           
 10331                           ; BSR set to: 0
 10332  0042F4  0E00               	movlw	0
 10333  0042F6  0100               	movlb	0	; () banked
 10334  0042F8  D008               	goto	L6
 10335  0042FA                     l7234:
 10336                           
 10337                           ; BSR set to: 0
 10338  0042FA  0E00               	movlw	0
 10339  0042FC  0100               	movlb	0	; () banked
 10340  0042FE  6F77               	movwf	___fldiv@b& (0+255),b
 10341  004300  0E00               	movlw	0
 10342  004302  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10343  004304  0E00               	movlw	0
 10344  004306  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10345  004308  0E00               	movlw	0
 10346  00430A                     L6:
 10347  00430A  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10348                           
 10349                           ; BSR set to: 0
 10350                           
 10351                           ; BSR set to: 0
 10352  00430C  0100               	movlb	0	; () banked
 10353  00430E  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10354  004310  0B80               	andlw	128
 10355  004312  0100               	movlb	0	; () banked
 10356  004314  1B83               	xorwf	___fldiv@sign& (0+255),f,b
 10357                           
 10358                           ; BSR set to: 0
 10359  004316  0100               	movlb	0	; () banked
 10360  004318  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10361  00431A  257E               	addwf	(___fldiv@a+3)& (0+255),w,b
 10362  00431C  0100               	movlb	0	; () banked
 10363  00431E  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10364                           
 10365                           ; BSR set to: 0
 10366  004320  0100               	movlb	0	; () banked
 10367  004322  AF7D               	btfss	(___fldiv@a+2)& (0+255),7,b
 10368  004324  D002               	goto	l7244
 10369                           
 10370                           ; BSR set to: 0
 10371  004326  0100               	movlb	0	; () banked
 10372  004328  818F               	bsf	___fldiv@aexp& (0+255),0,b
 10373  00432A                     l7244:
 10374                           
 10375                           ; BSR set to: 0
 10376  00432A  0100               	movlb	0	; () banked
 10377  00432C  518F               	movf	___fldiv@aexp& (0+255),w,b
 10378  00432E  0100               	movlb	0	; () banked
 10379  004330  B4D8               	btfsc	status,2,c
 10380  004332  D012               	goto	l7254
 10381                           
 10382                           ; BSR set to: 0
 10383  004334  0100               	movlb	0	; () banked
 10384  004336  298F               	incf	___fldiv@aexp& (0+255),w,b
 10385  004338  A4D8               	btfss	status,2,c
 10386  00433A  D009               	goto	l7250
 10387                           
 10388                           ; BSR set to: 0
 10389  00433C  0E00               	movlw	0
 10390  00433E  0100               	movlb	0	; () banked
 10391  004340  6F7B               	movwf	___fldiv@a& (0+255),b
 10392  004342  0E00               	movlw	0
 10393  004344  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
 10394  004346  0E00               	movlw	0
 10395  004348  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
 10396  00434A  0E00               	movlw	0
 10397  00434C  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
 10398  00434E                     l7250:
 10399                           
 10400                           ; BSR set to: 0
 10401  00434E  0100               	movlb	0	; () banked
 10402  004350  8F7D               	bsf	(___fldiv@a+2)& (0+255),7,b
 10403                           
 10404                           ; BSR set to: 0
 10405  004352  0E00               	movlw	0
 10406  004354  0100               	movlb	0	; () banked
 10407  004356  D008               	goto	L7
 10408  004358                     l7254:
 10409                           
 10410                           ; BSR set to: 0
 10411  004358  0E00               	movlw	0
 10412  00435A  0100               	movlb	0	; () banked
 10413  00435C  6F7B               	movwf	___fldiv@a& (0+255),b
 10414  00435E  0E00               	movlw	0
 10415  004360  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
 10416  004362  0E00               	movlw	0
 10417  004364  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
 10418  004366  0E00               	movlw	0
 10419  004368                     L7:
 10420  004368  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
 10421                           
 10422                           ; BSR set to: 0
 10423                           
 10424                           ; BSR set to: 0
 10425  00436A  0100               	movlb	0	; () banked
 10426  00436C  517B               	movf	___fldiv@a& (0+255),w,b
 10427  00436E  0100               	movlb	0	; () banked
 10428  004370  117C               	iorwf	(___fldiv@a+1)& (0+255),w,b
 10429  004372  0100               	movlb	0	; () banked
 10430  004374  117D               	iorwf	(___fldiv@a+2)& (0+255),w,b
 10431  004376  0100               	movlb	0	; () banked
 10432  004378  117E               	iorwf	(___fldiv@a+3)& (0+255),w,b
 10433  00437A  A4D8               	btfss	status,2,c
 10434  00437C  D017               	goto	l7266
 10435                           
 10436                           ; BSR set to: 0
 10437  00437E  0E00               	movlw	0
 10438  004380  0100               	movlb	0	; () banked
 10439  004382  6F77               	movwf	___fldiv@b& (0+255),b
 10440  004384  0E00               	movlw	0
 10441  004386  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10442  004388  0E00               	movlw	0
 10443  00438A  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10444  00438C  0E00               	movlw	0
 10445  00438E  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10446                           
 10447                           ; BSR set to: 0
 10448  004390  0100               	movlb	0	; () banked
 10449  004392  0E80               	movlw	128
 10450  004394  1379               	iorwf	(___fldiv@b+2)& (0+255),f,b
 10451  004396  0E7F               	movlw	127
 10452  004398  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10453                           
 10454                           ; BSR set to: 0
 10455  00439A  C077  F077         	movff	___fldiv@b,?___fldiv
 10456  00439E  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10457  0043A2  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10458  0043A6  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10459                           
 10460                           ; BSR set to: 0
 10461  0043AA  0012               	return	
 10462  0043AC                     l7266:
 10463                           
 10464                           ; BSR set to: 0
 10465  0043AC  0100               	movlb	0	; () banked
 10466  0043AE  518E               	movf	___fldiv@bexp& (0+255),w,b
 10467  0043B0  0100               	movlb	0	; () banked
 10468  0043B2  A4D8               	btfss	status,2,c
 10469  0043B4  D012               	goto	l7274
 10470                           
 10471                           ; BSR set to: 0
 10472  0043B6  0E00               	movlw	0
 10473  0043B8  0100               	movlb	0	; () banked
 10474  0043BA  6F77               	movwf	___fldiv@b& (0+255),b
 10475  0043BC  0E00               	movlw	0
 10476  0043BE  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10477  0043C0  0E00               	movlw	0
 10478  0043C2  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10479  0043C4  0E00               	movlw	0
 10480  0043C6  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10481                           
 10482                           ; BSR set to: 0
 10483  0043C8  C077  F077         	movff	___fldiv@b,?___fldiv
 10484  0043CC  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10485  0043D0  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10486  0043D4  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10487                           
 10488                           ; BSR set to: 0
 10489  0043D8  0012               	return	
 10490  0043DA                     l7274:
 10491                           
 10492                           ; BSR set to: 0
 10493  0043DA  0100               	movlb	0	; () banked
 10494  0043DC  518F               	movf	___fldiv@aexp& (0+255),w,b
 10495  0043DE  0100               	movlb	0	; () banked
 10496  0043E0  6F7F               	movwf	??___fldiv& (0+255),b
 10497  0043E2  6B80               	clrf	(??___fldiv+1)& (0+255),b
 10498  0043E4  0100               	movlb	0	; () banked
 10499  0043E6  1F7F               	comf	??___fldiv& (0+255),f,b
 10500  0043E8  1F80               	comf	(??___fldiv+1)& (0+255),f,b
 10501  0043EA  4B7F               	infsnz	??___fldiv& (0+255),f,b
 10502  0043EC  2B80               	incf	(??___fldiv+1)& (0+255),f,b
 10503  0043EE  0100               	movlb	0	; () banked
 10504  0043F0  518E               	movf	___fldiv@bexp& (0+255),w,b
 10505  0043F2  0100               	movlb	0	; () banked
 10506  0043F4  6F81               	movwf	(??___fldiv+2)& (0+255),b
 10507  0043F6  6B82               	clrf	(??___fldiv+3)& (0+255),b
 10508  0043F8  0100               	movlb	0	; () banked
 10509  0043FA  517F               	movf	??___fldiv& (0+255),w,b
 10510  0043FC  0100               	movlb	0	; () banked
 10511  0043FE  2781               	addwf	(??___fldiv+2)& (0+255),f,b
 10512  004400  0100               	movlb	0	; () banked
 10513  004402  5180               	movf	(??___fldiv+1)& (0+255),w,b
 10514  004404  0100               	movlb	0	; () banked
 10515  004406  2382               	addwfc	(??___fldiv+3)& (0+255),f,b
 10516  004408  0E7F               	movlw	127
 10517  00440A  0100               	movlb	0	; () banked
 10518  00440C  2581               	addwf	(??___fldiv+2)& (0+255),w,b
 10519  00440E  0100               	movlb	0	; () banked
 10520  004410  6F88               	movwf	___fldiv@new_exp& (0+255),b
 10521  004412  0E00               	movlw	0
 10522  004414  0100               	movlb	0	; () banked
 10523  004416  2182               	addwfc	(??___fldiv+3)& (0+255),w,b
 10524  004418  0100               	movlb	0	; () banked
 10525  00441A  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10526                           
 10527                           ; BSR set to: 0
 10528  00441C  C077  F084         	movff	___fldiv@b,___fldiv@rem
 10529  004420  C078  F085         	movff	___fldiv@b+1,___fldiv@rem+1
 10530  004424  C079  F086         	movff	___fldiv@b+2,___fldiv@rem+2
 10531  004428  C07A  F087         	movff	___fldiv@b+3,___fldiv@rem+3
 10532                           
 10533                           ; BSR set to: 0
 10534  00442C  0E00               	movlw	0
 10535  00442E  0100               	movlb	0	; () banked
 10536  004430  6F77               	movwf	___fldiv@b& (0+255),b
 10537  004432  0E00               	movlw	0
 10538  004434  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10539  004436  0E00               	movlw	0
 10540  004438  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10541  00443A  0E00               	movlw	0
 10542  00443C  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10543                           
 10544                           ; BSR set to: 0
 10545  00443E  0E00               	movlw	0
 10546  004440  0100               	movlb	0	; () banked
 10547  004442  6F8A               	movwf	___fldiv@grs& (0+255),b
 10548  004444  0E00               	movlw	0
 10549  004446  6F8B               	movwf	(___fldiv@grs+1)& (0+255),b
 10550  004448  0E00               	movlw	0
 10551  00444A  6F8C               	movwf	(___fldiv@grs+2)& (0+255),b
 10552  00444C  0E00               	movlw	0
 10553  00444E  6F8D               	movwf	(___fldiv@grs+3)& (0+255),b
 10554                           
 10555                           ; BSR set to: 0
 10556  004450  0E00               	movlw	0
 10557  004452  0100               	movlb	0	; () banked
 10558  004454  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10559  004456  D042               	goto	l1407
 10560  004458                     l7284:
 10561                           
 10562                           ; BSR set to: 0
 10563  004458  0100               	movlb	0	; () banked
 10564  00445A  518F               	movf	___fldiv@aexp& (0+255),w,b
 10565  00445C  0100               	movlb	0	; () banked
 10566  00445E  B4D8               	btfsc	status,2,c
 10567  004460  D017               	goto	l7292
 10568                           
 10569                           ; BSR set to: 0
 10570  004462  0100               	movlb	0	; () banked
 10571  004464  90D8               	bcf	status,0,c
 10572  004466  3784               	rlcf	___fldiv@rem& (0+255),f,b
 10573  004468  3785               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 10574  00446A  3786               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 10575  00446C  3787               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 10576  00446E  0100               	movlb	0	; () banked
 10577  004470  90D8               	bcf	status,0,c
 10578  004472  3777               	rlcf	___fldiv@b& (0+255),f,b
 10579  004474  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10580  004476  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10581  004478  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10582                           
 10583                           ; BSR set to: 0
 10584  00447A  0100               	movlb	0	; () banked
 10585  00447C  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10586  00447E  D002               	goto	l1410
 10587                           
 10588                           ; BSR set to: 0
 10589  004480  0100               	movlb	0	; () banked
 10590  004482  8177               	bsf	___fldiv@b& (0+255),0,b
 10591  004484                     l1410:
 10592                           
 10593                           ; BSR set to: 0
 10594  004484  0100               	movlb	0	; () banked
 10595  004486  90D8               	bcf	status,0,c
 10596  004488  378A               	rlcf	___fldiv@grs& (0+255),f,b
 10597  00448A  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10598  00448C  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10599  00448E  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10600  004490                     l7292:
 10601                           
 10602                           ; BSR set to: 0
 10603  004490  0100               	movlb	0	; () banked
 10604  004492  517B               	movf	___fldiv@a& (0+255),w,b
 10605  004494  0100               	movlb	0	; () banked
 10606  004496  5D84               	subwf	___fldiv@rem& (0+255),w,b
 10607  004498  0100               	movlb	0	; () banked
 10608  00449A  517C               	movf	(___fldiv@a+1)& (0+255),w,b
 10609  00449C  0100               	movlb	0	; () banked
 10610  00449E  5985               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 10611  0044A0  0100               	movlb	0	; () banked
 10612  0044A2  517D               	movf	(___fldiv@a+2)& (0+255),w,b
 10613  0044A4  0100               	movlb	0	; () banked
 10614  0044A6  5986               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 10615  0044A8  0100               	movlb	0	; () banked
 10616  0044AA  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10617  0044AC  0100               	movlb	0	; () banked
 10618  0044AE  5987               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 10619  0044B0  A0D8               	btfss	status,0,c
 10620  0044B2  D012               	goto	l7298
 10621                           
 10622                           ; BSR set to: 0
 10623  0044B4  0100               	movlb	0	; () banked
 10624  0044B6  8D8D               	bsf	(___fldiv@grs+3)& (0+255),6,b
 10625                           
 10626                           ; BSR set to: 0
 10627  0044B8  0100               	movlb	0	; () banked
 10628  0044BA  517B               	movf	___fldiv@a& (0+255),w,b
 10629  0044BC  0100               	movlb	0	; () banked
 10630  0044BE  5F84               	subwf	___fldiv@rem& (0+255),f,b
 10631  0044C0  0100               	movlb	0	; () banked
 10632  0044C2  517C               	movf	(___fldiv@a+1)& (0+255),w,b
 10633  0044C4  0100               	movlb	0	; () banked
 10634  0044C6  5B85               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 10635  0044C8  0100               	movlb	0	; () banked
 10636  0044CA  517D               	movf	(___fldiv@a+2)& (0+255),w,b
 10637  0044CC  0100               	movlb	0	; () banked
 10638  0044CE  5B86               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 10639  0044D0  0100               	movlb	0	; () banked
 10640  0044D2  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10641  0044D4  0100               	movlb	0	; () banked
 10642  0044D6  5B87               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 10643  0044D8                     l7298:
 10644                           
 10645                           ; BSR set to: 0
 10646  0044D8  0100               	movlb	0	; () banked
 10647  0044DA  2B8F               	incf	___fldiv@aexp& (0+255),f,b
 10648  0044DC                     l1407:
 10649                           
 10650                           ; BSR set to: 0
 10651  0044DC  0E19               	movlw	25
 10652  0044DE  0100               	movlb	0	; () banked
 10653  0044E0  658F               	cpfsgt	___fldiv@aexp& (0+255),b
 10654  0044E2  D7BA               	goto	l7284
 10655                           
 10656                           ; BSR set to: 0
 10657                           
 10658                           ; BSR set to: 0
 10659  0044E4  0100               	movlb	0	; () banked
 10660  0044E6  5184               	movf	___fldiv@rem& (0+255),w,b
 10661  0044E8  0100               	movlb	0	; () banked
 10662  0044EA  1185               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 10663  0044EC  0100               	movlb	0	; () banked
 10664  0044EE  1186               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 10665  0044F0  0100               	movlb	0	; () banked
 10666  0044F2  1187               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 10667  0044F4  B4D8               	btfsc	status,2,c
 10668  0044F6  D018               	goto	l7310
 10669                           
 10670                           ; BSR set to: 0
 10671  0044F8  0100               	movlb	0	; () banked
 10672  0044FA  818A               	bsf	___fldiv@grs& (0+255),0,b
 10673                           
 10674                           ; BSR set to: 0
 10675  0044FC  D015               	goto	l7310
 10676  0044FE                     l7304:
 10677                           
 10678                           ; BSR set to: 0
 10679  0044FE  0100               	movlb	0	; () banked
 10680  004500  90D8               	bcf	status,0,c
 10681  004502  3777               	rlcf	___fldiv@b& (0+255),f,b
 10682  004504  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10683  004506  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10684  004508  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10685                           
 10686                           ; BSR set to: 0
 10687  00450A  0100               	movlb	0	; () banked
 10688  00450C  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10689  00450E  D002               	goto	l1416
 10690                           
 10691                           ; BSR set to: 0
 10692  004510  0100               	movlb	0	; () banked
 10693  004512  8177               	bsf	___fldiv@b& (0+255),0,b
 10694  004514                     l1416:
 10695                           
 10696                           ; BSR set to: 0
 10697  004514  0100               	movlb	0	; () banked
 10698  004516  90D8               	bcf	status,0,c
 10699  004518  378A               	rlcf	___fldiv@grs& (0+255),f,b
 10700  00451A  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10701  00451C  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10702  00451E  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10703  004520  0100               	movlb	0	; () banked
 10704  004522  0788               	decf	___fldiv@new_exp& (0+255),f,b
 10705  004524  A0D8               	btfss	status,0,c
 10706  004526  0789               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 10707  004528                     l7310:
 10708                           
 10709                           ; BSR set to: 0
 10710  004528  0100               	movlb	0	; () banked
 10711  00452A  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
 10712  00452C  D7E8               	goto	l7304
 10713                           
 10714                           ; BSR set to: 0
 10715                           
 10716                           ; BSR set to: 0
 10717  00452E  0E00               	movlw	0
 10718  004530  0100               	movlb	0	; () banked
 10719  004532  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10720                           
 10721                           ; BSR set to: 0
 10722  004534  0100               	movlb	0	; () banked
 10723  004536  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10724  004538  D024               	goto	l1418
 10725                           
 10726                           ; BSR set to: 0
 10727  00453A  0EFF               	movlw	255
 10728  00453C  0100               	movlb	0	; () banked
 10729  00453E  158A               	andwf	___fldiv@grs& (0+255),w,b
 10730  004540  0100               	movlb	0	; () banked
 10731  004542  6F7F               	movwf	??___fldiv& (0+255),b
 10732  004544  0EFF               	movlw	255
 10733  004546  0100               	movlb	0	; () banked
 10734  004548  158B               	andwf	(___fldiv@grs+1)& (0+255),w,b
 10735  00454A  0100               	movlb	0	; () banked
 10736  00454C  6F80               	movwf	(??___fldiv+1)& (0+255),b
 10737  00454E  0EFF               	movlw	255
 10738  004550  0100               	movlb	0	; () banked
 10739  004552  158C               	andwf	(___fldiv@grs+2)& (0+255),w,b
 10740  004554  0100               	movlb	0	; () banked
 10741  004556  6F81               	movwf	(??___fldiv+2)& (0+255),b
 10742  004558  0E7F               	movlw	127
 10743  00455A  0100               	movlb	0	; () banked
 10744  00455C  158D               	andwf	(___fldiv@grs+3)& (0+255),w,b
 10745  00455E  0100               	movlb	0	; () banked
 10746  004560  6F82               	movwf	(??___fldiv+3)& (0+255),b
 10747  004562  0100               	movlb	0	; () banked
 10748  004564  517F               	movf	??___fldiv& (0+255),w,b
 10749  004566  0100               	movlb	0	; () banked
 10750  004568  1180               	iorwf	(??___fldiv+1)& (0+255),w,b
 10751  00456A  0100               	movlb	0	; () banked
 10752  00456C  1181               	iorwf	(??___fldiv+2)& (0+255),w,b
 10753  00456E  0100               	movlb	0	; () banked
 10754  004570  1182               	iorwf	(??___fldiv+3)& (0+255),w,b
 10755  004572  A4D8               	btfss	status,2,c
 10756  004574  D003               	goto	l7320
 10757                           
 10758                           ; BSR set to: 0
 10759                           
 10760                           ; BSR set to: 0
 10761  004576  0100               	movlb	0	; () banked
 10762  004578  A177               	btfss	___fldiv@b& (0+255),0,b
 10763  00457A  D003               	goto	l1418
 10764  00457C                     l7320:
 10765                           
 10766                           ; BSR set to: 0
 10767  00457C  0E01               	movlw	1
 10768  00457E  0100               	movlb	0	; () banked
 10769  004580  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10770  004582                     l1418:
 10771                           
 10772                           ; BSR set to: 0
 10773  004582  0100               	movlb	0	; () banked
 10774  004584  518F               	movf	___fldiv@aexp& (0+255),w,b
 10775  004586  0100               	movlb	0	; () banked
 10776  004588  B4D8               	btfsc	status,2,c
 10777  00458A  D023               	goto	l7330
 10778                           
 10779                           ; BSR set to: 0
 10780  00458C  0E01               	movlw	1
 10781  00458E  0100               	movlb	0	; () banked
 10782  004590  2777               	addwf	___fldiv@b& (0+255),f,b
 10783  004592  0E00               	movlw	0
 10784  004594  2378               	addwfc	(___fldiv@b+1)& (0+255),f,b
 10785  004596  2379               	addwfc	(___fldiv@b+2)& (0+255),f,b
 10786  004598  237A               	addwfc	(___fldiv@b+3)& (0+255),f,b
 10787                           
 10788                           ; BSR set to: 0
 10789  00459A  0100               	movlb	0	; () banked
 10790  00459C  A17A               	btfss	(___fldiv@b+3)& (0+255),0,b
 10791  00459E  D019               	goto	l7330
 10792                           
 10793                           ; BSR set to: 0
 10794  0045A0  C077  F07F         	movff	___fldiv@b,??___fldiv
 10795  0045A4  C078  F080         	movff	___fldiv@b+1,??___fldiv+1
 10796  0045A8  C079  F081         	movff	___fldiv@b+2,??___fldiv+2
 10797  0045AC  C07A  F082         	movff	___fldiv@b+3,??___fldiv+3
 10798  0045B0  0100               	movlb	0	; () banked
 10799  0045B2  3582               	rlcf	(??___fldiv+3)& (0+255),w,b
 10800  0045B4  3382               	rrcf	(??___fldiv+3)& (0+255),f,b
 10801  0045B6  3381               	rrcf	(??___fldiv+2)& (0+255),f,b
 10802  0045B8  3380               	rrcf	(??___fldiv+1)& (0+255),f,b
 10803  0045BA  337F               	rrcf	??___fldiv& (0+255),f,b
 10804  0045BC  C07F  F077         	movff	??___fldiv,___fldiv@b
 10805  0045C0  C080  F078         	movff	??___fldiv+1,___fldiv@b+1
 10806  0045C4  C081  F079         	movff	??___fldiv+2,___fldiv@b+2
 10807  0045C8  C082  F07A         	movff	??___fldiv+3,___fldiv@b+3
 10808                           
 10809                           ; BSR set to: 0
 10810  0045CC  0100               	movlb	0	; () banked
 10811  0045CE  4B88               	infsnz	___fldiv@new_exp& (0+255),f,b
 10812  0045D0  2B89               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 10813  0045D2                     l7330:
 10814                           
 10815                           ; BSR set to: 0
 10816  0045D2  0100               	movlb	0	; () banked
 10817  0045D4  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10818  0045D6  D014               	goto	l7334
 10819  0045D8  0100               	movlb	0	; () banked
 10820  0045DA  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10821  0045DC  E104               	bnz	u9640
 10822  0045DE  0100               	movlb	0	; () banked
 10823  0045E0  2988               	incf	___fldiv@new_exp& (0+255),w,b
 10824  0045E2  A0D8               	btfss	status,0,c
 10825  0045E4  D00D               	goto	l7334
 10826  0045E6                     u9640:
 10827                           
 10828                           ; BSR set to: 0
 10829  0045E6  0E00               	movlw	0
 10830  0045E8  0100               	movlb	0	; () banked
 10831  0045EA  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10832  0045EC  6988               	setf	___fldiv@new_exp& (0+255),b
 10833  0045EE  0E00               	movlw	0
 10834  0045F0  0100               	movlb	0	; () banked
 10835  0045F2  6F77               	movwf	___fldiv@b& (0+255),b
 10836  0045F4  0E00               	movlw	0
 10837  0045F6  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10838  0045F8  0E00               	movlw	0
 10839  0045FA  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10840  0045FC  0E00               	movlw	0
 10841  0045FE  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10842  004600                     l7334:
 10843                           
 10844                           ; BSR set to: 0
 10845  004600  0100               	movlb	0	; () banked
 10846  004602  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10847  004604  D007               	goto	l7336
 10848  004606  0100               	movlb	0	; () banked
 10849  004608  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10850  00460A  E115               	bnz	l7338
 10851  00460C  0100               	movlb	0	; () banked
 10852  00460E  0588               	decf	___fldiv@new_exp& (0+255),w,b
 10853  004610  B0D8               	btfsc	status,0,c
 10854  004612  D011               	goto	l7338
 10855  004614                     l7336:
 10856                           
 10857                           ; BSR set to: 0
 10858  004614  0E00               	movlw	0
 10859  004616  0100               	movlb	0	; () banked
 10860  004618  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10861  00461A  0E00               	movlw	0
 10862  00461C  6F88               	movwf	___fldiv@new_exp& (0+255),b
 10863  00461E  0E00               	movlw	0
 10864  004620  0100               	movlb	0	; () banked
 10865  004622  6F77               	movwf	___fldiv@b& (0+255),b
 10866  004624  0E00               	movlw	0
 10867  004626  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10868  004628  0E00               	movlw	0
 10869  00462A  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10870  00462C  0E00               	movlw	0
 10871  00462E  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10872  004630  0E00               	movlw	0
 10873  004632  0100               	movlb	0	; () banked
 10874  004634  6F83               	movwf	___fldiv@sign& (0+255),b
 10875  004636                     l7338:
 10876                           
 10877                           ; BSR set to: 0
 10878  004636  C088  F08E         	movff	___fldiv@new_exp,___fldiv@bexp
 10879                           
 10880                           ; BSR set to: 0
 10881  00463A  0100               	movlb	0	; () banked
 10882  00463C  A18E               	btfss	___fldiv@bexp& (0+255),0,b
 10883  00463E  D003               	goto	l7344
 10884                           
 10885                           ; BSR set to: 0
 10886  004640  0100               	movlb	0	; () banked
 10887  004642  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
 10888  004644  D002               	goto	l7346
 10889  004646                     l7344:
 10890                           
 10891                           ; BSR set to: 0
 10892  004646  0100               	movlb	0	; () banked
 10893  004648  9F79               	bcf	(___fldiv@b+2)& (0+255),7,b
 10894  00464A                     l7346:
 10895                           
 10896                           ; BSR set to: 0
 10897  00464A  0100               	movlb	0	; () banked
 10898  00464C  90D8               	bcf	status,0,c
 10899  00464E  318E               	rrcf	___fldiv@bexp& (0+255),w,b
 10900  004650  0100               	movlb	0	; () banked
 10901  004652  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10902                           
 10903                           ; BSR set to: 0
 10904  004654  0100               	movlb	0	; () banked
 10905  004656  5183               	movf	___fldiv@sign& (0+255),w,b
 10906  004658  0100               	movlb	0	; () banked
 10907  00465A  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10908                           
 10909                           ; BSR set to: 0
 10910  00465C  C077  F077         	movff	___fldiv@b,?___fldiv
 10911  004660  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10912  004664  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10913  004668  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10914  00466C  0012               	return	
 10915  00466E                     __end_of___fldiv:
 10916                           	opt stack 0
 10917                           tblptru	equ	0xFF8
 10918                           tblptrh	equ	0xFF7
 10919                           tblptrl	equ	0xFF6
 10920                           tablat	equ	0xFF5
 10921                           prodh	equ	0xFF4
 10922                           prodl	equ	0xFF3
 10923                           postinc0	equ	0xFEE
 10924                           wreg	equ	0xFE8
 10925                           postdec1	equ	0xFE5
 10926                           fsr1l	equ	0xFE1
 10927                           indf2	equ	0xFDF
 10928                           postinc2	equ	0xFDE
 10929                           postdec2	equ	0xFDD
 10930                           fsr2h	equ	0xFDA
 10931                           fsr2l	equ	0xFD9
 10932                           status	equ	0xFD8
 10933                           
 10934 ;; *************** function _delay_s *****************
 10935 ;; Defined at:
 10936 ;;		line 102 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/src\delay.c"
 10937 ;; Parameters:    Size  Location     Type
 10938 ;;  value_s         1    wreg     unsigned char 
 10939 ;; Auto vars:     Size  Location     Type
 10940 ;;  value_s         1   31[BANK0 ] unsigned char 
 10941 ;;  repeat_loop     1   32[BANK0 ] unsigned char 
 10942 ;; Return value:  Size  Location     Type
 10943 ;;		None               void
 10944 ;; Registers used:
 10945 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10946 ;; Tracked objects:
 10947 ;;		On entry : 0/0
 10948 ;;		On exit  : 0/0
 10949 ;;		Unchanged: 0/0
 10950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10952 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10954 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10955 ;;Total ram usage:        2 bytes
 10956 ;; Hardware stack levels used:    1
 10957 ;; Hardware stack levels required when called:    6
 10958 ;; This function calls:
 10959 ;;		_delay_ms
 10960 ;; This function is called by:
 10961 ;;		_park_routine
 10962 ;; This function uses a non-reentrant model
 10963 ;;
 10964                           
 10965                           	psect	text26
 10966  00668E                     __ptext26:
 10967                           	opt stack 0
 10968  00668E                     _delay_s:
 10969                           	opt stack 23
 10970                           
 10971                           ; BSR set to: 0
 10972                           ;incstack = 0
 10973                           ;delay_s@value_s stored from wreg
 10974  00668E  0100               	movlb	0	; () banked
 10975  006690  6F7F               	movwf	delay_s@value_s& (0+255),b
 10976                           
 10977                           ;src\delay.c: 104: unsigned char repeat_loop;
 10978                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
 10979  006692  0E00               	movlw	0
 10980  006694  0100               	movlb	0	; () banked
 10981  006696  6F80               	movwf	delay_s@repeat_loop& (0+255),b
 10982  006698  D009               	goto	l7966
 10983  00669A                     l7962:
 10984                           
 10985                           ; BSR set to: 0
 10986                           ;src\delay.c: 107: delay_ms (1000);
 10987  00669A  0E03               	movlw	3
 10988  00669C  0100               	movlb	0	; () banked
 10989  00669E  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
 10990  0066A0  0EE8               	movlw	232
 10991  0066A2  6F7D               	movwf	delay_ms@value_ms& (0+255),b
 10992  0066A4  ECDD  F032         	call	_delay_ms	;wreg free
 10993  0066A8  0100               	movlb	0	; () banked
 10994  0066AA  2B80               	incf	delay_s@repeat_loop& (0+255),f,b
 10995  0066AC                     l7966:
 10996                           
 10997                           ; BSR set to: 0
 10998  0066AC  0100               	movlb	0	; () banked
 10999  0066AE  517F               	movf	delay_s@value_s& (0+255),w,b
 11000  0066B0  0100               	movlb	0	; () banked
 11001  0066B2  5D80               	subwf	delay_s@repeat_loop& (0+255),w,b
 11002  0066B4  B0D8               	btfsc	status,0,c
 11003  0066B6  0012               	return	
 11004  0066B8  D7F0               	goto	l7962
 11005  0066BA                     __end_of_delay_s:
 11006                           	opt stack 0
 11007                           tblptru	equ	0xFF8
 11008                           tblptrh	equ	0xFF7
 11009                           tblptrl	equ	0xFF6
 11010                           tablat	equ	0xFF5
 11011                           prodh	equ	0xFF4
 11012                           prodl	equ	0xFF3
 11013                           postinc0	equ	0xFEE
 11014                           wreg	equ	0xFE8
 11015                           postdec1	equ	0xFE5
 11016                           fsr1l	equ	0xFE1
 11017                           indf2	equ	0xFDF
 11018                           postinc2	equ	0xFDE
 11019                           postdec2	equ	0xFDD
 11020                           fsr2h	equ	0xFDA
 11021                           fsr2l	equ	0xFD9
 11022                           status	equ	0xFD8
 11023                           
 11024 ;; *************** function _delay_ms *****************
 11025 ;; Defined at:
 11026 ;;		line 61 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/src\delay.c"
 11027 ;; Parameters:    Size  Location     Type
 11028 ;;  value_ms        2   29[BANK0 ] unsigned int 
 11029 ;; Auto vars:     Size  Location     Type
 11030 ;;		None
 11031 ;; Return value:  Size  Location     Type
 11032 ;;		None               void
 11033 ;; Registers used:
 11034 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11035 ;; Tracked objects:
 11036 ;;		On entry : 0/0
 11037 ;;		On exit  : 0/0
 11038 ;;		Unchanged: 0/0
 11039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11040 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11043 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11044 ;;Total ram usage:        2 bytes
 11045 ;; Hardware stack levels used:    1
 11046 ;; Hardware stack levels required when called:    5
 11047 ;; This function calls:
 11048 ;;		___wmul
 11049 ;; This function is called by:
 11050 ;;		_delay_s
 11051 ;;		_main
 11052 ;;		_park_routine
 11053 ;; This function uses a non-reentrant model
 11054 ;;
 11055                           
 11056                           	psect	text27
 11057  0065BA                     __ptext27:
 11058                           	opt stack 0
 11059  0065BA                     _delay_ms:
 11060                           	opt stack 23
 11061                           
 11062                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 11063                           
 11064                           ; BSR set to: 0
 11065                           ;incstack = 0
 11066  0065BA  C0E8  F077         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 11067  0065BE  0100               	movlb	0	; () banked
 11068  0065C0  6B78               	clrf	(___wmul@multiplier+1)& (0+255),b
 11069  0065C2  C07D  F079         	movff	delay_ms@value_ms,___wmul@multiplicand
 11070  0065C6  C07E  F07A         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 11071  0065CA  EC16  F033         	call	___wmul	;wreg free
 11072  0065CE  C077  F0E0         	movff	?___wmul,_clock_counter_reference	;volatile
 11073  0065D2  C078  F0E1         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 11074                           
 11075                           ;src\delay.c: 75: while (clock_counter_reference) {
 11076  0065D6  D007               	goto	l569
 11077  0065D8                     l7816:
 11078                           
 11079                           ;src\delay.c: 85: _delay(240);
 11080  0065D8  0E50               	movlw	80
 11081  0065DA                     u11677:
 11082  0065DA  2EE8               	decfsz	wreg,f,c
 11083  0065DC  D7FE               	goto	u11677
 11084                           
 11085                           ;src\delay.c: 88: clock_counter_reference--;
 11086  0065DE  0100               	movlb	0	; () banked
 11087  0065E0  07E0               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 11088  0065E2  A0D8               	btfss	status,0,c
 11089  0065E4  07E1               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 11090  0065E6                     l569:
 11091  0065E6  0100               	movlb	0	; () banked
 11092  0065E8  51E0               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 11093  0065EA  0100               	movlb	0	; () banked
 11094  0065EC  11E1               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 11095  0065EE  B4D8               	btfsc	status,2,c
 11096  0065F0  0012               	return	
 11097  0065F2  D7F2               	goto	l7816
 11098  0065F4                     __end_of_delay_ms:
 11099                           	opt stack 0
 11100                           tblptru	equ	0xFF8
 11101                           tblptrh	equ	0xFF7
 11102                           tblptrl	equ	0xFF6
 11103                           tablat	equ	0xFF5
 11104                           prodh	equ	0xFF4
 11105                           prodl	equ	0xFF3
 11106                           postinc0	equ	0xFEE
 11107                           wreg	equ	0xFE8
 11108                           postdec1	equ	0xFE5
 11109                           fsr1l	equ	0xFE1
 11110                           indf2	equ	0xFDF
 11111                           postinc2	equ	0xFDE
 11112                           postdec2	equ	0xFDD
 11113                           fsr2h	equ	0xFDA
 11114                           fsr2l	equ	0xFD9
 11115                           status	equ	0xFD8
 11116                           
 11117 ;; *************** function ___wmul *****************
 11118 ;; Defined at:
 11119 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 11120 ;; Parameters:    Size  Location     Type
 11121 ;;  multiplier      2   23[BANK0 ] unsigned int 
 11122 ;;  multiplicand    2   25[BANK0 ] unsigned int 
 11123 ;; Auto vars:     Size  Location     Type
 11124 ;;  product         2   27[BANK0 ] unsigned int 
 11125 ;; Return value:  Size  Location     Type
 11126 ;;                  2   23[BANK0 ] unsigned int 
 11127 ;; Registers used:
 11128 ;;		wreg, status,2, status,0, prodl, prodh
 11129 ;; Tracked objects:
 11130 ;;		On entry : 0/0
 11131 ;;		On exit  : 0/0
 11132 ;;		Unchanged: 0/0
 11133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11134 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11135 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11137 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11138 ;;Total ram usage:        6 bytes
 11139 ;; Hardware stack levels used:    1
 11140 ;; Hardware stack levels required when called:    4
 11141 ;; This function calls:
 11142 ;;		Nothing
 11143 ;; This function is called by:
 11144 ;;		_delay_ms
 11145 ;; This function uses a non-reentrant model
 11146 ;;
 11147                           
 11148                           	psect	text28
 11149  00662C                     __ptext28:
 11150                           	opt stack 0
 11151  00662C                     ___wmul:
 11152                           	opt stack 23
 11153                           
 11154                           ; BSR set to: 0
 11155                           ;incstack = 0
 11156  00662C  0100               	movlb	0	; () banked
 11157  00662E  5177               	movf	___wmul@multiplier& (0+255),w,b
 11158  006630  0100               	movlb	0	; () banked
 11159  006632  0379               	mulwf	___wmul@multiplicand& (0+255),b
 11160  006634  CFF3 F07B          	movff	prodl,___wmul@product
 11161  006638  CFF4 F07C          	movff	prodh,___wmul@product+1
 11162  00663C  0100               	movlb	0	; () banked
 11163  00663E  5177               	movf	___wmul@multiplier& (0+255),w,b
 11164  006640  0100               	movlb	0	; () banked
 11165  006642  037A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11166  006644  50F3               	movf	prodl,w,c
 11167  006646  0100               	movlb	0	; () banked
 11168  006648  277C               	addwf	(___wmul@product+1)& (0+255),f,b
 11169  00664A  0100               	movlb	0	; () banked
 11170  00664C  5178               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11171  00664E  0100               	movlb	0	; () banked
 11172  006650  0379               	mulwf	___wmul@multiplicand& (0+255),b
 11173  006652  50F3               	movf	prodl,w,c
 11174  006654  0100               	movlb	0	; () banked
 11175  006656  277C               	addwf	(___wmul@product+1)& (0+255),f,b
 11176                           
 11177                           ; BSR set to: 0
 11178  006658  C07B  F077         	movff	___wmul@product,?___wmul
 11179  00665C  C07C  F078         	movff	___wmul@product+1,?___wmul+1
 11180  006660  0012               	return	
 11181  006662                     __end_of___wmul:
 11182                           	opt stack 0
 11183                           tblptru	equ	0xFF8
 11184                           tblptrh	equ	0xFF7
 11185                           tblptrl	equ	0xFF6
 11186                           tablat	equ	0xFF5
 11187                           prodh	equ	0xFF4
 11188                           prodl	equ	0xFF3
 11189                           postinc0	equ	0xFEE
 11190                           wreg	equ	0xFE8
 11191                           postdec1	equ	0xFE5
 11192                           fsr1l	equ	0xFE1
 11193                           indf2	equ	0xFDF
 11194                           postinc2	equ	0xFDE
 11195                           postdec2	equ	0xFDD
 11196                           fsr2h	equ	0xFDA
 11197                           fsr2l	equ	0xFD9
 11198                           status	equ	0xFD8
 11199                           
 11200 ;; *************** function _configurazione *****************
 11201 ;; Defined at:
 11202 ;;		line 483 in file "parcheggio.c"
 11203 ;; Parameters:    Size  Location     Type
 11204 ;;		None
 11205 ;; Auto vars:     Size  Location     Type
 11206 ;;		None
 11207 ;; Return value:  Size  Location     Type
 11208 ;;		None               void
 11209 ;; Registers used:
 11210 ;;		wreg, status,2, status,0, cstack
 11211 ;; Tracked objects:
 11212 ;;		On entry : 0/0
 11213 ;;		On exit  : 0/0
 11214 ;;		Unchanged: 0/0
 11215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11220 ;;Total ram usage:        0 bytes
 11221 ;; Hardware stack levels used:    1
 11222 ;; Hardware stack levels required when called:    6
 11223 ;; This function calls:
 11224 ;;		_CANInitialize
 11225 ;; This function is called by:
 11226 ;;		_main
 11227 ;; This function uses a non-reentrant model
 11228 ;;
 11229                           
 11230                           	psect	text29
 11231  006474                     __ptext29:
 11232                           	opt stack 0
 11233  006474                     _configurazione:
 11234                           	opt stack 24
 11235                           
 11236                           ;parcheggio.c: 484: LATA = 0x00;
 11237                           
 11238                           ; BSR set to: 0
 11239                           ;incstack = 0
 11240  006474  0E00               	movlw	0
 11241  006476  6E89               	movwf	3977,c	;volatile
 11242                           
 11243                           ;parcheggio.c: 485: TRISA = 0b11110000;
 11244  006478  0EF0               	movlw	240
 11245  00647A  6E92               	movwf	3986,c	;volatile
 11246                           
 11247                           ;parcheggio.c: 487: LATB = 0x00;
 11248  00647C  0E00               	movlw	0
 11249  00647E  6E8A               	movwf	3978,c	;volatile
 11250                           
 11251                           ;parcheggio.c: 488: TRISB = 0b10001010;
 11252  006480  0E8A               	movlw	138
 11253  006482  6E93               	movwf	3987,c	;volatile
 11254                           
 11255                           ;parcheggio.c: 490: LATC = 0x00;
 11256  006484  0E00               	movlw	0
 11257  006486  6E8B               	movwf	3979,c	;volatile
 11258                           
 11259                           ;parcheggio.c: 491: TRISC = 0b11111111;
 11260  006488  6894               	setf	3988,c	;volatile
 11261                           
 11262                           ;parcheggio.c: 493: ADCON1 = 0xFF;
 11263  00648A  68C1               	setf	4033,c	;volatile
 11264                           
 11265                           ;parcheggio.c: 494: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG
      +                          _SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
 11266  00648C  0E06               	movlw	6
 11267  00648E  0100               	movlb	0	; () banked
 11268  006490  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 11269  006492  0E05               	movlw	5
 11270  006494  0100               	movlb	0	; () banked
 11271  006496  6F86               	movwf	CANInitialize@phaseSeg2& (0+255),b
 11272  006498  0E01               	movlw	1
 11273  00649A  0100               	movlb	0	; () banked
 11274  00649C  6F87               	movwf	CANInitialize@SJW& (0+255),b
 11275  00649E  0E03               	movlw	3
 11276  0064A0  0100               	movlb	0	; () banked
 11277  0064A2  6F88               	movwf	CANInitialize@BRP& (0+255),b
 11278  0064A4  0E9D               	movlw	157
 11279  0064A6  0100               	movlb	0	; () banked
 11280  0064A8  6F89               	movwf	CANInitialize@flags& (0+255),b
 11281  0064AA  0E04               	movlw	4
 11282  0064AC  EC6D  F02B         	call	_CANInitialize
 11283                           
 11284                           ;parcheggio.c: 496: RCONbits.IPEN = 1;
 11285  0064B0  8ED0               	bsf	4048,7,c	;volatile
 11286                           
 11287                           ;parcheggio.c: 497: PIR3bits.RXB1IF = 0;
 11288  0064B2  92A4               	bcf	4004,1,c	;volatile
 11289                           
 11290                           ;parcheggio.c: 498: PIR3bits.RXB0IF = 0;
 11291  0064B4  90A4               	bcf	4004,0,c	;volatile
 11292                           
 11293                           ;parcheggio.c: 499: IPR3bits.RXB1IP = 0;
 11294  0064B6  92A5               	bcf	4005,1,c	;volatile
 11295                           
 11296                           ;parcheggio.c: 500: IPR3bits.RXB0IP = 0;
 11297  0064B8  90A5               	bcf	4005,0,c	;volatile
 11298                           
 11299                           ;parcheggio.c: 501: PIE3bits.RXB1IE = 1;
 11300  0064BA  82A3               	bsf	4003,1,c	;volatile
 11301                           
 11302                           ;parcheggio.c: 502: PIE3bits.RXB0IE = 1;
 11303  0064BC  80A3               	bsf	4003,0,c	;volatile
 11304                           
 11305                           ;parcheggio.c: 503: INTCON2bits.TMR0IP = 0;
 11306  0064BE  94F1               	bcf	intcon2,2,c	;volatile
 11307                           
 11308                           ;parcheggio.c: 504: T0CON = 0x80;
 11309  0064C0  0E80               	movlw	128
 11310  0064C2  6ED5               	movwf	4053,c	;volatile
 11311                           
 11312                           ;parcheggio.c: 505: T3CON = 0x11;
 11313  0064C4  0E11               	movlw	17
 11314  0064C6  6EB1               	movwf	4017,c	;volatile
 11315                           
 11316                           ;parcheggio.c: 506: TMR0H = 0x34;
 11317  0064C8  0E34               	movlw	52
 11318  0064CA  6ED7               	movwf	4055,c	;volatile
 11319                           
 11320                           ;parcheggio.c: 507: TMR0L = 0xE0;
 11321  0064CC  0EE0               	movlw	224
 11322  0064CE  6ED6               	movwf	4054,c	;volatile
 11323                           
 11324                           ;parcheggio.c: 508: INTCONbits.TMR0IF = 0;
 11325  0064D0  94F2               	bcf	intcon,2,c	;volatile
 11326                           
 11327                           ;parcheggio.c: 509: INTCONbits.TMR0IE = 1;
 11328  0064D2  8AF2               	bsf	intcon,5,c	;volatile
 11329                           
 11330                           ;parcheggio.c: 510: INTCON2bits.INTEDG0 = 1;
 11331  0064D4  8CF1               	bsf	intcon2,6,c	;volatile
 11332                           
 11333                           ;parcheggio.c: 511: INTCONbits.INT0IF = 0;
 11334  0064D6  92F2               	bcf	intcon,1,c	;volatile
 11335                           
 11336                           ;parcheggio.c: 512: INTCONbits.INT0IE = 0;
 11337  0064D8  98F2               	bcf	intcon,4,c	;volatile
 11338                           
 11339                           ;parcheggio.c: 513: INTCONbits.GIEL = 1;
 11340  0064DA  8CF2               	bsf	intcon,6,c	;volatile
 11341                           
 11342                           ;parcheggio.c: 514: INTCONbits.GIEH = 1;
 11343  0064DC  8EF2               	bsf	intcon,7,c	;volatile
 11344  0064DE  0012               	return		;funcret
 11345  0064E0                     __end_of_configurazione:
 11346                           	opt stack 0
 11347                           tblptru	equ	0xFF8
 11348                           tblptrh	equ	0xFF7
 11349                           tblptrl	equ	0xFF6
 11350                           tablat	equ	0xFF5
 11351                           prodh	equ	0xFF4
 11352                           prodl	equ	0xFF3
 11353                           intcon	equ	0xFF2
 11354                           intcon2	equ	0xFF1
 11355                           postinc0	equ	0xFEE
 11356                           wreg	equ	0xFE8
 11357                           postdec1	equ	0xFE5
 11358                           fsr1l	equ	0xFE1
 11359                           indf2	equ	0xFDF
 11360                           postinc2	equ	0xFDE
 11361                           postdec2	equ	0xFDD
 11362                           fsr2h	equ	0xFDA
 11363                           fsr2l	equ	0xFD9
 11364                           status	equ	0xFD8
 11365                           
 11366 ;; *************** function _CANInitialize *****************
 11367 ;; Defined at:
 11368 ;;		line 219 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 11369 ;; Parameters:    Size  Location     Type
 11370 ;;  propSeg         1    wreg     unsigned char 
 11371 ;;  phaseSeg1       1   37[BANK0 ] unsigned char 
 11372 ;;  phaseSeg2       1   38[BANK0 ] unsigned char 
 11373 ;;  SJW             1   39[BANK0 ] unsigned char 
 11374 ;;  BRP             1   40[BANK0 ] unsigned char 
 11375 ;;  flags           1   41[BANK0 ] enum E16313
 11376 ;; Auto vars:     Size  Location     Type
 11377 ;;  propSeg         1   46[BANK0 ] unsigned char 
 11378 ;;  FilterConfig    1   48[BANK0 ] unsigned char 
 11379 ;;  FilterConfig    1   47[BANK0 ] unsigned char 
 11380 ;; Return value:  Size  Location     Type
 11381 ;;		None               void
 11382 ;; Registers used:
 11383 ;;		wreg, status,2, status,0, cstack
 11384 ;; Tracked objects:
 11385 ;;		On entry : 0/0
 11386 ;;		On exit  : 0/0
 11387 ;;		Unchanged: 0/0
 11388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11389 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11390 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11391 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11392 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11393 ;;Total ram usage:       12 bytes
 11394 ;; Hardware stack levels used:    1
 11395 ;; Hardware stack levels required when called:    5
 11396 ;; This function calls:
 11397 ;;		_CANOperationMode
 11398 ;;		_CANSetFilter
 11399 ;;		_CANSetMask
 11400 ;; This function is called by:
 11401 ;;		_configurazione
 11402 ;; This function uses a non-reentrant model
 11403 ;;
 11404                           
 11405                           	psect	text30
 11406  0056DA                     __ptext30:
 11407                           	opt stack 0
 11408  0056DA                     _CANInitialize:
 11409                           	opt stack 24
 11410                           
 11411                           ;incstack = 0
 11412                           ;CANInitialize@propSeg stored from wreg
 11413  0056DA  0100               	movlb	0	; () banked
 11414  0056DC  6F8E               	movwf	CANInitialize@propSeg& (0+255),b
 11415                           
 11416                           ;inc\CANlib.h: 221: BYTE FilterConfig1;
 11417                           ;inc\CANlib.h: 222: BYTE FilterConfig2;
 11418                           ;inc\CANlib.h: 224: CANOperationMode(CAN_OP_MODE_CONFIG);
 11419  0056DE  0E80               	movlw	128
 11420  0056E0  EC7E  F033         	call	_CANOperationMode
 11421                           
 11422                           ;inc\CANlib.h: 226: BRGCON1 = 0x00;
 11423  0056E4  0E00               	movlw	0
 11424  0056E6  6E70               	movwf	3952,c	;volatile
 11425                           
 11426                           ;inc\CANlib.h: 227: BRGCON2 = 0x00;
 11427  0056E8  0E00               	movlw	0
 11428  0056EA  6E71               	movwf	3953,c	;volatile
 11429                           
 11430                           ;inc\CANlib.h: 228: BRGCON3 = 0x00;
 11431  0056EC  0E00               	movlw	0
 11432  0056EE  6E72               	movwf	3954,c	;volatile
 11433                           
 11434                           ;inc\CANlib.h: 230: SJW= SJW << 6;
 11435  0056F0  0100               	movlb	0	; () banked
 11436  0056F2  4187               	rrncf	CANInitialize@SJW& (0+255),w,b
 11437  0056F4  42E8               	rrncf	wreg,f,c
 11438  0056F6  0BC0               	andlw	192
 11439  0056F8  0100               	movlb	0	; () banked
 11440  0056FA  6F87               	movwf	CANInitialize@SJW& (0+255),b
 11441                           
 11442                           ; BSR set to: 0
 11443                           ;inc\CANlib.h: 231: BRGCON1 |= SJW;
 11444  0056FC  0100               	movlb	0	; () banked
 11445  0056FE  5187               	movf	CANInitialize@SJW& (0+255),w,b
 11446  005700  1270               	iorwf	3952,f,c	;volatile
 11447                           
 11448                           ; BSR set to: 0
 11449                           ;inc\CANlib.h: 232: BRGCON1 |= BRP;
 11450  005702  0100               	movlb	0	; () banked
 11451  005704  5188               	movf	CANInitialize@BRP& (0+255),w,b
 11452  005706  1270               	iorwf	3952,f,c	;volatile
 11453                           
 11454                           ; BSR set to: 0
 11455                           ;inc\CANlib.h: 234: BRGCON2 |= propSeg;
 11456  005708  0100               	movlb	0	; () banked
 11457  00570A  518E               	movf	CANInitialize@propSeg& (0+255),w,b
 11458  00570C  1271               	iorwf	3953,f,c	;volatile
 11459                           
 11460                           ; BSR set to: 0
 11461                           ;inc\CANlib.h: 235: phaseSeg1 = phaseSeg1 <<3;
 11462  00570E  0100               	movlb	0	; () banked
 11463  005710  3985               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
 11464  005712  42E8               	rrncf	wreg,f,c
 11465  005714  0BF8               	andlw	248
 11466  005716  0100               	movlb	0	; () banked
 11467  005718  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 11468                           
 11469                           ; BSR set to: 0
 11470                           ;inc\CANlib.h: 236: BRGCON2 |= phaseSeg1;
 11471  00571A  0100               	movlb	0	; () banked
 11472  00571C  5185               	movf	CANInitialize@phaseSeg1& (0+255),w,b
 11473  00571E  1271               	iorwf	3953,f,c	;volatile
 11474                           
 11475                           ; BSR set to: 0
 11476                           ;inc\CANlib.h: 238: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
 11477  005720  0100               	movlb	0	; () banked
 11478  005722  A589               	btfss	CANInitialize@flags& (0+255),2,b
 11479                           
 11480                           ; BSR set to: 0
 11481                           ;inc\CANlib.h: 239: BRGCON2bits.SAM= 1;
 11482  005724  8C71               	bsf	3953,6,c	;volatile
 11483                           
 11484                           ; BSR set to: 0
 11485                           ;inc\CANlib.h: 241: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
 11486  005726  0100               	movlb	0	; () banked
 11487  005728  B189               	btfsc	CANInitialize@flags& (0+255),0,b
 11488                           
 11489                           ; BSR set to: 0
 11490                           ;inc\CANlib.h: 242: BRGCON2bits.SEG2PHTS = 1;
 11491  00572A  8E71               	bsf	3953,7,c	;volatile
 11492                           
 11493                           ; BSR set to: 0
 11494                           ;inc\CANlib.h: 244: BRGCON3 |= phaseSeg2;
 11495                           
 11496                           ; BSR set to: 0
 11497  00572C  0100               	movlb	0	; () banked
 11498  00572E  5186               	movf	CANInitialize@phaseSeg2& (0+255),w,b
 11499  005730  1272               	iorwf	3954,f,c	;volatile
 11500                           
 11501                           ; BSR set to: 0
 11502                           ;inc\CANlib.h: 246: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
 11503  005732  0100               	movlb	0	; () banked
 11504  005734  B389               	btfsc	CANInitialize@flags& (0+255),1,b
 11505                           
 11506                           ; BSR set to: 0
 11507                           ;inc\CANlib.h: 247: BRGCON3bits.WAKFIL = 1;
 11508  005736  8C72               	bsf	3954,6,c	;volatile
 11509                           
 11510                           ; BSR set to: 0
 11511                           ;inc\CANlib.h: 252: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
 11512                           
 11513                           ; BSR set to: 0
 11514  005738  0100               	movlb	0	; () banked
 11515  00573A  5189               	movf	CANInitialize@flags& (0+255),w,b
 11516  00573C  0B60               	andlw	96
 11517  00573E  6E60               	movwf	3936,c	;volatile
 11518                           
 11519                           ;inc\CANlib.h: 253: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
 11520  005740  0100               	movlb	0	; () banked
 11521  005742  5189               	movf	CANInitialize@flags& (0+255),w,b
 11522  005744  0B10               	andlw	16
 11523  005746  0AFF               	xorlw	255
 11524  005748  B4D8               	btfsc	status,2,c
 11525                           
 11526                           ; BSR set to: 0
 11527                           ;inc\CANlib.h: 254: RXB0CONbits.RXB0DBEN = 1;
 11528  00574A  8460               	bsf	3936,2,c	;volatile
 11529                           
 11530                           ; BSR set to: 0
 11531                           ;inc\CANlib.h: 256: RXB1CON = RXB0CON;
 11532  00574C  CF60 FF50          	movff	3936,3920	;volatile
 11533                           
 11534                           ; BSR set to: 0
 11535                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
 11536  005750  0E00               	movlw	0
 11537  005752  0100               	movlb	0	; () banked
 11538  005754  6F77               	movwf	CANSetMask@mask& (0+255),b
 11539  005756  0E00               	movlw	0
 11540  005758  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 11541  00575A  0E00               	movlw	0
 11542  00575C  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 11543  00575E  0E00               	movlw	0
 11544  005760  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 11545  005762  0EF7               	movlw	247
 11546  005764  0100               	movlb	0	; () banked
 11547  005766  6F7B               	movwf	CANSetMask@type& (0+255),b
 11548  005768  0E01               	movlw	1
 11549  00576A  EC37  F023         	call	_CANSetMask
 11550                           
 11551                           ;inc\CANlib.h: 261: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
 11552  00576E  0E00               	movlw	0
 11553  005770  0100               	movlb	0	; () banked
 11554  005772  6F77               	movwf	CANSetMask@mask& (0+255),b
 11555  005774  0E00               	movlw	0
 11556  005776  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 11557  005778  0E00               	movlw	0
 11558  00577A  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 11559  00577C  0E00               	movlw	0
 11560  00577E  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 11561  005780  0EF7               	movlw	247
 11562  005782  0100               	movlb	0	; () banked
 11563  005784  6F7B               	movwf	CANSetMask@type& (0+255),b
 11564  005786  0E02               	movlw	2
 11565  005788  EC37  F023         	call	_CANSetMask
 11566                           
 11567                           ;inc\CANlib.h: 264: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
 11568  00578C  D00F               	goto	l7952
 11569  00578E                     l7946:
 11570                           
 11571                           ;inc\CANlib.h: 267: FilterConfig1 = CAN_CONFIG_XTD_MSG;
 11572  00578E  0EF7               	movlw	247
 11573  005790  0100               	movlb	0	; () banked
 11574  005792  6F8F               	movwf	CANInitialize@FilterConfig1& (0+255),b
 11575  005794  D007               	goto	l7948
 11576  005796                     l358:
 11577                           
 11578                           ; BSR set to: 0
 11579                           ;inc\CANlib.h: 272: FilterConfig1 = CAN_CONFIG_STD_MSG;
 11580  005796  0100               	movlb	0	; () banked
 11581  005798  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 11582                           
 11583                           ;inc\CANlib.h: 273: FilterConfig2 = CAN_CONFIG_STD_MSG;
 11584  00579A  0100               	movlb	0	; () banked
 11585  00579C  6990               	setf	CANInitialize@FilterConfig2& (0+255),b
 11586                           
 11587                           ;inc\CANlib.h: 274: break;
 11588  00579E  D028               	goto	l7954
 11589  0057A0                     l359:
 11590                           
 11591                           ; BSR set to: 0
 11592                           ;inc\CANlib.h: 276: FilterConfig1 = CAN_CONFIG_STD_MSG;
 11593  0057A0  0100               	movlb	0	; () banked
 11594  0057A2  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 11595  0057A4                     l7948:
 11596                           
 11597                           ; BSR set to: 0
 11598                           ;inc\CANlib.h: 277: FilterConfig2 = CAN_CONFIG_XTD_MSG;
 11599  0057A4  0EF7               	movlw	247
 11600  0057A6  0100               	movlb	0	; () banked
 11601  0057A8  6F90               	movwf	CANInitialize@FilterConfig2& (0+255),b
 11602                           
 11603                           ; BSR set to: 0
 11604                           ;inc\CANlib.h: 279: }
 11605                           
 11606                           ;inc\CANlib.h: 278: break;
 11607  0057AA  D022               	goto	l7954
 11608  0057AC                     l7952:
 11609  0057AC  0E9F               	movlw	159
 11610  0057AE  0100               	movlb	0	; () banked
 11611  0057B0  6F8A               	movwf	??_CANInitialize& (0+255),b
 11612  0057B2  0EFF               	movlw	255
 11613  0057B4  0100               	movlb	0	; () banked
 11614  0057B6  6F8B               	movwf	(??_CANInitialize+1)& (0+255),b
 11615  0057B8  0100               	movlb	0	; () banked
 11616  0057BA  5189               	movf	CANInitialize@flags& (0+255),w,b
 11617  0057BC  0B60               	andlw	96
 11618  0057BE  0100               	movlb	0	; () banked
 11619  0057C0  6F8C               	movwf	(??_CANInitialize+2)& (0+255),b
 11620  0057C2  6B8D               	clrf	(??_CANInitialize+3)& (0+255),b
 11621  0057C4  0100               	movlb	0	; () banked
 11622  0057C6  518A               	movf	??_CANInitialize& (0+255),w,b
 11623  0057C8  0100               	movlb	0	; () banked
 11624  0057CA  138C               	iorwf	(??_CANInitialize+2)& (0+255),f,b
 11625  0057CC  0100               	movlb	0	; () banked
 11626  0057CE  518B               	movf	(??_CANInitialize+1)& (0+255),w,b
 11627  0057D0  0100               	movlb	0	; () banked
 11628  0057D2  138D               	iorwf	(??_CANInitialize+3)& (0+255),f,b
 11629                           
 11630                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11631                           ; Switch size 1, requested type "space"
 11632                           ; Number of cases is 1, Range of values is 0 to 0
 11633                           ; switch strategies available:
 11634                           ; Name         Instructions Cycles
 11635                           ; simple_byte            4     3 (average)
 11636                           ;	Chosen strategy is simple_byte
 11637  0057D4  0100               	movlb	0	; () banked
 11638  0057D6  518D               	movf	(??_CANInitialize+3)& (0+255),w,b
 11639  0057D8  0A00               	xorlw	0	; case 0
 11640  0057DA  A4D8               	btfss	status,2,c
 11641  0057DC  D7E1               	goto	l359
 11642                           
 11643                           ; BSR set to: 0
 11644                           ; Switch size 1, requested type "space"
 11645                           ; Number of cases is 2, Range of values is 191 to 223
 11646                           ; switch strategies available:
 11647                           ; Name         Instructions Cycles
 11648                           ; simple_byte            7     4 (average)
 11649                           ;	Chosen strategy is simple_byte
 11650  0057DE  0100               	movlb	0	; () banked
 11651  0057E0  518C               	movf	(??_CANInitialize+2)& (0+255),w,b
 11652  0057E2  0ABF               	xorlw	191	; case 191
 11653  0057E4  B4D8               	btfsc	status,2,c
 11654  0057E6  D7D7               	goto	l358
 11655  0057E8  0A60               	xorlw	96	; case 223
 11656  0057EA  B4D8               	btfsc	status,2,c
 11657  0057EC  D7D0               	goto	l7946
 11658  0057EE  D7D8               	goto	l359
 11659  0057F0                     l7954:
 11660                           
 11661                           ; BSR set to: 0
 11662                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
 11663  0057F0  0E00               	movlw	0
 11664  0057F2  0100               	movlb	0	; () banked
 11665  0057F4  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11666  0057F6  0E00               	movlw	0
 11667  0057F8  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11668  0057FA  0E00               	movlw	0
 11669  0057FC  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11670  0057FE  0E00               	movlw	0
 11671  005800  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11672  005802  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11673  005806  0E00               	movlw	0
 11674  005808  ECA9  F006         	call	_CANSetFilter
 11675                           
 11676                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
 11677  00580C  0E00               	movlw	0
 11678  00580E  0100               	movlb	0	; () banked
 11679  005810  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11680  005812  0E00               	movlw	0
 11681  005814  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11682  005816  0E00               	movlw	0
 11683  005818  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11684  00581A  0E00               	movlw	0
 11685  00581C  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11686  00581E  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11687  005822  0E01               	movlw	1
 11688  005824  ECA9  F006         	call	_CANSetFilter
 11689                           
 11690                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
 11691  005828  0E00               	movlw	0
 11692  00582A  0100               	movlb	0	; () banked
 11693  00582C  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11694  00582E  0E00               	movlw	0
 11695  005830  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11696  005832  0E00               	movlw	0
 11697  005834  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11698  005836  0E00               	movlw	0
 11699  005838  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11700  00583A  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11701  00583E  0E02               	movlw	2
 11702  005840  ECA9  F006         	call	_CANSetFilter
 11703                           
 11704                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
 11705  005844  0E00               	movlw	0
 11706  005846  0100               	movlb	0	; () banked
 11707  005848  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11708  00584A  0E00               	movlw	0
 11709  00584C  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11710  00584E  0E00               	movlw	0
 11711  005850  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11712  005852  0E00               	movlw	0
 11713  005854  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11714  005856  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11715  00585A  0E03               	movlw	3
 11716  00585C  ECA9  F006         	call	_CANSetFilter
 11717                           
 11718                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
 11719  005860  0E00               	movlw	0
 11720  005862  0100               	movlb	0	; () banked
 11721  005864  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11722  005866  0E00               	movlw	0
 11723  005868  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11724  00586A  0E00               	movlw	0
 11725  00586C  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11726  00586E  0E00               	movlw	0
 11727  005870  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11728  005872  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11729  005876  0E04               	movlw	4
 11730  005878  ECA9  F006         	call	_CANSetFilter
 11731                           
 11732                           ;inc\CANlib.h: 286: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
 11733  00587C  0E00               	movlw	0
 11734  00587E  0100               	movlb	0	; () banked
 11735  005880  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11736  005882  0E00               	movlw	0
 11737  005884  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11738  005886  0E00               	movlw	0
 11739  005888  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11740  00588A  0E00               	movlw	0
 11741  00588C  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11742  00588E  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11743  005892  0E05               	movlw	5
 11744  005894  ECA9  F006         	call	_CANSetFilter
 11745                           
 11746                           ;inc\CANlib.h: 288: CANOperationMode(CAN_OP_MODE_NORMAL);
 11747  005898  0E00               	movlw	0
 11748  00589A  EC7E  F033         	call	_CANOperationMode
 11749  00589E  0012               	return		;funcret
 11750  0058A0                     __end_of_CANInitialize:
 11751                           	opt stack 0
 11752                           tblptru	equ	0xFF8
 11753                           tblptrh	equ	0xFF7
 11754                           tblptrl	equ	0xFF6
 11755                           tablat	equ	0xFF5
 11756                           prodh	equ	0xFF4
 11757                           prodl	equ	0xFF3
 11758                           intcon	equ	0xFF2
 11759                           intcon2	equ	0xFF1
 11760                           postinc0	equ	0xFEE
 11761                           wreg	equ	0xFE8
 11762                           postdec1	equ	0xFE5
 11763                           fsr1l	equ	0xFE1
 11764                           indf2	equ	0xFDF
 11765                           postinc2	equ	0xFDE
 11766                           postdec2	equ	0xFDD
 11767                           fsr2h	equ	0xFDA
 11768                           fsr2l	equ	0xFD9
 11769                           status	equ	0xFD8
 11770                           
 11771 ;; *************** function _CANSetMask *****************
 11772 ;; Defined at:
 11773 ;;		line 641 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 11774 ;; Parameters:    Size  Location     Type
 11775 ;;  numBuffer       1    wreg     enum E16347
 11776 ;;  mask            4   23[BANK0 ] unsigned long 
 11777 ;;  type            1   27[BANK0 ] enum E16313
 11778 ;; Auto vars:     Size  Location     Type
 11779 ;;  numBuffer       1   32[BANK0 ] enum E16347
 11780 ;;  tamp            4   33[BANK0 ] unsigned long 
 11781 ;; Return value:  Size  Location     Type
 11782 ;;		None               void
 11783 ;; Registers used:
 11784 ;;		wreg, status,2, status,0
 11785 ;; Tracked objects:
 11786 ;;		On entry : 0/0
 11787 ;;		On exit  : 0/0
 11788 ;;		Unchanged: 0/0
 11789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11790 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11791 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11792 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11793 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11794 ;;Total ram usage:       14 bytes
 11795 ;; Hardware stack levels used:    1
 11796 ;; Hardware stack levels required when called:    4
 11797 ;; This function calls:
 11798 ;;		Nothing
 11799 ;; This function is called by:
 11800 ;;		_CANInitialize
 11801 ;; This function uses a non-reentrant model
 11802 ;;
 11803                           
 11804                           	psect	text31
 11805  00466E                     __ptext31:
 11806                           	opt stack 0
 11807  00466E                     _CANSetMask:
 11808                           	opt stack 24
 11809                           
 11810                           ;incstack = 0
 11811                           ;CANSetMask@numBuffer stored from wreg
 11812  00466E  0100               	movlb	0	; () banked
 11813  004670  6F80               	movwf	CANSetMask@numBuffer& (0+255),b
 11814                           
 11815                           ;inc\CANlib.h: 644: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
 11816  004672  0100               	movlb	0	; () banked
 11817  004674  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 11818  004676  A4D8               	btfss	status,2,c
 11819  004678  D056               	goto	l5262
 11820                           
 11821                           ; BSR set to: 0
 11822  00467A  0100               	movlb	0	; () banked
 11823  00467C  297B               	incf	CANSetMask@type& (0+255),w,b
 11824  00467E  A4D8               	btfss	status,2,c
 11825  004680  D052               	goto	l5262
 11826                           
 11827                           ; BSR set to: 0
 11828                           ;inc\CANlib.h: 645: {
 11829                           ;inc\CANlib.h: 646: tamp = (mask >> 3);
 11830  004682  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11831  004686  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11832  00468A  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11833  00468E  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11834  004692  0E04               	movlw	4
 11835  004694  D006               	goto	u6120
 11836  004696                     u6125:
 11837  004696  0100               	movlb	0	; () banked
 11838  004698  90D8               	bcf	status,0,c
 11839  00469A  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11840  00469C  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11841  00469E  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11842  0046A0  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11843  0046A2                     u6120:
 11844  0046A2  2EE8               	decfsz	wreg,f,c
 11845  0046A4  D7F8               	goto	u6125
 11846  0046A6  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11847  0046AA  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11848  0046AE  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11849  0046B2  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11850                           
 11851                           ; BSR set to: 0
 11852                           ;inc\CANlib.h: 647: tamp = tamp & 0x000000FF;
 11853  0046B6  0100               	movlb	0	; () banked
 11854  0046B8  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11855  0046BA  0100               	movlb	0	; () banked
 11856  0046BC  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11857  0046BE  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11858  0046C0  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11859  0046C2  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11860                           
 11861                           ; BSR set to: 0
 11862                           ;inc\CANlib.h: 648: RXM0SIDH = (unsigned char) tamp;
 11863  0046C4  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 11864                           
 11865                           ; BSR set to: 0
 11866                           ;inc\CANlib.h: 650: tamp = mask & 0x00000007;
 11867  0046C8  0E07               	movlw	7
 11868  0046CA  0100               	movlb	0	; () banked
 11869  0046CC  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11870  0046CE  0100               	movlb	0	; () banked
 11871  0046D0  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11872  0046D2  0E00               	movlw	0
 11873  0046D4  0100               	movlb	0	; () banked
 11874  0046D6  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11875  0046D8  0100               	movlb	0	; () banked
 11876  0046DA  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11877  0046DC  0E00               	movlw	0
 11878  0046DE  0100               	movlb	0	; () banked
 11879  0046E0  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11880  0046E2  0100               	movlb	0	; () banked
 11881  0046E4  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11882  0046E6  0E00               	movlw	0
 11883  0046E8  0100               	movlb	0	; () banked
 11884  0046EA  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11885  0046EC  0100               	movlb	0	; () banked
 11886  0046EE  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11887                           
 11888                           ; BSR set to: 0
 11889                           ;inc\CANlib.h: 651: tamp = tamp << 5;
 11890  0046F0  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11891  0046F4  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11892  0046F8  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11893  0046FC  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11894  004700  0E05               	movlw	5
 11895  004702                     u6135:
 11896  004702  90D8               	bcf	status,0,c
 11897  004704  0100               	movlb	0	; () banked
 11898  004706  377C               	rlcf	??_CANSetMask& (0+255),f,b
 11899  004708  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 11900  00470A  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 11901  00470C  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 11902  00470E  2EE8               	decfsz	wreg,f,c
 11903  004710  D7F8               	goto	u6135
 11904  004712  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11905  004716  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11906  00471A  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11907  00471E  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11908                           
 11909                           ; BSR set to: 0
 11910                           ;inc\CANlib.h: 652: RXM0SIDL = (unsigned char) tamp;
 11911  004722  C081  FF19         	movff	CANSetMask@tamp,3865	;volatile
 11912  004726                     l5262:
 11913                           
 11914                           ; BSR set to: 0
 11915                           ;inc\CANlib.h: 653: }
 11916                           ;inc\CANlib.h: 655: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
 11917  004726  0E02               	movlw	2
 11918  004728  0100               	movlb	0	; () banked
 11919  00472A  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 11920  00472C  A4D8               	btfss	status,2,c
 11921  00472E  D056               	goto	l5278
 11922                           
 11923                           ; BSR set to: 0
 11924  004730  0100               	movlb	0	; () banked
 11925  004732  297B               	incf	CANSetMask@type& (0+255),w,b
 11926  004734  A4D8               	btfss	status,2,c
 11927  004736  D052               	goto	l5278
 11928                           
 11929                           ; BSR set to: 0
 11930                           ;inc\CANlib.h: 656: {
 11931                           ;inc\CANlib.h: 657: tamp = (mask >> 3);
 11932  004738  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11933  00473C  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11934  004740  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11935  004744  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11936  004748  0E04               	movlw	4
 11937  00474A  D006               	goto	u6160
 11938  00474C                     u6165:
 11939  00474C  0100               	movlb	0	; () banked
 11940  00474E  90D8               	bcf	status,0,c
 11941  004750  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11942  004752  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11943  004754  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11944  004756  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11945  004758                     u6160:
 11946  004758  2EE8               	decfsz	wreg,f,c
 11947  00475A  D7F8               	goto	u6165
 11948  00475C  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11949  004760  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11950  004764  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11951  004768  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11952                           
 11953                           ; BSR set to: 0
 11954                           ;inc\CANlib.h: 658: tamp = tamp & 0x000000FF;
 11955  00476C  0100               	movlb	0	; () banked
 11956  00476E  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11957  004770  0100               	movlb	0	; () banked
 11958  004772  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11959  004774  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11960  004776  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11961  004778  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11962                           
 11963                           ; BSR set to: 0
 11964                           ;inc\CANlib.h: 659: RXM1SIDH = (unsigned char) tamp;
 11965  00477A  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 11966                           
 11967                           ; BSR set to: 0
 11968                           ;inc\CANlib.h: 661: tamp = mask & 0x00000007;
 11969  00477E  0E07               	movlw	7
 11970  004780  0100               	movlb	0	; () banked
 11971  004782  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11972  004784  0100               	movlb	0	; () banked
 11973  004786  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11974  004788  0E00               	movlw	0
 11975  00478A  0100               	movlb	0	; () banked
 11976  00478C  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11977  00478E  0100               	movlb	0	; () banked
 11978  004790  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11979  004792  0E00               	movlw	0
 11980  004794  0100               	movlb	0	; () banked
 11981  004796  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11982  004798  0100               	movlb	0	; () banked
 11983  00479A  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11984  00479C  0E00               	movlw	0
 11985  00479E  0100               	movlb	0	; () banked
 11986  0047A0  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11987  0047A2  0100               	movlb	0	; () banked
 11988  0047A4  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11989                           
 11990                           ; BSR set to: 0
 11991                           ;inc\CANlib.h: 662: tamp = tamp << 5;
 11992  0047A6  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11993  0047AA  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11994  0047AE  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11995  0047B2  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11996  0047B6  0E05               	movlw	5
 11997  0047B8                     u6175:
 11998  0047B8  90D8               	bcf	status,0,c
 11999  0047BA  0100               	movlb	0	; () banked
 12000  0047BC  377C               	rlcf	??_CANSetMask& (0+255),f,b
 12001  0047BE  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 12002  0047C0  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 12003  0047C2  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 12004  0047C4  2EE8               	decfsz	wreg,f,c
 12005  0047C6  D7F8               	goto	u6175
 12006  0047C8  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12007  0047CC  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12008  0047D0  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12009  0047D4  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12010                           
 12011                           ; BSR set to: 0
 12012                           ;inc\CANlib.h: 663: RXM1SIDL = (unsigned char) tamp;
 12013  0047D8  C081  FF1D         	movff	CANSetMask@tamp,3869	;volatile
 12014  0047DC                     l5278:
 12015                           
 12016                           ; BSR set to: 0
 12017                           ;inc\CANlib.h: 664: }
 12018                           ;inc\CANlib.h: 666: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
 12019  0047DC  0100               	movlb	0	; () banked
 12020  0047DE  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 12021  0047E0  A4D8               	btfss	status,2,c
 12022  0047E2  D087               	goto	l5310
 12023                           
 12024                           ; BSR set to: 0
 12025  0047E4  0EF7               	movlw	247
 12026  0047E6  0100               	movlb	0	; () banked
 12027  0047E8  197B               	xorwf	CANSetMask@type& (0+255),w,b
 12028  0047EA  A4D8               	btfss	status,2,c
 12029  0047EC  D082               	goto	l5310
 12030                           
 12031                           ; BSR set to: 0
 12032                           ;inc\CANlib.h: 667: {
 12033                           ;inc\CANlib.h: 668: tamp = mask & 0x000000FF;
 12034  0047EE  0100               	movlb	0	; () banked
 12035  0047F0  5177               	movf	CANSetMask@mask& (0+255),w,b
 12036  0047F2  0100               	movlb	0	; () banked
 12037  0047F4  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12038  0047F6  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12039  0047F8  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12040  0047FA  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12041                           
 12042                           ; BSR set to: 0
 12043                           ;inc\CANlib.h: 669: RXM0EIDL = (unsigned char) tamp;
 12044  0047FC  C081  FF1B         	movff	CANSetMask@tamp,3867	;volatile
 12045                           
 12046                           ; BSR set to: 0
 12047                           ;inc\CANlib.h: 671: tamp = mask & 0x0000FF00;
 12048  004800  0E00               	movlw	0
 12049  004802  0100               	movlb	0	; () banked
 12050  004804  1577               	andwf	CANSetMask@mask& (0+255),w,b
 12051  004806  0100               	movlb	0	; () banked
 12052  004808  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12053  00480A  0EFF               	movlw	255
 12054  00480C  0100               	movlb	0	; () banked
 12055  00480E  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 12056  004810  0100               	movlb	0	; () banked
 12057  004812  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 12058  004814  0E00               	movlw	0
 12059  004816  0100               	movlb	0	; () banked
 12060  004818  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 12061  00481A  0100               	movlb	0	; () banked
 12062  00481C  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 12063  00481E  0E00               	movlw	0
 12064  004820  0100               	movlb	0	; () banked
 12065  004822  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 12066  004824  0100               	movlb	0	; () banked
 12067  004826  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 12068                           
 12069                           ; BSR set to: 0
 12070                           ;inc\CANlib.h: 672: tamp = tamp >> 8;
 12071  004828  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 12072  00482C  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 12073  004830  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 12074  004834  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 12075  004838  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 12076  00483C  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 12077  004840  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 12078  004844  0100               	movlb	0	; () banked
 12079  004846  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 12080  004848  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12081  00484C  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12082  004850  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12083  004854  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12084                           
 12085                           ; BSR set to: 0
 12086                           ;inc\CANlib.h: 673: RXM0EIDH = (unsigned char) tamp;
 12087  004858  C081  FF1A         	movff	CANSetMask@tamp,3866	;volatile
 12088                           
 12089                           ; BSR set to: 0
 12090                           ;inc\CANlib.h: 675: if (mask & 0x00010000)
 12091  00485C  0100               	movlb	0	; () banked
 12092  00485E  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 12093  004860  D003               	goto	l432
 12094                           
 12095                           ; BSR set to: 0
 12096                           ;inc\CANlib.h: 676: RXM0SIDLbits.EID16 = 0x01;
 12097  004862  010F               	movlb	15	; () banked
 12098  004864  8119               	bsf	25,0,b	;volatile
 12099  004866  D002               	goto	l433
 12100  004868                     l432:
 12101                           
 12102                           ; BSR set to: 0
 12103                           ;inc\CANlib.h: 677: else
 12104                           ;inc\CANlib.h: 678: RXM0SIDLbits.EID16 = 0x00;
 12105  004868  010F               	movlb	15	; () banked
 12106  00486A  9119               	bcf	25,0,b	;volatile
 12107  00486C                     l433:
 12108                           
 12109                           ; BSR set to: 15
 12110                           ;inc\CANlib.h: 680: if (mask & 0x00020000)
 12111  00486C  0100               	movlb	0	; () banked
 12112  00486E  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 12113  004870  D003               	goto	l434
 12114                           
 12115                           ; BSR set to: 0
 12116                           ;inc\CANlib.h: 681: RXM0SIDLbits.EID17 = 0x01;
 12117  004872  010F               	movlb	15	; () banked
 12118  004874  8319               	bsf	25,1,b	;volatile
 12119  004876  D002               	goto	l435
 12120  004878                     l434:
 12121                           
 12122                           ; BSR set to: 0
 12123                           ;inc\CANlib.h: 682: else
 12124                           ;inc\CANlib.h: 683: RXM0SIDLbits.EID17 = 0x00;
 12125  004878  010F               	movlb	15	; () banked
 12126  00487A  9319               	bcf	25,1,b	;volatile
 12127  00487C                     l435:
 12128                           
 12129                           ; BSR set to: 15
 12130                           ;inc\CANlib.h: 685: if (mask & 0x00040000)
 12131  00487C  0100               	movlb	0	; () banked
 12132  00487E  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 12133  004880  D003               	goto	l436
 12134                           
 12135                           ; BSR set to: 0
 12136                           ;inc\CANlib.h: 686: RXM0SIDLbits.SID0 = 0x01;
 12137  004882  010F               	movlb	15	; () banked
 12138  004884  8B19               	bsf	25,5,b	;volatile
 12139  004886  D002               	goto	l437
 12140  004888                     l436:
 12141                           
 12142                           ; BSR set to: 0
 12143                           ;inc\CANlib.h: 687: else
 12144                           ;inc\CANlib.h: 688: RXM0SIDLbits.SID0 = 0x00;
 12145  004888  010F               	movlb	15	; () banked
 12146  00488A  9B19               	bcf	25,5,b	;volatile
 12147  00488C                     l437:
 12148                           
 12149                           ; BSR set to: 15
 12150                           ;inc\CANlib.h: 690: if (mask & 0x00080000)
 12151  00488C  0100               	movlb	0	; () banked
 12152  00488E  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 12153  004890  D003               	goto	l438
 12154                           
 12155                           ; BSR set to: 0
 12156                           ;inc\CANlib.h: 691: RXM0SIDLbits.SID1 = 0x01;
 12157  004892  010F               	movlb	15	; () banked
 12158  004894  8D19               	bsf	25,6,b	;volatile
 12159  004896  D002               	goto	l439
 12160  004898                     l438:
 12161                           
 12162                           ; BSR set to: 0
 12163                           ;inc\CANlib.h: 692: else
 12164                           ;inc\CANlib.h: 693: RXM0SIDLbits.SID1 = 0x00;
 12165  004898  010F               	movlb	15	; () banked
 12166  00489A  9D19               	bcf	25,6,b	;volatile
 12167  00489C                     l439:
 12168                           
 12169                           ; BSR set to: 15
 12170                           ;inc\CANlib.h: 695: if (mask & 0x00100000)
 12171  00489C  0100               	movlb	0	; () banked
 12172  00489E  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 12173  0048A0  D003               	goto	l440
 12174                           
 12175                           ; BSR set to: 0
 12176                           ;inc\CANlib.h: 696: RXM0SIDLbits.SID2 = 0x01 ;
 12177  0048A2  010F               	movlb	15	; () banked
 12178  0048A4  8F19               	bsf	25,7,b	;volatile
 12179  0048A6  D002               	goto	l5304
 12180  0048A8                     l440:
 12181                           
 12182                           ; BSR set to: 0
 12183                           ;inc\CANlib.h: 697: else
 12184                           ;inc\CANlib.h: 698: RXM0SIDLbits.SID2 = 0x00 ;
 12185  0048A8  010F               	movlb	15	; () banked
 12186  0048AA  9F19               	bcf	25,7,b	;volatile
 12187  0048AC                     l5304:
 12188                           
 12189                           ; BSR set to: 15
 12190                           ;inc\CANlib.h: 700: tamp = (mask >> 21);
 12191  0048AC  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 12192  0048B0  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 12193  0048B4  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 12194  0048B8  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 12195  0048BC  0E16               	movlw	22
 12196  0048BE  D006               	goto	u6250
 12197  0048C0                     u6255:
 12198  0048C0  0100               	movlb	0	; () banked
 12199  0048C2  90D8               	bcf	status,0,c
 12200  0048C4  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 12201  0048C6  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 12202  0048C8  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 12203  0048CA  337C               	rrcf	??_CANSetMask& (0+255),f,b
 12204  0048CC                     u6250:
 12205  0048CC  2EE8               	decfsz	wreg,f,c
 12206  0048CE  D7F8               	goto	u6255
 12207  0048D0  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12208  0048D4  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12209  0048D8  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12210  0048DC  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12211                           
 12212                           ; BSR set to: 0
 12213                           ;inc\CANlib.h: 701: tamp = tamp & 0x000000FF;
 12214  0048E0  0100               	movlb	0	; () banked
 12215  0048E2  5181               	movf	CANSetMask@tamp& (0+255),w,b
 12216  0048E4  0100               	movlb	0	; () banked
 12217  0048E6  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12218  0048E8  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12219  0048EA  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12220  0048EC  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12221                           
 12222                           ; BSR set to: 0
 12223                           ;inc\CANlib.h: 702: RXM0SIDH = (unsigned char) tamp;
 12224  0048EE  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 12225  0048F2                     l5310:
 12226                           
 12227                           ; BSR set to: 0
 12228                           ;inc\CANlib.h: 703: }
 12229                           ;inc\CANlib.h: 705: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
 12230  0048F2  0E02               	movlw	2
 12231  0048F4  0100               	movlb	0	; () banked
 12232  0048F6  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 12233  0048F8  A4D8               	btfss	status,2,c
 12234  0048FA  0012               	return	
 12235                           
 12236                           ; BSR set to: 0
 12237  0048FC  0EF7               	movlw	247
 12238  0048FE  0100               	movlb	0	; () banked
 12239  004900  197B               	xorwf	CANSetMask@type& (0+255),w,b
 12240  004902  A4D8               	btfss	status,2,c
 12241  004904  0012               	return	
 12242                           
 12243                           ; BSR set to: 0
 12244                           ;inc\CANlib.h: 706: {
 12245                           ;inc\CANlib.h: 707: tamp = mask & 0x000000FF;
 12246  004906  0100               	movlb	0	; () banked
 12247  004908  5177               	movf	CANSetMask@mask& (0+255),w,b
 12248  00490A  0100               	movlb	0	; () banked
 12249  00490C  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12250  00490E  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12251  004910  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12252  004912  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12253                           
 12254                           ; BSR set to: 0
 12255                           ;inc\CANlib.h: 708: RXM1EIDL = (unsigned char) tamp;
 12256  004914  C081  FF1F         	movff	CANSetMask@tamp,3871	;volatile
 12257                           
 12258                           ; BSR set to: 0
 12259                           ;inc\CANlib.h: 710: tamp = mask & 0x0000FF00;
 12260  004918  0E00               	movlw	0
 12261  00491A  0100               	movlb	0	; () banked
 12262  00491C  1577               	andwf	CANSetMask@mask& (0+255),w,b
 12263  00491E  0100               	movlb	0	; () banked
 12264  004920  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12265  004922  0EFF               	movlw	255
 12266  004924  0100               	movlb	0	; () banked
 12267  004926  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 12268  004928  0100               	movlb	0	; () banked
 12269  00492A  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 12270  00492C  0E00               	movlw	0
 12271  00492E  0100               	movlb	0	; () banked
 12272  004930  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 12273  004932  0100               	movlb	0	; () banked
 12274  004934  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 12275  004936  0E00               	movlw	0
 12276  004938  0100               	movlb	0	; () banked
 12277  00493A  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 12278  00493C  0100               	movlb	0	; () banked
 12279  00493E  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 12280                           
 12281                           ; BSR set to: 0
 12282                           ;inc\CANlib.h: 711: tamp = tamp >> 8;
 12283  004940  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 12284  004944  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 12285  004948  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 12286  00494C  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 12287  004950  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 12288  004954  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 12289  004958  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 12290  00495C  0100               	movlb	0	; () banked
 12291  00495E  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 12292  004960  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12293  004964  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12294  004968  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12295  00496C  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12296                           
 12297                           ; BSR set to: 0
 12298                           ;inc\CANlib.h: 712: RXM1EIDH = (unsigned char) tamp;
 12299  004970  C081  FF1E         	movff	CANSetMask@tamp,3870	;volatile
 12300                           
 12301                           ; BSR set to: 0
 12302                           ;inc\CANlib.h: 714: if (mask & 0x00010000)
 12303  004974  0100               	movlb	0	; () banked
 12304  004976  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 12305  004978  D003               	goto	l443
 12306                           
 12307                           ; BSR set to: 0
 12308                           ;inc\CANlib.h: 715: RXM1SIDLbits.EID16 = 0x01;
 12309  00497A  010F               	movlb	15	; () banked
 12310  00497C  811D               	bsf	29,0,b	;volatile
 12311  00497E  D002               	goto	l444
 12312  004980                     l443:
 12313                           
 12314                           ; BSR set to: 0
 12315                           ;inc\CANlib.h: 716: else
 12316                           ;inc\CANlib.h: 717: RXM1SIDLbits.EID16 = 0x00;
 12317  004980  010F               	movlb	15	; () banked
 12318  004982  911D               	bcf	29,0,b	;volatile
 12319  004984                     l444:
 12320                           
 12321                           ; BSR set to: 15
 12322                           ;inc\CANlib.h: 719: if (mask & 0x00020000)
 12323  004984  0100               	movlb	0	; () banked
 12324  004986  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 12325  004988  D003               	goto	l445
 12326                           
 12327                           ; BSR set to: 0
 12328                           ;inc\CANlib.h: 720: RXM1SIDLbits.EID17 = 0x01;
 12329  00498A  010F               	movlb	15	; () banked
 12330  00498C  831D               	bsf	29,1,b	;volatile
 12331  00498E  D002               	goto	l446
 12332  004990                     l445:
 12333                           
 12334                           ; BSR set to: 0
 12335                           ;inc\CANlib.h: 721: else
 12336                           ;inc\CANlib.h: 722: RXM1SIDLbits.EID17 = 0x00;
 12337  004990  010F               	movlb	15	; () banked
 12338  004992  931D               	bcf	29,1,b	;volatile
 12339  004994                     l446:
 12340                           
 12341                           ; BSR set to: 15
 12342                           ;inc\CANlib.h: 724: if (mask & 0x00040000)
 12343  004994  0100               	movlb	0	; () banked
 12344  004996  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 12345  004998  D003               	goto	l447
 12346                           
 12347                           ; BSR set to: 0
 12348                           ;inc\CANlib.h: 725: RXM1SIDLbits.SID0 = 0x01;
 12349  00499A  010F               	movlb	15	; () banked
 12350  00499C  8B1D               	bsf	29,5,b	;volatile
 12351  00499E  D002               	goto	l448
 12352  0049A0                     l447:
 12353                           
 12354                           ; BSR set to: 0
 12355                           ;inc\CANlib.h: 726: else
 12356                           ;inc\CANlib.h: 727: RXM1SIDLbits.SID0 = 0x00;
 12357  0049A0  010F               	movlb	15	; () banked
 12358  0049A2  9B1D               	bcf	29,5,b	;volatile
 12359  0049A4                     l448:
 12360                           
 12361                           ; BSR set to: 15
 12362                           ;inc\CANlib.h: 729: if (mask & 0x00080000)
 12363  0049A4  0100               	movlb	0	; () banked
 12364  0049A6  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 12365  0049A8  D003               	goto	l449
 12366                           
 12367                           ; BSR set to: 0
 12368                           ;inc\CANlib.h: 730: RXM1SIDLbits.SID1 = 0x01;
 12369  0049AA  010F               	movlb	15	; () banked
 12370  0049AC  8D1D               	bsf	29,6,b	;volatile
 12371  0049AE  D002               	goto	l450
 12372  0049B0                     l449:
 12373                           
 12374                           ; BSR set to: 0
 12375                           ;inc\CANlib.h: 731: else
 12376                           ;inc\CANlib.h: 732: RXM1SIDLbits.SID1 = 0x00;
 12377  0049B0  010F               	movlb	15	; () banked
 12378  0049B2  9D1D               	bcf	29,6,b	;volatile
 12379  0049B4                     l450:
 12380                           
 12381                           ; BSR set to: 15
 12382                           ;inc\CANlib.h: 734: if (mask & 0x00100000)
 12383  0049B4  0100               	movlb	0	; () banked
 12384  0049B6  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 12385  0049B8  D003               	goto	l451
 12386                           
 12387                           ; BSR set to: 0
 12388                           ;inc\CANlib.h: 735: RXM1SIDLbits.SID2 = 0x01 ;
 12389  0049BA  010F               	movlb	15	; () banked
 12390  0049BC  8F1D               	bsf	29,7,b	;volatile
 12391  0049BE  D002               	goto	l5336
 12392  0049C0                     l451:
 12393                           
 12394                           ; BSR set to: 0
 12395                           ;inc\CANlib.h: 736: else
 12396                           ;inc\CANlib.h: 737: RXM1SIDLbits.SID2 = 0x00 ;
 12397  0049C0  010F               	movlb	15	; () banked
 12398  0049C2  9F1D               	bcf	29,7,b	;volatile
 12399  0049C4                     l5336:
 12400                           
 12401                           ; BSR set to: 15
 12402                           ;inc\CANlib.h: 739: tamp = (mask >> 21);
 12403  0049C4  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 12404  0049C8  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 12405  0049CC  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 12406  0049D0  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 12407  0049D4  0E16               	movlw	22
 12408  0049D6  D006               	goto	u6330
 12409  0049D8                     u6335:
 12410  0049D8  0100               	movlb	0	; () banked
 12411  0049DA  90D8               	bcf	status,0,c
 12412  0049DC  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 12413  0049DE  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 12414  0049E0  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 12415  0049E2  337C               	rrcf	??_CANSetMask& (0+255),f,b
 12416  0049E4                     u6330:
 12417  0049E4  2EE8               	decfsz	wreg,f,c
 12418  0049E6  D7F8               	goto	u6335
 12419  0049E8  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12420  0049EC  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12421  0049F0  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12422  0049F4  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12423                           
 12424                           ; BSR set to: 0
 12425                           ;inc\CANlib.h: 740: tamp = tamp & 0x000000FF;
 12426  0049F8  0100               	movlb	0	; () banked
 12427  0049FA  5181               	movf	CANSetMask@tamp& (0+255),w,b
 12428  0049FC  0100               	movlb	0	; () banked
 12429  0049FE  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12430  004A00  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12431  004A02  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12432  004A04  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12433                           
 12434                           ; BSR set to: 0
 12435                           ;inc\CANlib.h: 741: RXM1SIDH = (unsigned char) tamp;
 12436  004A06  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 12437  004A0A  0012               	return	
 12438  004A0C                     __end_of_CANSetMask:
 12439                           	opt stack 0
 12440                           tblptru	equ	0xFF8
 12441                           tblptrh	equ	0xFF7
 12442                           tblptrl	equ	0xFF6
 12443                           tablat	equ	0xFF5
 12444                           prodh	equ	0xFF4
 12445                           prodl	equ	0xFF3
 12446                           intcon	equ	0xFF2
 12447                           intcon2	equ	0xFF1
 12448                           postinc0	equ	0xFEE
 12449                           wreg	equ	0xFE8
 12450                           postdec1	equ	0xFE5
 12451                           fsr1l	equ	0xFE1
 12452                           indf2	equ	0xFDF
 12453                           postinc2	equ	0xFDE
 12454                           postdec2	equ	0xFDD
 12455                           fsr2h	equ	0xFDA
 12456                           fsr2l	equ	0xFD9
 12457                           status	equ	0xFD8
 12458                           
 12459 ;; *************** function _CANSetFilter *****************
 12460 ;; Defined at:
 12461 ;;		line 749 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 12462 ;; Parameters:    Size  Location     Type
 12463 ;;  numBuffer       1    wreg     enum E16350
 12464 ;;  filter          4   23[BANK0 ] unsigned long 
 12465 ;;  type            1   27[BANK0 ] enum E16313
 12466 ;; Auto vars:     Size  Location     Type
 12467 ;;  numBuffer       1   32[BANK0 ] enum E16350
 12468 ;;  tamp            4   33[BANK0 ] unsigned long 
 12469 ;; Return value:  Size  Location     Type
 12470 ;;		None               void
 12471 ;; Registers used:
 12472 ;;		wreg, status,2, status,0
 12473 ;; Tracked objects:
 12474 ;;		On entry : 0/0
 12475 ;;		On exit  : 0/0
 12476 ;;		Unchanged: 0/0
 12477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12478 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12479 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12480 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12481 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12482 ;;Total ram usage:       14 bytes
 12483 ;; Hardware stack levels used:    1
 12484 ;; Hardware stack levels required when called:    4
 12485 ;; This function calls:
 12486 ;;		Nothing
 12487 ;; This function is called by:
 12488 ;;		_CANInitialize
 12489 ;; This function uses a non-reentrant model
 12490 ;;
 12491                           
 12492                           	psect	text32
 12493  000D52                     __ptext32:
 12494                           	opt stack 0
 12495  000D52                     _CANSetFilter:
 12496                           	opt stack 24
 12497                           
 12498                           ; BSR set to: 0
 12499                           ;incstack = 0
 12500                           ;CANSetFilter@numBuffer stored from wreg
 12501  000D52  0100               	movlb	0	; () banked
 12502  000D54  6F80               	movwf	CANSetFilter@numBuffer& (0+255),b
 12503                           
 12504                           ;inc\CANlib.h: 751: unsigned long tamp;
 12505                           ;inc\CANlib.h: 753: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
 12506  000D56  0100               	movlb	0	; () banked
 12507  000D58  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 12508  000D5A  0100               	movlb	0	; () banked
 12509  000D5C  A4D8               	btfss	status,2,c
 12510  000D5E  D058               	goto	l5360
 12511                           
 12512                           ; BSR set to: 0
 12513  000D60  0100               	movlb	0	; () banked
 12514  000D62  297B               	incf	CANSetFilter@type& (0+255),w,b
 12515  000D64  A4D8               	btfss	status,2,c
 12516  000D66  D054               	goto	l5360
 12517                           
 12518                           ; BSR set to: 0
 12519                           ;inc\CANlib.h: 754: {
 12520                           ;inc\CANlib.h: 755: RXF0SIDLbits.EXIDEN = 0x00;
 12521  000D68  010F               	movlb	15	; () banked
 12522  000D6A  9701               	bcf	1,3,b	;volatile
 12523                           
 12524                           ; BSR set to: 15
 12525                           ;inc\CANlib.h: 757: tamp = (filter >> 3);
 12526  000D6C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12527  000D70  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12528  000D74  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12529  000D78  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12530  000D7C  0E04               	movlw	4
 12531  000D7E  D006               	goto	u6360
 12532  000D80                     u6365:
 12533  000D80  0100               	movlb	0	; () banked
 12534  000D82  90D8               	bcf	status,0,c
 12535  000D84  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12536  000D86  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12537  000D88  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12538  000D8A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12539  000D8C                     u6360:
 12540  000D8C  2EE8               	decfsz	wreg,f,c
 12541  000D8E  D7F8               	goto	u6365
 12542  000D90  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12543  000D94  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12544  000D98  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12545  000D9C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12546                           
 12547                           ; BSR set to: 0
 12548                           ;inc\CANlib.h: 758: tamp = tamp & 0x000000FF;
 12549  000DA0  0100               	movlb	0	; () banked
 12550  000DA2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12551  000DA4  0100               	movlb	0	; () banked
 12552  000DA6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12553  000DA8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12554  000DAA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12555  000DAC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12556                           
 12557                           ; BSR set to: 0
 12558                           ;inc\CANlib.h: 759: RXF0SIDH = (unsigned char) tamp;
 12559  000DAE  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 12560                           
 12561                           ; BSR set to: 0
 12562                           ;inc\CANlib.h: 761: tamp = filter & 0x00000007;
 12563  000DB2  0E07               	movlw	7
 12564  000DB4  0100               	movlb	0	; () banked
 12565  000DB6  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12566  000DB8  0100               	movlb	0	; () banked
 12567  000DBA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12568  000DBC  0E00               	movlw	0
 12569  000DBE  0100               	movlb	0	; () banked
 12570  000DC0  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12571  000DC2  0100               	movlb	0	; () banked
 12572  000DC4  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12573  000DC6  0E00               	movlw	0
 12574  000DC8  0100               	movlb	0	; () banked
 12575  000DCA  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12576  000DCC  0100               	movlb	0	; () banked
 12577  000DCE  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12578  000DD0  0E00               	movlw	0
 12579  000DD2  0100               	movlb	0	; () banked
 12580  000DD4  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12581  000DD6  0100               	movlb	0	; () banked
 12582  000DD8  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12583                           
 12584                           ; BSR set to: 0
 12585                           ;inc\CANlib.h: 762: tamp = tamp << 5;
 12586  000DDA  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12587  000DDE  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12588  000DE2  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12589  000DE6  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12590  000DEA  0E05               	movlw	5
 12591  000DEC                     u6375:
 12592  000DEC  90D8               	bcf	status,0,c
 12593  000DEE  0100               	movlb	0	; () banked
 12594  000DF0  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12595  000DF2  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12596  000DF4  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12597  000DF6  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12598  000DF8  2EE8               	decfsz	wreg,f,c
 12599  000DFA  D7F8               	goto	u6375
 12600  000DFC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12601  000E00  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12602  000E04  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12603  000E08  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12604                           
 12605                           ; BSR set to: 0
 12606                           ;inc\CANlib.h: 763: RXF0SIDL = (unsigned char) tamp;
 12607  000E0C  C081  FF01         	movff	CANSetFilter@tamp,3841	;volatile
 12608  000E10                     l5360:
 12609                           
 12610                           ; BSR set to: 0
 12611                           ;inc\CANlib.h: 764: }
 12612                           ;inc\CANlib.h: 766: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
 12613  000E10  0100               	movlb	0	; () banked
 12614  000E12  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 12615  000E14  A4D8               	btfss	status,2,c
 12616  000E16  D058               	goto	l5378
 12617                           
 12618                           ; BSR set to: 0
 12619  000E18  0100               	movlb	0	; () banked
 12620  000E1A  297B               	incf	CANSetFilter@type& (0+255),w,b
 12621  000E1C  A4D8               	btfss	status,2,c
 12622  000E1E  D054               	goto	l5378
 12623                           
 12624                           ; BSR set to: 0
 12625                           ;inc\CANlib.h: 767: {
 12626                           ;inc\CANlib.h: 768: RXF1SIDLbits.EXIDEN = 0x00;
 12627  000E20  010F               	movlb	15	; () banked
 12628  000E22  9705               	bcf	5,3,b	;volatile
 12629                           
 12630                           ; BSR set to: 15
 12631                           ;inc\CANlib.h: 770: tamp = (filter >> 3);
 12632  000E24  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12633  000E28  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12634  000E2C  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12635  000E30  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12636  000E34  0E04               	movlw	4
 12637  000E36  D006               	goto	u6400
 12638  000E38                     u6405:
 12639  000E38  0100               	movlb	0	; () banked
 12640  000E3A  90D8               	bcf	status,0,c
 12641  000E3C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12642  000E3E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12643  000E40  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12644  000E42  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12645  000E44                     u6400:
 12646  000E44  2EE8               	decfsz	wreg,f,c
 12647  000E46  D7F8               	goto	u6405
 12648  000E48  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12649  000E4C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12650  000E50  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12651  000E54  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12652                           
 12653                           ; BSR set to: 0
 12654                           ;inc\CANlib.h: 771: tamp = tamp & 0x000000FF;
 12655  000E58  0100               	movlb	0	; () banked
 12656  000E5A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12657  000E5C  0100               	movlb	0	; () banked
 12658  000E5E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12659  000E60  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12660  000E62  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12661  000E64  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12662                           
 12663                           ; BSR set to: 0
 12664                           ;inc\CANlib.h: 772: RXF1SIDH = (unsigned char) tamp;
 12665  000E66  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 12666                           
 12667                           ; BSR set to: 0
 12668                           ;inc\CANlib.h: 774: tamp = filter & 0x00000007;
 12669  000E6A  0E07               	movlw	7
 12670  000E6C  0100               	movlb	0	; () banked
 12671  000E6E  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12672  000E70  0100               	movlb	0	; () banked
 12673  000E72  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12674  000E74  0E00               	movlw	0
 12675  000E76  0100               	movlb	0	; () banked
 12676  000E78  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12677  000E7A  0100               	movlb	0	; () banked
 12678  000E7C  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12679  000E7E  0E00               	movlw	0
 12680  000E80  0100               	movlb	0	; () banked
 12681  000E82  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12682  000E84  0100               	movlb	0	; () banked
 12683  000E86  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12684  000E88  0E00               	movlw	0
 12685  000E8A  0100               	movlb	0	; () banked
 12686  000E8C  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12687  000E8E  0100               	movlb	0	; () banked
 12688  000E90  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12689                           
 12690                           ; BSR set to: 0
 12691                           ;inc\CANlib.h: 775: tamp = tamp << 5;
 12692  000E92  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12693  000E96  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12694  000E9A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12695  000E9E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12696  000EA2  0E05               	movlw	5
 12697  000EA4                     u6415:
 12698  000EA4  90D8               	bcf	status,0,c
 12699  000EA6  0100               	movlb	0	; () banked
 12700  000EA8  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12701  000EAA  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12702  000EAC  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12703  000EAE  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12704  000EB0  2EE8               	decfsz	wreg,f,c
 12705  000EB2  D7F8               	goto	u6415
 12706  000EB4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12707  000EB8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12708  000EBC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12709  000EC0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12710                           
 12711                           ; BSR set to: 0
 12712                           ;inc\CANlib.h: 776: RXF1SIDL = (unsigned char) tamp;
 12713  000EC4  C081  FF05         	movff	CANSetFilter@tamp,3845	;volatile
 12714  000EC8                     l5378:
 12715                           
 12716                           ; BSR set to: 0
 12717                           ;inc\CANlib.h: 777: }
 12718                           ;inc\CANlib.h: 779: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
 12719  000EC8  0E02               	movlw	2
 12720  000ECA  0100               	movlb	0	; () banked
 12721  000ECC  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12722  000ECE  A4D8               	btfss	status,2,c
 12723  000ED0  D058               	goto	l5396
 12724                           
 12725                           ; BSR set to: 0
 12726  000ED2  0100               	movlb	0	; () banked
 12727  000ED4  297B               	incf	CANSetFilter@type& (0+255),w,b
 12728  000ED6  A4D8               	btfss	status,2,c
 12729  000ED8  D054               	goto	l5396
 12730                           
 12731                           ; BSR set to: 0
 12732                           ;inc\CANlib.h: 780: {
 12733                           ;inc\CANlib.h: 781: RXF2SIDLbits.EXIDEN = 0x00;
 12734  000EDA  010F               	movlb	15	; () banked
 12735  000EDC  9709               	bcf	9,3,b	;volatile
 12736                           
 12737                           ; BSR set to: 15
 12738                           ;inc\CANlib.h: 783: tamp = (filter >> 3);
 12739  000EDE  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12740  000EE2  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12741  000EE6  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12742  000EEA  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12743  000EEE  0E04               	movlw	4
 12744  000EF0  D006               	goto	u6440
 12745  000EF2                     u6445:
 12746  000EF2  0100               	movlb	0	; () banked
 12747  000EF4  90D8               	bcf	status,0,c
 12748  000EF6  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12749  000EF8  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12750  000EFA  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12751  000EFC  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12752  000EFE                     u6440:
 12753  000EFE  2EE8               	decfsz	wreg,f,c
 12754  000F00  D7F8               	goto	u6445
 12755  000F02  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12756  000F06  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12757  000F0A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12758  000F0E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12759                           
 12760                           ; BSR set to: 0
 12761                           ;inc\CANlib.h: 784: tamp = tamp & 0x000000FF;
 12762  000F12  0100               	movlb	0	; () banked
 12763  000F14  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12764  000F16  0100               	movlb	0	; () banked
 12765  000F18  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12766  000F1A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12767  000F1C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12768  000F1E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12769                           
 12770                           ; BSR set to: 0
 12771                           ;inc\CANlib.h: 785: RXF2SIDH = (unsigned char) tamp;
 12772  000F20  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 12773                           
 12774                           ; BSR set to: 0
 12775                           ;inc\CANlib.h: 787: tamp = filter & 0x00000007;
 12776  000F24  0E07               	movlw	7
 12777  000F26  0100               	movlb	0	; () banked
 12778  000F28  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12779  000F2A  0100               	movlb	0	; () banked
 12780  000F2C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12781  000F2E  0E00               	movlw	0
 12782  000F30  0100               	movlb	0	; () banked
 12783  000F32  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12784  000F34  0100               	movlb	0	; () banked
 12785  000F36  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12786  000F38  0E00               	movlw	0
 12787  000F3A  0100               	movlb	0	; () banked
 12788  000F3C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12789  000F3E  0100               	movlb	0	; () banked
 12790  000F40  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12791  000F42  0E00               	movlw	0
 12792  000F44  0100               	movlb	0	; () banked
 12793  000F46  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12794  000F48  0100               	movlb	0	; () banked
 12795  000F4A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12796                           
 12797                           ; BSR set to: 0
 12798                           ;inc\CANlib.h: 788: tamp = tamp << 5;
 12799  000F4C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12800  000F50  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12801  000F54  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12802  000F58  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12803  000F5C  0E05               	movlw	5
 12804  000F5E                     u6455:
 12805  000F5E  90D8               	bcf	status,0,c
 12806  000F60  0100               	movlb	0	; () banked
 12807  000F62  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12808  000F64  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12809  000F66  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12810  000F68  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12811  000F6A  2EE8               	decfsz	wreg,f,c
 12812  000F6C  D7F8               	goto	u6455
 12813  000F6E  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12814  000F72  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12815  000F76  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12816  000F7A  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12817                           
 12818                           ; BSR set to: 0
 12819                           ;inc\CANlib.h: 789: RXF2SIDL = (unsigned char) tamp;
 12820  000F7E  C081  FF09         	movff	CANSetFilter@tamp,3849	;volatile
 12821  000F82                     l5396:
 12822                           
 12823                           ; BSR set to: 0
 12824                           ;inc\CANlib.h: 790: }
 12825                           ;inc\CANlib.h: 792: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
 12826  000F82  0E03               	movlw	3
 12827  000F84  0100               	movlb	0	; () banked
 12828  000F86  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12829  000F88  A4D8               	btfss	status,2,c
 12830  000F8A  D058               	goto	l5414
 12831                           
 12832                           ; BSR set to: 0
 12833  000F8C  0100               	movlb	0	; () banked
 12834  000F8E  297B               	incf	CANSetFilter@type& (0+255),w,b
 12835  000F90  A4D8               	btfss	status,2,c
 12836  000F92  D054               	goto	l5414
 12837                           
 12838                           ; BSR set to: 0
 12839                           ;inc\CANlib.h: 793: {
 12840                           ;inc\CANlib.h: 794: RXF3SIDLbits.EXIDEN = 0x00;
 12841  000F94  010F               	movlb	15	; () banked
 12842  000F96  970D               	bcf	13,3,b	;volatile
 12843                           
 12844                           ; BSR set to: 15
 12845                           ;inc\CANlib.h: 796: tamp = (filter >> 3);
 12846  000F98  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12847  000F9C  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12848  000FA0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12849  000FA4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12850  000FA8  0E04               	movlw	4
 12851  000FAA  D006               	goto	u6480
 12852  000FAC                     u6485:
 12853  000FAC  0100               	movlb	0	; () banked
 12854  000FAE  90D8               	bcf	status,0,c
 12855  000FB0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12856  000FB2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12857  000FB4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12858  000FB6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12859  000FB8                     u6480:
 12860  000FB8  2EE8               	decfsz	wreg,f,c
 12861  000FBA  D7F8               	goto	u6485
 12862  000FBC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12863  000FC0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12864  000FC4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12865  000FC8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12866                           
 12867                           ; BSR set to: 0
 12868                           ;inc\CANlib.h: 797: tamp = tamp & 0x000000FF;
 12869  000FCC  0100               	movlb	0	; () banked
 12870  000FCE  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12871  000FD0  0100               	movlb	0	; () banked
 12872  000FD2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12873  000FD4  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12874  000FD6  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12875  000FD8  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12876                           
 12877                           ; BSR set to: 0
 12878                           ;inc\CANlib.h: 798: RXF3SIDH = (unsigned char) tamp;
 12879  000FDA  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 12880                           
 12881                           ; BSR set to: 0
 12882                           ;inc\CANlib.h: 800: tamp = filter & 0x00000007;
 12883  000FDE  0E07               	movlw	7
 12884  000FE0  0100               	movlb	0	; () banked
 12885  000FE2  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12886  000FE4  0100               	movlb	0	; () banked
 12887  000FE6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12888  000FE8  0E00               	movlw	0
 12889  000FEA  0100               	movlb	0	; () banked
 12890  000FEC  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12891  000FEE  0100               	movlb	0	; () banked
 12892  000FF0  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12893  000FF2  0E00               	movlw	0
 12894  000FF4  0100               	movlb	0	; () banked
 12895  000FF6  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12896  000FF8  0100               	movlb	0	; () banked
 12897  000FFA  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12898  000FFC  0E00               	movlw	0
 12899  000FFE  0100               	movlb	0	; () banked
 12900  001000  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12901  001002  0100               	movlb	0	; () banked
 12902  001004  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12903                           
 12904                           ; BSR set to: 0
 12905                           ;inc\CANlib.h: 801: tamp = tamp << 5;
 12906  001006  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12907  00100A  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12908  00100E  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12909  001012  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12910  001016  0E05               	movlw	5
 12911  001018                     u6495:
 12912  001018  90D8               	bcf	status,0,c
 12913  00101A  0100               	movlb	0	; () banked
 12914  00101C  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12915  00101E  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12916  001020  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12917  001022  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12918  001024  2EE8               	decfsz	wreg,f,c
 12919  001026  D7F8               	goto	u6495
 12920  001028  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12921  00102C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12922  001030  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12923  001034  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12924                           
 12925                           ; BSR set to: 0
 12926                           ;inc\CANlib.h: 802: RXF3SIDL = (unsigned char) tamp;
 12927  001038  C081  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
 12928  00103C                     l5414:
 12929                           
 12930                           ; BSR set to: 0
 12931                           ;inc\CANlib.h: 803: }
 12932                           ;inc\CANlib.h: 805: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
 12933  00103C  0E04               	movlw	4
 12934  00103E  0100               	movlb	0	; () banked
 12935  001040  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12936  001042  A4D8               	btfss	status,2,c
 12937  001044  D058               	goto	l5432
 12938                           
 12939                           ; BSR set to: 0
 12940  001046  0100               	movlb	0	; () banked
 12941  001048  297B               	incf	CANSetFilter@type& (0+255),w,b
 12942  00104A  A4D8               	btfss	status,2,c
 12943  00104C  D054               	goto	l5432
 12944                           
 12945                           ; BSR set to: 0
 12946                           ;inc\CANlib.h: 806: {
 12947                           ;inc\CANlib.h: 807: RXF4SIDLbits.EXIDEN = 0x00;
 12948  00104E  010F               	movlb	15	; () banked
 12949  001050  9711               	bcf	17,3,b	;volatile
 12950                           
 12951                           ; BSR set to: 15
 12952                           ;inc\CANlib.h: 809: tamp = (filter >> 3);
 12953  001052  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12954  001056  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12955  00105A  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12956  00105E  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12957  001062  0E04               	movlw	4
 12958  001064  D006               	goto	u6520
 12959  001066                     u6525:
 12960  001066  0100               	movlb	0	; () banked
 12961  001068  90D8               	bcf	status,0,c
 12962  00106A  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12963  00106C  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12964  00106E  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12965  001070  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12966  001072                     u6520:
 12967  001072  2EE8               	decfsz	wreg,f,c
 12968  001074  D7F8               	goto	u6525
 12969  001076  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12970  00107A  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12971  00107E  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12972  001082  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12973                           
 12974                           ; BSR set to: 0
 12975                           ;inc\CANlib.h: 810: tamp = tamp & 0x000000FF;
 12976  001086  0100               	movlb	0	; () banked
 12977  001088  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12978  00108A  0100               	movlb	0	; () banked
 12979  00108C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12980  00108E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12981  001090  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12982  001092  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12983                           
 12984                           ; BSR set to: 0
 12985                           ;inc\CANlib.h: 811: RXF4SIDH = (unsigned char) tamp;
 12986  001094  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 12987                           
 12988                           ; BSR set to: 0
 12989                           ;inc\CANlib.h: 813: tamp = filter & 0x00000007;
 12990  001098  0E07               	movlw	7
 12991  00109A  0100               	movlb	0	; () banked
 12992  00109C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12993  00109E  0100               	movlb	0	; () banked
 12994  0010A0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12995  0010A2  0E00               	movlw	0
 12996  0010A4  0100               	movlb	0	; () banked
 12997  0010A6  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12998  0010A8  0100               	movlb	0	; () banked
 12999  0010AA  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13000  0010AC  0E00               	movlw	0
 13001  0010AE  0100               	movlb	0	; () banked
 13002  0010B0  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13003  0010B2  0100               	movlb	0	; () banked
 13004  0010B4  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13005  0010B6  0E00               	movlw	0
 13006  0010B8  0100               	movlb	0	; () banked
 13007  0010BA  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13008  0010BC  0100               	movlb	0	; () banked
 13009  0010BE  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13010                           
 13011                           ; BSR set to: 0
 13012                           ;inc\CANlib.h: 814: tamp = tamp << 5;
 13013  0010C0  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13014  0010C4  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13015  0010C8  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13016  0010CC  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13017  0010D0  0E05               	movlw	5
 13018  0010D2                     u6535:
 13019  0010D2  90D8               	bcf	status,0,c
 13020  0010D4  0100               	movlb	0	; () banked
 13021  0010D6  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 13022  0010D8  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 13023  0010DA  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 13024  0010DC  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 13025  0010DE  2EE8               	decfsz	wreg,f,c
 13026  0010E0  D7F8               	goto	u6535
 13027  0010E2  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13028  0010E6  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13029  0010EA  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13030  0010EE  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13031                           
 13032                           ; BSR set to: 0
 13033                           ;inc\CANlib.h: 815: RXF4SIDL = (unsigned char) tamp;
 13034  0010F2  C081  FF11         	movff	CANSetFilter@tamp,3857	;volatile
 13035  0010F6                     l5432:
 13036                           
 13037                           ; BSR set to: 0
 13038                           ;inc\CANlib.h: 816: }
 13039                           ;inc\CANlib.h: 818: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
 13040  0010F6  0E05               	movlw	5
 13041  0010F8  0100               	movlb	0	; () banked
 13042  0010FA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13043  0010FC  A4D8               	btfss	status,2,c
 13044  0010FE  D058               	goto	l5450
 13045                           
 13046                           ; BSR set to: 0
 13047  001100  0100               	movlb	0	; () banked
 13048  001102  297B               	incf	CANSetFilter@type& (0+255),w,b
 13049  001104  A4D8               	btfss	status,2,c
 13050  001106  D054               	goto	l5450
 13051                           
 13052                           ; BSR set to: 0
 13053                           ;inc\CANlib.h: 819: {
 13054                           ;inc\CANlib.h: 820: RXF5SIDLbits.EXIDEN = 0x00;
 13055  001108  010F               	movlb	15	; () banked
 13056  00110A  9715               	bcf	21,3,b	;volatile
 13057                           
 13058                           ; BSR set to: 15
 13059                           ;inc\CANlib.h: 822: tamp = (filter >> 3);
 13060  00110C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13061  001110  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13062  001114  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13063  001118  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13064  00111C  0E04               	movlw	4
 13065  00111E  D006               	goto	u6560
 13066  001120                     u6565:
 13067  001120  0100               	movlb	0	; () banked
 13068  001122  90D8               	bcf	status,0,c
 13069  001124  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13070  001126  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13071  001128  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13072  00112A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13073  00112C                     u6560:
 13074  00112C  2EE8               	decfsz	wreg,f,c
 13075  00112E  D7F8               	goto	u6565
 13076  001130  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13077  001134  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13078  001138  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13079  00113C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13080                           
 13081                           ; BSR set to: 0
 13082                           ;inc\CANlib.h: 823: tamp = tamp & 0x000000FF;
 13083  001140  0100               	movlb	0	; () banked
 13084  001142  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13085  001144  0100               	movlb	0	; () banked
 13086  001146  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13087  001148  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13088  00114A  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13089  00114C  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13090                           
 13091                           ; BSR set to: 0
 13092                           ;inc\CANlib.h: 824: RXF5SIDH = (unsigned char) tamp;
 13093  00114E  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 13094                           
 13095                           ; BSR set to: 0
 13096                           ;inc\CANlib.h: 826: tamp = filter & 0x00000007;
 13097  001152  0E07               	movlw	7
 13098  001154  0100               	movlb	0	; () banked
 13099  001156  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13100  001158  0100               	movlb	0	; () banked
 13101  00115A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13102  00115C  0E00               	movlw	0
 13103  00115E  0100               	movlb	0	; () banked
 13104  001160  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13105  001162  0100               	movlb	0	; () banked
 13106  001164  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13107  001166  0E00               	movlw	0
 13108  001168  0100               	movlb	0	; () banked
 13109  00116A  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13110  00116C  0100               	movlb	0	; () banked
 13111  00116E  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13112  001170  0E00               	movlw	0
 13113  001172  0100               	movlb	0	; () banked
 13114  001174  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13115  001176  0100               	movlb	0	; () banked
 13116  001178  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13117                           
 13118                           ; BSR set to: 0
 13119                           ;inc\CANlib.h: 827: tamp = tamp << 5;
 13120  00117A  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13121  00117E  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13122  001182  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13123  001186  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13124  00118A  0E05               	movlw	5
 13125  00118C                     u6575:
 13126  00118C  90D8               	bcf	status,0,c
 13127  00118E  0100               	movlb	0	; () banked
 13128  001190  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 13129  001192  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 13130  001194  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 13131  001196  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 13132  001198  2EE8               	decfsz	wreg,f,c
 13133  00119A  D7F8               	goto	u6575
 13134  00119C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13135  0011A0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13136  0011A4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13137  0011A8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13138                           
 13139                           ; BSR set to: 0
 13140                           ;inc\CANlib.h: 828: RXF5SIDL = (unsigned char) tamp;
 13141  0011AC  C081  FF15         	movff	CANSetFilter@tamp,3861	;volatile
 13142  0011B0                     l5450:
 13143                           
 13144                           ; BSR set to: 0
 13145                           ;inc\CANlib.h: 829: }
 13146                           ;inc\CANlib.h: 832: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
 13147  0011B0  0100               	movlb	0	; () banked
 13148  0011B2  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 13149  0011B4  0100               	movlb	0	; () banked
 13150  0011B6  A4D8               	btfss	status,2,c
 13151  0011B8  D089               	goto	l5484
 13152                           
 13153                           ; BSR set to: 0
 13154  0011BA  0EF7               	movlw	247
 13155  0011BC  0100               	movlb	0	; () banked
 13156  0011BE  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13157  0011C0  A4D8               	btfss	status,2,c
 13158  0011C2  D084               	goto	l5484
 13159                           
 13160                           ; BSR set to: 0
 13161                           ;inc\CANlib.h: 833: {
 13162                           ;inc\CANlib.h: 834: RXF0SIDLbits.EXIDEN = 0x01;
 13163  0011C4  010F               	movlb	15	; () banked
 13164  0011C6  8701               	bsf	1,3,b	;volatile
 13165                           
 13166                           ; BSR set to: 15
 13167                           ;inc\CANlib.h: 836: tamp = filter & 0x000000FF;
 13168  0011C8  0100               	movlb	0	; () banked
 13169  0011CA  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13170  0011CC  0100               	movlb	0	; () banked
 13171  0011CE  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13172  0011D0  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13173  0011D2  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13174  0011D4  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13175                           
 13176                           ; BSR set to: 0
 13177                           ;inc\CANlib.h: 837: RXF0EIDL = (unsigned char) tamp;
 13178  0011D6  C081  FF03         	movff	CANSetFilter@tamp,3843	;volatile
 13179                           
 13180                           ; BSR set to: 0
 13181                           ;inc\CANlib.h: 839: tamp = filter & 0x0000FF00;
 13182  0011DA  0E00               	movlw	0
 13183  0011DC  0100               	movlb	0	; () banked
 13184  0011DE  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13185  0011E0  0100               	movlb	0	; () banked
 13186  0011E2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13187  0011E4  0EFF               	movlw	255
 13188  0011E6  0100               	movlb	0	; () banked
 13189  0011E8  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13190  0011EA  0100               	movlb	0	; () banked
 13191  0011EC  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13192  0011EE  0E00               	movlw	0
 13193  0011F0  0100               	movlb	0	; () banked
 13194  0011F2  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13195  0011F4  0100               	movlb	0	; () banked
 13196  0011F6  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13197  0011F8  0E00               	movlw	0
 13198  0011FA  0100               	movlb	0	; () banked
 13199  0011FC  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13200  0011FE  0100               	movlb	0	; () banked
 13201  001200  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13202                           
 13203                           ; BSR set to: 0
 13204                           ;inc\CANlib.h: 840: tamp = tamp >> 8;
 13205  001202  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13206  001206  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13207  00120A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13208  00120E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13209  001212  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13210  001216  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13211  00121A  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13212  00121E  0100               	movlb	0	; () banked
 13213  001220  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13214  001222  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13215  001226  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13216  00122A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13217  00122E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13218                           
 13219                           ; BSR set to: 0
 13220                           ;inc\CANlib.h: 841: RXF0EIDH = (unsigned char) tamp;
 13221  001232  C081  FF02         	movff	CANSetFilter@tamp,3842	;volatile
 13222                           
 13223                           ; BSR set to: 0
 13224                           ;inc\CANlib.h: 843: if (filter & 0x00010000)
 13225  001236  0100               	movlb	0	; () banked
 13226  001238  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13227  00123A  D003               	goto	l463
 13228                           
 13229                           ; BSR set to: 0
 13230                           ;inc\CANlib.h: 844: RXF0SIDLbits.EID16 = 0x01;
 13231  00123C  010F               	movlb	15	; () banked
 13232  00123E  8101               	bsf	1,0,b	;volatile
 13233  001240  D002               	goto	l464
 13234  001242                     l463:
 13235                           
 13236                           ; BSR set to: 0
 13237                           ;inc\CANlib.h: 845: else
 13238                           ;inc\CANlib.h: 846: RXF0SIDLbits.EID16 = 0x00;
 13239  001242  010F               	movlb	15	; () banked
 13240  001244  9101               	bcf	1,0,b	;volatile
 13241  001246                     l464:
 13242                           
 13243                           ; BSR set to: 15
 13244                           ;inc\CANlib.h: 848: if (filter & 0x00020000)
 13245  001246  0100               	movlb	0	; () banked
 13246  001248  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13247  00124A  D003               	goto	l465
 13248                           
 13249                           ; BSR set to: 0
 13250                           ;inc\CANlib.h: 849: RXF0SIDLbits.EID17 = 0x01;
 13251  00124C  010F               	movlb	15	; () banked
 13252  00124E  8301               	bsf	1,1,b	;volatile
 13253  001250  D002               	goto	l466
 13254  001252                     l465:
 13255                           
 13256                           ; BSR set to: 0
 13257                           ;inc\CANlib.h: 850: else
 13258                           ;inc\CANlib.h: 851: RXF0SIDLbits.EID17 = 0x00;
 13259  001252  010F               	movlb	15	; () banked
 13260  001254  9301               	bcf	1,1,b	;volatile
 13261  001256                     l466:
 13262                           
 13263                           ; BSR set to: 15
 13264                           ;inc\CANlib.h: 853: if (filter & 0x00040000)
 13265  001256  0100               	movlb	0	; () banked
 13266  001258  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13267  00125A  D003               	goto	l467
 13268                           
 13269                           ; BSR set to: 0
 13270                           ;inc\CANlib.h: 854: RXF0SIDLbits.SID0 = 0x01;
 13271  00125C  010F               	movlb	15	; () banked
 13272  00125E  8B01               	bsf	1,5,b	;volatile
 13273  001260  D002               	goto	l468
 13274  001262                     l467:
 13275                           
 13276                           ; BSR set to: 0
 13277                           ;inc\CANlib.h: 855: else
 13278                           ;inc\CANlib.h: 856: RXF0SIDLbits.SID0 = 0x00;
 13279  001262  010F               	movlb	15	; () banked
 13280  001264  9B01               	bcf	1,5,b	;volatile
 13281  001266                     l468:
 13282                           
 13283                           ; BSR set to: 15
 13284                           ;inc\CANlib.h: 858: if (filter & 0x00080000)
 13285  001266  0100               	movlb	0	; () banked
 13286  001268  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13287  00126A  D003               	goto	l469
 13288                           
 13289                           ; BSR set to: 0
 13290                           ;inc\CANlib.h: 859: RXF0SIDLbits.SID1 = 0x01;
 13291  00126C  010F               	movlb	15	; () banked
 13292  00126E  8D01               	bsf	1,6,b	;volatile
 13293  001270  D002               	goto	l470
 13294  001272                     l469:
 13295                           
 13296                           ; BSR set to: 0
 13297                           ;inc\CANlib.h: 860: else
 13298                           ;inc\CANlib.h: 861: RXF0SIDLbits.SID1 = 0x00;
 13299  001272  010F               	movlb	15	; () banked
 13300  001274  9D01               	bcf	1,6,b	;volatile
 13301  001276                     l470:
 13302                           
 13303                           ; BSR set to: 15
 13304                           ;inc\CANlib.h: 863: if (filter & 0x00100000)
 13305  001276  0100               	movlb	0	; () banked
 13306  001278  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13307  00127A  D003               	goto	l471
 13308                           
 13309                           ; BSR set to: 0
 13310                           ;inc\CANlib.h: 864: RXF0SIDLbits.SID2 = 0x01 ;
 13311  00127C  010F               	movlb	15	; () banked
 13312  00127E  8F01               	bsf	1,7,b	;volatile
 13313  001280  D002               	goto	l5478
 13314  001282                     l471:
 13315                           
 13316                           ; BSR set to: 0
 13317                           ;inc\CANlib.h: 865: else
 13318                           ;inc\CANlib.h: 866: RXF0SIDLbits.SID2 = 0x00 ;
 13319  001282  010F               	movlb	15	; () banked
 13320  001284  9F01               	bcf	1,7,b	;volatile
 13321  001286                     l5478:
 13322                           
 13323                           ; BSR set to: 15
 13324                           ;inc\CANlib.h: 868: tamp = (filter >> 21);
 13325  001286  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13326  00128A  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13327  00128E  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13328  001292  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13329  001296  0E16               	movlw	22
 13330  001298  D006               	goto	u6650
 13331  00129A                     u6655:
 13332  00129A  0100               	movlb	0	; () banked
 13333  00129C  90D8               	bcf	status,0,c
 13334  00129E  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13335  0012A0  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13336  0012A2  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13337  0012A4  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13338  0012A6                     u6650:
 13339  0012A6  2EE8               	decfsz	wreg,f,c
 13340  0012A8  D7F8               	goto	u6655
 13341  0012AA  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13342  0012AE  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13343  0012B2  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13344  0012B6  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13345                           
 13346                           ; BSR set to: 0
 13347                           ;inc\CANlib.h: 869: tamp = tamp & 0x000000FF;
 13348  0012BA  0100               	movlb	0	; () banked
 13349  0012BC  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13350  0012BE  0100               	movlb	0	; () banked
 13351  0012C0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13352  0012C2  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13353  0012C4  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13354  0012C6  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13355                           
 13356                           ; BSR set to: 0
 13357                           ;inc\CANlib.h: 870: RXF0SIDH = (unsigned char) tamp;
 13358  0012C8  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 13359  0012CC                     l5484:
 13360                           
 13361                           ; BSR set to: 0
 13362                           ;inc\CANlib.h: 871: }
 13363                           ;inc\CANlib.h: 873: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
 13364  0012CC  0100               	movlb	0	; () banked
 13365  0012CE  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 13366  0012D0  A4D8               	btfss	status,2,c
 13367  0012D2  D089               	goto	l5518
 13368                           
 13369                           ; BSR set to: 0
 13370  0012D4  0EF7               	movlw	247
 13371  0012D6  0100               	movlb	0	; () banked
 13372  0012D8  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13373  0012DA  A4D8               	btfss	status,2,c
 13374  0012DC  D084               	goto	l5518
 13375                           
 13376                           ; BSR set to: 0
 13377                           ;inc\CANlib.h: 874: {
 13378                           ;inc\CANlib.h: 875: RXF1SIDLbits.EXIDEN = 0x01;
 13379  0012DE  010F               	movlb	15	; () banked
 13380  0012E0  8705               	bsf	5,3,b	;volatile
 13381                           
 13382                           ; BSR set to: 15
 13383                           ;inc\CANlib.h: 877: tamp = filter & 0x000000FF;
 13384  0012E2  0100               	movlb	0	; () banked
 13385  0012E4  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13386  0012E6  0100               	movlb	0	; () banked
 13387  0012E8  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13388  0012EA  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13389  0012EC  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13390  0012EE  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13391                           
 13392                           ; BSR set to: 0
 13393                           ;inc\CANlib.h: 878: RXF1EIDL = (unsigned char) tamp;
 13394  0012F0  C081  FF07         	movff	CANSetFilter@tamp,3847	;volatile
 13395                           
 13396                           ; BSR set to: 0
 13397                           ;inc\CANlib.h: 880: tamp = filter & 0x0000FF00;
 13398  0012F4  0E00               	movlw	0
 13399  0012F6  0100               	movlb	0	; () banked
 13400  0012F8  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13401  0012FA  0100               	movlb	0	; () banked
 13402  0012FC  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13403  0012FE  0EFF               	movlw	255
 13404  001300  0100               	movlb	0	; () banked
 13405  001302  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13406  001304  0100               	movlb	0	; () banked
 13407  001306  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13408  001308  0E00               	movlw	0
 13409  00130A  0100               	movlb	0	; () banked
 13410  00130C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13411  00130E  0100               	movlb	0	; () banked
 13412  001310  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13413  001312  0E00               	movlw	0
 13414  001314  0100               	movlb	0	; () banked
 13415  001316  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13416  001318  0100               	movlb	0	; () banked
 13417  00131A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13418                           
 13419                           ; BSR set to: 0
 13420                           ;inc\CANlib.h: 881: tamp = tamp >> 8;
 13421  00131C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13422  001320  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13423  001324  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13424  001328  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13425  00132C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13426  001330  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13427  001334  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13428  001338  0100               	movlb	0	; () banked
 13429  00133A  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13430  00133C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13431  001340  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13432  001344  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13433  001348  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13434                           
 13435                           ; BSR set to: 0
 13436                           ;inc\CANlib.h: 882: RXF1EIDH = (unsigned char) tamp;
 13437  00134C  C081  FF06         	movff	CANSetFilter@tamp,3846	;volatile
 13438                           
 13439                           ; BSR set to: 0
 13440                           ;inc\CANlib.h: 884: if (filter & 0x00010000)
 13441  001350  0100               	movlb	0	; () banked
 13442  001352  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13443  001354  D003               	goto	l474
 13444                           
 13445                           ; BSR set to: 0
 13446                           ;inc\CANlib.h: 885: RXF1SIDLbits.EID16 = 0x01;
 13447  001356  010F               	movlb	15	; () banked
 13448  001358  8105               	bsf	5,0,b	;volatile
 13449  00135A  D002               	goto	l475
 13450  00135C                     l474:
 13451                           
 13452                           ; BSR set to: 0
 13453                           ;inc\CANlib.h: 886: else
 13454                           ;inc\CANlib.h: 887: RXF1SIDLbits.EID16 = 0x00;
 13455  00135C  010F               	movlb	15	; () banked
 13456  00135E  9105               	bcf	5,0,b	;volatile
 13457  001360                     l475:
 13458                           
 13459                           ; BSR set to: 15
 13460                           ;inc\CANlib.h: 889: if (filter & 0x00020000)
 13461  001360  0100               	movlb	0	; () banked
 13462  001362  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13463  001364  D003               	goto	l476
 13464                           
 13465                           ; BSR set to: 0
 13466                           ;inc\CANlib.h: 890: RXF1SIDLbits.EID17 = 0x01;
 13467  001366  010F               	movlb	15	; () banked
 13468  001368  8305               	bsf	5,1,b	;volatile
 13469  00136A  D002               	goto	l477
 13470  00136C                     l476:
 13471                           
 13472                           ; BSR set to: 0
 13473                           ;inc\CANlib.h: 891: else
 13474                           ;inc\CANlib.h: 892: RXF1SIDLbits.EID17 = 0x00;
 13475  00136C  010F               	movlb	15	; () banked
 13476  00136E  9305               	bcf	5,1,b	;volatile
 13477  001370                     l477:
 13478                           
 13479                           ; BSR set to: 15
 13480                           ;inc\CANlib.h: 894: if (filter & 0x00040000)
 13481  001370  0100               	movlb	0	; () banked
 13482  001372  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13483  001374  D003               	goto	l478
 13484                           
 13485                           ; BSR set to: 0
 13486                           ;inc\CANlib.h: 895: RXF1SIDLbits.SID0 = 0x01;
 13487  001376  010F               	movlb	15	; () banked
 13488  001378  8B05               	bsf	5,5,b	;volatile
 13489  00137A  D002               	goto	l479
 13490  00137C                     l478:
 13491                           
 13492                           ; BSR set to: 0
 13493                           ;inc\CANlib.h: 896: else
 13494                           ;inc\CANlib.h: 897: RXF1SIDLbits.SID0 = 0x00;
 13495  00137C  010F               	movlb	15	; () banked
 13496  00137E  9B05               	bcf	5,5,b	;volatile
 13497  001380                     l479:
 13498                           
 13499                           ; BSR set to: 15
 13500                           ;inc\CANlib.h: 899: if (filter & 0x00080000)
 13501  001380  0100               	movlb	0	; () banked
 13502  001382  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13503  001384  D003               	goto	l480
 13504                           
 13505                           ; BSR set to: 0
 13506                           ;inc\CANlib.h: 900: RXF1SIDLbits.SID1 = 0x01;
 13507  001386  010F               	movlb	15	; () banked
 13508  001388  8D05               	bsf	5,6,b	;volatile
 13509  00138A  D002               	goto	l481
 13510  00138C                     l480:
 13511                           
 13512                           ; BSR set to: 0
 13513                           ;inc\CANlib.h: 901: else
 13514                           ;inc\CANlib.h: 902: RXF1SIDLbits.SID1 = 0x00;
 13515  00138C  010F               	movlb	15	; () banked
 13516  00138E  9D05               	bcf	5,6,b	;volatile
 13517  001390                     l481:
 13518                           
 13519                           ; BSR set to: 15
 13520                           ;inc\CANlib.h: 904: if (filter & 0x00100000)
 13521  001390  0100               	movlb	0	; () banked
 13522  001392  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13523  001394  D003               	goto	l482
 13524                           
 13525                           ; BSR set to: 0
 13526                           ;inc\CANlib.h: 905: RXF1SIDLbits.SID2 = 0x01 ;
 13527  001396  010F               	movlb	15	; () banked
 13528  001398  8F05               	bsf	5,7,b	;volatile
 13529  00139A  D002               	goto	l5512
 13530  00139C                     l482:
 13531                           
 13532                           ; BSR set to: 0
 13533                           ;inc\CANlib.h: 906: else
 13534                           ;inc\CANlib.h: 907: RXF1SIDLbits.SID2 = 0x00 ;
 13535  00139C  010F               	movlb	15	; () banked
 13536  00139E  9F05               	bcf	5,7,b	;volatile
 13537  0013A0                     l5512:
 13538                           
 13539                           ; BSR set to: 15
 13540                           ;inc\CANlib.h: 909: tamp = (filter >> 21);
 13541  0013A0  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13542  0013A4  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13543  0013A8  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13544  0013AC  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13545  0013B0  0E16               	movlw	22
 13546  0013B2  D006               	goto	u6730
 13547  0013B4                     u6735:
 13548  0013B4  0100               	movlb	0	; () banked
 13549  0013B6  90D8               	bcf	status,0,c
 13550  0013B8  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13551  0013BA  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13552  0013BC  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13553  0013BE  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13554  0013C0                     u6730:
 13555  0013C0  2EE8               	decfsz	wreg,f,c
 13556  0013C2  D7F8               	goto	u6735
 13557  0013C4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13558  0013C8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13559  0013CC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13560  0013D0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13561                           
 13562                           ; BSR set to: 0
 13563                           ;inc\CANlib.h: 910: tamp = tamp & 0x000000FF;
 13564  0013D4  0100               	movlb	0	; () banked
 13565  0013D6  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13566  0013D8  0100               	movlb	0	; () banked
 13567  0013DA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13568  0013DC  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13569  0013DE  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13570  0013E0  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13571                           
 13572                           ; BSR set to: 0
 13573                           ;inc\CANlib.h: 911: RXF1SIDH = (unsigned char) tamp;
 13574  0013E2  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 13575  0013E6                     l5518:
 13576                           
 13577                           ; BSR set to: 0
 13578                           ;inc\CANlib.h: 912: }
 13579                           ;inc\CANlib.h: 915: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
 13580  0013E6  0E02               	movlw	2
 13581  0013E8  0100               	movlb	0	; () banked
 13582  0013EA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13583  0013EC  A4D8               	btfss	status,2,c
 13584  0013EE  D089               	goto	l5552
 13585                           
 13586                           ; BSR set to: 0
 13587  0013F0  0EF7               	movlw	247
 13588  0013F2  0100               	movlb	0	; () banked
 13589  0013F4  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13590  0013F6  A4D8               	btfss	status,2,c
 13591  0013F8  D084               	goto	l5552
 13592                           
 13593                           ; BSR set to: 0
 13594                           ;inc\CANlib.h: 916: {
 13595                           ;inc\CANlib.h: 917: RXF2SIDLbits.EXIDEN = 0x01;
 13596  0013FA  010F               	movlb	15	; () banked
 13597  0013FC  8709               	bsf	9,3,b	;volatile
 13598                           
 13599                           ; BSR set to: 15
 13600                           ;inc\CANlib.h: 919: tamp = filter & 0x000000FF;
 13601  0013FE  0100               	movlb	0	; () banked
 13602  001400  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13603  001402  0100               	movlb	0	; () banked
 13604  001404  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13605  001406  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13606  001408  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13607  00140A  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13608                           
 13609                           ; BSR set to: 0
 13610                           ;inc\CANlib.h: 920: RXF2EIDL = (unsigned char) tamp;
 13611  00140C  C081  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
 13612                           
 13613                           ; BSR set to: 0
 13614                           ;inc\CANlib.h: 922: tamp = filter & 0x0000FF00;
 13615  001410  0E00               	movlw	0
 13616  001412  0100               	movlb	0	; () banked
 13617  001414  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13618  001416  0100               	movlb	0	; () banked
 13619  001418  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13620  00141A  0EFF               	movlw	255
 13621  00141C  0100               	movlb	0	; () banked
 13622  00141E  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13623  001420  0100               	movlb	0	; () banked
 13624  001422  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13625  001424  0E00               	movlw	0
 13626  001426  0100               	movlb	0	; () banked
 13627  001428  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13628  00142A  0100               	movlb	0	; () banked
 13629  00142C  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13630  00142E  0E00               	movlw	0
 13631  001430  0100               	movlb	0	; () banked
 13632  001432  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13633  001434  0100               	movlb	0	; () banked
 13634  001436  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13635                           
 13636                           ; BSR set to: 0
 13637                           ;inc\CANlib.h: 923: tamp = tamp >> 8;
 13638  001438  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13639  00143C  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13640  001440  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13641  001444  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13642  001448  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13643  00144C  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13644  001450  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13645  001454  0100               	movlb	0	; () banked
 13646  001456  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13647  001458  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13648  00145C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13649  001460  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13650  001464  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13651                           
 13652                           ; BSR set to: 0
 13653                           ;inc\CANlib.h: 924: RXF2EIDH = (unsigned char) tamp;
 13654  001468  C081  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
 13655                           
 13656                           ; BSR set to: 0
 13657                           ;inc\CANlib.h: 926: if (filter & 0x00010000)
 13658  00146C  0100               	movlb	0	; () banked
 13659  00146E  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13660  001470  D003               	goto	l485
 13661                           
 13662                           ; BSR set to: 0
 13663                           ;inc\CANlib.h: 927: RXF2SIDLbits.EID16 = 0x01;
 13664  001472  010F               	movlb	15	; () banked
 13665  001474  8109               	bsf	9,0,b	;volatile
 13666  001476  D002               	goto	l486
 13667  001478                     l485:
 13668                           
 13669                           ; BSR set to: 0
 13670                           ;inc\CANlib.h: 928: else
 13671                           ;inc\CANlib.h: 929: RXF2SIDLbits.EID16 = 0x00;
 13672  001478  010F               	movlb	15	; () banked
 13673  00147A  9109               	bcf	9,0,b	;volatile
 13674  00147C                     l486:
 13675                           
 13676                           ; BSR set to: 15
 13677                           ;inc\CANlib.h: 931: if (filter & 0x00020000)
 13678  00147C  0100               	movlb	0	; () banked
 13679  00147E  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13680  001480  D003               	goto	l487
 13681                           
 13682                           ; BSR set to: 0
 13683                           ;inc\CANlib.h: 932: RXF2SIDLbits.EID17 = 0x01;
 13684  001482  010F               	movlb	15	; () banked
 13685  001484  8309               	bsf	9,1,b	;volatile
 13686  001486  D002               	goto	l488
 13687  001488                     l487:
 13688                           
 13689                           ; BSR set to: 0
 13690                           ;inc\CANlib.h: 933: else
 13691                           ;inc\CANlib.h: 934: RXF2SIDLbits.EID17 = 0x00;
 13692  001488  010F               	movlb	15	; () banked
 13693  00148A  9309               	bcf	9,1,b	;volatile
 13694  00148C                     l488:
 13695                           
 13696                           ; BSR set to: 15
 13697                           ;inc\CANlib.h: 936: if (filter & 0x00040000)
 13698  00148C  0100               	movlb	0	; () banked
 13699  00148E  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13700  001490  D003               	goto	l489
 13701                           
 13702                           ; BSR set to: 0
 13703                           ;inc\CANlib.h: 937: RXF2SIDLbits.SID0 = 0x01;
 13704  001492  010F               	movlb	15	; () banked
 13705  001494  8B09               	bsf	9,5,b	;volatile
 13706  001496  D002               	goto	l490
 13707  001498                     l489:
 13708                           
 13709                           ; BSR set to: 0
 13710                           ;inc\CANlib.h: 938: else
 13711                           ;inc\CANlib.h: 939: RXF2SIDLbits.SID0 = 0x00;
 13712  001498  010F               	movlb	15	; () banked
 13713  00149A  9B09               	bcf	9,5,b	;volatile
 13714  00149C                     l490:
 13715                           
 13716                           ; BSR set to: 15
 13717                           ;inc\CANlib.h: 941: if (filter & 0x00080000)
 13718  00149C  0100               	movlb	0	; () banked
 13719  00149E  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13720  0014A0  D003               	goto	l491
 13721                           
 13722                           ; BSR set to: 0
 13723                           ;inc\CANlib.h: 942: RXF2SIDLbits.SID1 = 0x01;
 13724  0014A2  010F               	movlb	15	; () banked
 13725  0014A4  8D09               	bsf	9,6,b	;volatile
 13726  0014A6  D002               	goto	l492
 13727  0014A8                     l491:
 13728                           
 13729                           ; BSR set to: 0
 13730                           ;inc\CANlib.h: 943: else
 13731                           ;inc\CANlib.h: 944: RXF2SIDLbits.SID1 = 0x00;
 13732  0014A8  010F               	movlb	15	; () banked
 13733  0014AA  9D09               	bcf	9,6,b	;volatile
 13734  0014AC                     l492:
 13735                           
 13736                           ; BSR set to: 15
 13737                           ;inc\CANlib.h: 946: if (filter & 0x00100000)
 13738  0014AC  0100               	movlb	0	; () banked
 13739  0014AE  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13740  0014B0  D003               	goto	l493
 13741                           
 13742                           ; BSR set to: 0
 13743                           ;inc\CANlib.h: 947: RXF2SIDLbits.SID2 = 0x01 ;
 13744  0014B2  010F               	movlb	15	; () banked
 13745  0014B4  8F09               	bsf	9,7,b	;volatile
 13746  0014B6  D002               	goto	l5546
 13747  0014B8                     l493:
 13748                           
 13749                           ; BSR set to: 0
 13750                           ;inc\CANlib.h: 948: else
 13751                           ;inc\CANlib.h: 949: RXF2SIDLbits.SID2 = 0x00 ;
 13752  0014B8  010F               	movlb	15	; () banked
 13753  0014BA  9F09               	bcf	9,7,b	;volatile
 13754  0014BC                     l5546:
 13755                           
 13756                           ; BSR set to: 15
 13757                           ;inc\CANlib.h: 951: tamp = (filter >> 21);
 13758  0014BC  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13759  0014C0  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13760  0014C4  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13761  0014C8  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13762  0014CC  0E16               	movlw	22
 13763  0014CE  D006               	goto	u6810
 13764  0014D0                     u6815:
 13765  0014D0  0100               	movlb	0	; () banked
 13766  0014D2  90D8               	bcf	status,0,c
 13767  0014D4  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13768  0014D6  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13769  0014D8  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13770  0014DA  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13771  0014DC                     u6810:
 13772  0014DC  2EE8               	decfsz	wreg,f,c
 13773  0014DE  D7F8               	goto	u6815
 13774  0014E0  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13775  0014E4  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13776  0014E8  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13777  0014EC  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13778                           
 13779                           ; BSR set to: 0
 13780                           ;inc\CANlib.h: 952: tamp = tamp & 0x000000FF;
 13781  0014F0  0100               	movlb	0	; () banked
 13782  0014F2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13783  0014F4  0100               	movlb	0	; () banked
 13784  0014F6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13785  0014F8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13786  0014FA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13787  0014FC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13788                           
 13789                           ; BSR set to: 0
 13790                           ;inc\CANlib.h: 953: RXF2SIDH = (unsigned char) tamp;
 13791  0014FE  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 13792  001502                     l5552:
 13793                           
 13794                           ; BSR set to: 0
 13795                           ;inc\CANlib.h: 954: }
 13796                           ;inc\CANlib.h: 956: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
 13797  001502  0E03               	movlw	3
 13798  001504  0100               	movlb	0	; () banked
 13799  001506  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13800  001508  A4D8               	btfss	status,2,c
 13801  00150A  D089               	goto	l5586
 13802                           
 13803                           ; BSR set to: 0
 13804  00150C  0EF7               	movlw	247
 13805  00150E  0100               	movlb	0	; () banked
 13806  001510  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13807  001512  A4D8               	btfss	status,2,c
 13808  001514  D084               	goto	l5586
 13809                           
 13810                           ; BSR set to: 0
 13811                           ;inc\CANlib.h: 957: {
 13812                           ;inc\CANlib.h: 958: RXF3SIDLbits.EXIDEN = 0x01;
 13813  001516  010F               	movlb	15	; () banked
 13814  001518  870D               	bsf	13,3,b	;volatile
 13815                           
 13816                           ; BSR set to: 15
 13817                           ;inc\CANlib.h: 960: tamp = filter & 0x000000FF;
 13818  00151A  0100               	movlb	0	; () banked
 13819  00151C  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13820  00151E  0100               	movlb	0	; () banked
 13821  001520  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13822  001522  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13823  001524  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13824  001526  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13825                           
 13826                           ; BSR set to: 0
 13827                           ;inc\CANlib.h: 961: RXF3EIDL = (unsigned char) tamp;
 13828  001528  C081  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
 13829                           
 13830                           ; BSR set to: 0
 13831                           ;inc\CANlib.h: 963: tamp = filter & 0x0000FF00;
 13832  00152C  0E00               	movlw	0
 13833  00152E  0100               	movlb	0	; () banked
 13834  001530  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13835  001532  0100               	movlb	0	; () banked
 13836  001534  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13837  001536  0EFF               	movlw	255
 13838  001538  0100               	movlb	0	; () banked
 13839  00153A  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13840  00153C  0100               	movlb	0	; () banked
 13841  00153E  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13842  001540  0E00               	movlw	0
 13843  001542  0100               	movlb	0	; () banked
 13844  001544  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13845  001546  0100               	movlb	0	; () banked
 13846  001548  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13847  00154A  0E00               	movlw	0
 13848  00154C  0100               	movlb	0	; () banked
 13849  00154E  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13850  001550  0100               	movlb	0	; () banked
 13851  001552  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13852                           
 13853                           ; BSR set to: 0
 13854                           ;inc\CANlib.h: 964: tamp = tamp >> 8;
 13855  001554  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13856  001558  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13857  00155C  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13858  001560  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13859  001564  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13860  001568  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13861  00156C  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13862  001570  0100               	movlb	0	; () banked
 13863  001572  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13864  001574  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13865  001578  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13866  00157C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13867  001580  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13868                           
 13869                           ; BSR set to: 0
 13870                           ;inc\CANlib.h: 965: RXF3EIDH = (unsigned char) tamp;
 13871  001584  C081  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
 13872                           
 13873                           ; BSR set to: 0
 13874                           ;inc\CANlib.h: 967: if (filter & 0x00010000)
 13875  001588  0100               	movlb	0	; () banked
 13876  00158A  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13877  00158C  D003               	goto	l496
 13878                           
 13879                           ; BSR set to: 0
 13880                           ;inc\CANlib.h: 968: RXF3SIDLbits.EID16 = 0x01;
 13881  00158E  010F               	movlb	15	; () banked
 13882  001590  810D               	bsf	13,0,b	;volatile
 13883  001592  D002               	goto	l497
 13884  001594                     l496:
 13885                           
 13886                           ; BSR set to: 0
 13887                           ;inc\CANlib.h: 969: else
 13888                           ;inc\CANlib.h: 970: RXF3SIDLbits.EID16 = 0x00;
 13889  001594  010F               	movlb	15	; () banked
 13890  001596  910D               	bcf	13,0,b	;volatile
 13891  001598                     l497:
 13892                           
 13893                           ; BSR set to: 15
 13894                           ;inc\CANlib.h: 972: if (filter & 0x00020000)
 13895  001598  0100               	movlb	0	; () banked
 13896  00159A  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13897  00159C  D003               	goto	l498
 13898                           
 13899                           ; BSR set to: 0
 13900                           ;inc\CANlib.h: 973: RXF3SIDLbits.EID17 = 0x01;
 13901  00159E  010F               	movlb	15	; () banked
 13902  0015A0  830D               	bsf	13,1,b	;volatile
 13903  0015A2  D002               	goto	l499
 13904  0015A4                     l498:
 13905                           
 13906                           ; BSR set to: 0
 13907                           ;inc\CANlib.h: 974: else
 13908                           ;inc\CANlib.h: 975: RXF3SIDLbits.EID17 = 0x00;
 13909  0015A4  010F               	movlb	15	; () banked
 13910  0015A6  930D               	bcf	13,1,b	;volatile
 13911  0015A8                     l499:
 13912                           
 13913                           ; BSR set to: 15
 13914                           ;inc\CANlib.h: 977: if (filter & 0x00040000)
 13915  0015A8  0100               	movlb	0	; () banked
 13916  0015AA  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13917  0015AC  D003               	goto	l500
 13918                           
 13919                           ; BSR set to: 0
 13920                           ;inc\CANlib.h: 978: RXF3SIDLbits.SID0 = 0x01;
 13921  0015AE  010F               	movlb	15	; () banked
 13922  0015B0  8B0D               	bsf	13,5,b	;volatile
 13923  0015B2  D002               	goto	l501
 13924  0015B4                     l500:
 13925                           
 13926                           ; BSR set to: 0
 13927                           ;inc\CANlib.h: 979: else
 13928                           ;inc\CANlib.h: 980: RXF3SIDLbits.SID0 = 0x00;
 13929  0015B4  010F               	movlb	15	; () banked
 13930  0015B6  9B0D               	bcf	13,5,b	;volatile
 13931  0015B8                     l501:
 13932                           
 13933                           ; BSR set to: 15
 13934                           ;inc\CANlib.h: 982: if (filter & 0x00080000)
 13935  0015B8  0100               	movlb	0	; () banked
 13936  0015BA  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13937  0015BC  D003               	goto	l502
 13938                           
 13939                           ; BSR set to: 0
 13940                           ;inc\CANlib.h: 983: RXF3SIDLbits.SID1 = 0x01;
 13941  0015BE  010F               	movlb	15	; () banked
 13942  0015C0  8D0D               	bsf	13,6,b	;volatile
 13943  0015C2  D002               	goto	l503
 13944  0015C4                     l502:
 13945                           
 13946                           ; BSR set to: 0
 13947                           ;inc\CANlib.h: 984: else
 13948                           ;inc\CANlib.h: 985: RXF3SIDLbits.SID1 = 0x00;
 13949  0015C4  010F               	movlb	15	; () banked
 13950  0015C6  9D0D               	bcf	13,6,b	;volatile
 13951  0015C8                     l503:
 13952                           
 13953                           ; BSR set to: 15
 13954                           ;inc\CANlib.h: 987: if (filter & 0x00100000)
 13955  0015C8  0100               	movlb	0	; () banked
 13956  0015CA  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13957  0015CC  D003               	goto	l504
 13958                           
 13959                           ; BSR set to: 0
 13960                           ;inc\CANlib.h: 988: RXF3SIDLbits.SID2 = 0x01 ;
 13961  0015CE  010F               	movlb	15	; () banked
 13962  0015D0  8F0D               	bsf	13,7,b	;volatile
 13963  0015D2  D002               	goto	l5580
 13964  0015D4                     l504:
 13965                           
 13966                           ; BSR set to: 0
 13967                           ;inc\CANlib.h: 989: else
 13968                           ;inc\CANlib.h: 990: RXF3SIDLbits.SID2 = 0x00 ;
 13969  0015D4  010F               	movlb	15	; () banked
 13970  0015D6  9F0D               	bcf	13,7,b	;volatile
 13971  0015D8                     l5580:
 13972                           
 13973                           ; BSR set to: 15
 13974                           ;inc\CANlib.h: 992: tamp = (filter >> 21);
 13975  0015D8  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13976  0015DC  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13977  0015E0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13978  0015E4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13979  0015E8  0E16               	movlw	22
 13980  0015EA  D006               	goto	u6890
 13981  0015EC                     u6895:
 13982  0015EC  0100               	movlb	0	; () banked
 13983  0015EE  90D8               	bcf	status,0,c
 13984  0015F0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13985  0015F2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13986  0015F4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13987  0015F6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13988  0015F8                     u6890:
 13989  0015F8  2EE8               	decfsz	wreg,f,c
 13990  0015FA  D7F8               	goto	u6895
 13991  0015FC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13992  001600  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13993  001604  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13994  001608  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13995                           
 13996                           ; BSR set to: 0
 13997                           ;inc\CANlib.h: 993: tamp = tamp & 0x000000FF;
 13998  00160C  0100               	movlb	0	; () banked
 13999  00160E  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 14000  001610  0100               	movlb	0	; () banked
 14001  001612  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14002  001614  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14003  001616  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14004  001618  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14005                           
 14006                           ; BSR set to: 0
 14007                           ;inc\CANlib.h: 994: RXF3SIDH = (unsigned char) tamp;
 14008  00161A  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 14009  00161E                     l5586:
 14010                           
 14011                           ; BSR set to: 0
 14012                           ;inc\CANlib.h: 995: }
 14013                           ;inc\CANlib.h: 997: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
 14014  00161E  0E04               	movlw	4
 14015  001620  0100               	movlb	0	; () banked
 14016  001622  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 14017  001624  A4D8               	btfss	status,2,c
 14018  001626  D089               	goto	l5620
 14019                           
 14020                           ; BSR set to: 0
 14021  001628  0EF7               	movlw	247
 14022  00162A  0100               	movlb	0	; () banked
 14023  00162C  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 14024  00162E  A4D8               	btfss	status,2,c
 14025  001630  D084               	goto	l5620
 14026                           
 14027                           ; BSR set to: 0
 14028                           ;inc\CANlib.h: 998: {
 14029                           ;inc\CANlib.h: 999: RXF4SIDLbits.EXIDEN = 0x01;
 14030  001632  010F               	movlb	15	; () banked
 14031  001634  8711               	bsf	17,3,b	;volatile
 14032                           
 14033                           ; BSR set to: 15
 14034                           ;inc\CANlib.h: 1001: tamp = filter & 0x000000FF;
 14035  001636  0100               	movlb	0	; () banked
 14036  001638  5177               	movf	CANSetFilter@filter& (0+255),w,b
 14037  00163A  0100               	movlb	0	; () banked
 14038  00163C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14039  00163E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14040  001640  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14041  001642  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14042                           
 14043                           ; BSR set to: 0
 14044                           ;inc\CANlib.h: 1002: RXF4EIDL = (unsigned char) tamp;
 14045  001644  C081  FF13         	movff	CANSetFilter@tamp,3859	;volatile
 14046                           
 14047                           ; BSR set to: 0
 14048                           ;inc\CANlib.h: 1004: tamp = filter & 0x0000FF00;
 14049  001648  0E00               	movlw	0
 14050  00164A  0100               	movlb	0	; () banked
 14051  00164C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 14052  00164E  0100               	movlb	0	; () banked
 14053  001650  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14054  001652  0EFF               	movlw	255
 14055  001654  0100               	movlb	0	; () banked
 14056  001656  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 14057  001658  0100               	movlb	0	; () banked
 14058  00165A  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 14059  00165C  0E00               	movlw	0
 14060  00165E  0100               	movlb	0	; () banked
 14061  001660  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 14062  001662  0100               	movlb	0	; () banked
 14063  001664  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 14064  001666  0E00               	movlw	0
 14065  001668  0100               	movlb	0	; () banked
 14066  00166A  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 14067  00166C  0100               	movlb	0	; () banked
 14068  00166E  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 14069                           
 14070                           ; BSR set to: 0
 14071                           ;inc\CANlib.h: 1005: tamp = tamp >> 8;
 14072  001670  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 14073  001674  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 14074  001678  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 14075  00167C  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 14076  001680  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 14077  001684  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 14078  001688  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 14079  00168C  0100               	movlb	0	; () banked
 14080  00168E  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 14081  001690  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14082  001694  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14083  001698  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14084  00169C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14085                           
 14086                           ; BSR set to: 0
 14087                           ;inc\CANlib.h: 1006: RXF4EIDH = (unsigned char) tamp;
 14088  0016A0  C081  FF12         	movff	CANSetFilter@tamp,3858	;volatile
 14089                           
 14090                           ; BSR set to: 0
 14091                           ;inc\CANlib.h: 1008: if (filter & 0x00010000)
 14092  0016A4  0100               	movlb	0	; () banked
 14093  0016A6  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 14094  0016A8  D003               	goto	l507
 14095                           
 14096                           ; BSR set to: 0
 14097                           ;inc\CANlib.h: 1009: RXF4SIDLbits.EID16 = 0x01;
 14098  0016AA  010F               	movlb	15	; () banked
 14099  0016AC  8111               	bsf	17,0,b	;volatile
 14100  0016AE  D002               	goto	l508
 14101  0016B0                     l507:
 14102                           
 14103                           ; BSR set to: 0
 14104                           ;inc\CANlib.h: 1010: else
 14105                           ;inc\CANlib.h: 1011: RXF4SIDLbits.EID16 = 0x00;
 14106  0016B0  010F               	movlb	15	; () banked
 14107  0016B2  9111               	bcf	17,0,b	;volatile
 14108  0016B4                     l508:
 14109                           
 14110                           ; BSR set to: 15
 14111                           ;inc\CANlib.h: 1013: if (filter & 0x00020000)
 14112  0016B4  0100               	movlb	0	; () banked
 14113  0016B6  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 14114  0016B8  D003               	goto	l509
 14115                           
 14116                           ; BSR set to: 0
 14117                           ;inc\CANlib.h: 1014: RXF4SIDLbits.EID17 = 0x01;
 14118  0016BA  010F               	movlb	15	; () banked
 14119  0016BC  8311               	bsf	17,1,b	;volatile
 14120  0016BE  D002               	goto	l510
 14121  0016C0                     l509:
 14122                           
 14123                           ; BSR set to: 0
 14124                           ;inc\CANlib.h: 1015: else
 14125                           ;inc\CANlib.h: 1016: RXF4SIDLbits.EID17 = 0x00;
 14126  0016C0  010F               	movlb	15	; () banked
 14127  0016C2  9311               	bcf	17,1,b	;volatile
 14128  0016C4                     l510:
 14129                           
 14130                           ; BSR set to: 15
 14131                           ;inc\CANlib.h: 1018: if (filter & 0x00040000)
 14132  0016C4  0100               	movlb	0	; () banked
 14133  0016C6  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 14134  0016C8  D003               	goto	l511
 14135                           
 14136                           ; BSR set to: 0
 14137                           ;inc\CANlib.h: 1019: RXF4SIDLbits.SID0 = 0x01;
 14138  0016CA  010F               	movlb	15	; () banked
 14139  0016CC  8B11               	bsf	17,5,b	;volatile
 14140  0016CE  D002               	goto	l512
 14141  0016D0                     l511:
 14142                           
 14143                           ; BSR set to: 0
 14144                           ;inc\CANlib.h: 1020: else
 14145                           ;inc\CANlib.h: 1021: RXF4SIDLbits.SID0 = 0x00;
 14146  0016D0  010F               	movlb	15	; () banked
 14147  0016D2  9B11               	bcf	17,5,b	;volatile
 14148  0016D4                     l512:
 14149                           
 14150                           ; BSR set to: 15
 14151                           ;inc\CANlib.h: 1023: if (filter & 0x00080000)
 14152  0016D4  0100               	movlb	0	; () banked
 14153  0016D6  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 14154  0016D8  D003               	goto	l513
 14155                           
 14156                           ; BSR set to: 0
 14157                           ;inc\CANlib.h: 1024: RXF4SIDLbits.SID1 = 0x01;
 14158  0016DA  010F               	movlb	15	; () banked
 14159  0016DC  8D11               	bsf	17,6,b	;volatile
 14160  0016DE  D002               	goto	l514
 14161  0016E0                     l513:
 14162                           
 14163                           ; BSR set to: 0
 14164                           ;inc\CANlib.h: 1025: else
 14165                           ;inc\CANlib.h: 1026: RXF4SIDLbits.SID1 = 0x00;
 14166  0016E0  010F               	movlb	15	; () banked
 14167  0016E2  9D11               	bcf	17,6,b	;volatile
 14168  0016E4                     l514:
 14169                           
 14170                           ; BSR set to: 15
 14171                           ;inc\CANlib.h: 1028: if (filter & 0x00100000)
 14172  0016E4  0100               	movlb	0	; () banked
 14173  0016E6  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 14174  0016E8  D003               	goto	l515
 14175                           
 14176                           ; BSR set to: 0
 14177                           ;inc\CANlib.h: 1029: RXF4SIDLbits.SID2 = 0x01 ;
 14178  0016EA  010F               	movlb	15	; () banked
 14179  0016EC  8F11               	bsf	17,7,b	;volatile
 14180  0016EE  D002               	goto	l5614
 14181  0016F0                     l515:
 14182                           
 14183                           ; BSR set to: 0
 14184                           ;inc\CANlib.h: 1030: else
 14185                           ;inc\CANlib.h: 1031: RXF4SIDLbits.SID2 = 0x00 ;
 14186  0016F0  010F               	movlb	15	; () banked
 14187  0016F2  9F11               	bcf	17,7,b	;volatile
 14188  0016F4                     l5614:
 14189                           
 14190                           ; BSR set to: 15
 14191                           ;inc\CANlib.h: 1033: tamp = (filter >> 21);
 14192  0016F4  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 14193  0016F8  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 14194  0016FC  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 14195  001700  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 14196  001704  0E16               	movlw	22
 14197  001706  D006               	goto	u6970
 14198  001708                     u6975:
 14199  001708  0100               	movlb	0	; () banked
 14200  00170A  90D8               	bcf	status,0,c
 14201  00170C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 14202  00170E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 14203  001710  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 14204  001712  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 14205  001714                     u6970:
 14206  001714  2EE8               	decfsz	wreg,f,c
 14207  001716  D7F8               	goto	u6975
 14208  001718  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14209  00171C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14210  001720  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14211  001724  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14212                           
 14213                           ; BSR set to: 0
 14214                           ;inc\CANlib.h: 1034: tamp = tamp & 0x000000FF;
 14215  001728  0100               	movlb	0	; () banked
 14216  00172A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 14217  00172C  0100               	movlb	0	; () banked
 14218  00172E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14219  001730  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14220  001732  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14221  001734  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14222                           
 14223                           ; BSR set to: 0
 14224                           ;inc\CANlib.h: 1035: RXF4SIDH = (unsigned char) tamp;
 14225  001736  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 14226  00173A                     l5620:
 14227                           
 14228                           ; BSR set to: 0
 14229                           ;inc\CANlib.h: 1036: }
 14230                           ;inc\CANlib.h: 1038: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
 14231  00173A  0E05               	movlw	5
 14232  00173C  0100               	movlb	0	; () banked
 14233  00173E  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 14234  001740  A4D8               	btfss	status,2,c
 14235  001742  0012               	return	
 14236                           
 14237                           ; BSR set to: 0
 14238  001744  0EF7               	movlw	247
 14239  001746  0100               	movlb	0	; () banked
 14240  001748  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 14241  00174A  A4D8               	btfss	status,2,c
 14242  00174C  0012               	return	
 14243                           
 14244                           ; BSR set to: 0
 14245                           ;inc\CANlib.h: 1039: {
 14246                           ;inc\CANlib.h: 1040: RXF5SIDLbits.EXIDEN = 0x01;
 14247  00174E  010F               	movlb	15	; () banked
 14248  001750  8715               	bsf	21,3,b	;volatile
 14249                           
 14250                           ; BSR set to: 15
 14251                           ;inc\CANlib.h: 1042: tamp = filter & 0x000000FF;
 14252  001752  0100               	movlb	0	; () banked
 14253  001754  5177               	movf	CANSetFilter@filter& (0+255),w,b
 14254  001756  0100               	movlb	0	; () banked
 14255  001758  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14256  00175A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14257  00175C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14258  00175E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14259                           
 14260                           ; BSR set to: 0
 14261                           ;inc\CANlib.h: 1043: RXF5EIDL = (unsigned char) tamp;
 14262  001760  C081  FF17         	movff	CANSetFilter@tamp,3863	;volatile
 14263                           
 14264                           ; BSR set to: 0
 14265                           ;inc\CANlib.h: 1045: tamp = filter & 0x0000FF00;
 14266  001764  0E00               	movlw	0
 14267  001766  0100               	movlb	0	; () banked
 14268  001768  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 14269  00176A  0100               	movlb	0	; () banked
 14270  00176C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14271  00176E  0EFF               	movlw	255
 14272  001770  0100               	movlb	0	; () banked
 14273  001772  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 14274  001774  0100               	movlb	0	; () banked
 14275  001776  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 14276  001778  0E00               	movlw	0
 14277  00177A  0100               	movlb	0	; () banked
 14278  00177C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 14279  00177E  0100               	movlb	0	; () banked
 14280  001780  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 14281  001782  0E00               	movlw	0
 14282  001784  0100               	movlb	0	; () banked
 14283  001786  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 14284  001788  0100               	movlb	0	; () banked
 14285  00178A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 14286                           
 14287                           ; BSR set to: 0
 14288                           ;inc\CANlib.h: 1046: tamp = tamp >> 8;
 14289  00178C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 14290  001790  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 14291  001794  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 14292  001798  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 14293  00179C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 14294  0017A0  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 14295  0017A4  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 14296  0017A8  0100               	movlb	0	; () banked
 14297  0017AA  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 14298  0017AC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14299  0017B0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14300  0017B4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14301  0017B8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14302                           
 14303                           ; BSR set to: 0
 14304                           ;inc\CANlib.h: 1047: RXF5EIDH = (unsigned char) tamp;
 14305  0017BC  C081  FF16         	movff	CANSetFilter@tamp,3862	;volatile
 14306                           
 14307                           ; BSR set to: 0
 14308                           ;inc\CANlib.h: 1049: if (filter & 0x00010000)
 14309  0017C0  0100               	movlb	0	; () banked
 14310  0017C2  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 14311  0017C4  D003               	goto	l518
 14312                           
 14313                           ; BSR set to: 0
 14314                           ;inc\CANlib.h: 1050: RXF5SIDLbits.EID16 = 0x01;
 14315  0017C6  010F               	movlb	15	; () banked
 14316  0017C8  8115               	bsf	21,0,b	;volatile
 14317  0017CA  D002               	goto	l519
 14318  0017CC                     l518:
 14319                           
 14320                           ; BSR set to: 0
 14321                           ;inc\CANlib.h: 1051: else
 14322                           ;inc\CANlib.h: 1052: RXF5SIDLbits.EID16 = 0x00;
 14323  0017CC  010F               	movlb	15	; () banked
 14324  0017CE  9115               	bcf	21,0,b	;volatile
 14325  0017D0                     l519:
 14326                           
 14327                           ; BSR set to: 15
 14328                           ;inc\CANlib.h: 1054: if (filter & 0x00020000)
 14329  0017D0  0100               	movlb	0	; () banked
 14330  0017D2  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 14331  0017D4  D003               	goto	l520
 14332                           
 14333                           ; BSR set to: 0
 14334                           ;inc\CANlib.h: 1055: RXF5SIDLbits.EID17 = 0x01;
 14335  0017D6  010F               	movlb	15	; () banked
 14336  0017D8  8315               	bsf	21,1,b	;volatile
 14337  0017DA  D002               	goto	l521
 14338  0017DC                     l520:
 14339                           
 14340                           ; BSR set to: 0
 14341                           ;inc\CANlib.h: 1056: else
 14342                           ;inc\CANlib.h: 1057: RXF5SIDLbits.EID17 = 0x00;
 14343  0017DC  010F               	movlb	15	; () banked
 14344  0017DE  9315               	bcf	21,1,b	;volatile
 14345  0017E0                     l521:
 14346                           
 14347                           ; BSR set to: 15
 14348                           ;inc\CANlib.h: 1059: if (filter & 0x00040000)
 14349  0017E0  0100               	movlb	0	; () banked
 14350  0017E2  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 14351  0017E4  D003               	goto	l522
 14352                           
 14353                           ; BSR set to: 0
 14354                           ;inc\CANlib.h: 1060: RXF5SIDLbits.SID0 = 0x01;
 14355  0017E6  010F               	movlb	15	; () banked
 14356  0017E8  8B15               	bsf	21,5,b	;volatile
 14357  0017EA  D002               	goto	l523
 14358  0017EC                     l522:
 14359                           
 14360                           ; BSR set to: 0
 14361                           ;inc\CANlib.h: 1061: else
 14362                           ;inc\CANlib.h: 1062: RXF5SIDLbits.SID0 = 0x00;
 14363  0017EC  010F               	movlb	15	; () banked
 14364  0017EE  9B15               	bcf	21,5,b	;volatile
 14365  0017F0                     l523:
 14366                           
 14367                           ; BSR set to: 15
 14368                           ;inc\CANlib.h: 1064: if (filter & 0x00080000)
 14369  0017F0  0100               	movlb	0	; () banked
 14370  0017F2  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 14371  0017F4  D003               	goto	l524
 14372                           
 14373                           ; BSR set to: 0
 14374                           ;inc\CANlib.h: 1065: RXF5SIDLbits.SID1 = 0x01;
 14375  0017F6  010F               	movlb	15	; () banked
 14376  0017F8  8D15               	bsf	21,6,b	;volatile
 14377  0017FA  D002               	goto	l525
 14378  0017FC                     l524:
 14379                           
 14380                           ; BSR set to: 0
 14381                           ;inc\CANlib.h: 1066: else
 14382                           ;inc\CANlib.h: 1067: RXF5SIDLbits.SID1 = 0x00;
 14383  0017FC  010F               	movlb	15	; () banked
 14384  0017FE  9D15               	bcf	21,6,b	;volatile
 14385  001800                     l525:
 14386                           
 14387                           ; BSR set to: 15
 14388                           ;inc\CANlib.h: 1069: if (filter & 0x00100000)
 14389  001800  0100               	movlb	0	; () banked
 14390  001802  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 14391  001804  D003               	goto	l526
 14392                           
 14393                           ; BSR set to: 0
 14394                           ;inc\CANlib.h: 1070: RXF5SIDLbits.SID2 = 0x01 ;
 14395  001806  010F               	movlb	15	; () banked
 14396  001808  8F15               	bsf	21,7,b	;volatile
 14397  00180A  D002               	goto	l5648
 14398  00180C                     l526:
 14399                           
 14400                           ; BSR set to: 0
 14401                           ;inc\CANlib.h: 1071: else
 14402                           ;inc\CANlib.h: 1072: RXF5SIDLbits.SID2 = 0x00 ;
 14403  00180C  010F               	movlb	15	; () banked
 14404  00180E  9F15               	bcf	21,7,b	;volatile
 14405  001810                     l5648:
 14406                           
 14407                           ; BSR set to: 15
 14408                           ;inc\CANlib.h: 1074: tamp = (filter >> 21);
 14409  001810  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 14410  001814  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 14411  001818  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 14412  00181C  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 14413  001820  0E16               	movlw	22
 14414  001822  D006               	goto	u7050
 14415  001824                     u7055:
 14416  001824  0100               	movlb	0	; () banked
 14417  001826  90D8               	bcf	status,0,c
 14418  001828  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 14419  00182A  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 14420  00182C  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 14421  00182E  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 14422  001830                     u7050:
 14423  001830  2EE8               	decfsz	wreg,f,c
 14424  001832  D7F8               	goto	u7055
 14425  001834  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14426  001838  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14427  00183C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14428  001840  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14429                           
 14430                           ; BSR set to: 0
 14431                           ;inc\CANlib.h: 1075: tamp = tamp & 0x000000FF;
 14432  001844  0100               	movlb	0	; () banked
 14433  001846  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 14434  001848  0100               	movlb	0	; () banked
 14435  00184A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14436  00184C  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14437  00184E  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14438  001850  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14439                           
 14440                           ; BSR set to: 0
 14441                           ;inc\CANlib.h: 1076: RXF5SIDH = (unsigned char) tamp;
 14442  001852  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 14443  001856  0012               	return	
 14444  001858                     __end_of_CANSetFilter:
 14445                           	opt stack 0
 14446                           tblptru	equ	0xFF8
 14447                           tblptrh	equ	0xFF7
 14448                           tblptrl	equ	0xFF6
 14449                           tablat	equ	0xFF5
 14450                           prodh	equ	0xFF4
 14451                           prodl	equ	0xFF3
 14452                           intcon	equ	0xFF2
 14453                           intcon2	equ	0xFF1
 14454                           postinc0	equ	0xFEE
 14455                           wreg	equ	0xFE8
 14456                           postdec1	equ	0xFE5
 14457                           fsr1l	equ	0xFE1
 14458                           indf2	equ	0xFDF
 14459                           postinc2	equ	0xFDE
 14460                           postdec2	equ	0xFDD
 14461                           fsr2h	equ	0xFDA
 14462                           fsr2l	equ	0xFD9
 14463                           status	equ	0xFD8
 14464                           
 14465 ;; *************** function _CANOperationMode *****************
 14466 ;; Defined at:
 14467 ;;		line 207 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 14468 ;; Parameters:    Size  Location     Type
 14469 ;;  mode            1    wreg     enum E16307
 14470 ;; Auto vars:     Size  Location     Type
 14471 ;;  mode            1   23[BANK0 ] enum E16307
 14472 ;; Return value:  Size  Location     Type
 14473 ;;		None               void
 14474 ;; Registers used:
 14475 ;;		wreg, status,2, status,0
 14476 ;; Tracked objects:
 14477 ;;		On entry : 0/0
 14478 ;;		On exit  : 0/0
 14479 ;;		Unchanged: 0/0
 14480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14482 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14484 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14485 ;;Total ram usage:        1 bytes
 14486 ;; Hardware stack levels used:    1
 14487 ;; Hardware stack levels required when called:    4
 14488 ;; This function calls:
 14489 ;;		Nothing
 14490 ;; This function is called by:
 14491 ;;		_CANInitialize
 14492 ;; This function uses a non-reentrant model
 14493 ;;
 14494                           
 14495                           	psect	text33
 14496  0066FC                     __ptext33:
 14497                           	opt stack 0
 14498  0066FC                     _CANOperationMode:
 14499                           	opt stack 24
 14500                           
 14501                           ; BSR set to: 0
 14502                           ;incstack = 0
 14503                           ;CANOperationMode@mode stored from wreg
 14504  0066FC  0100               	movlb	0	; () banked
 14505  0066FE  6F77               	movwf	CANOperationMode@mode& (0+255),b
 14506                           
 14507                           ;inc\CANlib.h: 209: CANCON = mode;
 14508  006700  C077  FF6F         	movff	CANOperationMode@mode,3951	;volatile
 14509  006704                     l7812:
 14510  006704  506E               	movf	3950,w,c	;volatile
 14511  006706  0BE0               	andlw	224
 14512  006708  0100               	movlb	0	; () banked
 14513  00670A  1977               	xorwf	CANOperationMode@mode& (0+255),w,b
 14514  00670C  B4D8               	btfsc	status,2,c
 14515  00670E  0012               	return	
 14516  006710  D7F9               	goto	l7812
 14517  006712                     __end_of_CANOperationMode:
 14518                           	opt stack 0
 14519                           tblptru	equ	0xFF8
 14520                           tblptrh	equ	0xFF7
 14521                           tblptrl	equ	0xFF6
 14522                           tablat	equ	0xFF5
 14523                           prodh	equ	0xFF4
 14524                           prodl	equ	0xFF3
 14525                           intcon	equ	0xFF2
 14526                           intcon2	equ	0xFF1
 14527                           postinc0	equ	0xFEE
 14528                           wreg	equ	0xFE8
 14529                           postdec1	equ	0xFE5
 14530                           fsr1l	equ	0xFE1
 14531                           indf2	equ	0xFDF
 14532                           postinc2	equ	0xFDE
 14533                           postdec2	equ	0xFDD
 14534                           fsr2h	equ	0xFDA
 14535                           fsr2l	equ	0xFD9
 14536                           status	equ	0xFD8
 14537                           
 14538 ;; *************** function _can_interpreter *****************
 14539 ;; Defined at:
 14540 ;;		line 475 in file "parcheggio.c"
 14541 ;; Parameters:    Size  Location     Type
 14542 ;;		None
 14543 ;; Auto vars:     Size  Location     Type
 14544 ;;		None
 14545 ;; Return value:  Size  Location     Type
 14546 ;;		None               void
 14547 ;; Registers used:
 14548 ;;		wreg, status,2, status,0
 14549 ;; Tracked objects:
 14550 ;;		On entry : 0/0
 14551 ;;		On exit  : 0/0
 14552 ;;		Unchanged: 0/0
 14553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14556 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14557 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14558 ;;Total ram usage:        4 bytes
 14559 ;; Hardware stack levels used:    1
 14560 ;; Hardware stack levels required when called:    4
 14561 ;; This function calls:
 14562 ;;		Nothing
 14563 ;; This function is called by:
 14564 ;;		_main
 14565 ;; This function uses a non-reentrant model
 14566 ;;
 14567                           
 14568                           	psect	text34
 14569  0064E0                     __ptext34:
 14570                           	opt stack 0
 14571  0064E0                     _can_interpreter:
 14572                           	opt stack 26
 14573                           
 14574                           ;parcheggio.c: 476: left_speed = data_speed_rx[1];
 14575                           
 14576                           ; BSR set to: 0
 14577                           ;incstack = 0
 14578  0064E0  C109  F01F         	movff	_data_speed_rx+1,_left_speed
 14579  0064E4  6A20               	clrf	_left_speed+1,c
 14580                           
 14581                           ;parcheggio.c: 477: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 14582  0064E6  501F               	movf	_left_speed,w,c
 14583  0064E8  0100               	movlb	0	; () banked
 14584  0064EA  6F77               	movwf	??_can_interpreter& (0+255),b
 14585  0064EC  0101               	movlb	1	; () banked
 14586  0064EE  5108               	movf	_data_speed_rx& (0+255),w,b
 14587  0064F0  6E1F               	movwf	_left_speed,c
 14588  0064F2  C077  F020         	movff	??_can_interpreter,_left_speed+1
 14589                           
 14590                           ; BSR set to: 1
 14591                           ;parcheggio.c: 478: right_speed = data_speed_rx[3];
 14592  0064F6  C10B  F023         	movff	_data_speed_rx+3,_right_speed
 14593  0064FA  6A24               	clrf	_right_speed+1,c
 14594                           
 14595                           ;parcheggio.c: 479: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 14596  0064FC  5023               	movf	_right_speed,w,c
 14597  0064FE  0100               	movlb	0	; () banked
 14598  006500  6F77               	movwf	??_can_interpreter& (0+255),b
 14599  006502  0101               	movlb	1	; () banked
 14600  006504  510A               	movf	(_data_speed_rx+2)& (0+255),w,b
 14601  006506  6E23               	movwf	_right_speed,c
 14602  006508  C077  F024         	movff	??_can_interpreter,_right_speed+1
 14603                           
 14604                           ; BSR set to: 1
 14605                           ;parcheggio.c: 480: actual_speed = (right_speed + left_speed) / 2;
 14606  00650C  501F               	movf	_left_speed,w,c
 14607  00650E  2423               	addwf	_right_speed,w,c
 14608  006510  0100               	movlb	0	; () banked
 14609  006512  6F77               	movwf	??_can_interpreter& (0+255),b
 14610  006514  5020               	movf	_left_speed+1,w,c
 14611  006516  2024               	addwfc	_right_speed+1,w,c
 14612  006518  0100               	movlb	0	; () banked
 14613  00651A  6F78               	movwf	(??_can_interpreter+1)& (0+255),b
 14614  00651C  90D8               	bcf	status,0,c
 14615  00651E  0100               	movlb	0	; () banked
 14616  006520  3178               	rrcf	(??_can_interpreter+1)& (0+255),w,b
 14617  006522  0100               	movlb	0	; () banked
 14618  006524  6F79               	movwf	(??_can_interpreter+2)& (0+255),b
 14619  006526  0100               	movlb	0	; () banked
 14620  006528  3177               	rrcf	??_can_interpreter& (0+255),w,b
 14621  00652A  0100               	movlb	0	; () banked
 14622  00652C  6FDE               	movwf	_actual_speed& (0+255),b
 14623  00652E  C079  F0DF         	movff	??_can_interpreter+2,_actual_speed+1
 14624                           
 14625                           ; BSR set to: 0
 14626  006532  0012               	return		;funcret
 14627  006534                     __end_of_can_interpreter:
 14628                           	opt stack 0
 14629                           tblptru	equ	0xFF8
 14630                           tblptrh	equ	0xFF7
 14631                           tblptrl	equ	0xFF6
 14632                           tablat	equ	0xFF5
 14633                           prodh	equ	0xFF4
 14634                           prodl	equ	0xFF3
 14635                           intcon	equ	0xFF2
 14636                           intcon2	equ	0xFF1
 14637                           postinc0	equ	0xFEE
 14638                           wreg	equ	0xFE8
 14639                           postdec1	equ	0xFE5
 14640                           fsr1l	equ	0xFE1
 14641                           indf2	equ	0xFDF
 14642                           postinc2	equ	0xFDE
 14643                           postdec2	equ	0xFDD
 14644                           fsr2h	equ	0xFDA
 14645                           fsr2l	equ	0xFD9
 14646                           status	equ	0xFD8
 14647                           
 14648 ;; *************** function _ISR_Bassa *****************
 14649 ;; Defined at:
 14650 ;;		line 115 in file "parcheggio.c"
 14651 ;; Parameters:    Size  Location     Type
 14652 ;;		None
 14653 ;; Auto vars:     Size  Location     Type
 14654 ;;  i               1   38[COMRAM] unsigned char 
 14655 ;;  gigi            1   37[COMRAM] unsigned char 
 14656 ;; Return value:  Size  Location     Type
 14657 ;;		None               void
 14658 ;; Registers used:
 14659 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14660 ;; Tracked objects:
 14661 ;;		On entry : 0/0
 14662 ;;		On exit  : 0/0
 14663 ;;		Unchanged: 0/0
 14664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14666 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14667 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14668 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14669 ;;Total ram usage:       23 bytes
 14670 ;; Hardware stack levels used:    1
 14671 ;; Hardware stack levels required when called:    3
 14672 ;; This function calls:
 14673 ;;		_CANreceiveMessage
 14674 ;;		i1_CANisTxReady
 14675 ;;		i1_CANsendMessage
 14676 ;; This function is called by:
 14677 ;;		Interrupt level 1
 14678 ;; This function uses a non-reentrant model
 14679 ;;
 14680                           
 14681                           	psect	intcodelo
 14682  000018                     __pintcodelo:
 14683                           	opt stack 0
 14684  000018                     _ISR_Bassa:
 14685                           	opt stack 21
 14686                           
 14687                           ; BSR set to: 0
 14688                           ;incstack = 0
 14689  000018  8056               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 14690  00001A  CFD8 F041          	movff	status,??_ISR_Bassa+4
 14691  00001E  CFE8 F042          	movff	wreg,??_ISR_Bassa+5
 14692  000022  CFE0 F043          	movff	bsr,??_ISR_Bassa+6
 14693  000026  CFFA F044          	movff	pclath,??_ISR_Bassa+7
 14694  00002A  CFFB F045          	movff	pclatu,??_ISR_Bassa+8
 14695  00002E  CFE9 F046          	movff	fsr0l,??_ISR_Bassa+9
 14696  000032  CFEA F047          	movff	fsr0h,??_ISR_Bassa+10
 14697  000036  CFE1 F048          	movff	fsr1l,??_ISR_Bassa+11
 14698  00003A  CFE2 F049          	movff	fsr1h,??_ISR_Bassa+12
 14699  00003E  CFD9 F04A          	movff	fsr2l,??_ISR_Bassa+13
 14700  000042  CFDA F04B          	movff	fsr2h,??_ISR_Bassa+14
 14701  000046  CFF3 F04C          	movff	prodl,??_ISR_Bassa+15
 14702  00004A  CFF4 F04D          	movff	prodh,??_ISR_Bassa+16
 14703  00004E  CFF6 F04E          	movff	tblptrl,??_ISR_Bassa+17
 14704  000052  CFF7 F04F          	movff	tblptrh,??_ISR_Bassa+18
 14705  000056  CFF8 F050          	movff	tblptru,??_ISR_Bassa+19
 14706  00005A  CFF5 F051          	movff	tablat,??_ISR_Bassa+20
 14707                           
 14708                           ;parcheggio.c: 117: if (INTCONbits.TMR0IF == 1) {
 14709  00005E  A4F2               	btfss	intcon,2,c	;volatile
 14710  000060  D095               	goto	i1l8644
 14711                           
 14712                           ;parcheggio.c: 118: INTCONbits.INT0IE = 0;
 14713  000062  98F2               	bcf	intcon,4,c	;volatile
 14714                           
 14715                           ;parcheggio.c: 119: T0CONbits.TMR0ON = 0;
 14716  000064  9ED5               	bcf	4053,7,c	;volatile
 14717                           
 14718                           ;parcheggio.c: 120: TMR0H = 0x34;
 14719  000066  0E34               	movlw	52
 14720  000068  6ED7               	movwf	4055,c	;volatile
 14721                           
 14722                           ;parcheggio.c: 121: TMR0L = 0xE0;
 14723  00006A  0EE0               	movlw	224
 14724  00006C  6ED6               	movwf	4054,c	;volatile
 14725                           
 14726                           ;parcheggio.c: 122: T0CONbits.TMR0ON = 1;
 14727  00006E  8ED5               	bsf	4053,7,c	;volatile
 14728                           
 14729                           ;parcheggio.c: 123: if (distance_error == 1) {
 14730  000070  A854               	btfss	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14731  000072  D00C               	goto	i1l706
 14732                           
 14733                           ;parcheggio.c: 124: sensor_distance[MUX_index] = 5000;
 14734  000074  5029               	movf	_MUX_index,w,c	;volatile
 14735  000076  0D02               	mullw	2
 14736  000078  0E01               	movlw	low _sensor_distance
 14737  00007A  24F3               	addwf	prodl,w,c
 14738  00007C  6ED9               	movwf	fsr2l,c
 14739  00007E  0E00               	movlw	high _sensor_distance
 14740  000080  20F4               	addwfc	prodh,w,c
 14741  000082  6EDA               	movwf	fsr2h,c
 14742  000084  0E88               	movlw	136
 14743  000086  6EDE               	movwf	postinc2,c
 14744  000088  0E13               	movlw	19
 14745  00008A  6EDD               	movwf	postdec2,c
 14746  00008C                     i1l706:
 14747                           
 14748                           ;parcheggio.c: 125: }
 14749                           ;parcheggio.c: 126: if ((sensor_distance[MUX_index] < 10)&&(start_operation == 0)) {
 14750  00008C  5029               	movf	_MUX_index,w,c	;volatile
 14751  00008E  0D02               	mullw	2
 14752  000090  0E01               	movlw	low _sensor_distance
 14753  000092  24F3               	addwf	prodl,w,c
 14754  000094  6ED9               	movwf	fsr2l,c
 14755  000096  0E00               	movlw	high _sensor_distance
 14756  000098  20F4               	addwfc	prodh,w,c
 14757  00009A  6EDA               	movwf	fsr2h,c
 14758  00009C  0E01               	movlw	1
 14759  00009E  50DB               	movf	plusw2,w,c
 14760  0000A0  E113               	bnz	i1l8600
 14761  0000A2  0E0A               	movlw	10
 14762  0000A4  5CDE               	subwf	postinc2,w,c
 14763  0000A6  A0D8               	btfss	status,0,c
 14764  0000A8  BC55               	btfsc	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 14765  0000AA  D00E               	goto	i1l8600
 14766                           
 14767                           ;parcheggio.c: 127: sensor_distance_short[0] = sensor_distance_short[0] | (0b00000001 <<
      +                           MUX_index);
 14768  0000AC  C029  F03D         	movff	_MUX_index,??_ISR_Bassa	;volatile
 14769  0000B0  0E01               	movlw	1
 14770  0000B2  6E3E               	movwf	(??_ISR_Bassa+1)& (0+255),c
 14771  0000B4  2A3D               	incf	??_ISR_Bassa,f,c
 14772  0000B6  D002               	goto	i1u1145_24
 14773  0000B8                     i1u1145_25:
 14774  0000B8  90D8               	bcf	status,0,c
 14775  0000BA  363E               	rlcf	??_ISR_Bassa+1,f,c
 14776  0000BC                     i1u1145_24:
 14777  0000BC  2E3D               	decfsz	??_ISR_Bassa,f,c
 14778  0000BE  D7FC               	goto	i1u1145_25
 14779  0000C0  503E               	movf	??_ISR_Bassa+1,w,c
 14780  0000C2  0101               	movlb	1	; () banked
 14781  0000C4  1183               	iorwf	_sensor_distance_short& (0+255),w,b	;volatile
 14782  0000C6  D03F               	goto	L8
 14783  0000C8                     i1l8600:
 14784  0000C8  5029               	movf	_MUX_index,w,c	;volatile
 14785  0000CA  0D02               	mullw	2
 14786  0000CC  0E01               	movlw	low _sensor_distance
 14787  0000CE  24F3               	addwf	prodl,w,c
 14788  0000D0  6ED9               	movwf	fsr2l,c
 14789  0000D2  0E00               	movlw	high _sensor_distance
 14790  0000D4  20F4               	addwfc	prodh,w,c
 14791  0000D6  6EDA               	movwf	fsr2h,c
 14792  0000D8  0E01               	movlw	1
 14793  0000DA  50DB               	movf	plusw2,w,c
 14794  0000DC  E126               	bnz	i1l8612
 14795  0000DE  0E04               	movlw	4
 14796  0000E0  5CDE               	subwf	postinc2,w,c
 14797  0000E2  A0D8               	btfss	status,0,c
 14798  0000E4  AC55               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 14799  0000E6  D021               	goto	i1l8612
 14800  0000E8  B454               	btfsc	_avvicinamento/(0+8),_avvicinamento& (0+7),c	;volatile
 14801  0000EA  D01F               	goto	i1l8612
 14802                           
 14803                           ;parcheggio.c: 131: data[1] = 0;
 14804  0000EC  0E00               	movlw	0
 14805  0000EE  0101               	movlb	1	; () banked
 14806  0000F0  6F54               	movwf	(_data+1)& (0+255),b
 14807                           
 14808                           ;parcheggio.c: 132: data[0] = 4;
 14809  0000F2  0E04               	movlw	4
 14810  0000F4  0101               	movlb	1	; () banked
 14811  0000F6  6F53               	movwf	_data& (0+255),b
 14812  0000F8                     i1l8608:
 14813  0000F8  EC6F  F033         	call	i1_CANisTxReady	;wreg free
 14814  0000FC  0900               	iorlw	0
 14815  0000FE  B4D8               	btfsc	status,2,c
 14816  000100  D7FB               	goto	i1l8608
 14817                           
 14818                           ;parcheggio.c: 134: CANsendMessage(0b00000001011, data, 8, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
 14819  000102  0E0B               	movlw	11
 14820  000104  6E2D               	movwf	i1CANsendMessage@identifier,c
 14821  000106  0E00               	movlw	0
 14822  000108  6E2E               	movwf	i1CANsendMessage@identifier+1,c
 14823  00010A  0E00               	movlw	0
 14824  00010C  6E2F               	movwf	i1CANsendMessage@identifier+2,c
 14825  00010E  0E00               	movlw	0
 14826  000110  6E30               	movwf	i1CANsendMessage@identifier+3,c
 14827  000112  0E53               	movlw	low _data
 14828  000114  6E31               	movwf	i1CANsendMessage@data,c
 14829  000116  0E01               	movlw	high _data
 14830  000118  6E32               	movwf	i1CANsendMessage@data+1,c
 14831  00011A  0E08               	movlw	8
 14832  00011C  6E33               	movwf	i1CANsendMessage@dataLength,c
 14833  00011E  0EBC               	movlw	188
 14834  000120  6E34               	movwf	i1CANsendMessage@flags,c
 14835  000122  ECF2  F00F         	call	i1_CANsendMessage	;wreg free
 14836  000126  00FF               	reset		;# 
 14837                           
 14838                           ;parcheggio.c: 136: } else {
 14839  000128  D010               	goto	i1l8614
 14840  00012A                     i1l8612:
 14841                           
 14842                           ;parcheggio.c: 137: sensor_distance_short[0] = sensor_distance_short[0] & (~(0b00000001 
      +                          << MUX_index));
 14843  00012A  C029  F03D         	movff	_MUX_index,??_ISR_Bassa	;volatile
 14844  00012E  0E01               	movlw	1
 14845  000130  6E3E               	movwf	(??_ISR_Bassa+1)& (0+255),c
 14846  000132  2A3D               	incf	??_ISR_Bassa,f,c
 14847  000134  D002               	goto	i1u1150_24
 14848  000136                     i1u1150_25:
 14849  000136  90D8               	bcf	status,0,c
 14850  000138  363E               	rlcf	??_ISR_Bassa+1,f,c
 14851  00013A                     i1u1150_24:
 14852  00013A  2E3D               	decfsz	??_ISR_Bassa,f,c
 14853  00013C  D7FC               	goto	i1u1150_25
 14854  00013E  503E               	movf	??_ISR_Bassa+1,w,c
 14855  000140  0AFF               	xorlw	255
 14856  000142  0101               	movlb	1	; () banked
 14857  000144  1583               	andwf	_sensor_distance_short& (0+255),w,b	;volatile
 14858  000146                     L8:
 14859  000146  0101               	movlb	1	; () banked
 14860  000148  6F83               	movwf	_sensor_distance_short& (0+255),b	;volatile
 14861  00014A                     i1l8614:
 14862                           
 14863                           ;parcheggio.c: 138: }
 14864                           ;parcheggio.c: 139: MUX_index++;
 14865  00014A  2A29               	incf	_MUX_index,f,c	;volatile
 14866                           
 14867                           ;parcheggio.c: 140: if (MUX_index == 8) {
 14868  00014C  0E08               	movlw	8
 14869  00014E  1829               	xorwf	_MUX_index,w,c	;volatile
 14870  000150  A4D8               	btfss	status,2,c
 14871  000152  D002               	goto	i1l714
 14872                           
 14873                           ;parcheggio.c: 141: MUX_index = 0;
 14874  000154  0E00               	movlw	0
 14875  000156  6E29               	movwf	_MUX_index,c	;volatile
 14876  000158                     i1l714:
 14877                           
 14878                           ;parcheggio.c: 142: }
 14879                           ;parcheggio.c: 143: unsigned char gigi = 0;
 14880  000158  0E00               	movlw	0
 14881  00015A  6E52               	movwf	ISR_Bassa@gigi,c
 14882                           
 14883                           ;parcheggio.c: 144: gigi = MUX_select[MUX_index];
 14884  00015C  5029               	movf	_MUX_index,w,c	;volatile
 14885  00015E  0D01               	mullw	1
 14886  000160  0E00               	movlw	low _MUX_select
 14887  000162  24F3               	addwf	prodl,w,c
 14888  000164  6ED9               	movwf	fsr2l,c
 14889  000166  0E01               	movlw	high _MUX_select
 14890  000168  20F4               	addwfc	prodh,w,c
 14891  00016A  6EDA               	movwf	fsr2h,c
 14892  00016C  50DF               	movf	indf2,w,c
 14893  00016E  6E52               	movwf	ISR_Bassa@gigi,c
 14894                           
 14895                           ;parcheggio.c: 145: PORTA = gigi;
 14896  000170  C052  FF80         	movff	ISR_Bassa@gigi,3968	;volatile
 14897                           
 14898                           ;parcheggio.c: 146: TRISBbits.RB0 = 0;
 14899  000174  9093               	bcf	3987,0,c	;volatile
 14900                           
 14901                           ;parcheggio.c: 147: LATBbits.LATB0 = 1;
 14902  000176  808A               	bsf	3978,0,c	;volatile
 14903                           
 14904                           ;parcheggio.c: 148: _delay((unsigned long)((15)*(16000000/4000000.0)));
 14905  000178  0E14               	movlw	20
 14906  00017A                     i1u1168_27:
 14907  00017A  2EE8               	decfsz	wreg,f,c
 14908  00017C  D7FE               	goto	i1u1168_27
 14909                           
 14910                           ;parcheggio.c: 149: distance_error = 1;
 14911  00017E  8854               	bsf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14912                           
 14913                           ;parcheggio.c: 150: LATBbits.LATB0 = 0;
 14914  000180  908A               	bcf	3978,0,c	;volatile
 14915                           
 14916                           ;parcheggio.c: 151: TRISBbits.RB0 = 1;
 14917  000182  8093               	bsf	3987,0,c	;volatile
 14918                           
 14919                           ;parcheggio.c: 152: INTCONbits.INT0IF = 0;
 14920  000184  92F2               	bcf	intcon,1,c	;volatile
 14921                           
 14922                           ;parcheggio.c: 153: INTCONbits.INT0IE = 1;
 14923  000186  88F2               	bsf	intcon,4,c	;volatile
 14924                           
 14925                           ;parcheggio.c: 154: INTCONbits.TMR0IF = 0;
 14926  000188  94F2               	bcf	intcon,2,c	;volatile
 14927                           
 14928                           ;parcheggio.c: 155: INTCON2bits.INTEDG0 = 1;
 14929  00018A  8CF1               	bsf	intcon2,6,c	;volatile
 14930  00018C                     i1l8644:
 14931                           
 14932                           ;parcheggio.c: 156: }
 14933                           ;parcheggio.c: 158: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
 14934  00018C  A0A4               	btfss	4004,0,c	;volatile
 14935  00018E  B2A4               	btfsc	4004,1,c	;volatile
 14936  000190  D001               	goto	i1l8648
 14937  000192  D09B               	goto	i1l728
 14938  000194                     i1l8648:
 14939                           
 14940                           ;parcheggio.c: 159: CANreceiveMessage(&msg);
 14941  000194  0E44               	movlw	low _msg
 14942  000196  6E2D               	movwf	CANreceiveMessage@msg,c
 14943  000198  0E01               	movlw	high _msg
 14944  00019A  6E2E               	movwf	CANreceiveMessage@msg+1,c
 14945  00019C  ECFF  F015         	call	_CANreceiveMessage	;wreg free
 14946                           
 14947                           ;parcheggio.c: 160: if (msg.identifier == 0b00000001101) {
 14948  0001A0  0E0D               	movlw	13
 14949  0001A2  0101               	movlb	1	; () banked
 14950  0001A4  1944               	xorwf	_msg& (0+255),w,b
 14951  0001A6  0101               	movlb	1	; () banked
 14952  0001A8  1145               	iorwf	(_msg+1)& (0+255),w,b
 14953  0001AA  0101               	movlb	1	; () banked
 14954  0001AC  1146               	iorwf	(_msg+2)& (0+255),w,b
 14955  0001AE  0101               	movlb	1	; () banked
 14956  0001B0  1147               	iorwf	(_msg+3)& (0+255),w,b
 14957  0001B2  B4D8               	btfsc	status,2,c
 14958                           
 14959                           ; BSR set to: 1
 14960                           ;parcheggio.c: 161: asd = 0;
 14961  0001B4  9254               	bcf	_asd/(0+8),_asd& (0+7),c	;volatile
 14962                           
 14963                           ; BSR set to: 1
 14964                           ;parcheggio.c: 162: }
 14965                           ;parcheggio.c: 163: if ((msg.identifier == 0b00000000111) && (msg.RTR != 1)) {
 14966                           
 14967                           ; BSR set to: 1
 14968  0001B6  0E07               	movlw	7
 14969  0001B8  0101               	movlb	1	; () banked
 14970  0001BA  1944               	xorwf	_msg& (0+255),w,b
 14971  0001BC  0101               	movlb	1	; () banked
 14972  0001BE  1145               	iorwf	(_msg+1)& (0+255),w,b
 14973  0001C0  0101               	movlb	1	; () banked
 14974  0001C2  1146               	iorwf	(_msg+2)& (0+255),w,b
 14975  0001C4  0101               	movlb	1	; () banked
 14976  0001C6  1147               	iorwf	(_msg+3)& (0+255),w,b
 14977  0001C8  A4D8               	btfss	status,2,c
 14978  0001CA  D02B               	goto	i1l8670
 14979                           
 14980                           ; BSR set to: 1
 14981  0001CC  0101               	movlb	1	; () banked
 14982  0001CE  0552               	decf	(_msg+14)& (0+255),w,b
 14983  0001D0  B4D8               	btfsc	status,2,c
 14984  0001D2  D027               	goto	i1l8670
 14985                           
 14986                           ; BSR set to: 1
 14987                           ;parcheggio.c: 164: distance_average = 0;
 14988  0001D4  0E00               	movlw	0
 14989  0001D6  6E1A               	movwf	_distance_average+1,c	;volatile
 14990  0001D8  0E00               	movlw	0
 14991  0001DA  6E19               	movwf	_distance_average,c	;volatile
 14992                           
 14993                           ; BSR set to: 1
 14994                           ;parcheggio.c: 165: distance_dx = msg.data[1];
 14995  0001DC  C149  F01B         	movff	_msg+5,_distance_dx	;volatile
 14996  0001E0  6A1C               	clrf	_distance_dx+1,c	;volatile
 14997                           
 14998                           ;parcheggio.c: 166: distance_dx = ((distance_dx << 8) | msg.data[0]);
 14999  0001E2  501B               	movf	_distance_dx,w,c	;volatile
 15000  0001E4  6E3D               	movwf	??_ISR_Bassa& (0+255),c
 15001  0001E6  0101               	movlb	1	; () banked
 15002  0001E8  5148               	movf	(_msg+4)& (0+255),w,b
 15003  0001EA  6E1B               	movwf	_distance_dx,c	;volatile
 15004  0001EC  C03D  F01C         	movff	??_ISR_Bassa,_distance_dx+1	;volatile
 15005                           
 15006                           ; BSR set to: 1
 15007                           ;parcheggio.c: 167: distance_sx = msg.data[3];
 15008  0001F0  C14B  F01D         	movff	_msg+7,_distance_sx	;volatile
 15009  0001F4  6A1E               	clrf	_distance_sx+1,c	;volatile
 15010                           
 15011                           ;parcheggio.c: 168: distance_sx = ((distance_sx << 8) | msg.data[2]);
 15012  0001F6  501D               	movf	_distance_sx,w,c	;volatile
 15013  0001F8  6E3D               	movwf	??_ISR_Bassa& (0+255),c
 15014  0001FA  0101               	movlb	1	; () banked
 15015  0001FC  514A               	movf	(_msg+6)& (0+255),w,b
 15016  0001FE  6E1D               	movwf	_distance_sx,c	;volatile
 15017  000200  C03D  F01E         	movff	??_ISR_Bassa,_distance_sx+1	;volatile
 15018                           
 15019                           ; BSR set to: 1
 15020                           ;parcheggio.c: 169: distance_average = (distance_sx + distance_dx) / 2;
 15021  000204  501B               	movf	_distance_dx,w,c	;volatile
 15022  000206  241D               	addwf	_distance_sx,w,c	;volatile
 15023  000208  6E3D               	movwf	??_ISR_Bassa& (0+255),c
 15024  00020A  501C               	movf	_distance_dx+1,w,c	;volatile
 15025  00020C  201E               	addwfc	_distance_sx+1,w,c	;volatile
 15026  00020E  6E3E               	movwf	(??_ISR_Bassa+1)& (0+255),c
 15027  000210  90D8               	bcf	status,0,c
 15028  000212  303E               	rrcf	??_ISR_Bassa+1,w,c
 15029  000214  6E3F               	movwf	(??_ISR_Bassa+2)& (0+255),c
 15030  000216  303D               	rrcf	??_ISR_Bassa,w,c
 15031  000218  6E19               	movwf	_distance_average,c	;volatile
 15032  00021A  C03F  F01A         	movff	??_ISR_Bassa+2,_distance_average+1	;volatile
 15033                           
 15034                           ; BSR set to: 1
 15035                           ;parcheggio.c: 170: distance_received = 1;
 15036  00021E  8A54               	bsf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
 15037                           
 15038                           ; BSR set to: 1
 15039                           ;parcheggio.c: 171: distance_received1 = 1;
 15040  000220  8C54               	bsf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
 15041  000222                     i1l8670:
 15042                           
 15043                           ; BSR set to: 1
 15044                           ;parcheggio.c: 172: }
 15045                           ;parcheggio.c: 173: if (msg.identifier == 0b00000001010) {
 15046  000222  0E0A               	movlw	10
 15047  000224  0101               	movlb	1	; () banked
 15048  000226  1944               	xorwf	_msg& (0+255),w,b
 15049  000228  0101               	movlb	1	; () banked
 15050  00022A  1145               	iorwf	(_msg+1)& (0+255),w,b
 15051  00022C  0101               	movlb	1	; () banked
 15052  00022E  1146               	iorwf	(_msg+2)& (0+255),w,b
 15053  000230  0101               	movlb	1	; () banked
 15054  000232  1147               	iorwf	(_msg+3)& (0+255),w,b
 15055  000234  A4D8               	btfss	status,2,c
 15056  000236  D00C               	goto	i1l8676
 15057                           
 15058                           ; BSR set to: 1
 15059                           ;parcheggio.c: 174: if (msg.data[0] == 1) {
 15060  000238  0101               	movlb	1	; () banked
 15061  00023A  0548               	decf	(_msg+4)& (0+255),w,b
 15062  00023C  A4D8               	btfss	status,2,c
 15063  00023E  D003               	goto	i1l721
 15064                           
 15065                           ; BSR set to: 1
 15066                           ;parcheggio.c: 175: activation = 1;
 15067  000240  8054               	bsf	_activation/(0+8),_activation& (0+7),c	;volatile
 15068                           
 15069                           ;parcheggio.c: 176: PORTBbits.RB6 = 1;
 15070  000242  8C81               	bsf	3969,6,c	;volatile
 15071                           
 15072                           ;parcheggio.c: 177: } else {
 15073  000244  D005               	goto	i1l8676
 15074  000246                     i1l721:
 15075                           
 15076                           ; BSR set to: 1
 15077                           ;parcheggio.c: 178: activation = 0;
 15078  000246  9054               	bcf	_activation/(0+8),_activation& (0+7),c	;volatile
 15079                           
 15080                           ;parcheggio.c: 179: PORTBbits.RB4 = 0;
 15081  000248  9881               	bcf	3969,4,c	;volatile
 15082                           
 15083                           ;parcheggio.c: 180: PORTBbits.RB5 = 0;
 15084  00024A  9A81               	bcf	3969,5,c	;volatile
 15085                           
 15086                           ;parcheggio.c: 181: PORTBbits.RB6 = 0;
 15087  00024C  9C81               	bcf	3969,6,c	;volatile
 15088                           
 15089                           ;parcheggio.c: 182: request_sent = 0;
 15090  00024E  9855               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
 15091  000250                     i1l8676:
 15092                           
 15093                           ; BSR set to: 1
 15094                           ;parcheggio.c: 183: }
 15095                           ;parcheggio.c: 184: }
 15096                           ;parcheggio.c: 185: if (msg.identifier == 0b00000001100) {
 15097  000250  0E0C               	movlw	12
 15098  000252  0101               	movlb	1	; () banked
 15099  000254  1944               	xorwf	_msg& (0+255),w,b
 15100  000256  0101               	movlb	1	; () banked
 15101  000258  1145               	iorwf	(_msg+1)& (0+255),w,b
 15102  00025A  0101               	movlb	1	; () banked
 15103  00025C  1146               	iorwf	(_msg+2)& (0+255),w,b
 15104  00025E  0101               	movlb	1	; () banked
 15105  000260  1147               	iorwf	(_msg+3)& (0+255),w,b
 15106  000262  B4D8               	btfsc	status,2,c
 15107                           
 15108                           ; BSR set to: 1
 15109                           ;parcheggio.c: 186: start_operation = 1;
 15110  000264  8C55               	bsf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 15111                           
 15112                           ; BSR set to: 1
 15113                           ;parcheggio.c: 187: }
 15114                           ;parcheggio.c: 188: if (msg.identifier == 0b00000000110) {
 15115                           
 15116                           ; BSR set to: 1
 15117  000266  0E06               	movlw	6
 15118  000268  0101               	movlb	1	; () banked
 15119  00026A  1944               	xorwf	_msg& (0+255),w,b
 15120  00026C  0101               	movlb	1	; () banked
 15121  00026E  1145               	iorwf	(_msg+1)& (0+255),w,b
 15122  000270  0101               	movlb	1	; () banked
 15123  000272  1146               	iorwf	(_msg+2)& (0+255),w,b
 15124  000274  0101               	movlb	1	; () banked
 15125  000276  1147               	iorwf	(_msg+3)& (0+255),w,b
 15126  000278  A4D8               	btfss	status,2,c
 15127  00027A  D025               	goto	i1l724
 15128                           
 15129                           ; BSR set to: 1
 15130                           ;parcheggio.c: 189: for (unsigned char i = 0; i < 8; i++) {
 15131  00027C  0E00               	movlw	0
 15132  00027E  6E53               	movwf	ISR_Bassa@i,c
 15133  000280                     i1l8684:
 15134                           
 15135                           ; BSR set to: 1
 15136  000280  0E07               	movlw	7
 15137  000282  6453               	cpfsgt	ISR_Bassa@i,c
 15138  000284  D001               	goto	i1l8688
 15139  000286  D014               	goto	i1l8694
 15140  000288                     i1l8688:
 15141                           
 15142                           ;parcheggio.c: 190: data_speed_rx[i] = msg.data[i];
 15143  000288  5053               	movf	ISR_Bassa@i,w,c
 15144  00028A  0D01               	mullw	1
 15145  00028C  0E48               	movlw	low (_msg+4)
 15146  00028E  24F3               	addwf	prodl,w,c
 15147  000290  6ED9               	movwf	fsr2l,c
 15148  000292  0E01               	movlw	high (_msg+4)
 15149  000294  20F4               	addwfc	prodh,w,c
 15150  000296  6EDA               	movwf	fsr2h,c
 15151  000298  5053               	movf	ISR_Bassa@i,w,c
 15152  00029A  0D01               	mullw	1
 15153  00029C  0E08               	movlw	low _data_speed_rx
 15154  00029E  24F3               	addwf	prodl,w,c
 15155  0002A0  6EE1               	movwf	fsr1l,c
 15156  0002A2  0E01               	movlw	high _data_speed_rx
 15157  0002A4  20F4               	addwfc	prodh,w,c
 15158  0002A6  6EE2               	movwf	fsr1h,c
 15159  0002A8  CFDF FFE7          	movff	indf2,indf1
 15160  0002AC  2A53               	incf	ISR_Bassa@i,f,c
 15161  0002AE  D7E8               	goto	i1l8684
 15162  0002B0                     i1l8694:
 15163                           
 15164                           ;parcheggio.c: 191: }
 15165                           ;parcheggio.c: 192: if (msg.identifier == 0b00000001101) {
 15166  0002B0  0E0D               	movlw	13
 15167  0002B2  0101               	movlb	1	; () banked
 15168  0002B4  1944               	xorwf	_msg& (0+255),w,b
 15169  0002B6  0101               	movlb	1	; () banked
 15170  0002B8  1145               	iorwf	(_msg+1)& (0+255),w,b
 15171  0002BA  0101               	movlb	1	; () banked
 15172  0002BC  1146               	iorwf	(_msg+2)& (0+255),w,b
 15173  0002BE  0101               	movlb	1	; () banked
 15174  0002C0  1147               	iorwf	(_msg+3)& (0+255),w,b
 15175  0002C2  B4D8               	btfsc	status,2,c
 15176                           
 15177                           ; BSR set to: 1
 15178                           ;parcheggio.c: 193: distance_wait = 0;
 15179  0002C4  9E54               	bcf	_distance_wait/(0+8),_distance_wait& (0+7),c	;volatile
 15180  0002C6                     i1l724:
 15181                           
 15182                           ; BSR set to: 1
 15183                           ;parcheggio.c: 194: }
 15184                           ;parcheggio.c: 196: }
 15185                           ;parcheggio.c: 198: PIR3bits.RXB0IF = 0;
 15186  0002C6  90A4               	bcf	4004,0,c	;volatile
 15187                           
 15188                           ;parcheggio.c: 199: PIR3bits.RXB1IF = 0;
 15189  0002C8  92A4               	bcf	4004,1,c	;volatile
 15190  0002CA                     i1l728:
 15191  0002CA  C051  FFF5         	movff	??_ISR_Bassa+20,tablat
 15192  0002CE  C050  FFF8         	movff	??_ISR_Bassa+19,tblptru
 15193  0002D2  C04F  FFF7         	movff	??_ISR_Bassa+18,tblptrh
 15194  0002D6  C04E  FFF6         	movff	??_ISR_Bassa+17,tblptrl
 15195  0002DA  C04D  FFF4         	movff	??_ISR_Bassa+16,prodh
 15196  0002DE  C04C  FFF3         	movff	??_ISR_Bassa+15,prodl
 15197  0002E2  C04B  FFDA         	movff	??_ISR_Bassa+14,fsr2h
 15198  0002E6  C04A  FFD9         	movff	??_ISR_Bassa+13,fsr2l
 15199  0002EA  C049  FFE2         	movff	??_ISR_Bassa+12,fsr1h
 15200  0002EE  C048  FFE1         	movff	??_ISR_Bassa+11,fsr1l
 15201  0002F2  C047  FFEA         	movff	??_ISR_Bassa+10,fsr0h
 15202  0002F6  C046  FFE9         	movff	??_ISR_Bassa+9,fsr0l
 15203  0002FA  C045  FFFB         	movff	??_ISR_Bassa+8,pclatu
 15204  0002FE  C044  FFFA         	movff	??_ISR_Bassa+7,pclath
 15205  000302  C043  FFE0         	movff	??_ISR_Bassa+6,bsr
 15206  000306  C042  FFE8         	movff	??_ISR_Bassa+5,wreg
 15207  00030A  C041  FFD8         	movff	??_ISR_Bassa+4,status
 15208  00030E  9056               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 15209  000310  0010               	retfie	
 15210  000312                     __end_of_ISR_Bassa:
 15211                           	opt stack 0
 15212                           pclatu	equ	0xFFB
 15213                           pclath	equ	0xFFA
 15214                           tblptru	equ	0xFF8
 15215                           tblptrh	equ	0xFF7
 15216                           tblptrl	equ	0xFF6
 15217                           tablat	equ	0xFF5
 15218                           prodh	equ	0xFF4
 15219                           prodl	equ	0xFF3
 15220                           intcon	equ	0xFF2
 15221                           intcon2	equ	0xFF1
 15222                           postinc0	equ	0xFEE
 15223                           fsr0h	equ	0xFEA
 15224                           fsr0l	equ	0xFE9
 15225                           wreg	equ	0xFE8
 15226                           indf1	equ	0xFE7
 15227                           postdec1	equ	0xFE5
 15228                           fsr1h	equ	0xFE2
 15229                           fsr1l	equ	0xFE1
 15230                           bsr	equ	0xFE0
 15231                           indf2	equ	0xFDF
 15232                           postinc2	equ	0xFDE
 15233                           postdec2	equ	0xFDD
 15234                           plusw2	equ	0xFDB
 15235                           fsr2h	equ	0xFDA
 15236                           fsr2l	equ	0xFD9
 15237                           status	equ	0xFD8
 15238                           
 15239 ;; *************** function i1_CANsendMessage *****************
 15240 ;; Defined at:
 15241 ;;		line 295 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 15242 ;; Parameters:    Size  Location     Type
 15243 ;;  identifier      4    0[COMRAM] unsigned long 
 15244 ;;  data            2    4[COMRAM] PTR unsigned char 
 15245 ;;		 -> can_send@data_correction1(0), data_speed(8), data_brake(8), data_steering(8), 
 15246 ;;		 -> data_correction(8), data_test(8), data(8), sensor_distance_short(8), 
 15247 ;;  dataLength      1    6[COMRAM] unsigned char 
 15248 ;;  flags           1    7[COMRAM] enum E16335
 15249 ;; Auto vars:     Size  Location     Type
 15250 ;;  CANsendMessa    4   12[COMRAM] unsigned long 
 15251 ;; Return value:  Size  Location     Type
 15252 ;;		None               void
 15253 ;; Registers used:
 15254 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15255 ;; Tracked objects:
 15256 ;;		On entry : 0/0
 15257 ;;		On exit  : 0/0
 15258 ;;		Unchanged: 0/0
 15259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15260 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15261 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15262 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15263 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15264 ;;Total ram usage:       16 bytes
 15265 ;; Hardware stack levels used:    1
 15266 ;; Hardware stack levels required when called:    2
 15267 ;; This function calls:
 15268 ;;		Nothing
 15269 ;; This function is called by:
 15270 ;;		_ISR_Bassa
 15271 ;; This function uses a non-reentrant model
 15272 ;;
 15273                           
 15274                           	psect	text36
 15275  001FE4                     __ptext36:
 15276                           	opt stack 0
 15277  001FE4                     i1_CANsendMessage:
 15278                           	opt stack 21
 15279                           
 15280                           ;inc\CANlib.h: 297: unsigned long tamp;
 15281                           ;inc\CANlib.h: 299: if (TXB0CONbits.TXREQ == 0)
 15282                           
 15283                           ;incstack = 0
 15284  001FE4  010F               	movlb	15	; () banked
 15285  001FE6  B740               	btfsc	64,3,b	;volatile
 15286  001FE8  D115               	goto	i1l363
 15287                           
 15288                           ; BSR set to: 15
 15289                           ;inc\CANlib.h: 300: { TXB0DLC = dataLength;
 15290  001FEA  C033  FF45         	movff	i1CANsendMessage@dataLength,3909	;volatile
 15291                           
 15292                           ;inc\CANlib.h: 301: if (0b01000000 & flags)
 15293  001FEE  AC34               	btfss	i1CANsendMessage@flags,6,c
 15294  001FF0  D003               	goto	i1l364
 15295                           
 15296                           ; BSR set to: 15
 15297                           ;inc\CANlib.h: 302: TXB0DLCbits.TXRTR = 0x01;
 15298  001FF2  010F               	movlb	15	; () banked
 15299  001FF4  8D45               	bsf	69,6,b	;volatile
 15300  001FF6  D002               	goto	i1l365
 15301  001FF8                     i1l364:
 15302                           
 15303                           ; BSR set to: 15
 15304                           ;inc\CANlib.h: 303: else
 15305                           ;inc\CANlib.h: 304: TXB0DLCbits.TXRTR = 0x00;
 15306  001FF8  010F               	movlb	15	; () banked
 15307  001FFA  9D45               	bcf	69,6,b	;volatile
 15308  001FFC                     i1l365:
 15309                           
 15310                           ; BSR set to: 15
 15311                           ;inc\CANlib.h: 306: if (CAN_TX_FRAME_MASK & flags)
 15312  001FFC  A634               	btfss	i1CANsendMessage@flags,3,c
 15313  001FFE  D066               	goto	i1l366
 15314                           
 15315                           ; BSR set to: 15
 15316                           ;inc\CANlib.h: 307: {
 15317                           ;inc\CANlib.h: 309: tamp = identifier & 0x000000FF;
 15318  002000  502D               	movf	i1CANsendMessage@identifier,w,c
 15319  002002  6E39               	movwf	i1CANsendMessage@tamp,c
 15320  002004  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 15321  002006  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 15322  002008  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 15323                           
 15324                           ; BSR set to: 15
 15325                           ;inc\CANlib.h: 310: TXB0EIDL = (unsigned char) tamp;
 15326  00200A  C039  FF44         	movff	i1CANsendMessage@tamp,3908	;volatile
 15327                           
 15328                           ; BSR set to: 15
 15329                           ;inc\CANlib.h: 312: tamp = identifier & 0x0000FF00;
 15330  00200E  0E00               	movlw	0
 15331  002010  142D               	andwf	i1CANsendMessage@identifier,w,c
 15332  002012  6E39               	movwf	i1CANsendMessage@tamp,c
 15333  002014  0EFF               	movlw	255
 15334  002016  142E               	andwf	i1CANsendMessage@identifier+1,w,c
 15335  002018  6E3A               	movwf	i1CANsendMessage@tamp+1,c
 15336  00201A  0E00               	movlw	0
 15337  00201C  142F               	andwf	i1CANsendMessage@identifier+2,w,c
 15338  00201E  6E3B               	movwf	i1CANsendMessage@tamp+2,c
 15339  002020  0E00               	movlw	0
 15340  002022  1430               	andwf	i1CANsendMessage@identifier+3,w,c
 15341  002024  6E3C               	movwf	i1CANsendMessage@tamp+3,c
 15342                           
 15343                           ; BSR set to: 15
 15344                           ;inc\CANlib.h: 313: tamp = tamp >> 8;
 15345  002026  C039  F035         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 15346  00202A  C03A  F036         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 15347  00202E  C03B  F037         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 15348  002032  C03C  F038         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 15349  002036  C036  F035         	movff	??i1_CANsendMessage+1,??i1_CANsendMessage
 15350  00203A  C037  F036         	movff	??i1_CANsendMessage+2,??i1_CANsendMessage+1
 15351  00203E  C038  F037         	movff	??i1_CANsendMessage+3,??i1_CANsendMessage+2
 15352  002042  6A38               	clrf	??i1_CANsendMessage+3,c
 15353  002044  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15354  002048  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15355  00204C  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15356  002050  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15357                           
 15358                           ; BSR set to: 15
 15359                           ;inc\CANlib.h: 314: TXB0EIDH = (unsigned char) tamp;
 15360  002054  C039  FF43         	movff	i1CANsendMessage@tamp,3907	;volatile
 15361                           
 15362                           ; BSR set to: 15
 15363                           ;inc\CANlib.h: 316: TXB0SIDL = 0x00;
 15364  002058  0E00               	movlw	0
 15365  00205A  010F               	movlb	15	; () banked
 15366  00205C  6F42               	movwf	66,b	;volatile
 15367                           
 15368                           ; BSR set to: 15
 15369                           ;inc\CANlib.h: 317: TXB0SIDLbits.EXIDE = 0x01;
 15370  00205E  010F               	movlb	15	; () banked
 15371  002060  8742               	bsf	66,3,b	;volatile
 15372                           
 15373                           ; BSR set to: 15
 15374                           ;inc\CANlib.h: 319: if (identifier & 0x00010000)
 15375  002062  A02F               	btfss	i1CANsendMessage@identifier+2,0,c
 15376  002064  D002               	goto	i1l367
 15377                           
 15378                           ; BSR set to: 15
 15379                           ;inc\CANlib.h: 320: TXB0SIDLbits.EID16 = 0x01;
 15380  002066  010F               	movlb	15	; () banked
 15381  002068  8142               	bsf	66,0,b	;volatile
 15382  00206A                     i1l367:
 15383                           
 15384                           ; BSR set to: 15
 15385                           ;inc\CANlib.h: 321: if (identifier & 0x00020000)
 15386  00206A  A22F               	btfss	i1CANsendMessage@identifier+2,1,c
 15387  00206C  D002               	goto	i1l368
 15388                           
 15389                           ; BSR set to: 15
 15390                           ;inc\CANlib.h: 322: TXB0SIDLbits.EID17 = 0x01;
 15391  00206E  010F               	movlb	15	; () banked
 15392  002070  8342               	bsf	66,1,b	;volatile
 15393  002072                     i1l368:
 15394                           
 15395                           ; BSR set to: 15
 15396                           ;inc\CANlib.h: 323: if (identifier & 0x00040000)
 15397  002072  A42F               	btfss	i1CANsendMessage@identifier+2,2,c
 15398  002074  D002               	goto	i1l369
 15399                           
 15400                           ; BSR set to: 15
 15401                           ;inc\CANlib.h: 324: TXB0SIDLbits.SID0 = 0x01;
 15402  002076  010F               	movlb	15	; () banked
 15403  002078  8B42               	bsf	66,5,b	;volatile
 15404  00207A                     i1l369:
 15405                           
 15406                           ; BSR set to: 15
 15407                           ;inc\CANlib.h: 325: if (identifier & 0x00080000)
 15408  00207A  A62F               	btfss	i1CANsendMessage@identifier+2,3,c
 15409  00207C  D002               	goto	i1l370
 15410                           
 15411                           ; BSR set to: 15
 15412                           ;inc\CANlib.h: 326: TXB0SIDLbits.SID1 = 0x01;
 15413  00207E  010F               	movlb	15	; () banked
 15414  002080  8D42               	bsf	66,6,b	;volatile
 15415  002082                     i1l370:
 15416                           
 15417                           ; BSR set to: 15
 15418                           ;inc\CANlib.h: 327: if (identifier & 0x00100000)
 15419  002082  A82F               	btfss	i1CANsendMessage@identifier+2,4,c
 15420  002084  D002               	goto	i1l8368
 15421                           
 15422                           ; BSR set to: 15
 15423                           ;inc\CANlib.h: 328: TXB0SIDLbits.SID2 = 0x01;
 15424  002086  010F               	movlb	15	; () banked
 15425  002088  8F42               	bsf	66,7,b	;volatile
 15426  00208A                     i1l8368:
 15427                           
 15428                           ; BSR set to: 15
 15429                           ;inc\CANlib.h: 330: tamp = (identifier >> 21);
 15430  00208A  C02D  F035         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 15431  00208E  C02E  F036         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 15432  002092  C02F  F037         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 15433  002096  C030  F038         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 15434  00209A  0E16               	movlw	22
 15435  00209C  D005               	goto	i1u1109_20
 15436  00209E                     i1u1109_25:
 15437  00209E  90D8               	bcf	status,0,c
 15438  0020A0  3238               	rrcf	??i1_CANsendMessage+3,f,c
 15439  0020A2  3237               	rrcf	??i1_CANsendMessage+2,f,c
 15440  0020A4  3236               	rrcf	??i1_CANsendMessage+1,f,c
 15441  0020A6  3235               	rrcf	??i1_CANsendMessage,f,c
 15442  0020A8                     i1u1109_20:
 15443  0020A8  2EE8               	decfsz	wreg,f,c
 15444  0020AA  D7F9               	goto	i1u1109_25
 15445  0020AC  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15446  0020B0  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15447  0020B4  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15448  0020B8  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15449                           
 15450                           ; BSR set to: 15
 15451                           ;inc\CANlib.h: 331: tamp = tamp & 0x000000FF;
 15452  0020BC  5039               	movf	i1CANsendMessage@tamp,w,c
 15453  0020BE  6E39               	movwf	i1CANsendMessage@tamp,c
 15454  0020C0  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 15455  0020C2  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 15456  0020C4  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 15457                           
 15458                           ; BSR set to: 15
 15459                           ;inc\CANlib.h: 332: TXB0SIDH = (unsigned char) tamp;
 15460  0020C6  C039  FF41         	movff	i1CANsendMessage@tamp,3905	;volatile
 15461                           
 15462                           ;inc\CANlib.h: 333: }
 15463  0020CA  D04D               	goto	i1l8388
 15464  0020CC                     i1l366:
 15465                           
 15466                           ; BSR set to: 15
 15467                           ;inc\CANlib.h: 335: else
 15468                           ;inc\CANlib.h: 337: {
 15469                           ;inc\CANlib.h: 338: TXB0SIDLbits.EXIDE = 0x00;
 15470  0020CC  010F               	movlb	15	; () banked
 15471  0020CE  9742               	bcf	66,3,b	;volatile
 15472                           
 15473                           ; BSR set to: 15
 15474                           ;inc\CANlib.h: 340: tamp = (identifier >> 3);
 15475  0020D0  C02D  F035         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 15476  0020D4  C02E  F036         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 15477  0020D8  C02F  F037         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 15478  0020DC  C030  F038         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 15479  0020E0  0E04               	movlw	4
 15480  0020E2  D005               	goto	i1u1110_20
 15481  0020E4                     i1u1110_25:
 15482  0020E4  90D8               	bcf	status,0,c
 15483  0020E6  3238               	rrcf	??i1_CANsendMessage+3,f,c
 15484  0020E8  3237               	rrcf	??i1_CANsendMessage+2,f,c
 15485  0020EA  3236               	rrcf	??i1_CANsendMessage+1,f,c
 15486  0020EC  3235               	rrcf	??i1_CANsendMessage,f,c
 15487  0020EE                     i1u1110_20:
 15488  0020EE  2EE8               	decfsz	wreg,f,c
 15489  0020F0  D7F9               	goto	i1u1110_25
 15490  0020F2  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15491  0020F6  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15492  0020FA  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15493  0020FE  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15494                           
 15495                           ; BSR set to: 15
 15496                           ;inc\CANlib.h: 341: tamp = tamp & 0x000000FF;
 15497  002102  5039               	movf	i1CANsendMessage@tamp,w,c
 15498  002104  6E39               	movwf	i1CANsendMessage@tamp,c
 15499  002106  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 15500  002108  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 15501  00210A  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 15502                           
 15503                           ; BSR set to: 15
 15504                           ;inc\CANlib.h: 342: TXB0SIDH = (unsigned char) tamp;
 15505  00210C  C039  FF41         	movff	i1CANsendMessage@tamp,3905	;volatile
 15506                           
 15507                           ; BSR set to: 15
 15508                           ;inc\CANlib.h: 344: tamp = identifier & 0x00000007;
 15509  002110  0E07               	movlw	7
 15510  002112  142D               	andwf	i1CANsendMessage@identifier,w,c
 15511  002114  6E39               	movwf	i1CANsendMessage@tamp,c
 15512  002116  0E00               	movlw	0
 15513  002118  142E               	andwf	i1CANsendMessage@identifier+1,w,c
 15514  00211A  6E3A               	movwf	i1CANsendMessage@tamp+1,c
 15515  00211C  0E00               	movlw	0
 15516  00211E  142F               	andwf	i1CANsendMessage@identifier+2,w,c
 15517  002120  6E3B               	movwf	i1CANsendMessage@tamp+2,c
 15518  002122  0E00               	movlw	0
 15519  002124  1430               	andwf	i1CANsendMessage@identifier+3,w,c
 15520  002126  6E3C               	movwf	i1CANsendMessage@tamp+3,c
 15521                           
 15522                           ; BSR set to: 15
 15523                           ;inc\CANlib.h: 345: tamp = tamp << 5;
 15524  002128  C039  F035         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 15525  00212C  C03A  F036         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 15526  002130  C03B  F037         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 15527  002134  C03C  F038         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 15528  002138  0E05               	movlw	5
 15529  00213A                     i1u1111_25:
 15530  00213A  90D8               	bcf	status,0,c
 15531  00213C  3635               	rlcf	??i1_CANsendMessage,f,c
 15532  00213E  3636               	rlcf	??i1_CANsendMessage+1,f,c
 15533  002140  3637               	rlcf	??i1_CANsendMessage+2,f,c
 15534  002142  3638               	rlcf	??i1_CANsendMessage+3,f,c
 15535  002144  2EE8               	decfsz	wreg,f,c
 15536  002146  D7F9               	goto	i1u1111_25
 15537  002148  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15538  00214C  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15539  002150  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15540  002154  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15541                           
 15542                           ; BSR set to: 15
 15543                           ;inc\CANlib.h: 346: TXB0SIDL = TXB0SIDL & 0b00011111;
 15544  002158  010F               	movlb	15	; () banked
 15545  00215A  5142               	movf	66,w,b	;volatile
 15546  00215C  0B1F               	andlw	31
 15547  00215E  010F               	movlb	15	; () banked
 15548  002160  6F42               	movwf	66,b	;volatile
 15549                           
 15550                           ; BSR set to: 15
 15551                           ;inc\CANlib.h: 347: TXB0SIDL = (unsigned char) tamp;
 15552  002162  C039  FF42         	movff	i1CANsendMessage@tamp,3906	;volatile
 15553  002166                     i1l8388:
 15554                           
 15555                           ; BSR set to: 15
 15556                           ;inc\CANlib.h: 348: }
 15557                           ;inc\CANlib.h: 350: if (0b00000001 & flags)
 15558  002166  A034               	btfss	i1CANsendMessage@flags,0,c
 15559  002168  D003               	goto	i1l373
 15560                           
 15561                           ; BSR set to: 15
 15562                           ;inc\CANlib.h: 351: TXB0CONbits.TXPRI0 = 0x01;
 15563  00216A  010F               	movlb	15	; () banked
 15564  00216C  8140               	bsf	64,0,b	;volatile
 15565  00216E  D002               	goto	i1l374
 15566  002170                     i1l373:
 15567                           
 15568                           ; BSR set to: 15
 15569                           ;inc\CANlib.h: 352: else
 15570                           ;inc\CANlib.h: 353: TXB0CONbits.TXPRI0 = 0x00;
 15571  002170  010F               	movlb	15	; () banked
 15572  002172  9140               	bcf	64,0,b	;volatile
 15573  002174                     i1l374:
 15574                           
 15575                           ; BSR set to: 15
 15576                           ;inc\CANlib.h: 354: if (0b00000010 & flags)
 15577  002174  A234               	btfss	i1CANsendMessage@flags,1,c
 15578  002176  D003               	goto	i1l375
 15579                           
 15580                           ; BSR set to: 15
 15581                           ;inc\CANlib.h: 355: TXB0CONbits.TXPRI1 = 0x01;
 15582  002178  010F               	movlb	15	; () banked
 15583  00217A  8340               	bsf	64,1,b	;volatile
 15584  00217C  D002               	goto	i1l8394
 15585  00217E                     i1l375:
 15586                           
 15587                           ; BSR set to: 15
 15588                           ;inc\CANlib.h: 356: else
 15589                           ;inc\CANlib.h: 357: TXB0CONbits.TXPRI1 = 0x00;
 15590  00217E  010F               	movlb	15	; () banked
 15591  002180  9340               	bcf	64,1,b	;volatile
 15592  002182                     i1l8394:
 15593                           
 15594                           ; BSR set to: 15
 15595                           ;inc\CANlib.h: 359: TXB0D0 = data[0];
 15596  002182  C031  FFD9         	movff	i1CANsendMessage@data,fsr2l
 15597  002186  C032  FFDA         	movff	i1CANsendMessage@data+1,fsr2h
 15598  00218A  50DF               	movf	indf2,w,c
 15599  00218C  010F               	movlb	15	; () banked
 15600  00218E  6F46               	movwf	70,b	;volatile
 15601                           
 15602                           ; BSR set to: 15
 15603                           ;inc\CANlib.h: 360: TXB0D1 = data[1];
 15604  002190  EE20 F001          	lfsr	2,1
 15605  002194  5031               	movf	i1CANsendMessage@data,w,c
 15606  002196  26D9               	addwf	fsr2l,f,c
 15607  002198  5032               	movf	i1CANsendMessage@data+1,w,c
 15608  00219A  22DA               	addwfc	fsr2h,f,c
 15609  00219C  50DF               	movf	indf2,w,c
 15610  00219E  010F               	movlb	15	; () banked
 15611  0021A0  6F47               	movwf	71,b	;volatile
 15612                           
 15613                           ; BSR set to: 15
 15614                           ;inc\CANlib.h: 361: TXB0D2 = data[2];
 15615  0021A2  EE20 F002          	lfsr	2,2
 15616  0021A6  5031               	movf	i1CANsendMessage@data,w,c
 15617  0021A8  26D9               	addwf	fsr2l,f,c
 15618  0021AA  5032               	movf	i1CANsendMessage@data+1,w,c
 15619  0021AC  22DA               	addwfc	fsr2h,f,c
 15620  0021AE  50DF               	movf	indf2,w,c
 15621  0021B0  010F               	movlb	15	; () banked
 15622  0021B2  6F48               	movwf	72,b	;volatile
 15623                           
 15624                           ; BSR set to: 15
 15625                           ;inc\CANlib.h: 362: TXB0D3 = data[3];
 15626  0021B4  EE20 F003          	lfsr	2,3
 15627  0021B8  5031               	movf	i1CANsendMessage@data,w,c
 15628  0021BA  26D9               	addwf	fsr2l,f,c
 15629  0021BC  5032               	movf	i1CANsendMessage@data+1,w,c
 15630  0021BE  22DA               	addwfc	fsr2h,f,c
 15631  0021C0  50DF               	movf	indf2,w,c
 15632  0021C2  010F               	movlb	15	; () banked
 15633  0021C4  6F49               	movwf	73,b	;volatile
 15634                           
 15635                           ; BSR set to: 15
 15636                           ;inc\CANlib.h: 363: TXB0D4 = data[4];
 15637  0021C6  EE20 F004          	lfsr	2,4
 15638  0021CA  5031               	movf	i1CANsendMessage@data,w,c
 15639  0021CC  26D9               	addwf	fsr2l,f,c
 15640  0021CE  5032               	movf	i1CANsendMessage@data+1,w,c
 15641  0021D0  22DA               	addwfc	fsr2h,f,c
 15642  0021D2  50DF               	movf	indf2,w,c
 15643  0021D4  010F               	movlb	15	; () banked
 15644  0021D6  6F4A               	movwf	74,b	;volatile
 15645                           
 15646                           ; BSR set to: 15
 15647                           ;inc\CANlib.h: 364: TXB0D5 = data[5];
 15648  0021D8  EE20 F005          	lfsr	2,5
 15649  0021DC  5031               	movf	i1CANsendMessage@data,w,c
 15650  0021DE  26D9               	addwf	fsr2l,f,c
 15651  0021E0  5032               	movf	i1CANsendMessage@data+1,w,c
 15652  0021E2  22DA               	addwfc	fsr2h,f,c
 15653  0021E4  50DF               	movf	indf2,w,c
 15654  0021E6  010F               	movlb	15	; () banked
 15655  0021E8  6F4B               	movwf	75,b	;volatile
 15656                           
 15657                           ; BSR set to: 15
 15658                           ;inc\CANlib.h: 365: TXB0D6 = data[6];
 15659  0021EA  EE20 F006          	lfsr	2,6
 15660  0021EE  5031               	movf	i1CANsendMessage@data,w,c
 15661  0021F0  26D9               	addwf	fsr2l,f,c
 15662  0021F2  5032               	movf	i1CANsendMessage@data+1,w,c
 15663  0021F4  22DA               	addwfc	fsr2h,f,c
 15664  0021F6  50DF               	movf	indf2,w,c
 15665  0021F8  010F               	movlb	15	; () banked
 15666  0021FA  6F4C               	movwf	76,b	;volatile
 15667                           
 15668                           ; BSR set to: 15
 15669                           ;inc\CANlib.h: 366: TXB0D7 = data[7];
 15670  0021FC  EE20 F007          	lfsr	2,7
 15671  002200  5031               	movf	i1CANsendMessage@data,w,c
 15672  002202  26D9               	addwf	fsr2l,f,c
 15673  002204  5032               	movf	i1CANsendMessage@data+1,w,c
 15674  002206  22DA               	addwfc	fsr2h,f,c
 15675  002208  50DF               	movf	indf2,w,c
 15676  00220A  010F               	movlb	15	; () banked
 15677  00220C  6F4D               	movwf	77,b	;volatile
 15678                           
 15679                           ; BSR set to: 15
 15680                           ;inc\CANlib.h: 368: TXB0CONbits.TXREQ = 0x01;
 15681  00220E  010F               	movlb	15	; () banked
 15682  002210  8740               	bsf	64,3,b	;volatile
 15683                           
 15684                           ; BSR set to: 15
 15685                           ;inc\CANlib.h: 369: return;
 15686  002212  0012               	return	
 15687  002214                     i1l363:
 15688                           
 15689                           ; BSR set to: 15
 15690                           ;inc\CANlib.h: 370: }
 15691                           ;inc\CANlib.h: 374: if (TXB1CONbits.TXREQ == 0)
 15692  002214  010F               	movlb	15	; () banked
 15693  002216  B730               	btfsc	48,3,b	;volatile
 15694  002218  D115               	goto	i1l378
 15695                           
 15696                           ; BSR set to: 15
 15697                           ;inc\CANlib.h: 375: { TXB1DLC = dataLength;
 15698  00221A  C033  FF35         	movff	i1CANsendMessage@dataLength,3893	;volatile
 15699                           
 15700                           ;inc\CANlib.h: 377: if (0b01000000 & flags)
 15701  00221E  AC34               	btfss	i1CANsendMessage@flags,6,c
 15702  002220  D003               	goto	i1l379
 15703                           
 15704                           ; BSR set to: 15
 15705                           ;inc\CANlib.h: 378: TXB1DLCbits.TXRTR = 0x01;
 15706  002222  010F               	movlb	15	; () banked
 15707  002224  8D35               	bsf	53,6,b	;volatile
 15708  002226  D002               	goto	i1l380
 15709  002228                     i1l379:
 15710                           
 15711                           ; BSR set to: 15
 15712                           ;inc\CANlib.h: 379: else
 15713                           ;inc\CANlib.h: 380: TXB1DLCbits.TXRTR = 0x00;
 15714  002228  010F               	movlb	15	; () banked
 15715  00222A  9D35               	bcf	53,6,b	;volatile
 15716  00222C                     i1l380:
 15717                           
 15718                           ; BSR set to: 15
 15719                           ;inc\CANlib.h: 382: if (CAN_TX_FRAME_MASK & flags)
 15720  00222C  A634               	btfss	i1CANsendMessage@flags,3,c
 15721  00222E  D066               	goto	i1l381
 15722                           
 15723                           ; BSR set to: 15
 15724                           ;inc\CANlib.h: 383: {
 15725                           ;inc\CANlib.h: 384: tamp = identifier & 0x000000FF;
 15726  002230  502D               	movf	i1CANsendMessage@identifier,w,c
 15727  002232  6E39               	movwf	i1CANsendMessage@tamp,c
 15728  002234  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 15729  002236  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 15730  002238  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 15731                           
 15732                           ; BSR set to: 15
 15733                           ;inc\CANlib.h: 385: TXB1EIDL = (unsigned char) tamp;
 15734  00223A  C039  FF34         	movff	i1CANsendMessage@tamp,3892	;volatile
 15735                           
 15736                           ; BSR set to: 15
 15737                           ;inc\CANlib.h: 387: tamp = identifier & 0x0000FF00;
 15738  00223E  0E00               	movlw	0
 15739  002240  142D               	andwf	i1CANsendMessage@identifier,w,c
 15740  002242  6E39               	movwf	i1CANsendMessage@tamp,c
 15741  002244  0EFF               	movlw	255
 15742  002246  142E               	andwf	i1CANsendMessage@identifier+1,w,c
 15743  002248  6E3A               	movwf	i1CANsendMessage@tamp+1,c
 15744  00224A  0E00               	movlw	0
 15745  00224C  142F               	andwf	i1CANsendMessage@identifier+2,w,c
 15746  00224E  6E3B               	movwf	i1CANsendMessage@tamp+2,c
 15747  002250  0E00               	movlw	0
 15748  002252  1430               	andwf	i1CANsendMessage@identifier+3,w,c
 15749  002254  6E3C               	movwf	i1CANsendMessage@tamp+3,c
 15750                           
 15751                           ; BSR set to: 15
 15752                           ;inc\CANlib.h: 388: tamp = tamp >> 8;
 15753  002256  C039  F035         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 15754  00225A  C03A  F036         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 15755  00225E  C03B  F037         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 15756  002262  C03C  F038         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 15757  002266  C036  F035         	movff	??i1_CANsendMessage+1,??i1_CANsendMessage
 15758  00226A  C037  F036         	movff	??i1_CANsendMessage+2,??i1_CANsendMessage+1
 15759  00226E  C038  F037         	movff	??i1_CANsendMessage+3,??i1_CANsendMessage+2
 15760  002272  6A38               	clrf	??i1_CANsendMessage+3,c
 15761  002274  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15762  002278  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15763  00227C  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15764  002280  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15765                           
 15766                           ; BSR set to: 15
 15767                           ;inc\CANlib.h: 389: TXB1EIDH = (unsigned char) tamp;
 15768  002284  C039  FF33         	movff	i1CANsendMessage@tamp,3891	;volatile
 15769                           
 15770                           ; BSR set to: 15
 15771                           ;inc\CANlib.h: 391: TXB1SIDL = 0x00;
 15772  002288  0E00               	movlw	0
 15773  00228A  010F               	movlb	15	; () banked
 15774  00228C  6F32               	movwf	50,b	;volatile
 15775                           
 15776                           ; BSR set to: 15
 15777                           ;inc\CANlib.h: 392: TXB1SIDLbits.EXIDE = 0x01;
 15778  00228E  010F               	movlb	15	; () banked
 15779  002290  8732               	bsf	50,3,b	;volatile
 15780                           
 15781                           ; BSR set to: 15
 15782                           ;inc\CANlib.h: 394: if (identifier & 0x00010000)
 15783  002292  A02F               	btfss	i1CANsendMessage@identifier+2,0,c
 15784  002294  D002               	goto	i1l382
 15785                           
 15786                           ; BSR set to: 15
 15787                           ;inc\CANlib.h: 395: TXB1SIDLbits.EID16 = 0x01;
 15788  002296  010F               	movlb	15	; () banked
 15789  002298  8132               	bsf	50,0,b	;volatile
 15790  00229A                     i1l382:
 15791                           
 15792                           ; BSR set to: 15
 15793                           ;inc\CANlib.h: 396: if (identifier & 0x00020000)
 15794  00229A  A22F               	btfss	i1CANsendMessage@identifier+2,1,c
 15795  00229C  D002               	goto	i1l383
 15796                           
 15797                           ; BSR set to: 15
 15798                           ;inc\CANlib.h: 397: TXB1SIDLbits.EID17 = 0x01;
 15799  00229E  010F               	movlb	15	; () banked
 15800  0022A0  8332               	bsf	50,1,b	;volatile
 15801  0022A2                     i1l383:
 15802                           
 15803                           ; BSR set to: 15
 15804                           ;inc\CANlib.h: 398: if (identifier & 0x00040000)
 15805  0022A2  A42F               	btfss	i1CANsendMessage@identifier+2,2,c
 15806  0022A4  D002               	goto	i1l384
 15807                           
 15808                           ; BSR set to: 15
 15809                           ;inc\CANlib.h: 399: TXB1SIDLbits.SID0 = 0x01;
 15810  0022A6  010F               	movlb	15	; () banked
 15811  0022A8  8B32               	bsf	50,5,b	;volatile
 15812  0022AA                     i1l384:
 15813                           
 15814                           ; BSR set to: 15
 15815                           ;inc\CANlib.h: 400: if (identifier & 0x00080000)
 15816  0022AA  A62F               	btfss	i1CANsendMessage@identifier+2,3,c
 15817  0022AC  D002               	goto	i1l385
 15818                           
 15819                           ; BSR set to: 15
 15820                           ;inc\CANlib.h: 401: TXB1SIDLbits.SID1 = 0x01;
 15821  0022AE  010F               	movlb	15	; () banked
 15822  0022B0  8D32               	bsf	50,6,b	;volatile
 15823  0022B2                     i1l385:
 15824                           
 15825                           ; BSR set to: 15
 15826                           ;inc\CANlib.h: 402: if (identifier & 0x00100000)
 15827  0022B2  A82F               	btfss	i1CANsendMessage@identifier+2,4,c
 15828  0022B4  D002               	goto	i1l8444
 15829                           
 15830                           ; BSR set to: 15
 15831                           ;inc\CANlib.h: 403: TXB1SIDLbits.SID2 = 0x01;
 15832  0022B6  010F               	movlb	15	; () banked
 15833  0022B8  8F32               	bsf	50,7,b	;volatile
 15834  0022BA                     i1l8444:
 15835                           
 15836                           ; BSR set to: 15
 15837                           ;inc\CANlib.h: 405: tamp = (identifier >> 21);
 15838  0022BA  C02D  F035         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 15839  0022BE  C02E  F036         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 15840  0022C2  C02F  F037         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 15841  0022C6  C030  F038         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 15842  0022CA  0E16               	movlw	22
 15843  0022CC  D005               	goto	i1u1122_20
 15844  0022CE                     i1u1122_25:
 15845  0022CE  90D8               	bcf	status,0,c
 15846  0022D0  3238               	rrcf	??i1_CANsendMessage+3,f,c
 15847  0022D2  3237               	rrcf	??i1_CANsendMessage+2,f,c
 15848  0022D4  3236               	rrcf	??i1_CANsendMessage+1,f,c
 15849  0022D6  3235               	rrcf	??i1_CANsendMessage,f,c
 15850  0022D8                     i1u1122_20:
 15851  0022D8  2EE8               	decfsz	wreg,f,c
 15852  0022DA  D7F9               	goto	i1u1122_25
 15853  0022DC  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15854  0022E0  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15855  0022E4  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15856  0022E8  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15857                           
 15858                           ; BSR set to: 15
 15859                           ;inc\CANlib.h: 406: tamp = tamp & 0x000000FF;
 15860  0022EC  5039               	movf	i1CANsendMessage@tamp,w,c
 15861  0022EE  6E39               	movwf	i1CANsendMessage@tamp,c
 15862  0022F0  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 15863  0022F2  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 15864  0022F4  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 15865                           
 15866                           ; BSR set to: 15
 15867                           ;inc\CANlib.h: 407: TXB1SIDH = (unsigned char) tamp;
 15868  0022F6  C039  FF31         	movff	i1CANsendMessage@tamp,3889	;volatile
 15869                           
 15870                           ;inc\CANlib.h: 408: }
 15871  0022FA  D04D               	goto	i1l8464
 15872  0022FC                     i1l381:
 15873                           
 15874                           ; BSR set to: 15
 15875                           ;inc\CANlib.h: 410: else
 15876                           ;inc\CANlib.h: 412: {
 15877                           ;inc\CANlib.h: 413: TXB1SIDLbits.EXIDE = 0x00;
 15878  0022FC  010F               	movlb	15	; () banked
 15879  0022FE  9732               	bcf	50,3,b	;volatile
 15880                           
 15881                           ; BSR set to: 15
 15882                           ;inc\CANlib.h: 415: tamp = (identifier >> 3);
 15883  002300  C02D  F035         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 15884  002304  C02E  F036         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 15885  002308  C02F  F037         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 15886  00230C  C030  F038         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 15887  002310  0E04               	movlw	4
 15888  002312  D005               	goto	i1u1123_20
 15889  002314                     i1u1123_25:
 15890  002314  90D8               	bcf	status,0,c
 15891  002316  3238               	rrcf	??i1_CANsendMessage+3,f,c
 15892  002318  3237               	rrcf	??i1_CANsendMessage+2,f,c
 15893  00231A  3236               	rrcf	??i1_CANsendMessage+1,f,c
 15894  00231C  3235               	rrcf	??i1_CANsendMessage,f,c
 15895  00231E                     i1u1123_20:
 15896  00231E  2EE8               	decfsz	wreg,f,c
 15897  002320  D7F9               	goto	i1u1123_25
 15898  002322  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15899  002326  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15900  00232A  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15901  00232E  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15902                           
 15903                           ; BSR set to: 15
 15904                           ;inc\CANlib.h: 416: tamp = tamp & 0x000000FF;
 15905  002332  5039               	movf	i1CANsendMessage@tamp,w,c
 15906  002334  6E39               	movwf	i1CANsendMessage@tamp,c
 15907  002336  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 15908  002338  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 15909  00233A  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 15910                           
 15911                           ; BSR set to: 15
 15912                           ;inc\CANlib.h: 417: TXB1SIDH = (unsigned char) tamp;
 15913  00233C  C039  FF31         	movff	i1CANsendMessage@tamp,3889	;volatile
 15914                           
 15915                           ; BSR set to: 15
 15916                           ;inc\CANlib.h: 419: tamp = identifier & 0x00000007;
 15917  002340  0E07               	movlw	7
 15918  002342  142D               	andwf	i1CANsendMessage@identifier,w,c
 15919  002344  6E39               	movwf	i1CANsendMessage@tamp,c
 15920  002346  0E00               	movlw	0
 15921  002348  142E               	andwf	i1CANsendMessage@identifier+1,w,c
 15922  00234A  6E3A               	movwf	i1CANsendMessage@tamp+1,c
 15923  00234C  0E00               	movlw	0
 15924  00234E  142F               	andwf	i1CANsendMessage@identifier+2,w,c
 15925  002350  6E3B               	movwf	i1CANsendMessage@tamp+2,c
 15926  002352  0E00               	movlw	0
 15927  002354  1430               	andwf	i1CANsendMessage@identifier+3,w,c
 15928  002356  6E3C               	movwf	i1CANsendMessage@tamp+3,c
 15929                           
 15930                           ; BSR set to: 15
 15931                           ;inc\CANlib.h: 420: tamp = tamp << 5;
 15932  002358  C039  F035         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 15933  00235C  C03A  F036         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 15934  002360  C03B  F037         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 15935  002364  C03C  F038         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 15936  002368  0E05               	movlw	5
 15937  00236A                     i1u1124_25:
 15938  00236A  90D8               	bcf	status,0,c
 15939  00236C  3635               	rlcf	??i1_CANsendMessage,f,c
 15940  00236E  3636               	rlcf	??i1_CANsendMessage+1,f,c
 15941  002370  3637               	rlcf	??i1_CANsendMessage+2,f,c
 15942  002372  3638               	rlcf	??i1_CANsendMessage+3,f,c
 15943  002374  2EE8               	decfsz	wreg,f,c
 15944  002376  D7F9               	goto	i1u1124_25
 15945  002378  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15946  00237C  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15947  002380  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15948  002384  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15949                           
 15950                           ; BSR set to: 15
 15951                           ;inc\CANlib.h: 421: TXB1SIDL = TXB1SIDL & 0b00011111;
 15952  002388  010F               	movlb	15	; () banked
 15953  00238A  5132               	movf	50,w,b	;volatile
 15954  00238C  0B1F               	andlw	31
 15955  00238E  010F               	movlb	15	; () banked
 15956  002390  6F32               	movwf	50,b	;volatile
 15957                           
 15958                           ; BSR set to: 15
 15959                           ;inc\CANlib.h: 422: TXB1SIDL = (unsigned char) tamp;
 15960  002392  C039  FF32         	movff	i1CANsendMessage@tamp,3890	;volatile
 15961  002396                     i1l8464:
 15962                           
 15963                           ; BSR set to: 15
 15964                           ;inc\CANlib.h: 423: }
 15965                           ;inc\CANlib.h: 425: if (0b00000001 & flags)
 15966  002396  A034               	btfss	i1CANsendMessage@flags,0,c
 15967  002398  D003               	goto	i1l388
 15968                           
 15969                           ; BSR set to: 15
 15970                           ;inc\CANlib.h: 426: TXB1CONbits.TXPRI0 = 0x01;
 15971  00239A  010F               	movlb	15	; () banked
 15972  00239C  8130               	bsf	48,0,b	;volatile
 15973  00239E  D002               	goto	i1l389
 15974  0023A0                     i1l388:
 15975                           
 15976                           ; BSR set to: 15
 15977                           ;inc\CANlib.h: 427: else
 15978                           ;inc\CANlib.h: 428: TXB1CONbits.TXPRI0 = 0x00;
 15979  0023A0  010F               	movlb	15	; () banked
 15980  0023A2  9130               	bcf	48,0,b	;volatile
 15981  0023A4                     i1l389:
 15982                           
 15983                           ; BSR set to: 15
 15984                           ;inc\CANlib.h: 429: if (0b00000010 & flags)
 15985  0023A4  A234               	btfss	i1CANsendMessage@flags,1,c
 15986  0023A6  D003               	goto	i1l390
 15987                           
 15988                           ; BSR set to: 15
 15989                           ;inc\CANlib.h: 430: TXB1CONbits.TXPRI1 = 0x01;
 15990  0023A8  010F               	movlb	15	; () banked
 15991  0023AA  8330               	bsf	48,1,b	;volatile
 15992  0023AC  D002               	goto	i1l8470
 15993  0023AE                     i1l390:
 15994                           
 15995                           ; BSR set to: 15
 15996                           ;inc\CANlib.h: 431: else
 15997                           ;inc\CANlib.h: 432: TXB1CONbits.TXPRI1 = 0x00;
 15998  0023AE  010F               	movlb	15	; () banked
 15999  0023B0  9330               	bcf	48,1,b	;volatile
 16000  0023B2                     i1l8470:
 16001                           
 16002                           ; BSR set to: 15
 16003                           ;inc\CANlib.h: 434: TXB1D0 = data[0];
 16004  0023B2  C031  FFD9         	movff	i1CANsendMessage@data,fsr2l
 16005  0023B6  C032  FFDA         	movff	i1CANsendMessage@data+1,fsr2h
 16006  0023BA  50DF               	movf	indf2,w,c
 16007  0023BC  010F               	movlb	15	; () banked
 16008  0023BE  6F36               	movwf	54,b	;volatile
 16009                           
 16010                           ; BSR set to: 15
 16011                           ;inc\CANlib.h: 435: TXB1D1 = data[1];
 16012  0023C0  EE20 F001          	lfsr	2,1
 16013  0023C4  5031               	movf	i1CANsendMessage@data,w,c
 16014  0023C6  26D9               	addwf	fsr2l,f,c
 16015  0023C8  5032               	movf	i1CANsendMessage@data+1,w,c
 16016  0023CA  22DA               	addwfc	fsr2h,f,c
 16017  0023CC  50DF               	movf	indf2,w,c
 16018  0023CE  010F               	movlb	15	; () banked
 16019  0023D0  6F37               	movwf	55,b	;volatile
 16020                           
 16021                           ; BSR set to: 15
 16022                           ;inc\CANlib.h: 436: TXB1D2 = data[2];
 16023  0023D2  EE20 F002          	lfsr	2,2
 16024  0023D6  5031               	movf	i1CANsendMessage@data,w,c
 16025  0023D8  26D9               	addwf	fsr2l,f,c
 16026  0023DA  5032               	movf	i1CANsendMessage@data+1,w,c
 16027  0023DC  22DA               	addwfc	fsr2h,f,c
 16028  0023DE  50DF               	movf	indf2,w,c
 16029  0023E0  010F               	movlb	15	; () banked
 16030  0023E2  6F38               	movwf	56,b	;volatile
 16031                           
 16032                           ; BSR set to: 15
 16033                           ;inc\CANlib.h: 437: TXB1D3 = data[3];
 16034  0023E4  EE20 F003          	lfsr	2,3
 16035  0023E8  5031               	movf	i1CANsendMessage@data,w,c
 16036  0023EA  26D9               	addwf	fsr2l,f,c
 16037  0023EC  5032               	movf	i1CANsendMessage@data+1,w,c
 16038  0023EE  22DA               	addwfc	fsr2h,f,c
 16039  0023F0  50DF               	movf	indf2,w,c
 16040  0023F2  010F               	movlb	15	; () banked
 16041  0023F4  6F39               	movwf	57,b	;volatile
 16042                           
 16043                           ; BSR set to: 15
 16044                           ;inc\CANlib.h: 438: TXB1D4 = data[4];
 16045  0023F6  EE20 F004          	lfsr	2,4
 16046  0023FA  5031               	movf	i1CANsendMessage@data,w,c
 16047  0023FC  26D9               	addwf	fsr2l,f,c
 16048  0023FE  5032               	movf	i1CANsendMessage@data+1,w,c
 16049  002400  22DA               	addwfc	fsr2h,f,c
 16050  002402  50DF               	movf	indf2,w,c
 16051  002404  010F               	movlb	15	; () banked
 16052  002406  6F3A               	movwf	58,b	;volatile
 16053                           
 16054                           ; BSR set to: 15
 16055                           ;inc\CANlib.h: 439: TXB1D5 = data[5];
 16056  002408  EE20 F005          	lfsr	2,5
 16057  00240C  5031               	movf	i1CANsendMessage@data,w,c
 16058  00240E  26D9               	addwf	fsr2l,f,c
 16059  002410  5032               	movf	i1CANsendMessage@data+1,w,c
 16060  002412  22DA               	addwfc	fsr2h,f,c
 16061  002414  50DF               	movf	indf2,w,c
 16062  002416  010F               	movlb	15	; () banked
 16063  002418  6F3B               	movwf	59,b	;volatile
 16064                           
 16065                           ; BSR set to: 15
 16066                           ;inc\CANlib.h: 440: TXB1D6 = data[6];
 16067  00241A  EE20 F006          	lfsr	2,6
 16068  00241E  5031               	movf	i1CANsendMessage@data,w,c
 16069  002420  26D9               	addwf	fsr2l,f,c
 16070  002422  5032               	movf	i1CANsendMessage@data+1,w,c
 16071  002424  22DA               	addwfc	fsr2h,f,c
 16072  002426  50DF               	movf	indf2,w,c
 16073  002428  010F               	movlb	15	; () banked
 16074  00242A  6F3C               	movwf	60,b	;volatile
 16075                           
 16076                           ; BSR set to: 15
 16077                           ;inc\CANlib.h: 441: TXB1D7 = data[7];
 16078  00242C  EE20 F007          	lfsr	2,7
 16079  002430  5031               	movf	i1CANsendMessage@data,w,c
 16080  002432  26D9               	addwf	fsr2l,f,c
 16081  002434  5032               	movf	i1CANsendMessage@data+1,w,c
 16082  002436  22DA               	addwfc	fsr2h,f,c
 16083  002438  50DF               	movf	indf2,w,c
 16084  00243A  010F               	movlb	15	; () banked
 16085  00243C  6F3D               	movwf	61,b	;volatile
 16086                           
 16087                           ; BSR set to: 15
 16088                           ;inc\CANlib.h: 443: TXB1CONbits.TXREQ = 0x01;
 16089  00243E  010F               	movlb	15	; () banked
 16090  002440  8730               	bsf	48,3,b	;volatile
 16091                           
 16092                           ; BSR set to: 15
 16093                           ;inc\CANlib.h: 445: return;
 16094  002442  0012               	return	
 16095  002444                     i1l378:
 16096                           
 16097                           ; BSR set to: 15
 16098                           ;inc\CANlib.h: 446: }
 16099                           ;inc\CANlib.h: 450: if (TXB2CONbits.TXREQ == 0)
 16100  002444  010F               	movlb	15	; () banked
 16101  002446  B720               	btfsc	32,3,b	;volatile
 16102  002448  0012               	return	
 16103                           
 16104                           ; BSR set to: 15
 16105                           ;inc\CANlib.h: 451: { TXB2DLC = dataLength;
 16106  00244A  C033  FF25         	movff	i1CANsendMessage@dataLength,3877	;volatile
 16107                           
 16108                           ;inc\CANlib.h: 453: if (0b01000000 & flags)
 16109  00244E  AC34               	btfss	i1CANsendMessage@flags,6,c
 16110  002450  D003               	goto	i1l393
 16111                           
 16112                           ; BSR set to: 15
 16113                           ;inc\CANlib.h: 454: TXB2DLCbits.TXRTR = 0x01;
 16114  002452  010F               	movlb	15	; () banked
 16115  002454  8D25               	bsf	37,6,b	;volatile
 16116  002456  D002               	goto	i1l394
 16117  002458                     i1l393:
 16118                           
 16119                           ; BSR set to: 15
 16120                           ;inc\CANlib.h: 455: else
 16121                           ;inc\CANlib.h: 456: TXB2DLCbits.TXRTR = 0x00;
 16122  002458  010F               	movlb	15	; () banked
 16123  00245A  9D25               	bcf	37,6,b	;volatile
 16124  00245C                     i1l394:
 16125                           
 16126                           ; BSR set to: 15
 16127                           ;inc\CANlib.h: 458: if (CAN_TX_FRAME_MASK & flags)
 16128  00245C  A634               	btfss	i1CANsendMessage@flags,3,c
 16129  00245E  D066               	goto	i1l395
 16130                           
 16131                           ; BSR set to: 15
 16132                           ;inc\CANlib.h: 459: {
 16133                           ;inc\CANlib.h: 460: tamp = identifier & 0x000000FF;
 16134  002460  502D               	movf	i1CANsendMessage@identifier,w,c
 16135  002462  6E39               	movwf	i1CANsendMessage@tamp,c
 16136  002464  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 16137  002466  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 16138  002468  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 16139                           
 16140                           ; BSR set to: 15
 16141                           ;inc\CANlib.h: 461: TXB2EIDL = (unsigned char) tamp;
 16142  00246A  C039  FF24         	movff	i1CANsendMessage@tamp,3876	;volatile
 16143                           
 16144                           ; BSR set to: 15
 16145                           ;inc\CANlib.h: 463: tamp = identifier & 0x0000FF00;
 16146  00246E  0E00               	movlw	0
 16147  002470  142D               	andwf	i1CANsendMessage@identifier,w,c
 16148  002472  6E39               	movwf	i1CANsendMessage@tamp,c
 16149  002474  0EFF               	movlw	255
 16150  002476  142E               	andwf	i1CANsendMessage@identifier+1,w,c
 16151  002478  6E3A               	movwf	i1CANsendMessage@tamp+1,c
 16152  00247A  0E00               	movlw	0
 16153  00247C  142F               	andwf	i1CANsendMessage@identifier+2,w,c
 16154  00247E  6E3B               	movwf	i1CANsendMessage@tamp+2,c
 16155  002480  0E00               	movlw	0
 16156  002482  1430               	andwf	i1CANsendMessage@identifier+3,w,c
 16157  002484  6E3C               	movwf	i1CANsendMessage@tamp+3,c
 16158                           
 16159                           ; BSR set to: 15
 16160                           ;inc\CANlib.h: 464: tamp = tamp >> 8;
 16161  002486  C039  F035         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 16162  00248A  C03A  F036         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 16163  00248E  C03B  F037         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 16164  002492  C03C  F038         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 16165  002496  C036  F035         	movff	??i1_CANsendMessage+1,??i1_CANsendMessage
 16166  00249A  C037  F036         	movff	??i1_CANsendMessage+2,??i1_CANsendMessage+1
 16167  00249E  C038  F037         	movff	??i1_CANsendMessage+3,??i1_CANsendMessage+2
 16168  0024A2  6A38               	clrf	??i1_CANsendMessage+3,c
 16169  0024A4  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 16170  0024A8  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 16171  0024AC  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 16172  0024B0  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 16173                           
 16174                           ; BSR set to: 15
 16175                           ;inc\CANlib.h: 465: TXB2EIDH = (unsigned char) tamp;
 16176  0024B4  C039  FF23         	movff	i1CANsendMessage@tamp,3875	;volatile
 16177                           
 16178                           ; BSR set to: 15
 16179                           ;inc\CANlib.h: 467: TXB2SIDL = 0x00;
 16180  0024B8  0E00               	movlw	0
 16181  0024BA  010F               	movlb	15	; () banked
 16182  0024BC  6F22               	movwf	34,b	;volatile
 16183                           
 16184                           ; BSR set to: 15
 16185                           ;inc\CANlib.h: 468: TXB2SIDLbits.EXIDE = 0x01;
 16186  0024BE  010F               	movlb	15	; () banked
 16187  0024C0  8722               	bsf	34,3,b	;volatile
 16188                           
 16189                           ; BSR set to: 15
 16190                           ;inc\CANlib.h: 470: if (identifier & 0x00010000)
 16191  0024C2  A02F               	btfss	i1CANsendMessage@identifier+2,0,c
 16192  0024C4  D002               	goto	i1l396
 16193                           
 16194                           ; BSR set to: 15
 16195                           ;inc\CANlib.h: 471: TXB2SIDLbits.EID16 = 0x01;
 16196  0024C6  010F               	movlb	15	; () banked
 16197  0024C8  8122               	bsf	34,0,b	;volatile
 16198  0024CA                     i1l396:
 16199                           
 16200                           ; BSR set to: 15
 16201                           ;inc\CANlib.h: 472: if (identifier & 0x00020000)
 16202  0024CA  A22F               	btfss	i1CANsendMessage@identifier+2,1,c
 16203  0024CC  D002               	goto	i1l397
 16204                           
 16205                           ; BSR set to: 15
 16206                           ;inc\CANlib.h: 473: TXB2SIDLbits.EID17 = 0x01;
 16207  0024CE  010F               	movlb	15	; () banked
 16208  0024D0  8322               	bsf	34,1,b	;volatile
 16209  0024D2                     i1l397:
 16210                           
 16211                           ; BSR set to: 15
 16212                           ;inc\CANlib.h: 474: if (identifier & 0x00040000)
 16213  0024D2  A42F               	btfss	i1CANsendMessage@identifier+2,2,c
 16214  0024D4  D002               	goto	i1l398
 16215                           
 16216                           ; BSR set to: 15
 16217                           ;inc\CANlib.h: 475: TXB2SIDLbits.SID0 = 0x01;
 16218  0024D6  010F               	movlb	15	; () banked
 16219  0024D8  8B22               	bsf	34,5,b	;volatile
 16220  0024DA                     i1l398:
 16221                           
 16222                           ; BSR set to: 15
 16223                           ;inc\CANlib.h: 476: if (identifier & 0x00080000)
 16224  0024DA  A62F               	btfss	i1CANsendMessage@identifier+2,3,c
 16225  0024DC  D002               	goto	i1l399
 16226                           
 16227                           ; BSR set to: 15
 16228                           ;inc\CANlib.h: 477: TXB2SIDLbits.SID1 = 0x01;
 16229  0024DE  010F               	movlb	15	; () banked
 16230  0024E0  8D22               	bsf	34,6,b	;volatile
 16231  0024E2                     i1l399:
 16232                           
 16233                           ; BSR set to: 15
 16234                           ;inc\CANlib.h: 478: if (identifier & 0x00100000)
 16235  0024E2  A82F               	btfss	i1CANsendMessage@identifier+2,4,c
 16236  0024E4  D002               	goto	i1l8520
 16237                           
 16238                           ; BSR set to: 15
 16239                           ;inc\CANlib.h: 479: TXB2SIDLbits.SID2 = 0x01;
 16240  0024E6  010F               	movlb	15	; () banked
 16241  0024E8  8F22               	bsf	34,7,b	;volatile
 16242  0024EA                     i1l8520:
 16243                           
 16244                           ; BSR set to: 15
 16245                           ;inc\CANlib.h: 481: tamp = (identifier >> 21);
 16246  0024EA  C02D  F035         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 16247  0024EE  C02E  F036         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 16248  0024F2  C02F  F037         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 16249  0024F6  C030  F038         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 16250  0024FA  0E16               	movlw	22
 16251  0024FC  D005               	goto	i1u1135_20
 16252  0024FE                     i1u1135_25:
 16253  0024FE  90D8               	bcf	status,0,c
 16254  002500  3238               	rrcf	??i1_CANsendMessage+3,f,c
 16255  002502  3237               	rrcf	??i1_CANsendMessage+2,f,c
 16256  002504  3236               	rrcf	??i1_CANsendMessage+1,f,c
 16257  002506  3235               	rrcf	??i1_CANsendMessage,f,c
 16258  002508                     i1u1135_20:
 16259  002508  2EE8               	decfsz	wreg,f,c
 16260  00250A  D7F9               	goto	i1u1135_25
 16261  00250C  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 16262  002510  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 16263  002514  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 16264  002518  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 16265                           
 16266                           ; BSR set to: 15
 16267                           ;inc\CANlib.h: 482: tamp = tamp & 0x000000FF;
 16268  00251C  5039               	movf	i1CANsendMessage@tamp,w,c
 16269  00251E  6E39               	movwf	i1CANsendMessage@tamp,c
 16270  002520  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 16271  002522  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 16272  002524  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 16273                           
 16274                           ; BSR set to: 15
 16275                           ;inc\CANlib.h: 483: TXB2SIDH = (unsigned char) tamp;
 16276  002526  C039  FF21         	movff	i1CANsendMessage@tamp,3873	;volatile
 16277                           
 16278                           ;inc\CANlib.h: 484: }
 16279  00252A  D04D               	goto	i1l8540
 16280  00252C                     i1l395:
 16281                           
 16282                           ; BSR set to: 15
 16283                           ;inc\CANlib.h: 486: else
 16284                           ;inc\CANlib.h: 488: {
 16285                           ;inc\CANlib.h: 489: TXB2SIDLbits.EXIDE = 0x00;
 16286  00252C  010F               	movlb	15	; () banked
 16287  00252E  9722               	bcf	34,3,b	;volatile
 16288                           
 16289                           ; BSR set to: 15
 16290                           ;inc\CANlib.h: 491: tamp = (identifier >> 3);
 16291  002530  C02D  F035         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 16292  002534  C02E  F036         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 16293  002538  C02F  F037         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 16294  00253C  C030  F038         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 16295  002540  0E04               	movlw	4
 16296  002542  D005               	goto	i1u1136_20
 16297  002544                     i1u1136_25:
 16298  002544  90D8               	bcf	status,0,c
 16299  002546  3238               	rrcf	??i1_CANsendMessage+3,f,c
 16300  002548  3237               	rrcf	??i1_CANsendMessage+2,f,c
 16301  00254A  3236               	rrcf	??i1_CANsendMessage+1,f,c
 16302  00254C  3235               	rrcf	??i1_CANsendMessage,f,c
 16303  00254E                     i1u1136_20:
 16304  00254E  2EE8               	decfsz	wreg,f,c
 16305  002550  D7F9               	goto	i1u1136_25
 16306  002552  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 16307  002556  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 16308  00255A  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 16309  00255E  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 16310                           
 16311                           ; BSR set to: 15
 16312                           ;inc\CANlib.h: 492: tamp = tamp & 0x000000FF;
 16313  002562  5039               	movf	i1CANsendMessage@tamp,w,c
 16314  002564  6E39               	movwf	i1CANsendMessage@tamp,c
 16315  002566  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 16316  002568  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 16317  00256A  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 16318                           
 16319                           ; BSR set to: 15
 16320                           ;inc\CANlib.h: 493: TXB2SIDH = (unsigned char) tamp;
 16321  00256C  C039  FF21         	movff	i1CANsendMessage@tamp,3873	;volatile
 16322                           
 16323                           ; BSR set to: 15
 16324                           ;inc\CANlib.h: 495: tamp = identifier & 0x00000007;
 16325  002570  0E07               	movlw	7
 16326  002572  142D               	andwf	i1CANsendMessage@identifier,w,c
 16327  002574  6E39               	movwf	i1CANsendMessage@tamp,c
 16328  002576  0E00               	movlw	0
 16329  002578  142E               	andwf	i1CANsendMessage@identifier+1,w,c
 16330  00257A  6E3A               	movwf	i1CANsendMessage@tamp+1,c
 16331  00257C  0E00               	movlw	0
 16332  00257E  142F               	andwf	i1CANsendMessage@identifier+2,w,c
 16333  002580  6E3B               	movwf	i1CANsendMessage@tamp+2,c
 16334  002582  0E00               	movlw	0
 16335  002584  1430               	andwf	i1CANsendMessage@identifier+3,w,c
 16336  002586  6E3C               	movwf	i1CANsendMessage@tamp+3,c
 16337                           
 16338                           ; BSR set to: 15
 16339                           ;inc\CANlib.h: 496: tamp = tamp << 5;
 16340  002588  C039  F035         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 16341  00258C  C03A  F036         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 16342  002590  C03B  F037         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 16343  002594  C03C  F038         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 16344  002598  0E05               	movlw	5
 16345  00259A                     i1u1137_25:
 16346  00259A  90D8               	bcf	status,0,c
 16347  00259C  3635               	rlcf	??i1_CANsendMessage,f,c
 16348  00259E  3636               	rlcf	??i1_CANsendMessage+1,f,c
 16349  0025A0  3637               	rlcf	??i1_CANsendMessage+2,f,c
 16350  0025A2  3638               	rlcf	??i1_CANsendMessage+3,f,c
 16351  0025A4  2EE8               	decfsz	wreg,f,c
 16352  0025A6  D7F9               	goto	i1u1137_25
 16353  0025A8  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 16354  0025AC  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 16355  0025B0  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 16356  0025B4  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 16357                           
 16358                           ; BSR set to: 15
 16359                           ;inc\CANlib.h: 497: TXB2SIDL = TXB2SIDL & 0b00011111;
 16360  0025B8  010F               	movlb	15	; () banked
 16361  0025BA  5122               	movf	34,w,b	;volatile
 16362  0025BC  0B1F               	andlw	31
 16363  0025BE  010F               	movlb	15	; () banked
 16364  0025C0  6F22               	movwf	34,b	;volatile
 16365                           
 16366                           ; BSR set to: 15
 16367                           ;inc\CANlib.h: 498: TXB2SIDL = (unsigned char) tamp;
 16368  0025C2  C039  FF22         	movff	i1CANsendMessage@tamp,3874	;volatile
 16369  0025C6                     i1l8540:
 16370                           
 16371                           ; BSR set to: 15
 16372                           ;inc\CANlib.h: 499: }
 16373                           ;inc\CANlib.h: 501: if (0b00000001 & flags)
 16374  0025C6  A034               	btfss	i1CANsendMessage@flags,0,c
 16375  0025C8  D003               	goto	i1l402
 16376                           
 16377                           ; BSR set to: 15
 16378                           ;inc\CANlib.h: 502: TXB2CONbits.TXPRI0 = 0x01;
 16379  0025CA  010F               	movlb	15	; () banked
 16380  0025CC  8120               	bsf	32,0,b	;volatile
 16381  0025CE  D002               	goto	i1l403
 16382  0025D0                     i1l402:
 16383                           
 16384                           ; BSR set to: 15
 16385                           ;inc\CANlib.h: 503: else
 16386                           ;inc\CANlib.h: 504: TXB2CONbits.TXPRI0 = 0x00;
 16387  0025D0  010F               	movlb	15	; () banked
 16388  0025D2  9120               	bcf	32,0,b	;volatile
 16389  0025D4                     i1l403:
 16390                           
 16391                           ; BSR set to: 15
 16392                           ;inc\CANlib.h: 505: if (0b00000010 & flags)
 16393  0025D4  A234               	btfss	i1CANsendMessage@flags,1,c
 16394  0025D6  D003               	goto	i1l404
 16395                           
 16396                           ; BSR set to: 15
 16397                           ;inc\CANlib.h: 506: TXB2CONbits.TXPRI1 = 0x01;
 16398  0025D8  010F               	movlb	15	; () banked
 16399  0025DA  8320               	bsf	32,1,b	;volatile
 16400  0025DC  D002               	goto	i1l8546
 16401  0025DE                     i1l404:
 16402                           
 16403                           ; BSR set to: 15
 16404                           ;inc\CANlib.h: 507: else
 16405                           ;inc\CANlib.h: 508: TXB2CONbits.TXPRI1 = 0x00;
 16406  0025DE  010F               	movlb	15	; () banked
 16407  0025E0  9320               	bcf	32,1,b	;volatile
 16408  0025E2                     i1l8546:
 16409                           
 16410                           ; BSR set to: 15
 16411                           ;inc\CANlib.h: 510: TXB2D0 = data[0];
 16412  0025E2  C031  FFD9         	movff	i1CANsendMessage@data,fsr2l
 16413  0025E6  C032  FFDA         	movff	i1CANsendMessage@data+1,fsr2h
 16414  0025EA  50DF               	movf	indf2,w,c
 16415  0025EC  010F               	movlb	15	; () banked
 16416  0025EE  6F26               	movwf	38,b	;volatile
 16417                           
 16418                           ; BSR set to: 15
 16419                           ;inc\CANlib.h: 511: TXB2D1 = data[1];
 16420  0025F0  EE20 F001          	lfsr	2,1
 16421  0025F4  5031               	movf	i1CANsendMessage@data,w,c
 16422  0025F6  26D9               	addwf	fsr2l,f,c
 16423  0025F8  5032               	movf	i1CANsendMessage@data+1,w,c
 16424  0025FA  22DA               	addwfc	fsr2h,f,c
 16425  0025FC  50DF               	movf	indf2,w,c
 16426  0025FE  010F               	movlb	15	; () banked
 16427  002600  6F27               	movwf	39,b	;volatile
 16428                           
 16429                           ; BSR set to: 15
 16430                           ;inc\CANlib.h: 512: TXB2D2 = data[2];
 16431  002602  EE20 F002          	lfsr	2,2
 16432  002606  5031               	movf	i1CANsendMessage@data,w,c
 16433  002608  26D9               	addwf	fsr2l,f,c
 16434  00260A  5032               	movf	i1CANsendMessage@data+1,w,c
 16435  00260C  22DA               	addwfc	fsr2h,f,c
 16436  00260E  50DF               	movf	indf2,w,c
 16437  002610  010F               	movlb	15	; () banked
 16438  002612  6F28               	movwf	40,b	;volatile
 16439                           
 16440                           ; BSR set to: 15
 16441                           ;inc\CANlib.h: 513: TXB2D3 = data[3];
 16442  002614  EE20 F003          	lfsr	2,3
 16443  002618  5031               	movf	i1CANsendMessage@data,w,c
 16444  00261A  26D9               	addwf	fsr2l,f,c
 16445  00261C  5032               	movf	i1CANsendMessage@data+1,w,c
 16446  00261E  22DA               	addwfc	fsr2h,f,c
 16447  002620  50DF               	movf	indf2,w,c
 16448  002622  010F               	movlb	15	; () banked
 16449  002624  6F29               	movwf	41,b	;volatile
 16450                           
 16451                           ; BSR set to: 15
 16452                           ;inc\CANlib.h: 514: TXB2D4 = data[4];
 16453  002626  EE20 F004          	lfsr	2,4
 16454  00262A  5031               	movf	i1CANsendMessage@data,w,c
 16455  00262C  26D9               	addwf	fsr2l,f,c
 16456  00262E  5032               	movf	i1CANsendMessage@data+1,w,c
 16457  002630  22DA               	addwfc	fsr2h,f,c
 16458  002632  50DF               	movf	indf2,w,c
 16459  002634  010F               	movlb	15	; () banked
 16460  002636  6F2A               	movwf	42,b	;volatile
 16461                           
 16462                           ; BSR set to: 15
 16463                           ;inc\CANlib.h: 515: TXB2D5 = data[5];
 16464  002638  EE20 F005          	lfsr	2,5
 16465  00263C  5031               	movf	i1CANsendMessage@data,w,c
 16466  00263E  26D9               	addwf	fsr2l,f,c
 16467  002640  5032               	movf	i1CANsendMessage@data+1,w,c
 16468  002642  22DA               	addwfc	fsr2h,f,c
 16469  002644  50DF               	movf	indf2,w,c
 16470  002646  010F               	movlb	15	; () banked
 16471  002648  6F2B               	movwf	43,b	;volatile
 16472                           
 16473                           ; BSR set to: 15
 16474                           ;inc\CANlib.h: 516: TXB2D6 = data[6];
 16475  00264A  EE20 F006          	lfsr	2,6
 16476  00264E  5031               	movf	i1CANsendMessage@data,w,c
 16477  002650  26D9               	addwf	fsr2l,f,c
 16478  002652  5032               	movf	i1CANsendMessage@data+1,w,c
 16479  002654  22DA               	addwfc	fsr2h,f,c
 16480  002656  50DF               	movf	indf2,w,c
 16481  002658  010F               	movlb	15	; () banked
 16482  00265A  6F2C               	movwf	44,b	;volatile
 16483                           
 16484                           ; BSR set to: 15
 16485                           ;inc\CANlib.h: 517: TXB2D7 = data[7];
 16486  00265C  EE20 F007          	lfsr	2,7
 16487  002660  5031               	movf	i1CANsendMessage@data,w,c
 16488  002662  26D9               	addwf	fsr2l,f,c
 16489  002664  5032               	movf	i1CANsendMessage@data+1,w,c
 16490  002666  22DA               	addwfc	fsr2h,f,c
 16491  002668  50DF               	movf	indf2,w,c
 16492  00266A  010F               	movlb	15	; () banked
 16493  00266C  6F2D               	movwf	45,b	;volatile
 16494                           
 16495                           ; BSR set to: 15
 16496                           ;inc\CANlib.h: 519: TXB2CONbits.TXREQ = 0x01;
 16497  00266E  010F               	movlb	15	; () banked
 16498  002670  8720               	bsf	32,3,b	;volatile
 16499                           
 16500                           ; BSR set to: 15
 16501                           ;inc\CANlib.h: 521: return;
 16502  002672  0012               	return	
 16503  002674                     __end_ofi1_CANsendMessage:
 16504                           	opt stack 0
 16505                           pclatu	equ	0xFFB
 16506                           pclath	equ	0xFFA
 16507                           tblptru	equ	0xFF8
 16508                           tblptrh	equ	0xFF7
 16509                           tblptrl	equ	0xFF6
 16510                           tablat	equ	0xFF5
 16511                           prodh	equ	0xFF4
 16512                           prodl	equ	0xFF3
 16513                           intcon	equ	0xFF2
 16514                           intcon2	equ	0xFF1
 16515                           postinc0	equ	0xFEE
 16516                           fsr0h	equ	0xFEA
 16517                           fsr0l	equ	0xFE9
 16518                           wreg	equ	0xFE8
 16519                           indf1	equ	0xFE7
 16520                           postdec1	equ	0xFE5
 16521                           fsr1h	equ	0xFE2
 16522                           fsr1l	equ	0xFE1
 16523                           bsr	equ	0xFE0
 16524                           indf2	equ	0xFDF
 16525                           postinc2	equ	0xFDE
 16526                           postdec2	equ	0xFDD
 16527                           plusw2	equ	0xFDB
 16528                           fsr2h	equ	0xFDA
 16529                           fsr2l	equ	0xFD9
 16530                           status	equ	0xFD8
 16531                           
 16532 ;; *************** function i1_CANisTxReady *****************
 16533 ;; Defined at:
 16534 ;;		line 1155 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 16535 ;; Parameters:    Size  Location     Type
 16536 ;;		None
 16537 ;; Auto vars:     Size  Location     Type
 16538 ;;		None
 16539 ;; Return value:  Size  Location     Type
 16540 ;;                  1    wreg      unsigned char 
 16541 ;; Registers used:
 16542 ;;		wreg, status,2
 16543 ;; Tracked objects:
 16544 ;;		On entry : 0/0
 16545 ;;		On exit  : 0/0
 16546 ;;		Unchanged: 0/0
 16547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16549 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16551 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16552 ;;Total ram usage:        1 bytes
 16553 ;; Hardware stack levels used:    1
 16554 ;; Hardware stack levels required when called:    2
 16555 ;; This function calls:
 16556 ;;		Nothing
 16557 ;; This function is called by:
 16558 ;;		_ISR_Bassa
 16559 ;; This function uses a non-reentrant model
 16560 ;;
 16561                           
 16562                           	psect	text37
 16563  0066DE                     __ptext37:
 16564                           	opt stack 0
 16565  0066DE                     i1_CANisTxReady:
 16566                           	opt stack 21
 16567                           
 16568                           ;inc\CANlib.h: 1157: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 16569                           
 16570                           ; BSR set to: 15
 16571                           ;incstack = 0
 16572  0066DE  0E01               	movlw	1
 16573  0066E0  6E2D               	movwf	i1_CANisTxReady$2845,c
 16574  0066E2  010F               	movlb	15	; () banked
 16575  0066E4  A740               	btfss	64,3,b	;volatile
 16576  0066E6  D008               	goto	i1l556
 16577                           
 16578                           ; BSR set to: 15
 16579  0066E8  010F               	movlb	15	; () banked
 16580  0066EA  A730               	btfss	48,3,b	;volatile
 16581  0066EC  D005               	goto	i1l556
 16582                           
 16583                           ; BSR set to: 15
 16584  0066EE  010F               	movlb	15	; () banked
 16585  0066F0  A720               	btfss	32,3,b	;volatile
 16586  0066F2  D002               	goto	i1l556
 16587                           
 16588                           ; BSR set to: 15
 16589  0066F4  0E00               	movlw	0
 16590  0066F6  6E2D               	movwf	i1_CANisTxReady$2845,c
 16591  0066F8                     i1l556:
 16592                           
 16593                           ; BSR set to: 15
 16594  0066F8  502D               	movf	i1_CANisTxReady$2845,w,c
 16595  0066FA  0012               	return	
 16596  0066FC                     __end_ofi1_CANisTxReady:
 16597                           	opt stack 0
 16598                           pclatu	equ	0xFFB
 16599                           pclath	equ	0xFFA
 16600                           tblptru	equ	0xFF8
 16601                           tblptrh	equ	0xFF7
 16602                           tblptrl	equ	0xFF6
 16603                           tablat	equ	0xFF5
 16604                           prodh	equ	0xFF4
 16605                           prodl	equ	0xFF3
 16606                           intcon	equ	0xFF2
 16607                           intcon2	equ	0xFF1
 16608                           postinc0	equ	0xFEE
 16609                           fsr0h	equ	0xFEA
 16610                           fsr0l	equ	0xFE9
 16611                           wreg	equ	0xFE8
 16612                           indf1	equ	0xFE7
 16613                           postdec1	equ	0xFE5
 16614                           fsr1h	equ	0xFE2
 16615                           fsr1l	equ	0xFE1
 16616                           bsr	equ	0xFE0
 16617                           indf2	equ	0xFDF
 16618                           postinc2	equ	0xFDE
 16619                           postdec2	equ	0xFDD
 16620                           plusw2	equ	0xFDB
 16621                           fsr2h	equ	0xFDA
 16622                           fsr2l	equ	0xFD9
 16623                           status	equ	0xFD8
 16624                           
 16625 ;; *************** function _CANreceiveMessage *****************
 16626 ;; Defined at:
 16627 ;;		line 529 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 16628 ;; Parameters:    Size  Location     Type
 16629 ;;  msg             2    0[COMRAM] PTR struct .
 16630 ;;		 -> msg(15), 
 16631 ;; Auto vars:     Size  Location     Type
 16632 ;;  tamp            1   11[COMRAM] unsigned char 
 16633 ;;  error           1   10[COMRAM] unsigned char 
 16634 ;; Return value:  Size  Location     Type
 16635 ;;                  1    wreg      unsigned char 
 16636 ;; Registers used:
 16637 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16638 ;; Tracked objects:
 16639 ;;		On entry : 0/0
 16640 ;;		On exit  : 0/0
 16641 ;;		Unchanged: 0/0
 16642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16643 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16644 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16645 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16646 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16647 ;;Total ram usage:       12 bytes
 16648 ;; Hardware stack levels used:    1
 16649 ;; Hardware stack levels required when called:    2
 16650 ;; This function calls:
 16651 ;;		Nothing
 16652 ;; This function is called by:
 16653 ;;		_ISR_Bassa
 16654 ;; This function uses a non-reentrant model
 16655 ;;
 16656                           
 16657                           	psect	text38
 16658  002BFE                     __ptext38:
 16659                           	opt stack 0
 16660  002BFE                     _CANreceiveMessage:
 16661                           	opt stack 21
 16662                           
 16663                           ;inc\CANlib.h: 531: BYTE tamp;
 16664                           ;inc\CANlib.h: 532: BYTE error = 0;
 16665                           
 16666                           ; BSR set to: 15
 16667                           ;incstack = 0
 16668  002BFE  0E00               	movlw	0
 16669  002C00  6E37               	movwf	CANreceiveMessage@error,c
 16670                           
 16671                           ;inc\CANlib.h: 534: if (COMSTATbits.RXB0OVFL == 0x01)
 16672  002C02  BE74               	btfsc	3956,7,c	;volatile
 16673                           
 16674                           ;inc\CANlib.h: 535: error |= CAN_RX_BUFFER_1_OVFL;
 16675  002C04  8037               	bsf	CANreceiveMessage@error,0,c
 16676                           
 16677                           ;inc\CANlib.h: 537: if (COMSTATbits.RXB1OVFL == 0x01)
 16678  002C06  BC74               	btfsc	3956,6,c	;volatile
 16679                           
 16680                           ;inc\CANlib.h: 538: error |= CAN_RX_BUFFER_2_OVFL;
 16681  002C08  8237               	bsf	CANreceiveMessage@error,1,c
 16682                           
 16683                           ;inc\CANlib.h: 541: if (RXB1CONbits.RXFUL ==0x01)
 16684  002C0A  010F               	movlb	15	; () banked
 16685  002C0C  AF50               	btfss	80,7,b	;volatile
 16686  002C0E  D143               	goto	i1l410
 16687                           
 16688                           ; BSR set to: 15
 16689                           ;inc\CANlib.h: 542: {
 16690                           ;inc\CANlib.h: 543: msg->identifier = 0;
 16691  002C10  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16692  002C14  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16693  002C18  6ADE               	clrf	postinc2,c
 16694  002C1A  6ADE               	clrf	postinc2,c
 16695  002C1C  6ADE               	clrf	postinc2,c
 16696  002C1E  6ADD               	clrf	postdec2,c
 16697                           
 16698                           ; BSR set to: 15
 16699                           ;inc\CANlib.h: 544: msg->data[0] =RXB1D0;
 16700  002C20  EE20 F004          	lfsr	2,4
 16701  002C24  502D               	movf	CANreceiveMessage@msg,w,c
 16702  002C26  26D9               	addwf	fsr2l,f,c
 16703  002C28  502E               	movf	CANreceiveMessage@msg+1,w,c
 16704  002C2A  22DA               	addwfc	fsr2h,f,c
 16705  002C2C  CF56 FFDF          	movff	3926,indf2	;volatile
 16706                           
 16707                           ; BSR set to: 15
 16708                           ;inc\CANlib.h: 545: msg->data[1] =RXB1D1;
 16709  002C30  EE20 F005          	lfsr	2,5
 16710  002C34  502D               	movf	CANreceiveMessage@msg,w,c
 16711  002C36  26D9               	addwf	fsr2l,f,c
 16712  002C38  502E               	movf	CANreceiveMessage@msg+1,w,c
 16713  002C3A  22DA               	addwfc	fsr2h,f,c
 16714  002C3C  CF57 FFDF          	movff	3927,indf2	;volatile
 16715                           
 16716                           ; BSR set to: 15
 16717                           ;inc\CANlib.h: 546: msg->data[2] =RXB1D2;
 16718  002C40  EE20 F006          	lfsr	2,6
 16719  002C44  502D               	movf	CANreceiveMessage@msg,w,c
 16720  002C46  26D9               	addwf	fsr2l,f,c
 16721  002C48  502E               	movf	CANreceiveMessage@msg+1,w,c
 16722  002C4A  22DA               	addwfc	fsr2h,f,c
 16723  002C4C  CF58 FFDF          	movff	3928,indf2	;volatile
 16724                           
 16725                           ; BSR set to: 15
 16726                           ;inc\CANlib.h: 547: msg->data[3] =RXB1D3;
 16727  002C50  EE20 F007          	lfsr	2,7
 16728  002C54  502D               	movf	CANreceiveMessage@msg,w,c
 16729  002C56  26D9               	addwf	fsr2l,f,c
 16730  002C58  502E               	movf	CANreceiveMessage@msg+1,w,c
 16731  002C5A  22DA               	addwfc	fsr2h,f,c
 16732  002C5C  CF59 FFDF          	movff	3929,indf2	;volatile
 16733                           
 16734                           ; BSR set to: 15
 16735                           ;inc\CANlib.h: 548: msg->data[4] =RXB1D4;
 16736  002C60  EE20 F008          	lfsr	2,8
 16737  002C64  502D               	movf	CANreceiveMessage@msg,w,c
 16738  002C66  26D9               	addwf	fsr2l,f,c
 16739  002C68  502E               	movf	CANreceiveMessage@msg+1,w,c
 16740  002C6A  22DA               	addwfc	fsr2h,f,c
 16741  002C6C  CF5A FFDF          	movff	3930,indf2	;volatile
 16742                           
 16743                           ; BSR set to: 15
 16744                           ;inc\CANlib.h: 549: msg->data[5] =RXB1D5;
 16745  002C70  EE20 F009          	lfsr	2,9
 16746  002C74  502D               	movf	CANreceiveMessage@msg,w,c
 16747  002C76  26D9               	addwf	fsr2l,f,c
 16748  002C78  502E               	movf	CANreceiveMessage@msg+1,w,c
 16749  002C7A  22DA               	addwfc	fsr2h,f,c
 16750  002C7C  CF5B FFDF          	movff	3931,indf2	;volatile
 16751                           
 16752                           ; BSR set to: 15
 16753                           ;inc\CANlib.h: 550: msg->data[6] =RXB1D6;
 16754  002C80  EE20 F00A          	lfsr	2,10
 16755  002C84  502D               	movf	CANreceiveMessage@msg,w,c
 16756  002C86  26D9               	addwf	fsr2l,f,c
 16757  002C88  502E               	movf	CANreceiveMessage@msg+1,w,c
 16758  002C8A  22DA               	addwfc	fsr2h,f,c
 16759  002C8C  CF5C FFDF          	movff	3932,indf2	;volatile
 16760                           
 16761                           ; BSR set to: 15
 16762                           ;inc\CANlib.h: 551: msg->data[7] =RXB1D7;
 16763  002C90  EE20 F00B          	lfsr	2,11
 16764  002C94  502D               	movf	CANreceiveMessage@msg,w,c
 16765  002C96  26D9               	addwf	fsr2l,f,c
 16766  002C98  502E               	movf	CANreceiveMessage@msg+1,w,c
 16767  002C9A  22DA               	addwfc	fsr2h,f,c
 16768  002C9C  CF5D FFDF          	movff	3933,indf2	;volatile
 16769                           
 16770                           ; BSR set to: 15
 16771                           ;inc\CANlib.h: 553: msg->RTR = RXB1DLCbits.RXRTR;
 16772  002CA0  EE20 F00E          	lfsr	2,14
 16773  002CA4  502D               	movf	CANreceiveMessage@msg,w,c
 16774  002CA6  26D9               	addwf	fsr2l,f,c
 16775  002CA8  502E               	movf	CANreceiveMessage@msg+1,w,c
 16776  002CAA  22DA               	addwfc	fsr2h,f,c
 16777  002CAC  010F               	movlb	15	; () banked
 16778  002CAE  AD55               	btfss	85,6,b	;volatile
 16779  002CB0  D002               	goto	i1u734_20
 16780  002CB2  0E01               	movlw	1
 16781  002CB4  D001               	goto	i1u734_26
 16782  002CB6                     i1u734_20:
 16783  002CB6  0E00               	movlw	0
 16784  002CB8                     i1u734_26:
 16785  002CB8  6EDF               	movwf	indf2,c
 16786                           
 16787                           ; BSR set to: 15
 16788                           ;inc\CANlib.h: 555: msg->length = RXB1DLC & 0x0F;
 16789  002CBA  EE20 F00D          	lfsr	2,13
 16790  002CBE  502D               	movf	CANreceiveMessage@msg,w,c
 16791  002CC0  26D9               	addwf	fsr2l,f,c
 16792  002CC2  502E               	movf	CANreceiveMessage@msg+1,w,c
 16793  002CC4  22DA               	addwfc	fsr2h,f,c
 16794  002CC6  010F               	movlb	15	; () banked
 16795  002CC8  5155               	movf	85,w,b	;volatile
 16796  002CCA  0B0F               	andlw	15
 16797  002CCC  6EDF               	movwf	indf2,c
 16798                           
 16799                           ; BSR set to: 15
 16800                           ;inc\CANlib.h: 557: msg->type = RXB1SIDLbits.EXID;
 16801  002CCE  EE20 F00C          	lfsr	2,12
 16802  002CD2  502D               	movf	CANreceiveMessage@msg,w,c
 16803  002CD4  26D9               	addwf	fsr2l,f,c
 16804  002CD6  502E               	movf	CANreceiveMessage@msg+1,w,c
 16805  002CD8  22DA               	addwfc	fsr2h,f,c
 16806  002CDA  010F               	movlb	15	; () banked
 16807  002CDC  A752               	btfss	82,3,b	;volatile
 16808  002CDE  D002               	goto	i1u735_20
 16809  002CE0  0E01               	movlw	1
 16810  002CE2  D001               	goto	i1u735_26
 16811  002CE4                     i1u735_20:
 16812  002CE4  0E00               	movlw	0
 16813  002CE6                     i1u735_26:
 16814  002CE6  6EDF               	movwf	indf2,c
 16815                           
 16816                           ; BSR set to: 15
 16817                           ;inc\CANlib.h: 559: if (RXB1SIDLbits.EXID == 0)
 16818  002CE8  010F               	movlb	15	; () banked
 16819  002CEA  B752               	btfsc	82,3,b	;volatile
 16820  002CEC  D044               	goto	i1l5932
 16821                           
 16822                           ; BSR set to: 15
 16823                           ;inc\CANlib.h: 560: {
 16824                           ;inc\CANlib.h: 561: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 16825  002CEE  CF51 F02F          	movff	3921,??_CANreceiveMessage	;volatile
 16826  002CF2  6A30               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16827  002CF4  6A31               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 16828  002CF6  6A32               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 16829  002CF8  0E03               	movlw	3
 16830  002CFA                     i1u737_25:
 16831  002CFA  90D8               	bcf	status,0,c
 16832  002CFC  362F               	rlcf	??_CANreceiveMessage,f,c
 16833  002CFE  3630               	rlcf	??_CANreceiveMessage+1,f,c
 16834  002D00  3631               	rlcf	??_CANreceiveMessage+2,f,c
 16835  002D02  3632               	rlcf	??_CANreceiveMessage+3,f,c
 16836  002D04  2EE8               	decfsz	wreg,f,c
 16837  002D06  D7F9               	goto	i1u737_25
 16838  002D08  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16839  002D0C  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16840  002D10  C02F  FFDE         	movff	??_CANreceiveMessage,postinc2
 16841  002D14  C030  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 16842  002D18  C031  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 16843  002D1C  C032  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 16844                           
 16845                           ; BSR set to: 15
 16846                           ;inc\CANlib.h: 562: tamp = (RXB1SIDL >> 5 ) & 0x07;
 16847  002D20  010F               	movlb	15	; () banked
 16848  002D22  3952               	swapf	82,w,b	;volatile
 16849  002D24  42E8               	rrncf	wreg,f,c
 16850  002D26  0B07               	andlw	7
 16851  002D28  0B07               	andlw	7
 16852  002D2A  6E38               	movwf	CANreceiveMessage@tamp,c
 16853                           
 16854                           ; BSR set to: 15
 16855                           ;inc\CANlib.h: 563: msg->identifier = msg->identifier + tamp;
 16856  002D2C  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16857  002D30  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16858  002D34  CFDE F02F          	movff	postinc2,??_CANreceiveMessage
 16859  002D38  CFDE F030          	movff	postinc2,??_CANreceiveMessage+1
 16860  002D3C  CFDE F031          	movff	postinc2,??_CANreceiveMessage+2
 16861  002D40  CFDE F032          	movff	postinc2,??_CANreceiveMessage+3
 16862  002D44  5038               	movf	CANreceiveMessage@tamp,w,c
 16863  002D46  242F               	addwf	??_CANreceiveMessage,w,c
 16864  002D48  6E33               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 16865  002D4A  0E00               	movlw	0
 16866  002D4C  2030               	addwfc	??_CANreceiveMessage+1,w,c
 16867  002D4E  6E34               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 16868  002D50  0E00               	movlw	0
 16869  002D52  2031               	addwfc	??_CANreceiveMessage+2,w,c
 16870  002D54  6E35               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 16871  002D56  0E00               	movlw	0
 16872  002D58  2032               	addwfc	??_CANreceiveMessage+3,w,c
 16873  002D5A  6E36               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 16874  002D5C  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16875  002D60  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16876  002D64  C033  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 16877  002D68  C034  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 16878  002D6C  C035  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 16879  002D70  C036  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 16880                           
 16881                           ;inc\CANlib.h: 564: }
 16882  002D74  D08D               	goto	i1l5958
 16883  002D76                     i1l5932:
 16884                           
 16885                           ; BSR set to: 15
 16886                           ;inc\CANlib.h: 565: else
 16887                           ;inc\CANlib.h: 566: {
 16888                           ;inc\CANlib.h: 567: msg->identifier = (unsigned long) RXB1EIDL;
 16889  002D76  CF54 F02F          	movff	3924,??_CANreceiveMessage	;volatile
 16890  002D7A  6A30               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16891  002D7C  6A31               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 16892  002D7E  6A32               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 16893  002D80  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16894  002D84  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16895  002D88  C02F  FFDE         	movff	??_CANreceiveMessage,postinc2
 16896  002D8C  C030  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 16897  002D90  C031  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 16898  002D94  C032  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 16899                           
 16900                           ; BSR set to: 15
 16901                           ;inc\CANlib.h: 568: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 16902  002D98  CF53 F02F          	movff	3923,??_CANreceiveMessage	;volatile
 16903  002D9C  6A30               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16904  002D9E  6A31               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 16905  002DA0  6A32               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 16906  002DA2  C031  F032         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 16907  002DA6  C030  F031         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 16908  002DAA  C02F  F030         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 16909  002DAE  6A2F               	clrf	??_CANreceiveMessage,c
 16910  002DB0  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16911  002DB4  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16912  002DB8  502F               	movf	??_CANreceiveMessage,w,c
 16913  002DBA  26DE               	addwf	postinc2,f,c
 16914  002DBC  5030               	movf	??_CANreceiveMessage+1,w,c
 16915  002DBE  22DE               	addwfc	postinc2,f,c
 16916  002DC0  5031               	movf	??_CANreceiveMessage+2,w,c
 16917  002DC2  22DE               	addwfc	postinc2,f,c
 16918  002DC4  5032               	movf	??_CANreceiveMessage+3,w,c
 16919  002DC6  22DE               	addwfc	postinc2,f,c
 16920                           
 16921                           ; BSR set to: 15
 16922                           ;inc\CANlib.h: 570: if (RXB1SIDLbits.EID16)
 16923  002DC8  010F               	movlb	15	; () banked
 16924  002DCA  A152               	btfss	82,0,b	;volatile
 16925  002DCC  D00C               	goto	i1l5940
 16926                           
 16927                           ; BSR set to: 15
 16928                           ;inc\CANlib.h: 571: msg->identifier |= 0x00010000;
 16929  002DCE  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16930  002DD2  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16931  002DD6  0E00               	movlw	0
 16932  002DD8  12DE               	iorwf	postinc2,f,c
 16933  002DDA  0E00               	movlw	0
 16934  002DDC  12DE               	iorwf	postinc2,f,c
 16935  002DDE  0E01               	movlw	1
 16936  002DE0  12DE               	iorwf	postinc2,f,c
 16937  002DE2  0E00               	movlw	0
 16938  002DE4  12DE               	iorwf	postinc2,f,c
 16939  002DE6                     i1l5940:
 16940                           
 16941                           ; BSR set to: 15
 16942                           ;inc\CANlib.h: 572: if (RXB1SIDLbits.EID17)
 16943  002DE6  010F               	movlb	15	; () banked
 16944  002DE8  A352               	btfss	82,1,b	;volatile
 16945  002DEA  D00C               	goto	i1l5944
 16946                           
 16947                           ; BSR set to: 15
 16948                           ;inc\CANlib.h: 573: msg->identifier |= 0x00020000;
 16949  002DEC  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16950  002DF0  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16951  002DF4  0E00               	movlw	0
 16952  002DF6  12DE               	iorwf	postinc2,f,c
 16953  002DF8  0E00               	movlw	0
 16954  002DFA  12DE               	iorwf	postinc2,f,c
 16955  002DFC  0E02               	movlw	2
 16956  002DFE  12DE               	iorwf	postinc2,f,c
 16957  002E00  0E00               	movlw	0
 16958  002E02  12DE               	iorwf	postinc2,f,c
 16959  002E04                     i1l5944:
 16960                           
 16961                           ; BSR set to: 15
 16962                           ;inc\CANlib.h: 574: if (RXB1SIDLbits.SID0)
 16963  002E04  010F               	movlb	15	; () banked
 16964  002E06  AB52               	btfss	82,5,b	;volatile
 16965  002E08  D00C               	goto	i1l5948
 16966                           
 16967                           ; BSR set to: 15
 16968                           ;inc\CANlib.h: 575: msg->identifier |= 0x00040000;
 16969  002E0A  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16970  002E0E  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16971  002E12  0E00               	movlw	0
 16972  002E14  12DE               	iorwf	postinc2,f,c
 16973  002E16  0E00               	movlw	0
 16974  002E18  12DE               	iorwf	postinc2,f,c
 16975  002E1A  0E04               	movlw	4
 16976  002E1C  12DE               	iorwf	postinc2,f,c
 16977  002E1E  0E00               	movlw	0
 16978  002E20  12DE               	iorwf	postinc2,f,c
 16979  002E22                     i1l5948:
 16980                           
 16981                           ; BSR set to: 15
 16982                           ;inc\CANlib.h: 576: if (RXB1SIDLbits.SID1)
 16983  002E22  010F               	movlb	15	; () banked
 16984  002E24  AD52               	btfss	82,6,b	;volatile
 16985  002E26  D00C               	goto	i1l5952
 16986                           
 16987                           ; BSR set to: 15
 16988                           ;inc\CANlib.h: 577: msg->identifier |= 0x00080000;
 16989  002E28  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16990  002E2C  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16991  002E30  0E00               	movlw	0
 16992  002E32  12DE               	iorwf	postinc2,f,c
 16993  002E34  0E00               	movlw	0
 16994  002E36  12DE               	iorwf	postinc2,f,c
 16995  002E38  0E08               	movlw	8
 16996  002E3A  12DE               	iorwf	postinc2,f,c
 16997  002E3C  0E00               	movlw	0
 16998  002E3E  12DE               	iorwf	postinc2,f,c
 16999  002E40                     i1l5952:
 17000                           
 17001                           ; BSR set to: 15
 17002                           ;inc\CANlib.h: 578: if (RXB1SIDLbits.SID2)
 17003  002E40  010F               	movlb	15	; () banked
 17004  002E42  AF52               	btfss	82,7,b	;volatile
 17005  002E44  D00C               	goto	i1l5956
 17006                           
 17007                           ; BSR set to: 15
 17008                           ;inc\CANlib.h: 579: msg->identifier |= 0x00100000;
 17009  002E46  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17010  002E4A  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17011  002E4E  0E00               	movlw	0
 17012  002E50  12DE               	iorwf	postinc2,f,c
 17013  002E52  0E00               	movlw	0
 17014  002E54  12DE               	iorwf	postinc2,f,c
 17015  002E56  0E10               	movlw	16
 17016  002E58  12DE               	iorwf	postinc2,f,c
 17017  002E5A  0E00               	movlw	0
 17018  002E5C  12DE               	iorwf	postinc2,f,c
 17019  002E5E                     i1l5956:
 17020                           
 17021                           ; BSR set to: 15
 17022                           ;inc\CANlib.h: 581: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 17023  002E5E  CF51 F02F          	movff	3921,??_CANreceiveMessage	;volatile
 17024  002E62  6A30               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17025  002E64  6A31               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17026  002E66  6A32               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17027  002E68  0E15               	movlw	21
 17028  002E6A                     i1u743_25:
 17029  002E6A  90D8               	bcf	status,0,c
 17030  002E6C  362F               	rlcf	??_CANreceiveMessage,f,c
 17031  002E6E  3630               	rlcf	??_CANreceiveMessage+1,f,c
 17032  002E70  3631               	rlcf	??_CANreceiveMessage+2,f,c
 17033  002E72  3632               	rlcf	??_CANreceiveMessage+3,f,c
 17034  002E74  2EE8               	decfsz	wreg,f,c
 17035  002E76  D7F9               	goto	i1u743_25
 17036  002E78  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17037  002E7C  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17038  002E80  502F               	movf	??_CANreceiveMessage,w,c
 17039  002E82  12DE               	iorwf	postinc2,f,c
 17040  002E84  5030               	movf	??_CANreceiveMessage+1,w,c
 17041  002E86  12DE               	iorwf	postinc2,f,c
 17042  002E88  5031               	movf	??_CANreceiveMessage+2,w,c
 17043  002E8A  12DE               	iorwf	postinc2,f,c
 17044  002E8C  5032               	movf	??_CANreceiveMessage+3,w,c
 17045  002E8E  12DE               	iorwf	postinc2,f,c
 17046  002E90                     i1l5958:
 17047                           
 17048                           ; BSR set to: 15
 17049                           ;inc\CANlib.h: 582: }
 17050                           ;inc\CANlib.h: 584: RXB1CONbits.RXFUL = 0x00;
 17051  002E90  010F               	movlb	15	; () banked
 17052  002E92  9F50               	bcf	80,7,b	;volatile
 17053                           
 17054                           ; BSR set to: 15
 17055                           ;inc\CANlib.h: 585: return (error);
 17056                           ;	Return value of _CANreceiveMessage is never used
 17057  002E94  0012               	return	
 17058  002E96                     i1l410:
 17059                           
 17060                           ; BSR set to: 15
 17061                           ;inc\CANlib.h: 586: }
 17062                           ;inc\CANlib.h: 588: if (RXB0CONbits.RXFUL ==0x01)
 17063  002E96  AE60               	btfss	3936,7,c	;volatile
 17064  002E98  0012               	return	
 17065                           
 17066                           ; BSR set to: 15
 17067                           ;inc\CANlib.h: 589: {
 17068                           ;inc\CANlib.h: 590: msg->identifier = 0;
 17069  002E9A  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17070  002E9E  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17071  002EA2  6ADE               	clrf	postinc2,c
 17072  002EA4  6ADE               	clrf	postinc2,c
 17073  002EA6  6ADE               	clrf	postinc2,c
 17074  002EA8  6ADD               	clrf	postdec2,c
 17075                           
 17076                           ; BSR set to: 15
 17077                           ;inc\CANlib.h: 591: msg->data[0] =RXB0D0;
 17078  002EAA  EE20 F004          	lfsr	2,4
 17079  002EAE  502D               	movf	CANreceiveMessage@msg,w,c
 17080  002EB0  26D9               	addwf	fsr2l,f,c
 17081  002EB2  502E               	movf	CANreceiveMessage@msg+1,w,c
 17082  002EB4  22DA               	addwfc	fsr2h,f,c
 17083  002EB6  CF66 FFDF          	movff	3942,indf2	;volatile
 17084                           
 17085                           ; BSR set to: 15
 17086                           ;inc\CANlib.h: 592: msg->data[1] =RXB0D1;
 17087  002EBA  EE20 F005          	lfsr	2,5
 17088  002EBE  502D               	movf	CANreceiveMessage@msg,w,c
 17089  002EC0  26D9               	addwf	fsr2l,f,c
 17090  002EC2  502E               	movf	CANreceiveMessage@msg+1,w,c
 17091  002EC4  22DA               	addwfc	fsr2h,f,c
 17092  002EC6  CF67 FFDF          	movff	3943,indf2	;volatile
 17093                           
 17094                           ; BSR set to: 15
 17095                           ;inc\CANlib.h: 593: msg->data[2] =RXB0D2;
 17096  002ECA  EE20 F006          	lfsr	2,6
 17097  002ECE  502D               	movf	CANreceiveMessage@msg,w,c
 17098  002ED0  26D9               	addwf	fsr2l,f,c
 17099  002ED2  502E               	movf	CANreceiveMessage@msg+1,w,c
 17100  002ED4  22DA               	addwfc	fsr2h,f,c
 17101  002ED6  CF68 FFDF          	movff	3944,indf2	;volatile
 17102                           
 17103                           ; BSR set to: 15
 17104                           ;inc\CANlib.h: 594: msg->data[3] =RXB0D3;
 17105  002EDA  EE20 F007          	lfsr	2,7
 17106  002EDE  502D               	movf	CANreceiveMessage@msg,w,c
 17107  002EE0  26D9               	addwf	fsr2l,f,c
 17108  002EE2  502E               	movf	CANreceiveMessage@msg+1,w,c
 17109  002EE4  22DA               	addwfc	fsr2h,f,c
 17110  002EE6  CF69 FFDF          	movff	3945,indf2	;volatile
 17111                           
 17112                           ; BSR set to: 15
 17113                           ;inc\CANlib.h: 595: msg->data[4] =RXB0D4;
 17114  002EEA  EE20 F008          	lfsr	2,8
 17115  002EEE  502D               	movf	CANreceiveMessage@msg,w,c
 17116  002EF0  26D9               	addwf	fsr2l,f,c
 17117  002EF2  502E               	movf	CANreceiveMessage@msg+1,w,c
 17118  002EF4  22DA               	addwfc	fsr2h,f,c
 17119  002EF6  CF6A FFDF          	movff	3946,indf2	;volatile
 17120                           
 17121                           ; BSR set to: 15
 17122                           ;inc\CANlib.h: 596: msg->data[5] =RXB0D5;
 17123  002EFA  EE20 F009          	lfsr	2,9
 17124  002EFE  502D               	movf	CANreceiveMessage@msg,w,c
 17125  002F00  26D9               	addwf	fsr2l,f,c
 17126  002F02  502E               	movf	CANreceiveMessage@msg+1,w,c
 17127  002F04  22DA               	addwfc	fsr2h,f,c
 17128  002F06  CF6B FFDF          	movff	3947,indf2	;volatile
 17129                           
 17130                           ; BSR set to: 15
 17131                           ;inc\CANlib.h: 597: msg->data[6] =RXB0D6;
 17132  002F0A  EE20 F00A          	lfsr	2,10
 17133  002F0E  502D               	movf	CANreceiveMessage@msg,w,c
 17134  002F10  26D9               	addwf	fsr2l,f,c
 17135  002F12  502E               	movf	CANreceiveMessage@msg+1,w,c
 17136  002F14  22DA               	addwfc	fsr2h,f,c
 17137  002F16  CF6C FFDF          	movff	3948,indf2	;volatile
 17138                           
 17139                           ; BSR set to: 15
 17140                           ;inc\CANlib.h: 598: msg->data[7] =RXB0D7;
 17141  002F1A  EE20 F00B          	lfsr	2,11
 17142  002F1E  502D               	movf	CANreceiveMessage@msg,w,c
 17143  002F20  26D9               	addwf	fsr2l,f,c
 17144  002F22  502E               	movf	CANreceiveMessage@msg+1,w,c
 17145  002F24  22DA               	addwfc	fsr2h,f,c
 17146  002F26  CF6D FFDF          	movff	3949,indf2	;volatile
 17147                           
 17148                           ; BSR set to: 15
 17149                           ;inc\CANlib.h: 600: msg->RTR = RXB0DLCbits.RXRTR;
 17150  002F2A  EE20 F00E          	lfsr	2,14
 17151  002F2E  502D               	movf	CANreceiveMessage@msg,w,c
 17152  002F30  26D9               	addwf	fsr2l,f,c
 17153  002F32  502E               	movf	CANreceiveMessage@msg+1,w,c
 17154  002F34  22DA               	addwfc	fsr2h,f,c
 17155  002F36  AC65               	btfss	3941,6,c	;volatile
 17156  002F38  D002               	goto	i1u745_20
 17157  002F3A  0E01               	movlw	1
 17158  002F3C  D001               	goto	i1u745_26
 17159  002F3E                     i1u745_20:
 17160  002F3E  0E00               	movlw	0
 17161  002F40                     i1u745_26:
 17162  002F40  6EDF               	movwf	indf2,c
 17163                           
 17164                           ; BSR set to: 15
 17165                           ;inc\CANlib.h: 602: msg->length = RXB0DLC & 0x0F;
 17166  002F42  EE20 F00D          	lfsr	2,13
 17167  002F46  502D               	movf	CANreceiveMessage@msg,w,c
 17168  002F48  26D9               	addwf	fsr2l,f,c
 17169  002F4A  502E               	movf	CANreceiveMessage@msg+1,w,c
 17170  002F4C  22DA               	addwfc	fsr2h,f,c
 17171  002F4E  5065               	movf	3941,w,c	;volatile
 17172  002F50  0B0F               	andlw	15
 17173  002F52  6EDF               	movwf	indf2,c
 17174                           
 17175                           ; BSR set to: 15
 17176                           ;inc\CANlib.h: 604: msg->type = RXB0SIDLbits.EXID;
 17177  002F54  EE20 F00C          	lfsr	2,12
 17178  002F58  502D               	movf	CANreceiveMessage@msg,w,c
 17179  002F5A  26D9               	addwf	fsr2l,f,c
 17180  002F5C  502E               	movf	CANreceiveMessage@msg+1,w,c
 17181  002F5E  22DA               	addwfc	fsr2h,f,c
 17182  002F60  A662               	btfss	3938,3,c	;volatile
 17183  002F62  D002               	goto	i1u746_20
 17184  002F64  0E01               	movlw	1
 17185  002F66  D001               	goto	i1u746_26
 17186  002F68                     i1u746_20:
 17187  002F68  0E00               	movlw	0
 17188  002F6A                     i1u746_26:
 17189  002F6A  6EDF               	movwf	indf2,c
 17190                           
 17191                           ; BSR set to: 15
 17192                           ;inc\CANlib.h: 606: if (RXB0SIDLbits.EXID == 0)
 17193  002F6C  B662               	btfsc	3938,3,c	;volatile
 17194  002F6E  D043               	goto	i1l5994
 17195                           
 17196                           ; BSR set to: 15
 17197                           ;inc\CANlib.h: 607: {
 17198                           ;inc\CANlib.h: 608: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 17199  002F70  CF61 F02F          	movff	3937,??_CANreceiveMessage	;volatile
 17200  002F74  6A30               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17201  002F76  6A31               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17202  002F78  6A32               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17203  002F7A  0E03               	movlw	3
 17204  002F7C                     i1u748_25:
 17205  002F7C  90D8               	bcf	status,0,c
 17206  002F7E  362F               	rlcf	??_CANreceiveMessage,f,c
 17207  002F80  3630               	rlcf	??_CANreceiveMessage+1,f,c
 17208  002F82  3631               	rlcf	??_CANreceiveMessage+2,f,c
 17209  002F84  3632               	rlcf	??_CANreceiveMessage+3,f,c
 17210  002F86  2EE8               	decfsz	wreg,f,c
 17211  002F88  D7F9               	goto	i1u748_25
 17212  002F8A  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17213  002F8E  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17214  002F92  C02F  FFDE         	movff	??_CANreceiveMessage,postinc2
 17215  002F96  C030  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 17216  002F9A  C031  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 17217  002F9E  C032  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 17218                           
 17219                           ; BSR set to: 15
 17220                           ;inc\CANlib.h: 609: tamp = (RXB0SIDL >> 5 ) & 0x07;
 17221  002FA2  3862               	swapf	3938,w,c	;volatile
 17222  002FA4  42E8               	rrncf	wreg,f,c
 17223  002FA6  0B07               	andlw	7
 17224  002FA8  0B07               	andlw	7
 17225  002FAA  6E38               	movwf	CANreceiveMessage@tamp,c
 17226                           
 17227                           ; BSR set to: 15
 17228                           ;inc\CANlib.h: 610: msg->identifier = msg->identifier + tamp;
 17229  002FAC  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17230  002FB0  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17231  002FB4  CFDE F02F          	movff	postinc2,??_CANreceiveMessage
 17232  002FB8  CFDE F030          	movff	postinc2,??_CANreceiveMessage+1
 17233  002FBC  CFDE F031          	movff	postinc2,??_CANreceiveMessage+2
 17234  002FC0  CFDE F032          	movff	postinc2,??_CANreceiveMessage+3
 17235  002FC4  5038               	movf	CANreceiveMessage@tamp,w,c
 17236  002FC6  242F               	addwf	??_CANreceiveMessage,w,c
 17237  002FC8  6E33               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 17238  002FCA  0E00               	movlw	0
 17239  002FCC  2030               	addwfc	??_CANreceiveMessage+1,w,c
 17240  002FCE  6E34               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 17241  002FD0  0E00               	movlw	0
 17242  002FD2  2031               	addwfc	??_CANreceiveMessage+2,w,c
 17243  002FD4  6E35               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 17244  002FD6  0E00               	movlw	0
 17245  002FD8  2032               	addwfc	??_CANreceiveMessage+3,w,c
 17246  002FDA  6E36               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 17247  002FDC  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17248  002FE0  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17249  002FE4  C033  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 17250  002FE8  C034  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 17251  002FEC  C035  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 17252  002FF0  C036  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 17253                           
 17254                           ;inc\CANlib.h: 611: }
 17255  002FF4  D088               	goto	i1l6020
 17256  002FF6                     i1l5994:
 17257                           
 17258                           ; BSR set to: 15
 17259                           ;inc\CANlib.h: 612: else
 17260                           ;inc\CANlib.h: 613: {
 17261                           ;inc\CANlib.h: 614: msg->identifier = (unsigned long) RXB0EIDL;
 17262  002FF6  CF64 F02F          	movff	3940,??_CANreceiveMessage	;volatile
 17263  002FFA  6A30               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17264  002FFC  6A31               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17265  002FFE  6A32               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17266  003000  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17267  003004  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17268  003008  C02F  FFDE         	movff	??_CANreceiveMessage,postinc2
 17269  00300C  C030  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 17270  003010  C031  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 17271  003014  C032  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 17272                           
 17273                           ; BSR set to: 15
 17274                           ;inc\CANlib.h: 615: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 17275  003018  CF63 F02F          	movff	3939,??_CANreceiveMessage	;volatile
 17276  00301C  6A30               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17277  00301E  6A31               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17278  003020  6A32               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17279  003022  C031  F032         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 17280  003026  C030  F031         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 17281  00302A  C02F  F030         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 17282  00302E  6A2F               	clrf	??_CANreceiveMessage,c
 17283  003030  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17284  003034  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17285  003038  502F               	movf	??_CANreceiveMessage,w,c
 17286  00303A  26DE               	addwf	postinc2,f,c
 17287  00303C  5030               	movf	??_CANreceiveMessage+1,w,c
 17288  00303E  22DE               	addwfc	postinc2,f,c
 17289  003040  5031               	movf	??_CANreceiveMessage+2,w,c
 17290  003042  22DE               	addwfc	postinc2,f,c
 17291  003044  5032               	movf	??_CANreceiveMessage+3,w,c
 17292  003046  22DE               	addwfc	postinc2,f,c
 17293                           
 17294                           ; BSR set to: 15
 17295                           ;inc\CANlib.h: 617: if (RXB0SIDLbits.EID16)
 17296  003048  A062               	btfss	3938,0,c	;volatile
 17297  00304A  D00C               	goto	i1l6002
 17298                           
 17299                           ; BSR set to: 15
 17300                           ;inc\CANlib.h: 618: msg->identifier |= 0x00010000;
 17301  00304C  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17302  003050  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17303  003054  0E00               	movlw	0
 17304  003056  12DE               	iorwf	postinc2,f,c
 17305  003058  0E00               	movlw	0
 17306  00305A  12DE               	iorwf	postinc2,f,c
 17307  00305C  0E01               	movlw	1
 17308  00305E  12DE               	iorwf	postinc2,f,c
 17309  003060  0E00               	movlw	0
 17310  003062  12DE               	iorwf	postinc2,f,c
 17311  003064                     i1l6002:
 17312                           
 17313                           ; BSR set to: 15
 17314                           ;inc\CANlib.h: 619: if (RXB0SIDLbits.EID17)
 17315  003064  A262               	btfss	3938,1,c	;volatile
 17316  003066  D00C               	goto	i1l6006
 17317                           
 17318                           ; BSR set to: 15
 17319                           ;inc\CANlib.h: 620: msg->identifier |= 0x00020000;
 17320  003068  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17321  00306C  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17322  003070  0E00               	movlw	0
 17323  003072  12DE               	iorwf	postinc2,f,c
 17324  003074  0E00               	movlw	0
 17325  003076  12DE               	iorwf	postinc2,f,c
 17326  003078  0E02               	movlw	2
 17327  00307A  12DE               	iorwf	postinc2,f,c
 17328  00307C  0E00               	movlw	0
 17329  00307E  12DE               	iorwf	postinc2,f,c
 17330  003080                     i1l6006:
 17331                           
 17332                           ; BSR set to: 15
 17333                           ;inc\CANlib.h: 621: if (RXB0SIDLbits.SID0)
 17334  003080  AA62               	btfss	3938,5,c	;volatile
 17335  003082  D00C               	goto	i1l6010
 17336                           
 17337                           ; BSR set to: 15
 17338                           ;inc\CANlib.h: 622: msg->identifier |= 0x00040000;
 17339  003084  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17340  003088  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17341  00308C  0E00               	movlw	0
 17342  00308E  12DE               	iorwf	postinc2,f,c
 17343  003090  0E00               	movlw	0
 17344  003092  12DE               	iorwf	postinc2,f,c
 17345  003094  0E04               	movlw	4
 17346  003096  12DE               	iorwf	postinc2,f,c
 17347  003098  0E00               	movlw	0
 17348  00309A  12DE               	iorwf	postinc2,f,c
 17349  00309C                     i1l6010:
 17350                           
 17351                           ; BSR set to: 15
 17352                           ;inc\CANlib.h: 623: if (RXB0SIDLbits.SID1)
 17353  00309C  AC62               	btfss	3938,6,c	;volatile
 17354  00309E  D00C               	goto	i1l6014
 17355                           
 17356                           ; BSR set to: 15
 17357                           ;inc\CANlib.h: 624: msg->identifier |= 0x00080000;
 17358  0030A0  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17359  0030A4  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17360  0030A8  0E00               	movlw	0
 17361  0030AA  12DE               	iorwf	postinc2,f,c
 17362  0030AC  0E00               	movlw	0
 17363  0030AE  12DE               	iorwf	postinc2,f,c
 17364  0030B0  0E08               	movlw	8
 17365  0030B2  12DE               	iorwf	postinc2,f,c
 17366  0030B4  0E00               	movlw	0
 17367  0030B6  12DE               	iorwf	postinc2,f,c
 17368  0030B8                     i1l6014:
 17369                           
 17370                           ; BSR set to: 15
 17371                           ;inc\CANlib.h: 625: if (RXB0SIDLbits.SID2)
 17372  0030B8  AE62               	btfss	3938,7,c	;volatile
 17373  0030BA  D00C               	goto	i1l6018
 17374                           
 17375                           ; BSR set to: 15
 17376                           ;inc\CANlib.h: 626: msg->identifier |= 0x00100000;
 17377  0030BC  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17378  0030C0  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17379  0030C4  0E00               	movlw	0
 17380  0030C6  12DE               	iorwf	postinc2,f,c
 17381  0030C8  0E00               	movlw	0
 17382  0030CA  12DE               	iorwf	postinc2,f,c
 17383  0030CC  0E10               	movlw	16
 17384  0030CE  12DE               	iorwf	postinc2,f,c
 17385  0030D0  0E00               	movlw	0
 17386  0030D2  12DE               	iorwf	postinc2,f,c
 17387  0030D4                     i1l6018:
 17388                           
 17389                           ; BSR set to: 15
 17390                           ;inc\CANlib.h: 628: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 17391  0030D4  CF61 F02F          	movff	3937,??_CANreceiveMessage	;volatile
 17392  0030D8  6A30               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17393  0030DA  6A31               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17394  0030DC  6A32               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17395  0030DE  0E15               	movlw	21
 17396  0030E0                     i1u754_25:
 17397  0030E0  90D8               	bcf	status,0,c
 17398  0030E2  362F               	rlcf	??_CANreceiveMessage,f,c
 17399  0030E4  3630               	rlcf	??_CANreceiveMessage+1,f,c
 17400  0030E6  3631               	rlcf	??_CANreceiveMessage+2,f,c
 17401  0030E8  3632               	rlcf	??_CANreceiveMessage+3,f,c
 17402  0030EA  2EE8               	decfsz	wreg,f,c
 17403  0030EC  D7F9               	goto	i1u754_25
 17404  0030EE  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17405  0030F2  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17406  0030F6  502F               	movf	??_CANreceiveMessage,w,c
 17407  0030F8  12DE               	iorwf	postinc2,f,c
 17408  0030FA  5030               	movf	??_CANreceiveMessage+1,w,c
 17409  0030FC  12DE               	iorwf	postinc2,f,c
 17410  0030FE  5031               	movf	??_CANreceiveMessage+2,w,c
 17411  003100  12DE               	iorwf	postinc2,f,c
 17412  003102  5032               	movf	??_CANreceiveMessage+3,w,c
 17413  003104  12DE               	iorwf	postinc2,f,c
 17414  003106                     i1l6020:
 17415                           
 17416                           ; BSR set to: 15
 17417                           ;inc\CANlib.h: 630: }
 17418                           ;inc\CANlib.h: 631: RXB0CONbits.RXFUL = 0x00;
 17419  003106  9E60               	bcf	3936,7,c	;volatile
 17420                           
 17421                           ; BSR set to: 15
 17422                           ;inc\CANlib.h: 633: return (error);
 17423                           ;	Return value of _CANreceiveMessage is never used
 17424  003108  0012               	return	
 17425  00310A                     __end_of_CANreceiveMessage:
 17426                           	opt stack 0
 17427                           pclatu	equ	0xFFB
 17428                           pclath	equ	0xFFA
 17429                           tblptru	equ	0xFF8
 17430                           tblptrh	equ	0xFF7
 17431                           tblptrl	equ	0xFF6
 17432                           tablat	equ	0xFF5
 17433                           prodh	equ	0xFF4
 17434                           prodl	equ	0xFF3
 17435                           intcon	equ	0xFF2
 17436                           intcon2	equ	0xFF1
 17437                           postinc0	equ	0xFEE
 17438                           fsr0h	equ	0xFEA
 17439                           fsr0l	equ	0xFE9
 17440                           wreg	equ	0xFE8
 17441                           indf1	equ	0xFE7
 17442                           postdec1	equ	0xFE5
 17443                           fsr1h	equ	0xFE2
 17444                           fsr1l	equ	0xFE1
 17445                           bsr	equ	0xFE0
 17446                           indf2	equ	0xFDF
 17447                           postinc2	equ	0xFDE
 17448                           postdec2	equ	0xFDD
 17449                           plusw2	equ	0xFDB
 17450                           fsr2h	equ	0xFDA
 17451                           fsr2l	equ	0xFD9
 17452                           status	equ	0xFD8
 17453                           
 17454 ;; *************** function _ISR_Alta *****************
 17455 ;; Defined at:
 17456 ;;		line 97 in file "parcheggio.c"
 17457 ;; Parameters:    Size  Location     Type
 17458 ;;		None
 17459 ;; Auto vars:     Size  Location     Type
 17460 ;;		None
 17461 ;; Return value:  Size  Location     Type
 17462 ;;		None               void
 17463 ;; Registers used:
 17464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17465 ;; Tracked objects:
 17466 ;;		On entry : 0/0
 17467 ;;		On exit  : 0/0
 17468 ;;		Unchanged: 0/0
 17469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17472 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17473 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17474 ;;Total ram usage:       16 bytes
 17475 ;; Hardware stack levels used:    1
 17476 ;; Hardware stack levels required when called:    1
 17477 ;; This function calls:
 17478 ;;		___lwdiv
 17479 ;; This function is called by:
 17480 ;;		Interrupt level 2
 17481 ;; This function uses a non-reentrant model
 17482 ;;
 17483                           
 17484                           	psect	intcode
 17485  000008                     __pintcode:
 17486                           	opt stack 0
 17487  000008                     _ISR_Alta:
 17488                           	opt stack 21
 17489                           
 17490                           ; BSR set to: 15
 17491                           ;incstack = 0
 17492  000008  8256               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 17493  00000A  CFFA F069          	movff	pclath,??_ISR_Alta+2
 17494  00000E  CFFB F06A          	movff	pclatu,??_ISR_Alta+3
 17495  000012  EFA8  F030         	goto	int_func
 17496                           pclatu	equ	0xFFB
 17497                           pclath	equ	0xFFA
 17498                           tblptru	equ	0xFF8
 17499                           tblptrh	equ	0xFF7
 17500                           tblptrl	equ	0xFF6
 17501                           tablat	equ	0xFF5
 17502                           prodh	equ	0xFF4
 17503                           prodl	equ	0xFF3
 17504                           intcon	equ	0xFF2
 17505                           intcon2	equ	0xFF1
 17506                           postinc0	equ	0xFEE
 17507                           fsr0h	equ	0xFEA
 17508                           fsr0l	equ	0xFE9
 17509                           wreg	equ	0xFE8
 17510                           indf1	equ	0xFE7
 17511                           postdec1	equ	0xFE5
 17512                           fsr1h	equ	0xFE2
 17513                           fsr1l	equ	0xFE1
 17514                           bsr	equ	0xFE0
 17515                           indf2	equ	0xFDF
 17516                           postinc2	equ	0xFDE
 17517                           postdec2	equ	0xFDD
 17518                           plusw2	equ	0xFDB
 17519                           fsr2h	equ	0xFDA
 17520                           fsr2l	equ	0xFD9
 17521                           status	equ	0xFD8
 17522                           
 17523                           	psect	intcode_body
 17524  006150                     __pintcode_body:
 17525                           	opt stack 21
 17526  006150                     int_func:
 17527                           	opt stack 21
 17528  006150  CFE9 F06B          	movff	fsr0l,??_ISR_Alta+4
 17529  006154  CFEA F06C          	movff	fsr0h,??_ISR_Alta+5
 17530  006158  CFE1 F06D          	movff	fsr1l,??_ISR_Alta+6
 17531  00615C  CFE2 F06E          	movff	fsr1h,??_ISR_Alta+7
 17532  006160  CFD9 F06F          	movff	fsr2l,??_ISR_Alta+8
 17533  006164  CFDA F070          	movff	fsr2h,??_ISR_Alta+9
 17534  006168  CFF3 F071          	movff	prodl,??_ISR_Alta+10
 17535  00616C  CFF4 F072          	movff	prodh,??_ISR_Alta+11
 17536  006170  CFF6 F073          	movff	tblptrl,??_ISR_Alta+12
 17537  006174  CFF7 F074          	movff	tblptrh,??_ISR_Alta+13
 17538  006178  CFF8 F075          	movff	tblptru,??_ISR_Alta+14
 17539  00617C  CFF5 F076          	movff	tablat,??_ISR_Alta+15
 17540                           
 17541                           ;parcheggio.c: 98: if (INTCON2bits.INTEDG0 == 1) {
 17542  006180  ACF1               	btfss	intcon2,6,c	;volatile
 17543  006182  D007               	goto	i2l700
 17544                           
 17545                           ;parcheggio.c: 99: INTCON2bits.INTEDG0 = 0;
 17546  006184  9CF1               	bcf	intcon2,6,c	;volatile
 17547                           
 17548                           ;parcheggio.c: 100: TMR3H = 0;
 17549  006186  0E00               	movlw	0
 17550  006188  6EB3               	movwf	4019,c	;volatile
 17551                           
 17552                           ;parcheggio.c: 101: TMR3L = 0;
 17553  00618A  0E00               	movlw	0
 17554  00618C  6EB2               	movwf	4018,c	;volatile
 17555                           
 17556                           ;parcheggio.c: 102: distance_error = 0;
 17557  00618E  9854               	bcf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 17558                           
 17559                           ;parcheggio.c: 103: } else {
 17560  006190  D030               	goto	i2l8582
 17561  006192                     i2l700:
 17562                           
 17563                           ;parcheggio.c: 104: gianni = TMR3H;
 17564  006192  CFB3 F02B          	movff	4019,_gianni	;volatile
 17565                           
 17566                           ;parcheggio.c: 105: asus = TMR3L;
 17567  006196  CFB2 F02A          	movff	4018,_asus	;volatile
 17568                           
 17569                           ;parcheggio.c: 106: timerValue2 = gianni;
 17570  00619A  C02B  F027         	movff	_gianni,_timerValue2	;volatile
 17571  00619E  6A28               	clrf	_timerValue2+1,c	;volatile
 17572                           
 17573                           ;parcheggio.c: 107: timerValue2 = ((timerValue2 << 8) | (asus));
 17574  0061A0  5027               	movf	_timerValue2,w,c	;volatile
 17575  0061A2  0100               	movlb	0	; () banked
 17576  0061A4  6F67               	movwf	??_ISR_Alta& (0+255),b
 17577  0061A6  502A               	movf	_asus,w,c	;volatile
 17578  0061A8  6E27               	movwf	_timerValue2,c	;volatile
 17579  0061AA  C067  F028         	movff	??_ISR_Alta,_timerValue2+1	;volatile
 17580                           
 17581                           ; BSR set to: 0
 17582                           ;parcheggio.c: 108: pulse_time = timerValue2 / 2;
 17583  0061AE  90D8               	bcf	status,0,c
 17584  0061B0  3028               	rrcf	_timerValue2+1,w,c	;volatile
 17585  0061B2  0100               	movlb	0	; () banked
 17586  0061B4  6F67               	movwf	??_ISR_Alta& (0+255),b
 17587  0061B6  3027               	rrcf	_timerValue2,w,c	;volatile
 17588  0061B8  6E21               	movwf	_pulse_time,c	;volatile
 17589  0061BA  C067  F022         	movff	??_ISR_Alta,_pulse_time+1	;volatile
 17590                           
 17591                           ; BSR set to: 0
 17592                           ;parcheggio.c: 109: sensor_distance[MUX_index] = pulse_time / 58;
 17593  0061BE  C021  F060         	movff	_pulse_time,___lwdiv@dividend	;volatile
 17594  0061C2  C022  F061         	movff	_pulse_time+1,___lwdiv@dividend+1	;volatile
 17595  0061C6  0E00               	movlw	0
 17596  0061C8  0100               	movlb	0	; () banked
 17597  0061CA  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 17598  0061CC  0E3A               	movlw	58
 17599  0061CE  6F62               	movwf	___lwdiv@divisor& (0+255),b
 17600  0061D0  ECC6  F031         	call	___lwdiv	;wreg free
 17601  0061D4  5029               	movf	_MUX_index,w,c	;volatile
 17602  0061D6  0D02               	mullw	2
 17603  0061D8  0E01               	movlw	low _sensor_distance
 17604  0061DA  24F3               	addwf	prodl,w,c
 17605  0061DC  6ED9               	movwf	fsr2l,c
 17606  0061DE  0E00               	movlw	high _sensor_distance
 17607  0061E0  20F4               	addwfc	prodh,w,c
 17608  0061E2  6EDA               	movwf	fsr2h,c
 17609  0061E4  0100               	movlb	0	; () banked
 17610  0061E6  C060  FFDE         	movff	?___lwdiv,postinc2
 17611  0061EA  0100               	movlb	0	; () banked
 17612  0061EC  C061  FFDD         	movff	?___lwdiv+1,postdec2
 17613                           
 17614                           ; BSR set to: 0
 17615                           ;parcheggio.c: 110: INTCON2bits.INTEDG0 = 1;
 17616  0061F0  8CF1               	bsf	intcon2,6,c	;volatile
 17617  0061F2                     i2l8582:
 17618                           
 17619                           ;parcheggio.c: 111: }
 17620                           ;parcheggio.c: 112: INTCONbits.INT0IF = 0;
 17621  0061F2  92F2               	bcf	intcon,1,c	;volatile
 17622  0061F4  C076  FFF5         	movff	??_ISR_Alta+15,tablat
 17623  0061F8  C075  FFF8         	movff	??_ISR_Alta+14,tblptru
 17624  0061FC  C074  FFF7         	movff	??_ISR_Alta+13,tblptrh
 17625  006200  C073  FFF6         	movff	??_ISR_Alta+12,tblptrl
 17626  006204  C072  FFF4         	movff	??_ISR_Alta+11,prodh
 17627  006208  C071  FFF3         	movff	??_ISR_Alta+10,prodl
 17628  00620C  C070  FFDA         	movff	??_ISR_Alta+9,fsr2h
 17629  006210  C06F  FFD9         	movff	??_ISR_Alta+8,fsr2l
 17630  006214  C06E  FFE2         	movff	??_ISR_Alta+7,fsr1h
 17631  006218  C06D  FFE1         	movff	??_ISR_Alta+6,fsr1l
 17632  00621C  C06C  FFEA         	movff	??_ISR_Alta+5,fsr0h
 17633  006220  C06B  FFE9         	movff	??_ISR_Alta+4,fsr0l
 17634  006224  C06A  FFFB         	movff	??_ISR_Alta+3,pclatu
 17635  006228  C069  FFFA         	movff	??_ISR_Alta+2,pclath
 17636  00622C  9256               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 17637  00622E  0011               	retfie		f
 17638  006230                     __end_of_ISR_Alta:
 17639                           	opt stack 0
 17640                           pclatu	equ	0xFFB
 17641                           pclath	equ	0xFFA
 17642                           tblptru	equ	0xFF8
 17643                           tblptrh	equ	0xFF7
 17644                           tblptrl	equ	0xFF6
 17645                           tablat	equ	0xFF5
 17646                           prodh	equ	0xFF4
 17647                           prodl	equ	0xFF3
 17648                           intcon	equ	0xFF2
 17649                           intcon2	equ	0xFF1
 17650                           postinc0	equ	0xFEE
 17651                           fsr0h	equ	0xFEA
 17652                           fsr0l	equ	0xFE9
 17653                           wreg	equ	0xFE8
 17654                           indf1	equ	0xFE7
 17655                           postdec1	equ	0xFE5
 17656                           fsr1h	equ	0xFE2
 17657                           fsr1l	equ	0xFE1
 17658                           bsr	equ	0xFE0
 17659                           indf2	equ	0xFDF
 17660                           postinc2	equ	0xFDE
 17661                           postdec2	equ	0xFDD
 17662                           plusw2	equ	0xFDB
 17663                           fsr2h	equ	0xFDA
 17664                           fsr2l	equ	0xFD9
 17665                           status	equ	0xFD8
 17666                           
 17667 ;; *************** function ___lwdiv *****************
 17668 ;; Defined at:
 17669 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 17670 ;; Parameters:    Size  Location     Type
 17671 ;;  dividend        2    0[BANK0 ] unsigned int 
 17672 ;;  divisor         2    2[BANK0 ] unsigned int 
 17673 ;; Auto vars:     Size  Location     Type
 17674 ;;  quotient        2    5[BANK0 ] unsigned int 
 17675 ;;  counter         1    4[BANK0 ] unsigned char 
 17676 ;; Return value:  Size  Location     Type
 17677 ;;                  2    0[BANK0 ] unsigned int 
 17678 ;; Registers used:
 17679 ;;		wreg, status,2, status,0
 17680 ;; Tracked objects:
 17681 ;;		On entry : 0/0
 17682 ;;		On exit  : 0/0
 17683 ;;		Unchanged: 0/0
 17684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17685 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17686 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17688 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17689 ;;Total ram usage:        7 bytes
 17690 ;; Hardware stack levels used:    1
 17691 ;; This function calls:
 17692 ;;		Nothing
 17693 ;; This function is called by:
 17694 ;;		_ISR_Alta
 17695 ;; This function uses a non-reentrant model
 17696 ;;
 17697                           
 17698                           	psect	text40
 17699  00638C                     __ptext40:
 17700                           	opt stack 0
 17701  00638C                     ___lwdiv:
 17702                           	opt stack 21
 17703                           
 17704                           ;incstack = 0
 17705  00638C  0E00               	movlw	0
 17706  00638E  0100               	movlb	0	; () banked
 17707  006390  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 17708  006392  0E00               	movlw	0
 17709  006394  6F65               	movwf	___lwdiv@quotient& (0+255),b
 17710                           
 17711                           ; BSR set to: 0
 17712  006396  0100               	movlb	0	; () banked
 17713  006398  5162               	movf	___lwdiv@divisor& (0+255),w,b
 17714  00639A  0100               	movlb	0	; () banked
 17715  00639C  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 17716  00639E  B4D8               	btfsc	status,2,c
 17717  0063A0  D02C               	goto	i2l1299
 17718                           
 17719                           ; BSR set to: 0
 17720  0063A2  0E01               	movlw	1
 17721  0063A4  0100               	movlb	0	; () banked
 17722  0063A6  6F64               	movwf	___lwdiv@counter& (0+255),b
 17723  0063A8  D006               	goto	i2l8322
 17724  0063AA                     i2l8320:
 17725                           
 17726                           ; BSR set to: 0
 17727  0063AA  0100               	movlb	0	; () banked
 17728  0063AC  90D8               	bcf	status,0,c
 17729  0063AE  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 17730  0063B0  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 17731  0063B2  0100               	movlb	0	; () banked
 17732  0063B4  2B64               	incf	___lwdiv@counter& (0+255),f,b
 17733  0063B6                     i2l8322:
 17734                           
 17735                           ; BSR set to: 0
 17736  0063B6  0100               	movlb	0	; () banked
 17737  0063B8  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 17738  0063BA  D7F7               	goto	i2l8320
 17739  0063BC                     i2l8324:
 17740                           
 17741                           ; BSR set to: 0
 17742  0063BC  0100               	movlb	0	; () banked
 17743  0063BE  90D8               	bcf	status,0,c
 17744  0063C0  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 17745  0063C2  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 17746                           
 17747                           ; BSR set to: 0
 17748  0063C4  0100               	movlb	0	; () banked
 17749  0063C6  5162               	movf	___lwdiv@divisor& (0+255),w,b
 17750  0063C8  0100               	movlb	0	; () banked
 17751  0063CA  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 17752  0063CC  0100               	movlb	0	; () banked
 17753  0063CE  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 17754  0063D0  0100               	movlb	0	; () banked
 17755  0063D2  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 17756  0063D4  A0D8               	btfss	status,0,c
 17757  0063D6  D00A               	goto	i2l8332
 17758                           
 17759                           ; BSR set to: 0
 17760  0063D8  0100               	movlb	0	; () banked
 17761  0063DA  5162               	movf	___lwdiv@divisor& (0+255),w,b
 17762  0063DC  0100               	movlb	0	; () banked
 17763  0063DE  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 17764  0063E0  0100               	movlb	0	; () banked
 17765  0063E2  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 17766  0063E4  0100               	movlb	0	; () banked
 17767  0063E6  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 17768                           
 17769                           ; BSR set to: 0
 17770  0063E8  0100               	movlb	0	; () banked
 17771  0063EA  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 17772  0063EC                     i2l8332:
 17773                           
 17774                           ; BSR set to: 0
 17775  0063EC  0100               	movlb	0	; () banked
 17776  0063EE  90D8               	bcf	status,0,c
 17777  0063F0  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 17778  0063F2  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 17779                           
 17780                           ; BSR set to: 0
 17781  0063F4  0100               	movlb	0	; () banked
 17782  0063F6  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 17783  0063F8  D7E1               	goto	i2l8324
 17784  0063FA                     i2l1299:
 17785                           
 17786                           ; BSR set to: 0
 17787  0063FA  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 17788  0063FE  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 17789                           
 17790                           ; BSR set to: 0
 17791  006402  0012               	return		;funcret
 17792  006404                     __end_of___lwdiv:
 17793                           	opt stack 0
 17794                           pclatu	equ	0xFFB
 17795                           pclath	equ	0xFFA
 17796                           tblptru	equ	0xFF8
 17797                           tblptrh	equ	0xFF7
 17798                           tblptrl	equ	0xFF6
 17799                           tablat	equ	0xFF5
 17800                           prodh	equ	0xFF4
 17801                           prodl	equ	0xFF3
 17802                           intcon	equ	0xFF2
 17803                           intcon2	equ	0xFF1
 17804                           postinc0	equ	0xFEE
 17805                           fsr0h	equ	0xFEA
 17806                           fsr0l	equ	0xFE9
 17807                           wreg	equ	0xFE8
 17808                           indf1	equ	0xFE7
 17809                           postdec1	equ	0xFE5
 17810                           fsr1h	equ	0xFE2
 17811                           fsr1l	equ	0xFE1
 17812                           bsr	equ	0xFE0
 17813                           indf2	equ	0xFDF
 17814                           postinc2	equ	0xFDE
 17815                           postdec2	equ	0xFDD
 17816                           plusw2	equ	0xFDB
 17817                           fsr2h	equ	0xFDA
 17818                           fsr2l	equ	0xFD9
 17819                           status	equ	0xFD8
 17820                           pclatu	equ	0xFFB
 17821                           pclath	equ	0xFFA
 17822                           tblptru	equ	0xFF8
 17823                           tblptrh	equ	0xFF7
 17824                           tblptrl	equ	0xFF6
 17825                           tablat	equ	0xFF5
 17826                           prodh	equ	0xFF4
 17827                           prodl	equ	0xFF3
 17828                           intcon	equ	0xFF2
 17829                           intcon2	equ	0xFF1
 17830                           postinc0	equ	0xFEE
 17831                           fsr0h	equ	0xFEA
 17832                           fsr0l	equ	0xFE9
 17833                           wreg	equ	0xFE8
 17834                           indf1	equ	0xFE7
 17835                           postdec1	equ	0xFE5
 17836                           fsr1h	equ	0xFE2
 17837                           fsr1l	equ	0xFE1
 17838                           bsr	equ	0xFE0
 17839                           indf2	equ	0xFDF
 17840                           postinc2	equ	0xFDE
 17841                           postdec2	equ	0xFDD
 17842                           plusw2	equ	0xFDB
 17843                           fsr2h	equ	0xFDA
 17844                           fsr2l	equ	0xFD9
 17845                           status	equ	0xFD8
 17846                           
 17847                           	psect	param0
 17848  0000                     pclatu	equ	0xFFB
 17849                           pclath	equ	0xFFA
 17850                           tblptru	equ	0xFF8
 17851                           tblptrh	equ	0xFF7
 17852                           tblptrl	equ	0xFF6
 17853                           tablat	equ	0xFF5
 17854                           prodh	equ	0xFF4
 17855                           prodl	equ	0xFF3
 17856                           intcon	equ	0xFF2
 17857                           intcon2	equ	0xFF1
 17858                           postinc0	equ	0xFEE
 17859                           fsr0h	equ	0xFEA
 17860                           fsr0l	equ	0xFE9
 17861                           wreg	equ	0xFE8
 17862                           indf1	equ	0xFE7
 17863                           postdec1	equ	0xFE5
 17864                           fsr1h	equ	0xFE2
 17865                           fsr1l	equ	0xFE1
 17866                           bsr	equ	0xFE0
 17867                           indf2	equ	0xFDF
 17868                           postinc2	equ	0xFDE
 17869                           postdec2	equ	0xFDD
 17870                           plusw2	equ	0xFDB
 17871                           fsr2h	equ	0xFDA
 17872                           fsr2l	equ	0xFD9
 17873                           status	equ	0xFD8
 17874                           
 17875                           	psect	temp
 17876  000056                     btemp:
 17877                           	opt stack 0
 17878  000056                     	ds	1
 17879  0000                     int$flags	set	btemp
 17880                           pclatu	equ	0xFFB
 17881                           pclath	equ	0xFFA
 17882                           tblptru	equ	0xFF8
 17883                           tblptrh	equ	0xFF7
 17884                           tblptrl	equ	0xFF6
 17885                           tablat	equ	0xFF5
 17886                           prodh	equ	0xFF4
 17887                           prodl	equ	0xFF3
 17888                           intcon	equ	0xFF2
 17889                           intcon2	equ	0xFF1
 17890                           postinc0	equ	0xFEE
 17891                           fsr0h	equ	0xFEA
 17892                           fsr0l	equ	0xFE9
 17893                           wreg	equ	0xFE8
 17894                           indf1	equ	0xFE7
 17895                           postdec1	equ	0xFE5
 17896                           fsr1h	equ	0xFE2
 17897                           fsr1l	equ	0xFE1
 17898                           bsr	equ	0xFE0
 17899                           indf2	equ	0xFDF
 17900                           postinc2	equ	0xFDE
 17901                           postdec2	equ	0xFDD
 17902                           plusw2	equ	0xFDB
 17903                           fsr2h	equ	0xFDA
 17904                           fsr2l	equ	0xFD9
 17905                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    80
    Data        11
    BSS         195
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      85
    BANK0           160    122     137
    BANK1           256     89     236
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK1[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> can_send@data_correction1(BANK0[0]), data_speed(BANK1[8]), data_brake(BANK1[8]), data_steering(BANK1[8]), 
		 -> data_correction(BANK1[8]), data_test(BANK1[8]), data(BANK1[8]), sensor_distance_short(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    None.

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->i1_CANsendMessage

Critical Paths under _main in BANK0

    _park_search->___xxtofl
    _park_routine->___xxtofl
    _parallelo->___xxtofl
    _parallelo->_asin
    _can_send->_CANsendMessage
    _matematica->_asin
    _cos->_asin
    _floor->___xxtofl
    ___xxtofl->___fltol
    ___fltol->___flneg
    _asin->_atan
    _sqrt->___flneg
    _atan->___flge
    _fabs->___flneg
    ___flneg->___fladd
    _eval_poly->___fladd
    ___flmul->___fldiv
    ___fladd->___flmul
    ___flge->_fabs
    _delay_s->_delay_ms
    _delay_ms->___wmul
    _configurazione->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask

Critical Paths under _ISR_Alta in BANK0

    _ISR_Alta->___lwdiv

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_park_routine
    _park_search->_parallelo
    _park_routine->_matematica
    _parallelo->_asin
    _matematica->_cos
    _cos->_asin
    _sin->___flsub
    ___flsub->_floor
    _asin->_sqrt

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Alta in BANK3

    None.

Critical Paths under _ISR_Bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Alta in BANK4

    None.

Critical Paths under _ISR_Bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Alta in BANK5

    None.

Critical Paths under _ISR_Bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Alta in BANK6

    None.

Critical Paths under _ISR_Bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Alta in BANK7

    None.

Critical Paths under _ISR_Bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Alta in BANK8

    None.

Critical Paths under _ISR_Bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Alta in BANK9

    None.

Critical Paths under _ISR_Bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Alta in BANK10

    None.

Critical Paths under _ISR_Bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Alta in BANK11

    None.

Critical Paths under _ISR_Bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Alta in BANK12

    None.

Critical Paths under _ISR_Bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  358772
                                            121 BANK0      1     1      0
                       _CANisTxReady
                     _CANsendMessage
                    _can_interpreter
                     _configurazione
                           _delay_ms
                       _park_routine
                        _park_search
 ---------------------------------------------------------------------------------
 (1) _park_search                                          2     2      0   95960
                                             43 BANK1      2     2      0
                       _CANisTxReady
                     _CANsendMessage
                           ___xxtofl
                                _abs
                          _parallelo
 ---------------------------------------------------------------------------------
 (1) _park_routine                                        12    12      0  247539
                                             77 BANK1     12    12      0
                       _CANisTxReady
                     _CANsendMessage
                            ___fladd
                            ___flneg
                            ___fltol
                           ___xxtofl
                           _can_send
                           _delay_ms
                            _delay_s
                         _matematica
                          _parallelo
 ---------------------------------------------------------------------------------
 (2) _parallelo                                            2     2      0   86739
                                             41 BANK1      2     2      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _abs
                               _asin
                           _can_send
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _can_send                                             0     0      0    8405
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (4) _CANsendMessage                                      16     8      8    8153
                                             23 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (4) _CANisTxReady                                         1     1      0      37
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     247
                                             23 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _matematica                                          32    32      0  133218
                                             49 BANK1     28    28      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                               _asin
                                _cos
 ---------------------------------------------------------------------------------
 (3) _cos                                                 12     8      4   57965
                                             41 BANK1      8     4      4
                            ___fladd
                             ___flge
                               _asin (ARG)
                                _sin
 ---------------------------------------------------------------------------------
 (4) _sin                                                 17    13      4   49794
                                             18 BANK1     17    13      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                          _eval_poly
                              _floor
 ---------------------------------------------------------------------------------
 (5) _floor                                               10     6      4   10191
                                              0 BANK1     10     6      4
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (6) _frexp                                                8     2      6     452
                                             23 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     784
                                            107 BANK0     14    10      4
                            ___fltol (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     722
                                             97 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    6777
                                             10 BANK1      8     0      8
                            ___fladd
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (3) _asin                                                36    32      4   57438
                                            117 BANK0      4     0      4
                                             21 BANK1     20    20      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                               _atan
                               _fabs
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _sqrt                                                29    25      4    1467
                                             97 BANK0      8     4      4
                                              0 BANK1     21    21      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (4) _atan                                                21    17      4   34323
                                            113 BANK0      4     0      4
                                              0 BANK1     17    17      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                          _eval_poly
                               _fabs
 ---------------------------------------------------------------------------------
 (4) _fabs                                                 4     0      4    1621
                                             97 BANK0      4     0      4
                            ___flneg
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4    1297
                                             93 BANK0      4     0      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           16     8      8   13009
                                             93 BANK0     16     8      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    5541
                                             48 BANK0     25    17      8
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    6290
                                             73 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1498
                                            101 BANK0     12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4347
                                             23 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (2) _delay_s                                              2     2      0     947
                                             31 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             2     0      2     879
                                             29 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     386
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _configurazione                                       0     0      0    6204
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    6204
                                             37 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      4     4      0       0
                                             23 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_Bassa                                           23    23      0    4525
                                             16 COMRAM    23    23      0
                  _CANreceiveMessage
                     i1_CANisTxReady
                   i1_CANsendMessage
 ---------------------------------------------------------------------------------
 (8) i1_CANsendMessage                                    16     8      8    3197
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (8) i1_CANisTxReady                                       1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_Alta                                            16    16      0     395
                                              7 BANK0     16    16      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (10) ___lwdiv                                             7     3      4     395
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisTxReady
   _CANsendMessage
   _can_interpreter
   _configurazione
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _delay_ms
     ___wmul
   _park_routine
     _CANisTxReady
     _CANsendMessage
     ___fladd
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
     ___flneg
       ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___flneg (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
     ___xxtofl
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       _abs (ARG)
     _can_send
       _CANisTxReady
       _CANsendMessage
     _delay_ms
       ___wmul
     _delay_s
       _delay_ms
         ___wmul
     _matematica
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flmul
         ___fldiv (ARG)
       ___flneg
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _cos
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _asin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _atan
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___flmul
               ___fldiv (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _eval_poly
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _fabs
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           _sqrt
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _sin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flsub
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _floor (ARG)
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___flge
                 _fabs (ARG)
                   ___flneg
                     ___fladd (ARG)
                       ___fldiv (ARG)
                       ___flmul (ARG)
                         ___fldiv (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
               ___xxtofl
                 ___fltol (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___flneg (ARG)
                     ___fladd (ARG)
                       ___fldiv (ARG)
                       ___flmul (ARG)
                         ___fldiv (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                 _abs (ARG)
               _frexp
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _floor
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___flneg (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___xxtofl
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
               _abs (ARG)
             _frexp
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___flmul
         ___fldiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _abs (ARG)
       _abs
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
   _park_search
     _CANisTxReady
     _CANsendMessage
     ___xxtofl
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       _abs (ARG)
     _abs
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___flmul
         ___fldiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _abs (ARG)
       _abs
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)

 _ISR_Bassa (ROOT)
   _CANreceiveMessage
   i1_CANisTxReady
   i1_CANsendMessage

 _ISR_Alta (ROOT)
   ___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     59      EC       7       92.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7A      89       5       85.6%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     27      55       1       90.4%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1CA      20        0.0%
DATA                 0      0     1CA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue May 24 19:37:51 2016

                ___fldiv@aexp 008F                  ___fldiv@bexp 008E                             _n 0138  
                           _x 00DA                             _z 0015          __end_of_CANSetFilter 1858  
                ___fldiv@sign 0083            delay_s@repeat_loop 0080                            bsr 000FE0  
         ___wmul@multiplicand 0079                   __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                 __CFG_OSC$HS 000000                    _MUX_select 0100                           l402 1F30  
                         l403 1F34                           l500 15B4                           l404 1F40  
                         l501 15B8                           l510 16C4                           l502 15C4  
                         l511 16D0                           l503 15C8                           l520 17DC  
                         l512 16D4                           l504 15D4                           l440 48A8  
                         l432 4868                           l521 17E0                           l513 16E0  
                         l433 486C                           l522 17EC                           l514 16E4  
                         l450 49B4                           l434 4878                           l370 1918  
                         l523 17F0                           l515 16F0                           l507 16B0  
                         l451 49C0                           l443 4980                           l435 487C  
                         l363 1ADC                           l524 17FC                           l508 16B4  
                         l444 4984                           l436 4888                           l380 1AF6  
                         l364 186E                           l525 1800                           l509 16C0  
                         l445 4990                           l437 488C                           l381 1BEE  
                         l373 1A28                           l365 1872                           l526 180C  
                         l518 17CC                           l470 1276                           l446 4994  
                         l438 4898                           l358 5796                           l390 1CBC  
                         l382 1B7E                           l374 1A2C                           l366 196A  
                         l519 17D0                           l471 1282                           l463 1242  
                         l447 49A0                           l439 489C                           l359 57A0  
                         l383 1B88                           l375 1A38                           l367 18FA  
                         l480 138C                           l464 1246                           l448 49A4  
                         l384 1B92                           l368 1904                           l481 1390  
                         l465 1252                           l449 49B0                           l393 1D76  
                         l385 1B9C                           l369 190E                           l490 149C  
                         l482 139C                           l474 135C                           l466 1256  
                         l394 1D7A                           l378 1D60                           l491 14A8  
                         l475 1360                           l467 1262                           l395 1E72  
                         l379 1AF2                           l492 14AC                           l476 136C  
                         l468 1266                           l556 66D8                           l396 1E02  
                         l388 1CAC                           l493 14B8                           l485 1478  
                         l477 1370                           l469 1272                           l397 1E0C  
                         l389 1CB0                           l486 147C                           l478 137C  
                         l398 1E16                           l822 52A8                           l487 1488  
                         l479 1380                           l399 1E20                           l743 5A56  
                         l496 1594                           l488 148C                           l497 1598  
                         l489 1498                           l569 65E6                           l745 5904  
                         l498 15A4                           l499 15A8                           l828 526A  
                         l756 5A52                           l792 3E00                           l776 3AFA  
                         l785 3B64                           l786 3CE4                           l779 3B38  
                         l892 6684                           l789 3D78                  __CFG_CPB$OFF 000000  
                __CFG_CPD$OFF 000000                           _abs 6662                           _asd 02A1  
                         _dir 02A3                           _cos 606C                           _jjj 0130  
                         _kkk 0134                           _msg 0144                           _sin 4A0C  
                         prod 000FF3                           wreg 000FE8                  ___flmul@aexp 009D  
                ___flmul@bexp 00A2               ?_configurazione 002D                  ___flmul@sign 009C  
                ___flmul@temp 00A7                  ___flmul@prod 00A3                  __CFG_LVP$OFF 000000  
                ___fltol@exp1 00CA                  __CFG_WDT$OFF 000000                          ?_abs 0077  
                        l1410 4484                          l1092 65A8                          l1407 44DC  
                        l1351 32EA                          l1335 4D12                          l1416 4514  
                        l1352 32DE                          l1504 5E36                          l1353 32AA  
                        l1418 4582                          l1099 5BA0                          l1444 3902  
                        l1437 3666                          l1454 3A14                          l1446 3970  
                        l1368 345E                          l1377 34F2                          l1493 565E  
                        l1494 5676                          l1486 5602                          l1479 5556  
                        ?_cos 01B4                          l5310 48F2                          l5304 48AC  
                        l5414 103C                          l5262 4726                          l5512 13A0  
                        l5432 10F6                          l5360 0E10                          l5336 49C4  
                        l7104 5BEC                          l7112 661A                          l8000 528C  
                        l5450 11B0                          l7122 5F86                          l5620 173A  
                        l7044 3916                          l5614 16F4                          l5518 13E6  
                        l5278 47DC                          l7310 4528                          l7230 42F0  
                        l7070 39FA                          l7054 396A                          l7038 38EC  
                        l7150 6034                          l7142 6008                          l5552 1502  
                        l7320 457C                          l7304 44FE                          l7224 42CC  
                        l7080 3A3E                          l7064 39C0                          l7152 603E  
                        l7208 631E                          l8104 58B6                          l8112 5900  
                        l5546 14BC                          l5378 0EC8                          l7330 45D2  
                        l7250 434E                          l7234 42FA                          l7090 5AAE  
                        l7138 5FF4                          l5580 15D8                          l5484 12CC  
                        l5396 0F82                          l7244 432A                          l7068 39E6  
                        l7156 605A                          l7148 6024                          l7172 558E  
                        l8124 597E                          l8116 5962                          l5478 1286  
                        l7334 4600                          l7254 4358                          l7094 5AFC  
                        l7078 3A34                          l7174 5596                          l7166 5566  
                        l8302 3E8E                          l5648 1810                          l7344 4646  
                        l7336 4614                          l7184 5640                          l7176 55A6  
                        l7600 1F24                          l7504 1BA6                          l8128 59B6  
                        l5586 161E                          l7346 464A                          l7338 4636  
                        l7274 43DA                          l7266 43AC                          l7098 5B4E  
                        l6802 31EE                          l7370 5F42                          l7186 5650  
                        l7178 55E4                          l7530 1CC0                          l8146 5A14  
                        l7292 4490                          l7284 4458                          l7700 4102  
                        l7524 1CA0                          l7428 1922                          l8308 3ED6  
                        l8164 3A74                          l6902 34A6                          l7702 413C  
                        l7198 56C8                          l7390 5D9A                          l7382 5D64  
                        l7606 1F44                          l7454 1A3C                          l8174 3AB8  
                        l6912 34C6                          l6832 322A                          l6760 3128  
                        l7368 5E9E                          l7720 4258                          l7448 1A1C  
                        l8096 58A2                          l7298 44D8                          l6922 34EC  
                        l6906 34B2                          l6914 34CC                          l6850 32CE  
                        l6770 3156                          l7386 5D78                          l8290 3E56  
                        l8178 3AF0                          l7812 6704                          l6940 357C  
                        l6932 3548                          l6860 330E                          l6844 32BE  
                        l7708 4178                          l7644 3F02                          l7580 1E2A  
                        l8292 3E62                          l6870 3352                          l6846 32C4  
                        l6790 31BA                          l6766 314C                          l7902 60F4  
                        l8198 3B5C                          l7816 65D8                          l6952 35A0  
                        l6944 3588                          l6936 355A                          l6784 3196  
                        l7752 537A                          l7728 428E                          l7664 3F80  
                        l7656 3F4E                          l6946 358C                          l6874 335C  
                        l6794 31C4                          l6778 3182                          l6970 35FA  
                        l6962 35D0                          l7658 3F60                          l7842 5C78  
                        l6868 334C                          l6980 362A                          l6972 360C  
                        l7764 54CE                          l7748 5306                          l7684 3FF2  
                        l7676 3FC2                          l7780 4A42                          l7828 5BF4  
                        l8716 6280                          l8724 62E6                          ?_sin 019D  
                        l6878 336E                          l7694 4074                          l7862 4D82  
                        l7838 5C40                          l8718 628E                          l7952 57AC  
                        l6896 3490                          l6888 343E                          l6992 367A  
                        l6968 35F4                          l7768 54E6                          l7696 407C  
                        l7792 4B6C                          l7848 5CB8                          l7954 57F0  
                        l7946 578E                          l7962 669A                          l6986 364E  
                        l7874 4EB0                          l7948 57A4                          l6996 368E  
                        l6988 3654                          l7796 4BE2                          l7966 66AC  
                        l7886 4F92                          l7992 5234                          l7998 5286  
                        _LATA 000F89                          _LATB 000F8A                          _LATC 000F8B  
                        u6120 46A2                          u6125 4696                          u6135 4702  
                        u6400 0E44                          u6160 4758                          u7050 1830  
                        u6330 49E4                          u6250 48CC                          u6405 0E38  
                        u6165 474C                          u7055 1824                          u6415 0EA4  
                        u6335 49D8                          u6255 48C0                          u6175 47B8  
                        u6520 1072                          u6440 0EFE                          u6360 0D8C  
                        u6525 1066                          u6445 0EF2                          u6365 0D80  
                        u6535 10D2                          u6455 0F5E                          u6375 0DEC  
                        u6560 112C                          u6480 0FB8                          u6810 14DC  
                        u6730 13C0                          u6650 12A6                          u6565 1120  
                        u6485 0FAC                          u6815 14D0                          u6735 13B4  
                        u6655 129A                          u6575 118C                          u6495 1018  
                        u9160 39D4                          u9080 388E                          u8700 3274  
                        u9260 5FA6                          u9085 3882                          u8710 328C  
                        u9430 6350                          u8720 328E                          u9265 5F9A  
                        u6970 1714                          u6890 15F8                          u9438 6354  
                        u9710 5D88                          u6975 1708                          u6895 15EC  
                        u9640 45E6                          u9810 1942                          u9820 198E  
                        u9815 1936                          u9825 1982                          u9835 19EE  
                        u9940 1BC6                          u9950 1C12                          u9945 1BBA  
                        u9955 1C06                          u9965 1C72      __end_ofi1_CANsendMessage 2674  
         __size_of_CANSetMask 039E                          abs@a 0077                          _alfa 0124  
                        _fabs 657C                          _data 0153                          _beta 0128  
                        _atan 52BA                          _asin 4D24                          _main 6230  
                        _asus 002A                          cos@f 01B4                          fsr0h 000FEA  
                        fsr1h 000FE2                          fsr0l 000FE9                          fsr2h 000FDA  
                        indf1 000FE7                          fsr1l 000FE1                          indf2 000FDF  
                        fsr2l 000FD9                          btemp 0056                          _sqrt 3EE4  
                        pclat 000FFA                          sin@f 019D                          sin@y 01A1  
                        prodh 000FF4                          prodl 000FF3                          start 0312  
               __CFG_IESO$OFF 000000               ___fldiv@new_exp 0088                delay_s@value_s 007F  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000              _CANOperationMode 66FC  
                       ??_abs 0079                         ??_cos 00D9                         ??_sin 00D9  
  __size_of_CANreceiveMessage 050C                         ?_fabs 00C1                 ___fltol@sign1 00C9  
                       ?_atan 00D1                         ?_asin 00D5               __end_of___fladd 35B2  
                       ?_main 002D               __end_of___fldiv 466E               __end_of___flneg 662C  
             __end_of___flmul 3A58               __end_of___flsub 657C               __end_of___fltol 606C  
                       ?_sqrt 00C1                         u10070 1E4A                         u10080 1E96  
                       u10075 1E3E                         u10340 4B66                         u10085 1E8A  
                       u10270 5336                         u10350 4B68                         u10095 1EF6  
                       u10280 5338                         u10600 5284                         _T0CON 000FD5  
                       u10551 50C8                         u10720 59C6                         u10640 58B2  
                       u10561 50D4                         u10920 3E36                         u11650 62A0  
                       u10780 3A8A                         u11656 62A2                         _T3CON 000FB1  
                       u10786 3A8C                         u11677 65DA            __size_of_ISR_Bassa 02FA  
             __end_of___lwdiv 6404                         i1l410 2E96                         i1l402 25D0  
                       i1l403 25D4                         i1l404 25DE                         i1l370 2082  
                       i1l363 2214                         i1l380 222C                         i1l364 1FF8  
                       i1l381 22FC                         i1l373 2170                         i1l365 1FFC  
                       i1l390 23AE                         i1l382 229A                         i1l374 2174  
                       i1l366 20CC                         i1l383 22A2                         i1l375 217E  
                       i1l367 206A                         i1l384 22AA                         i1l368 2072  
                       i1l393 2458                         i1l385 22B2                         i1l369 207A  
                       i1l721 0246                         i1l394 245C                         i1l378 2444  
                       i1l714 0158                         i1l706 008C                         i1l395 252C  
                       i1l379 2228                         i1l556 66F8                         i1l396 24CA  
                       i1l388 23A0                         i1l724 02C6                         i1l397 24D2  
                       i1l389 23A4                         i1l398 24DA                         i1l399 24E2  
                       i1l728 02CA                         i2l700 6192                         _TMR0H 000FD7  
                       _TMR0L 000FD6                         _TMR3H 000FB3                         _TMR3L 000FB2  
                       _PORTA 000F80                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISC 000F94            __end_ofsin@coeff_a 0D41            __end_ofsin@coeff_b 0D51  
               __CFG_PWRT$OFF 000000              __end_of_ISR_Alta 6230               __end_of_delay_s 66BA  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000            CANInitialize@flags 0089                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000                         _bordo 012C  
                       fabs@d 00C1                         _first 02A9                         _floor 5D24  
                       _frexp 62F8                         _errno 00E4                         atan@f 00D1  
                       atan@x 018F                         atan@y 018B                         asin@x 00D5  
                       asin@y 01AC      can_send@data_correction1 0087                __pbitbssCOMRAM 02A0  
                       sin@x2 01A9                         tablat 000FF5          __end_of_CANisTxReady 66DE  
                       plusw2 000FDB                         sqrt@a 00C1                         sqrt@i 018C  
                       sqrt@p 0191                         status 000FD8                  ?_park_search 002D  
             __initialization 6404                  __end_of_fabs 65BA                  __end_of_atan 550C  
                __end_of_asin 5036                  __end_of_main 62F8                  __end_of_sqrt 42AE  
                      ??_fabs 00C5                        ??_atan 00D5                        ??_asin 00D9  
                      ??_main 00D9             _park_routine$3744 01DC             _park_routine$3745 01E0  
                      ??_sqrt 00C5                 __activetblptr 000003             _CANisTxReady$2845 0077  
                      _ADCON1 000FC1                        ?_floor 018B                        ?_frexp 0077  
                      _CANCON 000F6F            _distance_received1 02A6               __CFG_BBSIZ$1024 000000  
           _spazio_parcheggio 00E6                 _avvicinamento 02A2                        i1l6010 309C  
                      i1l6002 3064                        i1l6020 3106                        i1l6014 30B8  
                      i1l6006 3080                        i1l6018 30D4                        i2l1299 63FA  
                      i1l5940 2DE6                        i1l5932 2D76                        i1l5952 2E40  
                      i1l5944 2E04                        i1l8520 24EA                        i1l8600 00C8  
                      i1l5956 2E5E                        i1l5948 2E22                        i1l8540 25C6  
                      i1l8444 22BA                        i1l8612 012A                        i1l5958 2E90  
                      i1l8470 23B2                        i1l8614 014A                        i1l8464 2396  
                      i1l8368 208A                        i1l8608 00F8                        i1l5994 2FF6  
                      i1l8546 25E2                        i1l8394 2182                        i1l8388 2166  
                      i1l8644 018C                        i1l8670 0222                        i1l8648 0194  
                      i1l8684 0280                        i1l8676 0250                        i1l8694 02B0  
                      i2l8320 63AA                        i1l8688 0288                        i2l8322 63B6  
                      i2l8332 63EC                        i2l8324 63BC                        i2l8582 61F2  
                      _RXB0D0 000F66                        _RXB0D1 000F67                        _RXB0D2 000F68  
                      _RXB0D3 000F69                        _RXB0D4 000F6A                        _RXB1D0 000F56  
                      _RXB0D5 000F6B                        _RXB1D1 000F57                        _RXB0D6 000F6C  
                      _RXB1D2 000F58                        _RXB0D7 000F6D                        _RXB1D3 000F59  
                      _RXB1D4 000F5A                        _RXB1D5 000F5B                        _RXB1D6 000F5C  
                      _RXB1D7 000F5D                        _TXB0D0 000F46                        _TXB0D1 000F47  
                      _TXB0D2 000F48                        _TXB0D3 000F49                        _TXB1D0 000F36  
                      _TXB0D4 000F4A                        _TXB1D1 000F37                        _TXB0D5 000F4B  
                      _TXB1D2 000F38                        _TXB0D6 000F4C                        _TXB1D3 000F39  
                      _TXB0D7 000F4D                        _TXB2D0 000F26                        _TXB1D4 000F3A  
                      _TXB2D1 000F27                        _TXB1D5 000F3B                        _TXB2D2 000F28  
                      _TXB1D6 000F3C                        _TXB2D3 000F29                        _TXB1D7 000F3D  
                      _TXB2D4 000F2A                        _TXB2D5 000F2B                        _TXB2D6 000F2C  
                      _TXB2D7 000F2D            CANsendMessage@data 007B              __end_of_can_send 5D24  
          CANsendMessage@tamp 0083              __end_of___xxtofl 56DA             __end_of_ISR_Bassa 0312  
            __end_of_delay_ms 65F4         __size_of_CANSetFilter 0B06                __CFG_XINST$OFF 000000  
                      ___flge 5A60               _data_correction 0163                     ??___fladd 00B1  
                      ___wmul 662C                     ??___fldiv 007F                     ??___flneg 00C1  
              __CFG_STVREN$ON 000000                     ??___flmul 0098                     ??___flsub 00D9  
                   ??___fltol 00C5                     ??___lwdiv 0064                  ??_CANSetMask 007C  
                      _gianni 002B                        _raggio 01E8                        clear_0 640A  
                      clear_1 6416                        clear_2 6426                     ??_delay_s 007F  
                      floor@i 018F                        floor@x 018B               __CFG_BOREN$BOHW 000000  
     __size_ofi1_CANisTxReady 001E                        sin@sgn 01AD                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                _CANSetFilter 0D52                    ___flge@ff1 00C5                    ___flge@ff2 00C9  
                ___xxtofl@arg 00D5                  ___xxtofl@exp 00D4                  ___xxtofl@val 00CB  
                  __accesstop 0060       __end_of__initialization 646A            __end_of_CANSetMask 4A0C  
             __CFG_PBADEN$OFF 000000                    ___flneg@f1 00BD                 ?_park_routine 002D  
                eval_poly@res 00C9                 ___rparam_used 000000                    ___fltol@f1 00C1  
              __pcstackCOMRAM 002D                     ?_ISR_Alta 002D                  __pidataBANK0 671A  
                __pidataBANK1 6712                 __end_of_floor 5E48                 __end_of_frexp 638C  
            ??_configurazione 0091         CANSetFilter@numBuffer 0080                  _actual_speed 00DE  
       __size_of_CANisTxReady 0024                       ??_floor 00D9                       ??_frexp 007D  
    __end_of_CANOperationMode 6712                    __pbssBANK0 00DA                    __pbssBANK1 0100  
             _sensor_distance 0001            __size_of_eval_poly 0118             ?i1_CANsendMessage 002D  
                  _data_brake 015B                ??_park_routine 01D8                 ISR_Bassa@gigi 0052  
     __size_of_CANsendMessage 078C                    _data_speed 016B                    _activation 02A0  
          ??i1_CANsendMessage 0035      __size_of_can_interpreter 0054            __size_of_parallelo 0284  
        __size_of_park_search 01C0             _old_alignment_gap 013C                    ??_ISR_Alta 0067  
                     ?___flge 00C5                       ?___wmul 0077                       _CANSTAT 000F6E  
                _CANisTxReady 66BA                       _BRGCON1 000F70                       _BRGCON2 000F71  
                     _BRGCON3 000F72                     ?_can_send 002D                     ?___xxtofl 00CB  
      __size_of_CANInitialize 01C6                     ?_delay_ms 007D                       _RXB0DLC 000F65  
                     _RXB1DLC 000F55                       _RXB0CON 000F60                       _RXB1CON 000F50  
                     _TXB0DLC 000F45                       _TXB1DLC 000F35                       _TXB2DLC 000F25  
         CANsendMessage@flags 007E                       __Hparam 0000                    _left_speed 001F  
                     __Lparam 0000              delay_ms@value_ms 007D                       _Pminimo 0120  
             __size_of___flge 0190                    _matematica 2674                       ___fladd 310A  
                     ___fldiv 42AE                       ___flneg 65F4                       ___flmul 35B2  
                     ___flsub 6534                       ___fltol 5F60               __size_of___wmul 0036  
                     ___lwdiv 638C                  __psmallconst 0D00          CANInitialize@propSeg 008E  
                     __pcinit 6404             __end_of_eval_poly 5F60                       _delay_s 668E  
                     __ramtop 0D00                       __ptext0 6230                       __ptext1 58A0  
                     __ptext2 3A58                       __ptext3 5036                       __ptext4 5BF0  
                     __ptext5 1858                       __ptext6 66BA                       __ptext7 6662  
                     __ptext8 2674                       __ptext9 606C                     _T0CONbits 000FD5  
              i1_CANisTxReady 66DE                    ??_can_send 0087                  __size_of_abs 002C  
                __size_of_cos 00E4               atan@val_squared 0194                  __size_of_sin 0318  
                  ??___xxtofl 00CF                       atan@val 0198             __end_of_parallelo 52BA  
                  ??_delay_ms 007F                       asin@sgn 01A0        CANreceiveMessage@error 0037  
             _start_operation 02AE                __pintcode_body 6150          end_of_initialization 646A  
                   i1u1110_20 20EE                     i1u1110_25 20E4                     i1u1111_25 213A  
                   i1u1122_20 22D8                     i1u1122_25 22CE                     i1u1123_20 231E  
                   i1u1123_25 2314                     i1u1124_25 236A                     i1u1109_20 20A8  
                   i1u1109_25 209E                     i1u1150_24 013A                     i1u1150_25 0136  
                   i1u1135_20 2508                     i1u1135_25 24FE                     i1u1136_20 254E  
                   i1u1136_25 2544                     i1u1145_24 00BC                     i1u1137_25 259A  
                   i1u1145_25 00B8                       int_func 6150                     i1u1168_27 017A  
               _CANInitialize 56DA                     _ISR_Bassa 0018                       postdec1 000FE5  
                     postdec2 000FDD                       postinc0 000FEE                       postinc2 000FDE  
                     sqrt@grs 0192                       sqrt@exp 0196             ??_can_interpreter 0077  
      __end_ofi1_CANisTxReady 66FC       _steering_correction_dir 02AF                     _PORTBbits 000F81  
              CANSetMask@mask 0077                CANSetMask@tamp 0081                  _distance_set 0110  
              CANSetMask@type 007B          __end_of_park_routine 3EE4                   ___fladd@grs 00BC  
               ___xxtofl@sign 00D3                     _TRISBbits 000F93                   ___fldiv@grs 008A  
                 ___fldiv@rem 0084                     _MUX_index 0029                    _pulse_time 0021  
     _clock_counter_reference 00E0                   ___flmul@grs 009E                _CANsendMessage 1858  
            CANInitialize@BRP 0088              CANInitialize@SJW 0087                ?_CANInitialize 0085  
         i1_CANisTxReady$2845 002D                    ?_ISR_Bassa 002D                   ?_matematica 002D  
              __end_of___flge 5BF0             __size_of_ISR_Alta 6228                __end_of___wmul 6662  
             ?i1_CANisTxReady 002D                    floor@expon 0193           start_initialization 6404  
                  eval_poly@d 00C1                    eval_poly@n 00C3                    eval_poly@x 00BD  
                 __end_of_abs 668E                   __end_of_cos 6150                   __end_of_sin 4D24  
         CANSetMask@numBuffer 0080                 _data_speed_rx 0108        __end_of_CANsendMessage 1FE4  
           ?_CANOperationMode 002D                 _data_steering 0173                    frexp@value 0077  
          ??_CANOperationMode 0077             _distance_received 02A5    CANInitialize@FilterConfig1 008F  
  CANInitialize@FilterConfig2 0090           _steering_correction 002C                      ??___flge 00CD  
                    ??___wmul 007B                   __pdataBANK0 00E6                   __pdataBANK1 01E4  
            __CFG_LPT1OSC$OFF 000000     __size_ofi1_CANsendMessage 0690                     ___fladd@a 00AD  
                   ___fladd@b 00A9        CANInitialize@phaseSeg1 0085        CANInitialize@phaseSeg2 0086  
                   ___fldiv@a 007B                     ___fldiv@b 0077                     ___flmul@a 0094  
                   ___flmul@b 0090                   __pbssCOMRAM 0001                     ___flsub@a 0199  
                   ___flsub@b 0195                 __pcstackBANK0 0060                 __pcstackBANK1 018B  
                 _BRGCON2bits 000F71                   _BRGCON3bits 000F72             __size_of_can_send 0134  
           __size_of___xxtofl 01CE             __size_of_delay_ms 003A               ?_CANsendMessage 0077  
         __size_of_matematica 058A               ??_CANInitialize 008A                     _asin$3753 01B0  
                   _asin$3754 01A8                     _asin$3755 01A4                    sin@coeff_a 0D2D  
                  sin@coeff_b 0D41                 ??_park_search 01B6                 _alignment_gap 0011  
          CANSetFilter@filter 0077                     _data_test 017B              ___lwdiv@dividend 0060  
                  ISR_Bassa@i 0053                   ??_ISR_Bassa 003D                     __pintcode 0008  
                    ?___fladd 00A9                      ?___fldiv 0077                      ?___flneg 00BD  
                    ?___flmul 0090                      ?___flsub 0195                      ?___fltol 00C1  
       __size_of_park_routine 048C                      ?___lwdiv 0060                   __pintcodelo 0018  
                    ?_delay_s 002D                     _emergency 02A8                   __smallconst 0D00  
                 _COMSTATbits 000F74                     _eval_poly 5E48                     _larghezza 01E4  
            ___lwdiv@quotient 0065                __size_of_floor 0124                __size_of_frexp 0094  
     __size_of_configurazione 006C                     _parallelo 5036                  _new_distance 02AA  
       CANreceiveMessage@tamp 0038                _prima_sterzata 0140                ___wmul@product 007B  
                    _LATBbits 000F8A               _can_interpreter 64E0                     atan@recip 0193  
                _park_routine 3A58  _delay_quartz_frequency_value 00E8                      _IPR3bits 000FA5  
                    _PIE3bits 000FA3                      i1u734_20 2CB6                      i1u734_26 2CB8  
                    i1u735_20 2CE4                      i1u743_25 2E6A                      i1u735_26 2CE6  
                    i1u745_20 2F3E                      i1u737_25 2CFA                      i1u745_26 2F40  
                    i1u746_20 2F68                      i1u754_25 30E0                      i1u746_26 2F6A  
                    i1u748_25 2F7C                      _PIR3bits 000FA4                      _RXB0EIDH 000F63  
                    _RXB0EIDL 000F64                      _RXB1EIDH 000F53                      _RXB1EIDL 000F54  
                    _ISR_Alta 0008                     _set_speed 0025                      _RCONbits 000FD0  
            __CFG_WDTPS$32768 000000                      _RXB0SIDH 000F61                      _RXB0SIDL 000F62  
                    _RXF0EIDH 000F02                      _RXB1SIDH 000F51                      _RXF0EIDL 000F03  
                    _RXB1SIDL 000F52                      _RXF1EIDH 000F06                      _RXF1EIDL 000F07  
                    _RXF2EIDH 000F0A                      _RXF2EIDL 000F0B                      _RXF3EIDH 000F0E  
                    _RXF3EIDL 000F0F                      _RXF4EIDH 000F12                      _RXF4EIDL 000F13  
                    _RXF5EIDH 000F16                      _RXF5EIDL 000F17                      _RXF0SIDH 000F00  
                    _RXF0SIDL 000F01           __end_of_park_search 5A60                      _TXB0EIDH 000F43  
                    _RXF1SIDH 000F04                      _TXB0EIDL 000F44                      _RXF1SIDL 000F05  
                    _TXB1EIDH 000F33                      _RXF2SIDH 000F08                      _TXB1EIDL 000F34  
                    _RXF2SIDL 000F09                      _TXB2EIDH 000F23                      _RXF3SIDH 000F0C  
                    _TXB2EIDL 000F24                      _RXF3SIDL 000F0D                      _RXF4SIDH 000F10  
                    _RXF4SIDL 000F11                      _RXF5SIDH 000F14                      _RXF5SIDL 000F15  
                    _RXM0EIDH 000F1A                      _RXM0EIDL 000F1B                      _TXB0SIDH 000F41  
                    _RXM1EIDH 000F1E                      _TXB0SIDL 000F42                      _RXM1EIDL 000F1F  
                    _TXB1SIDH 000F31                      _TXB1SIDL 000F32                      _TXB2SIDH 000F21  
                    _TXB2SIDL 000F22                      _RXM0SIDH 000F18                      _RXM0SIDL 000F19  
                    _RXM1SIDH 000F1C                      _RXM1SIDL 000F1D                   _distance_dx 001B  
                 _distance_sx 001D                      _RXERRCNT 000F75                      _TXERRCNT 000F76  
           ___wmul@multiplier 0077                    ?_eval_poly 00BD           __end_ofatan@coeff_a 0D19  
         __end_ofatan@coeff_b 0D2D                 ?_CANSetFilter 0077                   _INTCON2bits 000FF1  
                   copy_data0 6440                    _CANCONbits 000F6F                    ?_parallelo 002D  
            _distance_average 0019                     frexp@eptr 007B                      __Hparam0 0000  
                    __Lparam0 0000                  _RXB0SIDLbits 000F62                  _RXB1SIDLbits 000F52  
            ??i1_CANisTxReady 002D                  ??_matematica 00D9                 _request_sent1 02AD  
            __size_of___fladd 04A8                    _CANSetMask 466E              __size_of___fldiv 03C0  
            __size_of___flneg 0038              __size_of___flmul 04A6              __size_of___flsub 0048  
            __size_of___fltol 010C              i1_CANsendMessage 1FE4                      _cos$3756 01B8  
            __size_of___lwdiv 0078              __size_of_delay_s 002C                      _can_send 5BF0  
                    ___xxtofl 550C                  _RXF0SIDLbits 000F01                      _delay_ms 65BA  
             ___lwdiv@divisor 0062                  _RXF1SIDLbits 000F05               ___lwdiv@counter 0064  
       i1CANsendMessage@flags 0034                ??_CANSetFilter 007C                      __ptext10 4A0C  
                    __ptext11 5D24                      __ptext20 65F4                      __ptext12 62F8  
                    __ptext21 5E48                      __ptext13 550C                      __ptext30 56DA  
                    __ptext22 35B2                      __ptext14 5F60                      __ptext31 466E  
                    __ptext23 310A                      __ptext15 6534                      __ptext40 638C  
                    __ptext32 0D52                      __ptext24 5A60                      __ptext16 4D24  
                    __ptext33 66FC                      __ptext25 42AE                      __ptext17 3EE4  
                    __ptext34 64E0                      __ptext26 668E                      __ptext18 52BA  
                    __ptext27 65BA                      __ptext19 657C                      __ptext36 1FE4  
                    __ptext28 662C                      __ptext37 66DE                      __ptext29 6474  
                    __ptext38 2BFE                  _RXF2SIDLbits 000F09                      _sin$3757 01A5  
     __end_of_can_interpreter 6534                  _RXF3SIDLbits 000F0D                      _distance 00E2  
          __end_of_matematica 2BFE                  _RXF4SIDLbits 000F11                  _RXF5SIDLbits 000F15  
    CANsendMessage@dataLength 007D                 __size_of_fabs 003E                 __size_of_atan 0252  
               __size_of_asin 0312                 __size_of_main 00C8                 __size_of_sqrt 03CA  
                 _park_search 58A0          CANreceiveMessage@msg 002D                  _TXB0SIDLbits 000F42  
                _TXB1SIDLbits 000F32                  _TXB2SIDLbits 000F22                      int$flags 0056  
   __size_of_CANOperationMode 0016                 ?_CANisTxReady 002D                   atan@coeff_a 0D01  
                 atan@coeff_b 0D19                   _RXB0DLCbits 000F65                   _RXB1DLCbits 000F55  
                _RXM0SIDLbits 000F19                   _RXB0CONbits 000F60                   _RXB1CONbits 000F50  
           _CANreceiveMessage 2BFE                  _RXM1SIDLbits 000F1D                    _INTCONbits 000FF2  
                 ??_eval_poly 00C5              ??_CANsendMessage 007F    i1CANsendMessage@dataLength 0033  
          ?_CANreceiveMessage 002D                  _request_sent 02AC                     sqrt@tfrac 018D  
              _configurazione 6474      CANsendMessage@identifier 0077                   ??_parallelo 01B4  
                    intlevel1 0000                      intlevel2 0000              CANSetFilter@tamp 0081  
            CANSetFilter@type 007B           ??_CANreceiveMessage 002F          i1CANsendMessage@data 0031  
         _old_data_correction 02AB          i1CANsendMessage@tamp 0039                   _TXB0DLCbits 000F45  
                 _right_speed 0023                   _TXB1DLCbits 000F35                   _TXB0CONbits 000F40  
                 _TXB2DLCbits 000F25                   _TXB1CONbits 000F30                   _TXB2CONbits 000F20  
        CANOperationMode@mode 0077                   ?_CANSetMask 0077                ??_CANisTxReady 0077  
              _distance_error 02A4               _matematica$3750 01D4               _matematica$3751 01CC  
             _matematica$3752 01D0               _matematica$3746 01BC               _matematica$3747 01C0  
             _matematica$3748 01C4               _matematica$3749 01C8     __end_of_CANreceiveMessage 310A  
                    sqrt@frac 019C                      sqrt@sign 018B                      sqrt@root 0198  
  i1CANsendMessage@identifier 002D                   _timerValue2 0027        __end_of_configurazione 64E0  
               ___fladd@signs 00B9                 _distance_wait 02A7              ?_can_interpreter 002D  
                ___fladd@aexp 00BA                  ___fladd@bexp 00BB         __end_of_CANInitialize 58A0  
       _sensor_distance_short 0183           _sensor_distance_old 0118  
